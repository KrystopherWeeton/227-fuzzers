; ModuleID = '../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_cc_functions.c'
source_filename = "../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_cc_functions.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sctp_tcb = type { %struct.socket*, %struct.sctp_inpcb*, %struct.anon.37, %struct.anon.38, %struct.anon.39, %struct.anon.40, %struct.sctp_block_entry*, %struct.sctp_association, i32, i32, i32, i32, i16, i16, %union.pthread_mutex_t, %union.pthread_mutex_t }
%struct.socket = type { i32, i16, i16, i16, i16, i32, i8*, i32, %struct.socket*, %struct.anon, %struct.anon.0, %struct.anon.1, i16, i16, i16, i16, %union.pthread_cond_t, i16, %struct.sigio*, i64, %struct.anon.5, %struct.sockbuf, %struct.sockbuf, void (%struct.socket*, i8*, i32)*, i8*, %struct.ucred*, %struct.label*, %struct.label*, i32, i8*, %struct.so_accf* }
%struct.anon = type { %struct.socket*, %struct.socket** }
%struct.anon.0 = type { %struct.socket*, %struct.socket** }
%struct.anon.1 = type { %struct.socket*, %struct.socket** }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.3, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.3 = type { i64 }
%struct.sigio = type opaque
%struct.anon.5 = type { %struct.aiocblist*, %struct.aiocblist** }
%struct.aiocblist = type opaque
%struct.sockbuf = type { %union.pthread_cond_t, %union.pthread_mutex_t, i16, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.mbuf = type { %struct.m_hdr, %union.anon.6 }
%struct.m_hdr = type { %struct.mbuf*, %struct.mbuf*, i8*, i32, i32, i16, [6 x i8] }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.pkthdr, %union.anon.9 }
%struct.pkthdr = type { %struct.ifnet*, i8*, i32, i32, i32, i16, i16, %struct.packet_tags }
%struct.ifnet = type opaque
%struct.packet_tags = type { %struct.m_tag* }
%struct.m_tag = type { %struct.anon.8, i16, i16, i32, void (%struct.m_tag*)* }
%struct.anon.8 = type { %struct.m_tag* }
%union.anon.9 = type { %struct.m_ext, [128 x i8] }
%struct.m_ext = type { i8*, void (i8*, i8*)*, i8*, i32, i32*, i32 }
%struct.ucred = type { i32, i32, i32 }
%struct.label = type opaque
%struct.so_accf = type { %struct.accept_filter*, i8*, i8* }
%struct.accept_filter = type opaque
%struct.sctp_inpcb = type { %union.anon.10, %struct.sctp_readhead, %struct.anon.32, %struct.anon.33, i32, %struct.sctpladdr, %struct.sctp_laddr*, %struct.socket*, i64, i32, i32, %struct.sctp_pcb, %struct.sctpasochead*, i64, %struct.sctpasochead, %struct.sctp_iterator*, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_nonpad_sndrcvinfo, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i16, i32, i32, i32, i32, %struct.sctpasochead*, i64, i32, i8*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32, i32 (%struct.socket*, i32, i8*)* }
%union.anon.10 = type { %struct.inpcb, [24 x i8] }
%struct.inpcb = type { %struct.anon.11, %struct.anon.12, i8*, %struct.inpcbinfo*, %struct.socket*, i32, i32, i8, i8, i8, i8, i32, [2 x i8*], %struct.in_conninfo, %struct.label*, %struct.inpcbpolicy*, %struct.anon.17, %struct.anon.18, %struct.anon.19, %struct.inpcbport*, %struct.mtx }
%struct.anon.11 = type { %struct.inpcb*, %struct.inpcb** }
%struct.anon.12 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbinfo = type { %struct.inpcbhead*, i32, %struct.inpcbhead*, i64, %struct.inpcbporthead*, i64, i16, i16, i16, %struct.uma_zone*, %struct.mtx, [2 x i8*] }
%struct.inpcbhead = type { %struct.inpcb* }
%struct.inpcbporthead = type { %struct.inpcbport* }
%struct.uma_zone = type opaque
%struct.in_conninfo = type { i8, i8, i16, %struct.in_endpoints }
%struct.in_endpoints = type { i16, i16, %union.anon.14, %union.anon.16 }
%union.anon.14 = type { %struct.in_addr_4in6 }
%struct.in_addr_4in6 = type { [3 x i32], %struct.in_addr }
%struct.in_addr = type { i32 }
%union.anon.16 = type { %struct.in_addr_4in6 }
%struct.inpcbpolicy = type opaque
%struct.anon.17 = type { i8, %struct.mbuf*, %struct.ip_moptions* }
%struct.ip_moptions = type opaque
%struct.anon.18 = type { %struct.mbuf*, %struct.ip6_pktopts*, %struct.icmp6_filter*, i32, i16 }
%struct.ip6_pktopts = type opaque
%struct.icmp6_filter = type opaque
%struct.anon.19 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbport = type { %struct.anon.13, %struct.inpcbhead, i16 }
%struct.anon.13 = type { %struct.inpcbport*, %struct.inpcbport** }
%struct.mtx = type { i32 }
%struct.sctp_readhead = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctp_queued_to_read = type { i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_nets*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.sctp_tcb*, %struct.anon.28, %struct.anon.29, %struct.sctpchunk_listhead, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_nets = type { %struct.anon.20, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_net_route, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sctp_timer, %struct.timeval, %union.cc_control_data, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.timeval, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.20 = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.sctp_net_route = type { %struct.sctp_rtentry*, %union.sctp_sockstore, %struct.sctp_ifa* }
%struct.sctp_rtentry = type { %struct.ifnet*, %struct.ifaddr*, %struct.sctp_rt_metrics_lite, i64, %struct.mtx }
%struct.ifaddr = type { %struct.sockaddr, %union.anon.22, %struct.iface*, %struct.ifaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.22 = type { %struct.sockaddr }
%struct.iface = type opaque
%struct.sctp_rt_metrics_lite = type { i32 }
%union.sctp_sockstore = type { %struct.sockaddr_conn, [16 x i8] }
%struct.sockaddr_conn = type { i16, i16, i8* }
%struct.sctp_ifa = type { %struct.anon.23, %struct.anon.24, %struct.sctp_ifn*, i8*, %union.sctp_sockstore, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.anon.23 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.anon.24 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.sctp_ifn = type { %struct.sctp_ifalist, %struct.sctp_vrf*, %struct.anon.26, %struct.anon.27, i8*, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8] }
%struct.sctp_ifalist = type { %struct.sctp_ifa* }
%struct.sctp_vrf = type { %struct.anon.25, %struct.sctp_ifalist*, %struct.sctp_ifnlist, i32, i32, i32, i32, i64, i32 }
%struct.anon.25 = type { %struct.sctp_vrf*, %struct.sctp_vrf** }
%struct.sctp_ifnlist = type { %struct.sctp_ifn* }
%struct.anon.26 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.anon.27 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.sctp_timer = type { %struct.sctp_callout, i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.sctp_callout = type { %struct.anon.21, i32, i8*, void (i8*)*, i32 }
%struct.anon.21 = type { %struct.sctp_callout*, %struct.sctp_callout** }
%union.cc_control_data = type { %struct.rtcc_cc }
%struct.rtcc_cc = type { %struct.timeval, i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.timeval = type { i64, i64 }
%struct.anon.28 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.anon.29 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctpchunk_listhead = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.sctp_tmit_chunk = type { %union.anon.30, %struct.sctp_association*, %struct.timeval, %struct.mbuf*, %struct.mbuf*, %struct.sctp_nets*, %struct.anon.31, i32, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%union.anon.30 = type { %struct.sctp_data_chunkrec }
%struct.sctp_data_chunkrec = type { i32, i32, i16, i32, i32, i32, i32, %struct.timeval, i32, i8, i8, i8, i8, i8 }
%struct.anon.31 = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.anon.32 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.anon.33 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.sctpladdr = type { %struct.sctp_laddr* }
%struct.sctp_laddr = type { %struct.anon.34, %struct.sctp_ifa*, i32, %struct.timeval }
%struct.anon.34 = type { %struct.sctp_laddr*, %struct.sctp_laddr** }
%struct.sctp_pcb = type { i32, [2 x [8 x i32]], i32, [7 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_keyhead, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, i16, i32, i16, i16, i16, i16, i16, i16, i32, [20 x i8], [20 x i8], %struct.sctp_timer, i32, i32, i32, i32, i8, i32, i32, i32, i8, i8, i8, i16 }
%struct.sctp_keyhead = type { %struct.sctp_shared_key* }
%struct.sctp_shared_key = type { %struct.anon.35, %struct.sctp_key*, i32, i16, i8 }
%struct.anon.35 = type { %struct.sctp_shared_key*, %struct.sctp_shared_key** }
%struct.sctp_key = type { i32, [0 x i8] }
%struct.sctp_auth_chklist = type { [256 x i8], i8 }
%struct.sctp_hmaclist = type { i16, i16, [0 x i16] }
%struct.sctpasochead = type { %struct.sctp_tcb* }
%struct.sctp_iterator = type { %struct.anon.36, %struct.sctp_timer, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_inpcb*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, void (i8*, i32)*, i8*, i32, i32, i32, i32, i32, i8, i8 }
%struct.anon.36 = type { %struct.sctp_iterator*, %struct.sctp_iterator** }
%struct.sctp_nonpad_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16 }
%struct.sctp_rcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32 }
%struct.anon.37 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.38 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.39 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.40 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.sctp_block_entry = type { i32 }
%struct.sctp_association = type { i32, %struct.sctp_asconf_addrhead, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.sctp_nonpad_sndrcvinfo, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctpladdr, %struct.sctp_ifa*, %struct.sctp_nets*, %struct.sctpnetlisthead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.scheduling_data, %struct.sctp_iterator*, %struct.sctp_asconf_ackhead, %struct.sctp_tmit_chunk*, %struct.sctp_laddr*, %struct.sctp_stream_in*, %struct.sctp_stream_out*, i8*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_resethead, %struct.sctp_readhead, %struct.sctp_cc_functions, i32, %struct.sctp_ss_functions, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, %struct.sctp_queued_to_read*, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [20 x i32], i32, i32, i32, i32, %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, %struct.sctp_hmaclist*, %struct.sctp_keyhead, %struct.sctp_authinformation, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_scoping, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i8, i8, i64, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timeval, %struct.timeval, [4 x i64], [4 x i64] }
%struct.sctp_asconf_addrhead = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr = type { %struct.anon.41, %struct.sctp_asconf_addr_param, %struct.sctp_ifa*, i8, i8 }
%struct.anon.41 = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr_param = type { %struct.sctp_asconf_paramhdr, %struct.sctp_ipv6addr_param }
%struct.sctp_asconf_paramhdr = type { %struct.sctp_paramhdr, i32 }
%struct.sctp_paramhdr = type { i16, i16 }
%struct.sctp_ipv6addr_param = type { %struct.sctp_paramhdr, [16 x i8] }
%struct.sctpnetlisthead = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.scheduling_data = type { %struct.sctp_stream_out*, %struct.sctp_stream_out*, %union.anon.47 }
%union.anon.47 = type { %struct.sctpwheel_listhead }
%struct.sctpwheel_listhead = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_asconf_ackhead = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_asconf_ack = type { %struct.anon.48, i32, %struct.sctp_nets*, %struct.mbuf*, i16 }
%struct.anon.48 = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_stream_in = type { %struct.sctp_readhead, %struct.sctp_readhead, i32, i16, i8, i8 }
%struct.sctp_stream_out = type { %struct.sctp_streamhead, %union.scheduling_parameters, i32, [1 x i32], [1 x i32], i32, i32, i16, i8, i8 }
%struct.sctp_streamhead = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.sctp_stream_queue_pending = type { %struct.mbuf*, %struct.mbuf*, %struct.timeval, %struct.sctp_nets*, %struct.anon.42, %struct.anon.43, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.42 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.anon.43 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%union.scheduling_parameters = type { %struct.ss_prio }
%struct.ss_prio = type { %struct.anon.45, i16 }
%struct.anon.45 = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_resethead = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_stream_reset_list = type { %struct.anon.49, i32, i32, i32, [0 x i16] }
%struct.anon.49 = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_cc_functions = type { {}*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, {}*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, {}*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, {}*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, {}*, {}*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* }
%struct.sctp_ss_functions = type { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* }
%struct.sctp_authinformation = type { %struct.sctp_key*, i32, %struct.sctp_key*, %struct.sctp_key*, %struct.sctp_key*, i16, i16, i16 }
%struct.sctp_scoping = type { i8, i8, i8, i8, i8, i8, i8 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.sctp_pktdrop_chunk = type { %struct.sctp_chunkhdr, i32, i32, i16, i16, [0 x i8] }
%struct.sctp_chunkhdr = type { i8, i8, i16 }
%struct.sctp_cc_option = type { i32, %struct.sctp_assoc_value }
%struct.sctp_assoc_value = type { i32, i32 }
%struct.sctp_base_info = type { %struct.sctp_epinfo, %struct.sctpstat, %struct.sctp_sysctl, i8, i8, %union.pthread_mutex_t, i64, i32, i32, i32, %union.pthread_mutexattr_t, i32 (i8*, i8*, i64, i8, i8)*, void (i8*, ...)*, i32 }
%struct.sctp_epinfo = type { %struct.sctpasochead*, i64, %struct.sctppcbhead*, i64, %struct.sctppcbhead*, i64, i32, %struct.sctp_vrflist*, i64, %struct.sctp_ifnlist*, i64, %struct.sctppcbhead, %struct.sctpladdr, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.sctpvtaghead], %struct.sctp_timer, %struct.calloutlist }
%struct.sctp_vrflist = type { %struct.sctp_vrf* }
%struct.sctppcbhead = type { %struct.sctp_inpcb* }
%struct.sctpvtaghead = type { %struct.sctp_tagblock* }
%struct.sctp_tagblock = type { %struct.anon.50, [15 x %struct.sctp_timewait] }
%struct.anon.50 = type { %struct.sctp_tagblock*, %struct.sctp_tagblock** }
%struct.sctp_timewait = type { i32, i32, i16, i16 }
%struct.calloutlist = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.sctpstat = type { %struct.sctp_timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [31 x i32] }
%struct.sctp_timeval = type { i32, i32 }
%struct.sctp_sysctl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.pthread_mutexattr_t = type { i32 }
%struct.sctp_hs_raise_drop = type { i32, i8, i8 }
%struct.htcp = type { i16, i8, i8, i32, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@sctp_cc_functions = hidden local_unnamed_addr constant [4 x { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* }] [{ void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* } { void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_set_initial_cc_param, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)* @sctp_cwnd_update_after_sack, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_update_exit_pf_common, void (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_cwnd_update_after_fr, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_update_after_timeout, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)* @sctp_cwnd_update_after_ecn_echo, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)* @sctp_cwnd_update_after_packet_dropped, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)* @sctp_cwnd_update_after_output, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* null }, { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* } { void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_set_initial_cc_param, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)* @sctp_hs_cwnd_update_after_sack, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_update_exit_pf_common, void (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_hs_cwnd_update_after_fr, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_update_after_timeout, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)* @sctp_cwnd_update_after_ecn_echo, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)* @sctp_cwnd_update_after_packet_dropped, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)* @sctp_cwnd_update_after_output, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* null }, { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* } { void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_htcp_set_initial_cc_param, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)* @sctp_htcp_cwnd_update_after_sack, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_update_exit_pf_common, void (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_htcp_cwnd_update_after_fr, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_htcp_cwnd_update_after_timeout, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)* @sctp_htcp_cwnd_update_after_ecn_echo, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)* @sctp_cwnd_update_after_packet_dropped, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)* @sctp_cwnd_update_after_output, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*)* null, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)* null, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* null }, { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* } { void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_set_rtcc_initial_cc_param, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)* @sctp_cwnd_update_rtcc_after_sack, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_update_exit_pf_common, void (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_cwnd_update_after_fr, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_update_after_timeout, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)* @sctp_cwnd_update_rtcc_after_ecn_echo, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)* @sctp_cwnd_update_after_packet_dropped, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)* @sctp_cwnd_update_after_output, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_update_rtcc_packet_transmitted, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)* @sctp_cwnd_update_rtcc_tsn_acknowledged, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_new_rtcc_transmission_begins, void (%struct.sctp_tcb*, %struct.sctp_nets*)* @sctp_cwnd_prepare_rtcc_net_for_sack, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)* @sctp_cwnd_rtcc_socket_option, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* @sctp_rtt_rtcc_calculated }], align 16
@system_base_info = external global %struct.sctp_base_info, align 8
@sctp_cwnd_adjust = internal unnamed_addr constant [73 x %struct.sctp_hs_raise_drop] [%struct.sctp_hs_raise_drop { i32 38, i8 1, i8 50 }, %struct.sctp_hs_raise_drop { i32 118, i8 2, i8 44 }, %struct.sctp_hs_raise_drop { i32 221, i8 3, i8 41 }, %struct.sctp_hs_raise_drop { i32 347, i8 4, i8 38 }, %struct.sctp_hs_raise_drop { i32 495, i8 5, i8 37 }, %struct.sctp_hs_raise_drop { i32 663, i8 6, i8 35 }, %struct.sctp_hs_raise_drop { i32 851, i8 7, i8 34 }, %struct.sctp_hs_raise_drop { i32 1058, i8 8, i8 33 }, %struct.sctp_hs_raise_drop { i32 1284, i8 9, i8 32 }, %struct.sctp_hs_raise_drop { i32 1529, i8 10, i8 31 }, %struct.sctp_hs_raise_drop { i32 1793, i8 11, i8 30 }, %struct.sctp_hs_raise_drop { i32 2076, i8 12, i8 29 }, %struct.sctp_hs_raise_drop { i32 2378, i8 13, i8 28 }, %struct.sctp_hs_raise_drop { i32 2699, i8 14, i8 28 }, %struct.sctp_hs_raise_drop { i32 3039, i8 15, i8 27 }, %struct.sctp_hs_raise_drop { i32 3399, i8 16, i8 27 }, %struct.sctp_hs_raise_drop { i32 3778, i8 17, i8 26 }, %struct.sctp_hs_raise_drop { i32 4177, i8 18, i8 26 }, %struct.sctp_hs_raise_drop { i32 4596, i8 19, i8 25 }, %struct.sctp_hs_raise_drop { i32 5036, i8 20, i8 25 }, %struct.sctp_hs_raise_drop { i32 5497, i8 21, i8 24 }, %struct.sctp_hs_raise_drop { i32 5979, i8 22, i8 24 }, %struct.sctp_hs_raise_drop { i32 6483, i8 23, i8 23 }, %struct.sctp_hs_raise_drop { i32 7009, i8 24, i8 23 }, %struct.sctp_hs_raise_drop { i32 7558, i8 25, i8 22 }, %struct.sctp_hs_raise_drop { i32 8130, i8 26, i8 22 }, %struct.sctp_hs_raise_drop { i32 8726, i8 27, i8 22 }, %struct.sctp_hs_raise_drop { i32 9346, i8 28, i8 21 }, %struct.sctp_hs_raise_drop { i32 9991, i8 29, i8 21 }, %struct.sctp_hs_raise_drop { i32 10661, i8 30, i8 21 }, %struct.sctp_hs_raise_drop { i32 11358, i8 31, i8 20 }, %struct.sctp_hs_raise_drop { i32 12082, i8 32, i8 20 }, %struct.sctp_hs_raise_drop { i32 12834, i8 33, i8 20 }, %struct.sctp_hs_raise_drop { i32 13614, i8 34, i8 19 }, %struct.sctp_hs_raise_drop { i32 14424, i8 35, i8 19 }, %struct.sctp_hs_raise_drop { i32 15265, i8 36, i8 19 }, %struct.sctp_hs_raise_drop { i32 16137, i8 37, i8 19 }, %struct.sctp_hs_raise_drop { i32 17042, i8 38, i8 18 }, %struct.sctp_hs_raise_drop { i32 17981, i8 39, i8 18 }, %struct.sctp_hs_raise_drop { i32 18955, i8 40, i8 18 }, %struct.sctp_hs_raise_drop { i32 19965, i8 41, i8 17 }, %struct.sctp_hs_raise_drop { i32 21013, i8 42, i8 17 }, %struct.sctp_hs_raise_drop { i32 22101, i8 43, i8 17 }, %struct.sctp_hs_raise_drop { i32 23230, i8 44, i8 17 }, %struct.sctp_hs_raise_drop { i32 24402, i8 45, i8 16 }, %struct.sctp_hs_raise_drop { i32 25618, i8 46, i8 16 }, %struct.sctp_hs_raise_drop { i32 26881, i8 47, i8 16 }, %struct.sctp_hs_raise_drop { i32 28193, i8 48, i8 16 }, %struct.sctp_hs_raise_drop { i32 29557, i8 49, i8 15 }, %struct.sctp_hs_raise_drop { i32 30975, i8 50, i8 15 }, %struct.sctp_hs_raise_drop { i32 32450, i8 51, i8 15 }, %struct.sctp_hs_raise_drop { i32 33986, i8 52, i8 15 }, %struct.sctp_hs_raise_drop { i32 35586, i8 53, i8 14 }, %struct.sctp_hs_raise_drop { i32 37253, i8 54, i8 14 }, %struct.sctp_hs_raise_drop { i32 38992, i8 55, i8 14 }, %struct.sctp_hs_raise_drop { i32 40808, i8 56, i8 14 }, %struct.sctp_hs_raise_drop { i32 42707, i8 57, i8 13 }, %struct.sctp_hs_raise_drop { i32 44694, i8 58, i8 13 }, %struct.sctp_hs_raise_drop { i32 46776, i8 59, i8 13 }, %struct.sctp_hs_raise_drop { i32 48961, i8 60, i8 13 }, %struct.sctp_hs_raise_drop { i32 51258, i8 61, i8 13 }, %struct.sctp_hs_raise_drop { i32 53677, i8 62, i8 12 }, %struct.sctp_hs_raise_drop { i32 56230, i8 63, i8 12 }, %struct.sctp_hs_raise_drop { i32 58932, i8 64, i8 12 }, %struct.sctp_hs_raise_drop { i32 61799, i8 65, i8 12 }, %struct.sctp_hs_raise_drop { i32 64851, i8 66, i8 11 }, %struct.sctp_hs_raise_drop { i32 68113, i8 67, i8 11 }, %struct.sctp_hs_raise_drop { i32 71617, i8 68, i8 11 }, %struct.sctp_hs_raise_drop { i32 75401, i8 69, i8 10 }, %struct.sctp_hs_raise_drop { i32 79517, i8 70, i8 10 }, %struct.sctp_hs_raise_drop { i32 84035, i8 71, i8 10 }, %struct.sctp_hs_raise_drop { i32 89053, i8 72, i8 10 }, %struct.sctp_hs_raise_drop { i32 94717, i8 73, i8 9 }], align 16
@hz = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_set_initial_cc_param(%struct.sctp_tcb*, %struct.sctp_nets*) #0 {
  %3 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 68), align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 2
  %9 = shl i32 %7, 1
  %10 = icmp ugt i32 %9, 4380
  %11 = select i1 %10, i32 %9, i32 4380
  %12 = icmp ugt i32 %8, %11
  %13 = select i1 %12, i32 %11, i32 %8
  br label %25

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 147
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 0
  %18 = icmp ugt i32 %3, %16
  %19 = and i1 %17, %18
  %20 = select i1 %19, i32 %16, i32 %3
  %21 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -12
  %24 = mul i32 %20, %23
  br label %25

25:                                               ; preds = %14, %5
  %26 = phi i32 [ %22, %14 ], [ %7, %5 ]
  %27 = phi i32 [ %24, %14 ], [ %13, %5 ]
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 189
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, -2
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %43

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 94
  %35 = load i32, i32* %34, align 4
  %36 = udiv i32 %27, %35
  store i32 %36, i32* %28, align 8
  %37 = zext i32 %36 to i64
  %38 = zext i32 %26 to i64
  %39 = add nsw i64 %38, -12
  %40 = icmp ugt i64 %39, %37
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = trunc i64 %39 to i32
  store i32 %42, i32* %28, align 8
  br label %43

43:                                               ; preds = %25, %33, %41
  %44 = phi i32 [ %27, %25 ], [ %36, %33 ], [ %42, %41 ]
  %45 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 0
  %48 = icmp ugt i32 %44, %46
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %60

50:                                               ; preds = %43
  %51 = zext i32 %44 to i64
  %52 = zext i32 %26 to i64
  %53 = add nsw i64 %52, -12
  %54 = icmp ult i64 %53, %51
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  store i32 %46, i32* %28, align 8
  %56 = zext i32 %46 to i64
  %57 = icmp ugt i64 %53, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = trunc i64 %53 to i32
  store i32 %59, i32* %28, align 8
  br label %60

60:                                               ; preds = %43, %50, %55, %58
  %61 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 74
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %62, i32* %63, align 4
  %64 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %65 = and i32 %64, 6
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %60
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 0, i8 zeroext 62) #8
  br label %68

68:                                               ; preds = %60, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_update_after_sack(%struct.sctp_tcb*, %struct.sctp_association* nocapture readonly, i32, i32, i32) #0 {
  tail call fastcc void @sctp_cwnd_update_after_sack_common(%struct.sctp_tcb* %0, %struct.sctp_association* %1, i32 %2, i32 %4, i32 0)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_cwnd_update_exit_pf_common(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* nocapture) #1 {
  %3 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  store i32 %4, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_update_after_fr(%struct.sctp_tcb*, %struct.sctp_association* nocapture) #0 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 189
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, -2
  %6 = icmp eq i8 %5, 2
  %7 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 16, i32 0
  %8 = load %struct.sctp_nets*, %struct.sctp_nets** %7, align 8
  br i1 %6, label %9, label %39

9:                                                ; preds = %2
  %10 = icmp eq %struct.sctp_nets* %8, null
  br i1 %10, label %36, label %11

11:                                               ; preds = %9, %29
  %12 = phi %struct.sctp_nets* [ %32, %29 ], [ %8, %9 ]
  %13 = phi i64 [ %30, %29 ], [ 0, %9 ]
  %14 = phi i32 [ %21, %29 ], [ 0, %9 ]
  %15 = phi i32 [ %18, %29 ], [ 0, %9 ]
  %16 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %12, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, %15
  %19 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %12, i64 0, i32 19
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, %14
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %12, i64 0, i32 10
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %11
  %26 = udiv i32 %20, %23
  %27 = zext i32 %26 to i64
  %28 = add i64 %13, %27
  br label %29

29:                                               ; preds = %11, %25
  %30 = phi i64 [ %28, %25 ], [ %13, %11 ]
  %31 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %12, i64 0, i32 0, i32 0
  %32 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %33 = icmp eq %struct.sctp_nets* %32, null
  br i1 %33, label %34, label %11

34:                                               ; preds = %29
  %35 = icmp eq i64 %30, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %9, %34
  %37 = phi i32 [ %21, %34 ], [ 0, %9 ]
  %38 = phi i32 [ %18, %34 ], [ 0, %9 ]
  br label %39

39:                                               ; preds = %2, %36, %34
  %40 = phi i32 [ %38, %36 ], [ %18, %34 ], [ 0, %2 ]
  %41 = phi i32 [ %37, %36 ], [ %21, %34 ], [ 0, %2 ]
  %42 = phi i64 [ 1, %36 ], [ %30, %34 ], [ 0, %2 ]
  %43 = icmp eq %struct.sctp_nets* %8, null
  br i1 %43, label %168, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 174
  %46 = zext i32 %40 to i64
  %47 = lshr i32 %41, 1
  %48 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 195
  %49 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 21, i32 0
  %50 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 64
  %51 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 56
  %52 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  br label %53

53:                                               ; preds = %44, %164
  %54 = phi %struct.sctp_nets* [ %8, %44 ], [ %166, %164 ]
  %55 = load i8, i8* %45, align 2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = load i8, i8* %3, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %158, label %60

60:                                               ; preds = %57, %53
  %61 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 23
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %164, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 19
  %66 = load i32, i32* %65, align 8
  %67 = load i8, i8* %3, align 1
  %68 = and i8 %67, -2
  %69 = icmp eq i8 %68, 2
  br i1 %69, label %70, label %111

70:                                               ; preds = %64
  %71 = icmp eq i8 %67, 2
  %72 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  br i1 %71, label %75, label %85

75:                                               ; preds = %70
  %76 = shl nuw nsw i64 %74, 2
  %77 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 5
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = mul i64 %76, %79
  %81 = udiv i64 %80, %46
  %82 = trunc i64 %81 to i32
  store i32 %82, i32* %77, align 4
  %83 = load i8, i8* %3, align 1
  %84 = icmp eq i8 %83, 3
  br i1 %84, label %85, label %98

85:                                               ; preds = %70, %75
  %86 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 10
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  %89 = select i1 %88, i32 1, i32 %87
  %90 = zext i32 %66 to i64
  %91 = shl nuw nsw i64 %90, 2
  %92 = mul i64 %91, %74
  %93 = zext i32 %89 to i64
  %94 = mul i64 %42, %93
  %95 = udiv i64 %92, %94
  %96 = trunc i64 %95 to i32
  %97 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 5
  store i32 %96, i32* %97, align 4
  br label %98

98:                                               ; preds = %85, %75
  %99 = phi i32 [ %96, %85 ], [ %82, %75 ]
  %100 = icmp ugt i32 %66, %47
  br i1 %100, label %101, label %106

101:                                              ; preds = %98
  %102 = sub i32 %66, %47
  %103 = icmp ult i32 %99, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 5
  store i32 %102, i32* %105, align 4
  br label %106

106:                                              ; preds = %104, %101, %98
  %107 = phi i32 [ %102, %104 ], [ %99, %101 ], [ %99, %98 ]
  %108 = icmp ult i32 %107, %73
  br i1 %108, label %109, label %119

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 5
  store i32 %73, i32* %110, align 4
  br label %119

111:                                              ; preds = %64
  %112 = lshr i32 %66, 1
  %113 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 5
  %114 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 4
  %115 = load i32, i32* %114, align 8
  %116 = shl i32 %115, 1
  %117 = icmp ult i32 %112, %116
  %118 = select i1 %117, i32 %116, i32 %112
  store i32 %118, i32* %113, align 4
  br label %119

119:                                              ; preds = %111, %106, %109
  %120 = phi i32 [ %115, %111 ], [ %73, %106 ], [ %73, %109 ]
  %121 = phi i32 [ %118, %111 ], [ %107, %106 ], [ %73, %109 ]
  store i32 %121, i32* %65, align 8
  %122 = load i32, i32* %48, align 8
  %123 = icmp ne i32 %122, 0
  %124 = icmp ugt i32 %121, %122
  %125 = and i1 %123, %124
  br i1 %125, label %126, label %136

126:                                              ; preds = %119
  %127 = zext i32 %121 to i64
  %128 = zext i32 %120 to i64
  %129 = add nsw i64 %128, -12
  %130 = icmp ult i64 %129, %127
  br i1 %130, label %131, label %136

131:                                              ; preds = %126
  store i32 %122, i32* %65, align 8
  %132 = zext i32 %122 to i64
  %133 = icmp ugt i64 %129, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %131
  %135 = trunc i64 %129 to i32
  store i32 %135, i32* %65, align 8
  br label %136

136:                                              ; preds = %119, %126, %131, %134
  %137 = phi i32 [ %121, %119 ], [ %121, %126 ], [ %122, %131 ], [ %135, %134 ]
  %138 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %136
  %142 = sub i32 %137, %66
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %54, i32 %142, i8 zeroext 1) #8
  br label %143

143:                                              ; preds = %136, %141
  %144 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %49, align 8
  %145 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 22
  store i32 0, i32* %145, align 4
  store i8 1, i8* %45, align 2
  %146 = icmp eq %struct.sctp_tmit_chunk* %144, null
  %147 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %144, i64 0, i32 0, i32 0, i32 0
  %148 = select i1 %146, i32* %51, i32* %147
  %149 = select i1 %146, i32* %51, i32* %147
  %150 = load i32, i32* %148, align 8
  %151 = add i32 %150, -1
  store i32 %151, i32* %50, align 4
  %152 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 42
  store i8 1, i8* %152, align 2
  %153 = load i32, i32* %149, align 8
  %154 = add i32 %153, -1
  %155 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 29
  store i32 %154, i32* %155, align 8
  %156 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %52, align 8
  tail call void @sctp_timer_stop(i32 1, %struct.sctp_inpcb* %156, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %54, i32 -1073741823) #8
  %157 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %52, align 8
  tail call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %157, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %54) #8
  br label %164

158:                                              ; preds = %57
  %159 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 23
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 92), i32 1 seq_cst
  br label %164

164:                                              ; preds = %60, %158, %143, %162
  %165 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 0, i32 0
  %166 = load %struct.sctp_nets*, %struct.sctp_nets** %165, align 8
  %167 = icmp eq %struct.sctp_nets* %166, null
  br i1 %167, label %168, label %53

168:                                              ; preds = %164, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_update_after_timeout(%struct.sctp_tcb*, %struct.sctp_nets*) #0 {
  %3 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 189
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, -2
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %9, label %89

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %11 = load %struct.sctp_nets*, %struct.sctp_nets** %10, align 8
  %12 = icmp eq %struct.sctp_nets* %11, null
  br i1 %12, label %36, label %13

13:                                               ; preds = %9, %31
  %14 = phi %struct.sctp_nets* [ %34, %31 ], [ %11, %9 ]
  %15 = phi i64 [ %32, %31 ], [ 0, %9 ]
  %16 = phi i32 [ %23, %31 ], [ 0, %9 ]
  %17 = phi i32 [ %20, %31 ], [ 0, %9 ]
  %18 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %14, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, %17
  %21 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %14, i64 0, i32 19
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, %16
  %24 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %14, i64 0, i32 10
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %13
  %28 = udiv i32 %22, %25
  %29 = zext i32 %28 to i64
  %30 = add i64 %15, %29
  br label %31

31:                                               ; preds = %13, %27
  %32 = phi i64 [ %30, %27 ], [ %15, %13 ]
  %33 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %14, i64 0, i32 0, i32 0
  %34 = load %struct.sctp_nets*, %struct.sctp_nets** %33, align 8
  %35 = icmp eq %struct.sctp_nets* %34, null
  br i1 %35, label %36, label %13

36:                                               ; preds = %31, %9
  %37 = phi i32 [ 0, %9 ], [ %20, %31 ]
  %38 = phi i32 [ 0, %9 ], [ %23, %31 ]
  %39 = phi i64 [ 0, %9 ], [ %32, %31 ]
  %40 = icmp eq i8 %6, 2
  br i1 %40, label %41, label %55

41:                                               ; preds = %36
  %42 = icmp eq i32 %37, 0
  %43 = select i1 %42, i32 1, i32 %37
  %44 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = shl nuw nsw i64 %46, 2
  %48 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = mul i64 %47, %50
  %52 = zext i32 %43 to i64
  %53 = udiv i64 %51, %52
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %48, align 4
  br label %75

55:                                               ; preds = %36
  %56 = icmp eq i64 %39, 0
  %57 = select i1 %56, i64 1, i64 %39
  %58 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 10
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, i32 1, i32 %59
  %62 = zext i32 %61 to i64
  %63 = mul i64 %57, %62
  %64 = lshr i64 %63, 1
  %65 = zext i32 %38 to i64
  %66 = icmp ult i64 %64, %65
  br i1 %66, label %67, label %71

67:                                               ; preds = %55
  %68 = trunc i64 %64 to i32
  %69 = sub i32 %38, %68
  %70 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %69, i32* %70, align 4
  br label %75

71:                                               ; preds = %55
  %72 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %73, i32* %74, align 4
  br label %75

75:                                               ; preds = %67, %71, %41
  %76 = phi i32 [ %69, %67 ], [ %73, %71 ], [ %54, %41 ]
  %77 = lshr i32 %38, 1
  %78 = icmp ugt i32 %4, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = sub i32 %4, %77
  %81 = icmp ult i32 %76, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %80, i32* %83, align 4
  br label %84

84:                                               ; preds = %82, %79, %75
  %85 = phi i32 [ %80, %82 ], [ %76, %79 ], [ %76, %75 ]
  %86 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = icmp ult i32 %85, %87
  br i1 %88, label %96, label %100

89:                                               ; preds = %2
  %90 = lshr i32 %4, 1
  %91 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %92 = load i32, i32* %91, align 8
  %93 = shl i32 %92, 2
  %94 = icmp ugt i32 %90, %93
  %95 = select i1 %94, i32 %90, i32 %93
  br label %96

96:                                               ; preds = %84, %89
  %97 = phi i32 [ %95, %89 ], [ %87, %84 ]
  %98 = phi i32 [ %92, %89 ], [ %87, %84 ]
  %99 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %97, i32* %99, align 4
  br label %100

100:                                              ; preds = %96, %84
  %101 = phi i32 [ %87, %84 ], [ %98, %96 ]
  store i32 %101, i32* %3, align 8
  %102 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 22
  store i32 0, i32* %102, align 4
  %103 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %100
  %107 = sub i32 %101, %4
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %107, i8 zeroext 2) #8
  br label %108

108:                                              ; preds = %100, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_update_after_ecn_echo(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32) #0 {
  %5 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %8, label %27

8:                                                ; preds = %4
  %9 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 103), i32 1 seq_cst
  %10 = load i32, i32* %5, align 8
  %11 = lshr i32 %10, 1
  %12 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %11, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %8
  store i32 %14, i32* %12, align 4
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 13
  %18 = load i32, i32* %17, align 8
  %19 = shl i32 %18, 1
  store i32 %19, i32* %17, align 8
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %14, %16 ], [ %11, %8 ]
  store i32 %21, i32* %5, align 8
  %22 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = sub i32 %21, %6
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %26, i8 zeroext 6) #8
  br label %27

27:                                               ; preds = %4, %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_update_after_packet_dropped(%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk* nocapture readonly, i32* nocapture, i32* nocapture) #0 {
  %6 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 1
  %10 = tail call i32 @llvm.bswap.i32(i32 %9) #8
  store i32 %10, i32* %3, align 4
  %11 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 1
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #8
  store i32 %13, i32* %4, align 4
  %14 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 18
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %13, %15
  %17 = select i1 %16, i32 %15, i32 %13
  store i32 %17, i32* %4, align 4
  %18 = load i32, i32* %3, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 12
  %21 = load i64, i64* %20, align 8
  %22 = mul i64 %21, %19
  %23 = udiv i64 %22, 1000000
  %24 = trunc i64 %23 to i32
  %25 = icmp ult i32 %18, %24
  %26 = select i1 %25, i32 %18, i32 %24
  %27 = icmp ult i32 %26, %17
  br i1 %27, label %28, label %64

28:                                               ; preds = %5
  %29 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 22
  store i32 0, i32* %29, align 4
  %30 = load i32, i32* %4, align 4
  %31 = sub i32 %30, %26
  %32 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 177
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = load i32, i32* %6, align 8
  br label %41

37:                                               ; preds = %28
  %38 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 20
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %6, align 8
  %40 = load i32, i32* %4, align 4
  br label %41

41:                                               ; preds = %35, %37
  %42 = phi i32 [ %36, %35 ], [ %39, %37 ]
  %43 = phi i32 [ %30, %35 ], [ %40, %37 ]
  %44 = load i32, i32* %14, align 4
  %45 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %46 = load i32, i32* %45, align 8
  %47 = udiv i32 %44, %46
  %48 = udiv i32 %43, %46
  %49 = mul i32 %47, %31
  %50 = udiv i32 %49, %48
  %51 = icmp ugt i32 %42, %44
  br i1 %51, label %52, label %57

52:                                               ; preds = %41
  %53 = sub i32 %42, %44
  %54 = icmp slt i32 %50, %53
  %55 = sub nsw i32 %50, %53
  %56 = select i1 %54, i32 0, i32 %55
  br label %57

57:                                               ; preds = %52, %41
  %58 = phi i32 [ %50, %41 ], [ %56, %52 ]
  %59 = sub i32 %42, %58
  %60 = icmp ugt i32 %59, %46
  %61 = select i1 %60, i32 %59, i32 %46
  store i32 %61, i32* %6, align 8
  %62 = add i32 %61, -1
  %63 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %62, i32* %63, align 4
  br label %80

64:                                               ; preds = %5
  %65 = sub i32 %26, %17
  %66 = lshr i32 %65, 2
  %67 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 147
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = mul i32 %72, %68
  %74 = icmp ult i32 %73, %66
  %75 = select i1 %74, i32 %73, i32 %66
  br label %76

76:                                               ; preds = %70, %64
  %77 = phi i32 [ %66, %64 ], [ %75, %70 ]
  %78 = load i32, i32* %6, align 8
  %79 = add i32 %78, %77
  store i32 %79, i32* %6, align 8
  br label %80

80:                                               ; preds = %76, %57
  %81 = phi i32 [ %79, %76 ], [ %61, %57 ]
  %82 = icmp ugt i32 %81, %26
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i32 %26, i32* %6, align 8
  br label %84

84:                                               ; preds = %83, %80
  %85 = phi i32 [ %26, %83 ], [ %81, %80 ]
  %86 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = icmp ult i32 %85, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %84
  store i32 %87, i32* %6, align 8
  br label %90

90:                                               ; preds = %89, %84
  %91 = phi i32 [ %87, %89 ], [ %85, %84 ]
  %92 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  %93 = load i32, i32* %92, align 8
  %94 = icmp ne i32 %93, 0
  %95 = icmp ugt i32 %91, %93
  %96 = and i1 %94, %95
  br i1 %96, label %97, label %107

97:                                               ; preds = %90
  %98 = zext i32 %91 to i64
  %99 = zext i32 %87 to i64
  %100 = add nsw i64 %99, -12
  %101 = icmp ult i64 %100, %98
  br i1 %101, label %102, label %107

102:                                              ; preds = %97
  store i32 %93, i32* %6, align 8
  %103 = zext i32 %93 to i64
  %104 = icmp ugt i64 %100, %103
  br i1 %104, label %105, label %107

105:                                              ; preds = %102
  %106 = trunc i64 %100 to i32
  store i32 %106, i32* %6, align 8
  br label %107

107:                                              ; preds = %90, %97, %102, %105
  %108 = phi i32 [ %91, %90 ], [ %91, %97 ], [ %93, %102 ], [ %106, %105 ]
  %109 = sub i32 %108, %7
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %109, i8 zeroext 6) #8
  br label %116

116:                                              ; preds = %111, %107, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_update_after_output(%struct.sctp_tcb*, %struct.sctp_nets*, i32) #0 {
  %4 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  store i32 %5, i32* %6, align 4
  br label %10

10:                                               ; preds = %9, %3
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %41, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 18
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = mul i32 %16, %2
  %18 = add i32 %17, %14
  store i32 %18, i32* %4, align 8
  %19 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  %20 = load i32, i32* %19, align 8
  %21 = icmp ne i32 %20, 0
  %22 = icmp ugt i32 %18, %20
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %34

24:                                               ; preds = %12
  %25 = zext i32 %18 to i64
  %26 = zext i32 %16 to i64
  %27 = add nsw i64 %26, -12
  %28 = icmp ult i64 %27, %25
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  store i32 %20, i32* %4, align 8
  %30 = zext i32 %20 to i64
  %31 = icmp ugt i64 %27, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = trunc i64 %27 to i32
  store i32 %33, i32* %4, align 8
  br label %34

34:                                               ; preds = %12, %24, %29, %32
  %35 = phi i32 [ %18, %12 ], [ %18, %24 ], [ %20, %29 ], [ %33, %32 ]
  %36 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = sub i32 %35, %5
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %40, i8 zeroext 3) #8
  br label %41

41:                                               ; preds = %34, %10, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_hs_cwnd_update_after_sack(%struct.sctp_tcb*, %struct.sctp_association* nocapture readonly, i32, i32, i32) #0 {
  %6 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 16, i32 0
  %7 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 189
  %8 = load %struct.sctp_nets*, %struct.sctp_nets** %6, align 8
  %9 = icmp eq %struct.sctp_nets* %8, null
  br i1 %9, label %168, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 174
  %12 = icmp eq i32 %4, 0
  %13 = icmp eq i32 %2, 0
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  %15 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 195
  br label %16

16:                                               ; preds = %10, %164
  %17 = phi %struct.sctp_nets* [ %8, %10 ], [ %166, %164 ]
  %18 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 23
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %23 = and i32 %22, 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %164, label %25

25:                                               ; preds = %21
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %17, i32 0, i8 zeroext 64) #8
  br label %164

26:                                               ; preds = %16
  %27 = load i8, i8* %11, align 2
  %28 = icmp ne i8 %27, 0
  %29 = and i1 %12, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = load i8, i8* %7, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %168, label %33

33:                                               ; preds = %30, %26
  br i1 %13, label %34, label %41

34:                                               ; preds = %33
  %35 = load i8, i8* %7, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %157, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 52
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %157, label %41

41:                                               ; preds = %37, %33
  %42 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 19
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 5
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %43, %45
  br i1 %46, label %118, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 18
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, %19
  %51 = icmp ult i32 %50, %43
  br i1 %51, label %113, label %52

52:                                               ; preds = %47
  %53 = lshr i32 %43, 10
  %54 = icmp ult i32 %43, 38912
  br i1 %54, label %55, label %63

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 4
  %57 = load i32, i32* %56, align 8
  %58 = icmp ugt i32 %19, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = add i32 %57, %43
  br label %88

61:                                               ; preds = %55
  %62 = add i32 %43, %19
  br label %88

63:                                               ; preds = %52
  %64 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 55
  %65 = load i8, i8* %64, align 1
  %66 = icmp ult i8 %65, 73
  br i1 %66, label %67, label %79

67:                                               ; preds = %63
  %68 = zext i8 %65 to i64
  br label %69

69:                                               ; preds = %74, %67
  %70 = phi i64 [ %68, %67 ], [ %75, %74 ]
  %71 = getelementptr inbounds [73 x %struct.sctp_hs_raise_drop], [73 x %struct.sctp_hs_raise_drop]* @sctp_cwnd_adjust, i64 0, i64 %70, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp slt i32 %53, %72
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = add nuw nsw i64 %70, 1
  %76 = icmp eq i64 %75, 73
  br i1 %76, label %79, label %69

77:                                               ; preds = %69
  %78 = trunc i64 %70 to i32
  br label %79

79:                                               ; preds = %74, %77, %63
  %80 = phi i32 [ 72, %63 ], [ %78, %77 ], [ 72, %74 ]
  %81 = trunc i32 %80 to i8
  store i8 %81, i8* %64, align 1
  %82 = sext i32 %80 to i64
  %83 = getelementptr inbounds [73 x %struct.sctp_hs_raise_drop], [73 x %struct.sctp_hs_raise_drop]* @sctp_cwnd_adjust, i64 0, i64 %82, i32 1
  %84 = load i8, i8* %83, align 4
  %85 = sext i8 %84 to i32
  %86 = shl nsw i32 %85, 10
  %87 = add i32 %86, %43
  br label %88

88:                                               ; preds = %79, %61, %59
  %89 = phi i32 [ %87, %79 ], [ %62, %61 ], [ %60, %59 ]
  store i32 %89, i32* %42, align 8
  %90 = load i32, i32* %14, align 8
  %91 = icmp ne i32 %90, 0
  %92 = icmp ugt i32 %89, %90
  %93 = and i1 %91, %92
  br i1 %93, label %94, label %106

94:                                               ; preds = %88
  %95 = zext i32 %89 to i64
  %96 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 4
  %97 = load i32, i32* %96, align 8
  %98 = zext i32 %97 to i64
  %99 = add nsw i64 %98, -12
  %100 = icmp ult i64 %99, %95
  br i1 %100, label %101, label %106

101:                                              ; preds = %94
  store i32 %90, i32* %42, align 8
  %102 = zext i32 %90 to i64
  %103 = icmp ugt i64 %99, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = trunc i64 %99 to i32
  store i32 %105, i32* %42, align 8
  br label %106

106:                                              ; preds = %104, %101, %94, %88
  %107 = phi i32 [ %89, %88 ], [ %89, %94 ], [ %90, %101 ], [ %105, %104 ]
  %108 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %164, label %111

111:                                              ; preds = %106
  %112 = sub i32 %107, %43
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %17, i32 %112, i8 zeroext 4) #8
  br label %164

113:                                              ; preds = %47
  %114 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %115 = and i32 %114, 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %164, label %117

117:                                              ; preds = %113
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %17, i32 %19, i8 zeroext 31) #8
  br label %164

118:                                              ; preds = %41
  %119 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 22
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, %19
  store i32 %121, i32* %119, align 4
  %122 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 18
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, %19
  %125 = icmp ult i32 %124, %43
  %126 = icmp ult i32 %121, %43
  %127 = or i1 %126, %125
  br i1 %127, label %152, label %128

128:                                              ; preds = %118
  %129 = sub i32 %121, %43
  store i32 %129, i32* %119, align 4
  %130 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = add i32 %131, %43
  store i32 %132, i32* %42, align 8
  %133 = load i32, i32* %15, align 8
  %134 = icmp ne i32 %133, 0
  %135 = icmp ugt i32 %132, %133
  %136 = and i1 %134, %135
  br i1 %136, label %137, label %147

137:                                              ; preds = %128
  %138 = zext i32 %132 to i64
  %139 = zext i32 %131 to i64
  %140 = add nsw i64 %139, -12
  %141 = icmp ult i64 %140, %138
  br i1 %141, label %142, label %147

142:                                              ; preds = %137
  store i32 %133, i32* %42, align 8
  %143 = zext i32 %133 to i64
  %144 = icmp ugt i64 %140, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %142
  %146 = trunc i64 %140 to i32
  store i32 %146, i32* %42, align 8
  br label %147

147:                                              ; preds = %128, %137, %142, %145
  %148 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %164, label %151

151:                                              ; preds = %147
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %17, i32 %131, i8 zeroext 5) #8
  br label %164

152:                                              ; preds = %118
  %153 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %154 = and i32 %153, 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %164, label %156

156:                                              ; preds = %152
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %17, i32 %19, i8 zeroext 32) #8
  br label %164

157:                                              ; preds = %37, %34
  %158 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %159 = and i32 %158, 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 4
  %163 = load i32, i32* %162, align 8
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %17, i32 %163, i8 zeroext 65) #8
  br label %164

164:                                              ; preds = %111, %106, %21, %113, %147, %152, %157, %151, %156, %117, %161, %25
  %165 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %17, i64 0, i32 0, i32 0
  %166 = load %struct.sctp_nets*, %struct.sctp_nets** %165, align 8
  %167 = icmp eq %struct.sctp_nets* %166, null
  br i1 %167, label %168, label %16

168:                                              ; preds = %30, %164, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_hs_cwnd_update_after_fr(%struct.sctp_tcb*, %struct.sctp_association* nocapture) #0 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 16, i32 0
  %4 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  %5 = icmp eq %struct.sctp_nets* %4, null
  br i1 %5, label %100, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 174
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 189
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 21, i32 0
  %11 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 64
  %12 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 56
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  br label %14

14:                                               ; preds = %6, %96
  %15 = phi %struct.sctp_nets* [ %4, %6 ], [ %98, %96 ]
  %16 = load i8, i8* %7, align 2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = load i8, i8* %8, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %90, label %21

21:                                               ; preds = %18, %14
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 23
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %96, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 19
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %27, 38912
  br i1 %28, label %29, label %37

29:                                               ; preds = %25
  %30 = lshr i32 %27, 1
  %31 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 5
  %32 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = shl i32 %33, 1
  %35 = icmp ult i32 %30, %34
  %36 = select i1 %35, i32 %34, i32 %30
  store i32 %36, i32* %31, align 4
  store i32 %36, i32* %26, align 8
  br label %50

37:                                               ; preds = %25
  %38 = udiv i32 %27, 100
  %39 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 55
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds [73 x %struct.sctp_hs_raise_drop], [73 x %struct.sctp_hs_raise_drop]* @sctp_cwnd_adjust, i64 0, i64 %41, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = mul i32 %38, %44
  %46 = sub i32 %27, %45
  %47 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 5
  store i32 %46, i32* %47, align 4
  store i32 %46, i32* %26, align 8
  %48 = icmp ult i32 %46, 38912
  br i1 %48, label %49, label %50

49:                                               ; preds = %37
  store i8 0, i8* %39, align 1
  br label %50

50:                                               ; preds = %49, %37, %29
  %51 = phi i32 [ %46, %49 ], [ %36, %29 ], [ %46, %37 ]
  %52 = load i32, i32* %9, align 8
  %53 = icmp ne i32 %52, 0
  %54 = icmp ugt i32 %51, %52
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %68

56:                                               ; preds = %50
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = add nsw i64 %60, -12
  %62 = icmp ult i64 %61, %57
  br i1 %62, label %63, label %68

63:                                               ; preds = %56
  store i32 %52, i32* %26, align 8
  %64 = zext i32 %52 to i64
  %65 = icmp ugt i64 %61, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = trunc i64 %61 to i32
  store i32 %67, i32* %26, align 8
  br label %68

68:                                               ; preds = %66, %63, %56, %50
  %69 = phi i32 [ %51, %50 ], [ %51, %56 ], [ %52, %63 ], [ %67, %66 ]
  %70 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = sub i32 %69, %27
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %15, i32 %74, i8 zeroext 1) #8
  br label %75

75:                                               ; preds = %68, %73
  %76 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %10, align 8
  %77 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 22
  store i32 0, i32* %77, align 4
  store i8 1, i8* %7, align 2
  %78 = icmp eq %struct.sctp_tmit_chunk* %76, null
  %79 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %76, i64 0, i32 0, i32 0, i32 0
  %80 = select i1 %78, i32* %12, i32* %79
  %81 = select i1 %78, i32* %12, i32* %79
  %82 = load i32, i32* %80, align 8
  %83 = add i32 %82, -1
  store i32 %83, i32* %11, align 4
  %84 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 42
  store i8 1, i8* %84, align 2
  %85 = load i32, i32* %81, align 8
  %86 = add i32 %85, -1
  %87 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 29
  store i32 %86, i32* %87, align 8
  %88 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %13, align 8
  tail call void @sctp_timer_stop(i32 1, %struct.sctp_inpcb* %88, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %15, i32 -1073741822) #8
  %89 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %13, align 8
  tail call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %89, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %15) #8
  br label %96

90:                                               ; preds = %18
  %91 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 23
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 92), i32 1 seq_cst
  br label %96

96:                                               ; preds = %21, %90, %75, %94
  %97 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 0, i32 0
  %98 = load %struct.sctp_nets*, %struct.sctp_nets** %97, align 8
  %99 = icmp eq %struct.sctp_nets* %98, null
  br i1 %99, label %100, label %14

100:                                              ; preds = %96, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_htcp_set_initial_cc_param(%struct.sctp_tcb*, %struct.sctp_nets*) #0 {
  %3 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = shl i32 %4, 2
  %6 = shl i32 %4, 1
  %7 = icmp ugt i32 %6, 4380
  %8 = select i1 %7, i32 %6, i32 4380
  %9 = icmp ugt i32 %5, %8
  %10 = select i1 %9, i32 %8, i32 %5
  %11 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 74
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  %18 = icmp ugt i32 %10, %16
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %30

20:                                               ; preds = %2
  %21 = zext i32 %10 to i64
  %22 = zext i32 %4 to i64
  %23 = add nsw i64 %22, -12
  %24 = icmp ult i64 %23, %21
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  store i32 %16, i32* %11, align 8
  %26 = zext i32 %16 to i64
  %27 = icmp ugt i64 %23, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = trunc i64 %23 to i32
  store i32 %29, i32* %11, align 8
  br label %30

30:                                               ; preds = %2, %20, %25, %28
  %31 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16
  %32 = bitcast %union.cc_control_data* %31 to %struct.htcp*
  %33 = bitcast %union.cc_control_data* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 56, i1 false) #8
  %34 = bitcast %union.cc_control_data* %31 to i16*
  store i16 128, i16* %34, align 8
  %35 = getelementptr inbounds %struct.htcp, %struct.htcp* %32, i64 0, i32 1
  store i8 64, i8* %35, align 2
  %36 = trunc i32 %4 to i16
  %37 = getelementptr inbounds %struct.htcp, %struct.htcp* %32, i64 0, i32 5
  store i16 %36, i16* %37, align 4
  %38 = tail call i32 @sctp_get_tick_count() #8
  %39 = getelementptr inbounds %struct.htcp, %struct.htcp* %32, i64 0, i32 3
  store i32 %38, i32* %39, align 4
  %40 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %41 = and i32 %40, 6
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %30
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 0, i8 zeroext 62) #8
  br label %44

44:                                               ; preds = %30, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_htcp_cwnd_update_after_sack(%struct.sctp_tcb*, %struct.sctp_association* nocapture readonly, i32, i32, i32) #0 {
  %6 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 16, i32 0
  %7 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 189
  %8 = load %struct.sctp_nets*, %struct.sctp_nets** %6, align 8
  %9 = icmp eq %struct.sctp_nets* %8, null
  br i1 %9, label %318, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 174
  %12 = icmp eq i32 %4, 0
  %13 = icmp eq i32 %2, 0
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  br label %15

15:                                               ; preds = %10, %314
  %16 = phi %struct.sctp_nets* [ %8, %10 ], [ %316, %314 ]
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %22 = and i32 %21, 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %314, label %24

24:                                               ; preds = %20
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %16, i32 0, i8 zeroext 64) #8
  br label %314

25:                                               ; preds = %15
  %26 = load i8, i8* %11, align 2
  %27 = icmp ne i8 %26, 0
  %28 = and i1 %12, %27
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = load i8, i8* %7, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %318, label %32

32:                                               ; preds = %29, %25
  br i1 %13, label %33, label %40

33:                                               ; preds = %32
  %34 = load i8, i8* %7, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %307, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 52
  %38 = load i8, i8* %37, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %307, label %40

40:                                               ; preds = %36, %32
  %41 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 19
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = icmp ugt i32 %42, %44
  br i1 %45, label %91, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 18
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, %18
  %50 = icmp ult i32 %49, %42
  br i1 %50, label %86, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 44), align 8
  %55 = mul i32 %54, %53
  %56 = icmp ugt i32 %18, %55
  br i1 %56, label %57, label %63

57:                                               ; preds = %51
  %58 = add i32 %55, %42
  store i32 %58, i32* %41, align 8
  %59 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %16, i32 %53, i8 zeroext 4) #8
  br label %69

63:                                               ; preds = %51
  %64 = add i32 %42, %18
  store i32 %64, i32* %41, align 8
  %65 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %63
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %16, i32 %18, i8 zeroext 4) #8
  br label %69

69:                                               ; preds = %68, %63, %62, %57
  %70 = load i32, i32* %14, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %226, label %72

72:                                               ; preds = %69
  %73 = load i32, i32* %41, align 8
  %74 = icmp ugt i32 %73, %70
  br i1 %74, label %75, label %226

75:                                               ; preds = %72
  %76 = zext i32 %73 to i64
  %77 = load i32, i32* %52, align 8
  %78 = zext i32 %77 to i64
  %79 = add nsw i64 %78, -12
  %80 = icmp ult i64 %79, %76
  br i1 %80, label %81, label %226

81:                                               ; preds = %75
  store i32 %70, i32* %41, align 8
  %82 = zext i32 %70 to i64
  %83 = icmp ugt i64 %79, %82
  br i1 %83, label %84, label %226

84:                                               ; preds = %81
  %85 = trunc i64 %79 to i32
  store i32 %85, i32* %41, align 8
  br label %226

86:                                               ; preds = %46
  %87 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %88 = and i32 %87, 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %226, label %90

90:                                               ; preds = %86
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %16, i32 %18, i8 zeroext 31) #8
  br label %226

91:                                               ; preds = %40
  %92 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 10
  %93 = load i32, i32* %92, align 8
  %94 = ashr i32 %93, 3
  %95 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16
  %96 = bitcast %union.cc_control_data* %95 to %struct.htcp*
  %97 = getelementptr inbounds %struct.htcp, %struct.htcp* %96, i64 0, i32 7
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, -1
  %100 = icmp ult i32 %99, %94
  br i1 %100, label %102, label %101

101:                                              ; preds = %91
  store i32 %94, i32* %97, align 4
  br label %102

102:                                              ; preds = %101, %91
  %103 = phi i32 [ %98, %91 ], [ %94, %101 ]
  %104 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 44
  %105 = load i8, i8* %104, align 8
  %106 = icmp eq i8 %105, 0
  %107 = icmp ult i32 %44, 65535
  %108 = and i1 %107, %106
  br i1 %108, label %109, label %136

109:                                              ; preds = %102
  %110 = icmp eq i32 %103, 0
  %111 = tail call i32 @sctp_get_tick_count() #8
  %112 = getelementptr inbounds %struct.htcp, %struct.htcp* %96, i64 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = sub i32 %111, %113
  br i1 %110, label %118, label %115

115:                                              ; preds = %109
  %116 = load i32, i32* %97, align 4
  %117 = udiv i32 %114, %116
  br label %118

118:                                              ; preds = %115, %109
  %119 = phi i32 [ %117, %115 ], [ %114, %109 ]
  %120 = icmp ugt i32 %119, 3
  br i1 %120, label %121, label %136

121:                                              ; preds = %118
  %122 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16, i32 0, i32 2
  %123 = bitcast i64* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = load i32, i32* %97, align 4
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %127, label %128

127:                                              ; preds = %121
  store i32 %125, i32* %123, align 8
  br label %128

128:                                              ; preds = %127, %121
  %129 = phi i32 [ %125, %127 ], [ %124, %121 ]
  %130 = icmp ult i32 %129, %94
  br i1 %130, label %131, label %136

131:                                              ; preds = %128
  %132 = tail call i32 @sctp_msecs_to_ticks(i32 20) #8
  %133 = add i32 %132, %129
  %134 = icmp ugt i32 %94, %133
  br i1 %134, label %136, label %135

135:                                              ; preds = %131
  store i32 %94, i32* %123, align 8
  br label %136

136:                                              ; preds = %135, %131, %128, %118, %102
  %137 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 22
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 4
  %140 = load i32, i32* %139, align 8
  %141 = udiv i32 %138, %140
  %142 = bitcast %union.cc_control_data* %95 to i16*
  %143 = load i16, i16* %142, align 8
  %144 = zext i16 %143 to i32
  %145 = mul i32 %141, %144
  %146 = lshr i32 %145, 7
  %147 = mul i32 %146, %140
  %148 = load i32, i32* %41, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %215, label %150

150:                                              ; preds = %136
  %151 = add i32 %148, %140
  store i32 %151, i32* %41, align 8
  store i32 0, i32* %137, align 4
  %152 = load i32, i32* %14, align 8
  %153 = icmp ne i32 %152, 0
  %154 = icmp ugt i32 %151, %152
  %155 = and i1 %153, %154
  br i1 %155, label %156, label %166

156:                                              ; preds = %150
  %157 = zext i32 %151 to i64
  %158 = zext i32 %140 to i64
  %159 = add nsw i64 %158, -12
  %160 = icmp ult i64 %159, %157
  br i1 %160, label %161, label %166

161:                                              ; preds = %156
  store i32 %152, i32* %41, align 8
  %162 = zext i32 %152 to i64
  %163 = icmp ugt i64 %159, %162
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = trunc i64 %159 to i32
  store i32 %165, i32* %41, align 8
  br label %166

166:                                              ; preds = %164, %161, %156, %150
  %167 = load i32, i32* %97, align 4
  %168 = tail call i32 @sctp_get_tick_count() #8
  %169 = getelementptr inbounds %struct.htcp, %struct.htcp* %96, i64 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = sub i32 %168, %170
  %172 = load i32, i32* @hz, align 4
  %173 = icmp ugt i32 %171, %172
  br i1 %173, label %174, label %183

174:                                              ; preds = %166
  %175 = sub i32 %171, %172
  %176 = mul i32 %175, 10
  %177 = lshr i32 %175, 1
  %178 = mul i32 %177, %177
  %179 = udiv i32 %178, %172
  %180 = add i32 %179, %176
  %181 = udiv i32 %180, %172
  %182 = add i32 %181, 1
  br label %183

183:                                              ; preds = %174, %166
  %184 = phi i32 [ %182, %174 ], [ 1, %166 ]
  %185 = icmp eq i32 %167, 0
  br i1 %185, label %198, label %186

186:                                              ; preds = %183
  %187 = shl i32 %172, 3
  %188 = mul i32 %167, 10
  %189 = udiv i32 %187, %188
  %190 = icmp ugt i32 %189, 4
  %191 = select i1 %190, i32 %189, i32 4
  %192 = icmp ult i32 %191, 80
  %193 = select i1 %192, i32 %191, i32 80
  %194 = shl i32 %184, 3
  %195 = udiv i32 %194, %193
  %196 = icmp ugt i32 %193, %194
  %197 = select i1 %196, i32 %195, i32 1
  br label %198

198:                                              ; preds = %186, %183
  %199 = phi i32 [ %197, %186 ], [ %184, %183 ]
  %200 = shl i32 %199, 1
  %201 = getelementptr inbounds %struct.htcp, %struct.htcp* %96, i64 0, i32 1
  %202 = load i8, i8* %201, align 2
  %203 = zext i8 %202 to i32
  %204 = sub nsw i32 128, %203
  %205 = mul i32 %204, %200
  %206 = trunc i32 %205 to i16
  %207 = and i32 %205, 65534
  %208 = icmp eq i32 %207, 0
  %209 = select i1 %208, i16 %206, i16 128
  store i16 %209, i16* %142, align 4
  %210 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %222, label %213

213:                                              ; preds = %198
  %214 = load i32, i32* %139, align 8
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %16, i32 %214, i8 zeroext 5) #8
  br label %222

215:                                              ; preds = %136
  %216 = load i32, i32* %17, align 8
  %217 = add i32 %216, %138
  store i32 %217, i32* %137, align 4
  %218 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %219 = and i32 %218, 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %222, label %221

221:                                              ; preds = %215
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %16, i32 %216, i8 zeroext 32) #8
  br label %222

222:                                              ; preds = %221, %215, %213, %198
  %223 = load i32, i32* %139, align 8
  %224 = trunc i32 %223 to i16
  %225 = getelementptr inbounds %struct.htcp, %struct.htcp* %96, i64 0, i32 5
  store i16 %224, i16* %225, align 4
  br label %226

226:                                              ; preds = %69, %72, %75, %81, %84, %86, %90, %222
  %227 = tail call i32 @sctp_get_tick_count() #8
  %228 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 44
  %229 = load i8, i8* %228, align 8
  switch i8 %229, label %230 [
    i8 0, label %232
    i8 1, label %238
  ]

230:                                              ; preds = %226
  %231 = load i32, i32* %17, align 8
  br label %244

232:                                              ; preds = %226
  %233 = load i32, i32* %17, align 8
  %234 = trunc i32 %233 to i16
  %235 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16
  %236 = bitcast %union.cc_control_data* %235 to %struct.htcp*
  %237 = getelementptr inbounds %struct.htcp, %struct.htcp* %236, i64 0, i32 5
  store i16 %234, i16* %237, align 4
  br label %244

238:                                              ; preds = %226
  %239 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16
  %240 = bitcast %union.cc_control_data* %239 to %struct.htcp*
  %241 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16, i32 0, i32 1
  %242 = bitcast i64* %241 to i32*
  store i32 0, i32* %242, align 8
  %243 = getelementptr inbounds %struct.htcp, %struct.htcp* %240, i64 0, i32 15
  store i32 %227, i32* %243, align 4
  br label %314

244:                                              ; preds = %232, %230
  %245 = phi i32 [ %231, %230 ], [ %233, %232 ]
  %246 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16
  %247 = bitcast %union.cc_control_data* %246 to %struct.htcp*
  %248 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16, i32 0, i32 1
  %249 = bitcast i64* %248 to i32*
  %250 = load i32, i32* %249, align 8
  %251 = add i32 %250, %245
  store i32 %251, i32* %249, align 8
  %252 = load i32, i32* %41, align 8
  %253 = bitcast %union.cc_control_data* %246 to i16*
  %254 = load i16, i16* %253, align 8
  %255 = lshr i16 %254, 7
  %256 = icmp eq i16 %255, 0
  %257 = select i1 %256, i16 1, i16 %255
  %258 = zext i16 %257 to i32
  %259 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 4
  %260 = load i32, i32* %259, align 8
  %261 = mul i32 %260, %258
  %262 = sub i32 %252, %261
  %263 = icmp ult i32 %251, %262
  br i1 %263, label %314, label %264

264:                                              ; preds = %244
  %265 = getelementptr inbounds %struct.htcp, %struct.htcp* %247, i64 0, i32 15
  %266 = load i32, i32* %265, align 4
  %267 = sub i32 %227, %266
  %268 = getelementptr inbounds %struct.htcp, %struct.htcp* %247, i64 0, i32 7
  %269 = load i32, i32* %268, align 4
  %270 = add i32 %269, -1
  %271 = icmp ult i32 %270, %267
  br i1 %271, label %272, label %314

272:                                              ; preds = %264
  %273 = udiv i32 %251, %260
  %274 = load i32, i32* @hz, align 4
  %275 = mul i32 %274, %273
  %276 = udiv i32 %275, %267
  %277 = tail call i32 @sctp_get_tick_count() #8
  %278 = getelementptr inbounds %struct.htcp, %struct.htcp* %247, i64 0, i32 3
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 %277, %279
  %281 = load i32, i32* %268, align 4
  %282 = udiv i32 %280, %281
  %283 = icmp ult i32 %282, 4
  %284 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16, i32 0, i32 5
  %285 = bitcast i64* %284 to i32*
  br i1 %283, label %286, label %290

286:                                              ; preds = %272
  store i32 %276, i32* %285, align 8
  %287 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16, i32 0, i32 4
  %288 = bitcast i64* %287 to i32*
  store i32 %276, i32* %288, align 8
  %289 = getelementptr inbounds %struct.htcp, %struct.htcp* %247, i64 0, i32 11
  store i32 %276, i32* %289, align 4
  br label %306

290:                                              ; preds = %272
  %291 = load i32, i32* %285, align 8
  %292 = mul i32 %291, 3
  %293 = add i32 %292, %276
  %294 = lshr i32 %293, 2
  store i32 %294, i32* %285, align 8
  %295 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 16, i32 0, i32 4
  %296 = bitcast i64* %295 to i32*
  %297 = load i32, i32* %296, align 8
  %298 = icmp ugt i32 %294, %297
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  store i32 %294, i32* %296, align 8
  br label %300

300:                                              ; preds = %299, %290
  %301 = phi i32 [ %294, %299 ], [ %297, %290 ]
  %302 = getelementptr inbounds %struct.htcp, %struct.htcp* %247, i64 0, i32 11
  %303 = load i32, i32* %302, align 4
  %304 = icmp ugt i32 %303, %301
  br i1 %304, label %305, label %306

305:                                              ; preds = %300
  store i32 %301, i32* %302, align 4
  br label %306

306:                                              ; preds = %305, %300, %286
  store i32 0, i32* %249, align 8
  store i32 %227, i32* %265, align 4
  br label %314

307:                                              ; preds = %36, %33
  %308 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %309 = and i32 %308, 4
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %314, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 4
  %313 = load i32, i32* %312, align 8
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %16, i32 %313, i8 zeroext 65) #8
  br label %314

314:                                              ; preds = %306, %264, %244, %238, %20, %307, %311, %24
  %315 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 0, i32 0
  %316 = load %struct.sctp_nets*, %struct.sctp_nets** %315, align 8
  %317 = icmp eq %struct.sctp_nets* %316, null
  br i1 %317, label %318, label %15

318:                                              ; preds = %29, %314, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_htcp_cwnd_update_after_fr(%struct.sctp_tcb*, %struct.sctp_association* nocapture) #0 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 16, i32 0
  %4 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  %5 = icmp eq %struct.sctp_nets* %4, null
  br i1 %5, label %93, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 174
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 189
  %9 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 195
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 21, i32 0
  %11 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 64
  %12 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 56
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  br label %14

14:                                               ; preds = %6, %89
  %15 = phi %struct.sctp_nets* [ %4, %6 ], [ %91, %89 ]
  %16 = load i8, i8* %7, align 2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = load i8, i8* %8, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %83, label %21

21:                                               ; preds = %18, %14
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 23
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %89, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 19
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 16
  %29 = bitcast %union.cc_control_data* %28 to %struct.htcp*
  %30 = getelementptr inbounds %struct.htcp, %struct.htcp* %29, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 16, i32 0, i32 0, i32 1
  %33 = bitcast i64* %32 to i32*
  store i32 %31, i32* %33, align 4
  %34 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 16, i32 0, i32 2
  %35 = bitcast i64* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.htcp, %struct.htcp* %29, i64 0, i32 9
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %struct.htcp, %struct.htcp* %29, i64 0, i32 13
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 16, i32 0, i32 3
  %41 = bitcast i64* %40 to i32*
  store i32 %39, i32* %41, align 4
  %42 = tail call i32 @sctp_get_tick_count() #8
  store i32 %42, i32* %30, align 4
  %43 = tail call fastcc i32 @htcp_recalc_ssthresh(%struct.sctp_nets* nonnull %15)
  %44 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 5
  store i32 %43, i32* %44, align 4
  store i32 %43, i32* %26, align 8
  %45 = load i32, i32* %9, align 8
  %46 = icmp ne i32 %45, 0
  %47 = icmp ugt i32 %43, %45
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %61

49:                                               ; preds = %25
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = zext i32 %52 to i64
  %54 = add nsw i64 %53, -12
  %55 = icmp ult i64 %54, %50
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  store i32 %45, i32* %26, align 8
  %57 = zext i32 %45 to i64
  %58 = icmp ugt i64 %54, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = trunc i64 %54 to i32
  store i32 %60, i32* %26, align 8
  br label %61

61:                                               ; preds = %25, %49, %56, %59
  %62 = phi i32 [ %43, %25 ], [ %43, %49 ], [ %45, %56 ], [ %60, %59 ]
  %63 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = sub i32 %62, %27
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %15, i32 %67, i8 zeroext 1) #8
  br label %68

68:                                               ; preds = %61, %66
  %69 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %10, align 8
  %70 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 22
  store i32 0, i32* %70, align 4
  store i8 1, i8* %7, align 2
  %71 = icmp eq %struct.sctp_tmit_chunk* %69, null
  %72 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %69, i64 0, i32 0, i32 0, i32 0
  %73 = select i1 %71, i32* %12, i32* %72
  %74 = select i1 %71, i32* %12, i32* %72
  %75 = load i32, i32* %73, align 8
  %76 = add i32 %75, -1
  store i32 %76, i32* %11, align 4
  %77 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 42
  store i8 1, i8* %77, align 2
  %78 = load i32, i32* %74, align 8
  %79 = add i32 %78, -1
  %80 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 29
  store i32 %79, i32* %80, align 8
  %81 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %13, align 8
  tail call void @sctp_timer_stop(i32 1, %struct.sctp_inpcb* %81, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %15, i32 -1073741821) #8
  %82 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %13, align 8
  tail call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %82, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %15) #8
  br label %89

83:                                               ; preds = %18
  %84 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 23
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 92), i32 1 seq_cst
  br label %89

89:                                               ; preds = %21, %83, %68, %87
  %90 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 0, i32 0
  %91 = load %struct.sctp_nets*, %struct.sctp_nets** %90, align 8
  %92 = icmp eq %struct.sctp_nets* %91, null
  br i1 %92, label %93, label %14

93:                                               ; preds = %89, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_htcp_cwnd_update_after_timeout(%struct.sctp_tcb*, %struct.sctp_nets*) #0 {
  %3 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16
  %6 = bitcast %union.cc_control_data* %5 to %struct.htcp*
  %7 = getelementptr inbounds %struct.htcp, %struct.htcp* %6, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to i32*
  store i32 %8, i32* %10, align 4
  %11 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 2
  %12 = bitcast i64* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.htcp, %struct.htcp* %6, i64 0, i32 9
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %struct.htcp, %struct.htcp* %6, i64 0, i32 13
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 3
  %18 = bitcast i64* %17 to i32*
  store i32 %16, i32* %18, align 4
  %19 = tail call i32 @sctp_get_tick_count() #8
  store i32 %19, i32* %7, align 4
  %20 = tail call fastcc i32 @htcp_recalc_ssthresh(%struct.sctp_nets* %1)
  %21 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %3, align 8
  %24 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 22
  store i32 0, i32* %24, align 4
  %25 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %2
  %29 = sub i32 %23, %4
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %29, i8 zeroext 2) #8
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_htcp_cwnd_update_after_ecn_echo(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32) #0 {
  %5 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %8, label %58

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16
  %10 = bitcast %union.cc_control_data* %9 to %struct.htcp*
  %11 = getelementptr inbounds %struct.htcp, %struct.htcp* %10, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 0, i32 1
  %14 = bitcast i64* %13 to i32*
  store i32 %12, i32* %14, align 4
  %15 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 2
  %16 = bitcast i64* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.htcp, %struct.htcp* %10, i64 0, i32 9
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %struct.htcp, %struct.htcp* %10, i64 0, i32 13
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 3
  %22 = bitcast i64* %21 to i32*
  store i32 %20, i32* %22, align 4
  %23 = tail call i32 @sctp_get_tick_count() #8
  store i32 %23, i32* %11, align 4
  %24 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 103), i32 1 seq_cst
  %25 = tail call fastcc i32 @htcp_recalc_ssthresh(%struct.sctp_nets* %1)
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp ult i32 %25, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %8
  store i32 %28, i32* %26, align 4
  %31 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 13
  %32 = load i32, i32* %31, align 8
  %33 = shl i32 %32, 1
  store i32 %33, i32* %31, align 8
  br label %34

34:                                               ; preds = %30, %8
  %35 = phi i32 [ %28, %30 ], [ %25, %8 ]
  store i32 %35, i32* %5, align 8
  %36 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  %37 = load i32, i32* %36, align 8
  %38 = icmp ne i32 %37, 0
  %39 = icmp ugt i32 %35, %37
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %51

41:                                               ; preds = %34
  %42 = zext i32 %35 to i64
  %43 = zext i32 %28 to i64
  %44 = add nsw i64 %43, -12
  %45 = icmp ult i64 %44, %42
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  store i32 %37, i32* %5, align 8
  %47 = zext i32 %37 to i64
  %48 = icmp ugt i64 %44, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = trunc i64 %44 to i32
  store i32 %50, i32* %5, align 8
  br label %51

51:                                               ; preds = %34, %41, %46, %49
  %52 = phi i32 [ %35, %34 ], [ %35, %41 ], [ %37, %46 ], [ %50, %49 ]
  %53 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  %57 = sub i32 %52, %6
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %57, i8 zeroext 6) #8
  br label %58

58:                                               ; preds = %51, %56, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_set_rtcc_initial_cc_param(%struct.sctp_tcb*, %struct.sctp_nets*) #0 {
  tail call void @sctp_set_initial_cc_param(%struct.sctp_tcb* %0, %struct.sctp_nets* %1)
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 193
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 1
  %5 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 6
  %6 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 13
  store i8 0, i8* %6, align 2
  %7 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  %8 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 60), align 8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 11
  store i8 %10, i8* %11, align 4
  %12 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 61), align 4
  %13 = trunc i32 %12 to i16
  %14 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 9
  store i16 %13, i16* %14, align 8
  %15 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 62), align 8
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 12
  store i8 %16, i8* %17, align 1
  %18 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 10
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 14
  store i8 0, i8* %19, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_update_rtcc_after_sack(%struct.sctp_tcb*, %struct.sctp_association* nocapture readonly, i32, i32, i32) #0 {
  tail call fastcc void @sctp_cwnd_update_after_sack_common(%struct.sctp_tcb* %0, %struct.sctp_association* %1, i32 %2, i32 %4, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_update_rtcc_after_ecn_echo(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32) #0 {
  %5 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 56
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 1
  br i1 %9, label %10, label %55

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 12
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %55, label %14

14:                                               ; preds = %10
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 21
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %18, %6
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = mul i32 %22, %3
  %24 = sub i32 %18, %23
  br label %30

25:                                               ; preds = %16
  %26 = lshr i32 %6, 1
  %27 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = mul i32 %28, %3
  br label %30

30:                                               ; preds = %25, %20
  %31 = phi i32 [ %29, %25 ], [ %23, %20 ]
  %32 = phi i32 [ %26, %25 ], [ %24, %20 ]
  store i32 %32, i32* %5, align 8
  %33 = sub i32 %32, %31
  %34 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %33, i32* %34, align 4
  %35 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %53, label %38

38:                                               ; preds = %30
  %39 = sub i32 %32, %6
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %39, i8 zeroext 6) #8
  br label %53

40:                                               ; preds = %14
  %41 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = mul i32 %42, %3
  %44 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 %45, %43
  store i32 %46, i32* %44, align 4
  %47 = sub i32 %6, %43
  store i32 %47, i32* %5, align 8
  %48 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %40
  %52 = sub i32 0, %43
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %52, i8 zeroext 6) #8
  br label %53

53:                                               ; preds = %51, %40, %38, %30
  %54 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 103), i32 1 seq_cst
  br label %76

55:                                               ; preds = %10, %4
  %56 = icmp eq i32 %2, 0
  br i1 %56, label %57, label %76

57:                                               ; preds = %55
  %58 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 103), i32 1 seq_cst
  %59 = load i32, i32* %5, align 8
  %60 = lshr i32 %59, 1
  %61 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 5
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %63 = load i32, i32* %62, align 8
  %64 = icmp ult i32 %60, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %57
  store i32 %63, i32* %61, align 4
  %66 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 13
  %67 = load i32, i32* %66, align 8
  %68 = shl i32 %67, 1
  store i32 %68, i32* %66, align 8
  br label %69

69:                                               ; preds = %65, %57
  %70 = phi i32 [ %63, %65 ], [ %60, %57 ]
  store i32 %70, i32* %5, align 8
  %71 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = sub i32 %70, %6
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* %1, i32 %75, i8 zeroext 6) #8
  br label %76

76:                                               ; preds = %53, %55, %69, %74
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @sctp_cwnd_update_rtcc_packet_transmitted(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* nocapture) #2 {
  %3 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 13
  %4 = load i8, i8* %3, align 2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 0
  %8 = tail call i32 @gettimeofday(%struct.timeval* %7, i8* null) #8
  store i8 2, i8* %3, align 2
  br label %9

9:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_cwnd_update_rtcc_tsn_acknowledged(%struct.sctp_nets* nocapture, %struct.sctp_tmit_chunk* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = zext i16 %4 to i64
  %6 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %0, i64 0, i32 16, i32 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  store i64 %8, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_cwnd_new_rtcc_transmission_begins(%struct.sctp_tcb* nocapture readonly, %struct.sctp_nets* nocapture) #1 {
  %3 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %51, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 6
  %8 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 13
  store i8 0, i8* %8, align 2
  %9 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 9
  %10 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  %11 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  %12 = load i16, i16* %9, align 8
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 8
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 10
  store i16 0, i16* %16, align 2
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 14
  store i8 0, i8* %17, align 1
  br label %18

18:                                               ; preds = %6, %14
  %19 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 11
  %20 = load i8, i8* %19, align 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %51, label %22

22:                                               ; preds = %18
  %23 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 68), align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = shl i32 %27, 2
  %29 = shl i32 %27, 1
  %30 = icmp ugt i32 %29, 4380
  %31 = select i1 %30, i32 %29, i32 4380
  %32 = icmp ugt i32 %28, %31
  %33 = select i1 %32, i32 %31, i32 %28
  br label %45

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 147
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %36, 0
  %38 = icmp ugt i32 %23, %36
  %39 = and i1 %37, %38
  %40 = select i1 %39, i32 %36, i32 %23
  %41 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %42, -12
  %44 = mul i32 %40, %43
  br label %45

45:                                               ; preds = %25, %34
  %46 = phi i32 [ %44, %34 ], [ %33, %25 ]
  %47 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 19
  %48 = load i32, i32* %47, align 8
  %49 = icmp ugt i32 %48, %46
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  store i32 %46, i32* %47, align 8
  br label %51

51:                                               ; preds = %45, %50, %18, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_cwnd_prepare_rtcc_net_for_sack(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* nocapture) #0 {
  %3 = alloca <2 x i64>, align 16
  %4 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 13
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = bitcast <2 x i64>* %3 to %struct.timeval*
  %9 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 16, i1 false)
  %11 = call i32 @gettimeofday(%struct.timeval* nonnull %8, i8* null) #8
  %12 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 0, i32 0
  %13 = bitcast i64* %12 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = load <2 x i64>, <2 x i64>* %3, align 16
  %16 = sub nsw <2 x i64> %15, %14
  store <2 x i64> %16, <2 x i64>* %3, align 16
  %17 = extractelement <2 x i64> %16, i32 1
  %18 = icmp slt i64 %17, 0
  %19 = extractelement <2 x i64> %16, i32 0
  br i1 %18, label %20, label %24

20:                                               ; preds = %7
  %21 = add nsw <2 x i64> %16, <i64 -1, i64 1000000>
  store <2 x i64> %21, <2 x i64>* %3, align 16
  %22 = extractelement <2 x i64> %21, i32 0
  %23 = extractelement <2 x i64> %21, i32 1
  br label %24

24:                                               ; preds = %20, %7
  %25 = phi i64 [ %23, %20 ], [ %17, %7 ]
  %26 = phi i64 [ %22, %20 ], [ %19, %7 ]
  %27 = mul nsw i64 %26, 1000000
  %28 = add nsw i64 %27, %25
  %29 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 5
  store i64 %28, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br label %30

30:                                               ; preds = %2, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @sctp_cwnd_rtcc_socket_option(%struct.sctp_tcb* nocapture readonly, i32, %struct.sctp_cc_option* nocapture) #1 {
  %4 = icmp eq i32 %1, 1
  %5 = getelementptr inbounds %struct.sctp_cc_option, %struct.sctp_cc_option* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 8192
  br i1 %4, label %8, label %68

8:                                                ; preds = %3
  br i1 %7, label %9, label %31

9:                                                ; preds = %8
  %10 = getelementptr inbounds %struct.sctp_cc_option, %struct.sctp_cc_option* %2, i64 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, 2
  br i1 %12, label %13, label %97

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %15 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %16 = icmp eq %struct.sctp_nets* %15, null
  br i1 %16, label %97, label %17

17:                                               ; preds = %13
  %18 = trunc i32 %11 to i8
  %19 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 16, i32 0, i32 11
  store i8 %18, i8* %19, align 4
  %20 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 0, i32 0
  %21 = load %struct.sctp_nets*, %struct.sctp_nets** %20, align 8
  %22 = icmp eq %struct.sctp_nets* %21, null
  br i1 %22, label %97, label %23

23:                                               ; preds = %17, %23
  %24 = phi %struct.sctp_nets* [ %29, %23 ], [ %21, %17 ]
  %25 = load i32, i32* %10, align 4
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %24, i64 0, i32 16, i32 0, i32 11
  store i8 %26, i8* %27, align 4
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %24, i64 0, i32 0, i32 0
  %29 = load %struct.sctp_nets*, %struct.sctp_nets** %28, align 8
  %30 = icmp eq %struct.sctp_nets* %29, null
  br i1 %30, label %97, label %23

31:                                               ; preds = %8
  switch i32 %6, label %97 [
    i32 8193, label %32
    i32 8194, label %54
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds %struct.sctp_cc_option, %struct.sctp_cc_option* %2, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %36, label %97

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %38 = load %struct.sctp_nets*, %struct.sctp_nets** %37, align 8
  %39 = icmp eq %struct.sctp_nets* %38, null
  br i1 %39, label %97, label %40

40:                                               ; preds = %36
  %41 = trunc i32 %34 to i8
  %42 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %38, i64 0, i32 16, i32 0, i32 12
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %38, i64 0, i32 0, i32 0
  %44 = load %struct.sctp_nets*, %struct.sctp_nets** %43, align 8
  %45 = icmp eq %struct.sctp_nets* %44, null
  br i1 %45, label %97, label %46

46:                                               ; preds = %40, %46
  %47 = phi %struct.sctp_nets* [ %52, %46 ], [ %44, %40 ]
  %48 = load i32, i32* %33, align 4
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %47, i64 0, i32 16, i32 0, i32 12
  store i8 %49, i8* %50, align 1
  %51 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %47, i64 0, i32 0, i32 0
  %52 = load %struct.sctp_nets*, %struct.sctp_nets** %51, align 8
  %53 = icmp eq %struct.sctp_nets* %52, null
  br i1 %53, label %97, label %46

54:                                               ; preds = %31
  %55 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %56 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  %57 = icmp eq %struct.sctp_nets* %56, null
  br i1 %57, label %97, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.sctp_cc_option, %struct.sctp_cc_option* %2, i64 0, i32 1, i32 1
  br label %60

60:                                               ; preds = %58, %60
  %61 = phi %struct.sctp_nets* [ %56, %58 ], [ %66, %60 ]
  %62 = load i32, i32* %59, align 4
  %63 = trunc i32 %62 to i16
  %64 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %61, i64 0, i32 16, i32 0, i32 9
  store i16 %63, i16* %64, align 8
  %65 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %61, i64 0, i32 0, i32 0
  %66 = load %struct.sctp_nets*, %struct.sctp_nets** %65, align 8
  %67 = icmp eq %struct.sctp_nets* %66, null
  br i1 %67, label %97, label %60

68:                                               ; preds = %3
  br i1 %7, label %69, label %78

69:                                               ; preds = %68
  %70 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %71 = load %struct.sctp_nets*, %struct.sctp_nets** %70, align 8
  %72 = icmp eq %struct.sctp_nets* %71, null
  br i1 %72, label %97, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %71, i64 0, i32 16, i32 0, i32 11
  %75 = load i8, i8* %74, align 4
  %76 = zext i8 %75 to i32
  %77 = getelementptr inbounds %struct.sctp_cc_option, %struct.sctp_cc_option* %2, i64 0, i32 1, i32 1
  store i32 %76, i32* %77, align 4
  br label %97

78:                                               ; preds = %68
  switch i32 %6, label %97 [
    i32 8193, label %79
    i32 8194, label %88
  ]

79:                                               ; preds = %78
  %80 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %81 = load %struct.sctp_nets*, %struct.sctp_nets** %80, align 8
  %82 = icmp eq %struct.sctp_nets* %81, null
  br i1 %82, label %97, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %81, i64 0, i32 16, i32 0, i32 12
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = getelementptr inbounds %struct.sctp_cc_option, %struct.sctp_cc_option* %2, i64 0, i32 1, i32 1
  store i32 %86, i32* %87, align 4
  br label %97

88:                                               ; preds = %78
  %89 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %90 = load %struct.sctp_nets*, %struct.sctp_nets** %89, align 8
  %91 = icmp eq %struct.sctp_nets* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %90, i64 0, i32 16, i32 0, i32 9
  %94 = load i16, i16* %93, align 8
  %95 = zext i16 %94 to i32
  %96 = getelementptr inbounds %struct.sctp_cc_option, %struct.sctp_cc_option* %2, i64 0, i32 1, i32 1
  store i32 %95, i32* %96, align 4
  br label %97

97:                                               ; preds = %60, %46, %23, %40, %17, %54, %36, %13, %32, %9, %83, %92, %73, %78, %88, %79, %69, %31
  %98 = phi i32 [ 22, %9 ], [ 22, %32 ], [ 22, %31 ], [ 14, %69 ], [ 14, %79 ], [ 14, %88 ], [ 22, %78 ], [ 0, %73 ], [ 0, %92 ], [ 0, %83 ], [ 0, %13 ], [ 0, %36 ], [ 0, %54 ], [ 0, %17 ], [ 0, %40 ], [ 0, %23 ], [ 0, %46 ], [ 0, %60 ]
  ret i32 %98
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @sctp_rtt_rtcc_calculated(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* nocapture, %struct.timeval* nocapture readnone) #3 {
  %4 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 16, i32 0, i32 15
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @sctp_log_cwnd(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i8 zeroext) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @sctp_cwnd_update_after_sack_common(%struct.sctp_tcb*, %struct.sctp_association* nocapture readonly, i32, i32, i32) unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 189
  %7 = load i8, i8* %6, align 1
  %8 = add i8 %7, -2
  %9 = icmp ult i8 %8, 3
  br i1 %9, label %10, label %63

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %12 = load %struct.sctp_nets*, %struct.sctp_nets** %11, align 8
  %13 = icmp eq %struct.sctp_nets* %12, null
  br i1 %13, label %63, label %14

14:                                               ; preds = %10, %48
  %15 = phi %struct.sctp_nets* [ %53, %48 ], [ %12, %10 ]
  %16 = phi i64 [ %51, %48 ], [ 0, %10 ]
  %17 = phi i64 [ %50, %48 ], [ 0, %10 ]
  %18 = phi i64 [ %49, %48 ], [ 0, %10 ]
  %19 = phi i32 [ %22, %48 ], [ 0, %10 ]
  %20 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, %19
  %23 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 10
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %48, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 19
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = zext i32 %24 to i64
  %31 = udiv i32 %28, %24
  %32 = zext i32 %31 to i64
  %33 = add i64 %18, %32
  %34 = shl nuw nsw i64 %29, 16
  %35 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = mul nuw i64 %37, %30
  %39 = udiv i64 %34, %38
  %40 = add i64 %39, %17
  %41 = shl i64 %29, 40
  %42 = mul i32 %24, %24
  %43 = zext i32 %42 to i64
  %44 = mul nuw i64 %37, %43
  %45 = udiv i64 %41, %44
  %46 = icmp ugt i64 %45, %16
  %47 = select i1 %46, i64 %45, i64 %16
  br label %48

48:                                               ; preds = %14, %26
  %49 = phi i64 [ %33, %26 ], [ %18, %14 ]
  %50 = phi i64 [ %40, %26 ], [ %17, %14 ]
  %51 = phi i64 [ %47, %26 ], [ %16, %14 ]
  %52 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 0, i32 0
  %53 = load %struct.sctp_nets*, %struct.sctp_nets** %52, align 8
  %54 = icmp eq %struct.sctp_nets* %53, null
  br i1 %54, label %55, label %14

55:                                               ; preds = %48
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = mul i64 %50, %50
  %59 = udiv i64 %51, %58
  br label %60

60:                                               ; preds = %55, %57
  %61 = phi i64 [ %59, %57 ], [ 1, %55 ]
  %62 = icmp eq i32 %22, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %10, %5, %60
  %64 = phi i64 [ %61, %60 ], [ 1, %5 ], [ 1, %10 ]
  %65 = phi i64 [ %49, %60 ], [ 0, %5 ], [ 0, %10 ]
  br label %66

66:                                               ; preds = %60, %63
  %67 = phi i64 [ %64, %63 ], [ %61, %60 ]
  %68 = phi i64 [ %65, %63 ], [ %49, %60 ]
  %69 = phi i32 [ 1, %63 ], [ %22, %60 ]
  %70 = icmp eq i64 %68, 0
  %71 = select i1 %70, i64 1, i64 %68
  %72 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 16, i32 0
  %73 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 189
  %74 = load %struct.sctp_nets*, %struct.sctp_nets** %72, align 8
  %75 = icmp eq %struct.sctp_nets* %74, null
  br i1 %75, label %638, label %76

76:                                               ; preds = %66
  %77 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 174
  %78 = icmp eq i32 %3, 0
  %79 = icmp eq i32 %4, 0
  %80 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 195
  %81 = icmp eq i32 %2, 0
  %82 = zext i32 %69 to i64
  %83 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 195
  br label %84

84:                                               ; preds = %76, %634
  %85 = phi %struct.sctp_nets* [ %74, %76 ], [ %636, %634 ]
  %86 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 23
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %91 = and i32 %90, 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %634, label %93

93:                                               ; preds = %89
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %85, i32 0, i8 zeroext 64) #8
  br label %634

94:                                               ; preds = %84
  %95 = load i8, i8* %77, align 2
  %96 = icmp ne i8 %95, 0
  %97 = and i1 %78, %96
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = load i8, i8* %73, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %638, label %101

101:                                              ; preds = %98, %94
  br i1 %79, label %428, label %102

102:                                              ; preds = %101
  %103 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 13
  %104 = load i8, i8* %103, align 2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %428, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 5
  %108 = load i64, i64* %107, align 8
  %109 = icmp ugt i64 %108, 999
  %110 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 3
  %111 = load i64, i64* %110, align 8
  br i1 %109, label %112, label %115

112:                                              ; preds = %106
  %113 = udiv i64 %108, 1000
  %114 = udiv i64 %111, %113
  br label %115

115:                                              ; preds = %106, %112
  %116 = phi i64 [ %114, %112 ], [ %111, %106 ]
  %117 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %419, label %120

120:                                              ; preds = %115
  %121 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 58), align 8
  %122 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 15
  %123 = load i8, i8* %122, align 8
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %150, label %125

125:                                              ; preds = %120
  store i8 0, i8* %122, align 8
  %126 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 6
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %111, %127
  store i64 %111, i64* %126, align 8
  %129 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 12
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %147, label %132

132:                                              ; preds = %125
  %133 = icmp ugt i64 %130, 999
  br i1 %133, label %134, label %144

134:                                              ; preds = %132
  %135 = udiv i64 %130, 1000
  %136 = udiv i64 %128, %135
  %137 = icmp ugt i64 %136, %116
  br i1 %137, label %153, label %138

138:                                              ; preds = %134
  %139 = zext i32 %121 to i64
  %140 = lshr i64 %136, %139
  %141 = add i64 %140, %136
  %142 = icmp ult i64 %141, %116
  %143 = select i1 %142, i8 1, i8 2
  br label %153

144:                                              ; preds = %132
  %145 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 16
  %146 = load i8, i8* %145, align 1
  br label %153

147:                                              ; preds = %125
  %148 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 16
  %149 = load i8, i8* %148, align 1
  br label %153

150:                                              ; preds = %120
  %151 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 16
  %152 = load i8, i8* %151, align 1
  br label %153

153:                                              ; preds = %150, %147, %144, %138, %134
  %154 = phi i8 [ %146, %144 ], [ %149, %147 ], [ %152, %150 ], [ 3, %134 ], [ %143, %138 ]
  %155 = zext i32 %121 to i64
  %156 = lshr i64 %118, %155
  %157 = add i64 %156, %118
  %158 = icmp ult i64 %157, %116
  br i1 %158, label %159, label %175

159:                                              ; preds = %153
  %160 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 9
  %161 = load i16, i16* %160, align 8
  %162 = icmp eq i16 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 14
  store i8 0, i8* %164, align 1
  %165 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 10
  store i16 0, i16* %165, align 2
  %166 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 8
  store i32 0, i32* %166, align 4
  br label %167

167:                                              ; preds = %159, %163
  store i64 %116, i64* %117, align 8
  %168 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 12
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 2
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %172 = load i32, i32* %171, align 8
  %173 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 7
  store i32 %172, i32* %173, align 8
  %174 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 16
  store i8 %154, i8* %174, align 1
  br label %428

175:                                              ; preds = %153
  %176 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 2
  %177 = load i64, i64* %176, align 8
  %178 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 59), align 4
  %179 = zext i32 %178 to i64
  %180 = lshr i64 %177, %179
  %181 = sub i64 %118, %156
  %182 = icmp ugt i64 %181, %116
  %183 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 12
  %184 = load i64, i64* %183, align 8
  %185 = add i64 %180, %177
  %186 = icmp ugt i64 %184, %185
  br i1 %182, label %187, label %313

187:                                              ; preds = %175
  br i1 %186, label %188, label %237

188:                                              ; preds = %187
  %189 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %190 = load i32, i32* %189, align 8
  %191 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 7
  %192 = load i32, i32* %191, align 8
  %193 = icmp ule i32 %190, %192
  %194 = icmp eq i8 %154, 1
  %195 = or i1 %194, %193
  br i1 %195, label %204, label %196

196:                                              ; preds = %188
  %197 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 11
  %198 = load i8, i8* %197, align 4
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %413, label %200

200:                                              ; preds = %196
  %201 = add i32 %190, -1
  %202 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 5
  store i32 %201, i32* %202, align 4
  %203 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 22
  store i32 0, i32* %203, align 4
  br label %413

204:                                              ; preds = %188
  %205 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 9
  %206 = load i16, i16* %205, align 8
  %207 = icmp eq i16 %206, 0
  br i1 %207, label %307, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 8
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, 0
  %212 = icmp eq i8 %154, 3
  %213 = or i1 %212, %211
  br i1 %213, label %234, label %214

214:                                              ; preds = %208
  %215 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %216 = load i32, i32* %215, align 8
  %217 = add i32 %216, %190
  store i32 %217, i32* %189, align 8
  %218 = load i32, i32* %80, align 8
  %219 = icmp ne i32 %218, 0
  %220 = icmp ugt i32 %217, %218
  %221 = and i1 %219, %220
  br i1 %221, label %222, label %232

222:                                              ; preds = %214
  %223 = zext i32 %217 to i64
  %224 = zext i32 %216 to i64
  %225 = add nsw i64 %224, -12
  %226 = icmp ult i64 %225, %223
  br i1 %226, label %227, label %232

227:                                              ; preds = %222
  store i32 %218, i32* %189, align 8
  %228 = zext i32 %218 to i64
  %229 = icmp ugt i64 %225, %228
  br i1 %229, label %230, label %232

230:                                              ; preds = %227
  %231 = trunc i64 %225 to i32
  store i32 %231, i32* %189, align 8
  br label %232

232:                                              ; preds = %230, %227, %222, %214
  %233 = add i32 %210, -1
  store i32 %233, i32* %209, align 4
  br label %234

234:                                              ; preds = %232, %208
  %235 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 14
  store i8 2, i8* %235, align 1
  %236 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 10
  store i16 0, i16* %236, align 2
  br label %307

237:                                              ; preds = %187
  %238 = sub i64 %177, %180
  %239 = icmp ult i64 %184, %238
  %240 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 9
  %241 = load i16, i16* %240, align 8
  %242 = icmp ne i16 %241, 0
  br i1 %239, label %243, label %275

243:                                              ; preds = %237
  br i1 %242, label %244, label %307

244:                                              ; preds = %243
  %245 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 8
  %246 = load i32, i32* %245, align 4
  %247 = icmp eq i32 %246, 0
  %248 = icmp eq i8 %154, 3
  %249 = or i1 %248, %247
  br i1 %249, label %272, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %252 = load i32, i32* %251, align 8
  %253 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %254 = load i32, i32* %253, align 8
  %255 = add i32 %254, %252
  store i32 %255, i32* %253, align 8
  %256 = load i32, i32* %80, align 8
  %257 = icmp ne i32 %256, 0
  %258 = icmp ugt i32 %255, %256
  %259 = and i1 %257, %258
  br i1 %259, label %260, label %270

260:                                              ; preds = %250
  %261 = zext i32 %255 to i64
  %262 = zext i32 %252 to i64
  %263 = add nsw i64 %262, -12
  %264 = icmp ult i64 %263, %261
  br i1 %264, label %265, label %270

265:                                              ; preds = %260
  store i32 %256, i32* %253, align 8
  %266 = zext i32 %256 to i64
  %267 = icmp ugt i64 %263, %266
  br i1 %267, label %268, label %270

268:                                              ; preds = %265
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %253, align 8
  br label %270

270:                                              ; preds = %268, %265, %260, %250
  %271 = add i32 %246, -1
  store i32 %271, i32* %245, align 4
  br label %272

272:                                              ; preds = %270, %244
  %273 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 14
  store i8 3, i8* %273, align 1
  %274 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 10
  store i16 0, i16* %274, align 2
  br label %307

275:                                              ; preds = %237
  br i1 %242, label %276, label %307

276:                                              ; preds = %275
  %277 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 8
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, 0
  %280 = icmp eq i8 %154, 3
  %281 = or i1 %280, %279
  br i1 %281, label %304, label %282

282:                                              ; preds = %276
  %283 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %284 = load i32, i32* %283, align 8
  %285 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %286 = load i32, i32* %285, align 8
  %287 = add i32 %286, %284
  store i32 %287, i32* %285, align 8
  %288 = load i32, i32* %80, align 8
  %289 = icmp ne i32 %288, 0
  %290 = icmp ugt i32 %287, %288
  %291 = and i1 %289, %290
  br i1 %291, label %292, label %302

292:                                              ; preds = %282
  %293 = zext i32 %287 to i64
  %294 = zext i32 %284 to i64
  %295 = add nsw i64 %294, -12
  %296 = icmp ult i64 %295, %293
  br i1 %296, label %297, label %302

297:                                              ; preds = %292
  store i32 %288, i32* %285, align 8
  %298 = zext i32 %288 to i64
  %299 = icmp ugt i64 %295, %298
  br i1 %299, label %300, label %302

300:                                              ; preds = %297
  %301 = trunc i64 %295 to i32
  store i32 %301, i32* %285, align 8
  br label %302

302:                                              ; preds = %300, %297, %292, %282
  %303 = add i32 %278, -1
  store i32 %303, i32* %277, align 4
  br label %304

304:                                              ; preds = %302, %276
  %305 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 14
  store i8 4, i8* %305, align 1
  %306 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 10
  store i16 0, i16* %306, align 2
  br label %307

307:                                              ; preds = %304, %275, %272, %243, %234, %204
  store i64 %116, i64* %117, align 8
  store i64 %184, i64* %176, align 8
  %308 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %309 = load i32, i32* %308, align 8
  %310 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 7
  store i32 %309, i32* %310, align 8
  %311 = icmp eq i8 %154, 3
  %312 = zext i1 %311 to i32
  br label %415

313:                                              ; preds = %175
  br i1 %186, label %314, label %349

314:                                              ; preds = %313
  %315 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 9
  %316 = load i16, i16* %315, align 8
  %317 = icmp eq i16 %316, 0
  %318 = icmp eq i8 %154, 1
  %319 = or i1 %318, %317
  br i1 %319, label %413, label %320

320:                                              ; preds = %314
  %321 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 14
  %322 = load i8, i8* %321, align 1
  %323 = icmp eq i8 %322, 5
  %324 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 10
  br i1 %323, label %325, label %328

325:                                              ; preds = %320
  %326 = load i16, i16* %324, align 2
  %327 = add i16 %326, 1
  br label %328

328:                                              ; preds = %325, %320
  %329 = phi i16 [ %327, %325 ], [ 1, %320 ]
  store i16 %329, i16* %324, align 2
  store i8 5, i8* %321, align 1
  %330 = icmp eq i16 %329, %316
  br i1 %330, label %336, label %331

331:                                              ; preds = %328
  %332 = icmp ugt i16 %329, %316
  br i1 %332, label %333, label %413

333:                                              ; preds = %331
  %334 = urem i16 %329, %316
  %335 = icmp eq i16 %334, 0
  br i1 %335, label %336, label %413

336:                                              ; preds = %333, %328
  %337 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %338 = load i32, i32* %337, align 8
  %339 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %340 = load i32, i32* %339, align 8
  %341 = shl i32 %340, 2
  %342 = icmp ugt i32 %338, %341
  br i1 %342, label %343, label %348

343:                                              ; preds = %336
  %344 = sub i32 %338, %340
  store i32 %344, i32* %337, align 8
  %345 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 8
  %346 = load i32, i32* %345, align 4
  %347 = add i32 %346, 1
  store i32 %347, i32* %345, align 4
  br label %413

348:                                              ; preds = %336
  store i16 0, i16* %324, align 2
  br label %413

349:                                              ; preds = %313
  %350 = sub i64 %177, %180
  %351 = icmp ult i64 %184, %350
  %352 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 9
  %353 = load i16, i16* %352, align 8
  %354 = icmp eq i16 %353, 0
  br i1 %351, label %355, label %374

355:                                              ; preds = %349
  br i1 %354, label %367, label %356

356:                                              ; preds = %355
  %357 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 14
  %358 = load i8, i8* %357, align 1
  %359 = icmp eq i8 %358, 5
  br i1 %359, label %360, label %365

360:                                              ; preds = %356
  %361 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 10
  %362 = load i16, i16* %361, align 2
  %363 = icmp ugt i16 %362, %353
  br i1 %363, label %364, label %365

364:                                              ; preds = %360
  store i16 0, i16* %361, align 2
  br label %413

365:                                              ; preds = %360, %356
  store i8 6, i8* %357, align 1
  %366 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 10
  store i16 0, i16* %366, align 2
  br label %367

367:                                              ; preds = %365, %355
  store i64 %116, i64* %117, align 8
  store i64 %184, i64* %176, align 8
  %368 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %369 = load i32, i32* %368, align 8
  %370 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 7
  store i32 %369, i32* %370, align 8
  %371 = and i8 %154, -2
  %372 = icmp eq i8 %371, 2
  %373 = zext i1 %372 to i32
  br label %415

374:                                              ; preds = %349
  %375 = icmp eq i8 %154, 1
  %376 = or i1 %375, %354
  br i1 %376, label %406, label %377

377:                                              ; preds = %374
  %378 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 14
  %379 = load i8, i8* %378, align 1
  %380 = icmp eq i8 %379, 5
  %381 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 10
  br i1 %380, label %382, label %385

382:                                              ; preds = %377
  %383 = load i16, i16* %381, align 2
  %384 = add i16 %383, 1
  br label %385

385:                                              ; preds = %382, %377
  %386 = phi i16 [ %384, %382 ], [ 1, %377 ]
  store i16 %386, i16* %381, align 2
  store i8 5, i8* %378, align 1
  %387 = icmp eq i16 %386, %353
  br i1 %387, label %393, label %388

388:                                              ; preds = %385
  %389 = icmp ugt i16 %386, %353
  br i1 %389, label %390, label %406

390:                                              ; preds = %388
  %391 = urem i16 %386, %353
  %392 = icmp eq i16 %391, 0
  br i1 %392, label %393, label %406

393:                                              ; preds = %390, %385
  %394 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %395 = load i32, i32* %394, align 8
  %396 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %397 = load i32, i32* %396, align 8
  %398 = shl i32 %397, 2
  %399 = icmp ugt i32 %395, %398
  br i1 %399, label %400, label %405

400:                                              ; preds = %393
  %401 = sub i32 %395, %397
  store i32 %401, i32* %394, align 8
  %402 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 8
  %403 = load i32, i32* %402, align 4
  %404 = add i32 %403, 1
  store i32 %404, i32* %402, align 4
  br label %413

405:                                              ; preds = %393
  store i16 0, i16* %381, align 2
  br label %406

406:                                              ; preds = %405, %390, %388, %374
  %407 = and i8 %154, -2
  %408 = icmp eq i8 %407, 2
  br i1 %408, label %413, label %409

409:                                              ; preds = %406
  %410 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 11
  %411 = load i8, i8* %410, align 4
  %412 = zext i8 %411 to i32
  br label %415

413:                                              ; preds = %196, %200, %364, %400, %314, %331, %333, %348, %343, %406
  %414 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 16
  store i8 %154, i8* %414, align 1
  br label %634

415:                                              ; preds = %307, %367, %409
  %416 = phi i32 [ %312, %307 ], [ %373, %367 ], [ %412, %409 ]
  %417 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 16
  store i8 %154, i8* %417, align 1
  %418 = icmp eq i32 %416, 0
  br i1 %418, label %428, label %634

419:                                              ; preds = %115
  store i64 %116, i64* %117, align 8
  %420 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 12
  %421 = load i64, i64* %420, align 8
  %422 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 2
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 15
  %424 = load i8, i8* %423, align 8
  %425 = icmp eq i8 %424, 0
  br i1 %425, label %428, label %426

426:                                              ; preds = %419
  store i8 0, i8* %423, align 8
  %427 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 16, i32 0, i32 6
  store i64 %111, i64* %427, align 8
  br label %428

428:                                              ; preds = %167, %415, %419, %426, %102, %101
  br i1 %81, label %429, label %436

429:                                              ; preds = %428
  %430 = load i8, i8* %73, align 1
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %627, label %432

432:                                              ; preds = %429
  %433 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 52
  %434 = load i8, i8* %433, align 8
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %627, label %436

436:                                              ; preds = %432, %428
  %437 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 19
  %438 = load i32, i32* %437, align 8
  %439 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 5
  %440 = load i32, i32* %439, align 4
  %441 = icmp ugt i32 %438, %440
  br i1 %441, label %548, label %442

442:                                              ; preds = %436
  %443 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 18
  %444 = load i32, i32* %443, align 4
  %445 = add i32 %444, %87
  %446 = icmp ult i32 %445, %438
  br i1 %446, label %543, label %447

447:                                              ; preds = %442
  %448 = load i8, i8* %73, align 1
  switch i8 %448, label %513 [
    i8 2, label %449
    i8 3, label %468
    i8 4, label %493
  ]

449:                                              ; preds = %447
  %450 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %451 = load i32, i32* %450, align 8
  %452 = zext i32 %451 to i64
  %453 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 44), align 8
  %454 = zext i32 %453 to i64
  %455 = zext i32 %440 to i64
  %456 = mul nuw i64 %452, %455
  %457 = mul i64 %456, %454
  %458 = udiv i64 %457, %82
  %459 = trunc i64 %458 to i32
  %460 = zext i32 %87 to i64
  %461 = mul nuw i64 %455, %460
  %462 = udiv i64 %461, %82
  %463 = trunc i64 %462 to i32
  %464 = icmp ugt i32 %463, %459
  %465 = select i1 %464, i32 %459, i32 %463
  %466 = icmp eq i32 %465, 0
  %467 = select i1 %466, i32 1, i32 %465
  br label %520

468:                                              ; preds = %447
  %469 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 10
  %470 = load i32, i32* %469, align 8
  %471 = icmp eq i32 %470, 0
  %472 = select i1 %471, i32 1, i32 %470
  %473 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %474 = load i32, i32* %473, align 8
  %475 = zext i32 %474 to i64
  %476 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 44), align 8
  %477 = zext i32 %476 to i64
  %478 = zext i32 %438 to i64
  %479 = mul nuw i64 %475, %478
  %480 = mul i64 %479, %477
  %481 = zext i32 %472 to i64
  %482 = mul i64 %71, %481
  %483 = udiv i64 %480, %482
  %484 = trunc i64 %483 to i32
  %485 = zext i32 %87 to i64
  %486 = mul nuw i64 %478, %485
  %487 = udiv i64 %486, %482
  %488 = trunc i64 %487 to i32
  %489 = icmp ugt i32 %488, %484
  %490 = select i1 %489, i32 %484, i32 %488
  %491 = icmp eq i32 %490, 0
  %492 = select i1 %491, i32 1, i32 %490
  br label %520

493:                                              ; preds = %447
  %494 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %495 = load i32, i32* %494, align 8
  %496 = zext i32 %495 to i64
  %497 = mul i64 %67, %496
  %498 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 44), align 8
  %499 = zext i32 %498 to i64
  %500 = mul i64 %497, %499
  %501 = lshr i64 %500, 8
  %502 = trunc i64 %501 to i32
  %503 = zext i32 %87 to i64
  %504 = mul i64 %67, %503
  %505 = lshr i64 %504, 8
  %506 = trunc i64 %505 to i32
  %507 = icmp ugt i32 %506, %502
  %508 = select i1 %507, i32 %502, i32 %506
  %509 = icmp ugt i32 %508, %87
  %510 = select i1 %509, i32 %87, i32 %508
  %511 = icmp ugt i32 %510, %495
  %512 = select i1 %511, i32 %495, i32 %510
  br label %520

513:                                              ; preds = %447
  %514 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %515 = load i32, i32* %514, align 8
  %516 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 44), align 8
  %517 = mul i32 %516, %515
  %518 = icmp ugt i32 %87, %517
  %519 = select i1 %518, i32 %517, i32 %87
  br label %520

520:                                              ; preds = %468, %449, %513, %493
  %521 = phi i32 [ %495, %493 ], [ %515, %513 ], [ %451, %449 ], [ %474, %468 ]
  %522 = phi i32 [ %512, %493 ], [ %519, %513 ], [ %467, %449 ], [ %492, %468 ]
  %523 = add i32 %522, %438
  store i32 %523, i32* %437, align 8
  %524 = load i32, i32* %83, align 8
  %525 = icmp ne i32 %524, 0
  %526 = icmp ugt i32 %523, %524
  %527 = and i1 %525, %526
  br i1 %527, label %528, label %538

528:                                              ; preds = %520
  %529 = zext i32 %523 to i64
  %530 = zext i32 %521 to i64
  %531 = add nsw i64 %530, -12
  %532 = icmp ult i64 %531, %529
  br i1 %532, label %533, label %538

533:                                              ; preds = %528
  store i32 %524, i32* %437, align 8
  %534 = zext i32 %524 to i64
  %535 = icmp ugt i64 %531, %534
  br i1 %535, label %536, label %538

536:                                              ; preds = %533
  %537 = trunc i64 %531 to i32
  store i32 %537, i32* %437, align 8
  br label %538

538:                                              ; preds = %520, %528, %533, %536
  %539 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %634, label %542

542:                                              ; preds = %538
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %85, i32 %522, i8 zeroext 4) #8
  br label %634

543:                                              ; preds = %442
  %544 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %545 = and i32 %544, 4
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %634, label %547

547:                                              ; preds = %543
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %85, i32 %87, i8 zeroext 31) #8
  br label %634

548:                                              ; preds = %436
  %549 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 22
  %550 = load i32, i32* %549, align 4
  %551 = add i32 %550, %87
  store i32 %551, i32* %549, align 4
  %552 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 18
  %553 = load i32, i32* %552, align 4
  %554 = add i32 %553, %87
  %555 = icmp ult i32 %554, %438
  %556 = icmp ult i32 %551, %438
  %557 = or i1 %556, %555
  br i1 %557, label %622, label %558

558:                                              ; preds = %548
  %559 = sub i32 %551, %438
  store i32 %559, i32* %549, align 4
  %560 = load i8, i8* %73, align 1
  switch i8 %560, label %596 [
    i8 2, label %561
    i8 3, label %571
    i8 4, label %587
  ]

561:                                              ; preds = %558
  %562 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %563 = load i32, i32* %562, align 8
  %564 = zext i32 %563 to i64
  %565 = zext i32 %440 to i64
  %566 = mul nuw i64 %564, %565
  %567 = udiv i64 %566, %82
  %568 = trunc i64 %567 to i32
  %569 = icmp eq i32 %568, 0
  %570 = select i1 %569, i32 1, i32 %568
  br label %599

571:                                              ; preds = %558
  %572 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 10
  %573 = load i32, i32* %572, align 8
  %574 = icmp eq i32 %573, 0
  %575 = select i1 %574, i32 1, i32 %573
  %576 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %577 = load i32, i32* %576, align 8
  %578 = zext i32 %577 to i64
  %579 = zext i32 %438 to i64
  %580 = mul nuw i64 %578, %579
  %581 = zext i32 %575 to i64
  %582 = mul i64 %71, %581
  %583 = udiv i64 %580, %582
  %584 = trunc i64 %583 to i32
  %585 = icmp eq i32 %584, 0
  %586 = select i1 %585, i32 1, i32 %584
  br label %599

587:                                              ; preds = %558
  %588 = zext i32 %438 to i64
  %589 = mul i64 %67, %588
  %590 = lshr i64 %589, 8
  %591 = trunc i64 %590 to i32
  %592 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %593 = load i32, i32* %592, align 8
  %594 = icmp ult i32 %593, %591
  %595 = select i1 %594, i32 %593, i32 %591
  br label %599

596:                                              ; preds = %558
  %597 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %598 = load i32, i32* %597, align 8
  br label %599

599:                                              ; preds = %587, %571, %596, %561
  %600 = phi i32 [ %598, %596 ], [ %577, %571 ], [ %563, %561 ], [ %593, %587 ]
  %601 = phi i32 [ %598, %596 ], [ %586, %571 ], [ %570, %561 ], [ %595, %587 ]
  %602 = add i32 %601, %438
  store i32 %602, i32* %437, align 8
  %603 = load i32, i32* %83, align 8
  %604 = icmp ne i32 %603, 0
  %605 = icmp ugt i32 %602, %603
  %606 = and i1 %604, %605
  br i1 %606, label %607, label %617

607:                                              ; preds = %599
  %608 = zext i32 %602 to i64
  %609 = zext i32 %600 to i64
  %610 = add nsw i64 %609, -12
  %611 = icmp ult i64 %610, %608
  br i1 %611, label %612, label %617

612:                                              ; preds = %607
  store i32 %603, i32* %437, align 8
  %613 = zext i32 %603 to i64
  %614 = icmp ugt i64 %610, %613
  br i1 %614, label %615, label %617

615:                                              ; preds = %612
  %616 = trunc i64 %610 to i32
  store i32 %616, i32* %437, align 8
  br label %617

617:                                              ; preds = %599, %607, %612, %615
  %618 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %619 = and i32 %618, 2
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %634, label %621

621:                                              ; preds = %617
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %85, i32 %600, i8 zeroext 5) #8
  br label %634

622:                                              ; preds = %548
  %623 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %624 = and i32 %623, 4
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %634, label %626

626:                                              ; preds = %622
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %85, i32 %87, i8 zeroext 32) #8
  br label %634

627:                                              ; preds = %432, %429
  %628 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %629 = and i32 %628, 4
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %634, label %631

631:                                              ; preds = %627
  %632 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 4
  %633 = load i32, i32* %632, align 8
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %85, i32 %633, i8 zeroext 65) #8
  br label %634

634:                                              ; preds = %413, %542, %538, %415, %89, %543, %617, %622, %627, %621, %626, %547, %631, %93
  %635 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %85, i64 0, i32 0, i32 0
  %636 = load %struct.sctp_nets*, %struct.sctp_nets** %635, align 8
  %637 = icmp eq %struct.sctp_nets* %636, null
  br i1 %637, label %638, label %84

638:                                              ; preds = %98, %634, %66
  ret void
}

declare void @sctp_timer_stop(i32, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #5

declare void @sctp_timer_start(i32, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @sctp_get_tick_count() local_unnamed_addr #5

declare i32 @sctp_msecs_to_ticks(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @htcp_recalc_ssthresh(%struct.sctp_nets* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %0, i64 0, i32 16
  %3 = bitcast %union.cc_control_data* %2 to %struct.htcp*
  %4 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %0, i64 0, i32 16, i32 0, i32 2
  %7 = bitcast i64* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %0, i64 0, i32 16, i32 0, i32 4
  %10 = bitcast i64* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 13
  %13 = load i32, i32* %12, align 4
  store i32 %11, i32* %12, align 4
  %14 = mul i32 %11, 5
  %15 = shl i32 %13, 2
  %16 = shl i32 %13, 1
  %17 = sub i32 %14, %15
  %18 = icmp ult i32 %16, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %1
  %20 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 1
  store i8 64, i8* %20, align 2
  %21 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 2
  store i8 0, i8* %21, align 1
  br label %44

22:                                               ; preds = %1
  %23 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = tail call i32 @sctp_msecs_to_ticks(i32 10) #8
  %28 = icmp ult i32 %27, %5
  %29 = icmp ne i32 %8, 0
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %42

31:                                               ; preds = %26
  %32 = shl i32 %5, 7
  %33 = udiv i32 %32, %8
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 1
  store i8 %34, i8* %35, align 2
  %36 = and i32 %33, 255
  %37 = icmp ult i32 %36, 64
  br i1 %37, label %38, label %39

38:                                               ; preds = %31
  store i8 64, i8* %35, align 2
  br label %44

39:                                               ; preds = %31
  %40 = icmp ugt i32 %36, 102
  br i1 %40, label %41, label %44

41:                                               ; preds = %39
  store i8 102, i8* %35, align 2
  br label %44

42:                                               ; preds = %26, %22
  %43 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 1
  store i8 64, i8* %43, align 2
  store i8 1, i8* %23, align 1
  br label %44

44:                                               ; preds = %42, %41, %39, %38, %19
  %45 = load i32, i32* %4, align 4
  %46 = tail call i32 @sctp_get_tick_count() #8
  %47 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = sub i32 %46, %48
  %50 = load i32, i32* @hz, align 4
  %51 = icmp ugt i32 %49, %50
  br i1 %51, label %52, label %61

52:                                               ; preds = %44
  %53 = sub i32 %49, %50
  %54 = mul i32 %53, 10
  %55 = lshr i32 %53, 1
  %56 = mul i32 %55, %55
  %57 = udiv i32 %56, %50
  %58 = add i32 %57, %54
  %59 = udiv i32 %58, %50
  %60 = add i32 %59, 1
  br label %61

61:                                               ; preds = %52, %44
  %62 = phi i32 [ %60, %52 ], [ 1, %44 ]
  %63 = icmp eq i32 %45, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = shl i32 %50, 3
  %66 = mul i32 %45, 10
  %67 = udiv i32 %65, %66
  %68 = icmp ugt i32 %67, 4
  %69 = select i1 %68, i32 %67, i32 4
  %70 = icmp ult i32 %69, 80
  %71 = select i1 %70, i32 %69, i32 80
  %72 = shl i32 %62, 3
  %73 = udiv i32 %72, %71
  %74 = icmp ugt i32 %71, %72
  %75 = select i1 %74, i32 %73, i32 1
  br label %76

76:                                               ; preds = %64, %61
  %77 = phi i32 [ %75, %64 ], [ %62, %61 ]
  %78 = shl i32 %77, 1
  %79 = getelementptr inbounds %struct.htcp, %struct.htcp* %3, i64 0, i32 1
  %80 = load i8, i8* %79, align 2
  %81 = zext i8 %80 to i32
  %82 = sub nsw i32 128, %81
  %83 = mul i32 %82, %78
  %84 = trunc i32 %83 to i16
  %85 = bitcast %union.cc_control_data* %2 to i16*
  %86 = and i32 %83, 65534
  %87 = icmp eq i32 %86, 0
  %88 = select i1 %87, i16 %84, i16 128
  store i16 %88, i16* %85, align 4
  %89 = icmp ne i32 %5, 0
  %90 = icmp ugt i32 %8, %5
  %91 = and i1 %89, %90
  br i1 %91, label %92, label %97

92:                                               ; preds = %76
  %93 = sub i32 %8, %5
  %94 = mul i32 %93, 95
  %95 = udiv i32 %94, 100
  %96 = add i32 %95, %5
  store i32 %96, i32* %7, align 8
  br label %97

97:                                               ; preds = %76, %92
  %98 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %0, i64 0, i32 19
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %0, i64 0, i32 4
  %101 = load i32, i32* %100, align 8
  %102 = udiv i32 %99, %101
  %103 = mul i32 %102, %81
  %104 = lshr i32 %103, 7
  %105 = mul i32 %104, %101
  %106 = shl i32 %101, 1
  %107 = icmp ugt i32 %105, %106
  %108 = select i1 %107, i32 %105, i32 %106
  ret i32 %108
}

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
