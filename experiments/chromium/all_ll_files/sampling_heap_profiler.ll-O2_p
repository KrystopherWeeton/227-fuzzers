; ModuleID = '../../base/sampling_heap_profiler/sampling_heap_profiler.cc'
source_filename = "../../base/sampling_heap_profiler/sampling_heap_profiler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [192 x i8] }
%"struct.std::__1::atomic.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i32 }
%"class.base::SamplingHeapProfiler::Sample" = type <{ i64, i64, i32, [4 x i8], i8*, i8*, %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8** }
%"class.base::SamplingHeapProfiler" = type <{ %"class.base::PoissonAllocationSampler::SamplesObserver", %"class.base::ThreadIdNameManager::Observer", %"class.base::Lock", %"class.std::__1::unordered_map", %"class.std::__1::unordered_set", %"class.base::Lock", i32, %"struct.std::__1::atomic", %"struct.std::__1::atomic.45", [7 x i8] }>
%"class.base::PoissonAllocationSampler::SamplesObserver" = type { i32 (...)** }
%"class.base::ThreadIdNameManager::Observer" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.19" }
%"class.std::__1::__hash_table.19" = type <{ %"class.std::__1::unique_ptr.20", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::__hash_node_base.23"** }
%"struct.std::__1::__hash_node_base.23" = type { %"struct.std::__1::__hash_node_base.23"* }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__bucket_list_deallocator.25" }
%"class.std::__1::__bucket_list_deallocator.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base.23" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ThreadIdNameManager" = type { %"class.base::Lock", %"class.std::__1::map", %"class.std::__1::map.57", %"class.std::__1::map.68", %"class.std::__1::basic_string"*, i32, %"class.std::__1::vector.84" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.57" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.68" = type { %"class.std::__1::__tree.69" }
%"class.std::__1::__tree.69" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.base::ThreadIdNameManager::Observer"**, %"class.base::ThreadIdNameManager::Observer"**, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.base::ThreadIdNameManager::Observer"** }
%"class.base::PoissonAllocationSampler" = type { %"class.base::Lock", %"class.std::__1::vector.91" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.base::PoissonAllocationSampler::SamplesObserver"**, %"class.base::PoissonAllocationSampler::SamplesObserver"**, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.base::PoissonAllocationSampler::SamplesObserver"** }
%"class.base::trace_event::AllocationContextTracker" = type <{ %"class.std::__1::vector.98", i8*, %"class.std::__1::vector.105", i32, [4 x i8] }>
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"*, %"class.std::__1::__compressed_pair.100" }
%"struct.base::trace_event::StackFrame" = type { i32, i8* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.base::trace_event::StackFrame"* }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { i8**, i8**, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i8** }
%"class.logging::CheckOpResult" = type { i8* }
%"struct.base::trace_event::AllocationContext" = type { %"struct.base::trace_event::Backtrace", i8* }
%"struct.base::trace_event::Backtrace" = type { [48 x %"struct.base::trace_event::StackFrame"], i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.base::SamplingHeapProfiler::Sample"* }
%"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.121" }
%"struct.std::__1::pair.121" = type { i8*, %"class.base::SamplingHeapProfiler::Sample" }
%"struct.std::__1::__hash_node.126" = type { %"struct.std::__1::__hash_node_base.23", i64, i8* }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131", %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.12"*, i8, [7 x i8] }>
%"class.std::__1::allocator.12" = type { i8 }

$_ZNSt3__16vectorIPvNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRS2_S5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_S2_EEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIS2_EEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_S2_EEEE = comdat any

$_ZNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

@_ZTVN4base20SamplingHeapProfilerE = hidden unnamed_addr constant { [7 x i8*], [5 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SamplingHeapProfiler"*)* @_ZN4base20SamplingHeapProfilerD2Ev to i8*), i8* bitcast (void (%"class.base::SamplingHeapProfiler"*)* @_ZN4base20SamplingHeapProfilerD0Ev to i8*), i8* bitcast (void (%"class.base::SamplingHeapProfiler"*, i8*, i64, i64, i32, i8*)* @_ZN4base20SamplingHeapProfiler11SampleAddedEPvmmNS_24PoissonAllocationSampler13AllocatorTypeEPKc to i8*), i8* bitcast (void (%"class.base::SamplingHeapProfiler"*, i8*)* @_ZN4base20SamplingHeapProfiler13SampleRemovedEPv to i8*), i8* bitcast (void (%"class.base::SamplingHeapProfiler"*, i8*)* @_ZN4base20SamplingHeapProfiler19OnThreadNameChangedEPKc to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.base::SamplingHeapProfiler"*)* @_ZThn8_N4base20SamplingHeapProfilerD1Ev to i8*), i8* bitcast (void (%"class.base::SamplingHeapProfiler"*)* @_ZThn8_N4base20SamplingHeapProfilerD0Ev to i8*), i8* bitcast (void (%"class.base::SamplingHeapProfiler"*, i8*)* @_ZThn8_N4base20SamplingHeapProfiler19OnThreadNameChangedEPKc to i8*)] }, align 8
@.str = private unnamed_addr constant [42 x i8] c"backtrace.frame_count <= kMaxStackEntries\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"../../base/sampling_heap_profiler/sampling_heap_profiler.cc\00", align 1
@_ZZN4base20SamplingHeapProfiler3GetEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 16
@_ZGVZN4base20SamplingHeapProfiler3GetEvE8instance = internal global i64 0, align 8
@_ZZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKcE11thread_name = internal thread_local unnamed_addr global i8* null, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"Thread %lu\00", align 1
@_ZN4base11trace_event24AllocationContextTracker13capture_mode_E = external local_unnamed_addr global %"struct.std::__1::atomic.122", align 4

@_ZN4base20SamplingHeapProfiler6SampleC1Emmj = hidden unnamed_addr alias void (%"class.base::SamplingHeapProfiler::Sample"*, i64, i64, i32), void (%"class.base::SamplingHeapProfiler::Sample"*, i64, i64, i32)* @_ZN4base20SamplingHeapProfiler6SampleC2Emmj
@_ZN4base20SamplingHeapProfiler6SampleC1ERKS1_ = hidden unnamed_addr alias void (%"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"*), void (%"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"*)* @_ZN4base20SamplingHeapProfiler6SampleC2ERKS1_
@_ZN4base20SamplingHeapProfiler6SampleD1Ev = hidden unnamed_addr alias void (%"class.base::SamplingHeapProfiler::Sample"*), void (%"class.base::SamplingHeapProfiler::Sample"*)* @_ZN4base20SamplingHeapProfiler6SampleD2Ev
@_ZN4base20SamplingHeapProfilerC1Ev = hidden unnamed_addr alias void (%"class.base::SamplingHeapProfiler"*), void (%"class.base::SamplingHeapProfiler"*)* @_ZN4base20SamplingHeapProfilerC2Ev
@_ZN4base20SamplingHeapProfilerD1Ev = hidden unnamed_addr alias void (%"class.base::SamplingHeapProfiler"*), void (%"class.base::SamplingHeapProfiler"*)* @_ZN4base20SamplingHeapProfilerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler6SampleC2Emmj(%"class.base::SamplingHeapProfiler::Sample"* nocapture, i64, i64, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 7
  %9 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false)
  store i32 %3, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler6SampleC2ERKS1_(%"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %0 to i8*
  %4 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 6
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 6, i32 0, i32 1
  %9 = bitcast i8*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 2305843009213693951
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #14
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #15
  %22 = bitcast i8* %21 to i8**
  %23 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 6, i32 0, i32 1
  %24 = bitcast i8*** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds i8*, i8** %22, i64 %14
  %27 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i8** %26, i8*** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %29 = load i8**, i8*** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast i8*** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint i8** %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 3
  %38 = bitcast i8** %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %38, i64 %34, i1 false) #13
  %39 = getelementptr inbounds i8*, i8** %22, i64 %37
  %40 = ptrtoint i8** %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  %44 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 7
  %45 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 7
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %44, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler6SampleD2Ev(%"class.base::SamplingHeapProfiler::Sample"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i8**, i8*** %2, align 8
  %4 = icmp eq i8** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8** %3 to i64
  %7 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast i8*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i8** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfilerC2Ev(%"class.base::SamplingHeapProfiler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::SamplingHeapProfiler"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN4base20SamplingHeapProfilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN4base20SamplingHeapProfilerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %3) #13
  %4 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 3, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.16"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 4, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.39"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_set"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %12) #13
  %13 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfilerD2Ev(%"class.base::SamplingHeapProfiler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 1
  %3 = bitcast %"class.base::SamplingHeapProfiler"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN4base20SamplingHeapProfilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN4base20SamplingHeapProfilerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i8, i8* %4 seq_cst, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.base::ThreadIdNameManager"* @_ZN4base19ThreadIdNameManager11GetInstanceEv() #13
  tail call void @_ZN4base19ThreadIdNameManager14RemoveObserverEPNS0_8ObserverE(%"class.base::ThreadIdNameManager"* %9, %"class.base::ThreadIdNameManager::Observer"* %2) #13
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %11) #13
  %12 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.23"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %10, %15
  %16 = phi %"struct.std::__1::__hash_node_base.23"* [ %18, %15 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %17, align 8
  %19 = bitcast %"struct.std::__1::__hash_node_base.23"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  %20 = icmp eq %"struct.std::__1::__hash_node_base.23"* %18, null
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %10
  %22 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.23"** null, %"struct.std::__1::__hash_node_base.23"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.23"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.23"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %27, %44
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %34, %44 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 8
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i8***
  %37 = load i8**, i8*** %36, align 8
  %38 = icmp eq i8** %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %31
  %40 = ptrtoint i8** %37 to i64
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 9
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast i8** %37 to i8*
  tail call void @_ZdlPv(i8* %43) #15
  br label %44

44:                                               ; preds = %39, %31
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i8*
  tail call void @_ZdlPv(i8* %45) #15
  %46 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %46, label %47, label %31

47:                                               ; preds = %44, %27
  %48 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %48, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"** %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.std::__1::__hash_node_base"** %49 to i8*
  tail call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %47, %51
  %54 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %54) #13
  tail call void @_ZN4base19ThreadIdNameManager8ObserverD2Ev(%"class.base::ThreadIdNameManager::Observer"* %2) #13
  ret void
}

declare %"class.base::ThreadIdNameManager"* @_ZN4base19ThreadIdNameManager11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN4base19ThreadIdNameManager14RemoveObserverEPNS0_8ObserverE(%"class.base::ThreadIdNameManager"*, %"class.base::ThreadIdNameManager::Observer"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base19ThreadIdNameManager8ObserverD2Ev(%"class.base::ThreadIdNameManager::Observer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N4base20SamplingHeapProfilerD1Ev(%"class.base::SamplingHeapProfiler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 -1, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast i8* %2 to %"class.base::SamplingHeapProfiler"*
  tail call void @_ZN4base20SamplingHeapProfilerD2Ev(%"class.base::SamplingHeapProfiler"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfilerD0Ev(%"class.base::SamplingHeapProfiler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base20SamplingHeapProfilerD2Ev(%"class.base::SamplingHeapProfiler"* %0) #13
  %2 = bitcast %"class.base::SamplingHeapProfiler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N4base20SamplingHeapProfilerD0Ev(%"class.base::SamplingHeapProfiler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 -1, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast i8* %2 to %"class.base::SamplingHeapProfiler"*
  tail call void @_ZN4base20SamplingHeapProfilerD2Ev(%"class.base::SamplingHeapProfiler"* %3) #13
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base20SamplingHeapProfiler5StartEv(%"class.base::SamplingHeapProfiler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = icmp eq i32 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = tail call %"class.base::PoissonAllocationSampler"* @_ZN4base24PoissonAllocationSampler3GetEv() #13
  %15 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 0
  tail call void @_ZN4base24PoissonAllocationSampler18AddSamplesObserverEPNS0_15SamplesObserverE(%"class.base::PoissonAllocationSampler"* %14, %"class.base::PoissonAllocationSampler::SamplesObserver"* %15) #13
  br label %16

16:                                               ; preds = %8, %13
  %17 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 seq_cst, align 4
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #13
  ret i32 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::PoissonAllocationSampler"* @_ZN4base24PoissonAllocationSampler3GetEv() local_unnamed_addr #2

declare void @_ZN4base24PoissonAllocationSampler18AddSamplesObserverEPNS0_15SamplesObserverE(%"class.base::PoissonAllocationSampler"*, %"class.base::PoissonAllocationSampler::SamplesObserver"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler4StopEv(%"class.base::SamplingHeapProfiler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, -1
  store i32 %11, i32* %9, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = tail call %"class.base::PoissonAllocationSampler"* @_ZN4base24PoissonAllocationSampler3GetEv() #13
  %15 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 0
  tail call void @_ZN4base24PoissonAllocationSampler21RemoveSamplesObserverEPNS0_15SamplesObserverE(%"class.base::PoissonAllocationSampler"* %14, %"class.base::PoissonAllocationSampler::SamplesObserver"* %15) #13
  br label %16

16:                                               ; preds = %8, %13
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #13
  ret void
}

declare void @_ZN4base24PoissonAllocationSampler21RemoveSamplesObserverEPNS0_15SamplesObserverE(%"class.base::PoissonAllocationSampler"*, %"class.base::PoissonAllocationSampler::SamplesObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler19SetSamplingIntervalEm(%"class.base::SamplingHeapProfiler"* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.base::PoissonAllocationSampler"* @_ZN4base24PoissonAllocationSampler3GetEv() #13
  tail call void @_ZN4base24PoissonAllocationSampler19SetSamplingIntervalEm(%"class.base::PoissonAllocationSampler"* %3, i64 %1) #13
  ret void
}

declare void @_ZN4base24PoissonAllocationSampler19SetSamplingIntervalEm(%"class.base::PoissonAllocationSampler"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler20SetRecordThreadNamesEb(%"class.base::SamplingHeapProfiler"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp ne i8 %5, 0
  %7 = xor i1 %6, %1
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store atomic i8 %9, i8* %3 seq_cst, align 1
  %10 = tail call %"class.base::ThreadIdNameManager"* @_ZN4base19ThreadIdNameManager11GetInstanceEv() #13
  %11 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 1
  br i1 %1, label %12, label %13

12:                                               ; preds = %8
  tail call void @_ZN4base19ThreadIdNameManager11AddObserverEPNS0_8ObserverE(%"class.base::ThreadIdNameManager"* %10, %"class.base::ThreadIdNameManager::Observer"* %11) #13
  br label %14

13:                                               ; preds = %8
  tail call void @_ZN4base19ThreadIdNameManager14RemoveObserverEPNS0_8ObserverE(%"class.base::ThreadIdNameManager"* %10, %"class.base::ThreadIdNameManager::Observer"* %11) #13
  br label %14

14:                                               ; preds = %2, %13, %12
  ret void
}

declare void @_ZN4base19ThreadIdNameManager11AddObserverEPNS0_8ObserverE(%"class.base::ThreadIdNameManager"*, %"class.base::ThreadIdNameManager::Observer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base20SamplingHeapProfiler16CachedThreadNameEv() local_unnamed_addr #0 align 2 {
  %1 = tail call fastcc i8* @_ZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKc(i8* null)
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @_ZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKc(i8*) unnamed_addr #0 {
  %2 = alloca [64 x i8], align 16
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %24

4:                                                ; preds = %1
  %5 = load i8*, i8** @_ZZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKcE11thread_name, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %26

7:                                                ; preds = %4
  %8 = tail call %"class.base::ThreadIdNameManager"* @_ZN4base19ThreadIdNameManager11GetInstanceEv() #13
  %9 = tail call i8* @_ZN4base19ThreadIdNameManager23GetNameForCurrentThreadEv(%"class.base::ThreadIdNameManager"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = load i8, i8* %9, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %11, %7
  %15 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 64, i1 false) #13
  %16 = call i32 (i32, ...) @prctl(i32 16, i8* nonnull %15) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %20 = sext i32 %19 to i64
  %21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %15, i64 64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i64 %20) #13
  br label %22

22:                                               ; preds = %14, %18
  %23 = call noalias i8* @strdup(i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #13
  br label %24

24:                                               ; preds = %22, %11, %1
  %25 = phi i8* [ %0, %1 ], [ %23, %22 ], [ %9, %11 ]
  store i8* %25, i8** @_ZZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKcE11thread_name, align 8
  br label %26

26:                                               ; preds = %24, %4
  %27 = phi i8* [ %5, %4 ], [ %25, %24 ]
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i8** @_ZN4base20SamplingHeapProfiler17CaptureStackTraceEPPvmPm(i8**, i64, i64* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i64 @_ZN4base5debug23TraceStackFramePointersEPPKvmmb(i8** %0, i64 %1, i64 3, i1 zeroext true) #13
  store i64 %4, i64* %2, align 8
  ret i8** %0
}

declare i64 @_ZN4base5debug23TraceStackFramePointersEPPKvmmb(i8**, i64, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler11SampleAddedEPvmmNS_24PoissonAllocationSampler13AllocatorTypeEPKc(%"class.base::SamplingHeapProfiler"*, i8*, i64, i64, i32, i8*) unnamed_addr #0 align 2 {
  %7 = alloca i8*, align 8
  %8 = alloca [256 x i8*], align 16
  %9 = alloca i8*, align 8
  %10 = alloca %"class.base::SamplingHeapProfiler::Sample", align 8
  store i8* %1, i8** %9, align 8
  %11 = tail call zeroext i1 @_ZN4base18ThreadLocalStorage16HasBeenDestroyedEv() #13
  br i1 %11, label %86, label %12, !prof !3

12:                                               ; preds = %6
  %13 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 seq_cst
  %16 = add i32 %15, 1
  %17 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 0
  store i64 %2, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 1
  store i64 %3, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 4
  %20 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 7
  %21 = bitcast i8** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 40, i1 false) #13
  store i32 %16, i32* %20, align 8
  %22 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 2
  store i32 %4, i32* %22, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.122", %"struct.std::__1::atomic.122"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %12
  %26 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.122", %"struct.std::__1::atomic.122"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %27 = add i32 %26, -1
  %28 = icmp ult i32 %27, 2
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  call void @_ZN4base20SamplingHeapProfiler17CaptureMixedStackEPKcPNS0_6SampleE(%"class.base::SamplingHeapProfiler"* %0, i8* %5, %"class.base::SamplingHeapProfiler::Sample"* nonnull %10)
  br label %59

30:                                               ; preds = %12, %25
  %31 = bitcast [256 x i8*]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 2048, i1 false) #13
  %32 = getelementptr inbounds [256 x i8*], [256 x i8*]* %8, i64 0, i64 0
  %33 = call i64 @_ZN4base5debug23TraceStackFramePointersEPPKvmmb(i8** nonnull %32, i64 255, i64 3, i1 zeroext true) #13
  %34 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 6
  %35 = getelementptr inbounds [256 x i8*], [256 x i8*]* %8, i64 0, i64 %33
  call void @_ZNSt3__16vectorIPvNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %34, i8** nonnull %32, i8** %35) #13
  %36 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i8, i8* %36 seq_cst, align 1
  %38 = and i8 %37, 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %30
  %41 = call fastcc i8* @_ZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKc(i8* null) #13
  %42 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 5
  store i8* %41, i8** %42, align 8
  br label %43

43:                                               ; preds = %40, %30
  %44 = icmp eq i8* %5, null
  br i1 %44, label %45, label %57

45:                                               ; preds = %43
  %46 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #13
  %47 = icmp eq %"class.base::trace_event::AllocationContextTracker"* %46, null
  br i1 %47, label %57, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %46, i64 0, i32 2, i32 0, i32 0
  %50 = load i8**, i8*** %49, align 8
  %51 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %46, i64 0, i32 2, i32 0, i32 1
  %52 = load i8**, i8*** %51, align 8
  %53 = icmp eq i8** %50, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds i8*, i8** %52, i64 -1
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %43, %45, %48, %54
  %58 = phi i8* [ %5, %43 ], [ null, %45 ], [ %56, %54 ], [ null, %48 ]
  store i8* %58, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %31) #13
  br label %59

59:                                               ; preds = %57, %29
  %60 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 2
  %61 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %60, i64 0, i32 0, i32 0
  %62 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %61) #13
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %66, label %64, !prof !2

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %60, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %65) #13
  br label %66

66:                                               ; preds = %59, %64
  %67 = load i8*, i8** %19, align 8
  %68 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  store i8* %67, i8** %7, align 8
  %69 = icmp eq i8* %67, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 4, i32 0
  %72 = call { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"* %71, i8** nonnull dereferenceable(8) %7, i8** nonnull dereferenceable(8) %7) #13
  br label %73

73:                                               ; preds = %66, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  %74 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 3, i32 0
  %75 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRS2_S5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %74, i8** nonnull dereferenceable(8) %9, i8** nonnull dereferenceable(8) %9, %"class.base::SamplingHeapProfiler::Sample"* nonnull dereferenceable(72) %10) #13
  %76 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %61) #13
  %77 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 6, i32 0, i32 0
  %78 = load i8**, i8*** %77, align 8
  %79 = icmp eq i8** %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = ptrtoint i8** %78 to i64
  %82 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %10, i64 0, i32 6, i32 0, i32 1
  %83 = bitcast i8*** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast i8** %78 to i8*
  call void @_ZdlPv(i8* %84) #15
  br label %85

85:                                               ; preds = %73, %80
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #13
  br label %86

86:                                               ; preds = %6, %85
  ret void
}

declare zeroext i1 @_ZN4base18ThreadLocalStorage16HasBeenDestroyedEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler17CaptureMixedStackEPKcPNS0_6SampleE(%"class.base::SamplingHeapProfiler"*, i8*, %"class.base::SamplingHeapProfiler::Sample"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"struct.base::trace_event::AllocationContext", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.std::__1::vector", align 16
  %10 = tail call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #13
  %11 = icmp eq %"class.base::trace_event::AllocationContextTracker"* %10, null
  br i1 %11, label %177, label %12

12:                                               ; preds = %3
  %13 = bitcast %"struct.base::trace_event::AllocationContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 784, i1 false)
  call void @_ZN4base11trace_event17AllocationContextC1Ev(%"struct.base::trace_event::AllocationContext"* nonnull %6) #13
  %14 = call zeroext i1 @_ZN4base11trace_event24AllocationContextTracker18GetContextSnapshotEPNS0_17AllocationContextE(%"class.base::trace_event::AllocationContextTracker"* nonnull %10, %"struct.base::trace_event::AllocationContext"* nonnull %6) #13
  br i1 %14, label %15, label %176

15:                                               ; preds = %12
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %6, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i64 %19, 256
  br i1 %21, label %23, label %22

22:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %17, align 8
  br label %32

23:                                               ; preds = %15
  %24 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #13
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 256) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i8* %24, i8* %25) #13
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %17, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 209, %"class.logging::CheckOpResult"* nonnull %7) #13
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %33 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false) #13
  %37 = load i64, i64* %18, align 8
  %38 = bitcast i8*** %36 to i64*
  %39 = bitcast %"class.std::__1::vector"* %9 to i64*
  %40 = icmp eq i64 %37, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %32
  %42 = icmp ugt i64 %37, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  call void @abort() #14
  unreachable

44:                                               ; preds = %41
  %45 = shl i64 %37, 3
  %46 = call i8* @_Znwm(i64 %45) #15
  %47 = bitcast i8* %46 to i8**
  %48 = getelementptr inbounds i8*, i8** %47, i64 %37
  %49 = ptrtoint i8** %48 to i64
  %50 = insertelement <2 x i8*> undef, i8* %46, i32 0
  %51 = shufflevector <2 x i8*> %50, <2 x i8*> undef, <2 x i32> zeroinitializer
  %52 = ptrtoint <2 x i8*> %51 to <2 x i64>
  %53 = bitcast %"class.std::__1::vector"* %9 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %53, align 16
  store i64 %49, i64* %38, align 16
  br label %54

54:                                               ; preds = %44, %32
  %55 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 2
  %56 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %55, i64 0, i32 0, i32 0
  %57 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %56) #13
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59, !prof !2

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %55, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %60) #13
  br label %61

61:                                               ; preds = %54, %59
  %62 = load i64, i64* %18, align 8
  %63 = icmp ult i64 %62, 2147483648
  br i1 %63, label %65, label %64, !prof !2

64:                                               ; preds = %61
  call void @llvm.trap() #13
  unreachable

65:                                               ; preds = %61
  %66 = trunc i64 %62 to i32
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %65
  %69 = bitcast i8** %4 to i8*
  %70 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 4, i32 0
  %71 = bitcast i8*** %35 to i64*
  %72 = shl i64 %62, 32
  %73 = ashr exact i64 %72, 32
  br label %105

74:                                               ; preds = %174, %65
  %75 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 6
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %75, i64 0, i32 0, i32 0
  %77 = load i8**, i8*** %76, align 8
  %78 = icmp eq i8** %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %74
  %80 = ptrtoint i8** %77 to i64
  %81 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 6, i32 0, i32 1
  %82 = bitcast i8*** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = bitcast i8** %77 to i8*
  call void @_ZdlPv(i8* %83) #15
  %84 = bitcast %"class.std::__1::vector"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #13
  br label %85

85:                                               ; preds = %74, %79
  %86 = bitcast %"class.std::__1::vector"* %9 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 16
  %88 = bitcast %"class.std::__1::vector"* %75 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 8
  %89 = load i64, i64* %38, align 16
  %90 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast i8*** %90 to i64*
  store i64 %89, i64* %91, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false) #13
  %92 = icmp eq i8* %1, null
  %93 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %6, i64 0, i32 1
  %94 = load i8*, i8** %93, align 8
  %95 = select i1 %92, i8* %94, i8* %1
  %96 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 4
  store i8* %95, i8** %96, align 8
  %97 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %56) #13
  %98 = load i8**, i8*** %34, align 16
  %99 = icmp eq i8** %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %85
  %101 = bitcast i8*** %35 to i64*
  %102 = ptrtoint i8** %98 to i64
  store i64 %102, i64* %101, align 8
  %103 = bitcast i8** %98 to i8*
  call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %85, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  br label %176

105:                                              ; preds = %68, %174
  %106 = phi i64 [ %73, %68 ], [ %107, %174 ]
  %107 = add nsw i64 %106, -1
  %108 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %6, i64 0, i32 0, i32 0, i64 %107, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 2
  br i1 %110, label %118, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %6, i64 0, i32 0, i32 0, i64 %107, i32 1
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69)
  store i8* %113, i8** %4, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = call { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"* %70, i8** nonnull dereferenceable(8) %4, i8** nonnull dereferenceable(8) %4) #13
  br label %117

117:                                              ; preds = %111, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69)
  br label %118

118:                                              ; preds = %105, %117
  %119 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %6, i64 0, i32 0, i32 0, i64 %107, i32 1
  %120 = bitcast i8** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = load i8**, i8*** %35, align 8
  %123 = load i8**, i8*** %36, align 16
  %124 = icmp ult i8** %122, %123
  %125 = ptrtoint i8** %123 to i64
  br i1 %124, label %126, label %130

126:                                              ; preds = %118
  %127 = bitcast i8** %122 to i64*
  store i64 %121, i64* %127, align 8
  %128 = getelementptr inbounds i8*, i8** %122, i64 1
  %129 = ptrtoint i8** %128 to i64
  store i64 %129, i64* %71, align 8
  br label %174

130:                                              ; preds = %118
  %131 = ptrtoint i8** %122 to i64
  %132 = load i64, i64* %39, align 16
  %133 = sub i64 %131, %132
  %134 = ashr exact i64 %133, 3
  %135 = add nsw i64 %134, 1
  %136 = icmp ugt i64 %135, 2305843009213693951
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %138) #14
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %125, %132
  %141 = ashr exact i64 %140, 3
  %142 = icmp ult i64 %141, 1152921504606846975
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 2
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 2305843009213693951
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  call void @abort() #14
  unreachable

151:                                              ; preds = %148, %139
  %152 = phi i64 [ %146, %148 ], [ 2305843009213693951, %139 ]
  %153 = shl i64 %152, 3
  %154 = call i8* @_Znwm(i64 %153) #15
  %155 = bitcast i8* %154 to i8**
  br label %156

156:                                              ; preds = %151, %143
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i8* [ %154, %151 ], [ null, %143 ]
  %159 = phi i8** [ %155, %151 ], [ null, %143 ]
  %160 = getelementptr inbounds i8*, i8** %159, i64 %134
  %161 = getelementptr inbounds i8*, i8** %159, i64 %157
  %162 = ptrtoint i8** %161 to i64
  %163 = bitcast i8** %160 to i64*
  store i64 %121, i64* %163, align 8
  %164 = getelementptr inbounds i8*, i8** %160, i64 1
  %165 = ptrtoint i8** %164 to i64
  %166 = ptrtoint i8** %159 to i64
  %167 = icmp sgt i64 %133, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %156
  %169 = inttoptr i64 %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %169, i64 %133, i1 false) #13
  br label %170

170:                                              ; preds = %168, %156
  store i64 %166, i64* %39, align 16
  store i64 %165, i64* %71, align 8
  store i64 %162, i64* %38, align 16
  %171 = icmp eq i64 %132, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %170
  %173 = inttoptr i64 %132 to i8*
  call void @_ZdlPv(i8* %173) #15
  br label %174

174:                                              ; preds = %126, %170, %172
  %175 = icmp sgt i64 %107, 0
  br i1 %175, label %105, label %74

176:                                              ; preds = %12, %104
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %13) #13
  br label %177

177:                                              ; preds = %3, %176
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler18CaptureNativeStackEPKcPNS0_6SampleE(%"class.base::SamplingHeapProfiler"* nocapture readonly, i8*, %"class.base::SamplingHeapProfiler::Sample"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [256 x i8*], align 16
  %5 = bitcast [256 x i8*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 2048, i1 false)
  %6 = getelementptr inbounds [256 x i8*], [256 x i8*]* %4, i64 0, i64 0
  %7 = call i64 @_ZN4base5debug23TraceStackFramePointersEPPKvmmb(i8** nonnull %6, i64 255, i64 3, i1 zeroext true) #13
  %8 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 6
  %9 = getelementptr inbounds [256 x i8*], [256 x i8*]* %4, i64 0, i64 %7
  call void @_ZNSt3__16vectorIPvNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %8, i8** nonnull %6, i8** %9)
  %10 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i8, i8* %10 seq_cst, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = call fastcc i8* @_ZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKc(i8* null) #13
  %16 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 5
  store i8* %15, i8** %16, align 8
  br label %17

17:                                               ; preds = %3, %14
  %18 = icmp eq i8* %1, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %17
  %20 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #13
  %21 = icmp eq %"class.base::trace_event::AllocationContextTracker"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %20, i64 0, i32 2, i32 0, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %20, i64 0, i32 2, i32 0, i32 1
  %26 = load i8**, i8*** %25, align 8
  %27 = icmp eq i8** %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8*, i8** %26, i64 -1
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %22, %19, %17
  %32 = phi i8* [ %1, %17 ], [ null, %19 ], [ %30, %28 ], [ null, %22 ]
  %33 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 4
  store i8* %32, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base20SamplingHeapProfiler12RecordStringEPKc(%"class.base::SamplingHeapProfiler"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  store i8* %1, i8** %3, align 8
  %4 = icmp eq i8* %1, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 4, i32 0
  %7 = call { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"* %6, i8** nonnull dereferenceable(8) %3, i8** nonnull dereferenceable(8) %3) #13
  %8 = extractvalue { %"struct.std::__1::__hash_node_base.23"*, i8 } %7, 0
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %8, i64 2
  %10 = bitcast %"struct.std::__1::__hash_node_base.23"* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  br label %12

12:                                               ; preds = %2, %5
  %13 = phi i8* [ %11, %5 ], [ null, %2 ]
  ret i8* %13
}

declare %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() local_unnamed_addr #2

declare void @_ZN4base11trace_event17AllocationContextC1Ev(%"struct.base::trace_event::AllocationContext"*) unnamed_addr #2

declare zeroext i1 @_ZN4base11trace_event24AllocationContextTracker18GetContextSnapshotEPNS0_17AllocationContextE(%"class.base::trace_event::AllocationContextTracker"*, %"struct.base::trace_event::AllocationContext"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPvNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8** %2 to i64
  %5 = ptrtoint i8** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i8*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i8**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i8*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i8*, i8** %1, i64 %22
  %25 = select i1 %23, i8** %24, i8** %2
  %26 = ptrtoint i8** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i8** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i8** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i8**
  %43 = getelementptr inbounds i8*, i8** %42, i64 %39
  %44 = ptrtoint i8** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i8*, i8** %16, i64 %28
  store i8** %48, i8*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i8*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #15
  %75 = bitcast i8* %74 to i8**
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i8*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i8*, i8** %75, i64 %72
  store i8** %79, i8*** %8, align 8
  %80 = bitcast i8*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i8** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i8*, i8** %75, i64 %84
  %87 = ptrtoint i8** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler13SampleRemovedEPv(%"class.base::SamplingHeapProfiler"*, i8*) unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #13
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #13
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %0, i64 0, i32 3, i32 0
  %12 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__hash_table"* %11, i8** nonnull dereferenceable(8) %3) #13
  %13 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler10GetSamplesEj(%"class.std::__1::vector.114"* noalias sret, %"class.base::SamplingHeapProfiler"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples", align 1
  %5 = getelementptr inbounds %"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples", %"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  store i8 -86, i8* %5, align 1
  call void @_ZN4base24PoissonAllocationSampler23ScopedMuteThreadSamplesC1Ev(%"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples"* nonnull %4) #13
  %6 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #13
  br label %12

12:                                               ; preds = %3, %10
  %13 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector.114"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #13
  %16 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  call void @_ZNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.114"* %0, i64 %17)
  %18 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::__hash_node_base"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.base::SamplingHeapProfiler::Sample"** %13 to i64*
  br label %26

24:                                               ; preds = %84, %12
  %25 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #13
  call void @_ZN4base24PoissonAllocationSampler23ScopedMuteThreadSamplesD1Ev(%"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  ret void

26:                                               ; preds = %22, %84
  %27 = phi i64 [ %20, %22 ], [ %86, %84 ]
  %28 = inttoptr i64 %27 to %"struct.std::__1::__hash_node"*
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %28, i64 0, i32 2, i32 0, i32 1, i32 7
  %30 = load i32, i32* %29, align 8
  %31 = icmp ugt i32 %30, %2
  br i1 %31, label %32, label %84

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %28, i64 0, i32 2, i32 0, i32 1
  %34 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %13, align 8
  %35 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %14, align 8
  %36 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %34, %35
  br i1 %36, label %83, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %34 to i8*
  %39 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 40, i1 false) #13
  %40 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %34, i64 0, i32 6
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %28, i64 0, i32 2, i32 0, i32 1, i32 6
  %42 = bitcast %"class.std::__1::vector"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #13
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %28, i64 0, i32 2, i32 0, i32 1, i32 6, i32 0, i32 1
  %44 = bitcast i8*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %41 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %37
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %40 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #14
  unreachable

55:                                               ; preds = %51
  %56 = call i8* @_Znwm(i64 %48) #15
  %57 = bitcast i8* %56 to i8**
  %58 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %34, i64 0, i32 6, i32 0, i32 1
  %59 = bitcast i8*** %58 to i8**
  store i8* %56, i8** %59, align 8
  %60 = bitcast %"class.std::__1::vector"* %40 to i8**
  store i8* %56, i8** %60, align 8
  %61 = getelementptr inbounds i8*, i8** %57, i64 %49
  %62 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %34, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i8** %61, i8*** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %41, i64 0, i32 0, i32 0
  %64 = load i8**, i8*** %63, align 8
  %65 = load i64, i64* %44, align 8
  %66 = bitcast i8*** %58 to i64*
  %67 = ptrtoint i8* %56 to i64
  %68 = ptrtoint i8** %64 to i64
  %69 = sub i64 %65, %68
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %55
  %72 = lshr exact i64 %69, 3
  %73 = bitcast i8** %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %73, i64 %69, i1 false) #13
  %74 = getelementptr inbounds i8*, i8** %57, i64 %72
  %75 = ptrtoint i8** %74 to i64
  br label %76

76:                                               ; preds = %71, %55
  %77 = phi i64 [ %75, %71 ], [ %67, %55 ]
  store i64 %77, i64* %66, align 8
  br label %78

78:                                               ; preds = %76, %37
  %79 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %34, i64 0, i32 7
  %80 = load i32, i32* %29, align 8
  store i32 %80, i32* %79, align 8
  %81 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %34, i64 1
  %82 = ptrtoint %"class.base::SamplingHeapProfiler::Sample"* %81 to i64
  store i64 %82, i64* %23, align 8
  br label %84

83:                                               ; preds = %32
  call void @_ZNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.114"* %0, %"class.base::SamplingHeapProfiler::Sample"* dereferenceable(72) %33) #13
  br label %84

84:                                               ; preds = %83, %78, %26
  %85 = inttoptr i64 %27 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %24, label %26
}

declare void @_ZN4base24PoissonAllocationSampler23ScopedMuteThreadSamplesC1Ev(%"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.114"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.base::SamplingHeapProfiler::Sample"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.114"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.base::SamplingHeapProfiler::Sample"*
  br i1 %10, label %12, label %108

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.base::SamplingHeapProfiler::Sample"** %13 to i64*
  %15 = icmp ugt i64 %1, 256204778801521550
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 72
  %21 = mul i64 %1, 72
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %"class.base::SamplingHeapProfiler::Sample"*
  %24 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %23, i64 %20
  %25 = ptrtoint %"class.base::SamplingHeapProfiler::Sample"* %24 to i64
  %26 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %23, i64 %1
  %27 = ptrtoint %"class.base::SamplingHeapProfiler::Sample"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.base::SamplingHeapProfiler::Sample"*
  %29 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %28, %11
  br i1 %29, label %85, label %30

30:                                               ; preds = %17, %75
  %31 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %33, %75 ], [ %24, %17 ]
  %32 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %34, %75 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %31, i64 -1
  %34 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %32, i64 -1
  %35 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %33 to i8*
  %36 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 40, i1 false) #13
  %37 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %31, i64 -1, i32 6
  %38 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %32, i64 -1, i32 6
  %39 = bitcast %"class.std::__1::vector"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #13
  %40 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %32, i64 -1, i32 6, i32 0, i32 1
  %41 = bitcast i8*** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %30
  %49 = icmp ugt i64 %46, 2305843009213693951
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector"* %37 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #14
  unreachable

52:                                               ; preds = %48
  %53 = tail call i8* @_Znwm(i64 %45) #15
  %54 = bitcast i8* %53 to i8**
  %55 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %31, i64 -1, i32 6, i32 0, i32 1
  %56 = bitcast i8*** %55 to i8**
  store i8* %53, i8** %56, align 8
  %57 = bitcast %"class.std::__1::vector"* %37 to i8**
  store i8* %53, i8** %57, align 8
  %58 = getelementptr inbounds i8*, i8** %54, i64 %46
  %59 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %31, i64 -1, i32 6, i32 0, i32 2, i32 0, i32 0
  store i8** %58, i8*** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %38, i64 0, i32 0, i32 0
  %61 = load i8**, i8*** %60, align 8
  %62 = load i64, i64* %41, align 8
  %63 = bitcast i8*** %55 to i64*
  %64 = ptrtoint i8* %53 to i64
  %65 = ptrtoint i8** %61 to i64
  %66 = sub i64 %62, %65
  %67 = icmp sgt i64 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %52
  %69 = lshr exact i64 %66, 3
  %70 = bitcast i8** %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 8 %70, i64 %66, i1 false) #13
  %71 = getelementptr inbounds i8*, i8** %54, i64 %69
  %72 = ptrtoint i8** %71 to i64
  br label %73

73:                                               ; preds = %68, %52
  %74 = phi i64 [ %72, %68 ], [ %64, %52 ]
  store i64 %74, i64* %63, align 8
  br label %75

75:                                               ; preds = %73, %30
  %76 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %31, i64 -1, i32 7
  %77 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %32, i64 -1, i32 7
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %34, %11
  br i1 %79, label %80, label %30

80:                                               ; preds = %75
  %81 = ptrtoint %"class.base::SamplingHeapProfiler::Sample"* %33 to i64
  %82 = load i64, i64* %6, align 8
  %83 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %13, align 8
  %84 = inttoptr i64 %82 to %"class.base::SamplingHeapProfiler::Sample"*
  br label %85

85:                                               ; preds = %17, %80
  %86 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %84, %80 ], [ %28, %17 ]
  %87 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %83, %80 ], [ %11, %17 ]
  %88 = phi i64 [ %81, %80 ], [ %25, %17 ]
  %89 = phi i64 [ %82, %80 ], [ %18, %17 ]
  store i64 %88, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %90 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %87, %86
  br i1 %90, label %104, label %91

91:                                               ; preds = %85, %102
  %92 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %93, %102 ], [ %87, %85 ]
  %93 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %92, i64 -1
  %94 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %92, i64 -1, i32 6, i32 0, i32 0
  %95 = load i8**, i8*** %94, align 8
  %96 = icmp eq i8** %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = ptrtoint i8** %95 to i64
  %99 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %92, i64 -1, i32 6, i32 0, i32 1
  %100 = bitcast i8*** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i8** %95 to i8*
  tail call void @_ZdlPv(i8* %101) #15
  br label %102

102:                                              ; preds = %97, %91
  %103 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %93, %86
  br i1 %103, label %104, label %91

104:                                              ; preds = %102, %85
  %105 = icmp eq i64 %89, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %89 to i8*
  tail call void @_ZdlPv(i8* %107) #15
  br label %108

108:                                              ; preds = %106, %104, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base24PoissonAllocationSampler23ScopedMuteThreadSamplesD1Ev(%"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler10GetStringsEv(%"class.std::__1::vector.105"* noalias sret, %"class.base::SamplingHeapProfiler"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples", align 1
  %4 = getelementptr inbounds %"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples", %"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  call void @_ZN4base24PoissonAllocationSampler23ScopedMuteThreadSamplesC1Ev(%"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples"* nonnull %3) #13
  %5 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #13
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #13
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"class.base::SamplingHeapProfiler", %"class.base::SamplingHeapProfiler"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %12, align 8
  %14 = bitcast %"class.std::__1::vector.105"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #13
  %15 = icmp eq %"struct.std::__1::__hash_node_base.23"* %13, null
  br i1 %15, label %53, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"struct.std::__1::__hash_node_base.23"* %13 to i64
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i64 [ %21, %18 ], [ 0, %16 ]
  %20 = phi i64 [ %23, %18 ], [ %17, %16 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = inttoptr i64 %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %18

25:                                               ; preds = %18
  %26 = icmp ugt i64 %19, 2305843009213693950
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.105"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #14
  unreachable

29:                                               ; preds = %25
  %30 = shl i64 %21, 3
  %31 = call i8* @_Znwm(i64 %30) #15
  %32 = bitcast i8* %31 to i8**
  %33 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 1
  %34 = bitcast i8*** %33 to i8**
  store i8* %31, i8** %34, align 8
  %35 = bitcast %"class.std::__1::vector.105"* %0 to i8**
  store i8* %31, i8** %35, align 8
  %36 = getelementptr inbounds i8*, i8** %32, i64 %21
  %37 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8** %36, i8*** %37, align 8
  br label %38

38:                                               ; preds = %38, %29
  %39 = phi i8** [ %32, %29 ], [ %48, %38 ]
  %40 = phi i64 [ %17, %29 ], [ %47, %38 ]
  %41 = bitcast i8** %39 to i64*
  %42 = inttoptr i64 %40 to %"struct.std::__1::__hash_node.126"*
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node.126", %"struct.std::__1::__hash_node.126"* %42, i64 0, i32 2
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %41, align 8
  %46 = inttoptr i64 %40 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8*, i8** %39, i64 1
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %50, label %38

50:                                               ; preds = %38
  %51 = bitcast i8*** %33 to i64*
  %52 = ptrtoint i8** %48 to i64
  store i64 %52, i64* %51, align 8
  br label %53

53:                                               ; preds = %11, %50
  %54 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #13
  call void @_ZN4base24PoissonAllocationSampler23ScopedMuteThreadSamplesD1Ev(%"class.base::PoissonAllocationSampler::ScopedMuteThreadSamples"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler4InitEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base24PoissonAllocationSampler4InitEv() #13
  ret void
}

declare void @_ZN4base24PoissonAllocationSampler4InitEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base20SamplingHeapProfiler3GetEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !4

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base20SamplingHeapProfiler3GetEvE8instance) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN4base20SamplingHeapProfilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN4base20SamplingHeapProfilerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* bitcast (%"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance to <2 x i32 (...)**>*), align 16
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 16) to %"class.base::internal::LockImpl"*)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 56), i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 88) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 96), i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 128) to i32*), align 16
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 136) to %"class.base::internal::LockImpl"*)) #13
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 176) to i32*), align 16
  store i32 1, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 180) to i32*), align 4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance, i64 0, i32 0, i64 184), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base20SamplingHeapProfiler3GetEvE8instance) #13
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.base::SamplingHeapProfiler"* bitcast (%"class.base::NoDestructor"* @_ZZN4base20SamplingHeapProfiler3GetEvE8instance to %"class.base::SamplingHeapProfiler"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SamplingHeapProfiler19OnThreadNameChangedEPKc(%"class.base::SamplingHeapProfiler"* nocapture readnone, i8*) unnamed_addr #0 align 2 {
  %3 = tail call fastcc i8* @_ZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKc(i8* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N4base20SamplingHeapProfiler19OnThreadNameChangedEPKc(%"class.base::SamplingHeapProfiler"* nocapture readnone, i8*) unnamed_addr #0 align 2 {
  %3 = tail call fastcc i8* @_ZN4base12_GLOBAL__N_122UpdateAndGetThreadNameEPKc(i8* %1) #13
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare i8* @_ZN4base19ThreadIdNameManager23GetNameForCurrentThreadEv(%"class.base::ThreadIdNameManager"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @prctl(i32, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #7

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRS2_S5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i8** dereferenceable(8), i8** dereferenceable(8), %"class.base::SamplingHeapProfiler::Sample"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i8** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %6 to i8*
  br i1 %22, label %68, label %24

24:                                               ; preds = %4
  %25 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !5
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %21, -1
  %29 = and i64 %19, %28
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %19, %21
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %19, %21
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %19, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %68, label %41

41:                                               ; preds = %34
  %42 = add i64 %21, -1
  br label %43

43:                                               ; preds = %41, %63
  %44 = phi %"struct.std::__1::__hash_node_base"* [ %46, %63 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %47, label %68, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %42
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %21
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %21
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %63, label %68

63:                                               ; preds = %48, %60
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, %23
  br i1 %67, label %196, label %43

68:                                               ; preds = %43, %60, %34, %4
  %69 = phi i64 [ %35, %34 ], [ -6148914691236517206, %4 ], [ %35, %60 ], [ %35, %43 ]
  %70 = tail call i8* @_Znwm(i64 96) #15, !noalias !6
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = bitcast i8** %2 to i64*
  %73 = load i64, i64* %72, align 8, !noalias !6
  %74 = bitcast i8* %71 to i64*
  store i64 %73, i64* %74, align 8, !noalias !6
  %75 = getelementptr inbounds i8, i8* %70, i64 24
  %76 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 40, i1 false) #13, !noalias !6
  %77 = getelementptr inbounds i8, i8* %70, i64 64
  %78 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %3, i64 0, i32 6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #13, !noalias !6
  %79 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %3, i64 0, i32 6, i32 0, i32 1
  %80 = bitcast i8*** %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !6
  %82 = bitcast %"class.std::__1::vector"* %78 to i64*
  %83 = load i64, i64* %82, align 8, !noalias !6
  %84 = sub i64 %81, %83
  %85 = ashr exact i64 %84, 3
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %110, label %87

87:                                               ; preds = %68
  %88 = icmp ugt i64 %85, 2305843009213693951
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = bitcast i8* %77 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #14, !noalias !6
  unreachable

91:                                               ; preds = %87
  %92 = tail call i8* @_Znwm(i64 %84) #15, !noalias !6
  %93 = bitcast i8* %92 to i8**
  %94 = getelementptr inbounds i8, i8* %70, i64 72
  %95 = bitcast i8* %94 to i8**
  store i8* %92, i8** %95, align 8, !noalias !6
  %96 = bitcast i8* %77 to i8**
  store i8* %92, i8** %96, align 8, !noalias !6
  %97 = getelementptr inbounds i8*, i8** %93, i64 %85
  %98 = getelementptr inbounds i8, i8* %70, i64 80
  %99 = bitcast i8* %98 to i8***
  store i8** %97, i8*** %99, align 8, !noalias !6
  %100 = bitcast i8* %94 to i64*
  %101 = ptrtoint i8* %92 to i64
  %102 = icmp sgt i64 %84, 0
  br i1 %102, label %103, label %108

103:                                              ; preds = %91
  %104 = lshr exact i64 %84, 3
  %105 = inttoptr i64 %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 %105, i64 %84, i1 false) #13, !noalias !6
  %106 = getelementptr inbounds i8*, i8** %93, i64 %104
  %107 = ptrtoint i8** %106 to i64
  br label %108

108:                                              ; preds = %103, %91
  %109 = phi i64 [ %107, %103 ], [ %101, %91 ]
  store i64 %109, i64* %100, align 8, !noalias !6
  br label %110

110:                                              ; preds = %68, %108
  %111 = getelementptr inbounds i8, i8* %70, i64 88
  %112 = bitcast i8* %111 to i32*
  %113 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %3, i64 0, i32 7
  %114 = load i32, i32* %113, align 8, !noalias !6
  store i32 %114, i32* %112, align 8, !noalias !6
  %115 = getelementptr inbounds i8, i8* %70, i64 8
  %116 = bitcast i8* %115 to i64*
  store i64 %19, i64* %116, align 8, !noalias !6
  %117 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %117, align 8, !noalias !6
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 1
  %121 = uitofp i64 %120 to float
  %122 = uitofp i64 %21 to float
  %123 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %124 = load float, float* %123, align 4
  %125 = fmul float %124, %122
  %126 = fcmp olt float %125, %121
  %127 = or i1 %22, %126
  br i1 %127, label %128, label %151

128:                                              ; preds = %110
  %129 = shl i64 %21, 1
  %130 = icmp ult i64 %21, 3
  %131 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !5
  %132 = icmp ugt i64 %131, 1
  %133 = or i1 %130, %132
  %134 = zext i1 %133 to i64
  %135 = or i64 %129, %134
  %136 = fdiv float %121, %124
  %137 = tail call float @llvm.ceil.f32(float %136) #13
  %138 = fptoui float %137 to i64
  %139 = icmp ult i64 %135, %138
  %140 = select i1 %139, i64 %138, i64 %135
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %140)
  %141 = load i64, i64* %20, align 8
  %142 = tail call i64 @llvm.ctpop.i64(i64 %141) #13, !range !5
  %143 = icmp ugt i64 %142, 1
  br i1 %143, label %147, label %144

144:                                              ; preds = %128
  %145 = add i64 %141, -1
  %146 = and i64 %145, %19
  br label %151

147:                                              ; preds = %128
  %148 = icmp ult i64 %19, %141
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = urem i64 %19, %141
  br label %151

151:                                              ; preds = %149, %147, %144, %110
  %152 = phi i64 [ %21, %110 ], [ %141, %144 ], [ %141, %147 ], [ %141, %149 ]
  %153 = phi i64 [ %69, %110 ], [ %146, %144 ], [ %19, %147 ], [ %150, %149 ]
  %154 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %154, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, i64 %153
  %157 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base"* %157, null
  br i1 %158, label %159, label %185

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %161 = bitcast %"struct.std::__1::__hash_node_base"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast i8* %70 to i64*
  store i64 %162, i64* %163, align 8
  %164 = bitcast %"struct.std::__1::__hash_node_base"* %160 to i8**
  store i8* %70, i8** %164, align 8
  store %"struct.std::__1::__hash_node_base"* %160, %"struct.std::__1::__hash_node_base"** %156, align 8
  %165 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base"* %165, null
  br i1 %166, label %192, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %165, i64 1
  %169 = bitcast %"struct.std::__1::__hash_node_base"* %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = tail call i64 @llvm.ctpop.i64(i64 %152) #13, !range !5
  %172 = icmp ugt i64 %171, 1
  br i1 %172, label %176, label %173

173:                                              ; preds = %167
  %174 = add i64 %152, -1
  %175 = and i64 %170, %174
  br label %180

176:                                              ; preds = %167
  %177 = icmp ult i64 %170, %152
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = urem i64 %170, %152
  br label %180

180:                                              ; preds = %173, %176, %178
  %181 = phi i64 [ %175, %173 ], [ %179, %178 ], [ %170, %176 ]
  %182 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %154, align 8
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %182, i64 %181
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %183 to i8**
  br label %190

185:                                              ; preds = %151
  %186 = bitcast %"struct.std::__1::__hash_node_base"* %157 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast i8* %70 to i64*
  store i64 %187, i64* %188, align 8
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %157 to i8**
  br label %190

190:                                              ; preds = %180, %185
  %191 = phi i8** [ %189, %185 ], [ %184, %180 ]
  store i8* %70, i8** %191, align 8
  br label %192

192:                                              ; preds = %190, %159
  %193 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base"*
  %194 = load i64, i64* %118, align 8
  %195 = add i64 %194, 1
  store i64 %195, i64* %118, align 8
  br label %196

196:                                              ; preds = %63, %192
  %197 = phi i8 [ 1, %192 ], [ 0, %63 ]
  %198 = phi %"struct.std::__1::__hash_node_base"* [ %193, %192 ], [ %46, %63 ]
  %199 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %198, 0
  %200 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %199, i8 %197, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %200
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !9

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  %112 = load i8*, i8** %102, align 8
  %113 = load i8*, i8** %111, align 8
  %114 = icmp eq i8* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"*, i8** dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i8*, i8** %1, align 8
  %5 = ptrtoint i8* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !5
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.23"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.23"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.23"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.23"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.23"* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #15, !noalias !11
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast i8** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !11
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !11
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !11
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.23"**
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %75, align 8, !noalias !11
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !5
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #13
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.19"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !5
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.23"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.23"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.23"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.23"* %118, %"struct.std::__1::__hash_node_base.23"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.23"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.23"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !5
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.23"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.23"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.23"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.23"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.23"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.23"*, i8 } undef, %"struct.std::__1::__hash_node_base.23"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.23"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.23"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.19"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.19"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.19"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.19"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.19"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.23"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.23"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.25", %"class.std::__1::__bucket_list_deallocator.25"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !14

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.23"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.23"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.23"* %36, %"struct.std::__1::__hash_node_base.23"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.23"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.23"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.23"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.23"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.23"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.23"* %101 to i8**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.23"* %82, %"struct.std::__1::__hash_node_base.23"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.23"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.23"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.23"* %110 to i8**
  %112 = load i8*, i8** %102, align 8
  %113 = load i8*, i8** %111, align 8
  %114 = icmp eq i8* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.23"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.23"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.23"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.23"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.23"* %80, %"struct.std::__1::__hash_node_base.23"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.23"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.23"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.23"** null, %"struct.std::__1::__hash_node_base.23"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.23"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.23"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.25", %"class.std::__1::__bucket_list_deallocator.25"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__hash_table"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.129", align 8
  %4 = bitcast i8** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to i8*
  br i1 %21, label %92, label %23

23:                                               ; preds = %2
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !5
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %92, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %92, label %44

44:                                               ; preds = %40
  %45 = add i64 %20, -1
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %69, %67 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %67, label %92

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, %22
  br i1 %66, label %71, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %70, label %92, label %46

71:                                               ; preds = %62
  %72 = bitcast %"class.std::__1::unique_ptr.129"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_S2_EEEE(%"class.std::__1::unique_ptr.129"* nonnull sret %3, %"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* nonnull %47) #13
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %73, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node"* %74, null
  br i1 %75, label %91, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %78 = load i8, i8* %77, align 8, !range !15
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %74, i64 0, i32 2, i32 0, i32 1, i32 6, i32 0, i32 0
  %82 = load i8**, i8*** %81, align 8
  %83 = icmp eq i8** %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i8** %82 to i64
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %74, i64 0, i32 2, i32 0, i32 1, i32 6, i32 0, i32 1
  %87 = bitcast i8*** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i8** %82 to i8*
  call void @_ZdlPv(i8* %88) #15
  br label %89

89:                                               ; preds = %84, %80, %76
  %90 = bitcast %"struct.std::__1::__hash_node"* %74 to i8*
  call void @_ZdlPv(i8* %90) #15
  br label %91

91:                                               ; preds = %71, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72)
  br label %92

92:                                               ; preds = %59, %67, %40, %2, %33, %91
  %93 = phi i64 [ 1, %91 ], [ 0, %33 ], [ 0, %2 ], [ 0, %40 ], [ 0, %67 ], [ 0, %59 ]
  ret i64 %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_S2_EEEE(%"class.std::__1::unique_ptr.129"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.9"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.129"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.12"** %98 to %"class.std::__1::__compressed_pair.9"**
  store %"class.std::__1::__compressed_pair.9"* %30, %"class.std::__1::__compressed_pair.9"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.114"*, %"class.base::SamplingHeapProfiler::Sample"* dereferenceable(72)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::SamplingHeapProfiler::Sample"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.114"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.114"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::SamplingHeapProfiler::Sample"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.base::SamplingHeapProfiler::Sample"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %33, i64 %9
  %35 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %33, i64 %32
  %36 = ptrtoint %"class.base::SamplingHeapProfiler::Sample"* %35 to i64
  %37 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %34 to i8*
  %38 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 40, i1 false) #13
  %39 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %33, i64 %9, i32 6
  %40 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 6
  %41 = bitcast %"class.std::__1::vector"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #13
  %42 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 6, i32 0, i32 1
  %43 = bitcast i8*** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector"* %40 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = ashr exact i64 %47, 3
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %77, label %50

50:                                               ; preds = %31
  %51 = icmp ugt i64 %48, 2305843009213693951
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector"* %39 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #14
  unreachable

54:                                               ; preds = %50
  %55 = tail call i8* @_Znwm(i64 %47) #15
  %56 = bitcast i8* %55 to i8**
  %57 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %33, i64 %9, i32 6, i32 0, i32 1
  %58 = bitcast i8*** %57 to i8**
  store i8* %55, i8** %58, align 8
  %59 = bitcast %"class.std::__1::vector"* %39 to i8**
  store i8* %55, i8** %59, align 8
  %60 = getelementptr inbounds i8*, i8** %56, i64 %48
  %61 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %33, i64 %9, i32 6, i32 0, i32 2, i32 0, i32 0
  store i8** %60, i8*** %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %63 = load i8**, i8*** %62, align 8
  %64 = load i64, i64* %43, align 8
  %65 = bitcast i8*** %57 to i64*
  %66 = ptrtoint i8* %55 to i64
  %67 = ptrtoint i8** %63 to i64
  %68 = sub i64 %64, %67
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %54
  %71 = lshr exact i64 %68, 3
  %72 = bitcast i8** %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %72, i64 %68, i1 false) #13
  %73 = getelementptr inbounds i8*, i8** %56, i64 %71
  %74 = ptrtoint i8** %73 to i64
  br label %75

75:                                               ; preds = %70, %54
  %76 = phi i64 [ %74, %70 ], [ %66, %54 ]
  store i64 %76, i64* %65, align 8
  br label %77

77:                                               ; preds = %31, %75
  %78 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %33, i64 %9, i32 7
  %79 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 7
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  %81 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %34, i64 1
  %82 = ptrtoint %"class.base::SamplingHeapProfiler::Sample"* %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %0, i64 0, i32 0, i32 0
  %84 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %83, align 8
  %85 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %3, align 8
  %86 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %85, %84
  br i1 %86, label %87, label %89

87:                                               ; preds = %77
  %88 = ptrtoint %"class.base::SamplingHeapProfiler::Sample"* %84 to i64
  br label %142

89:                                               ; preds = %77, %134
  %90 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %92, %134 ], [ %34, %77 ]
  %91 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %93, %134 ], [ %85, %77 ]
  %92 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %90, i64 -1
  %93 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %91, i64 -1
  %94 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %92 to i8*
  %95 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 40, i1 false) #13
  %96 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %90, i64 -1, i32 6
  %97 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %91, i64 -1, i32 6
  %98 = bitcast %"class.std::__1::vector"* %96 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 24, i1 false) #13
  %99 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %91, i64 -1, i32 6, i32 0, i32 1
  %100 = bitcast i8*** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::vector"* %97 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %101, %103
  %105 = ashr exact i64 %104, 3
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %134, label %107

107:                                              ; preds = %89
  %108 = icmp ugt i64 %105, 2305843009213693951
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = bitcast %"class.std::__1::vector"* %96 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #14
  unreachable

111:                                              ; preds = %107
  %112 = tail call i8* @_Znwm(i64 %104) #15
  %113 = bitcast i8* %112 to i8**
  %114 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %90, i64 -1, i32 6, i32 0, i32 1
  %115 = bitcast i8*** %114 to i8**
  store i8* %112, i8** %115, align 8
  %116 = bitcast %"class.std::__1::vector"* %96 to i8**
  store i8* %112, i8** %116, align 8
  %117 = getelementptr inbounds i8*, i8** %113, i64 %105
  %118 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %90, i64 -1, i32 6, i32 0, i32 2, i32 0, i32 0
  store i8** %117, i8*** %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %97, i64 0, i32 0, i32 0
  %120 = load i8**, i8*** %119, align 8
  %121 = load i64, i64* %100, align 8
  %122 = bitcast i8*** %114 to i64*
  %123 = ptrtoint i8* %112 to i64
  %124 = ptrtoint i8** %120 to i64
  %125 = sub i64 %121, %124
  %126 = icmp sgt i64 %125, 0
  br i1 %126, label %127, label %132

127:                                              ; preds = %111
  %128 = lshr exact i64 %125, 3
  %129 = bitcast i8** %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 8 %129, i64 %125, i1 false) #13
  %130 = getelementptr inbounds i8*, i8** %113, i64 %128
  %131 = ptrtoint i8** %130 to i64
  br label %132

132:                                              ; preds = %127, %111
  %133 = phi i64 [ %131, %127 ], [ %123, %111 ]
  store i64 %133, i64* %122, align 8
  br label %134

134:                                              ; preds = %132, %89
  %135 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %90, i64 -1, i32 7
  %136 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %91, i64 -1, i32 7
  %137 = load i32, i32* %136, align 8
  store i32 %137, i32* %135, align 8
  %138 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %93, %84
  br i1 %138, label %139, label %89

139:                                              ; preds = %134
  %140 = load i64, i64* %6, align 8
  %141 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %3, align 8
  br label %142

142:                                              ; preds = %87, %139
  %143 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %84, %87 ], [ %141, %139 ]
  %144 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %34, %87 ], [ %92, %139 ]
  %145 = phi i64 [ %88, %87 ], [ %140, %139 ]
  %146 = ptrtoint %"class.base::SamplingHeapProfiler::Sample"* %144 to i64
  store i64 %146, i64* %6, align 8
  store i64 %82, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %147 = inttoptr i64 %145 to %"class.base::SamplingHeapProfiler::Sample"*
  %148 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %143, %147
  br i1 %148, label %162, label %149

149:                                              ; preds = %142, %160
  %150 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %151, %160 ], [ %143, %142 ]
  %151 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %150, i64 -1
  %152 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %150, i64 -1, i32 6, i32 0, i32 0
  %153 = load i8**, i8*** %152, align 8
  %154 = icmp eq i8** %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %149
  %156 = ptrtoint i8** %153 to i64
  %157 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %150, i64 -1, i32 6, i32 0, i32 1
  %158 = bitcast i8*** %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = bitcast i8** %153 to i8*
  tail call void @_ZdlPv(i8* %159) #15
  br label %160

160:                                              ; preds = %155, %149
  %161 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %151, %147
  br i1 %161, label %162, label %149

162:                                              ; preds = %160, %142
  %163 = icmp eq i64 %145, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %145 to i8*
  tail call void @_ZdlPv(i8* %165) #15
  br label %166

166:                                              ; preds = %162, %164
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{i64 0, i64 65}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRS2_JS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_S2_EENS_22__hash_node_destructorINSF_ISM_EEEEEEmOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN4base20SamplingHeapProfiler6SampleEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRS2_JS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_S2_EENS_22__hash_node_destructorINSF_ISM_EEEEEEmOT_DpOT0_"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__112__hash_tableIPKcNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!14 = distinct !{!14, !10}
!15 = !{i8 0, i8 2}
