; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkResourceProvider.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkResourceProvider.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray, %class.SkSTArray, %class.SkTArray.5, %class.SkSTArray.6, %class.SkMutex, %class.SkSTArray.6, %class.SkTDynamicHash.242, %class.SkTDynamicHash.251, %class.sk_sp.260, %class.SkSTArray.269, %class.GrResourceHandle, %class.GrResourceHandle }
%struct.VkPipelineCache_T = type opaque
%class.SkTArray = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp, %class.GrVkRenderPass* }
%class.sk_sp = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type { %class.GrVkManagedResource, %struct.VkPipeline_T*, %struct.VkPipelineLayout_T* }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.VkPipeline_T = type opaque
%struct.VkPipelineLayout_T = type opaque
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%struct.VkRenderPass_T = type opaque
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.1 }
%class.SkAlignedSTStorage = type { [224 x i8] }
%class.SkTArray.1 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.2, i32, [4 x i8] }>
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [32 x i8] }
%class.SkTArray.4 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.5 = type { %class.GrVkRenderPass**, i64 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.175" }
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkSTArray.6 = type { %class.SkAlignedSTStorage.7, %class.SkTArray.8 }
%class.SkAlignedSTStorage.7 = type { [32 x i8] }
%class.SkTArray.8 = type { %class.GrVkCommandPool**, i64 }
%class.GrVkCommandPool = type <{ %class.GrVkManagedResource, i8, [7 x i8], %struct.VkCommandPool_T*, %"class.std::__1::unique_ptr", %class.SkSTArray.240, i32, [4 x i8] }>
%struct.VkCommandPool_T = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrVkPrimaryCommandBuffer* }
%class.GrVkPrimaryCommandBuffer = type { %class.GrVkCommandBuffer.base, %class.SkTArray.229, %struct.VkFence_T*, %class.SkTArray.236 }
%class.GrVkCommandBuffer.base = type <{ i32 (...)**, %class.SkSTArray.9, %class.SkSTArray.13, %class.SkSTArray.16, %class.SkSTArray.20, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.223, %class.SkSTArray.226, i8, [3 x i8], i32, i32, i8 }>
%class.SkSTArray.9 = type { %class.SkAlignedSTStorage.10, %class.SkTArray.11 }
%class.SkAlignedSTStorage.10 = type { [256 x i8] }
%class.SkTArray.11 = type { %class.sk_sp.12*, i64 }
%class.sk_sp.12 = type { %class.GrManagedResource* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSTArray.13 = type { %class.SkAlignedSTStorage.14, %class.SkTArray.15 }
%class.SkAlignedSTStorage.14 = type { [256 x i8] }
%class.SkTArray.15 = type { %class.gr_sp*, i64 }
%class.gr_sp = type { %class.GrRecycledResource* }
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkSTArray.16 = type { %class.SkAlignedSTStorage.17, %class.SkTArray.18 }
%class.SkAlignedSTStorage.17 = type { [128 x i8] }
%class.SkTArray.18 = type { %class.sk_sp.19*, i64 }
%class.sk_sp.19 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%class.SkSTArray.20 = type { %class.SkAlignedSTStorage.21, %class.SkTArray.22 }
%class.SkAlignedSTStorage.21 = type { [128 x i8] }
%class.SkTArray.22 = type { %class.gr_sp.23*, i64 }
%class.gr_sp.23 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.221 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.24, i8* }
%class.sk_sp.24 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.25, %"class.std::__1::unique_ptr.27", i32, %class.GrDirectContext*, %class.SkSTArray.218, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.25 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.26, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.26 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.70", %"class.std::__1::shared_ptr.70", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.72", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.78" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.42", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.44" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.69"* }
%"class.std::__1::vector.69" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.70" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.70", %"class.std::__1::vector.285", i8, %"class.std::__1::vector.293", %"class.std::__1::forward_list", %class.SkTHashMap.306, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"class.std::__1::unique_ptr.287"*, %"class.std::__1::unique_ptr.287"*, %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.std::__1::unique_ptr.287"* }
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"class.std::__1::unique_ptr.295"*, %"class.std::__1::unique_ptr.295"*, %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::unique_ptr.295"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.306 = type { %class.SkTHashTable.307 }
%class.SkTHashTable.307 = type { i32, i32, %class.SkAutoTArray.308 }
%class.SkAutoTArray.308 = type { %"class.std::__1::unique_ptr.309" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.643" }
%"struct.std::__1::pair.643" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.70", %"class.std::__1::shared_ptr.71" }
%"class.std::__1::shared_ptr.71" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.50", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { i64 }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.35 }
%union.anon.35 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { i64*, i64*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %class.sk_sp.153, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.193", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.89", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.88 }
%class.sk_sp.88 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.92, %class.SkTHashMap, %class.SkTHashMap.100, %class.SkTArray.109, %class.SkTArray.111, i32, i8, [3 x i8] }>
%class.SkTArray.92 = type { %"class.std::__1::unique_ptr.93"*, i64 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.111, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.112 }
%class.sk_sp.112 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.100 = type { %class.SkTHashTable.101 }
%class.SkTHashTable.101 = type { i32, i32, %class.SkAutoTArray.102 }
%class.SkAutoTArray.102 = type { %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.626" }
%"struct.std::__1::pair.626" = type { i32, %class.SkTArray.627* }
%class.SkTArray.627 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.109 = type { %"class.std::__1::unique_ptr.110"*, i64 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.627, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.111 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.125 }
%class.SkFibBlockSizes.125 = type { i32 }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type { %"struct.std::__1::atomic", %class.SkExecutor* }
%class.SkExecutor = type { i32 (...)** }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.153 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.165, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.181, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.157 }
%class.SkTHashTable.157 = type { i32, i32, %class.SkAutoTArray.158 }
%class.SkAutoTArray.158 = type { %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.165 = type { %class.SkTHashTable.166 }
%class.SkTHashTable.166 = type { i32, i32, %class.SkAutoTArray.167 }
%class.SkAutoTArray.167 = type { %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.174, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.174 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.180, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.180 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.181 = type { %class.SkTHashTable.182 }
%class.SkTHashTable.182 = type { i32, i32, %class.SkAutoTArray.183 }
%class.SkAutoTArray.183 = type { %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.25, %class.sk_sp.196, %class.sk_sp.196 }
%class.sk_sp.196 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray.218 = type { %class.SkAlignedSTStorage.219, %class.SkTArray.220 }
%class.SkAlignedSTStorage.219 = type { [64 x i8] }
%class.SkTArray.220 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.221 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.222, void (i8*)*, i8* }
%class.SkNVRefCnt.222 = type { %"struct.std::__1::atomic" }
%struct.VkCommandBuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%class.SkSTArray.223 = type { %class.SkAlignedSTStorage.224, %class.SkTArray.225 }
%class.SkAlignedSTStorage.224 = type { [56 x i8] }
%class.SkTArray.225 = type { %struct.VkBufferMemoryBarrier*, i64 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%class.SkSTArray.226 = type { %class.SkAlignedSTStorage.227, %class.SkTArray.228 }
%class.SkAlignedSTStorage.227 = type { [144 x i8] }
%class.SkTArray.228 = type { %struct.VkImageMemoryBarrier*, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%class.SkTArray.229 = type { %"class.std::__1::unique_ptr.230"*, i64 }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.GrVkSecondaryCommandBuffer* }
%class.GrVkSecondaryCommandBuffer = type { %class.GrVkCommandBuffer.base, [3 x i8] }
%struct.VkFence_T = type opaque
%class.SkTArray.236 = type { %class.sk_sp.221*, i64 }
%class.SkSTArray.240 = type { %class.SkAlignedSTStorage.241, %class.SkTArray.229 }
%class.SkAlignedSTStorage.241 = type { [32 x i8] }
%class.SkTDynamicHash.242 = type { %class.SkTHashTable.243 }
%class.SkTHashTable.243 = type { i32, i32, %class.SkAutoTArray.244 }
%class.SkAutoTArray.244 = type { %"class.std::__1::unique_ptr.245" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type <{ %class.GrVkSampler*, i32, [4 x i8] }>
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%struct.VkSampler_T = type opaque
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.SkTDynamicHash.251 = type { %class.SkTHashTable.252 }
%class.SkTHashTable.252 = type { i32, i32, %class.SkAutoTArray.253 }
%class.SkAutoTArray.253 = type { %"class.std::__1::unique_ptr.254" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type <{ %class.GrVkSamplerYcbcrConversion*, i32, [4 x i8] }>
%class.sk_sp.260 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.261, %class.SkTInternalLList }
%class.SkTHashTable.261 = type { i32, i32, %class.SkAutoTArray.262 }
%class.SkAutoTArray.262 = type { %"class.std::__1::unique_ptr.263" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.269 = type { %class.SkAlignedSTStorage.270, %class.SkTArray.271 }
%class.SkAlignedSTStorage.270 = type { [32 x i8] }
%class.SkTArray.271 = type { %"class.std::__1::unique_ptr.272"*, i64 }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.275, %class.SkSTArray.276, %class.SkSTArray.279 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%struct.VkDescriptorSetLayout_T = type opaque
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%struct.VkDescriptorPool_T = type opaque
%class.SkTArray.275 = type { %class.GrVkDescriptorSet**, i64 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%struct.VkDescriptorSet_T = type opaque
%class.SkSTArray.276 = type { %class.SkAlignedSTStorage.277, %class.SkTArray.278 }
%class.SkAlignedSTStorage.277 = type { [16 x i8] }
%class.SkTArray.278 = type { i32*, i64 }
%class.SkSTArray.279 = type { %class.SkAlignedSTStorage.280, %class.SkTArray.281 }
%class.SkAlignedSTStorage.280 = type { [32 x i8] }
%class.SkTArray.281 = type { %class.GrVkSampler**, i64 }
%class.GrResourceHandle = type { i32 }
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.315, %class.sk_sp.459, %class.sk_sp.460, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.479, %class.SkSTArray.479, %class.SkTArray.482, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.489" }
%class.sk_sp.315 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336", %"class.GrVkInterface::VkPtr.337", %"class.GrVkInterface::VkPtr.338", %"class.GrVkInterface::VkPtr.338", %"class.GrVkInterface::VkPtr.339", %"class.GrVkInterface::VkPtr.340", %"class.GrVkInterface::VkPtr.341", %"class.GrVkInterface::VkPtr.342", %"class.GrVkInterface::VkPtr.343", %"class.GrVkInterface::VkPtr.344", %"class.GrVkInterface::VkPtr.345", %"class.GrVkInterface::VkPtr.346", %"class.GrVkInterface::VkPtr.347", %"class.GrVkInterface::VkPtr.348", %"class.GrVkInterface::VkPtr.349", %"class.GrVkInterface::VkPtr.350", %"class.GrVkInterface::VkPtr.351", %"class.GrVkInterface::VkPtr.352", %"class.GrVkInterface::VkPtr.353", %"class.GrVkInterface::VkPtr.354", %"class.GrVkInterface::VkPtr.355", %"class.GrVkInterface::VkPtr.356", %"class.GrVkInterface::VkPtr.356", %"class.GrVkInterface::VkPtr.356", %"class.GrVkInterface::VkPtr.357", %"class.GrVkInterface::VkPtr.358", %"class.GrVkInterface::VkPtr.359", %"class.GrVkInterface::VkPtr.360", %"class.GrVkInterface::VkPtr.361", %"class.GrVkInterface::VkPtr.362", %"class.GrVkInterface::VkPtr.363", %"class.GrVkInterface::VkPtr.364", %"class.GrVkInterface::VkPtr.365", %"class.GrVkInterface::VkPtr.366", %"class.GrVkInterface::VkPtr.367", %"class.GrVkInterface::VkPtr.368", %"class.GrVkInterface::VkPtr.369", %"class.GrVkInterface::VkPtr.370", %"class.GrVkInterface::VkPtr.371", %"class.GrVkInterface::VkPtr.372", %"class.GrVkInterface::VkPtr.373", %"class.GrVkInterface::VkPtr.374", %"class.GrVkInterface::VkPtr.375", %"class.GrVkInterface::VkPtr.376", %"class.GrVkInterface::VkPtr.377", %"class.GrVkInterface::VkPtr.378", %"class.GrVkInterface::VkPtr.379", %"class.GrVkInterface::VkPtr.380", %"class.GrVkInterface::VkPtr.381", %"class.GrVkInterface::VkPtr.382", %"class.GrVkInterface::VkPtr.383", %"class.GrVkInterface::VkPtr.384", %"class.GrVkInterface::VkPtr.385", %"class.GrVkInterface::VkPtr.386", %"class.GrVkInterface::VkPtr.387", %"class.GrVkInterface::VkPtr.388", %"class.GrVkInterface::VkPtr.389", %"class.GrVkInterface::VkPtr.390", %"class.GrVkInterface::VkPtr.391", %"class.GrVkInterface::VkPtr.392", %"class.GrVkInterface::VkPtr.393", %"class.GrVkInterface::VkPtr.394", %"class.GrVkInterface::VkPtr.395", %"class.GrVkInterface::VkPtr.396", %"class.GrVkInterface::VkPtr.397", %"class.GrVkInterface::VkPtr.398", %"class.GrVkInterface::VkPtr.399", %"class.GrVkInterface::VkPtr.400", %"class.GrVkInterface::VkPtr.401", %"class.GrVkInterface::VkPtr.402", %"class.GrVkInterface::VkPtr.403", %"class.GrVkInterface::VkPtr.404", %"class.GrVkInterface::VkPtr.405", %"class.GrVkInterface::VkPtr.406", %"class.GrVkInterface::VkPtr.407", %"class.GrVkInterface::VkPtr.408", %"class.GrVkInterface::VkPtr.409", %"class.GrVkInterface::VkPtr.410", %"class.GrVkInterface::VkPtr.410", %"class.GrVkInterface::VkPtr.410", %"class.GrVkInterface::VkPtr.411", %"class.GrVkInterface::VkPtr.412", %"class.GrVkInterface::VkPtr.413", %"class.GrVkInterface::VkPtr.414", %"class.GrVkInterface::VkPtr.415", %"class.GrVkInterface::VkPtr.416", %"class.GrVkInterface::VkPtr.416", %"class.GrVkInterface::VkPtr.417", %"class.GrVkInterface::VkPtr.418", %"class.GrVkInterface::VkPtr.419", %"class.GrVkInterface::VkPtr.420", %"class.GrVkInterface::VkPtr.421", %"class.GrVkInterface::VkPtr.422", %"class.GrVkInterface::VkPtr.423", %"class.GrVkInterface::VkPtr.424", %"class.GrVkInterface::VkPtr.425", %"class.GrVkInterface::VkPtr.426", %"class.GrVkInterface::VkPtr.427", %"class.GrVkInterface::VkPtr.428", %"class.GrVkInterface::VkPtr.429", %"class.GrVkInterface::VkPtr.430", %"class.GrVkInterface::VkPtr.430", %"class.GrVkInterface::VkPtr.431", %"class.GrVkInterface::VkPtr.432", %"class.GrVkInterface::VkPtr.433", %"class.GrVkInterface::VkPtr.434", %"class.GrVkInterface::VkPtr.433", %"class.GrVkInterface::VkPtr.435", %"class.GrVkInterface::VkPtr.436", %"class.GrVkInterface::VkPtr.437", %"class.GrVkInterface::VkPtr.438", %"class.GrVkInterface::VkPtr.439", %"class.GrVkInterface::VkPtr.440", %"class.GrVkInterface::VkPtr.441", %"class.GrVkInterface::VkPtr.442", %"class.GrVkInterface::VkPtr.443", %"class.GrVkInterface::VkPtr.444", %"class.GrVkInterface::VkPtr.445", %"class.GrVkInterface::VkPtr.446", %"class.GrVkInterface::VkPtr.447", %"class.GrVkInterface::VkPtr.448", %"class.GrVkInterface::VkPtr.449", %"class.GrVkInterface::VkPtr.450", %"class.GrVkInterface::VkPtr.451", %"class.GrVkInterface::VkPtr.452", %"class.GrVkInterface::VkPtr.453", %"class.GrVkInterface::VkPtr.454", %"class.GrVkInterface::VkPtr.455", %"class.GrVkInterface::VkPtr.456", %"class.GrVkInterface::VkPtr.457", %"class.GrVkInterface::VkPtr.458" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.317" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.320" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.321" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.323" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.324" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.326" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.327" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.328" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.329" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.330" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.331" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkSemaphore_T = type opaque
%"class.GrVkInterface::VkPtr.332" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.333" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.334" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.GrVkInterface::VkPtr.335" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.336" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.337" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.338" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.339" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.340" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.GrVkInterface::VkPtr.341" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.GrVkInterface::VkPtr.342" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.343" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.344" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.345" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.346" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.347" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.348" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.349" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.350" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.351" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.352" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.353" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.354" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.355" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.356" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.357" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.358" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.359" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.360" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.361" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.362" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.363" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.364" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.365" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.366" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.367" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.368" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.369" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.370" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.371" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%"class.GrVkInterface::VkPtr.372" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.373" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.374" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.375" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.376" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.377" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.378" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.379" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.380" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.GrVkInterface::VkPtr.381" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.382" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.383" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.384" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.GrVkInterface::VkPtr.385" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.386" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.387" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%"class.GrVkInterface::VkPtr.388" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.389" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.390" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.391" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.392" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.393" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.394" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.395" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.GrVkInterface::VkPtr.396" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.397" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.398" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.399" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.400" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.401" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.402" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.403" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.404" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.405" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.406" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.407" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.408" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.409" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.410" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.411" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.412" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.413" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.414" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.415" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.416" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.417" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.418" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.419" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.420" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.421" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.422" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.423" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.424" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.425" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.426" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.427" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.428" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.429" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.430" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.431" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%"class.GrVkInterface::VkPtr.432" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.434" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.433" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.435" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.436" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.437" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.438" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.439" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.440" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.441" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.442" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.443" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.444" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.445" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.446" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.447" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.448" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.449" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.450" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.451" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.452" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.453" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.454" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.455" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.456" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.457" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.458" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.459 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.460 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.468, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.26, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.461, %"class.std::__1::unique_ptr.462", i32, [4 x i8] }>
%class.SkTDArray.461 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.468 = type { %class.SkAlignedSTStorage.469, %class.SkTArray.470 }
%class.SkAlignedSTStorage.469 = type { [48 x i8] }
%class.SkTArray.470 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrStagingBufferManager = type { %"class.std::__1::vector.471", %class.GrGpu* }
%"class.std::__1::vector.471" = type { %"class.std::__1::__vector_base.472" }
%"class.std::__1::__vector_base.472" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.474" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.473, i8*, i64 }
%class.sk_sp.473 = type { %class.GrGpuBuffer* }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.SkSTArray.479 = type { %class.SkAlignedSTStorage.480, %class.SkTArray.481 }
%class.SkAlignedSTStorage.480 = type { [8 x i8] }
%class.SkTArray.481 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.482 = type { %"class.std::__1::unique_ptr.483"*, i64 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.495, i32, [4 x i8] }
%union.anon.495 = type { %struct.anon.496 }
%struct.anon.496 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.508, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.498, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.498 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.499, %class.sk_sp.500, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.502" }
%class.SkNVRefCnt.499 = type { %"struct.std::__1::atomic" }
%class.sk_sp.500 = type { %class.GrSurface* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.500, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.502" = type { %"struct.std::__1::__atomic_base.503" }
%"struct.std::__1::__atomic_base.503" = type { %"struct.std::__1::__atomic_base.504" }
%"struct.std::__1::__atomic_base.504" = type { %"struct.std::__1::__cxx_atomic_impl.505" }
%"struct.std::__1::__cxx_atomic_impl.505" = type { %"struct.std::__1::__cxx_atomic_base_impl.506" }
%"struct.std::__1::__cxx_atomic_base_impl.506" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.507 }
%union.anon.507 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.508 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.509, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.509 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.510"*, [24 x i8] }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.513, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.513 = type { %class.SkAlignedSTStorage.514, %class.SkTArray.515 }
%class.SkAlignedSTStorage.514 = type { [8 x i8] }
%class.SkTArray.515 = type { %"class.std::__1::unique_ptr.516"*, i64 }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.525, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.525 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.sk_sp.526 = type { %class.GrVkPipeline* }
%class.GrVkRenderTarget = type { %class.GrRenderTarget.base, %class.sk_sp.528, %class.sk_sp.528, %class.sk_sp.528, [32 x %class.sk_sp.542], %class.GrVkDescriptorSet*, %class.sk_sp.543, %class.GrSurface }
%class.GrRenderTarget.base = type <{ i32 (...)**, %class.sk_sp.527, %class.sk_sp.527, i32 }>
%class.sk_sp.527 = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.sk_sp.528 = type { %class.GrVkAttachment* }
%class.GrVkAttachment = type { %class.GrAttachment.base, %class.GrVkImage, %class.sk_sp.540, %class.sk_sp.540, %class.gr_sp.541, %class.gr_sp.541 }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrVkImage = type { i32 (...)**, %struct.GrVkImageInfo, i32, %class.sk_sp.529, i8, %"class.GrVkImage::Resource"* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%class.sk_sp.529 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type { %class.SkRefCnt.base, %class.GrBackendSurfaceMutableState, [4 x i8] }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.530, i32, i8, [3 x i8] }>
%union.anon.530 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.531", %"struct.std::__1::atomic.535" }
%"struct.std::__1::atomic.531" = type { %"struct.std::__1::__atomic_base.532" }
%"struct.std::__1::__atomic_base.532" = type { %"struct.std::__1::__cxx_atomic_impl.533" }
%"struct.std::__1::__cxx_atomic_impl.533" = type { %"struct.std::__1::__cxx_atomic_base_impl.534" }
%"struct.std::__1::__cxx_atomic_base_impl.534" = type { i32 }
%"struct.std::__1::atomic.535" = type { %"struct.std::__1::__atomic_base.536" }
%"struct.std::__1::__atomic_base.536" = type { %"struct.std::__1::__atomic_base.537" }
%"struct.std::__1::__atomic_base.537" = type { %"struct.std::__1::__cxx_atomic_impl.538" }
%"struct.std::__1::__cxx_atomic_impl.538" = type { %"struct.std::__1::__cxx_atomic_base_impl.539" }
%"struct.std::__1::__cxx_atomic_base_impl.539" = type { i32 }
%"class.GrVkImage::Resource" = type <{ %class.GrTextureResource, %class.GrVkGpu*, %struct.VkImage_T*, %struct.GrVkAlloc, i32, [4 x i8] }>
%class.GrTextureResource = type { %class.GrManagedResource.base, %class.sk_sp.221 }
%class.sk_sp.540 = type { %class.GrVkImageView* }
%class.GrVkImageView = type opaque
%class.gr_sp.541 = type { %class.GrVkDescriptorSet* }
%class.sk_sp.542 = type { %class.GrVkFramebuffer* }
%class.GrVkFramebuffer = type opaque
%class.sk_sp.543 = type { %class.GrVkFramebuffer* }
%class.GrResourceHandle.544 = type { i32 }
%class.GrVkPipelineState = type <{ %class.sk_sp, %class.GrResourceHandle, [4 x i8], %class.SkSTArray.279, %"struct.GrVkPipelineState::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, [4 x i8], %"class.std::__1::unique_ptr.546", %"class.std::__1::unique_ptr.553", %"class.std::__1::vector.559", %class.GrVkPipelineStateDataManager, i32, [4 x i8] }>
%"struct.GrVkPipelineState::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle.545, %class.GrResourceHandle.545 }
%class.GrResourceHandle.545 = type { i32 }
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.549 }
%class.SkTArray.549 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle.545, %class.GrResourceHandle.545 }
%"class.std::__1::vector.559" = type { %"class.std::__1::__vector_base.560" }
%"class.std::__1::__vector_base.560" = type { %"class.std::__1::unique_ptr.561"*, %"class.std::__1::unique_ptr.561"*, %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.111, %class.SkTArray.564 }
%class.SkTArray.564 = type { %"class.std::__1::unique_ptr.561"*, i64 }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.std::__1::unique_ptr.561"* }
%class.GrVkPipelineStateDataManager = type <{ %class.GrUniformDataManager.base, [7 x i8], %class.sk_sp.473, i8, [7 x i8] }>
%class.GrUniformDataManager.base = type <{ %class.GrGLSLProgramDataManager, i32, [4 x i8], %class.SkTArray.573, %class.SkAutoMalloc, i8 }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.573 = type { %"struct.GrUniformDataManager::Uniform"*, i64 }
%"struct.GrUniformDataManager::Uniform" = type { i32 }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr.574", i64 }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { i8* }
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp.527, %class.sk_sp.527, i32, [4 x i8], %class.GrSurface }>
%class.GrProgramDesc = type <{ %class.SkSTArray.578, i32, [4 x i8] }>
%class.SkSTArray.578 = type { %class.SkAlignedSTStorage.579, %class.SkTArray.580 }
%class.SkAlignedSTStorage.579 = type { [132 x i8] }
%class.SkTArray.580 = type { i32*, i64 }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings.581 }
%struct.GrTStencilFaceSettings.581 = type { i16, i16, i16, i8, i8, i16 }
%"struct.GrXferProcessor::BlendInfo" = type <{ i32, i32, i32, %struct.SkRGBA4f, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrVkUniformHandler = type <{ %class.GrGLSLUniformHandler, %class.GrTBlockList.599, %class.GrTBlockList.599, %class.SkTArray.601, %"struct.GrGLSLUniformHandler::UniformInfo", %class.GrSwizzle, i8, i8, [2 x i32], [4 x i8] }>
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.546", %"class.std::__1::unique_ptr.553", %"class.std::__1::vector.559", i32, %class.SkSTArray.596 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.582, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.584, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.593], i32, i8, [3 x i8], i32 }>
%class.SkSTArray.582 = type { %class.SkAlignedSTStorage.583, %class.SkTArray.111 }
%class.SkAlignedSTStorage.583 = type { [120 x i8] }
%class.SkSTArray.584 = type { %class.SkAlignedSTStorage.585, %class.SkTArray.586 }
%class.SkAlignedSTStorage.585 = type { [16 x i8] }
%class.SkTArray.586 = type { %"class.std::__1::unique_ptr.587"*, i64 }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.593 = type { %class.SkAlignedSTStorage.594, %class.SkTArray.111 }
%class.SkAlignedSTStorage.594 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.595, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.595 = type { i32*, i64 }
%class.SkSTArray.596 = type { %class.SkAlignedSTStorage.597, %class.SkTArray.598 }
%class.SkAlignedSTStorage.597 = type { [160 x i8] }
%class.SkTArray.598 = type { %class.GrShaderVar*, i64 }
%class.GrTBlockList.599 = type { %class.GrSBlockAllocator.600 }
%class.GrSBlockAllocator.600 = type { [128 x i8] }
%class.SkTArray.601 = type { %class.GrSwizzle*, i64 }
%"struct.GrGLSLUniformHandler::UniformInfo" = type { %class.GrShaderVar, i32, %class.GrFragmentProcessor*, %class.SkString }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.std::__1::function.609" = type { %"class.std::__1::__function::__policy_func.612" }
%"class.std::__1::__function::__policy_func.612" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.613", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.613" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%class.SkEventTracer = type { i32 (...)** }

$_ZN8SkTArrayINSt3__110unique_ptrI24GrVkDescriptorSetManagerNS0_14default_deleteIS2_EEEELb0EE12checkReallocEiNS6_11ReallocTypeE = comdat any

$_ZN8SkTArrayIN20GrVkResourceProvider23CompatibleRenderPassSetELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN8SkTArrayIP14GrVkRenderPassLb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN8SkTArrayIPK14GrVkRenderPassLb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN12SkTHashTableIP11GrVkSamplerNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE6resizeEi = comdat any

$_ZN12SkTHashTableIP11GrVkSamplerNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE12uncheckedSetEOS1_ = comdat any

$_ZN12SkTHashTableIP26GrVkSamplerYcbcrConversionNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE6resizeEi = comdat any

$_ZN8SkTArrayIN20GrVkResourceProvider16MSAALoadPipelineELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN8SkTArrayIP15GrVkCommandPoolLb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

@.str = private unnamed_addr constant [59 x i8] c"../../third_party/skia/src/gpu/vk/GrVkResourceProvider.cpp\00", align 1
@.str.1 = private unnamed_addr constant [106 x i8] c"Failed vulkan call. Error: %d,CreatePipelineCache(fGpu->device(), &createInfo, nullptr, &fPipelineCache)\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@__PRETTY_FUNCTION__._ZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPool = private unnamed_addr constant [62 x i8] c"void GrVkResourceProvider::backgroundReset(GrVkCommandPool *)\00", align 1
@__PRETTY_FUNCTION__._ZN20GrVkResourceProvider5resetEP15GrVkCommandPool = private unnamed_addr constant [52 x i8] c"void GrVkResourceProvider::reset(GrVkCommandPool *)\00", align 1
@.str.3 = private unnamed_addr constant [111 x i8] c"Failed vulkan call. Error: %d,GetPipelineCacheData(fGpu->device(), this->pipelineCache(), &dataSize, nullptr)\0A\00", align 1
@.str.4 = private unnamed_addr constant [121 x i8] c"Failed vulkan call. Error: %d,GetPipelineCacheData(fGpu->device(), this->pipelineCache(), &dataSize, (void*)data.get())\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"VkPipelineCache\00", align 1
@_ZTV14GrVkRenderPass = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPoolE3$_2FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPoolE28trace_event_unique_atomic537.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20GrVkResourceProvider5resetEP15GrVkCommandPoolE28trace_event_unique_atomic558.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN20GrVkResourceProviderC1EP7GrVkGpu = hidden unnamed_addr alias void (%class.GrVkResourceProvider*, %class.GrVkGpu*), void (%class.GrVkResourceProvider*, %class.GrVkGpu*)* @_ZN20GrVkResourceProviderC2EP7GrVkGpu
@_ZN20GrVkResourceProviderD1Ev = hidden unnamed_addr alias void (%class.GrVkResourceProvider*), void (%class.GrVkResourceProvider*)* @_ZN20GrVkResourceProviderD2Ev
@_ZN20GrVkResourceProvider23CompatibleRenderPassSetC1EP14GrVkRenderPass = hidden unnamed_addr alias void (%"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %class.GrVkRenderPass*), void (%"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %class.GrVkRenderPass*)* @_ZN20GrVkResourceProvider23CompatibleRenderPassSetC2EP14GrVkRenderPass

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProviderC2EP7GrVkGpu(%class.GrVkResourceProvider*, %class.GrVkGpu*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  store %class.GrVkGpu* %1, %class.GrVkGpu** %3, align 8
  %4 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 2, i32 1
  %6 = bitcast %struct.VkPipelineCache_T** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store i64 1, i64* %5, align 8
  %7 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 224
  %8 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 232
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 34359738368, i64* %10, align 8
  %12 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 4, i32 1
  %13 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 4, i32 0
  store %class.GrVkRenderPass** null, %class.GrVkRenderPass*** %13, align 8
  store i64 1, i64* %12, align 8
  %14 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 32
  %15 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 0
  %16 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 40
  %17 = bitcast i8* %16 to i64*
  %18 = bitcast i8* %14 to i8**
  store i8* %15, i8** %18, align 8
  store i64 34359738368, i64* %17, align 8
  %19 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 6, i32 0, i32 2
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %21, align 8
  %22 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 32
  %23 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 0
  %24 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 40
  %25 = bitcast i8* %24 to i64*
  %26 = bitcast i8* %22 to i8**
  store i8* %23, i8** %26, align 8
  store i64 34359738368, i64* %25, align 8
  %27 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8
  %28 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 10
  %29 = getelementptr inbounds %class.sk_sp.260, %class.sk_sp.260* %28, i64 0, i32 0
  %30 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %31 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 40
  %33 = bitcast i8* %32 to i64*
  %34 = bitcast i8* %30 to i8**
  %35 = bitcast %class.SkTDynamicHash.242* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 40, i1 false)
  store i8* %31, i8** %34, align 8
  store i64 34359738368, i64* %33, align 8
  %36 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 12, i32 0
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 13, i32 0
  store i32 -1, i32* %37, align 4
  %38 = tail call i8* @_Znwm(i64 64) #9, !noalias !2
  %39 = bitcast i8* %38 to %"class.GrVkResourceProvider::PipelineStateCache"*
  tail call void @_ZN20GrVkResourceProvider18PipelineStateCacheC1EP7GrVkGpu(%"class.GrVkResourceProvider::PipelineStateCache"* nonnull %39, %class.GrVkGpu* %1) #10, !noalias !2
  %40 = ptrtoint i8* %38 to i64
  %41 = load %"class.GrVkResourceProvider::PipelineStateCache"*, %"class.GrVkResourceProvider::PipelineStateCache"** %29, align 8
  %42 = bitcast %class.sk_sp.260* %28 to i64*
  store i64 %40, i64* %42, align 8
  %43 = icmp eq %"class.GrVkResourceProvider::PipelineStateCache"* %41, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"class.GrVkResourceProvider::PipelineStateCache", %"class.GrVkResourceProvider::PipelineStateCache"* %41, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %"class.GrVkResourceProvider::PipelineStateCache"* %41 to %class.SkRefCntBase*
  %50 = bitcast %"class.GrVkResourceProvider::PipelineStateCache"* %41 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  tail call void %53(%class.SkRefCntBase* nonnull %49) #10
  br label %54

54:                                               ; preds = %48, %44, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProviderD2Ev(%class.GrVkResourceProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 40
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8* %2 to %"class.std::__1::unique_ptr.272"**
  br label %14

10:                                               ; preds = %51, %1
  %11 = phi i64 [ %5, %1 ], [ %53, %51 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %60, label %57

14:                                               ; preds = %51, %8
  %15 = phi i64 [ 0, %8 ], [ %52, %51 ]
  %16 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %17, align 8
  store %class.GrVkDescriptorSetManager* null, %class.GrVkDescriptorSetManager** %17, align 8
  %19 = icmp eq %class.GrVkDescriptorSetManager* %18, null
  br i1 %19, label %51, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %18, i64 0, i32 3, i32 0, i32 0, i64 40
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %18, i64 0, i32 3, i32 0, i32 0, i64 32
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_Z7sk_freePv(i8* %29) #10
  br label %30

30:                                               ; preds = %26, %20
  %31 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %18, i64 0, i32 2, i32 0, i32 0, i64 24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %18, i64 0, i32 2, i32 0, i32 0, i64 16
  %38 = bitcast i8* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_Z7sk_freePv(i8* %39) #10
  br label %40

40:                                               ; preds = %36, %30
  %41 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %18, i64 0, i32 1, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %18, i64 0, i32 1
  %47 = bitcast %class.SkTArray.275* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_Z7sk_freePv(i8* %48) #10
  br label %49

49:                                               ; preds = %45, %40
  %50 = bitcast %class.GrVkDescriptorSetManager* %18 to i8*
  tail call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %49, %14
  %52 = add nuw nsw i64 %15, 1
  %53 = load i64, i64* %4, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = icmp ult i64 %52, %55
  br i1 %56, label %14, label %10

57:                                               ; preds = %10
  %58 = bitcast i8* %2 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %59) #10
  br label %60

60:                                               ; preds = %10, %57
  %61 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 10, i32 0
  %62 = load %"class.GrVkResourceProvider::PipelineStateCache"*, %"class.GrVkResourceProvider::PipelineStateCache"** %61, align 8
  %63 = icmp eq %"class.GrVkResourceProvider::PipelineStateCache"* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.GrVkResourceProvider::PipelineStateCache", %"class.GrVkResourceProvider::PipelineStateCache"* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %"class.GrVkResourceProvider::PipelineStateCache"* %62 to %class.SkRefCntBase*
  %70 = bitcast %"class.GrVkResourceProvider::PipelineStateCache"* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  tail call void %73(%class.SkRefCntBase* nonnull %69) #10
  br label %74

74:                                               ; preds = %60, %64, %68
  %75 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %75, align 8
  store %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* null, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %75, align 8
  %77 = icmp eq %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %76 to i8*
  tail call void @_ZdaPv(i8* %79) #9
  br label %80

80:                                               ; preds = %74, %78
  %81 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %82 = load %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %81, align 8
  store %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* null, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %81, align 8
  %83 = icmp eq %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = bitcast %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %82 to i8*
  tail call void @_ZdaPv(i8* %85) #9
  br label %86

86:                                               ; preds = %80, %84
  %87 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 40
  %88 = bitcast i8* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 32
  %94 = bitcast i8* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  tail call void @_Z7sk_freePv(i8* %95) #10
  br label %96

96:                                               ; preds = %86, %92
  %97 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 6, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %97) #10
  %98 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 40
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 32
  %105 = bitcast i8* %104 to i8**
  %106 = load i8*, i8** %105, align 8
  tail call void @_Z7sk_freePv(i8* %106) #10
  br label %107

107:                                              ; preds = %96, %103
  %108 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 4, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 4
  %114 = bitcast %class.SkTArray.5* %113 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_Z7sk_freePv(i8* %115) #10
  br label %116

116:                                              ; preds = %107, %112
  %117 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 224
  %118 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 232
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, 4294967294
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %116
  %124 = bitcast i8* %117 to %"class.GrVkResourceProvider::CompatibleRenderPassSet"**
  br label %129

125:                                              ; preds = %143, %116
  %126 = phi i64 [ %120, %116 ], [ %144, %143 ]
  %127 = and i64 %126, 1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %152, label %149

129:                                              ; preds = %143, %123
  %130 = phi i64 [ %120, %123 ], [ %144, %143 ]
  %131 = phi i64 [ 0, %123 ], [ %145, %143 ]
  %132 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %124, align 8
  %133 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %132, i64 %131, i32 0, i32 0, i32 0, i64 40
  %134 = bitcast i8* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = and i64 %135, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %132, i64 %131, i32 0, i32 0, i32 0, i64 32
  %140 = bitcast i8* %139 to i8**
  %141 = load i8*, i8** %140, align 8
  tail call void @_Z7sk_freePv(i8* %141) #10
  %142 = load i64, i64* %119, align 8
  br label %143

143:                                              ; preds = %138, %129
  %144 = phi i64 [ %130, %129 ], [ %142, %138 ]
  %145 = add nuw nsw i64 %131, 1
  %146 = lshr i64 %144, 1
  %147 = and i64 %146, 2147483647
  %148 = icmp ult i64 %145, %147
  br i1 %148, label %129, label %125

149:                                              ; preds = %125
  %150 = bitcast i8* %117 to i8**
  %151 = load i8*, i8** %150, align 8
  tail call void @_Z7sk_freePv(i8* %151) #10
  br label %152

152:                                              ; preds = %125, %149
  %153 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 2
  %154 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 2, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, 4294967294
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %153, i64 0, i32 0
  br label %164

160:                                              ; preds = %183, %152
  %161 = phi i64 [ %155, %152 ], [ %185, %183 ]
  %162 = and i64 %161, 1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %192, label %189

164:                                              ; preds = %183, %158
  %165 = phi i64 [ 0, %158 ], [ %184, %183 ]
  %166 = load %"struct.GrVkResourceProvider::MSAALoadPipeline"*, %"struct.GrVkResourceProvider::MSAALoadPipeline"** %159, align 8
  %167 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %166, i64 %165, i32 0, i32 0
  %168 = load %class.GrVkPipeline*, %class.GrVkPipeline** %167, align 8
  %169 = icmp eq %class.GrVkPipeline* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %164
  %171 = bitcast %class.GrVkPipeline* %168 to %class.GrManagedResource*
  %172 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %168, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 -1 acq_rel
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %183

175:                                              ; preds = %170
  %176 = bitcast %class.GrVkPipeline* %168 to void (%class.GrManagedResource*)***
  %177 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %176, align 8
  %178 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %177, i64 4
  %179 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %178, align 8
  tail call void %179(%class.GrManagedResource* nonnull %171) #10
  %180 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %176, align 8
  %181 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %180, i64 1
  %182 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %181, align 8
  tail call void %182(%class.GrManagedResource* nonnull %171) #10
  br label %183

183:                                              ; preds = %175, %170, %164
  %184 = add nuw nsw i64 %165, 1
  %185 = load i64, i64* %154, align 8
  %186 = lshr i64 %185, 1
  %187 = and i64 %186, 2147483647
  %188 = icmp ult i64 %184, %187
  br i1 %188, label %164, label %160

189:                                              ; preds = %160
  %190 = bitcast %class.SkTArray* %153 to i8**
  %191 = load i8*, i8** %190, align 8
  tail call void @_Z7sk_freePv(i8* %191) #10
  br label %192

192:                                              ; preds = %160, %189
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.VkPipelineCache_T* @_ZN20GrVkResourceProvider13pipelineCacheEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.VkPipelineCacheCreateInfo, align 8
  %3 = alloca i32, align 4
  %4 = alloca %class.sk_sp.24, align 8
  %5 = alloca %class.sk_sp.24, align 8
  %6 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 1
  %7 = load %struct.VkPipelineCache_T*, %struct.VkPipelineCache_T** %6, align 8
  %8 = icmp eq %struct.VkPipelineCache_T* %7, null
  br i1 %8, label %9, label %118

9:                                                ; preds = %1
  %10 = bitcast %struct.VkPipelineCacheCreateInfo* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false)
  %11 = getelementptr inbounds %struct.VkPipelineCacheCreateInfo, %struct.VkPipelineCacheCreateInfo* %2, i64 0, i32 0
  store i32 17, i32* %11, align 8
  %12 = getelementptr inbounds %struct.VkPipelineCacheCreateInfo, %struct.VkPipelineCacheCreateInfo* %2, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds %struct.VkPipelineCacheCreateInfo, %struct.VkPipelineCacheCreateInfo* %2, i64 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %15 = bitcast %class.GrVkResourceProvider* %0 to %class.GrGpu**
  %16 = load %class.GrGpu*, %class.GrGpu** %15, align 8
  %17 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %16, i64 0, i32 5
  %18 = load %class.GrDirectContext*, %class.GrDirectContext** %17, align 8
  %19 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %18, i64 0, i32 9
  %20 = load %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::PersistentCache"** %19, align 8
  %21 = icmp eq %"class.GrContextOptions::PersistentCache"* %20, null
  br i1 %21, label %79, label %22

22:                                               ; preds = %9
  %23 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #10
  store i32 1, i32* %3, align 4
  %24 = bitcast %class.sk_sp.24* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %4, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %25, align 8
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.24* nonnull sret %4, i8* nonnull %23, i64 4, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #10
  %26 = bitcast %class.sk_sp.24* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %27 = load %class.SkData*, %class.SkData** %25, align 8
  %28 = bitcast %"class.GrContextOptions::PersistentCache"* %20 to void (%class.sk_sp.24*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)***
  %29 = load void (%class.sk_sp.24*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)**, void (%class.sk_sp.24*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.sk_sp.24*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)*, void (%class.sk_sp.24*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)** %29, i64 2
  %31 = load void (%class.sk_sp.24*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)*, void (%class.sk_sp.24*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)** %30, align 8
  call void %31(%class.sk_sp.24* nonnull sret %5, %"class.GrContextOptions::PersistentCache"* nonnull %20, %class.SkData* dereferenceable(40) %27) #10
  %32 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %5, i64 0, i32 0
  %33 = load %class.SkData*, %class.SkData** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %34 = load %class.SkData*, %class.SkData** %25, align 8
  %35 = icmp eq %class.SkData* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %22
  %37 = getelementptr inbounds %class.SkData, %class.SkData* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %34) #10
  %41 = bitcast %class.SkData* %34 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %41) #10
  br label %42

42:                                               ; preds = %40, %36, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #10
  %43 = icmp eq %class.SkData* %33, null
  br i1 %43, label %79, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %class.SkData, %class.SkData* %33, i64 0, i32 3
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 4
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %79

51:                                               ; preds = %44
  %52 = load %class.GrVkGpu*, %class.GrVkGpu** %14, align 8
  %53 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %52, i64 0, i32 17, i32 6, i64 0
  %54 = getelementptr inbounds i8, i8* %46, i64 8
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %52, i64 0, i32 17, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %79

60:                                               ; preds = %51
  %61 = getelementptr inbounds i8, i8* %46, i64 12
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %52, i64 0, i32 17, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %67, label %79

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %46, i64 16
  %69 = call i32 @bcmp(i8* %68, i8* %53, i64 16)
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkData, %class.SkData* %33, i64 0, i32 4
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.VkPipelineCacheCreateInfo, %struct.VkPipelineCacheCreateInfo* %2, i64 0, i32 3
  store i64 %73, i64* %74, align 8
  %75 = bitcast i8** %45 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %struct.VkPipelineCacheCreateInfo, %struct.VkPipelineCacheCreateInfo* %2, i64 0, i32 4
  %78 = bitcast i8** %77 to i64*
  store i64 %76, i64* %78, align 8
  br label %84

79:                                               ; preds = %42, %9, %67, %44, %51, %60
  %80 = phi %class.SkData* [ %33, %67 ], [ %33, %44 ], [ null, %42 ], [ %33, %51 ], [ %33, %60 ], [ null, %9 ]
  %81 = getelementptr inbounds %struct.VkPipelineCacheCreateInfo, %struct.VkPipelineCacheCreateInfo* %2, i64 0, i32 3
  %82 = bitcast i64* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false)
  %83 = load %class.GrVkGpu*, %class.GrVkGpu** %14, align 8
  br label %84

84:                                               ; preds = %71, %79
  %85 = phi %class.GrVkGpu* [ %52, %71 ], [ %83, %79 ]
  %86 = phi %class.SkData* [ %33, %71 ], [ %80, %79 ]
  %87 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %85, i64 0, i32 1, i32 0
  %88 = load %struct.GrVkInterface*, %struct.GrVkInterface** %87, align 8
  %89 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %88, i64 0, i32 1, i32 59, i32 0
  %90 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)** %89, align 8
  %91 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %85, i64 0, i32 6
  %92 = load %struct.VkDevice_T*, %struct.VkDevice_T** %91, align 8
  %93 = call i32 %90(%struct.VkDevice_T* %92, %struct.VkPipelineCacheCreateInfo* nonnull %2, %struct.VkAllocationCallbacks* null, %struct.VkPipelineCache_T** %6) #10
  %94 = icmp eq i32 %93, 0
  %95 = load %class.GrVkGpu*, %class.GrVkGpu** %14, align 8
  br i1 %94, label %106, label %96

96:                                               ; preds = %84
  %97 = bitcast %class.GrVkGpu* %95 to i1 (%class.GrVkGpu*)***
  %98 = load i1 (%class.GrVkGpu*)**, i1 (%class.GrVkGpu*)*** %97, align 8
  %99 = getelementptr inbounds i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %98, i64 8
  %100 = load i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %99, align 8
  %101 = call zeroext i1 %100(%class.GrVkGpu* %95) #10
  br i1 %101, label %103, label %102

102:                                              ; preds = %96
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 75, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.1, i64 0, i64 0), i32 %93) #10
  br label %103

103:                                              ; preds = %96, %102
  %104 = load %class.GrVkGpu*, %class.GrVkGpu** %14, align 8
  %105 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %104, i32 %93) #10
  store %struct.VkPipelineCache_T* null, %struct.VkPipelineCache_T** %6, align 8
  br label %108

106:                                              ; preds = %84
  %107 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %95, i32 0) #10
  br label %108

108:                                              ; preds = %106, %103
  %109 = icmp eq %class.SkData* %86, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %class.SkData, %class.SkData* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %86) #10
  %115 = bitcast %class.SkData* %86 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %115) #10
  br label %116

116:                                              ; preds = %108, %110, %114
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #10
  %117 = load %struct.VkPipelineCache_T*, %struct.VkPipelineCache_T** %6, align 8
  br label %118

118:                                              ; preds = %116, %1
  %119 = phi %struct.VkPipelineCache_T* [ %117, %116 ], [ %7, %1 ]
  ret %struct.VkPipelineCache_T* %119
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider4initEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %3 = load %class.GrVkGpu*, %class.GrVkGpu** %2, align 8
  %4 = tail call %class.GrVkDescriptorSetManager* @_ZN24GrVkDescriptorSetManager20CreateUniformManagerEP7GrVkGpu(%class.GrVkGpu* %3) #10
  %5 = ptrtoint %class.GrVkDescriptorSetManager* %4 to i64
  %6 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %7 = bitcast i8* %6 to %class.SkTArray.271*
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrI24GrVkDescriptorSetManagerNS0_14default_deleteIS2_EEEELb0EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray.271* %7, i32 1, i32 1) #10
  %8 = bitcast i8* %6 to %"class.std::__1::unique_ptr.272"**
  %9 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %8, align 8
  %10 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 40
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = and i64 %13, 2147483647
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %9, i64 %14
  %16 = add i64 %12, 2
  %17 = and i64 %16, 4294967294
  %18 = and i64 %12, -4294967295
  %19 = or i64 %17, %18
  store i64 %19, i64* %11, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.272"* %15 to i64*
  store i64 %5, i64* %20, align 8
  %21 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %21, align 8
  %22 = load %class.GrVkGpu*, %class.GrVkGpu** %2, align 8
  %23 = tail call %class.GrVkDescriptorSetManager* @_ZN24GrVkDescriptorSetManager18CreateInputManagerEP7GrVkGpu(%class.GrVkGpu* %22) #10
  %24 = ptrtoint %class.GrVkDescriptorSetManager* %23 to i64
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrI24GrVkDescriptorSetManagerNS0_14default_deleteIS2_EEEELb0EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray.271* %7, i32 1, i32 1) #10
  %25 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %8, align 8
  %26 = load i64, i64* %11, align 8
  %27 = lshr i64 %26, 1
  %28 = and i64 %27, 2147483647
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %25, i64 %28
  %30 = add i64 %26, 2
  %31 = and i64 %30, 4294967294
  %32 = and i64 %26, -4294967295
  %33 = or i64 %31, %32
  store i64 %33, i64* %11, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.272"* %29 to i64*
  store i64 %24, i64* %34, align 8
  %35 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 13, i32 0
  store i32 1, i32* %35, align 4
  ret void
}

declare %class.GrVkDescriptorSetManager* @_ZN24GrVkDescriptorSetManager20CreateUniformManagerEP7GrVkGpu(%class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %class.GrVkDescriptorSetManager* @_ZN24GrVkDescriptorSetManager18CreateInputManagerEP7GrVkGpu(%class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider12makePipelineERK13GrProgramInfoP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_Tj(%class.sk_sp* noalias nocapture sret, %class.GrVkResourceProvider*, %class.GrProgramInfo* dereferenceable(128), %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRenderPass_T*, %struct.VkPipelineLayout_T*, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp.526, align 8
  %10 = bitcast %class.sk_sp.526* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %1, i64 0, i32 0
  %12 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %13 = tail call %struct.VkPipelineCache_T* @_ZN20GrVkResourceProvider13pipelineCacheEv(%class.GrVkResourceProvider* %1)
  call void @_ZN12GrVkPipeline4MakeEP7GrVkGpuRK13GrProgramInfoP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TP17VkPipelineCache_Tj(%class.sk_sp.526* nonnull sret %9, %class.GrVkGpu* %12, %class.GrProgramInfo* dereferenceable(128) %2, %struct.VkPipelineShaderStageCreateInfo* %3, i32 %4, %struct.VkRenderPass_T* %5, %struct.VkPipelineLayout_T* %6, %struct.VkPipelineCache_T* %13, i32 %7) #10
  %14 = bitcast %class.sk_sp.526* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.sk_sp* %0 to i64*
  store i64 %15, i64* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  ret void
}

declare void @_ZN12GrVkPipeline4MakeEP7GrVkGpuRK13GrProgramInfoP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TP17VkPipelineCache_Tj(%class.sk_sp.526* sret, %class.GrVkGpu*, %class.GrProgramInfo* dereferenceable(128), %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRenderPass_T*, %struct.VkPipelineLayout_T*, %struct.VkPipelineCache_T*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkRenderPass* @_ZN20GrVkResourceProvider24findCompatibleRenderPassEP16GrVkRenderTargetP16GrResourceHandleINS_22CompatibleRPHandleKindEEbbN14GrVkRenderPass19SelfDependencyFlagsENS6_15LoadFromResolveE(%class.GrVkResourceProvider*, %class.GrVkRenderTarget*, %class.GrResourceHandle.544*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = alloca %"struct.GrVkRenderPass::AttachmentsDescriptor", align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 -1431655766, i32* %8, align 4
  %11 = bitcast %"struct.GrVkRenderPass::AttachmentsDescriptor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %9, i64 0, i32 3
  store i32 -1431655766, i32* %12, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 48, i1 false) #10
  call void @_ZN16GrVkRenderTarget24getAttachmentsDescriptorEPN14GrVkRenderPass21AttachmentsDescriptorEPNS0_15AttachmentFlagsEbb(%class.GrVkRenderTarget* %1, %"struct.GrVkRenderPass::AttachmentsDescriptor"* nonnull %9, i32* nonnull %8, i1 zeroext %3, i1 zeroext %4) #10
  %13 = load i32, i32* %8, align 4
  %14 = call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider24findCompatibleRenderPassEPN14GrVkRenderPass21AttachmentsDescriptorENS0_15AttachmentFlagsENS0_19SelfDependencyFlagsENS0_15LoadFromResolveEP16GrResourceHandleINS_22CompatibleRPHandleKindEE(%class.GrVkResourceProvider* %0, %"struct.GrVkRenderPass::AttachmentsDescriptor"* nonnull %9, i32 %13, i32 %5, i32 %6, %class.GrResourceHandle.544* %2)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  ret %class.GrVkRenderPass* %14
}

declare void @_ZN16GrVkRenderTarget24getAttachmentsDescriptorEPN14GrVkRenderPass21AttachmentsDescriptorEPNS0_15AttachmentFlagsEbb(%class.GrVkRenderTarget*, %"struct.GrVkRenderPass::AttachmentsDescriptor"*, i32*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkRenderPass* @_ZN20GrVkResourceProvider24findCompatibleRenderPassEPN14GrVkRenderPass21AttachmentsDescriptorENS0_15AttachmentFlagsENS0_19SelfDependencyFlagsENS0_15LoadFromResolveEP16GrResourceHandleINS_22CompatibleRPHandleKindEE(%class.GrVkResourceProvider*, %"struct.GrVkRenderPass::AttachmentsDescriptor"*, i32, i32, i32, %class.GrResourceHandle.544*) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 224
  %9 = bitcast i8* %8 to %class.SkTArray.1*
  %10 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 232
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 4294967294
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %45, label %15

15:                                               ; preds = %6
  %16 = bitcast i8* %8 to %"class.GrVkResourceProvider::CompatibleRenderPassSet"**
  %17 = bitcast i32* %7 to i8*
  br label %18

18:                                               ; preds = %15, %39
  %19 = phi i64 [ 0, %15 ], [ %40, %39 ]
  %20 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  store i32 %2, i32* %7, align 4
  %21 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %20, i64 %19, i32 0, i32 0, i32 0, i64 32
  %22 = bitcast i8* %21 to %class.GrVkRenderPass***
  %23 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %22, align 8
  %24 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %23, align 8
  %25 = call zeroext i1 @_ZNK14GrVkRenderPass12isCompatibleERKNS_21AttachmentsDescriptorERKNS_15AttachmentFlagsENS_19SelfDependencyFlagsENS_15LoadFromResolveE(%class.GrVkRenderPass* %24, %"struct.GrVkRenderPass::AttachmentsDescriptor"* dereferenceable(52) %1, i32* nonnull dereferenceable(4) %7, i32 %3, i32 %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  br i1 %25, label %26, label %39

26:                                               ; preds = %18
  %27 = and i64 %19, 4294967295
  %28 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %16, align 8
  %29 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %28, i64 %27, i32 0, i32 0, i32 0, i64 32
  %30 = bitcast i8* %29 to %class.GrVkRenderPass***
  %31 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %30, align 8
  %32 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %31, align 8
  %33 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  %35 = icmp eq %class.GrResourceHandle.544* %5, null
  br i1 %35, label %90, label %36

36:                                               ; preds = %26
  %37 = trunc i64 %19 to i32
  %38 = getelementptr inbounds %class.GrResourceHandle.544, %class.GrResourceHandle.544* %5, i64 0, i32 0
  store i32 %37, i32* %38, align 4
  br label %90

39:                                               ; preds = %18
  %40 = add nuw nsw i64 %19, 1
  %41 = load i64, i64* %11, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %18, label %45

45:                                               ; preds = %39, %6
  %46 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %47 = load %class.GrVkGpu*, %class.GrVkGpu** %46, align 8
  %48 = call %class.GrVkRenderPass* @_ZN14GrVkRenderPass12CreateSimpleEP7GrVkGpuPNS_21AttachmentsDescriptorENS_15AttachmentFlagsENS_19SelfDependencyFlagsENS_15LoadFromResolveE(%class.GrVkGpu* %47, %"struct.GrVkRenderPass::AttachmentsDescriptor"* %1, i32 %2, i32 %3, i32 %4) #10
  %49 = icmp eq %class.GrVkRenderPass* %48, null
  br i1 %49, label %90, label %50

50:                                               ; preds = %45
  call void @_ZN8SkTArrayIN20GrVkResourceProvider23CompatibleRenderPassSetELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.1* %9, i32 1, i32 1) #10
  %51 = bitcast i8* %8 to %"class.GrVkResourceProvider::CompatibleRenderPassSet"**
  %52 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %51, align 8
  %53 = load i64, i64* %11, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %52, i64 %55, i32 0, i32 0, i32 0, i64 0
  %57 = add i64 %53, 2
  %58 = and i64 %57, 4294967294
  %59 = and i64 %53, -4294967295
  %60 = or i64 %58, %59
  store i64 %60, i64* %11, align 8
  %61 = ptrtoint %class.GrVkRenderPass* %48 to i64
  %62 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %52, i64 %55, i32 0, i32 0, i32 0, i64 32
  %63 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %52, i64 %55, i32 0, i32 0, i32 0, i64 40
  %64 = bitcast i8* %63 to i64*
  %65 = bitcast i8* %62 to i8**
  store i8* %56, i8** %65, align 8
  store i64 34359738368, i64* %64, align 8
  %66 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %52, i64 %55, i32 0, i32 0, i32 0, i64 48
  %67 = bitcast i8* %66 to i32*
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %48, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  %70 = bitcast i8* %62 to %class.SkTArray.4*
  call void @_ZN8SkTArrayIP14GrVkRenderPassLb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.4* %70, i32 1, i32 1) #10
  %71 = bitcast i8* %62 to %class.GrVkRenderPass***
  %72 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %71, align 8
  %73 = load i64, i64* %64, align 8
  %74 = lshr i64 %73, 1
  %75 = and i64 %74, 2147483647
  %76 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %72, i64 %75
  %77 = add i64 %73, 2
  %78 = and i64 %77, 4294967294
  %79 = and i64 %73, -4294967295
  %80 = or i64 %78, %79
  store i64 %80, i64* %64, align 8
  %81 = bitcast %class.GrVkRenderPass** %76 to i64*
  store i64 %61, i64* %81, align 8
  %82 = icmp eq %class.GrResourceHandle.544* %5, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %50
  %84 = load i64, i64* %11, align 8
  %85 = lshr i64 %84, 1
  %86 = trunc i64 %85 to i32
  %87 = and i32 %86, 2147483647
  %88 = add nsw i32 %87, -1
  %89 = getelementptr inbounds %class.GrResourceHandle.544, %class.GrResourceHandle.544* %5, i64 0, i32 0
  store i32 %88, i32* %89, align 4
  br label %90

90:                                               ; preds = %36, %26, %45, %50, %83
  %91 = phi %class.GrVkRenderPass* [ null, %45 ], [ %48, %50 ], [ %48, %83 ], [ %32, %26 ], [ %32, %36 ]
  ret %class.GrVkRenderPass* %91
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20GrVkResourceProvider23CompatibleRenderPassSet12isCompatibleERKN14GrVkRenderPass21AttachmentsDescriptorENS1_15AttachmentFlagsENS1_19SelfDependencyFlagsENS1_15LoadFromResolveE(%"class.GrVkResourceProvider::CompatibleRenderPassSet"* nocapture readonly, %"struct.GrVkRenderPass::AttachmentsDescriptor"* dereferenceable(52), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 0, i32 0, i32 0, i64 32
  %8 = bitcast i8* %7 to %class.GrVkRenderPass***
  %9 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %8, align 8
  %10 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %9, align 8
  %11 = call zeroext i1 @_ZNK14GrVkRenderPass12isCompatibleERKNS_21AttachmentsDescriptorERKNS_15AttachmentFlagsENS_19SelfDependencyFlagsENS_15LoadFromResolveE(%class.GrVkRenderPass* %10, %"struct.GrVkRenderPass::AttachmentsDescriptor"* dereferenceable(52) %1, i32* nonnull dereferenceable(4) %6, i32 %3, i32 %4) #10
  ret i1 %11
}

declare %class.GrVkRenderPass* @_ZN14GrVkRenderPass12CreateSimpleEP7GrVkGpuPNS_21AttachmentsDescriptorENS_15AttachmentFlagsENS_19SelfDependencyFlagsENS_15LoadFromResolveE(%class.GrVkGpu*, %"struct.GrVkRenderPass::AttachmentsDescriptor"*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkRenderPass* @_ZN20GrVkResourceProvider32findCompatibleExternalRenderPassEP14VkRenderPass_Tj(%class.GrVkResourceProvider*, %struct.VkRenderPass_T*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 4, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %34, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %4, i64 0, i32 0
  br label %16

11:                                               ; preds = %16
  %12 = load i64, i64* %5, align 8
  %13 = lshr i64 %12, 1
  %14 = and i64 %13, 2147483647
  %15 = icmp ult i64 %22, %14
  br i1 %15, label %16, label %34

16:                                               ; preds = %9, %11
  %17 = phi i64 [ 0, %9 ], [ %22, %11 ]
  %18 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %10, align 8
  %19 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %18, i64 %17
  %20 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %19, align 8
  %21 = tail call zeroext i1 @_ZNK14GrVkRenderPass22isCompatibleExternalRPEP14VkRenderPass_T(%class.GrVkRenderPass* %20, %struct.VkRenderPass_T* %1) #10
  %22 = add nuw nsw i64 %17, 1
  br i1 %21, label %23, label %11

23:                                               ; preds = %16
  %24 = and i64 %17, 4294967295
  %25 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %10, align 8
  %26 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %25, i64 %24
  %27 = bitcast %class.GrVkRenderPass** %26 to %class.GrManagedResource**
  %28 = load %class.GrManagedResource*, %class.GrManagedResource** %27, align 8
  %29 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  %31 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %10, align 8
  %32 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %31, i64 %24
  %33 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %32, align 8
  br label %72

34:                                               ; preds = %11, %3
  %35 = tail call i8* @_Znwm(i64 120) #9
  %36 = bitcast %class.GrVkResourceProvider* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast i8* %35 to i32 (...)***
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 1, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %35, i64 16
  %42 = bitcast i8* %41 to i64*
  store i64 %37, i64* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14GrVkRenderPass, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %43 = getelementptr inbounds i8, i8* %35, i64 24
  %44 = bitcast i8* %43 to %struct.VkRenderPass_T**
  store %struct.VkRenderPass_T* %1, %struct.VkRenderPass_T** %44, align 8
  %45 = getelementptr inbounds i8, i8* %35, i64 32
  %46 = bitcast i8* %45 to i32*
  store i32 8, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %35, i64 36
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 48, i1 false) #10
  %48 = getelementptr inbounds i8, i8* %35, i64 88
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %35, i64 92
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %35, i64 104
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %35, i64 108
  %55 = bitcast i8* %54 to i32*
  store i32 %2, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %35, i64 112
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 8
  %58 = ptrtoint i8* %35 to i64
  tail call void @_ZN8SkTArrayIPK14GrVkRenderPassLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.5* %4, i32 1, i32 1) #10
  %59 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %4, i64 0, i32 0
  %60 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %59, align 8
  %61 = load i64, i64* %5, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %60, i64 %63
  %65 = add i64 %61, 2
  %66 = and i64 %65, 4294967294
  %67 = and i64 %61, -4294967295
  %68 = or i64 %66, %67
  store i64 %68, i64* %5, align 8
  %69 = bitcast %class.GrVkRenderPass** %64 to i64*
  store i64 %58, i64* %69, align 8
  %70 = atomicrmw add i32* %40, i32 1 monotonic
  %71 = bitcast i8* %35 to %class.GrVkRenderPass*
  br label %72

72:                                               ; preds = %23, %34
  %73 = phi %class.GrVkRenderPass* [ %71, %34 ], [ %33, %23 ]
  ret %class.GrVkRenderPass* %73
}

declare zeroext i1 @_ZNK14GrVkRenderPass22isCompatibleExternalRPEP14VkRenderPass_T(%class.GrVkRenderPass*, %struct.VkRenderPass_T*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkRenderPass* @_ZN20GrVkResourceProvider14findRenderPassEP16GrVkRenderTargetRKN14GrVkRenderPass12LoadStoreOpsES5_S5_P16GrResourceHandleINS_22CompatibleRPHandleKindEEbbNS2_19SelfDependencyFlagsENS2_15LoadFromResolveE(%class.GrVkResourceProvider* nocapture readonly, %class.GrVkRenderTarget*, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %class.GrResourceHandle.544*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %11 = alloca i32, align 4
  %12 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store i32 -1, i32* %11, align 4
  %13 = icmp eq %class.GrResourceHandle.544* %5, null
  %14 = bitcast i32* %11 to %class.GrResourceHandle.544*
  %15 = select i1 %13, %class.GrResourceHandle.544* %14, %class.GrResourceHandle.544* %5
  %16 = tail call i32 @_ZN16GrVkRenderTarget26compatibleRenderPassHandleEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget* %1, i1 zeroext %6, i1 zeroext %7, i32 %8, i32 %9) #10
  %17 = getelementptr inbounds %class.GrResourceHandle.544, %class.GrResourceHandle.544* %15, i64 0, i32 0
  store i32 %16, i32* %17, align 4
  %18 = icmp eq i32 %16, -1
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 224
  %21 = bitcast i8* %20 to %"class.GrVkResourceProvider::CompatibleRenderPassSet"**
  %22 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %21, align 8
  %23 = sext i32 %16 to i64
  %24 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %22, i64 %23
  %25 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %26 = load %class.GrVkGpu*, %class.GrVkGpu** %25, align 8
  %27 = tail call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider23CompatibleRenderPassSet13getRenderPassEP7GrVkGpuRKN14GrVkRenderPass12LoadStoreOpsES6_S6_(%"class.GrVkResourceProvider::CompatibleRenderPassSet"* %24, %class.GrVkGpu* %26, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %2, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %3, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %4) #10
  %28 = icmp eq %class.GrVkRenderPass* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %10, %29, %19
  %33 = phi %class.GrVkRenderPass* [ null, %10 ], [ null, %19 ], [ %27, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  ret %class.GrVkRenderPass* %33
}

declare i32 @_ZN16GrVkRenderTarget26compatibleRenderPassHandleEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkRenderPass* @_ZN20GrVkResourceProvider14findRenderPassERK16GrResourceHandleINS_22CompatibleRPHandleKindEERKN14GrVkRenderPass12LoadStoreOpsES8_S8_(%class.GrVkResourceProvider* nocapture readonly, %class.GrResourceHandle.544* nocapture readonly dereferenceable(4), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 224
  %7 = getelementptr inbounds %class.GrResourceHandle.544, %class.GrResourceHandle.544* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = bitcast i8* %6 to %"class.GrVkResourceProvider::CompatibleRenderPassSet"**
  %10 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %9, align 8
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %10, i64 %11
  %13 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %14 = load %class.GrVkGpu*, %class.GrVkGpu** %13, align 8
  %15 = tail call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider23CompatibleRenderPassSet13getRenderPassEP7GrVkGpuRKN14GrVkRenderPass12LoadStoreOpsES6_S6_(%"class.GrVkResourceProvider::CompatibleRenderPassSet"* %12, %class.GrVkGpu* %14, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %2, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %3, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %4)
  %16 = icmp eq %class.GrVkRenderPass* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %5, %17
  ret %class.GrVkRenderPass* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkRenderPass* @_ZN20GrVkResourceProvider23CompatibleRenderPassSet13getRenderPassEP7GrVkGpuRKN14GrVkRenderPass12LoadStoreOpsES6_S6_(%"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %class.GrVkGpu*, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 0, i32 0, i32 0, i64 32
  %7 = bitcast i8* %6 to %class.SkTArray.4*
  %8 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 0, i32 0, i32 0, i64 40
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 1
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, 2147483647
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast i8* %6 to %class.GrVkRenderPass***
  br label %42

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 1
  %19 = bitcast i8* %6 to %class.GrVkRenderPass***
  br label %26

20:                                               ; preds = %26
  %21 = load i64, i64* %9, align 8
  %22 = lshr i64 %21, 1
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 2147483647
  %25 = icmp ult i32 %37, %24
  br i1 %25, label %26, label %42

26:                                               ; preds = %17, %20
  %27 = phi i32 [ %13, %17 ], [ %24, %20 ]
  %28 = phi i32 [ 0, %17 ], [ %37, %20 ]
  %29 = load i32, i32* %18, align 8
  %30 = add nsw i32 %29, %28
  %31 = srem i32 %30, %27
  %32 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %19, align 8
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %32, i64 %33
  %35 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %34, align 8
  %36 = tail call zeroext i1 @_ZNK14GrVkRenderPass17equalLoadStoreOpsERKNS_12LoadStoreOpsES2_S2_(%class.GrVkRenderPass* %35, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %2, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %3, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %4) #10
  %37 = add nuw nsw i32 %28, 1
  br i1 %36, label %38, label %20

38:                                               ; preds = %26
  store i32 %31, i32* %18, align 8
  %39 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %19, align 8
  %40 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %39, i64 %33
  %41 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %40, align 8
  br label %66

42:                                               ; preds = %20, %15
  %43 = phi %class.GrVkRenderPass*** [ %16, %15 ], [ %19, %20 ]
  %44 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %43, align 8
  %45 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %44, align 8
  %46 = tail call %class.GrVkRenderPass* @_ZN14GrVkRenderPass6CreateEP7GrVkGpuRKS_RKNS_12LoadStoreOpsES6_S6_(%class.GrVkGpu* %1, %class.GrVkRenderPass* dereferenceable(120) %45, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %2, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %3, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8) %4) #10
  %47 = icmp eq %class.GrVkRenderPass* %46, null
  br i1 %47, label %66, label %48

48:                                               ; preds = %42
  %49 = ptrtoint %class.GrVkRenderPass* %46 to i64
  tail call void @_ZN8SkTArrayIP14GrVkRenderPassLb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.4* %7, i32 1, i32 1) #10
  %50 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %43, align 8
  %51 = load i64, i64* %9, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %50, i64 %53
  %55 = add i64 %51, 2
  %56 = and i64 %55, 4294967294
  %57 = and i64 %51, -4294967295
  %58 = or i64 %56, %57
  store i64 %58, i64* %9, align 8
  %59 = bitcast %class.GrVkRenderPass** %54 to i64*
  store i64 %49, i64* %59, align 8
  %60 = load i64, i64* %9, align 8
  %61 = lshr i64 %60, 1
  %62 = trunc i64 %61 to i32
  %63 = and i32 %62, 2147483647
  %64 = add nsw i32 %63, -1
  %65 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 1
  store i32 %64, i32* %65, align 8
  br label %66

66:                                               ; preds = %48, %42, %38
  %67 = phi %class.GrVkRenderPass* [ %41, %38 ], [ %46, %48 ], [ null, %42 ]
  ret %class.GrVkRenderPass* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkDescriptorPool* @_ZN20GrVkResourceProvider36findOrCreateCompatibleDescriptorPoolE16VkDescriptorTypej(%class.GrVkResourceProvider* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %5 = load %class.GrVkGpu*, %class.GrVkGpu** %4, align 8
  %6 = tail call %class.GrVkDescriptorPool* @_ZN18GrVkDescriptorPool6CreateEP7GrVkGpu16VkDescriptorTypej(%class.GrVkGpu* %5, i32 %1, i32 %2) #10
  ret %class.GrVkDescriptorPool* %6
}

declare %class.GrVkDescriptorPool* @_ZN18GrVkDescriptorPool6CreateEP7GrVkGpu16VkDescriptorTypej(%class.GrVkGpu*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkSampler* @_ZN20GrVkResourceProvider29findOrCreateCompatibleSamplerE14GrSamplerStateRK23GrVkYcbcrConversionInfo(%class.GrVkResourceProvider*, i64, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.GrVkSampler::Key", align 8
  %6 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"struct.GrVkSampler::Key", %"struct.GrVkSampler::Key"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @_ZN11GrVkSampler11GenerateKeyE14GrSamplerStateRK23GrVkYcbcrConversionInfo(%"struct.GrVkSampler::Key"* nonnull sret %5, i64 %1, i32 %2, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %3) #10
  %8 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %9 = call i32 %8(i8* nonnull %7, i64 32, i32 0) #10
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i32 1, i32 %9
  %12 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %63

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.GrVkSampler::Key", %"struct.GrVkSampler::Key"* %5, i64 0, i32 2, i32 3
  %17 = add nsw i32 %13, -1
  %18 = and i32 %11, %17
  %19 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %19, align 8
  %21 = getelementptr inbounds %"struct.GrVkSampler::Key", %"struct.GrVkSampler::Key"* %5, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"struct.GrVkSampler::Key", %"struct.GrVkSampler::Key"* %5, i64 0, i32 2, i32 2
  %23 = load i8, i8* %7, align 8
  %24 = load i32, i32* %21, align 8
  %25 = load i64, i64* %22, align 8
  %26 = load i8, i8* %16, align 8
  br label %27

27:                                               ; preds = %54, %15
  %28 = phi i32 [ 0, %15 ], [ %59, %54 ]
  %29 = phi i32 [ %18, %15 ], [ %58, %54 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %20, i64 %30, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %63, label %34

34:                                               ; preds = %27
  %35 = icmp eq i32 %11, %32
  br i1 %35, label %36, label %54

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %20, i64 %30, i32 0
  %38 = load %class.GrVkSampler*, %class.GrVkSampler** %37, align 8
  %39 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %38, i64 0, i32 3, i32 0
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %23, %40
  br i1 %41, label %42, label %54

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %38, i64 0, i32 3, i32 2, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %24, %44
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %38, i64 0, i32 3, i32 2, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %25, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %38, i64 0, i32 3, i32 2, i32 3
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %26, %52
  br i1 %53, label %61, label %54

54:                                               ; preds = %50, %46, %42, %36, %34
  %55 = add nsw i32 %29, -1
  %56 = icmp slt i32 %29, 1
  %57 = select i1 %56, i32 %13, i32 0
  %58 = add nsw i32 %55, %57
  %59 = add nuw nsw i32 %28, 1
  %60 = icmp eq i32 %59, %13
  br i1 %60, label %63, label %27

61:                                               ; preds = %50
  %62 = icmp eq %class.GrVkSampler** %37, null
  br i1 %62, label %63, label %64

63:                                               ; preds = %54, %27, %4, %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  br label %66

64:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  %65 = icmp eq %class.GrVkSampler* %38, null
  br i1 %65, label %66, label %145

66:                                               ; preds = %63, %64
  %67 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %68 = load %class.GrVkGpu*, %class.GrVkGpu** %67, align 8
  %69 = call %class.GrVkSampler* @_ZN11GrVkSampler6CreateEP7GrVkGpu14GrSamplerStateRK23GrVkYcbcrConversionInfo(%class.GrVkGpu* %68, i64 %1, i32 %2, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %3) #10
  %70 = icmp eq %class.GrVkSampler* %69, null
  br i1 %70, label %149, label %71

71:                                               ; preds = %66
  %72 = ptrtoint %class.GrVkSampler* %69 to i64
  %73 = getelementptr inbounds %class.SkTDynamicHash.242, %class.SkTDynamicHash.242* %6, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = shl nsw i32 %74, 2
  %76 = load i32, i32* %12, align 4
  %77 = mul nsw i32 %76, 3
  %78 = icmp slt i32 %75, %77
  br i1 %78, label %84, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %class.SkTDynamicHash.242, %class.SkTDynamicHash.242* %6, i64 0, i32 0
  %81 = icmp sgt i32 %76, 0
  %82 = shl nsw i32 %76, 1
  %83 = select i1 %81, i32 %82, i32 4
  call void @_ZN12SkTHashTableIP11GrVkSamplerNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE6resizeEi(%class.SkTHashTable.243* %80, i32 %83) #10
  br label %84

84:                                               ; preds = %71, %79
  %85 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %69, i64 0, i32 3, i32 0
  %86 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %87 = call i32 %86(i8* %85, i64 32, i32 0) #10
  %88 = icmp eq i32 %87, 0
  %89 = select i1 %88, i32 1, i32 %87
  %90 = load i32, i32* %12, align 4
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %145

92:                                               ; preds = %84
  %93 = add nsw i32 %90, -1
  %94 = and i32 %89, %93
  %95 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %96 = load %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %95, align 8
  %97 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %69, i64 0, i32 3, i32 2, i32 0
  %98 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %69, i64 0, i32 3, i32 2, i32 2
  %99 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %69, i64 0, i32 3, i32 2, i32 3
  br label %100

100:                                              ; preds = %138, %92
  %101 = phi i32 [ 0, %92 ], [ %143, %138 ]
  %102 = phi i32 [ %94, %92 ], [ %142, %138 ]
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %96, i64 %103
  %105 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %96, i64 %103, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %100
  %109 = bitcast %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %104 to i64*
  store i64 %72, i64* %109, align 8
  store i32 %89, i32* %105, align 8
  %110 = load i32, i32* %73, align 8
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %73, align 8
  br label %145

112:                                              ; preds = %100
  %113 = icmp eq i32 %89, %106
  br i1 %113, label %114, label %138

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %104, i64 0, i32 0
  %116 = load %class.GrVkSampler*, %class.GrVkSampler** %115, align 8
  %117 = load i8, i8* %85, align 8
  %118 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %116, i64 0, i32 3, i32 0
  %119 = load i8, i8* %118, align 8
  %120 = icmp eq i8 %117, %119
  br i1 %120, label %121, label %138

121:                                              ; preds = %114
  %122 = load i32, i32* %97, align 8
  %123 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %116, i64 0, i32 3, i32 2, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %122, %124
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = load i64, i64* %98, align 8
  %128 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %116, i64 0, i32 3, i32 2, i32 2
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %127, %129
  br i1 %130, label %131, label %138

131:                                              ; preds = %126
  %132 = load i8, i8* %99, align 8
  %133 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %116, i64 0, i32 3, i32 2, i32 3
  %134 = load i8, i8* %133, align 8
  %135 = icmp eq i8 %132, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  %137 = bitcast %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %104 to i64*
  store i64 %72, i64* %137, align 8
  br label %145

138:                                              ; preds = %131, %126, %121, %114, %112
  %139 = add nsw i32 %102, -1
  %140 = icmp slt i32 %102, 1
  %141 = select i1 %140, i32 %90, i32 0
  %142 = add nsw i32 %139, %141
  %143 = add nuw nsw i32 %101, 1
  %144 = icmp eq i32 %143, %90
  br i1 %144, label %145, label %100

145:                                              ; preds = %138, %136, %108, %84, %64
  %146 = phi %class.GrVkSampler* [ %38, %64 ], [ %69, %84 ], [ %69, %108 ], [ %69, %136 ], [ %69, %138 ]
  %147 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %146, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 1 monotonic
  br label %149

149:                                              ; preds = %66, %145
  %150 = phi %class.GrVkSampler* [ %146, %145 ], [ null, %66 ]
  ret %class.GrVkSampler* %150
}

declare void @_ZN11GrVkSampler11GenerateKeyE14GrSamplerStateRK23GrVkYcbcrConversionInfo(%"struct.GrVkSampler::Key"* sret, i64, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #2

declare %class.GrVkSampler* @_ZN11GrVkSampler6CreateEP7GrVkGpu14GrSamplerStateRK23GrVkYcbcrConversionInfo(%class.GrVkGpu*, i64, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkSamplerYcbcrConversion* @_ZN20GrVkResourceProvider44findOrCreateCompatibleSamplerYcbcrConversionERK23GrVkYcbcrConversionInfo(%class.GrVkResourceProvider*, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.GrVkSamplerYcbcrConversion::Key", align 8
  %4 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9
  %5 = bitcast %"struct.GrVkSamplerYcbcrConversion::Key"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  call void @_ZN26GrVkSamplerYcbcrConversion11GenerateKeyERK23GrVkYcbcrConversionInfo(%"struct.GrVkSamplerYcbcrConversion::Key"* nonnull sret %3, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %1) #10
  %6 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %7 = call i32 %6(i8* nonnull %5, i64 24, i32 0) #10
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 1, i32 %7
  %10 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %56

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.GrVkSamplerYcbcrConversion::Key", %"struct.GrVkSamplerYcbcrConversion::Key"* %3, i64 0, i32 3
  %15 = add nsw i32 %11, -1
  %16 = and i32 %9, %15
  %17 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %17, align 8
  %19 = getelementptr inbounds %"struct.GrVkSamplerYcbcrConversion::Key", %"struct.GrVkSamplerYcbcrConversion::Key"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.GrVkSamplerYcbcrConversion::Key", %"struct.GrVkSamplerYcbcrConversion::Key"* %3, i64 0, i32 2
  %21 = load i32, i32* %19, align 8
  %22 = load i64, i64* %20, align 8
  %23 = load i8, i8* %14, align 8
  br label %24

24:                                               ; preds = %47, %13
  %25 = phi i32 [ 0, %13 ], [ %52, %47 ]
  %26 = phi i32 [ %16, %13 ], [ %51, %47 ]
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %18, i64 %27, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %56, label %31

31:                                               ; preds = %24
  %32 = icmp eq i32 %9, %29
  br i1 %32, label %33, label %47

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %18, i64 %27, i32 0
  %35 = load %class.GrVkSamplerYcbcrConversion*, %class.GrVkSamplerYcbcrConversion** %34, align 8
  %36 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %35, i64 0, i32 2, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %21, %37
  br i1 %38, label %39, label %47

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %35, i64 0, i32 2, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %22, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %35, i64 0, i32 2, i32 3
  %45 = load i8, i8* %44, align 8
  %46 = icmp eq i8 %23, %45
  br i1 %46, label %54, label %47

47:                                               ; preds = %43, %39, %33, %31
  %48 = add nsw i32 %26, -1
  %49 = icmp slt i32 %26, 1
  %50 = select i1 %49, i32 %11, i32 0
  %51 = add nsw i32 %48, %50
  %52 = add nuw nsw i32 %25, 1
  %53 = icmp eq i32 %52, %11
  br i1 %53, label %56, label %24

54:                                               ; preds = %43
  %55 = icmp eq %class.GrVkSamplerYcbcrConversion** %34, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %47, %24, %2, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  br label %59

57:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  %58 = icmp eq %class.GrVkSamplerYcbcrConversion* %35, null
  br i1 %58, label %59, label %134

59:                                               ; preds = %56, %57
  %60 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %61 = load %class.GrVkGpu*, %class.GrVkGpu** %60, align 8
  %62 = call %class.GrVkSamplerYcbcrConversion* @_ZN26GrVkSamplerYcbcrConversion6CreateEP7GrVkGpuRK23GrVkYcbcrConversionInfo(%class.GrVkGpu* %61, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %1) #10
  %63 = icmp eq %class.GrVkSamplerYcbcrConversion* %62, null
  br i1 %63, label %138, label %64

64:                                               ; preds = %59
  %65 = ptrtoint %class.GrVkSamplerYcbcrConversion* %62 to i64
  %66 = getelementptr inbounds %class.SkTDynamicHash.251, %class.SkTDynamicHash.251* %4, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = shl nsw i32 %67, 2
  %69 = load i32, i32* %10, align 4
  %70 = mul nsw i32 %69, 3
  %71 = icmp slt i32 %68, %70
  br i1 %71, label %77, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %class.SkTDynamicHash.251, %class.SkTDynamicHash.251* %4, i64 0, i32 0
  %74 = icmp sgt i32 %69, 0
  %75 = shl nsw i32 %69, 1
  %76 = select i1 %74, i32 %75, i32 4
  call void @_ZN12SkTHashTableIP26GrVkSamplerYcbcrConversionNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE6resizeEi(%class.SkTHashTable.252* %73, i32 %76) #10
  br label %77

77:                                               ; preds = %64, %72
  %78 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %62, i64 0, i32 2
  %79 = bitcast %"struct.GrVkSamplerYcbcrConversion::Key"* %78 to i8*
  %80 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %81 = call i32 %80(i8* %79, i64 24, i32 0) #10
  %82 = icmp eq i32 %81, 0
  %83 = select i1 %82, i32 1, i32 %81
  %84 = load i32, i32* %10, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %134

86:                                               ; preds = %77
  %87 = add nsw i32 %84, -1
  %88 = and i32 %83, %87
  %89 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %89, align 8
  %91 = getelementptr inbounds %"struct.GrVkSamplerYcbcrConversion::Key", %"struct.GrVkSamplerYcbcrConversion::Key"* %78, i64 0, i32 0
  %92 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %62, i64 0, i32 2, i32 2
  %93 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %62, i64 0, i32 2, i32 3
  br label %94

94:                                               ; preds = %127, %86
  %95 = phi i32 [ 0, %86 ], [ %132, %127 ]
  %96 = phi i32 [ %88, %86 ], [ %131, %127 ]
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %90, i64 %97
  %99 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %90, i64 %97, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %94
  %103 = bitcast %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %98 to i64*
  store i64 %65, i64* %103, align 8
  store i32 %83, i32* %99, align 8
  %104 = load i32, i32* %66, align 8
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %66, align 8
  br label %134

106:                                              ; preds = %94
  %107 = icmp eq i32 %83, %100
  br i1 %107, label %108, label %127

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %98, i64 0, i32 0
  %110 = load %class.GrVkSamplerYcbcrConversion*, %class.GrVkSamplerYcbcrConversion** %109, align 8
  %111 = load i32, i32* %91, align 8
  %112 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %110, i64 0, i32 2, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %127

115:                                              ; preds = %108
  %116 = load i64, i64* %92, align 8
  %117 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %110, i64 0, i32 2, i32 2
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %116, %118
  br i1 %119, label %120, label %127

120:                                              ; preds = %115
  %121 = load i8, i8* %93, align 8
  %122 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %110, i64 0, i32 2, i32 3
  %123 = load i8, i8* %122, align 8
  %124 = icmp eq i8 %121, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %120
  %126 = bitcast %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %98 to i64*
  store i64 %65, i64* %126, align 8
  br label %134

127:                                              ; preds = %120, %115, %108, %106
  %128 = add nsw i32 %96, -1
  %129 = icmp slt i32 %96, 1
  %130 = select i1 %129, i32 %84, i32 0
  %131 = add nsw i32 %128, %130
  %132 = add nuw nsw i32 %95, 1
  %133 = icmp eq i32 %132, %84
  br i1 %133, label %134, label %94

134:                                              ; preds = %127, %125, %102, %77, %57
  %135 = phi %class.GrVkSamplerYcbcrConversion* [ %35, %57 ], [ %62, %77 ], [ %62, %102 ], [ %62, %125 ], [ %62, %127 ]
  %136 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %135, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 1 monotonic
  br label %138

138:                                              ; preds = %59, %134
  %139 = phi %class.GrVkSamplerYcbcrConversion* [ %135, %134 ], [ null, %59 ]
  ret %class.GrVkSamplerYcbcrConversion* %139
}

declare void @_ZN26GrVkSamplerYcbcrConversion11GenerateKeyERK23GrVkYcbcrConversionInfo(%"struct.GrVkSamplerYcbcrConversion::Key"* sret, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #2

declare %class.GrVkSamplerYcbcrConversion* @_ZN26GrVkSamplerYcbcrConversion6CreateEP7GrVkGpuRK23GrVkYcbcrConversionInfo(%class.GrVkGpu*, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkPipelineState* @_ZN20GrVkResourceProvider35findOrCreateCompatiblePipelineStateEP14GrRenderTargetRK13GrProgramInfoP14VkRenderPass_Tb(%class.GrVkResourceProvider* nocapture readonly, %class.GrRenderTarget*, %class.GrProgramInfo* dereferenceable(128), %struct.VkRenderPass_T*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 10, i32 0
  %7 = load %"class.GrVkResourceProvider::PipelineStateCache"*, %"class.GrVkResourceProvider::PipelineStateCache"** %6, align 8
  %8 = tail call %class.GrVkPipelineState* @_ZN20GrVkResourceProvider18PipelineStateCache25findOrCreatePipelineStateEP14GrRenderTargetRK13GrProgramInfoP14VkRenderPass_Tb(%"class.GrVkResourceProvider::PipelineStateCache"* %7, %class.GrRenderTarget* %1, %class.GrProgramInfo* dereferenceable(128) %2, %struct.VkRenderPass_T* %3, i1 zeroext %4) #10
  ret %class.GrVkPipelineState* %8
}

declare %class.GrVkPipelineState* @_ZN20GrVkResourceProvider18PipelineStateCache25findOrCreatePipelineStateEP14GrRenderTargetRK13GrProgramInfoP14VkRenderPass_Tb(%"class.GrVkResourceProvider::PipelineStateCache"*, %class.GrRenderTarget*, %class.GrProgramInfo* dereferenceable(128), %struct.VkRenderPass_T*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkPipelineState* @_ZN20GrVkResourceProvider35findOrCreateCompatiblePipelineStateERK13GrProgramDescRK13GrProgramInfoP14VkRenderPass_TPN27GrThreadSafePipelineBuilder5Stats18ProgramCacheResultE(%class.GrVkResourceProvider* nocapture readonly, %class.GrProgramDesc* dereferenceable(160), %class.GrProgramInfo* dereferenceable(128), %struct.VkRenderPass_T*, i32*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 10, i32 0
  %7 = load %"class.GrVkResourceProvider::PipelineStateCache"*, %"class.GrVkResourceProvider::PipelineStateCache"** %6, align 8
  %8 = tail call %class.GrVkPipelineState* @_ZN20GrVkResourceProvider18PipelineStateCache29findOrCreatePipelineStateImplERK13GrProgramDescRK13GrProgramInfoP14VkRenderPass_TbPN27GrThreadSafePipelineBuilder5Stats18ProgramCacheResultE(%"class.GrVkResourceProvider::PipelineStateCache"* %7, %class.GrProgramDesc* dereferenceable(160) %1, %class.GrProgramInfo* dereferenceable(128) %2, %struct.VkRenderPass_T* %3, i1 zeroext false, i32* %4) #10
  ret %class.GrVkPipelineState* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider28findOrCreateMSAALoadPipelineERK14GrVkRenderPassiP31VkPipelineShaderStageCreateInfoP18VkPipelineLayout_T(%class.sk_sp* noalias nocapture sret, %class.GrVkResourceProvider*, %class.GrVkRenderPass* dereferenceable(120), i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineLayout_T*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp.526, align 8
  %9 = alloca %"class.GrGeometryProcessor::AttributeSet", align 8
  %10 = alloca %"class.GrGeometryProcessor::AttributeSet", align 8
  %11 = alloca %class.GrStencilSettings, align 4
  %12 = alloca %"struct.GrXferProcessor::BlendInfo", align 4
  %13 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %14, align 8
  %15 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %1, i64 0, i32 2
  %16 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %1, i64 0, i32 2, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 4294967294
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %63, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %15, i64 0, i32 0
  br label %25

22:                                               ; preds = %55
  br i1 %62, label %143, label %25

23:                                               ; preds = %55
  %24 = ptrtoint %class.GrVkPipeline* %61 to i64
  br i1 %62, label %145, label %63

25:                                               ; preds = %20, %22
  %26 = phi i64 [ 0, %20 ], [ %56, %22 ]
  %27 = phi %class.GrVkPipeline* [ null, %20 ], [ %61, %22 ]
  %28 = load %"struct.GrVkResourceProvider::MSAALoadPipeline"*, %"struct.GrVkResourceProvider::MSAALoadPipeline"** %21, align 8
  %29 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %28, i64 %26, i32 1
  %30 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %29, align 8
  %31 = tail call zeroext i1 @_ZNK14GrVkRenderPass12isCompatibleERKS_(%class.GrVkRenderPass* %30, %class.GrVkRenderPass* dereferenceable(120) %2) #10
  br i1 %31, label %32, label %55

32:                                               ; preds = %25
  %33 = load %"struct.GrVkResourceProvider::MSAALoadPipeline"*, %"struct.GrVkResourceProvider::MSAALoadPipeline"** %21, align 8
  %34 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %33, i64 %26, i32 0, i32 0
  %35 = load %class.GrVkPipeline*, %class.GrVkPipeline** %34, align 8
  %36 = icmp eq %class.GrVkPipeline* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  br label %40

40:                                               ; preds = %37, %32
  store %class.GrVkPipeline* %35, %class.GrVkPipeline** %14, align 8
  %41 = icmp eq %class.GrVkPipeline* %27, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = bitcast %class.GrVkPipeline* %27 to %class.GrManagedResource*
  %44 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = bitcast %class.GrVkPipeline* %27 to void (%class.GrManagedResource*)***
  %49 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %49, i64 4
  %51 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %50, align 8
  tail call void %51(%class.GrManagedResource* nonnull %43) #10
  %52 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %48, align 8
  %53 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %52, i64 1
  %54 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %53, align 8
  tail call void %54(%class.GrManagedResource* nonnull %43) #10
  br label %55

55:                                               ; preds = %47, %42, %40, %25
  %56 = add nuw nsw i64 %26, 1
  %57 = load i64, i64* %16, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  %61 = load %class.GrVkPipeline*, %class.GrVkPipeline** %14, align 8
  %62 = icmp ne %class.GrVkPipeline* %61, null
  br i1 %60, label %22, label %23

63:                                               ; preds = %6, %23
  %64 = phi %class.GrVkPipeline* [ %61, %23 ], [ null, %6 ]
  %65 = bitcast %class.sk_sp.526* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #10
  %66 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %1, i64 0, i32 0
  %67 = load %class.GrVkGpu*, %class.GrVkGpu** %66, align 8
  %68 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #10
  %69 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %10 to i8*
  %70 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  %71 = bitcast %class.GrStencilSettings* %11 to i8*
  %72 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #10
  %73 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %11, i64 0, i32 0
  store i32 31, i32* %73, align 4
  %74 = bitcast %"struct.GrXferProcessor::BlendInfo"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #10
  %75 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %12, i64 0, i32 1
  %76 = bitcast %"struct.GrXferProcessor::BlendInfo"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %76, i8 0, i64 32, i1 false)
  store i32 1, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %12, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %12, i64 0, i32 4
  %79 = bitcast i32* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %79, i8 0, i64 20, i1 false) #10
  store i8 1, i8* %78, align 4
  %80 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %2, i64 0, i32 1
  %81 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %80, align 8
  %82 = tail call %struct.VkPipelineCache_T* @_ZN20GrVkResourceProvider13pipelineCacheEv(%class.GrVkResourceProvider* %1)
  call void @_ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T(%class.sk_sp.526* nonnull sret %8, %class.GrVkGpu* %67, %"class.GrGeometryProcessor::AttributeSet"* nonnull dereferenceable(24) %9, %"class.GrGeometryProcessor::AttributeSet"* nonnull dereferenceable(24) %10, i8 zeroext 1, i32 0, %class.GrStencilSettings* nonnull dereferenceable(24) %11, i32 %3, i1 zeroext false, %"struct.GrXferProcessor::BlendInfo"* nonnull dereferenceable(32) %12, i1 zeroext false, i1 zeroext false, i32 0, %struct.VkPipelineShaderStageCreateInfo* %4, i32 2, %struct.VkRenderPass_T* %81, %struct.VkPipelineLayout_T* %5, i1 zeroext false, %struct.VkPipelineCache_T* %82) #10
  %83 = getelementptr inbounds %class.sk_sp.526, %class.sk_sp.526* %8, i64 0, i32 0
  %84 = bitcast %class.sk_sp.526* %8 to i64*
  %85 = load i64, i64* %84, align 8
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %83, align 8
  %86 = bitcast %class.sk_sp* %7 to i64*
  store i64 %85, i64* %86, align 8
  %87 = icmp eq %class.GrVkPipeline* %64, null
  %88 = inttoptr i64 %85 to %class.GrVkPipeline*
  br i1 %87, label %121, label %89

89:                                               ; preds = %63
  %90 = bitcast %class.GrVkPipeline* %64 to %class.GrManagedResource*
  %91 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %64, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %102

94:                                               ; preds = %89
  %95 = bitcast %class.GrVkPipeline* %64 to void (%class.GrManagedResource*)***
  %96 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %96, i64 4
  %98 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %97, align 8
  call void %98(%class.GrManagedResource* nonnull %90) #10
  %99 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %95, align 8
  %100 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %99, i64 1
  %101 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %100, align 8
  call void %101(%class.GrManagedResource* nonnull %90) #10
  br label %102

102:                                              ; preds = %89, %94
  %103 = load %class.GrVkPipeline*, %class.GrVkPipeline** %83, align 8
  %104 = icmp eq %class.GrVkPipeline* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = bitcast %class.GrVkPipeline* %103 to %class.GrManagedResource*
  %107 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %103, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %118

110:                                              ; preds = %105
  %111 = bitcast %class.GrVkPipeline* %103 to void (%class.GrManagedResource*)***
  %112 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %111, align 8
  %113 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %112, i64 4
  %114 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %113, align 8
  call void %114(%class.GrManagedResource* nonnull %106) #10
  %115 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %111, align 8
  %116 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %115, i64 1
  %117 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %116, align 8
  call void %117(%class.GrManagedResource* nonnull %106) #10
  br label %118

118:                                              ; preds = %110, %105, %102
  %119 = load %class.GrVkPipeline*, %class.GrVkPipeline** %14, align 8
  %120 = ptrtoint %class.GrVkPipeline* %119 to i64
  br label %121

121:                                              ; preds = %63, %118
  %122 = phi i64 [ %120, %118 ], [ %85, %63 ]
  %123 = phi %class.GrVkPipeline* [ %119, %118 ], [ %88, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  %124 = icmp eq %class.GrVkPipeline* %123, null
  br i1 %124, label %148, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %123, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 1 monotonic
  %128 = ptrtoint %class.GrVkPipeline* %123 to i64
  %129 = ptrtoint %class.GrVkRenderPass* %2 to i64
  call void @_ZN8SkTArrayIN20GrVkResourceProvider16MSAALoadPipelineELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %15, i32 1, i32 1) #10
  %130 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %15, i64 0, i32 0
  %131 = load %"struct.GrVkResourceProvider::MSAALoadPipeline"*, %"struct.GrVkResourceProvider::MSAALoadPipeline"** %130, align 8
  %132 = load i64, i64* %16, align 8
  %133 = lshr i64 %132, 1
  %134 = and i64 %133, 2147483647
  %135 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %131, i64 %134
  %136 = add i64 %132, 2
  %137 = and i64 %136, 4294967294
  %138 = and i64 %132, -4294967295
  %139 = or i64 %137, %138
  store i64 %139, i64* %16, align 8
  %140 = bitcast %"struct.GrVkResourceProvider::MSAALoadPipeline"* %135 to i64*
  store i64 %128, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %131, i64 %134, i32 1
  %142 = bitcast %class.GrVkRenderPass** %141 to i64*
  store i64 %129, i64* %142, align 8
  br label %145

143:                                              ; preds = %22
  %144 = ptrtoint %class.GrVkPipeline* %61 to i64
  br label %145

145:                                              ; preds = %143, %23, %125
  %146 = phi i64 [ %24, %23 ], [ %122, %125 ], [ %144, %143 ]
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %14, align 8
  %147 = bitcast %class.sk_sp* %0 to i64*
  store i64 %146, i64* %147, align 8
  br label %150

148:                                              ; preds = %121
  %149 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %149, align 8
  br label %150

150:                                              ; preds = %148, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret void
}

declare zeroext i1 @_ZNK14GrVkRenderPass12isCompatibleERKS_(%class.GrVkRenderPass*, %class.GrVkRenderPass* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T(%class.sk_sp.526* sret, %class.GrVkGpu*, %"class.GrGeometryProcessor::AttributeSet"* dereferenceable(24), %"class.GrGeometryProcessor::AttributeSet"* dereferenceable(24), i8 zeroext, i32, %class.GrStencilSettings* dereferenceable(24), i32, i1 zeroext, %"struct.GrXferProcessor::BlendInfo"* dereferenceable(32), i1 zeroext, i1 zeroext, i32, %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRenderPass_T*, %struct.VkPipelineLayout_T*, i1 zeroext, %struct.VkPipelineCache_T*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider33getZeroSamplerDescriptorSetHandleEP16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider*, %class.GrResourceHandle* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %4 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 40
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  %9 = bitcast i8* %3 to %"class.std::__1::unique_ptr.272"**
  br i1 %8, label %24, label %10

10:                                               ; preds = %2, %18
  %11 = phi i64 [ %19, %18 ], [ 0, %2 ]
  %12 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %9, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %12, i64 %11, i32 0, i32 0, i32 0
  %14 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %13, align 8
  %15 = tail call zeroext i1 @_ZNK24GrVkDescriptorSetManager13isZeroSamplerEv(%class.GrVkDescriptorSetManager* %14) #10
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = trunc i64 %11 to i32
  br label %45

18:                                               ; preds = %10
  %19 = add nuw nsw i64 %11, 1
  %20 = load i64, i64* %5, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %10, label %24

24:                                               ; preds = %18, %2
  %25 = bitcast i8* %3 to %class.SkTArray.271*
  %26 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %27 = load %class.GrVkGpu*, %class.GrVkGpu** %26, align 8
  %28 = tail call %class.GrVkDescriptorSetManager* @_ZN24GrVkDescriptorSetManager24CreateZeroSamplerManagerEP7GrVkGpu(%class.GrVkGpu* %27) #10
  %29 = ptrtoint %class.GrVkDescriptorSetManager* %28 to i64
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrI24GrVkDescriptorSetManagerNS0_14default_deleteIS2_EEEELb0EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray.271* %25, i32 1, i32 1) #10
  %30 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %9, align 8
  %31 = load i64, i64* %5, align 8
  %32 = lshr i64 %31, 1
  %33 = and i64 %32, 2147483647
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %30, i64 %33
  %35 = add i64 %31, 2
  %36 = and i64 %35, 4294967294
  %37 = and i64 %31, -4294967295
  %38 = or i64 %36, %37
  store i64 %38, i64* %5, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.272"* %34 to i64*
  store i64 %29, i64* %39, align 8
  %40 = load i64, i64* %5, align 8
  %41 = lshr i64 %40, 1
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 2147483647
  %44 = add nsw i32 %43, -1
  br label %45

45:                                               ; preds = %16, %24
  %46 = phi i32 [ %17, %16 ], [ %44, %24 ]
  %47 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %1, i64 0, i32 0
  store i32 %46, i32* %47, align 4
  ret void
}

declare zeroext i1 @_ZNK24GrVkDescriptorSetManager13isZeroSamplerEv(%class.GrVkDescriptorSetManager*) local_unnamed_addr #2

declare %class.GrVkDescriptorSetManager* @_ZN24GrVkDescriptorSetManager24CreateZeroSamplerManagerEP7GrVkGpu(%class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider29getSamplerDescriptorSetHandleE16VkDescriptorTypeRK18GrVkUniformHandlerP16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider*, i32, %class.GrVkUniformHandler* dereferenceable(368), %class.GrResourceHandle* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %6 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 40
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 4294967294
  %10 = icmp eq i64 %9, 0
  %11 = bitcast i8* %5 to %"class.std::__1::unique_ptr.272"**
  br i1 %10, label %26, label %12

12:                                               ; preds = %4, %20
  %13 = phi i64 [ %21, %20 ], [ 0, %4 ]
  %14 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %11, align 8
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %14, i64 %13, i32 0, i32 0, i32 0
  %16 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %15, align 8
  %17 = tail call zeroext i1 @_ZNK24GrVkDescriptorSetManager12isCompatibleE16VkDescriptorTypePK18GrVkUniformHandler(%class.GrVkDescriptorSetManager* %16, i32 %1, %class.GrVkUniformHandler* %2) #10
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  %19 = trunc i64 %13 to i32
  br label %47

20:                                               ; preds = %12
  %21 = add nuw nsw i64 %13, 1
  %22 = load i64, i64* %7, align 8
  %23 = lshr i64 %22, 1
  %24 = and i64 %23, 2147483647
  %25 = icmp ult i64 %21, %24
  br i1 %25, label %12, label %26

26:                                               ; preds = %20, %4
  %27 = bitcast i8* %5 to %class.SkTArray.271*
  %28 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %29 = load %class.GrVkGpu*, %class.GrVkGpu** %28, align 8
  %30 = tail call %class.GrVkDescriptorSetManager* @_ZN24GrVkDescriptorSetManager20CreateSamplerManagerEP7GrVkGpu16VkDescriptorTypeRK18GrVkUniformHandler(%class.GrVkGpu* %29, i32 %1, %class.GrVkUniformHandler* dereferenceable(368) %2) #10
  %31 = ptrtoint %class.GrVkDescriptorSetManager* %30 to i64
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrI24GrVkDescriptorSetManagerNS0_14default_deleteIS2_EEEELb0EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray.271* %27, i32 1, i32 1) #10
  %32 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %11, align 8
  %33 = load i64, i64* %7, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %32, i64 %35
  %37 = add i64 %33, 2
  %38 = and i64 %37, 4294967294
  %39 = and i64 %33, -4294967295
  %40 = or i64 %38, %39
  store i64 %40, i64* %7, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.272"* %36 to i64*
  store i64 %31, i64* %41, align 8
  %42 = load i64, i64* %7, align 8
  %43 = lshr i64 %42, 1
  %44 = trunc i64 %43 to i32
  %45 = and i32 %44, 2147483647
  %46 = add nsw i32 %45, -1
  br label %47

47:                                               ; preds = %18, %26
  %48 = phi i32 [ %19, %18 ], [ %46, %26 ]
  %49 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %3, i64 0, i32 0
  store i32 %48, i32* %49, align 4
  ret void
}

declare zeroext i1 @_ZNK24GrVkDescriptorSetManager12isCompatibleE16VkDescriptorTypePK18GrVkUniformHandler(%class.GrVkDescriptorSetManager*, i32, %class.GrVkUniformHandler*) local_unnamed_addr #2

declare %class.GrVkDescriptorSetManager* @_ZN24GrVkDescriptorSetManager20CreateSamplerManagerEP7GrVkGpu16VkDescriptorTypeRK18GrVkUniformHandler(%class.GrVkGpu*, i32, %class.GrVkUniformHandler* dereferenceable(368)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getUniformDSLayoutEv(%class.GrVkResourceProvider* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 12, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = bitcast i8* %2 to %"class.std::__1::unique_ptr.272"**
  %6 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %5, align 8
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %6, i64 %7, i32 0, i32 0, i32 0
  %9 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %8, align 8
  %10 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %9, i64 0, i32 0, i32 0
  %11 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %10, align 8
  ret %struct.VkDescriptorSetLayout_T* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider16getInputDSLayoutEv(%class.GrVkResourceProvider* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 13, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = bitcast i8* %2 to %"class.std::__1::unique_ptr.272"**
  %6 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %5, align 8
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %6, i64 %7, i32 0, i32 0, i32 0
  %9 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %8, align 8
  %10 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %9, i64 0, i32 0, i32 0
  %11 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %10, align 8
  ret %struct.VkDescriptorSetLayout_T* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getSamplerDSLayoutERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider* nocapture readonly, %class.GrResourceHandle* nocapture readonly dereferenceable(4)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %4 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = bitcast i8* %3 to %"class.std::__1::unique_ptr.272"**
  %7 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %6, align 8
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %7, i64 %8, i32 0, i32 0, i32 0
  %10 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %9, align 8
  %11 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %10, i64 0, i32 0, i32 0
  %12 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %11, align 8
  ret %struct.VkDescriptorSetLayout_T* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider23getUniformDescriptorSetEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 12
  %4 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = bitcast i8* %2 to %"class.std::__1::unique_ptr.272"**
  %7 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %6, align 8
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %7, i64 %8, i32 0, i32 0, i32 0
  %10 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %9, align 8
  %11 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %12 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %13 = tail call %class.GrVkDescriptorSet* @_ZN24GrVkDescriptorSetManager16getDescriptorSetEP7GrVkGpuRK16GrResourceHandleINS_10HandleKindEE(%class.GrVkDescriptorSetManager* %10, %class.GrVkGpu* %12, %class.GrResourceHandle* dereferenceable(4) %3) #10
  ret %class.GrVkDescriptorSet* %13
}

declare %class.GrVkDescriptorSet* @_ZN24GrVkDescriptorSetManager16getDescriptorSetEP7GrVkGpuRK16GrResourceHandleINS_10HandleKindEE(%class.GrVkDescriptorSetManager*, %class.GrVkGpu*, %class.GrResourceHandle* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider21getInputDescriptorSetEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 13
  %4 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = bitcast i8* %2 to %"class.std::__1::unique_ptr.272"**
  %7 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %6, align 8
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %7, i64 %8, i32 0, i32 0, i32 0
  %10 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %9, align 8
  %11 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %12 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %13 = tail call %class.GrVkDescriptorSet* @_ZN24GrVkDescriptorSetManager16getDescriptorSetEP7GrVkGpuRK16GrResourceHandleINS_10HandleKindEE(%class.GrVkDescriptorSetManager* %10, %class.GrVkGpu* %12, %class.GrResourceHandle* dereferenceable(4) %3) #10
  ret %class.GrVkDescriptorSet* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider23getSamplerDescriptorSetERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider* nocapture readonly, %class.GrResourceHandle* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %4 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = bitcast i8* %3 to %"class.std::__1::unique_ptr.272"**
  %7 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %6, align 8
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %7, i64 %8, i32 0, i32 0, i32 0
  %10 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %9, align 8
  %11 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %12 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %13 = tail call %class.GrVkDescriptorSet* @_ZN24GrVkDescriptorSetManager16getDescriptorSetEP7GrVkGpuRK16GrResourceHandleINS_10HandleKindEE(%class.GrVkDescriptorSetManager* %10, %class.GrVkGpu* %12, %class.GrResourceHandle* dereferenceable(4) %1) #10
  ret %class.GrVkDescriptorSet* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider20recycleDescriptorSetEPK17GrVkDescriptorSetRK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider* nocapture readonly, %class.GrVkDescriptorSet*, %class.GrResourceHandle* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %7 = bitcast i8* %6 to %"class.std::__1::unique_ptr.272"**
  %8 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %7, align 8
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %8, i64 %9, i32 0, i32 0, i32 0
  %11 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %10, align 8
  tail call void @_ZN24GrVkDescriptorSetManager20recycleDescriptorSetEPK17GrVkDescriptorSet(%class.GrVkDescriptorSetManager* %11, %class.GrVkDescriptorSet* %1) #10
  ret void
}

declare void @_ZN24GrVkDescriptorSetManager20recycleDescriptorSetEPK17GrVkDescriptorSet(%class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSet*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkCommandPool* @_ZN20GrVkResourceProvider23findOrCreateCommandPoolEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 6
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 32
  %10 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 40
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 4294967294
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %8
  %16 = bitcast i8* %9 to %class.SkTArray.8*
  %17 = lshr i64 %12, 1
  %18 = bitcast i8* %9 to %class.GrVkCommandPool***
  %19 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %18, align 8
  %20 = and i64 %17, 2147483647
  %21 = add nsw i64 %20, -1
  %22 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %19, i64 %21
  %23 = bitcast %class.GrVkCommandPool** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add nuw nsw i64 %13, 4294967294
  %26 = and i64 %25, 4294967294
  %27 = and i64 %12, -4294967295
  %28 = or i64 %26, %27
  store i64 %28, i64* %11, align 8
  tail call void @_ZN8SkTArrayIP15GrVkCommandPoolLb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.8* %16, i32 0, i32 2) #10
  br label %35

29:                                               ; preds = %8
  %30 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %31 = load %class.GrVkGpu*, %class.GrVkGpu** %30, align 8
  %32 = tail call %class.GrVkCommandPool* @_ZN15GrVkCommandPool6CreateEP7GrVkGpu(%class.GrVkGpu* %31) #10
  %33 = ptrtoint %class.GrVkCommandPool* %32 to i64
  %34 = icmp eq %class.GrVkCommandPool* %32, null
  br i1 %34, label %56, label %35

35:                                               ; preds = %29, %15
  %36 = phi i64 [ %33, %29 ], [ %24, %15 ]
  %37 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 32
  %38 = bitcast i8* %37 to %class.SkTArray.8*
  tail call void @_ZN8SkTArrayIP15GrVkCommandPoolLb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.8* %38, i32 1, i32 1) #10
  %39 = bitcast i8* %37 to %class.GrVkCommandPool***
  %40 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %39, align 8
  %41 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 40
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %40, i64 %45
  %47 = add i64 %43, 2
  %48 = and i64 %47, 4294967294
  %49 = and i64 %43, -4294967295
  %50 = or i64 %48, %49
  store i64 %50, i64* %42, align 8
  %51 = bitcast %class.GrVkCommandPool** %46 to i64*
  store i64 %36, i64* %51, align 8
  %52 = inttoptr i64 %36 to %class.GrManagedResource*
  %53 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic
  %55 = inttoptr i64 %36 to %class.GrVkCommandPool*
  br label %56

56:                                               ; preds = %29, %35
  %57 = phi %class.GrVkCommandPool* [ %55, %35 ], [ null, %29 ]
  %58 = atomicrmw add i32* %3, i32 1 release
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %61, i32 1) #10
  br label %62

62:                                               ; preds = %56, %60
  ret %class.GrVkCommandPool* %57
}

declare %class.GrVkCommandPool* @_ZN15GrVkCommandPool6CreateEP7GrVkGpu(%class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider19checkCommandBuffersEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 40
  %3 = bitcast i8* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = lshr i64 %4, 1
  %9 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 32
  %10 = bitcast i8* %9 to %class.GrVkCommandPool***
  %11 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %12 = and i64 %8, 2147483647
  br label %14

13:                                               ; preds = %49, %1
  ret void

14:                                               ; preds = %7, %49
  %15 = phi i64 [ %12, %7 ], [ %16, %49 ]
  %16 = add nsw i64 %15, -1
  %17 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %10, align 8
  %18 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %17, i64 %16
  %19 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %18, align 8
  %20 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %19, i64 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !5
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %49

23:                                               ; preds = %14
  %24 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %24, align 8
  %26 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %27 = tail call zeroext i1 @_ZN24GrVkPrimaryCommandBuffer8finishedEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer* %25, %class.GrVkGpu* %26) #10
  br i1 %27, label %28, label %49

28:                                               ; preds = %23
  %29 = load i64, i64* %3, align 8
  %30 = lshr i64 %29, 1
  %31 = trunc i64 %30 to i32
  %32 = and i32 %31, 2147483647
  %33 = add nsw i32 %32, -1
  %34 = shl i32 %33, 1
  %35 = zext i32 %34 to i64
  %36 = and i64 %29, -4294967295
  %37 = or i64 %36, %35
  store i64 %37, i64* %3, align 8
  %38 = zext i32 %33 to i64
  %39 = icmp eq i64 %16, %38
  br i1 %39, label %48, label %40

40:                                               ; preds = %28
  %41 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %10, align 8
  %42 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %41, i64 %16
  %43 = sext i32 %33 to i64
  %44 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %41, i64 %43
  %45 = bitcast %class.GrVkCommandPool** %44 to i64*
  %46 = bitcast %class.GrVkCommandPool** %42 to i64*
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  br label %48

48:                                               ; preds = %28, %40
  tail call void @_ZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPool(%class.GrVkResourceProvider* %0, %class.GrVkCommandPool* %19)
  br label %49

49:                                               ; preds = %14, %23, %48
  %50 = load i64, i64* %3, align 8
  %51 = and i64 %50, 4294967294
  %52 = icmp ne i64 %51, 0
  %53 = icmp sgt i64 %16, 0
  %54 = and i1 %53, %52
  br i1 %54, label %14, label %13
}

declare zeroext i1 @_ZN24GrVkPrimaryCommandBuffer8finishedEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPool(%class.GrVkResourceProvider*, %class.GrVkCommandPool*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = alloca %"class.std::__1::function.609", align 8
  %5 = load atomic i64, i64* @_ZZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPoolE28trace_event_unique_atomic537.0.0 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #10
  %10 = bitcast %class.SkEventTracer* %9 to i8* (%class.SkEventTracer*, i8*)***
  %11 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, i64 2
  %13 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, align 8
  %14 = tail call i8* %13(%class.SkEventTracer* %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  store atomic i64 %15, i64* @_ZZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPoolE28trace_event_unique_atomic537.0.0 monotonic, align 8
  br label %16

16:                                               ; preds = %2, %8
  %17 = phi i8* [ %6, %2 ], [ %14, %8 ]
  %18 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %24 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %25 = load i8, i8* %17, align 1
  %26 = and i8 %25, 5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %16
  %29 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #10
  %30 = bitcast %class.SkEventTracer* %29 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %31 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %30, align 8
  %32 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, i64 4
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, align 8
  %34 = tail call i64 %33(%class.SkEventTracer* %29, i8 signext 88, i8* %17, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPool, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #10
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, i64 0, i32 0
  store i8* %17, i8** %36, align 8
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPool, i64 0, i64 0), i8** %21, align 8
  store i64 %34, i64* %22, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  br label %37

37:                                               ; preds = %16, %28
  call void @_ZN15GrVkCommandPool16releaseResourcesEv(%class.GrVkCommandPool* %1) #10
  %38 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %39 = load %class.GrVkGpu*, %class.GrVkGpu** %38, align 8
  %40 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %39, i64 0, i32 19
  %41 = load i8, i8* %40, align 8, !range !5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %37
  %44 = bitcast %class.GrVkCommandPool* %1 to %class.GrManagedResource*
  %45 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %78

48:                                               ; preds = %43
  %49 = bitcast %class.GrVkCommandPool* %1 to void (%class.GrManagedResource*)***
  %50 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %50, i64 4
  %52 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %51, align 8
  call void %52(%class.GrManagedResource* %44) #10
  %53 = icmp eq %class.GrVkCommandPool* %1, null
  br i1 %53, label %78, label %54

54:                                               ; preds = %48
  %55 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %49, align 8
  %56 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %55, i64 1
  %57 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %56, align 8
  call void %57(%class.GrManagedResource* nonnull %44) #10
  br label %78

58:                                               ; preds = %37
  %59 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %39, i64 0, i32 0, i32 5
  %60 = load %class.GrDirectContext*, %class.GrDirectContext** %59, align 8
  %61 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %60, i64 0, i32 2, i32 0, i32 0, i32 0
  %62 = load %class.SkTaskGroup*, %class.SkTaskGroup** %61, align 8
  %63 = icmp eq %class.SkTaskGroup* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.std::__1::function.609", %"class.std::__1::function.609"* %4, i64 0, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.std::__1::function.609", %"class.std::__1::function.609"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPoolE3$_2S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %65, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPoolE3$_2FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %66, align 8
  %67 = bitcast %"class.std::__1::function.609"* %4 to %class.GrVkResourceProvider**
  store %class.GrVkResourceProvider* %0, %class.GrVkResourceProvider** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::function.609", %"class.std::__1::function.609"* %4, i64 0, i32 0, i32 0, i32 1
  %69 = bitcast [8 x i8]* %68 to %class.GrVkCommandPool**
  store %class.GrVkCommandPool* %1, %class.GrVkCommandPool** %69, align 8
  call void @_ZN11SkTaskGroup3addENSt3__18functionIFvvEEE(%class.SkTaskGroup* nonnull %62, %"class.std::__1::function.609"* nonnull %4) #10
  %70 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %66, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %70, i64 0, i32 1
  %72 = load void (i8*)*, void (i8*)** %71, align 8
  %73 = icmp eq void (i8*)* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.std::__1::function.609", %"class.std::__1::function.609"* %4, i64 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void %72(i8* %76) #10
  br label %78

77:                                               ; preds = %58
  call void @_ZN20GrVkResourceProvider5resetEP15GrVkCommandPool(%class.GrVkResourceProvider* %0, %class.GrVkCommandPool* %1)
  br label %78

78:                                               ; preds = %74, %64, %54, %48, %43, %77
  %79 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %80 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = load i8*, i8** %20, align 8
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %94, label %85

85:                                               ; preds = %81
  %86 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #10
  %87 = load i8*, i8** %20, align 8
  %88 = load i8*, i8** %21, align 8
  %89 = load i64, i64* %22, align 8
  %90 = bitcast %class.SkEventTracer* %86 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %91 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %90, align 8
  %92 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %91, i64 5
  %93 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %92, align 8
  call void %93(%class.SkEventTracer* %86, i8* %87, i8* %88, i64 %89) #10
  br label %94

94:                                               ; preds = %78, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider26forceSyncAllCommandBuffersEv(%class.GrVkResourceProvider* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 40
  %3 = bitcast i8* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = lshr i64 %4, 1
  %9 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 32
  %10 = bitcast i8* %9 to %class.GrVkCommandPool***
  %11 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %12 = and i64 %8, 2147483647
  br label %14

13:                                               ; preds = %29, %1
  ret void

14:                                               ; preds = %7, %29
  %15 = phi i64 [ %4, %7 ], [ %30, %29 ]
  %16 = phi i64 [ %12, %7 ], [ %17, %29 ]
  %17 = add nsw i64 %16, -1
  %18 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %10, align 8
  %19 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %18, i64 %17
  %20 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %19, align 8
  %21 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %20, i64 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %14
  %25 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %25, align 8
  %27 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  tail call void @_ZN24GrVkPrimaryCommandBuffer9forceSyncEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer* %26, %class.GrVkGpu* %27) #10
  %28 = load i64, i64* %3, align 8
  br label %29

29:                                               ; preds = %14, %24
  %30 = phi i64 [ %15, %14 ], [ %28, %24 ]
  %31 = and i64 %30, 4294967294
  %32 = icmp ne i64 %31, 0
  %33 = icmp sgt i64 %17, 0
  %34 = and i1 %33, %32
  br i1 %34, label %14, label %13
}

declare void @_ZN24GrVkPrimaryCommandBuffer9forceSyncEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider37addFinishedProcToActiveCommandBuffersE5sk_spI18GrRefCntedCallbackE(%class.GrVkResourceProvider* nocapture readonly, %class.sk_sp.221* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.221, align 8
  %4 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 40
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 32
  %11 = bitcast i8* %10 to %class.GrVkCommandPool***
  %12 = getelementptr inbounds %class.sk_sp.221, %class.sk_sp.221* %3, i64 0, i32 0
  %13 = getelementptr inbounds %class.sk_sp.221, %class.sk_sp.221* %1, i64 0, i32 0
  br label %15

14:                                               ; preds = %43, %2
  ret void

15:                                               ; preds = %9, %43
  %16 = phi i64 [ 0, %9 ], [ %44, %43 ]
  %17 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %11, align 8
  %18 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %17, i64 %16
  %19 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %18, align 8
  %20 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %20, align 8
  %22 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %13, align 8
  %23 = icmp eq %class.GrRefCntedCallback* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %15, %24
  store %class.GrRefCntedCallback* %22, %class.GrRefCntedCallback** %12, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer15addFinishedProcE5sk_spI18GrRefCntedCallbackE(%class.GrVkPrimaryCommandBuffer* %21, %class.sk_sp.221* nonnull %3) #10
  %28 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %12, align 8
  %29 = icmp eq %class.GrRefCntedCallback* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %28, i64 0, i32 0
  %32 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.SkNVRefCnt.222, %class.SkNVRefCnt.222* %31, i64 2
  %37 = bitcast %class.SkNVRefCnt.222* %36 to void (i8*)**
  %38 = load void (i8*)*, void (i8*)** %37, align 8
  %39 = getelementptr inbounds %class.SkNVRefCnt.222, %class.SkNVRefCnt.222* %31, i64 4
  %40 = bitcast %class.SkNVRefCnt.222* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  call void %38(i8* %41) #10
  %42 = bitcast %class.GrRefCntedCallback* %28 to i8*
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %27, %30, %35
  %44 = add nuw nsw i64 %16, 1
  %45 = load i64, i64* %5, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp ult i64 %44, %47
  br i1 %48, label %15, label %14
}

declare void @_ZN24GrVkPrimaryCommandBuffer15addFinishedProcE5sk_spI18GrRefCntedCallbackE(%class.GrVkPrimaryCommandBuffer*, %class.sk_sp.221*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider16destroyResourcesEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %3 = bitcast %class.GrVkResourceProvider* %0 to %class.GrGpu**
  %4 = load %class.GrGpu*, %class.GrGpu** %3, align 8
  %5 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %4, i64 0, i32 5
  %6 = load %class.GrDirectContext*, %class.GrDirectContext** %5, align 8
  %7 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %class.SkTaskGroup*, %class.SkTaskGroup** %7, align 8
  %9 = icmp eq %class.SkTaskGroup* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void @_ZN11SkTaskGroup4waitEv(%class.SkTaskGroup* nonnull %8) #10
  br label %11

11:                                               ; preds = %1, %10
  %12 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 2
  %13 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 2, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 2147483647
  %18 = and i64 %14, -4294967295
  store i64 %18, i64* %13, align 8
  %19 = icmp eq i32 %17, 0
  br i1 %19, label %52, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %12, i64 0, i32 0
  br label %22

22:                                               ; preds = %50, %20
  %23 = phi i64 [ %18, %20 ], [ %51, %50 ]
  %24 = phi i32 [ 0, %20 ], [ %48, %50 ]
  %25 = load %"struct.GrVkResourceProvider::MSAALoadPipeline"*, %"struct.GrVkResourceProvider::MSAALoadPipeline"** %21, align 8
  %26 = lshr i64 %23, 1
  %27 = trunc i64 %26 to i32
  %28 = and i32 %27, 2147483647
  %29 = add nuw nsw i32 %28, %24
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %25, i64 %30, i32 0, i32 0
  %32 = load %class.GrVkPipeline*, %class.GrVkPipeline** %31, align 8
  %33 = icmp eq %class.GrVkPipeline* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %22
  %35 = bitcast %class.GrVkPipeline* %32 to %class.GrManagedResource*
  %36 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = bitcast %class.GrVkPipeline* %32 to void (%class.GrManagedResource*)***
  %41 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %41, i64 4
  %43 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %42, align 8
  tail call void %43(%class.GrManagedResource* nonnull %35) #10
  %44 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %40, align 8
  %45 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %44, i64 1
  %46 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %45, align 8
  tail call void %46(%class.GrManagedResource* nonnull %35) #10
  br label %47

47:                                               ; preds = %39, %34, %22
  %48 = add nuw nsw i32 %24, 1
  %49 = icmp eq i32 %48, %17
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = load i64, i64* %13, align 8
  br label %22

52:                                               ; preds = %47, %11
  tail call void @_ZN8SkTArrayIN20GrVkResourceProvider16MSAALoadPipelineELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %12, i32 0, i32 2) #10
  %53 = load i64, i64* %13, align 8
  %54 = and i64 %53, -4294967297
  store i64 %54, i64* %13, align 8
  %55 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 224
  %56 = bitcast i8* %55 to %class.SkTArray.1*
  %57 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 3, i32 0, i32 0, i64 232
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 4294967294
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %52
  %63 = and i64 %59, -4294967295
  store i64 %63, i64* %58, align 8
  br label %94

64:                                               ; preds = %52
  %65 = bitcast i8* %55 to %"class.GrVkResourceProvider::CompatibleRenderPassSet"**
  br label %104

66:                                               ; preds = %148
  %67 = and i64 %149, -4294967295
  store i64 %67, i64* %58, align 8
  %68 = icmp eq i32 %153, 0
  br i1 %68, label %94, label %69

69:                                               ; preds = %66
  %70 = bitcast i8* %55 to %"class.GrVkResourceProvider::CompatibleRenderPassSet"**
  br label %71

71:                                               ; preds = %92, %69
  %72 = phi i64 [ %67, %69 ], [ %93, %92 ]
  %73 = phi i32 [ 0, %69 ], [ %90, %92 ]
  %74 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %70, align 8
  %75 = lshr i64 %72, 1
  %76 = trunc i64 %75 to i32
  %77 = and i32 %76, 2147483647
  %78 = add nuw nsw i32 %77, %73
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %74, i64 %79, i32 0, i32 0, i32 0, i64 40
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %71
  %86 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %74, i64 %79, i32 0, i32 0, i32 0, i64 32
  %87 = bitcast i8* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void @_Z7sk_freePv(i8* %88) #10
  br label %89

89:                                               ; preds = %85, %71
  %90 = add nuw nsw i32 %73, 1
  %91 = icmp eq i32 %90, %153
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %58, align 8
  br label %71

94:                                               ; preds = %89, %62, %66
  tail call void @_ZN8SkTArrayIN20GrVkResourceProvider23CompatibleRenderPassSetELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.1* %56, i32 0, i32 2) #10
  %95 = load i64, i64* %58, align 8
  %96 = and i64 %95, -4294967297
  store i64 %96, i64* %58, align 8
  %97 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 4
  %98 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 4, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 4294967294
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %156, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %97, i64 0, i32 0
  br label %271

104:                                              ; preds = %64, %148
  %105 = phi i64 [ %59, %64 ], [ %149, %148 ]
  %106 = phi i64 [ 0, %64 ], [ %150, %148 ]
  %107 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %65, align 8
  %108 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %107, i64 %106, i32 0, i32 0, i32 0, i64 40
  %109 = bitcast i8* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = and i64 %110, 4294967294
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %148, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %107, i64 %106, i32 0, i32 0, i32 0, i64 32
  %115 = bitcast i8* %114 to %class.GrVkRenderPass***
  br label %116

116:                                              ; preds = %140, %113
  %117 = phi i64 [ %110, %113 ], [ %141, %140 ]
  %118 = phi i64 [ 0, %113 ], [ %142, %140 ]
  %119 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %115, align 8
  %120 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %119, i64 %118
  %121 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %120, align 8
  %122 = icmp eq %class.GrVkRenderPass* %121, null
  %123 = bitcast %class.GrVkRenderPass* %121 to %class.GrManagedResource*
  br i1 %122, label %140, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %121, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %136

128:                                              ; preds = %124
  %129 = bitcast %class.GrVkRenderPass* %121 to void (%class.GrManagedResource*)***
  %130 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %130, i64 4
  %132 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %131, align 8
  tail call void %132(%class.GrManagedResource* nonnull %123) #10
  %133 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %129, align 8
  %134 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %133, i64 1
  %135 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %134, align 8
  tail call void %135(%class.GrManagedResource* nonnull %123) #10
  br label %136

136:                                              ; preds = %128, %124
  %137 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %115, align 8
  %138 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %137, i64 %118
  store %class.GrVkRenderPass* null, %class.GrVkRenderPass** %138, align 8
  %139 = load i64, i64* %109, align 8
  br label %140

140:                                              ; preds = %136, %116
  %141 = phi i64 [ %117, %116 ], [ %139, %136 ]
  %142 = add nuw nsw i64 %118, 1
  %143 = lshr i64 %141, 1
  %144 = and i64 %143, 2147483647
  %145 = icmp ult i64 %142, %144
  br i1 %145, label %116, label %146

146:                                              ; preds = %140
  %147 = load i64, i64* %58, align 8
  br label %148

148:                                              ; preds = %146, %104
  %149 = phi i64 [ %147, %146 ], [ %105, %104 ]
  %150 = add nuw nsw i64 %106, 1
  %151 = lshr i64 %149, 1
  %152 = trunc i64 %151 to i32
  %153 = and i32 %152, 2147483647
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %150, %154
  br i1 %155, label %104, label %66

156:                                              ; preds = %290, %94
  %157 = phi i64 [ %99, %94 ], [ %292, %290 ]
  %158 = and i64 %157, -4294967295
  store i64 %158, i64* %98, align 8
  tail call void @_ZN8SkTArrayIPK14GrVkRenderPassLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.5* %97, i32 0, i32 2) #10
  %159 = load i64, i64* %98, align 8
  %160 = and i64 %159, -4294967297
  store i64 %160, i64* %98, align 8
  %161 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %194

164:                                              ; preds = %156
  %165 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %166

166:                                              ; preds = %189, %164
  %167 = phi i64 [ 0, %164 ], [ %190, %189 ]
  %168 = load %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %165, align 8
  %169 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %168, i64 %167, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %189, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %168, i64 %167, i32 0
  %174 = load %class.GrVkSampler*, %class.GrVkSampler** %173, align 8
  %175 = bitcast %class.GrVkSampler* %174 to %class.GrManagedResource*
  %176 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %174, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw add i32* %176, i32 -1 acq_rel
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %189

179:                                              ; preds = %172
  %180 = bitcast %class.GrVkSampler* %174 to void (%class.GrManagedResource*)***
  %181 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %180, align 8
  %182 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %181, i64 4
  %183 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %182, align 8
  tail call void %183(%class.GrManagedResource* %175) #10
  %184 = icmp eq %class.GrVkSampler* %174, null
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %180, align 8
  %187 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %186, i64 1
  %188 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %187, align 8
  tail call void %188(%class.GrManagedResource* nonnull %175) #10
  br label %189

189:                                              ; preds = %185, %179, %172, %166
  %190 = add nuw nsw i64 %167, 1
  %191 = load i32, i32* %161, align 4
  %192 = sext i32 %191 to i64
  %193 = icmp slt i64 %190, %192
  br i1 %193, label %166, label %194

194:                                              ; preds = %189, %156
  %195 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8, i32 0, i32 0
  store i32 0, i32* %195, align 8
  store i32 0, i32* %161, align 4
  %196 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 8, i32 0, i32 2
  %197 = getelementptr inbounds %class.SkAutoTArray.244, %class.SkAutoTArray.244* %196, i64 0, i32 0, i32 0, i32 0, i32 0
  %198 = load %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %197, align 8
  %199 = bitcast %class.SkAutoTArray.244* %196 to i64*
  store i64 0, i64* %199, align 8
  %200 = icmp eq %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %198, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %194
  %202 = bitcast %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %198 to i8*
  tail call void @_ZdaPv(i8* %202) #9
  br label %203

203:                                              ; preds = %194, %201
  %204 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9, i32 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = icmp sgt i32 %205, 0
  br i1 %206, label %207, label %237

207:                                              ; preds = %203
  %208 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %209

209:                                              ; preds = %232, %207
  %210 = phi i64 [ 0, %207 ], [ %233, %232 ]
  %211 = load %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %208, align 8
  %212 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %211, i64 %210, i32 1
  %213 = load i32, i32* %212, align 8
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %232, label %215

215:                                              ; preds = %209
  %216 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %211, i64 %210, i32 0
  %217 = load %class.GrVkSamplerYcbcrConversion*, %class.GrVkSamplerYcbcrConversion** %216, align 8
  %218 = bitcast %class.GrVkSamplerYcbcrConversion* %217 to %class.GrManagedResource*
  %219 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %217, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = atomicrmw add i32* %219, i32 -1 acq_rel
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %222, label %232

222:                                              ; preds = %215
  %223 = bitcast %class.GrVkSamplerYcbcrConversion* %217 to void (%class.GrManagedResource*)***
  %224 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %223, align 8
  %225 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %224, i64 4
  %226 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %225, align 8
  tail call void %226(%class.GrManagedResource* %218) #10
  %227 = icmp eq %class.GrVkSamplerYcbcrConversion* %217, null
  br i1 %227, label %232, label %228

228:                                              ; preds = %222
  %229 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %223, align 8
  %230 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %229, i64 1
  %231 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %230, align 8
  tail call void %231(%class.GrManagedResource* nonnull %218) #10
  br label %232

232:                                              ; preds = %228, %222, %215, %209
  %233 = add nuw nsw i64 %210, 1
  %234 = load i32, i32* %204, align 4
  %235 = sext i32 %234 to i64
  %236 = icmp slt i64 %233, %235
  br i1 %236, label %209, label %237

237:                                              ; preds = %232, %203
  %238 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9, i32 0, i32 0
  store i32 0, i32* %238, align 8
  store i32 0, i32* %204, align 4
  %239 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 9, i32 0, i32 2
  %240 = getelementptr inbounds %class.SkAutoTArray.253, %class.SkAutoTArray.253* %239, i64 0, i32 0, i32 0, i32 0, i32 0
  %241 = load %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %240, align 8
  %242 = bitcast %class.SkAutoTArray.253* %239 to i64*
  store i64 0, i64* %242, align 8
  %243 = icmp eq %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %241, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %237
  %245 = bitcast %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %241 to i8*
  tail call void @_ZdaPv(i8* %245) #9
  br label %246

246:                                              ; preds = %237, %244
  %247 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 10, i32 0
  %248 = load %"class.GrVkResourceProvider::PipelineStateCache"*, %"class.GrVkResourceProvider::PipelineStateCache"** %247, align 8
  tail call void @_ZN20GrVkResourceProvider18PipelineStateCache7releaseEv(%"class.GrVkResourceProvider::PipelineStateCache"* %248) #10
  %249 = load %class.GrVkGpu*, %class.GrVkGpu** %2, align 8
  %250 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %249, i64 0, i32 1, i32 0
  %251 = load %struct.GrVkInterface*, %struct.GrVkInterface** %250, align 8
  %252 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %251, i64 0, i32 1, i32 60, i32 0
  %253 = load void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)** %252, align 8
  %254 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %249, i64 0, i32 6
  %255 = load %struct.VkDevice_T*, %struct.VkDevice_T** %254, align 8
  %256 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 1
  %257 = load %struct.VkPipelineCache_T*, %struct.VkPipelineCache_T** %256, align 8
  tail call void %253(%struct.VkDevice_T* %255, %struct.VkPipelineCache_T* %257, %struct.VkAllocationCallbacks* null) #10
  store %struct.VkPipelineCache_T* null, %struct.VkPipelineCache_T** %256, align 8
  %258 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 32
  %259 = bitcast i8* %258 to %class.SkTArray.8*
  %260 = bitcast i8* %258 to %class.GrVkCommandPool***
  %261 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %260, align 8
  %262 = icmp eq %class.GrVkCommandPool** %261, null
  br i1 %262, label %296, label %263

263:                                              ; preds = %246
  %264 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 40
  %265 = bitcast i8* %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = lshr i64 %266, 1
  %268 = and i64 %267, 2147483647
  %269 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %261, i64 %268
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %296, label %323

271:                                              ; preds = %102, %290
  %272 = phi i64 [ 0, %102 ], [ %291, %290 ]
  %273 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %103, align 8
  %274 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %273, i64 %272
  %275 = bitcast %class.GrVkRenderPass** %274 to %class.GrManagedResource**
  %276 = load %class.GrManagedResource*, %class.GrManagedResource** %275, align 8
  %277 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %276, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = atomicrmw add i32* %277, i32 -1 acq_rel
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %290

280:                                              ; preds = %271
  %281 = bitcast %class.GrManagedResource* %276 to void (%class.GrManagedResource*)***
  %282 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %281, align 8
  %283 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %282, i64 4
  %284 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %283, align 8
  tail call void %284(%class.GrManagedResource* %276) #10
  %285 = icmp eq %class.GrManagedResource* %276, null
  br i1 %285, label %290, label %286

286:                                              ; preds = %280
  %287 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %281, align 8
  %288 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %287, i64 1
  %289 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %288, align 8
  tail call void %289(%class.GrManagedResource* nonnull %276) #10
  br label %290

290:                                              ; preds = %271, %280, %286
  %291 = add nuw nsw i64 %272, 1
  %292 = load i64, i64* %98, align 8
  %293 = lshr i64 %292, 1
  %294 = and i64 %293, 2147483647
  %295 = icmp ult i64 %291, %294
  br i1 %295, label %271, label %156

296:                                              ; preds = %340, %246, %263
  %297 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 5, i32 0, i32 0, i64 40
  %298 = bitcast i8* %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = and i64 %299, -4294967295
  store i64 %300, i64* %298, align 8
  tail call void @_ZN8SkTArrayIP15GrVkCommandPoolLb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.8* %259, i32 0, i32 2) #10
  %301 = load i64, i64* %298, align 8
  %302 = and i64 %301, -4294967297
  store i64 %302, i64* %298, align 8
  %303 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 6
  %304 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %303, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = atomicrmw sub i32* %304, i32 1 acquire
  %306 = icmp slt i32 %305, 1
  br i1 %306, label %307, label %309

307:                                              ; preds = %296
  %308 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %303, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %308) #10
  br label %309

309:                                              ; preds = %296, %307
  %310 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 32
  %311 = bitcast i8* %310 to %class.SkTArray.8*
  %312 = bitcast i8* %310 to %class.GrVkCommandPool***
  %313 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %312, align 8
  %314 = icmp eq %class.GrVkCommandPool** %313, null
  br i1 %314, label %343, label %315

315:                                              ; preds = %309
  %316 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 40
  %317 = bitcast i8* %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = lshr i64 %318, 1
  %320 = and i64 %319, 2147483647
  %321 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %313, i64 %320
  %322 = icmp eq i64 %320, 0
  br i1 %322, label %343, label %366

323:                                              ; preds = %263, %340
  %324 = phi %class.GrVkCommandPool** [ %341, %340 ], [ %261, %263 ]
  %325 = bitcast %class.GrVkCommandPool** %324 to %class.GrManagedResource**
  %326 = load %class.GrManagedResource*, %class.GrManagedResource** %325, align 8
  %327 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %326, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = atomicrmw add i32* %327, i32 -1 acq_rel
  %329 = icmp eq i32 %328, 1
  br i1 %329, label %330, label %340

330:                                              ; preds = %323
  %331 = bitcast %class.GrManagedResource* %326 to void (%class.GrManagedResource*)***
  %332 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %331, align 8
  %333 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %332, i64 4
  %334 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %333, align 8
  tail call void %334(%class.GrManagedResource* %326) #10
  %335 = icmp eq %class.GrManagedResource* %326, null
  br i1 %335, label %340, label %336

336:                                              ; preds = %330
  %337 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %331, align 8
  %338 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %337, i64 1
  %339 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %338, align 8
  tail call void %339(%class.GrManagedResource* nonnull %326) #10
  br label %340

340:                                              ; preds = %323, %330, %336
  %341 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %324, i64 1
  %342 = icmp eq %class.GrVkCommandPool** %341, %269
  br i1 %342, label %296, label %323

343:                                              ; preds = %383, %309, %315
  %344 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 40
  %345 = bitcast i8* %344 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = and i64 %346, -4294967295
  store i64 %347, i64* %345, align 8
  tail call void @_ZN8SkTArrayIP15GrVkCommandPoolLb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.8* %311, i32 0, i32 2) #10
  %348 = load i64, i64* %345, align 8
  %349 = and i64 %348, -4294967297
  store i64 %349, i64* %345, align 8
  %350 = atomicrmw add i32* %304, i32 1 release
  %351 = icmp slt i32 %350, 0
  br i1 %351, label %352, label %354

352:                                              ; preds = %343
  %353 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %303, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %353, i32 1) #10
  br label %354

354:                                              ; preds = %343, %352
  %355 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 32
  %356 = bitcast i8* %355 to %class.SkTArray.271*
  %357 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 11, i32 0, i32 0, i64 40
  %358 = bitcast i8* %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = and i64 %359, 4294967294
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %364

362:                                              ; preds = %354
  %363 = and i64 %359, -4294967295
  store i64 %363, i64* %358, align 8
  br label %474

364:                                              ; preds = %354
  %365 = bitcast i8* %355 to %"class.std::__1::unique_ptr.272"**
  br label %477

366:                                              ; preds = %315, %383
  %367 = phi %class.GrVkCommandPool** [ %384, %383 ], [ %313, %315 ]
  %368 = bitcast %class.GrVkCommandPool** %367 to %class.GrManagedResource**
  %369 = load %class.GrManagedResource*, %class.GrManagedResource** %368, align 8
  %370 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %369, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = atomicrmw add i32* %370, i32 -1 acq_rel
  %372 = icmp eq i32 %371, 1
  br i1 %372, label %373, label %383

373:                                              ; preds = %366
  %374 = bitcast %class.GrManagedResource* %369 to void (%class.GrManagedResource*)***
  %375 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %374, align 8
  %376 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %375, i64 4
  %377 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %376, align 8
  tail call void %377(%class.GrManagedResource* %369) #10
  %378 = icmp eq %class.GrManagedResource* %369, null
  br i1 %378, label %383, label %379

379:                                              ; preds = %373
  %380 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %374, align 8
  %381 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %380, i64 1
  %382 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %381, align 8
  tail call void %382(%class.GrManagedResource* nonnull %369) #10
  br label %383

383:                                              ; preds = %366, %373, %379
  %384 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %367, i64 1
  %385 = icmp eq %class.GrVkCommandPool** %384, %321
  br i1 %385, label %343, label %366

386:                                              ; preds = %477
  %387 = and i64 %484, -4294967295
  store i64 %387, i64* %358, align 8
  %388 = icmp eq i32 %487, 0
  br i1 %388, label %474, label %389

389:                                              ; preds = %386
  %390 = bitcast i8* %355 to %"class.std::__1::unique_ptr.272"**
  %391 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %390, align 8
  %392 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %391, i64 0, i32 0, i32 0, i32 0
  %393 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %392, align 8
  store %class.GrVkDescriptorSetManager* null, %class.GrVkDescriptorSetManager** %392, align 8
  %394 = icmp eq %class.GrVkDescriptorSetManager* %393, null
  br i1 %394, label %426, label %395

395:                                              ; preds = %389
  %396 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %393, i64 0, i32 3, i32 0, i32 0, i64 40
  %397 = bitcast i8* %396 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = and i64 %398, 1
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %405, label %401

401:                                              ; preds = %395
  %402 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %393, i64 0, i32 3, i32 0, i32 0, i64 32
  %403 = bitcast i8* %402 to i8**
  %404 = load i8*, i8** %403, align 8
  tail call void @_Z7sk_freePv(i8* %404) #10
  br label %405

405:                                              ; preds = %401, %395
  %406 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %393, i64 0, i32 2, i32 0, i32 0, i64 24
  %407 = bitcast i8* %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = and i64 %408, 1
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %415, label %411

411:                                              ; preds = %405
  %412 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %393, i64 0, i32 2, i32 0, i32 0, i64 16
  %413 = bitcast i8* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  tail call void @_Z7sk_freePv(i8* %414) #10
  br label %415

415:                                              ; preds = %411, %405
  %416 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %393, i64 0, i32 1, i32 1
  %417 = load i64, i64* %416, align 8
  %418 = and i64 %417, 1
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %424, label %420

420:                                              ; preds = %415
  %421 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %393, i64 0, i32 1
  %422 = bitcast %class.SkTArray.275* %421 to i8**
  %423 = load i8*, i8** %422, align 8
  tail call void @_Z7sk_freePv(i8* %423) #10
  br label %424

424:                                              ; preds = %420, %415
  %425 = bitcast %class.GrVkDescriptorSetManager* %393 to i8*
  tail call void @_ZdlPv(i8* %425) #9
  br label %426

426:                                              ; preds = %389, %424
  %427 = icmp eq i32 %487, 1
  br i1 %427, label %474, label %428

428:                                              ; preds = %426, %471
  %429 = phi i32 [ %472, %471 ], [ 1, %426 ]
  %430 = load i64, i64* %358, align 8
  %431 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %390, align 8
  %432 = lshr i64 %430, 1
  %433 = trunc i64 %432 to i32
  %434 = and i32 %433, 2147483647
  %435 = add nuw nsw i32 %434, %429
  %436 = zext i32 %435 to i64
  %437 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %431, i64 %436, i32 0, i32 0, i32 0
  %438 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %437, align 8
  store %class.GrVkDescriptorSetManager* null, %class.GrVkDescriptorSetManager** %437, align 8
  %439 = icmp eq %class.GrVkDescriptorSetManager* %438, null
  br i1 %439, label %471, label %440

440:                                              ; preds = %428
  %441 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %438, i64 0, i32 3, i32 0, i32 0, i64 40
  %442 = bitcast i8* %441 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = and i64 %443, 1
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %450, label %446

446:                                              ; preds = %440
  %447 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %438, i64 0, i32 3, i32 0, i32 0, i64 32
  %448 = bitcast i8* %447 to i8**
  %449 = load i8*, i8** %448, align 8
  tail call void @_Z7sk_freePv(i8* %449) #10
  br label %450

450:                                              ; preds = %446, %440
  %451 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %438, i64 0, i32 2, i32 0, i32 0, i64 24
  %452 = bitcast i8* %451 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = and i64 %453, 1
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %460, label %456

456:                                              ; preds = %450
  %457 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %438, i64 0, i32 2, i32 0, i32 0, i64 16
  %458 = bitcast i8* %457 to i8**
  %459 = load i8*, i8** %458, align 8
  tail call void @_Z7sk_freePv(i8* %459) #10
  br label %460

460:                                              ; preds = %456, %450
  %461 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %438, i64 0, i32 1, i32 1
  %462 = load i64, i64* %461, align 8
  %463 = and i64 %462, 1
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %469, label %465

465:                                              ; preds = %460
  %466 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %438, i64 0, i32 1
  %467 = bitcast %class.SkTArray.275* %466 to i8**
  %468 = load i8*, i8** %467, align 8
  tail call void @_Z7sk_freePv(i8* %468) #10
  br label %469

469:                                              ; preds = %465, %460
  %470 = bitcast %class.GrVkDescriptorSetManager* %438 to i8*
  tail call void @_ZdlPv(i8* %470) #9
  br label %471

471:                                              ; preds = %428, %469
  %472 = add nuw nsw i32 %429, 1
  %473 = icmp eq i32 %472, %487
  br i1 %473, label %474, label %428

474:                                              ; preds = %471, %362, %386, %426
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrI24GrVkDescriptorSetManagerNS0_14default_deleteIS2_EEEELb0EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray.271* %356, i32 0, i32 2) #10
  %475 = load i64, i64* %358, align 8
  %476 = and i64 %475, -4294967297
  store i64 %476, i64* %358, align 8
  ret void

477:                                              ; preds = %364, %477
  %478 = phi i64 [ 0, %364 ], [ %483, %477 ]
  %479 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %365, align 8
  %480 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %479, i64 %478, i32 0, i32 0, i32 0
  %481 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %480, align 8
  %482 = load %class.GrVkGpu*, %class.GrVkGpu** %2, align 8
  tail call void @_ZN24GrVkDescriptorSetManager7releaseEP7GrVkGpu(%class.GrVkDescriptorSetManager* %481, %class.GrVkGpu* %482) #10
  %483 = add nuw nsw i64 %478, 1
  %484 = load i64, i64* %358, align 8
  %485 = lshr i64 %484, 1
  %486 = trunc i64 %485 to i32
  %487 = and i32 %486, 2147483647
  %488 = zext i32 %487 to i64
  %489 = icmp ult i64 %483, %488
  br i1 %489, label %477, label %386
}

declare void @_ZN11SkTaskGroup4waitEv(%class.SkTaskGroup*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider23CompatibleRenderPassSet16releaseResourcesEv(%"class.GrVkResourceProvider::CompatibleRenderPassSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 0, i32 0, i32 0, i64 40
  %3 = bitcast i8* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 0, i32 0, i32 0, i64 32
  %9 = bitcast i8* %8 to %class.GrVkRenderPass***
  br label %11

10:                                               ; preds = %35, %1
  ret void

11:                                               ; preds = %7, %35
  %12 = phi i64 [ %4, %7 ], [ %36, %35 ]
  %13 = phi i64 [ 0, %7 ], [ %37, %35 ]
  %14 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %9, align 8
  %15 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %14, i64 %13
  %16 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %15, align 8
  %17 = icmp eq %class.GrVkRenderPass* %16, null
  %18 = bitcast %class.GrVkRenderPass* %16 to %class.GrManagedResource*
  br i1 %17, label %35, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = bitcast %class.GrVkRenderPass* %16 to void (%class.GrManagedResource*)***
  %25 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %25, i64 4
  %27 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %26, align 8
  tail call void %27(%class.GrManagedResource* nonnull %18) #10
  %28 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %24, align 8
  %29 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %28, i64 1
  %30 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %29, align 8
  tail call void %30(%class.GrManagedResource* nonnull %18) #10
  br label %31

31:                                               ; preds = %19, %23
  %32 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %9, align 8
  %33 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %32, i64 %13
  store %class.GrVkRenderPass* null, %class.GrVkRenderPass** %33, align 8
  %34 = load i64, i64* %3, align 8
  br label %35

35:                                               ; preds = %11, %31
  %36 = phi i64 [ %12, %11 ], [ %34, %31 ]
  %37 = add nuw nsw i64 %13, 1
  %38 = lshr i64 %36, 1
  %39 = and i64 %38, 2147483647
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %11, label %10
}

declare void @_ZN20GrVkResourceProvider18PipelineStateCache7releaseEv(%"class.GrVkResourceProvider::PipelineStateCache"*) local_unnamed_addr #2

declare void @_ZN24GrVkDescriptorSetManager7releaseEP7GrVkGpu(%class.GrVkDescriptorSetManager*, %class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider29releaseUnlockedBackendObjectsEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 6
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 32
  %10 = bitcast i8* %9 to %class.SkTArray.8*
  %11 = bitcast i8* %9 to %class.GrVkCommandPool***
  %12 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %11, align 8
  %13 = icmp eq %class.GrVkCommandPool** %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 40
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %17, 1
  %19 = and i64 %18, 2147483647
  %20 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %12, i64 %19
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %51, %8, %14
  %23 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 40
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, -4294967295
  store i64 %26, i64* %24, align 8
  tail call void @_ZN8SkTArrayIP15GrVkCommandPoolLb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.8* %10, i32 0, i32 2) #10
  %27 = load i64, i64* %24, align 8
  %28 = and i64 %27, -4294967297
  store i64 %28, i64* %24, align 8
  %29 = atomicrmw add i32* %3, i32 1 release
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %32, i32 1) #10
  br label %33

33:                                               ; preds = %22, %31
  ret void

34:                                               ; preds = %14, %51
  %35 = phi %class.GrVkCommandPool** [ %52, %51 ], [ %12, %14 ]
  %36 = bitcast %class.GrVkCommandPool** %35 to %class.GrManagedResource**
  %37 = load %class.GrManagedResource*, %class.GrManagedResource** %36, align 8
  %38 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %51

41:                                               ; preds = %34
  %42 = bitcast %class.GrManagedResource* %37 to void (%class.GrManagedResource*)***
  %43 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %43, i64 4
  %45 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %44, align 8
  tail call void %45(%class.GrManagedResource* %37) #10
  %46 = icmp eq %class.GrManagedResource* %37, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %41
  %48 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %42, align 8
  %49 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %48, i64 1
  %50 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %49, align 8
  tail call void %50(%class.GrManagedResource* nonnull %37) #10
  br label %51

51:                                               ; preds = %34, %41, %47
  %52 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %35, i64 1
  %53 = icmp eq %class.GrVkCommandPool** %52, %20
  br i1 %53, label %22, label %34
}

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN15GrVkCommandPool16releaseResourcesEv(%class.GrVkCommandPool*) local_unnamed_addr #2

declare void @_ZN11SkTaskGroup3addENSt3__18functionIFvvEEE(%class.SkTaskGroup*, %"class.std::__1::function.609"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider5resetEP15GrVkCommandPool(%class.GrVkResourceProvider*, %class.GrVkCommandPool*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = ptrtoint %class.GrVkCommandPool* %1 to i64
  %5 = load atomic i64, i64* @_ZZN20GrVkResourceProvider5resetEP15GrVkCommandPoolE28trace_event_unique_atomic558.0.0 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #10
  %10 = bitcast %class.SkEventTracer* %9 to i8* (%class.SkEventTracer*, i8*)***
  %11 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, i64 2
  %13 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, align 8
  %14 = tail call i8* %13(%class.SkEventTracer* %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  store atomic i64 %15, i64* @_ZZN20GrVkResourceProvider5resetEP15GrVkCommandPoolE28trace_event_unique_atomic558.0.0 monotonic, align 8
  br label %16

16:                                               ; preds = %2, %8
  %17 = phi i8* [ %6, %2 ], [ %14, %8 ]
  %18 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %24 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %25 = load i8, i8* %17, align 1
  %26 = and i8 %25, 5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %16
  %29 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #10
  %30 = bitcast %class.SkEventTracer* %29 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %31 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %30, align 8
  %32 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, i64 4
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, align 8
  %34 = tail call i64 %33(%class.SkEventTracer* %29, i8 signext 88, i8* %17, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN20GrVkResourceProvider5resetEP15GrVkCommandPool, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #10
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, i64 0, i32 0
  store i8* %17, i8** %36, align 8
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN20GrVkResourceProvider5resetEP15GrVkCommandPool, i64 0, i64 0), i8** %21, align 8
  store i64 %34, i64* %22, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  br label %37

37:                                               ; preds = %16, %28
  %38 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %39 = load %class.GrVkGpu*, %class.GrVkGpu** %38, align 8
  call void @_ZN15GrVkCommandPool5resetEP7GrVkGpu(%class.GrVkCommandPool* %1, %class.GrVkGpu* %39) #10
  %40 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 6
  %41 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acquire
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %40, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %45) #10
  br label %46

46:                                               ; preds = %37, %44
  %47 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 32
  %48 = bitcast i8* %47 to %class.SkTArray.8*
  call void @_ZN8SkTArrayIP15GrVkCommandPoolLb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.8* %48, i32 1, i32 1) #10
  %49 = bitcast i8* %47 to %class.GrVkCommandPool***
  %50 = load %class.GrVkCommandPool**, %class.GrVkCommandPool*** %49, align 8
  %51 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 7, i32 0, i32 0, i64 40
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = getelementptr inbounds %class.GrVkCommandPool*, %class.GrVkCommandPool** %50, i64 %55
  %57 = add i64 %53, 2
  %58 = and i64 %57, 4294967294
  %59 = and i64 %53, -4294967295
  %60 = or i64 %58, %59
  store i64 %60, i64* %52, align 8
  %61 = bitcast %class.GrVkCommandPool** %56 to i64*
  store i64 %4, i64* %61, align 8
  %62 = atomicrmw add i32* %41, i32 1 release
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %40, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %65, i32 1) #10
  br label %66

66:                                               ; preds = %46, %64
  %67 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %68 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = load i8*, i8** %20, align 8
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %69
  %74 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #10
  %75 = load i8*, i8** %20, align 8
  %76 = load i8*, i8** %21, align 8
  %77 = load i64, i64* %22, align 8
  %78 = bitcast %class.SkEventTracer* %74 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %79 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %79, i64 5
  %81 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %80, align 8
  call void %81(%class.SkEventTracer* %74, i8* %75, i8* %76, i64 %77) #10
  br label %82

82:                                               ; preds = %66, %69, %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #10
  ret void
}

declare void @_ZN15GrVkCommandPool5resetEP7GrVkGpu(%class.GrVkCommandPool*, %class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider22storePipelineCacheDataEv(%class.GrVkResourceProvider*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca %class.sk_sp.24, align 8
  %5 = alloca %class.sk_sp.24, align 8
  %6 = alloca %class.SkString, align 8
  %7 = tail call %struct.VkPipelineCache_T* @_ZN20GrVkResourceProvider13pipelineCacheEv(%class.GrVkResourceProvider* %0)
  %8 = icmp eq %struct.VkPipelineCache_T* %7, null
  br i1 %8, label %99, label %9

9:                                                ; preds = %1
  %10 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  store i64 0, i64* %2, align 8
  %11 = getelementptr inbounds %class.GrVkResourceProvider, %class.GrVkResourceProvider* %0, i64 0, i32 0
  %12 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %13 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %12, i64 0, i32 1, i32 0
  %14 = load %struct.GrVkInterface*, %struct.GrVkInterface** %13, align 8
  %15 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %14, i64 0, i32 1, i32 61, i32 0
  %16 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)** %15, align 8
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %12, i64 0, i32 6
  %18 = load %struct.VkDevice_T*, %struct.VkDevice_T** %17, align 8
  %19 = tail call %struct.VkPipelineCache_T* @_ZN20GrVkResourceProvider13pipelineCacheEv(%class.GrVkResourceProvider* %0)
  %20 = call i32 %16(%struct.VkDevice_T* %18, %struct.VkPipelineCache_T* %19, i64* nonnull %2, i8* null) #10
  %21 = icmp eq i32 %20, 0
  %22 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  br i1 %21, label %33, label %23

23:                                               ; preds = %9
  %24 = bitcast %class.GrVkGpu* %22 to i1 (%class.GrVkGpu*)***
  %25 = load i1 (%class.GrVkGpu*)**, i1 (%class.GrVkGpu*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %25, i64 8
  %27 = load i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %26, align 8
  %28 = call zeroext i1 %27(%class.GrVkGpu* %22) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 572, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.3, i64 0, i64 0), i32 %20) #10
  br label %30

30:                                               ; preds = %29, %23
  %31 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %32 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %31, i32 %20) #10
  br label %98

33:                                               ; preds = %9
  %34 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %22, i32 0) #10
  %35 = load i64, i64* %2, align 8
  %36 = call i8* @_Znam(i64 %35) #9
  %37 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %38 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %37, i64 0, i32 1, i32 0
  %39 = load %struct.GrVkInterface*, %struct.GrVkInterface** %38, align 8
  %40 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %39, i64 0, i32 1, i32 61, i32 0
  %41 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)** %40, align 8
  %42 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %37, i64 0, i32 6
  %43 = load %struct.VkDevice_T*, %struct.VkDevice_T** %42, align 8
  %44 = call %struct.VkPipelineCache_T* @_ZN20GrVkResourceProvider13pipelineCacheEv(%class.GrVkResourceProvider* %0)
  %45 = call i32 %41(%struct.VkDevice_T* %43, %struct.VkPipelineCache_T* %44, i64* nonnull %2, i8* nonnull %36) #10
  %46 = icmp eq i32 %45, 0
  %47 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  br i1 %46, label %58, label %48

48:                                               ; preds = %33
  %49 = bitcast %class.GrVkGpu* %47 to i1 (%class.GrVkGpu*)***
  %50 = load i1 (%class.GrVkGpu*)**, i1 (%class.GrVkGpu*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %50, i64 8
  %52 = load i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %51, align 8
  %53 = call zeroext i1 %52(%class.GrVkGpu* %47) #10
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 580, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.4, i64 0, i64 0), i32 %45) #10
  br label %55

55:                                               ; preds = %54, %48
  %56 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %57 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %56, i32 %45) #10
  br label %97

58:                                               ; preds = %33
  %59 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %47, i32 0) #10
  %60 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #10
  store i32 1, i32* %3, align 4
  %61 = bitcast %class.sk_sp.24* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %4, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %62, align 8
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.24* nonnull sret %4, i8* nonnull %60, i64 4, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #10
  %63 = bitcast %class.GrVkResourceProvider* %0 to %class.GrGpu**
  %64 = load %class.GrGpu*, %class.GrGpu** %63, align 8
  %65 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %64, i64 0, i32 5
  %66 = load %class.GrDirectContext*, %class.GrDirectContext** %65, align 8
  %67 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %66, i64 0, i32 9
  %68 = load %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::PersistentCache"** %67, align 8
  %69 = load %class.SkData*, %class.SkData** %62, align 8
  %70 = bitcast %class.sk_sp.24* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #10
  %71 = load i64, i64* %2, align 8
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.24* nonnull sret %5, i8* nonnull %36, i64 %71, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #10
  %72 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %5, i64 0, i32 0
  %73 = load %class.SkData*, %class.SkData** %72, align 8
  %74 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #10
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #10
  %75 = bitcast %"class.GrContextOptions::PersistentCache"* %68 to void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)***
  %76 = load void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)**, void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)*, void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)** %76, i64 4
  %78 = load void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)*, void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)** %77, align 8
  call void %78(%"class.GrContextOptions::PersistentCache"* %68, %class.SkData* dereferenceable(40) %69, %class.SkData* dereferenceable(40) %73, %class.SkString* nonnull dereferenceable(8) %6) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #10
  %79 = load %class.SkData*, %class.SkData** %72, align 8
  %80 = icmp eq %class.SkData* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %58
  %82 = getelementptr inbounds %class.SkData, %class.SkData* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %79) #10
  %86 = bitcast %class.SkData* %79 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %86) #10
  br label %87

87:                                               ; preds = %58, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  %88 = load %class.SkData*, %class.SkData** %62, align 8
  %89 = icmp eq %class.SkData* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %class.SkData, %class.SkData* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %88) #10
  %95 = bitcast %class.SkData* %88 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %95) #10
  br label %96

96:                                               ; preds = %87, %90, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #10
  br label %97

97:                                               ; preds = %55, %96
  call void @_ZdaPv(i8* nonnull %36) #9
  br label %98

98:                                               ; preds = %30, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %99

99:                                               ; preds = %1, %98
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrVkResourceProvider23CompatibleRenderPassSetC2EP14GrVkRenderPass(%"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %class.GrVkRenderPass*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.GrVkRenderPass* %1 to i64
  %4 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 0, i32 0, i32 0, i64 32
  %5 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 0, i32 0, i32 0, i64 40
  %7 = bitcast i8* %6 to i64*
  %8 = bitcast i8* %4 to i8**
  store i8* %5, i8** %8, align 8
  store i64 34359738368, i64* %7, align 8
  %9 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  %12 = bitcast i8* %4 to %class.SkTArray.4*
  tail call void @_ZN8SkTArrayIP14GrVkRenderPassLb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.4* %12, i32 1, i32 1) #10
  %13 = bitcast i8* %4 to %class.GrVkRenderPass***
  %14 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %13, align 8
  %15 = load i64, i64* %7, align 8
  %16 = lshr i64 %15, 1
  %17 = and i64 %16, 2147483647
  %18 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %14, i64 %17
  %19 = add i64 %15, 2
  %20 = and i64 %19, 4294967294
  %21 = and i64 %15, -4294967295
  %22 = or i64 %20, %21
  store i64 %22, i64* %7, align 8
  %23 = bitcast %class.GrVkRenderPass** %18 to i64*
  store i64 %3, i64* %23, align 8
  ret void
}

declare zeroext i1 @_ZNK14GrVkRenderPass12isCompatibleERKNS_21AttachmentsDescriptorERKNS_15AttachmentFlagsENS_19SelfDependencyFlagsENS_15LoadFromResolveE(%class.GrVkRenderPass*, %"struct.GrVkRenderPass::AttachmentsDescriptor"* dereferenceable(52), i32* dereferenceable(4), i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK14GrVkRenderPass17equalLoadStoreOpsERKNS_12LoadStoreOpsES2_S2_(%class.GrVkRenderPass*, %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8)) local_unnamed_addr #2

declare %class.GrVkRenderPass* @_ZN14GrVkRenderPass6CreateEP7GrVkGpuRKS_RKNS_12LoadStoreOpsES6_S6_(%class.GrVkGpu*, %class.GrVkRenderPass* dereferenceable(120), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8)) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #5

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.24* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN6SkData16DummyReleaseProcEPKvPv(i8*, i8*) #2

declare %class.GrVkPipelineState* @_ZN20GrVkResourceProvider18PipelineStateCache29findOrCreatePipelineStateImplERK13GrProgramDescRK13GrProgramInfoP14VkRenderPass_TbPN27GrThreadSafePipelineBuilder5Stats18ProgramCacheResultE(%"class.GrVkResourceProvider::PipelineStateCache"*, %class.GrProgramDesc* dereferenceable(160), %class.GrProgramInfo* dereferenceable(128), %struct.VkRenderPass_T*, i1 zeroext, i32*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #5

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_ZN20GrVkResourceProvider18PipelineStateCacheC1EP7GrVkGpu(%"class.GrVkResourceProvider::PipelineStateCache"*, %class.GrVkGpu*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrI24GrVkDescriptorSetManagerNS0_14default_deleteIS2_EEEELb0EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray.271*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.271, %class.SkTArray.271* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %113

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %113, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %101, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.271, %class.SkTArray.271* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %95, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %95 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.272"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrVkDescriptorSetManager* null, %class.GrVkDescriptorSetManager** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.272"*, %"class.std::__1::unique_ptr.272"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %class.GrVkDescriptorSetManager*, %class.GrVkDescriptorSetManager** %61, align 8
  store %class.GrVkDescriptorSetManager* null, %class.GrVkDescriptorSetManager** %61, align 8
  %63 = icmp eq %class.GrVkDescriptorSetManager* %62, null
  br i1 %63, label %95, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %62, i64 0, i32 3, i32 0, i32 0, i64 40
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %62, i64 0, i32 3, i32 0, i32 0, i64 32
  %72 = bitcast i8* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  tail call void @_Z7sk_freePv(i8* %73) #10
  br label %74

74:                                               ; preds = %70, %64
  %75 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %62, i64 0, i32 2, i32 0, i32 0, i64 24
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %62, i64 0, i32 2, i32 0, i32 0, i64 16
  %82 = bitcast i8* %81 to i8**
  %83 = load i8*, i8** %82, align 8
  tail call void @_Z7sk_freePv(i8* %83) #10
  br label %84

84:                                               ; preds = %80, %74
  %85 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %62, i64 0, i32 1, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.GrVkDescriptorSetManager, %class.GrVkDescriptorSetManager* %62, i64 0, i32 1
  %91 = bitcast %class.SkTArray.275* %90 to i8**
  %92 = load i8*, i8** %91, align 8
  tail call void @_Z7sk_freePv(i8* %92) #10
  br label %93

93:                                               ; preds = %89, %84
  %94 = bitcast %class.GrVkDescriptorSetManager* %62 to i8*
  tail call void @_ZdlPv(i8* %94) #9
  br label %95

95:                                               ; preds = %50, %93
  %96 = add nuw nsw i64 %51, 1
  %97 = load i64, i64* %4, align 8
  %98 = lshr i64 %97, 1
  %99 = and i64 %98, 2147483647
  %100 = icmp ult i64 %96, %99
  br i1 %100, label %50, label %101

101:                                              ; preds = %95, %35
  %102 = phi i64 [ %45, %35 ], [ %97, %95 ]
  %103 = and i64 %102, 1
  %104 = icmp eq i64 %103, 0
  %105 = bitcast %class.SkTArray.271* %0 to i8**
  br i1 %104, label %109, label %106

106:                                              ; preds = %101
  %107 = load i8*, i8** %105, align 8
  tail call void @_Z7sk_freePv(i8* %107) #10
  %108 = load i64, i64* %4, align 8
  br label %109

109:                                              ; preds = %101, %106
  %110 = phi i64 [ %108, %106 ], [ %102, %101 ]
  store i8* %44, i8** %105, align 8
  %111 = and i64 %110, -4294967298
  %112 = or i64 %111, 1
  store i64 %112, i64* %4, align 8
  br label %113

113:                                              ; preds = %109, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN20GrVkResourceProvider23CompatibleRenderPassSetELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.1*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %132

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %132, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 56) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %120, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %114, %48
  %51 = phi i64 [ 0, %48 ], [ %115, %114 ]
  %52 = mul nuw nsw i64 %51, 56
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %"class.GrVkResourceProvider::CompatibleRenderPassSet"*
  %55 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %49, align 8
  %56 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %55, i64 %51
  %57 = getelementptr inbounds i8, i8* %53, i64 32
  %58 = getelementptr inbounds i8, i8* %53, i64 40
  %59 = bitcast i8* %58 to i64*
  %60 = bitcast i8* %57 to i8**
  store i8* %53, i8** %60, align 8
  store i64 34359738368, i64* %59, align 8
  %61 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %55, i64 %51, i32 0, i32 0, i32 0, i64 32
  %62 = icmp eq %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %56, %54
  br i1 %62, label %99, label %63

63:                                               ; preds = %50
  %64 = bitcast i8* %57 to %class.SkTArray.4*
  store i64 34359738368, i64* %59, align 8
  %65 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %55, i64 %51, i32 0, i32 0, i32 0, i64 40
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = lshr i64 %67, 1
  %69 = trunc i64 %68 to i32
  %70 = and i32 %69, 2147483647
  tail call void @_ZN8SkTArrayIP14GrVkRenderPassLb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.4* %64, i32 %70, i32 0) #10
  %71 = load i64, i64* %66, align 8
  %72 = and i64 %71, 4294967294
  %73 = load i64, i64* %59, align 8
  %74 = and i64 %73, -4294967295
  %75 = or i64 %74, %72
  store i64 %75, i64* %59, align 8
  %76 = load i8*, i8** %60, align 8
  %77 = load i64, i64* %66, align 8
  %78 = and i64 %77, 4294967294
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %63
  %81 = bitcast i8* %61 to %class.GrVkRenderPass***
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %91, %82 ]
  %84 = shl nuw nsw i64 %83, 3
  %85 = getelementptr inbounds i8, i8* %76, i64 %84
  %86 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %81, align 8
  %87 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %86, i64 %83
  %88 = bitcast %class.GrVkRenderPass** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast i8* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = add nuw nsw i64 %83, 1
  %92 = load i64, i64* %66, align 8
  %93 = lshr i64 %92, 1
  %94 = and i64 %93, 2147483647
  %95 = icmp ult i64 %91, %94
  br i1 %95, label %82, label %96

96:                                               ; preds = %82, %63
  %97 = phi i64 [ %77, %63 ], [ %92, %82 ]
  %98 = and i64 %97, -4294967295
  store i64 %98, i64* %66, align 8
  br label %99

99:                                               ; preds = %50, %96
  %100 = getelementptr inbounds i8, i8* %53, i64 48
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %55, i64 %51, i32 1
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %101, align 8
  %104 = load %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, %"class.GrVkResourceProvider::CompatibleRenderPassSet"** %49, align 8
  %105 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %104, i64 %51, i32 0, i32 0, i32 0, i64 40
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %99
  %111 = getelementptr inbounds %"class.GrVkResourceProvider::CompatibleRenderPassSet", %"class.GrVkResourceProvider::CompatibleRenderPassSet"* %104, i64 %51, i32 0, i32 0, i32 0, i64 32
  %112 = bitcast i8* %111 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @_Z7sk_freePv(i8* %113) #10
  br label %114

114:                                              ; preds = %110, %99
  %115 = add nuw nsw i64 %51, 1
  %116 = load i64, i64* %4, align 8
  %117 = lshr i64 %116, 1
  %118 = and i64 %117, 2147483647
  %119 = icmp ult i64 %115, %118
  br i1 %119, label %50, label %120

120:                                              ; preds = %114, %35
  %121 = phi i64 [ %45, %35 ], [ %116, %114 ]
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  %124 = bitcast %class.SkTArray.1* %0 to i8**
  br i1 %123, label %128, label %125

125:                                              ; preds = %120
  %126 = load i8*, i8** %124, align 8
  tail call void @_Z7sk_freePv(i8* %126) #10
  %127 = load i64, i64* %4, align 8
  br label %128

128:                                              ; preds = %120, %125
  %129 = phi i64 [ %127, %125 ], [ %121, %120 ]
  store i8* %44, i8** %124, align 8
  %130 = and i64 %129, -4294967298
  %131 = or i64 %130, 1
  store i64 %131, i64* %4, align 8
  br label %132

132:                                              ; preds = %128, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIP14GrVkRenderPassLb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.4*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.4, %class.SkTArray.4* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.4, %class.SkTArray.4* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %49, align 8
  %55 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %54, i64 %51
  %56 = bitcast %class.GrVkRenderPass** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.4* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #10
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIPK14GrVkRenderPassLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.5*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.5, %class.SkTArray.5* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.GrVkRenderPass**, %class.GrVkRenderPass*** %49, align 8
  %55 = getelementptr inbounds %class.GrVkRenderPass*, %class.GrVkRenderPass** %54, i64 %51
  %56 = bitcast %class.GrVkRenderPass** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.5* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #10
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIP11GrVkSamplerNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE6resizeEi(%class.SkTHashTable.243*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.243, %class.SkTHashTable.243* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.243, %class.SkTHashTable.243* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.243, %class.SkTHashTable.243* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.244, %class.SkAutoTArray.244* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.244* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* null, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %64

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 16) #10
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #9
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %19, i64 %13
  %21 = shl nsw i64 %13, 4
  %22 = add nsw i64 %21, -16
  %23 = lshr exact i64 %22, 4
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %12, %27
  %28 = phi %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* [ %32, %27 ], [ %19, %12 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %12 ]
  %30 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %28, i64 0, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %30, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %28, i64 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %28, i64 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !6

35:                                               ; preds = %27, %12
  %36 = phi %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* [ %19, %12 ], [ %32, %27 ]
  %37 = icmp ult i64 %22, 112
  br i1 %37, label %58, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* [ %56, %38 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 0, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %40, align 8
  %41 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 0, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 1, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %42, align 8
  %43 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 1, i32 1
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 2, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %44, align 8
  %45 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 2, i32 1
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 3, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %46, align 8
  %47 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 3, i32 1
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 4, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %48, align 8
  %49 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 4, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 5, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %50, align 8
  %51 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 5, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 6, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %52, align 8
  %53 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 6, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 7, i32 0
  store %class.GrVkSampler* null, %class.GrVkSampler** %54, align 8
  %55 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 7, i32 1
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %39, i64 8
  %57 = icmp eq %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %56, %20
  br i1 %57, label %58, label %38

58:                                               ; preds = %38, %35
  %59 = ptrtoint i8* %18 to i64
  %60 = load %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %7, align 8
  %61 = icmp eq %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %60, null
  store i64 %59, i64* %8, align 8
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %60 to i8*
  tail call void @_ZdaPv(i8* %63) #9
  br label %64

64:                                               ; preds = %62, %58, %11
  %65 = icmp sgt i32 %4, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = inttoptr i64 %9 to %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*
  %68 = zext i32 %4 to i64
  br label %74

69:                                               ; preds = %82, %64
  %70 = icmp eq i64 %9, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %72) #9
  br label %73

73:                                               ; preds = %69, %71
  ret void

74:                                               ; preds = %82, %66
  %75 = phi i64 [ 0, %66 ], [ %83, %82 ]
  %76 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %67, i64 %75, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %67, i64 %75, i32 0
  %81 = tail call %class.GrVkSampler** @_ZN12SkTHashTableIP11GrVkSamplerNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE12uncheckedSetEOS1_(%class.SkTHashTable.243* %0, %class.GrVkSampler** dereferenceable(8) %80)
  br label %82

82:                                               ; preds = %79, %74
  %83 = add nuw nsw i64 %75, 1
  %84 = icmp eq i64 %83, %68
  br i1 %84, label %69, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrVkSampler** @_ZN12SkTHashTableIP11GrVkSamplerNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE12uncheckedSetEOS1_(%class.SkTHashTable.243*, %class.GrVkSampler** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %class.GrVkSampler*, %class.GrVkSampler** %1, align 8
  %4 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %3, i64 0, i32 3, i32 0
  %5 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %6 = tail call i32 %5(i8* %4, i64 32, i32 0) #10
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %7, i32 1, i32 %6
  %9 = getelementptr inbounds %class.SkTHashTable.243, %class.SkTHashTable.243* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %72

12:                                               ; preds = %2
  %13 = add nsw i32 %10, -1
  %14 = and i32 %8, %13
  %15 = getelementptr inbounds %class.SkTHashTable.243, %class.SkTHashTable.243* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"** %15, align 8
  %17 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %3, i64 0, i32 3, i32 2, i32 0
  %18 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %3, i64 0, i32 3, i32 2, i32 2
  %19 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %3, i64 0, i32 3, i32 2, i32 3
  br label %20

20:                                               ; preds = %12, %65
  %21 = phi i32 [ 0, %12 ], [ %70, %65 ]
  %22 = phi i32 [ %14, %12 ], [ %69, %65 ]
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %16, i64 %23
  %25 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %16, i64 %23, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %36

28:                                               ; preds = %20
  %29 = bitcast %class.GrVkSampler** %1 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %24, i64 0, i32 0
  %32 = bitcast %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %24 to i64*
  store i64 %30, i64* %32, align 8
  store i32 %8, i32* %25, align 8
  %33 = getelementptr inbounds %class.SkTHashTable.243, %class.SkTHashTable.243* %0, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %33, align 8
  br label %72

36:                                               ; preds = %20
  %37 = icmp eq i32 %8, %26
  br i1 %37, label %38, label %65

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %24, i64 0, i32 0
  %40 = load %class.GrVkSampler*, %class.GrVkSampler** %39, align 8
  %41 = load i8, i8* %4, align 8
  %42 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %40, i64 0, i32 3, i32 0
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %41, %43
  br i1 %44, label %45, label %65

45:                                               ; preds = %38
  %46 = load i32, i32* %17, align 8
  %47 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %40, i64 0, i32 3, i32 2, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %65

50:                                               ; preds = %45
  %51 = load i64, i64* %18, align 8
  %52 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %40, i64 0, i32 3, i32 2, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %51, %53
  br i1 %54, label %55, label %65

55:                                               ; preds = %50
  %56 = load i8, i8* %19, align 8
  %57 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %40, i64 0, i32 3, i32 2, i32 3
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %65

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %24, i64 0, i32 0
  %62 = bitcast %class.GrVkSampler** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* %24 to i64*
  store i64 %63, i64* %64, align 8
  br label %72

65:                                               ; preds = %45, %50, %38, %55, %36
  %66 = add nsw i32 %22, -1
  %67 = icmp slt i32 %22, 1
  %68 = select i1 %67, i32 %10, i32 0
  %69 = add nsw i32 %66, %68
  %70 = add nuw nsw i32 %21, 1
  %71 = icmp slt i32 %70, %10
  br i1 %71, label %20, label %72

72:                                               ; preds = %65, %2, %60, %28
  %73 = phi %class.GrVkSampler** [ %61, %60 ], [ %31, %28 ], [ null, %2 ], [ null, %65 ]
  ret %class.GrVkSampler** %73
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIP26GrVkSamplerYcbcrConversionNS0_3KeyEN14SkTDynamicHashIS0_S2_S0_E13AdaptedTraitsEE6resizeEi(%class.SkTHashTable.252*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.252, %class.SkTHashTable.252* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.252, %class.SkTHashTable.252* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.252, %class.SkTHashTable.252* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.253, %class.SkAutoTArray.253* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.253* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* null, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %64

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 16) #10
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #9
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %19, i64 %13
  %21 = shl nsw i64 %13, 4
  %22 = add nsw i64 %21, -16
  %23 = lshr exact i64 %22, 4
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %12, %27
  %28 = phi %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* [ %32, %27 ], [ %19, %12 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %12 ]
  %30 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %28, i64 0, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %30, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %28, i64 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %28, i64 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !8

35:                                               ; preds = %27, %12
  %36 = phi %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* [ %19, %12 ], [ %32, %27 ]
  %37 = icmp ult i64 %22, 112
  br i1 %37, label %58, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* [ %56, %38 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 0, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %40, align 8
  %41 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 0, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 1, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %42, align 8
  %43 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 1, i32 1
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 2, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %44, align 8
  %45 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 2, i32 1
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 3, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %46, align 8
  %47 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 3, i32 1
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 4, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %48, align 8
  %49 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 4, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 5, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %50, align 8
  %51 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 5, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 6, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %52, align 8
  %53 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 6, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 7, i32 0
  store %class.GrVkSamplerYcbcrConversion* null, %class.GrVkSamplerYcbcrConversion** %54, align 8
  %55 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 7, i32 1
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %39, i64 8
  %57 = icmp eq %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %56, %20
  br i1 %57, label %58, label %38

58:                                               ; preds = %38, %35
  %59 = ptrtoint i8* %18 to i64
  %60 = load %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %7, align 8
  %61 = icmp eq %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %60, null
  store i64 %59, i64* %8, align 8
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %60 to i8*
  tail call void @_ZdaPv(i8* %63) #9
  br label %64

64:                                               ; preds = %62, %58, %11
  %65 = icmp sgt i32 %4, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %64
  %67 = inttoptr i64 %9 to %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*
  %68 = getelementptr inbounds %class.SkTHashTable.252, %class.SkTHashTable.252* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %69 = zext i32 %4 to i64
  br label %75

70:                                               ; preds = %142, %64
  %71 = icmp eq i64 %9, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %73) #9
  br label %74

74:                                               ; preds = %70, %72
  ret void

75:                                               ; preds = %142, %66
  %76 = phi i64 [ 0, %66 ], [ %143, %142 ]
  %77 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %67, i64 %76, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %142, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %67, i64 %76, i32 0
  %82 = load %class.GrVkSamplerYcbcrConversion*, %class.GrVkSamplerYcbcrConversion** %81, align 8
  %83 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %82, i64 0, i32 2
  %84 = bitcast %"struct.GrVkSamplerYcbcrConversion::Key"* %83 to i8*
  %85 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %86 = tail call i32 %85(i8* %84, i64 24, i32 0) #10
  %87 = icmp eq i32 %86, 0
  %88 = select i1 %87, i32 1, i32 %86
  %89 = load i32, i32* %3, align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %142

91:                                               ; preds = %80
  %92 = add nsw i32 %89, -1
  %93 = and i32 %88, %92
  %94 = load %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"*, %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"** %68, align 8
  %95 = getelementptr inbounds %"struct.GrVkSamplerYcbcrConversion::Key", %"struct.GrVkSamplerYcbcrConversion::Key"* %83, i64 0, i32 0
  %96 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %82, i64 0, i32 2, i32 2
  %97 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %82, i64 0, i32 2, i32 3
  br label %98

98:                                               ; preds = %135, %91
  %99 = phi i32 [ 0, %91 ], [ %140, %135 ]
  %100 = phi i32 [ %93, %91 ], [ %139, %135 ]
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %94, i64 %101
  %103 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %94, i64 %101, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %98
  %107 = bitcast %class.GrVkSamplerYcbcrConversion** %81 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %102 to i64*
  store i64 %108, i64* %109, align 8
  store i32 %88, i32* %103, align 8
  %110 = load i32, i32* %5, align 8
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %5, align 8
  br label %142

112:                                              ; preds = %98
  %113 = icmp eq i32 %88, %104
  br i1 %113, label %114, label %135

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot", %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %102, i64 0, i32 0
  %116 = load %class.GrVkSamplerYcbcrConversion*, %class.GrVkSamplerYcbcrConversion** %115, align 8
  %117 = load i32, i32* %95, align 8
  %118 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %116, i64 0, i32 2, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %121, label %135

121:                                              ; preds = %114
  %122 = load i64, i64* %96, align 8
  %123 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %116, i64 0, i32 2, i32 2
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %122, %124
  br i1 %125, label %126, label %135

126:                                              ; preds = %121
  %127 = load i8, i8* %97, align 8
  %128 = getelementptr inbounds %class.GrVkSamplerYcbcrConversion, %class.GrVkSamplerYcbcrConversion* %116, i64 0, i32 2, i32 3
  %129 = load i8, i8* %128, align 8
  %130 = icmp eq i8 %127, %129
  br i1 %130, label %131, label %135

131:                                              ; preds = %126
  %132 = bitcast %class.GrVkSamplerYcbcrConversion** %81 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* %102 to i64*
  store i64 %133, i64* %134, align 8
  br label %142

135:                                              ; preds = %126, %121, %114, %112
  %136 = add nsw i32 %100, -1
  %137 = icmp slt i32 %100, 1
  %138 = select i1 %137, i32 %89, i32 0
  %139 = add nsw i32 %136, %138
  %140 = add nuw nsw i32 %99, 1
  %141 = icmp eq i32 %140, %89
  br i1 %141, label %142, label %98

142:                                              ; preds = %135, %131, %106, %80, %75
  %143 = add nuw nsw i64 %76, 1
  %144 = icmp eq i64 %143, %69
  br i1 %144, label %70, label %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN20GrVkResourceProvider16MSAALoadPipelineELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %100

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %100, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %88, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %82, %48
  %51 = phi i64 [ 0, %48 ], [ %83, %82 ]
  %52 = shl nuw nsw i64 %51, 4
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"struct.GrVkResourceProvider::MSAALoadPipeline"*, %"struct.GrVkResourceProvider::MSAALoadPipeline"** %49, align 8
  %55 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %54, i64 %51
  %56 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %55, i64 0, i32 0, i32 0
  %57 = bitcast %"struct.GrVkResourceProvider::MSAALoadPipeline"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 8
  %61 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %54, i64 %51, i32 1
  %62 = bitcast %class.GrVkRenderPass** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8* %60 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"struct.GrVkResourceProvider::MSAALoadPipeline"*, %"struct.GrVkResourceProvider::MSAALoadPipeline"** %49, align 8
  %66 = getelementptr inbounds %"struct.GrVkResourceProvider::MSAALoadPipeline", %"struct.GrVkResourceProvider::MSAALoadPipeline"* %65, i64 %51, i32 0, i32 0
  %67 = load %class.GrVkPipeline*, %class.GrVkPipeline** %66, align 8
  %68 = icmp eq %class.GrVkPipeline* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %50
  %70 = bitcast %class.GrVkPipeline* %67 to %class.GrManagedResource*
  %71 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %67, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %82

74:                                               ; preds = %69
  %75 = bitcast %class.GrVkPipeline* %67 to void (%class.GrManagedResource*)***
  %76 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %76, i64 4
  %78 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %77, align 8
  tail call void %78(%class.GrManagedResource* nonnull %70) #10
  %79 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %75, align 8
  %80 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %79, i64 1
  %81 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %80, align 8
  tail call void %81(%class.GrManagedResource* nonnull %70) #10
  br label %82

82:                                               ; preds = %74, %69, %50
  %83 = add nuw nsw i64 %51, 1
  %84 = load i64, i64* %4, align 8
  %85 = lshr i64 %84, 1
  %86 = and i64 %85, 2147483647
  %87 = icmp ult i64 %83, %86
  br i1 %87, label %50, label %88

88:                                               ; preds = %82, %35
  %89 = phi i64 [ %45, %35 ], [ %84, %82 ]
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  %92 = bitcast %class.SkTArray* %0 to i8**
  br i1 %91, label %96, label %93

93:                                               ; preds = %88
  %94 = load i8*, i8** %92, align 8
  tail call void @_Z7sk_freePv(i8* %94) #10
  %95 = load i64, i64* %4, align 8
  br label %96

96:                                               ; preds = %88, %93
  %97 = phi i64 [ %95, %93 ], [ %89, %88 ]
  store i8* %44, i8** %92, align 8
  %98 = and i64 %97, -4294967298
  %99 = or i64 %98, 1
  store i64 %99, i64* %4, align 8
  br label %100

100:                                              ; preds = %96, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIP15GrVkCommandPoolLb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.8, %class.SkTArray.8* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 2
  %47 = and i64 %46, 17179869176
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray.8* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #10
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray.8* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #10
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN20GrVkResourceProvider15backgroundResetEP15GrVkCommandPoolE3$_2S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.GrVkResourceProvider**
  %3 = load %class.GrVkResourceProvider*, %class.GrVkResourceProvider** %2, align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to %class.GrVkCommandPool**
  %6 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %5, align 8
  tail call void @_ZN20GrVkResourceProvider5resetEP15GrVkCommandPool(%class.GrVkResourceProvider* %3, %class.GrVkCommandPool* %6) #10
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z10sk_make_spIN20GrVkResourceProvider18PipelineStateCacheEJRP7GrVkGpuEE5sk_spIT_EDpOT0_: argument 0"}
!4 = distinct !{!4, !"_Z10sk_make_spIN20GrVkResourceProvider18PipelineStateCacheEJRP7GrVkGpuEE5sk_spIT_EDpOT0_"}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
