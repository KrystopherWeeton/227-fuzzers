; ModuleID = '../../base/trace_event/blame_context.cc'
source_filename = "../../base/trace_event/blame_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::TraceLog" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.base::Lock", i8, i32, %"class.std::__1::unique_ptr.15", %"class.std::__1::vector.21", %"class.base::Lock", i8, %"class.std::__1::vector.29", %"class.std::__1::map", %"class.std::__1::vector.43", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", i32, [4 x i8], %"class.std::__1::unordered_map.75", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.99", %"class.std::__1::unordered_map.123", %"class.base::TimeTicks", i64, i32, %"class.base::TimeDelta", %"struct.std::__1::atomic.151", %"class.base::trace_event::TraceConfig", %"class.std::__1::vector.200", %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalBoolean", %"class.base::ThreadLocalBoolean", %"class.std::__1::unordered_map.258", %"class.std::__1::unique_ptr.282", i64, %"class.base::RepeatingCallback", %class.scoped_refptr.290, %"class.base::RepeatingCallback.292", %"class.base::RepeatingCallback.293", i64, i8, %"struct.std::__1::atomic.294", %"struct.std::__1::atomic.300", %"struct.std::__1::atomic.304", {}* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::trace_event::TraceBuffer"* }
%"class.base::trace_event::TraceBuffer" = type opaque
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::unique_ptr.23" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::unique_ptr.23"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.std::__1::__compressed_pair.31" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.45" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.45"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.75" = type { %"class.std::__1::__hash_table.76" }
%"class.std::__1::__hash_table.76" = type <{ %"class.std::__1::unique_ptr.77", %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.95", [4 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::__hash_node_base.80"** }
%"struct.std::__1::__hash_node_base.80" = type { %"struct.std::__1::__hash_node_base.80"* }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__bucket_list_deallocator.82" }
%"class.std::__1::__bucket_list_deallocator.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::__hash_node_base.80" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { float }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.56", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.71", [4 x i8] }>
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::unordered_map.99" = type { %"class.std::__1::__hash_table.100" }
%"class.std::__1::__hash_table.100" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.119", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base.104"** }
%"struct.std::__1::__hash_node_base.104" = type { %"struct.std::__1::__hash_node_base.104"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator.106" }
%"class.std::__1::__bucket_list_deallocator.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.104" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::unordered_map.123" = type { %"class.std::__1::__hash_table.124" }
%"class.std::__1::__hash_table.124" = type <{ %"class.std::__1::unique_ptr.125", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.128"** }
%"struct.std::__1::__hash_node_base.128" = type { %"struct.std::__1::__hash_node_base.128"* }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::__bucket_list_deallocator.130" }
%"class.std::__1::__bucket_list_deallocator.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base.128" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::atomic.151" = type { %"struct.std::__1::__atomic_base.152" }
%"struct.std::__1::__atomic_base.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i32 }
%"class.base::trace_event::TraceConfig" = type { i32, i64, i64, i8, %"class.base::trace_event::TraceConfigCategoryFilter", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"class.base::trace_event::TraceConfig::ProcessFilterConfig", %"class.std::__1::vector.200", %"class.std::__1::unordered_set.235", %"class.std::__1::unordered_set.235" }
%"class.base::trace_event::TraceConfigCategoryFilter" = type { %"class.std::__1::vector.156", %"class.std::__1::vector.156", %"class.std::__1::vector.156" }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.std::__1::basic_string"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig" = type <{ %"class.std::__1::set", %"class.std::__1::vector.172", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler", [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.163" }
%"class.std::__1::__tree.163" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"class.std::__1::__compressed_pair.174" }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler" = type { i32 }
%"class.base::trace_event::TraceConfig::ProcessFilterConfig" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.179" }
%"class.std::__1::__hash_table.179" = type <{ %"class.std::__1::unique_ptr.180", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.197", [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182", %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base.183"** }
%"struct.std::__1::__hash_node_base.183" = type { %"struct.std::__1::__hash_node_base.183"* }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::__bucket_list_deallocator.185" }
%"class.std::__1::__bucket_list_deallocator.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::__hash_node_base.183" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::unordered_set.235" = type { %"class.std::__1::__hash_table.236" }
%"class.std::__1::__hash_table.236" = type <{ %"class.std::__1::unique_ptr.237", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.254", [4 x i8] }>
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239", %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base.240"** }
%"struct.std::__1::__hash_node_base.240" = type { %"struct.std::__1::__hash_node_base.240"* }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.std::__1::__bucket_list_deallocator.242" }
%"class.std::__1::__bucket_list_deallocator.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::__hash_node_base.240" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.std::__1::__compressed_pair.230" }
%"class.base::trace_event::TraceConfig::EventFilterConfig" = type { %"class.std::__1::basic_string", %"class.base::trace_event::TraceConfigCategoryFilter", %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.202" }
%"union.absl::variant_internal::DestructibleUnionImpl.202" = type { %"union.absl::variant_internal::DestructibleUnionImpl.203" }
%"union.absl::variant_internal::DestructibleUnionImpl.203" = type { %"union.absl::variant_internal::DestructibleUnionImpl.204" }
%"union.absl::variant_internal::DestructibleUnionImpl.204" = type { %"union.absl::variant_internal::DestructibleUnionImpl.205" }
%"union.absl::variant_internal::DestructibleUnionImpl.205" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer.257" }
%"class.base::ThreadLocalPointer.257" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.base::trace_event::TraceBufferChunk" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.288 }
%class.scoped_refptr.288 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.289", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.289" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.290 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.291" }>
%"class.base::RefCountedThreadSafe.291" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.292" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.293" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.294" = type { %"struct.std::__1::__atomic_base.295" }
%"struct.std::__1::__atomic_base.295" = type { %"struct.std::__1::__cxx_atomic_impl.296" }
%"struct.std::__1::__cxx_atomic_impl.296" = type { %"struct.std::__1::__cxx_atomic_base_impl.297" }
%"struct.std::__1::__cxx_atomic_base_impl.297" = type { void (%"class.base::trace_event::TraceEvent"*, i1, %"struct.base::trace_event::TraceEventHandle"*)* }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon.299, i32, i64, i8, [7 x i8] }>
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.298" }
%"class.base::time_internal::TimeBase.298" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%union.anon.299 = type { i32 }
%"struct.base::trace_event::TraceEventHandle" = type { i32, i32 }
%"struct.std::__1::atomic.300" = type { %"struct.std::__1::__atomic_base.301" }
%"struct.std::__1::__atomic_base.301" = type { %"struct.std::__1::__cxx_atomic_impl.302" }
%"struct.std::__1::__cxx_atomic_impl.302" = type { %"struct.std::__1::__cxx_atomic_base_impl.303" }
%"struct.std::__1::__cxx_atomic_base_impl.303" = type { void ()* }
%"struct.std::__1::atomic.304" = type { %"struct.std::__1::__atomic_base.305" }
%"struct.std::__1::__atomic_base.305" = type { %"struct.std::__1::__cxx_atomic_impl.306" }
%"struct.std::__1::__cxx_atomic_impl.306" = type { %"struct.std::__1::__cxx_atomic_base_impl.307" }
%"struct.std::__1::__cxx_atomic_base_impl.307" = type { void (i8*, i8*, i64, i32, i1, %"class.base::TimeTicks"*, %"class.base::ThreadTicks"*, i64)* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.312" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.321 }
%class.scoped_refptr.321 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::WeakPtr.322" = type { %"class.base::internal::WeakPtrBase" }

@_ZTVN4base11trace_event12BlameContextE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContextD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContextD0Ev to i8*), i8* bitcast (void (%"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContext17OnTraceLogEnabledEv to i8*), i8* bitcast (void (%"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContext18OnTraceLogDisabledEv to i8*), i8* bitcast (void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)* @_ZN4base11trace_event12BlameContext11AsValueIntoEPNS0_11TracedValueE to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"snapshot\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"id_ref\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"scope\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"parent_id\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN4base11trace_event12BlameContextC1EPKcS3_S3_S3_lPKS1_ = hidden unnamed_addr alias void (%"class.base::trace_event::BlameContext"*, i8*, i8*, i8*, i8*, i64, %"class.base::trace_event::BlameContext"*), void (%"class.base::trace_event::BlameContext"*, i8*, i8*, i8*, i8*, i64, %"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContextC2EPKcS3_S3_S3_lPKS1_
@_ZN4base11trace_event12BlameContextD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::BlameContext"*), void (%"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContextC2EPKcS3_S3_S3_lPKS1_(%"class.base::trace_event::BlameContext"*, i8*, i8*, i8*, i8*, i64, %"class.base::trace_event::BlameContext"* readonly) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base11trace_event12BlameContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 1
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 2
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 3
  store i8* %3, i8** %11, align 8
  %12 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 4
  store i8* %4, i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 5
  store i64 %5, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 6
  %15 = icmp eq %"class.base::trace_event::BlameContext"* %6, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  store i8* null, i8** %14, align 8
  br label %24

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %6, i64 0, i32 4
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i8** %14 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %6, i64 0, i32 5
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %16, %17
  %25 = phi i64 [ %23, %17 ], [ 0, %16 ]
  %26 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 7
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 8
  store i8* null, i8** %27, align 8
  %28 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 10, i32 0
  %29 = ptrtoint %"class.base::trace_event::BlameContext"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %28, i64 %29) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContextD2Ev(%"class.base::trace_event::BlameContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base11trace_event12BlameContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 8
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext 68, i8* %4, i8* %6, i8* %8, i64 %10, %"class.base::trace_event::TraceArguments"* null, i32 2) #9
  %12 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #9
  %13 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event8TraceLog31RemoveAsyncEnabledStateObserverEPNS1_25AsyncEnabledStateObserverE(%"class.base::trace_event::TraceLog"* %12, %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver"* %13) #9
  %14 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %14) #9
  ret void
}

declare i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4base11trace_event8TraceLog31RemoveAsyncEnabledStateObserverEPNS1_25AsyncEnabledStateObserverE(%"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContextD0Ev(%"class.base::trace_event::BlameContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base11trace_event12BlameContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 8
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext 68, i8* %4, i8* %6, i8* %8, i64 %10, %"class.base::trace_event::TraceArguments"* null, i32 2) #9
  %12 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #9
  %13 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event8TraceLog31RemoveAsyncEnabledStateObserverEPNS1_25AsyncEnabledStateObserverE(%"class.base::trace_event::TraceLog"* %12, %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver"* %13) #9
  %14 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %14) #9
  %15 = bitcast %"class.base::trace_event::BlameContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContext5EnterEv(%"class.base::trace_event::BlameContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 4
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext 40, i8* %3, i8* %8, i8* %10, i64 %12, %"class.base::trace_event::TraceArguments"* null, i32 2) #9
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContext5LeaveEv(%"class.base::trace_event::BlameContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 4
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext 41, i8* %3, i8* %8, i8* %10, i64 %12, %"class.base::trace_event::TraceArguments"* null, i32 2) #9
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContext12TakeSnapshotEv(%"class.base::trace_event::BlameContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::trace_event::TraceArguments", align 8
  %3 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 8
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %64, label %7, !prof !2

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 16) #10
  %9 = bitcast i8* %8 to %"class.base::trace_event::TracedValue"*
  tail call void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"* nonnull %9, i64 0) #9
  %10 = bitcast %"class.base::trace_event::BlameContext"* %0 to void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)***
  %11 = load void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)**, void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)*, void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)** %11, i64 4
  %13 = load void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)*, void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)** %12, align 8
  tail call void %13(%"class.base::trace_event::BlameContext"* %0, %"class.base::trace_event::TracedValue"* nonnull %9) #9
  %14 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %2, i64 0, i32 1, i64 0
  store i8 8, i8* %15, align 1
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %2, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %2, i64 0, i32 3, i64 0
  %18 = bitcast %"union.base::trace_event::TraceValue"* %17 to i8**
  store i8* %8, i8** %18, align 8
  %19 = load i8*, i8** %3, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 4
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = call i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext 79, i8* %19, i8* %21, i8* %23, i64 %25, %"class.base::trace_event::TraceArguments"* nonnull %2, i32 2) #9
  %27 = load i8, i8* %14, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %7, %58
  %30 = phi i64 [ %59, %58 ], [ 0, %7 ]
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %2, i64 0, i32 1, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %45

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %2, i64 0, i32 3, i64 %30
  %36 = bitcast %"union.base::trace_event::TraceValue"* %35 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %37 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %36, align 8
  %38 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %37 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %41 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %41, i64 1
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %42, align 8
  call void %43(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %37) #9
  %44 = load i8, i8* %31, align 1
  br label %45

45:                                               ; preds = %39, %29
  %46 = phi i8 [ %32, %29 ], [ %44, %39 ]
  %47 = icmp eq i8 %46, 9
  br i1 %47, label %48, label %58

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %2, i64 0, i32 3, i64 %30
  %50 = bitcast %"union.base::trace_event::TraceValue"* %49 to %"class.protozero::HeapBuffered"**
  %51 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %50, align 8
  %52 = icmp eq %"class.protozero::HeapBuffered"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %54) #9
  %55 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %55) #9
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %56) #9
  %57 = bitcast %"class.protozero::HeapBuffered"* %51 to i8*
  call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %53, %48, %45, %34
  %59 = add nuw nsw i64 %30, 1
  %60 = load i8, i8* %14, align 8
  %61 = zext i8 %60 to i64
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %29, label %63

63:                                               ; preds = %58, %7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  br label %64

64:                                               ; preds = %1, %63
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"*, i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContext17OnTraceLogEnabledEv(%"class.base::trace_event::BlameContext"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base11trace_event12BlameContext12TakeSnapshotEv(%"class.base::trace_event::BlameContext"* %0)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContext18OnTraceLogDisabledEv(%"class.base::trace_event::BlameContext"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContext11AsValueIntoEPNS0_11TracedValueE(%"class.base::trace_event::BlameContext"* nocapture readonly, %"class.base::trace_event::TracedValue"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %37, label %8

8:                                                ; preds = %2
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #9
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = load i64, i64* %5, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %10) #9
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = select i1 %14, i8* %16, i8* %9
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %13 to i64
  %21 = select i1 %14, i64 %19, i64 %20
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %17, i64 %21) #9
  %22 = load i8, i8* %12, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %8
  %25 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %8, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  %27 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 6
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = call i64 @strlen(i8* nonnull %28) #9
  br label %35

32:                                               ; preds = %26
  %33 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #9
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br label %35

35:                                               ; preds = %30, %32
  %36 = phi i64 [ 0, %32 ], [ %31, %30 ]
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* %28, i64 %36) #9
  call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #9
  br label %37

37:                                               ; preds = %2, %35
  ret void
}

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11trace_event12BlameContext14WriteIntoTraceEN8perfetto11TracedValueE(%"class.base::trace_event::BlameContext"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedDictionary", align 8
  %10 = bitcast %"class.perfetto::TracedDictionary"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = bitcast %"class.perfetto::TracedDictionary"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %9, %"class.perfetto::TracedValue"* %1) #9
  %12 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 5
  %13 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #9
  %14 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %13, i64 16, i1 false) #9
  %15 = load i64, i64* %12, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %5, i64 %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  %16 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 7
  %17 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)) #9
  %18 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %17, i64 16, i1 false) #9
  %19 = load i64, i64* %16, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %3, i64 %19) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  %20 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 4
  %21 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #9
  %22 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %21, i64 16, i1 false) #9
  %23 = load i8*, i8** %20, align 8
  call void @_ZNO8perfetto11TracedValue11WriteStringEPKc(%"class.perfetto::TracedValue"* nonnull %7, i8* %23) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event12BlameContext10InitializeEv(%"class.base::trace_event::BlameContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = alloca %"class.base::WeakPtr.322", align 8
  %5 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* %6) #9
  %8 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 8
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext 78, i8* %7, i8* %10, i8* %12, i64 %14, %"class.base::trace_event::TraceArguments"* null, i32 2) #9
  %16 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #9
  %17 = bitcast %"class.base::WeakPtr.322"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9, !noalias !3
  %19 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 10, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %19) #9, !noalias !3
  %20 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 10, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !3
  %22 = getelementptr inbounds %"class.base::WeakPtr.322", %"class.base::WeakPtr.322"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %22, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %21) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9, !noalias !3
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.base::WeakPtr.322", %"class.base::WeakPtr.322"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %23, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %24) #9
  %25 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::WeakPtr.322", %"class.base::WeakPtr.322"* %4, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %25, align 8
  call void @_ZN4base11trace_event8TraceLog28AddAsyncEnabledStateObserverENS_7WeakPtrINS1_25AsyncEnabledStateObserverEEE(%"class.base::trace_event::TraceLog"* %16, %"class.base::WeakPtr"* nonnull %3) #9
  %28 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %28) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  call void @_ZN4base11trace_event12BlameContext12TakeSnapshotEv(%"class.base::trace_event::BlameContext"* %0)
  ret void
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event8TraceLog28AddAsyncEnabledStateObserverENS_7WeakPtrINS1_25AsyncEnabledStateObserverEEE(%"class.base::trace_event::TraceLog"*, %"class.base::WeakPtr"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base11trace_event12BlameContext14WasInitializedEv(%"class.base::trace_event::BlameContext"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::BlameContext", %"class.base::trace_event::BlameContext"* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  ret i1 %4
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #1

declare void @_ZNO8perfetto11TracedValue11WriteStringEPKc(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryINS_11trace_event12BlameContextEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryINS_11trace_event12BlameContextEE10GetWeakPtrEv"}
