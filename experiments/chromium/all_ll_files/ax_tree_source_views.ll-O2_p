; ModuleID = '../../ui/views/accessibility/ax_tree_source_views.cc'
source_filename = "../../ui/views/accessibility/ax_tree_source_views.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.72" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.std::__1::pair.79"*, %"struct.std::__1::pair.79"*, %"class.std::__1::__compressed_pair.80" }
%"struct.std::__1::pair.79" = type opaque
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::pair.79"* }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"struct.std::__1::pair.87"*, %"struct.std::__1::pair.87"*, %"class.std::__1::__compressed_pair.88" }
%"struct.std::__1::pair.87" = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::pair.87"* }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"class.std::__1::__compressed_pair.96" }
%"struct.std::__1::pair.95" = type opaque
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::pair.95"* }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.std::__1::pair.103"*, %"struct.std::__1::pair.103"*, %"class.std::__1::__compressed_pair.104" }
%"struct.std::__1::pair.103" = type opaque
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::pair.103"* }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.std::__1::pair.111"*, %"struct.std::__1::pair.111"*, %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::pair.111" = type opaque
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::pair.111"* }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"struct.std::__1::pair.119"*, %"struct.std::__1::pair.119"*, %"class.std::__1::__compressed_pair.120" }
%"struct.std::__1::pair.119" = type opaque
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::pair.119"* }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { i32*, i32*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { i32* }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.views::AXTreeSourceViews" = type { %"class.ui::AXTreeSource", %"class.views::AXAuraObjWrapper"*, %"class.ui::AXTreeID", %"class.views::AXAuraObjCache"* }
%"class.ui::AXTreeSource" = type { i32 (...)** }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.views::AXAuraObjWrapper" = type { i32 (...)**, %"class.views::AXAuraObjCache"* }
%"class.views::AXAuraObjCache" = type { %"class.aura::client::FocusChangeObserver", %"class.aura::Window"*, %"class.std::__1::unique_ptr", %"class.std::__1::map", %"class.std::__1::map.7", %"class.std::__1::map.18", %"class.std::__1::map.29", %"class.std::__1::map.40", %"class.views::AXAuraObjCache::Delegate"*, %"class.std::__1::set", %"class.aura::Window"*, %"class.views::Widget"* }
%"class.aura::client::FocusChangeObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.views::AXAuraObjCache::A11yOverrideWindowObserver"* }
%"class.views::AXAuraObjCache::A11yOverrideWindowObserver" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::map.7" = type { %"class.std::__1::__tree.8" }
%"class.std::__1::__tree.8" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.18" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.views::AXAuraObjCache::Delegate" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.aura::Window" = type opaque
%"class.views::Widget" = type opaque
%"struct.ui::AXActionData" = type { i32, %"class.ui::AXTreeID", %"class.std::__1::basic_string", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect", %"class.gfx::Point", %"class.std::__1::basic_string", i32, i32, i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.60 }
%union.anon.60 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.views::AXVirtualView" = type { %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNode"*, %"class.views::ViewAccessibility"*, %"class.views::AXVirtualView"*, %"class.std::__1::vector", %"class.views::AXAuraObjCache"*, %"class.ui::AXUniqueId", %"struct.ui::AXNodeData", %"class.base::RepeatingCallback" }
%"class.ui::AXPlatformNodeDelegateBase" = type { %"class.ui::AXPlatformNodeDelegate" }
%"class.ui::AXPlatformNodeDelegate" = type { i32 (...)** }
%"class.ui::AXPlatformNode" = type opaque
%"class.views::ViewAccessibility" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::unique_ptr.64" = type opaque
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.std::__1::unique_ptr.64"* }
%"class.ui::AXUniqueId" = type <{ i32 (...)**, i32, [4 x i8] }>
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.85", %"class.std::__1::vector.93", %"class.std::__1::vector.101", %"class.std::__1::vector.109", %"class.std::__1::vector.117", %"class.std::__1::vector.125", %"struct.ui::AXRelativeBounds" }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.132" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.views::AXVirtualViewWrapper" = type { %"class.views::AXAuraObjWrapper", %"class.views::AXVirtualView"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"**, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.views::AXAuraObjWrapper"** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2ui12AXTreeSourceIPN5views16AXAuraObjWrapperEE21SerializerClearedNodeEi = comdat any

@_ZTVN5views17AXTreeSourceViewsE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::AXTreeSourceViews"*)* @_ZN5views17AXTreeSourceViewsD2Ev to i8*), i8* bitcast (void (%"class.views::AXTreeSourceViews"*)* @_ZN5views17AXTreeSourceViewsD0Ev to i8*), i8* bitcast (i1 (%"class.views::AXTreeSourceViews"*, %"struct.ui::AXTreeData"*)* @_ZNK5views17AXTreeSourceViews11GetTreeDataEPN2ui10AXTreeDataE to i8*), i8* bitcast (%"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)* @_ZNK5views17AXTreeSourceViews7GetRootEv to i8*), i8* bitcast (%"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, i32)* @_ZNK5views17AXTreeSourceViews9GetFromIdEi to i8*), i8* bitcast (i32 (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*)* @_ZNK5views17AXTreeSourceViews5GetIdEPNS_16AXAuraObjWrapperE to i8*), i8* bitcast (void (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)* @_ZNK5views17AXTreeSourceViews11GetChildrenEPNS_16AXAuraObjWrapperEPNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE to i8*), i8* bitcast (%"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*)* @_ZNK5views17AXTreeSourceViews9GetParentEPNS_16AXAuraObjWrapperE to i8*), i8* bitcast (i1 (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*)* @_ZNK5views17AXTreeSourceViews7IsValidEPNS_16AXAuraObjWrapperE to i8*), i8* bitcast (i1 (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*)* @_ZNK5views17AXTreeSourceViews9IsIgnoredEPNS_16AXAuraObjWrapperE to i8*), i8* bitcast (i1 (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"*)* @_ZNK5views17AXTreeSourceViews7IsEqualEPNS_16AXAuraObjWrapperES2_ to i8*), i8* bitcast (%"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)* @_ZNK5views17AXTreeSourceViews7GetNullEv to i8*), i8* bitcast (void (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)* @_ZNK5views17AXTreeSourceViews13SerializeNodeEPNS_16AXAuraObjWrapperEPN2ui10AXNodeDataE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*)* @_ZNK5views17AXTreeSourceViews14GetDebugStringEPNS_16AXAuraObjWrapperE to i8*), i8* bitcast (void (%"class.ui::AXTreeSource"*, i32)* @_ZN2ui12AXTreeSourceIPN5views16AXAuraObjWrapperEE21SerializerClearedNodeEi to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@__const._ZN5views17AXTreeSourceViews8ToStringEPNS_16AXAuraObjWrapperENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE.data = private unnamed_addr constant { i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.85", %"class.std::__1::vector.93", %"class.std::__1::vector.101", %"class.std::__1::vector.109", %"class.std::__1::vector.117", %"class.std::__1::vector.125", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.132" } } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, %"class.std::__1::vector.70" { %"class.std::__1::__vector_base.71" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.73" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } }, %"class.std::__1::vector.77" { %"class.std::__1::__vector_base.78" { %"struct.std::__1::pair.79"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.79"*), %"struct.std::__1::pair.79"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.79"*), %"class.std::__1::__compressed_pair.80" { %"struct.std::__1::__compressed_pair_elem.81" { %"struct.std::__1::pair.79"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.79"*) } } } }, %"class.std::__1::vector.85" { %"class.std::__1::__vector_base.86" { %"struct.std::__1::pair.87"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.87"*), %"struct.std::__1::pair.87"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.87"*), %"class.std::__1::__compressed_pair.88" { %"struct.std::__1::__compressed_pair_elem.89" { %"struct.std::__1::pair.87"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.87"*) } } } }, %"class.std::__1::vector.93" { %"class.std::__1::__vector_base.94" { %"struct.std::__1::pair.95"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.95"*), %"struct.std::__1::pair.95"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.95"*), %"class.std::__1::__compressed_pair.96" { %"struct.std::__1::__compressed_pair_elem.97" { %"struct.std::__1::pair.95"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.95"*) } } } }, %"class.std::__1::vector.101" { %"class.std::__1::__vector_base.102" { %"struct.std::__1::pair.103"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.103"*), %"struct.std::__1::pair.103"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.103"*), %"class.std::__1::__compressed_pair.104" { %"struct.std::__1::__compressed_pair_elem.105" { %"struct.std::__1::pair.103"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.103"*) } } } }, %"class.std::__1::vector.109" { %"class.std::__1::__vector_base.110" { %"struct.std::__1::pair.111"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.111"*), %"struct.std::__1::pair.111"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.111"*), %"class.std::__1::__compressed_pair.112" { %"struct.std::__1::__compressed_pair_elem.113" { %"struct.std::__1::pair.111"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.111"*) } } } }, %"class.std::__1::vector.117" { %"class.std::__1::__vector_base.118" { %"struct.std::__1::pair.119"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.119"*), %"struct.std::__1::pair.119"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.119"*), %"class.std::__1::__compressed_pair.120" { %"struct.std::__1::__compressed_pair_elem.121" { %"struct.std::__1::pair.119"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.119"*) } } } }, %"class.std::__1::vector.125" { %"class.std::__1::__vector_base.126" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.127" { %"struct.std::__1::__compressed_pair_elem.128" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.132" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.132" { %"class.std::__1::__compressed_pair.133" { %"struct.std::__1::__compressed_pair_elem.134" { %"class.gfx::Transform"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Transform"*) } } } } }, align 8

@_ZN5views17AXTreeSourceViewsC1EPNS_16AXAuraObjWrapperERKN2ui8AXTreeIDEPNS_14AXAuraObjCacheE = hidden unnamed_addr alias void (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*, %"class.ui::AXTreeID"*, %"class.views::AXAuraObjCache"*), void (%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*, %"class.ui::AXTreeID"*, %"class.views::AXAuraObjCache"*)* @_ZN5views17AXTreeSourceViewsC2EPNS_16AXAuraObjWrapperERKN2ui8AXTreeIDEPNS_14AXAuraObjCacheE
@_ZN5views17AXTreeSourceViewsD1Ev = hidden unnamed_addr alias void (%"class.views::AXTreeSourceViews"*), void (%"class.views::AXTreeSourceViews"*)* @_ZN5views17AXTreeSourceViewsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views17AXTreeSourceViewsC2EPNS_16AXAuraObjWrapperERKN2ui8AXTreeIDEPNS_14AXAuraObjCacheE(%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*, %"class.ui::AXTreeID"* dereferenceable(32), %"class.views::AXAuraObjCache"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.views::AXTreeSourceViews", %"class.views::AXTreeSourceViews"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5views17AXTreeSourceViewsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.views::AXTreeSourceViews", %"class.views::AXTreeSourceViews"* %0, i64 0, i32 1
  store %"class.views::AXAuraObjWrapper"* %1, %"class.views::AXAuraObjWrapper"** %6, align 8
  %7 = getelementptr inbounds %"class.views::AXTreeSourceViews", %"class.views::AXTreeSourceViews"* %0, i64 0, i32 2
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %7, %"class.ui::AXTreeID"* dereferenceable(32) %2) #8
  %8 = getelementptr inbounds %"class.views::AXTreeSourceViews", %"class.views::AXTreeSourceViews"* %0, i64 0, i32 3
  store %"class.views::AXAuraObjCache"* %3, %"class.views::AXAuraObjCache"** %8, align 8
  ret void
}

declare void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views17AXTreeSourceViewsD2Ev(%"class.views::AXTreeSourceViews"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views17AXTreeSourceViewsD0Ev(%"class.views::AXTreeSourceViews"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::AXTreeSourceViews"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views17AXTreeSourceViews22HandleAccessibleActionERKN2ui12AXActionDataE(%"class.views::AXTreeSourceViews"*, %"struct.ui::AXActionData"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 28
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %8, %2
  %15 = phi i32 [ %4, %2 ], [ %10, %8 ]
  %16 = bitcast %"class.views::AXTreeSourceViews"* %0 to %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, i32)***
  %17 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, i32)**, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, i32)*** %16, align 8
  %18 = getelementptr inbounds %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, i32)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, i32)** %17, i64 4
  %19 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, i32)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*, i32)** %18, align 8
  %20 = tail call %"class.views::AXAuraObjWrapper"* %19(%"class.views::AXTreeSourceViews"* %0, i32 %15) #8
  %21 = icmp eq %"class.views::AXAuraObjWrapper"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.views::AXAuraObjWrapper"* %20 to i1 (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*)***
  %24 = load i1 (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*)**, i1 (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*)** %24, i64 7
  %26 = load i1 (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.views::AXAuraObjWrapper"* nonnull %20, %"struct.ui::AXActionData"* dereferenceable(168) %1) #8
  br label %28

28:                                               ; preds = %22, %14, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views17AXTreeSourceViews11GetTreeDataEPN2ui10AXTreeDataE(%"class.views::AXTreeSourceViews"*, %"struct.ui::AXTreeData"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::AXTreeSourceViews", %"class.views::AXTreeSourceViews"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 1
  %5 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %4, %"class.ui::AXTreeID"* dereferenceable(32) %3) #8
  %6 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 5
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 7
  store float 1.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.views::AXTreeSourceViews", %"class.views::AXTreeSourceViews"* %0, i64 0, i32 3
  %9 = load %"class.views::AXAuraObjCache"*, %"class.views::AXAuraObjCache"** %8, align 8
  %10 = tail call %"class.views::AXAuraObjWrapper"* @_ZN5views14AXAuraObjCache8GetFocusEv(%"class.views::AXAuraObjCache"* %9) #8
  %11 = icmp eq %"class.views::AXAuraObjWrapper"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.views::AXAuraObjWrapper"* %10 to i32 (%"class.views::AXAuraObjWrapper"*)***
  %14 = load i32 (%"class.views::AXAuraObjWrapper"*)**, i32 (%"class.views::AXAuraObjWrapper"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %14, i64 5
  %16 = load i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %15, align 8
  %17 = tail call i32 %16(%"class.views::AXAuraObjWrapper"* nonnull %10) #8
  %18 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 11
  store i32 %17, i32* %18, align 8
  br label %19

19:                                               ; preds = %2, %12
  ret i1 true
}

declare dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #1

declare %"class.views::AXAuraObjWrapper"* @_ZN5views14AXAuraObjCache8GetFocusEv(%"class.views::AXAuraObjCache"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.views::AXAuraObjWrapper"* @_ZNK5views17AXTreeSourceViews7GetRootEv(%"class.views::AXTreeSourceViews"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.views::AXTreeSourceViews", %"class.views::AXTreeSourceViews"* %0, i64 0, i32 1
  %3 = load %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %2, align 8
  ret %"class.views::AXAuraObjWrapper"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::AXAuraObjWrapper"* @_ZNK5views17AXTreeSourceViews9GetFromIdEi(%"class.views::AXTreeSourceViews"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.views::AXTreeSourceViews"* %0 to %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)***
  %4 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)**, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)** %4, i64 3
  %6 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)** %5, align 8
  %7 = tail call %"class.views::AXAuraObjWrapper"* %6(%"class.views::AXTreeSourceViews"* %0) #8
  %8 = bitcast %"class.views::AXAuraObjWrapper"* %7 to i32 (%"class.views::AXAuraObjWrapper"*)***
  %9 = load i32 (%"class.views::AXAuraObjWrapper"*)**, i32 (%"class.views::AXAuraObjWrapper"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %9, i64 5
  %11 = load i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %10, align 8
  %12 = tail call i32 %11(%"class.views::AXAuraObjWrapper"* %7) #8
  %13 = icmp eq i32 %12, %1
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.views::AXTreeSourceViews", %"class.views::AXTreeSourceViews"* %0, i64 0, i32 3
  %16 = load %"class.views::AXAuraObjCache"*, %"class.views::AXAuraObjCache"** %15, align 8
  %17 = tail call %"class.views::AXAuraObjWrapper"* @_ZN5views14AXAuraObjCache3GetEi(%"class.views::AXAuraObjCache"* %16, i32 %1) #8
  %18 = icmp eq %"class.views::AXAuraObjWrapper"* %17, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %14
  %20 = tail call %"class.views::AXVirtualView"* @_ZN5views13AXVirtualView9GetFromIdEi(i32 %1) #8
  %21 = icmp eq %"class.views::AXVirtualView"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = tail call %"class.views::AXVirtualView"* @_ZN5views13AXVirtualView9GetFromIdEi(i32 %1) #8
  %24 = load %"class.views::AXAuraObjCache"*, %"class.views::AXAuraObjCache"** %15, align 8
  %25 = tail call %"class.views::AXVirtualViewWrapper"* @_ZN5views13AXVirtualView18GetOrCreateWrapperEPNS_14AXAuraObjCacheE(%"class.views::AXVirtualView"* %23, %"class.views::AXAuraObjCache"* %24) #8
  %26 = getelementptr inbounds %"class.views::AXVirtualViewWrapper", %"class.views::AXVirtualViewWrapper"* %25, i64 0, i32 0
  br label %27

27:                                               ; preds = %22, %19, %14, %2
  %28 = phi %"class.views::AXAuraObjWrapper"* [ %7, %2 ], [ %26, %22 ], [ null, %19 ], [ %17, %14 ]
  ret %"class.views::AXAuraObjWrapper"* %28
}

declare %"class.views::AXAuraObjWrapper"* @_ZN5views14AXAuraObjCache3GetEi(%"class.views::AXAuraObjCache"*, i32) local_unnamed_addr #1

declare %"class.views::AXVirtualView"* @_ZN5views13AXVirtualView9GetFromIdEi(i32) local_unnamed_addr #1

declare %"class.views::AXVirtualViewWrapper"* @_ZN5views13AXVirtualView18GetOrCreateWrapperEPNS_14AXAuraObjCacheE(%"class.views::AXVirtualView"*, %"class.views::AXAuraObjCache"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views17AXTreeSourceViews5GetIdEPNS_16AXAuraObjWrapperE(%"class.views::AXTreeSourceViews"* nocapture readnone, %"class.views::AXAuraObjWrapper"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.views::AXAuraObjWrapper"* %1 to i32 (%"class.views::AXAuraObjWrapper"*)***
  %4 = load i32 (%"class.views::AXAuraObjWrapper"*)**, i32 (%"class.views::AXAuraObjWrapper"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %4, i64 5
  %6 = load i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %5, align 8
  %7 = tail call i32 %6(%"class.views::AXAuraObjWrapper"* %1) #8
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views17AXTreeSourceViews11GetChildrenEPNS_16AXAuraObjWrapperEPNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE(%"class.views::AXTreeSourceViews"* nocapture readnone, %"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.views::AXAuraObjWrapper"* %1 to void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)***
  %5 = load void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)**, void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)*, void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)** %5, i64 3
  %7 = load void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)*, void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)** %6, align 8
  tail call void %7(%"class.views::AXAuraObjWrapper"* %1, %"class.std::__1::vector.139"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::AXAuraObjWrapper"* @_ZNK5views17AXTreeSourceViews9GetParentEPNS_16AXAuraObjWrapperE(%"class.views::AXTreeSourceViews"*, %"class.views::AXAuraObjWrapper"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.views::AXTreeSourceViews"* %0 to %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)***
  %4 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)**, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)** %4, i64 3
  %6 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXTreeSourceViews"*)** %5, align 8
  %7 = tail call %"class.views::AXAuraObjWrapper"* %6(%"class.views::AXTreeSourceViews"* %0) #8
  %8 = bitcast %"class.views::AXAuraObjWrapper"* %1 to i32 (%"class.views::AXAuraObjWrapper"*)***
  %9 = load i32 (%"class.views::AXAuraObjWrapper"*)**, i32 (%"class.views::AXAuraObjWrapper"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %9, i64 5
  %11 = load i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %10, align 8
  %12 = tail call i32 %11(%"class.views::AXAuraObjWrapper"* %1) #8
  %13 = bitcast %"class.views::AXAuraObjWrapper"* %7 to i32 (%"class.views::AXAuraObjWrapper"*)***
  %14 = load i32 (%"class.views::AXAuraObjWrapper"*)**, i32 (%"class.views::AXAuraObjWrapper"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %14, i64 5
  %16 = load i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %15, align 8
  %17 = tail call i32 %16(%"class.views::AXAuraObjWrapper"* %7) #8
  %18 = icmp eq i32 %12, %17
  br i1 %18, label %27, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.views::AXAuraObjWrapper"* %1 to %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)***
  %21 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)**, %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)** %21, i64 2
  %23 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)** %22, align 8
  %24 = tail call %"class.views::AXAuraObjWrapper"* %23(%"class.views::AXAuraObjWrapper"* %1) #8
  %25 = icmp eq %"class.views::AXAuraObjWrapper"* %24, null
  %26 = select i1 %25, %"class.views::AXAuraObjWrapper"* %7, %"class.views::AXAuraObjWrapper"* %24
  br label %27

27:                                               ; preds = %2, %19
  %28 = phi %"class.views::AXAuraObjWrapper"* [ %26, %19 ], [ null, %2 ]
  ret %"class.views::AXAuraObjWrapper"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views17AXTreeSourceViews9IsIgnoredEPNS_16AXAuraObjWrapperE(%"class.views::AXTreeSourceViews"* nocapture readnone, %"class.views::AXAuraObjWrapper"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXNodeData", align 8
  %4 = icmp eq %"class.views::AXAuraObjWrapper"* %1, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.ui::AXNodeData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %6) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.85", %"class.std::__1::vector.93", %"class.std::__1::vector.101", %"class.std::__1::vector.109", %"class.std::__1::vector.117", %"class.std::__1::vector.125", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.132" } }* @__const._ZN5views17AXTreeSourceViews8ToStringEPNS_16AXAuraObjWrapperENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE.data to i8*), i64 264, i1 false)
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %3) #8
  %7 = bitcast %"class.views::AXAuraObjWrapper"* %1 to void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)***
  %8 = load void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)** %8, i64 4
  %10 = load void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)** %9, align 8
  call void %10(%"class.views::AXAuraObjWrapper"* nonnull %1, %"struct.ui::AXNodeData"* nonnull %3) #8
  %11 = call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* nonnull %3) #8
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %6) #8
  br label %12

12:                                               ; preds = %2, %5
  %13 = phi i1 [ %11, %5 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #1

declare zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5views17AXTreeSourceViews7IsValidEPNS_16AXAuraObjWrapperE(%"class.views::AXTreeSourceViews"* nocapture readnone, %"class.views::AXAuraObjWrapper"* readnone) unnamed_addr #2 align 2 {
  %3 = icmp ne %"class.views::AXAuraObjWrapper"* %1, null
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views17AXTreeSourceViews7IsEqualEPNS_16AXAuraObjWrapperES2_(%"class.views::AXTreeSourceViews"* nocapture readnone, %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"*) unnamed_addr #0 align 2 {
  %4 = icmp ne %"class.views::AXAuraObjWrapper"* %1, null
  %5 = icmp ne %"class.views::AXAuraObjWrapper"* %2, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = bitcast %"class.views::AXAuraObjWrapper"* %1 to i32 (%"class.views::AXAuraObjWrapper"*)***
  %9 = load i32 (%"class.views::AXAuraObjWrapper"*)**, i32 (%"class.views::AXAuraObjWrapper"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %9, i64 5
  %11 = load i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %10, align 8
  %12 = tail call i32 %11(%"class.views::AXAuraObjWrapper"* nonnull %1) #8
  %13 = bitcast %"class.views::AXAuraObjWrapper"* %2 to i32 (%"class.views::AXAuraObjWrapper"*)***
  %14 = load i32 (%"class.views::AXAuraObjWrapper"*)**, i32 (%"class.views::AXAuraObjWrapper"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %14, i64 5
  %16 = load i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %15, align 8
  %17 = tail call i32 %16(%"class.views::AXAuraObjWrapper"* nonnull %2) #8
  %18 = icmp eq i32 %12, %17
  br label %19

19:                                               ; preds = %7, %3
  %20 = phi i1 [ false, %3 ], [ %18, %7 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.views::AXAuraObjWrapper"* @_ZNK5views17AXTreeSourceViews7GetNullEv(%"class.views::AXTreeSourceViews"* nocapture readnone) unnamed_addr #2 align 2 {
  ret %"class.views::AXAuraObjWrapper"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views17AXTreeSourceViews14GetDebugStringEPNS_16AXAuraObjWrapperE(%"class.std::__1::basic_string"* noalias sret, %"class.views::AXTreeSourceViews"* nocapture readnone, %"class.views::AXAuraObjWrapper"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.views::AXAuraObjWrapper"* %2, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.views::AXAuraObjWrapper"* %2 to void (%"class.std::__1::basic_string"*, %"class.views::AXAuraObjWrapper"*)***
  %7 = load void (%"class.std::__1::basic_string"*, %"class.views::AXAuraObjWrapper"*)**, void (%"class.std::__1::basic_string"*, %"class.views::AXAuraObjWrapper"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.views::AXAuraObjWrapper"*)*, void (%"class.std::__1::basic_string"*, %"class.views::AXAuraObjWrapper"*)** %7, i64 6
  %9 = load void (%"class.std::__1::basic_string"*, %"class.views::AXAuraObjWrapper"*)*, void (%"class.std::__1::basic_string"*, %"class.views::AXAuraObjWrapper"*)** %8, align 8
  tail call void %9(%"class.std::__1::basic_string"* sret %0, %"class.views::AXAuraObjWrapper"* nonnull %2) #8
  br label %15

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 6, i8* %12, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6, i1 false) #8
  %14 = getelementptr inbounds i8, i8* %13, i64 6
  store i8 0, i8* %14, align 2
  br label %15

15:                                               ; preds = %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views17AXTreeSourceViews13SerializeNodeEPNS_16AXAuraObjWrapperEPN2ui10AXNodeDataE(%"class.views::AXTreeSourceViews"* nocapture readnone, %"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*) unnamed_addr #7 align 2 {
  %4 = alloca %"struct.ui::AXNodeData", align 8
  %5 = bitcast %"class.views::AXAuraObjWrapper"* %1 to void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)***
  %6 = load void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)** %6, i64 4
  %8 = load void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)** %7, align 8
  tail call void %8(%"class.views::AXAuraObjWrapper"* %1, %"struct.ui::AXNodeData"* %2) #8
  %9 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %12 [
    i32 185, label %11
    i32 36, label %11
  ]

11:                                               ; preds = %3, %3
  tail call void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"* %2, i32 11, i1 zeroext true) #8
  br label %12

12:                                               ; preds = %3, %11
  %13 = bitcast %"class.views::AXAuraObjWrapper"* %1 to %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)***
  %14 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)**, %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)** %14, i64 2
  %16 = load %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)*, %"class.views::AXAuraObjWrapper"* (%"class.views::AXAuraObjWrapper"*)** %15, align 8
  %17 = tail call %"class.views::AXAuraObjWrapper"* %16(%"class.views::AXAuraObjWrapper"* %1) #8
  %18 = icmp eq %"class.views::AXAuraObjWrapper"* %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %12
  %20 = bitcast %"struct.ui::AXNodeData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %20) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.85", %"class.std::__1::vector.93", %"class.std::__1::vector.101", %"class.std::__1::vector.109", %"class.std::__1::vector.117", %"class.std::__1::vector.125", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.132" } }* @__const._ZN5views17AXTreeSourceViews8ToStringEPNS_16AXAuraObjWrapperENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE.data to i8*), i64 264, i1 false)
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %4) #8
  %21 = bitcast %"class.views::AXAuraObjWrapper"* %17 to void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)***
  %22 = load void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)** %22, i64 4
  %24 = load void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)** %23, align 8
  call void %24(%"class.views::AXAuraObjWrapper"* nonnull %17, %"struct.ui::AXNodeData"* nonnull %4) #8
  %25 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 13, i32 2
  %26 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 13, i32 2, i32 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 13, i32 2, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fsub float -0.000000e+00, %27
  %31 = fsub float -0.000000e+00, %29
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* %25, float %30, float %31) #8
  %32 = bitcast %"class.views::AXAuraObjWrapper"* %17 to i32 (%"class.views::AXAuraObjWrapper"*)***
  %33 = load i32 (%"class.views::AXAuraObjWrapper"*)**, i32 (%"class.views::AXAuraObjWrapper"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %33, i64 5
  %35 = load i32 (%"class.views::AXAuraObjWrapper"*)*, i32 (%"class.views::AXAuraObjWrapper"*)** %34, align 8
  %36 = call i32 %35(%"class.views::AXAuraObjWrapper"* nonnull %17) #8
  %37 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 13, i32 1
  store i32 %36, i32* %37, align 8
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %20) #8
  br label %38

38:                                               ; preds = %12, %19
  ret void
}

declare void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views17AXTreeSourceViews8ToStringEPNS_16AXAuraObjWrapperENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.views::AXTreeSourceViews"* nocapture readnone, %"class.views::AXAuraObjWrapper"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.ui::AXNodeData", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector.139", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"struct.ui::AXNodeData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %11) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.85", %"class.std::__1::vector.93", %"class.std::__1::vector.101", %"class.std::__1::vector.109", %"class.std::__1::vector.117", %"class.std::__1::vector.125", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.132" } }* @__const._ZN5views17AXTreeSourceViews8ToStringEPNS_16AXAuraObjWrapperENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE.data to i8*), i64 264, i1 false)
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %5) #8
  %12 = bitcast %"class.views::AXAuraObjWrapper"* %2 to void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)***
  %13 = load void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)** %13, i64 4
  %15 = load void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXNodeData"*)** %14, align 8
  call void %15(%"class.views::AXAuraObjWrapper"* %2, %"struct.ui::AXNodeData"* nonnull %5) #8
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  call void @_ZNK2ui10AXNodeData8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"struct.ui::AXNodeData"* nonnull %5) #8
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1, !noalias !2
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !2
  %27 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %28 = zext i8 %21 to i64
  %29 = select i1 %22, i8* %24, i8* %27
  %30 = select i1 %22, i64 %26, i64 %28
  %31 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i8* %29, i64 %30) #8, !noalias !2
  %32 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %32, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %6, i8 signext 10) #8, !noalias !5
  %33 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %16, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #8, !noalias !5
  %34 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #9
  br label %41

41:                                               ; preds = %4, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  %42 = bitcast %"class.std::__1::vector.139"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #8
  %43 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %8, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #8
  %45 = bitcast %"class.views::AXAuraObjWrapper"* %2 to void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)***
  %46 = load void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)**, void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)*, void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)** %46, i64 3
  %48 = load void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)*, void (%"class.views::AXAuraObjWrapper"*, %"class.std::__1::vector.139"*)** %47, align 8
  call void %48(%"class.views::AXAuraObjWrapper"* %2, %"class.std::__1::vector.139"* nonnull %8) #8
  %49 = load i8, i8* %20, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %41
  %52 = load i8*, i8** %23, align 8
  br label %53

53:                                               ; preds = %41, %51
  %54 = phi i8* [ %52, %51 ], [ %27, %41 ]
  %55 = load i8, i8* %54, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %3, i8 signext %55) #8
  %56 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %43, align 8
  %57 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %44, align 8
  %58 = icmp eq %"class.views::AXAuraObjWrapper"** %56, %57
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %79

69:                                               ; preds = %106
  %70 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %43, align 8
  br label %71

71:                                               ; preds = %69, %53
  %72 = phi %"class.views::AXAuraObjWrapper"** [ %70, %69 ], [ %56, %53 ]
  %73 = icmp eq %"class.views::AXAuraObjWrapper"** %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = ptrtoint %"class.views::AXAuraObjWrapper"** %72 to i64
  %76 = bitcast %"class.views::AXAuraObjWrapper"*** %44 to i64*
  store i64 %75, i64* %76, align 8
  %77 = bitcast %"class.views::AXAuraObjWrapper"** %72 to i8*
  call void @_ZdlPv(i8* %77) #9
  br label %78

78:                                               ; preds = %71, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #8
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %11) #8
  ret void

79:                                               ; preds = %59, %106
  %80 = phi %"class.views::AXAuraObjWrapper"** [ %56, %59 ], [ %107, %106 ]
  %81 = load %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #8
  %82 = load i8, i8* %20, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %79
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 %27, i64 24, i1 false) #8
  br label %88

85:                                               ; preds = %79
  %86 = load i8*, i8** %23, align 8
  %87 = load i64, i64* %25, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %86, i64 %87) #8
  br label %88

88:                                               ; preds = %84, %85
  call void @_ZN5views17AXTreeSourceViews8ToStringEPNS_16AXAuraObjWrapperENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.views::AXTreeSourceViews"* %1, %"class.views::AXAuraObjWrapper"* %81, %"class.std::__1::basic_string"* nonnull %10)
  %89 = load i8, i8* %63, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i8*, i8** %64, align 8
  %92 = load i64, i64* %65, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i8* %91, i8* %60
  %95 = select i1 %90, i64 %92, i64 %93
  %96 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %94, i64 %95) #8
  %97 = load i8, i8* %63, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %88
  %100 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %100) #9
  br label %101

101:                                              ; preds = %88, %99
  %102 = load i8, i8* %67, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %105) #9
  br label %106

106:                                              ; preds = %101, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #8
  %107 = getelementptr inbounds %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %80, i64 1
  %108 = icmp eq %"class.views::AXAuraObjWrapper"** %107, %57
  br i1 %108, label %69, label %79
}

declare void @_ZNK2ui10AXNodeData8ToStringEv(%"class.std::__1::basic_string"* sret, %"struct.ui::AXNodeData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui12AXTreeSourceIPN5views16AXAuraObjWrapperEE21SerializerClearedNodeEi(%"class.ui::AXTreeSource"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"*, float, float) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"*, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
