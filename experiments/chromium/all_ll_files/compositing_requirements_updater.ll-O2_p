; ModuleID = '../../third_party/blink/renderer/core/paint/compositing/compositing_requirements_updater.cc'
source_filename = "../../third_party/blink/renderer/core/paint/compositing/compositing_requirements_updater.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::CompositingRequirementsUpdater" = type { %"class.blink::LayoutView"* }
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1734", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1963", %"class.std::__1::unique_ptr.1969", %"class.std::__1::unique_ptr.1975", %class.scoped_refptr.1730, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1981", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1693", %"class.std::__1::unique_ptr.1703" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1649, %"class.WTF::Vector.1650", %"class.std::__1::unique_ptr.1655", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1676, %"class.blink::Persistent.1677" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1627", [4 x i8] }>
%"class.WTF::RefCounted.1627" = type { %"class.base::RefCounted.1628" }
%"class.base::RefCounted.1628" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1620", i64 }
%"class.std::__1::vector.1620" = type { %"class.std::__1::__vector_base.1621" }
%"class.std::__1::__vector_base.1621" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1622" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1622" = type { %"struct.std::__1::__compressed_pair_elem.1623" }
%"struct.std::__1::__compressed_pair_elem.1623" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2115 }
%class.scoped_refptr.2115 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2116", %"class.WTF::Vector.630", %"class.WTF::Vector.2118", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2116" = type { %"class.base::RefCounted.2117" }
%"class.base::RefCounted.2117" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2118" = type { %"class.WTF::VectorBuffer.2119" }
%"class.WTF::VectorBuffer.2119" = type { %"class.WTF::VectorBufferBase.2120" }
%"class.WTF::VectorBufferBase.2120" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2121 }
%union.anon.2121 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1589", i32, i8, [3 x i8], %"class.blink::HeapVector.1591", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1599", %"class.blink::Member.1601", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1610", %"class.blink::Member.1616", %"class.blink::Member.1618", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2101" }
%"class.blink::Member.2101" = type { %"class.blink::MemberBase.2102" }
%"class.blink::MemberBase.2102" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2103" }
%"class.blink::Member.2103" = type { %"class.blink::MemberBase.2104" }
%"class.blink::MemberBase.2104" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1579", %"class.std::__1::unique_ptr.1579", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1585", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1547", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1549", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1554 }
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1554 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1566", %"class.std::__1::map.1575"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1549" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1558", %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1566" = type { %"class.std::__1::__tree.1567" }
%"class.std::__1::__tree.1567" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1568", %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1575" = type opaque
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1591" = type { %"class.WTF::Vector.1594" }
%"class.WTF::Vector.1594" = type { %"class.WTF::VectorBuffer.1595" }
%"class.WTF::VectorBuffer.1595" = type { %"class.WTF::VectorBufferBase.1596" }
%"class.WTF::VectorBufferBase.1596" = type { %"class.blink::Member.1597"*, i32, i32 }
%"class.blink::Member.1597" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1603", i32, i32 }
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2129 }
%class.scoped_refptr.2129 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2139" }
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2130", %"class.WTF::Vector.2130" }
%"class.WTF::Vector.2130" = type { %"class.WTF::VectorBuffer.2131" }
%"class.WTF::VectorBuffer.2131" = type { %"class.WTF::VectorBufferBase.2132" }
%"class.WTF::VectorBufferBase.2132" = type { %class.scoped_refptr.2129*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2105" }
%"class.WTF::Vector.2105" = type { %"class.WTF::VectorBuffer.2106" }
%"class.WTF::VectorBuffer.2106" = type { %"class.WTF::VectorBufferBase.2107" }
%"class.WTF::VectorBufferBase.2107" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2110", %"class.absl::optional.2110", %"class.absl::optional.2110" }
%"class.absl::optional.2110" = type { %"class.absl::optional_internal::optional_data.2111" }
%"class.absl::optional_internal::optional_data.2111" = type { %"class.absl::optional_internal::optional_data_base.2112" }
%"class.absl::optional_internal::optional_data_base.2112" = type { %"class.absl::optional_internal::optional_data_dtor_base.2113" }
%"class.absl::optional_internal::optional_data_dtor_base.2113" = type { i8, %union.anon.2114 }
%union.anon.2114 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2125" }
%"class.WTF::VectorBuffer.2125" = type { %"class.WTF::VectorBufferBase.2126", [32 x i8] }
%"class.WTF::VectorBufferBase.2126" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2012", %"class.blink::Persistent.2018", %"class.std::__1::unique_ptr.2042", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2058" }
%"class.std::__1::unique_ptr.2012" = type { %"class.std::__1::__compressed_pair.2013" }
%"class.std::__1::__compressed_pair.2013" = type { %"struct.std::__1::__compressed_pair_elem.2014" }
%"struct.std::__1::__compressed_pair_elem.2014" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.2018" = type { %"class.blink::PersistentBase.2019" }
%"class.blink::PersistentBase.2019" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2024", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2037" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2000", %"class.blink::Member.2002", %"class.blink::Member.2004", %"class.blink::Member.2006", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2000" = type { %"class.blink::MemberBase.2001" }
%"class.blink::MemberBase.2001" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2002" = type { %"class.blink::MemberBase.2003" }
%"class.blink::MemberBase.2003" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2004" = type { %"class.blink::MemberBase.2005" }
%"class.blink::MemberBase.2005" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2006" = type { %"class.blink::MemberBase.2007" }
%"class.blink::MemberBase.2007" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2022", %"class.blink::Member.1783", %"class.blink::Member.1783", i8, [7 x i8] }>
%"class.blink::Member.2022" = type { %"class.blink::MemberBase.2023" }
%"class.blink::MemberBase.2023" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1998", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2008", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1998" = type { %"class.blink::MemberBase.1999" }
%"class.blink::MemberBase.1999" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2008" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2009", { i64, i64 } }
%"class.blink::WeakMember.2009" = type { %"class.blink::MemberBase.1784" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1998", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2024" = type { %"class.std::__1::__compressed_pair.2025" }
%"class.std::__1::__compressed_pair.2025" = type { %"struct.std::__1::__compressed_pair_elem.2026" }
%"struct.std::__1::__compressed_pair_elem.2026" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2027", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1845" }
%"class.WTF::HashMap.2027" = type { %"class.WTF::HashTable.2028" }
%"class.WTF::HashTable.2028" = type <{ %"struct.WTF::KeyValuePair.2031"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2031" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847" }
%"class.WTF::VectorBufferBase.1847" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2035" }
%"class.blink::Member.2035" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2035" }
%"class.absl::optional.2037" = type { %"class.absl::optional_internal::optional_data.2038" }
%"class.absl::optional_internal::optional_data.2038" = type { %"class.absl::optional_internal::optional_data_base.2039" }
%"class.absl::optional_internal::optional_data_base.2039" = type { %"class.absl::optional_internal::optional_data_dtor_base.2040" }
%"class.absl::optional_internal::optional_data_dtor_base.2040" = type { i8, %union.anon.2041 }
%union.anon.2041 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2042" = type { %"class.std::__1::__compressed_pair.2043" }
%"class.std::__1::__compressed_pair.2043" = type { %"struct.std::__1::__compressed_pair_elem.2044" }
%"struct.std::__1::__compressed_pair_elem.2044" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2045", %"class.WTF::Vector.2045", %"class.WTF::HashMap.2050", %"class.WTF::Vector.2045", i8, [7 x i8] }>
%"class.WTF::HashMap.2050" = type { %"class.WTF::HashTable.2051" }
%"class.WTF::HashTable.2051" = type <{ %"struct.WTF::KeyValuePair.2054"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2054" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2045" }
%"class.WTF::Vector.2045" = type { %"class.WTF::VectorBuffer.2046" }
%"class.WTF::VectorBuffer.2046" = type { %"class.WTF::VectorBufferBase.2047" }
%"class.WTF::VectorBufferBase.2047" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2058" = type { %"class.std::__1::__compressed_pair.2059" }
%"class.std::__1::__compressed_pair.2059" = type { %"struct.std::__1::__compressed_pair_elem.2060" }
%"struct.std::__1::__compressed_pair_elem.2060" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2061", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2067", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2073", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2061" = type { %"class.std::__1::__compressed_pair.2062" }
%"class.std::__1::__compressed_pair.2062" = type { %"struct.std::__1::__compressed_pair_elem.2063" }
%"struct.std::__1::__compressed_pair_elem.2063" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.2067" = type { %"class.std::__1::__compressed_pair.2068" }
%"class.std::__1::__compressed_pair.2068" = type { %"struct.std::__1::__compressed_pair_elem.2069" }
%"struct.std::__1::__compressed_pair_elem.2069" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.2073" = type { %"class.blink::PersistentBase.2074" }
%"class.blink::PersistentBase.2074" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1649 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652", [8 x i8] }
%"class.WTF::VectorBufferBase.1652" = type { %class.scoped_refptr.1649*, i32, i32 }
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1658", %"class.absl::optional.1663", %"class.absl::optional.1668" }
%"class.absl::optional.1658" = type { %"class.absl::optional_internal::optional_data.1659" }
%"class.absl::optional_internal::optional_data.1659" = type { %"class.absl::optional_internal::optional_data_base.1660" }
%"class.absl::optional_internal::optional_data_base.1660" = type { %"class.absl::optional_internal::optional_data_dtor_base.1661" }
%"class.absl::optional_internal::optional_data_dtor_base.1661" = type { i8, %union.anon.1662 }
%union.anon.1662 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1663" = type { %"class.absl::optional_internal::optional_data.1664" }
%"class.absl::optional_internal::optional_data.1664" = type { %"class.absl::optional_internal::optional_data_base.1665" }
%"class.absl::optional_internal::optional_data_base.1665" = type { %"class.absl::optional_internal::optional_data_dtor_base.1666" }
%"class.absl::optional_internal::optional_data_dtor_base.1666" = type { i8, [3 x i8], %union.anon.1667 }
%union.anon.1667 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1668" = type { %"class.absl::optional_internal::optional_data.1669" }
%"class.absl::optional_internal::optional_data.1669" = type { %"class.absl::optional_internal::optional_data_base.1670" }
%"class.absl::optional_internal::optional_data_base.1670" = type { %"class.absl::optional_internal::optional_data_dtor_base.1671" }
%"class.absl::optional_internal::optional_data_dtor_base.1671" = type { i8, %union.anon.1672 }
%union.anon.1672 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1676 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1629", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1641" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1677" = type { %"class.blink::PersistentBase.1678" }
%"class.blink::PersistentBase.1678" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1681", %"struct.blink::PhysicalRect", %"class.blink::Member.1691" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1681" = type { %"class.std::__1::__compressed_pair.1682" }
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"class.WTF::HashSet.1684"* }
%"class.WTF::HashSet.1684" = type { %"class.WTF::HashTable.1685" }
%"class.WTF::HashTable.1685" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1693" = type { %"class.blink::PersistentBase.1694" }
%"class.blink::PersistentBase.1694" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1697", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1703" = type { %"class.std::__1::__compressed_pair.1704" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.1705" }
%"struct.std::__1::__compressed_pair_elem.1705" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1706", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1706" = type { %"class.WTF::HashTable.1709", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1709" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1712", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1715, %"class.std::__1::unique_ptr.1716", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1629", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1715 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2010", i16, %class.scoped_refptr.1715 }
%"class.WTF::ThreadSafeRefCounted.2010" = type { %"class.base::RefCountedThreadSafe.2011" }
%"class.base::RefCountedThreadSafe.2011" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1716" = type { %"class.std::__1::__compressed_pair.1717" }
%"class.std::__1::__compressed_pair.1717" = type { %"struct.std::__1::__compressed_pair_elem.1718" }
%"struct.std::__1::__compressed_pair_elem.1718" = type { %"class.WTF::Vector.1719"* }
%"class.WTF::Vector.1719" = type { %"class.WTF::VectorBuffer.1720" }
%"class.WTF::VectorBuffer.1720" = type { %"class.WTF::VectorBufferBase.1721" }
%"class.WTF::VectorBufferBase.1721" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1730, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1734" = type { %"class.blink::MemberBase.1735" }
%"class.blink::MemberBase.1735" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1738", %"class.blink::Member.1743", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1745", i8, i32, %"class.blink::Color", %"class.absl::optional.1748", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1753", %"class.blink::Member.1755", %"class.blink::Member.1755", %"class.std::__1::unique_ptr.1758", i32, [4 x i8], %"class.WTF::HashSet.1761", %"class.blink::Member.1768", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1770", %"class.blink::HeapHashSet.1777", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1785", i8, %"class.blink::Member.1791", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1803", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1817", i8, %"class.std::__1::unique_ptr.1823", %"class.std::__1::unique_ptr.1904", %"class.WTF::Vector.1910", i32, %class.scoped_refptr.1915, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1925", %"class.blink::Member.1927", %"class.blink::Member.1929", %"class.blink::HeapHashSet.1931", %"class.blink::HeapHashSet.1938", %"class.std::__1::unique_ptr.1945", %"class.std::__1::unique_ptr.1952", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1738" = type { %"class.WTF::HashTable.1739" }
%"class.WTF::HashTable.1739" = type <{ %class.scoped_refptr.1742*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1742 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1743" = type { %"class.blink::MemberBase.1744" }
%"class.blink::MemberBase.1744" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1745" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1746", { i64, i64 } }
%"class.blink::WeakMember.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1748" = type { %"class.absl::optional_internal::optional_data.1749" }
%"class.absl::optional_internal::optional_data.1749" = type { %"class.absl::optional_internal::optional_data_base.1750" }
%"class.absl::optional_internal::optional_data_base.1750" = type { %"class.absl::optional_internal::optional_data_dtor_base.1751" }
%"class.absl::optional_internal::optional_data_dtor_base.1751" = type { i8, %union.anon.1752 }
%union.anon.1752 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1753" = type { %"class.blink::MemberBase.1754" }
%"class.blink::MemberBase.1754" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1755" = type { %"class.blink::MemberBase.1756" }
%"class.blink::MemberBase.1756" = type { %"class.blink::HeapHashSet.1757"* }
%"class.blink::HeapHashSet.1757" = type opaque
%"class.std::__1::unique_ptr.1758" = type { %"class.std::__1::__compressed_pair.1759" }
%"class.std::__1::__compressed_pair.1759" = type { %"struct.std::__1::__compressed_pair_elem.1760" }
%"struct.std::__1::__compressed_pair_elem.1760" = type { %"class.WTF::HashSet.1761"* }
%"class.WTF::HashSet.1761" = type { %"class.WTF::HashTable.1762" }
%"class.WTF::HashTable.1762" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1768" = type { %"class.blink::MemberBase.1769" }
%"class.blink::MemberBase.1769" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1770" = type { %"class.WTF::HashSet.1773" }
%"class.WTF::HashSet.1773" = type { %"class.WTF::HashTable.1774" }
%"class.WTF::HashTable.1774" = type <{ %"class.blink::Member.1776"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1776" = type opaque
%"class.blink::HeapHashSet.1777" = type { %"class.WTF::HashSet.1780" }
%"class.WTF::HashSet.1780" = type { %"class.WTF::HashTable.1781" }
%"class.WTF::HashTable.1781" = type <{ %"class.blink::Member.1783"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1791" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1795", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1795" = type { %"class.WTF::HashTable.1796" }
%"class.WTF::HashTable.1796" = type <{ %"struct.WTF::KeyValuePair.1798"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1798" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1799", i32, i32 }
%"class.WTF::Vector.1799" = type { %"class.WTF::VectorBuffer.1800" }
%"class.WTF::VectorBuffer.1800" = type { %"class.WTF::VectorBufferBase.1801" }
%"class.WTF::VectorBufferBase.1801" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1803" = type { %"class.WTF::LinkedHashSet.1806" }
%"class.WTF::LinkedHashSet.1806" = type { %"class.WTF::HashMap.1807", %"class.WTF::VectorBackedLinkedList.1811" }
%"class.WTF::HashMap.1807" = type { %"class.WTF::HashTable.1808" }
%"class.WTF::HashTable.1808" = type <{ %"struct.WTF::KeyValuePair.1810"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1810" = type opaque
%"class.WTF::VectorBackedLinkedList.1811" = type { %"class.WTF::Vector.1812", i32, i32 }
%"class.WTF::Vector.1812" = type { %"class.WTF::VectorBuffer.1813" }
%"class.WTF::VectorBuffer.1813" = type { %"class.WTF::VectorBufferBase.1814" }
%"class.WTF::VectorBufferBase.1814" = type { %"class.WTF::VectorBackedLinkedListNode.1815"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1815" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1817" = type { %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1819" }
%"struct.std::__1::__compressed_pair_elem.1819" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1823" = type { %"class.std::__1::__compressed_pair.1824" }
%"class.std::__1::__compressed_pair.1824" = type { %"struct.std::__1::__compressed_pair_elem.1825" }
%"struct.std::__1::__compressed_pair_elem.1825" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1826, %class.scoped_refptr.1826, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1881", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1886", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1826 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1827", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1834" }
%"class.WTF::RefCounted.1827" = type { %"class.base::RefCounted.1828" }
%"class.base::RefCounted.1828" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1829", i32, [4 x i8] }>
%"class.WTF::Vector.1829" = type { %"class.WTF::VectorBuffer.1830" }
%"class.WTF::VectorBuffer.1830" = type { %"class.WTF::VectorBufferBase.1831" }
%"class.WTF::VectorBufferBase.1831" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1834" = type { %"class.WTF::VectorBuffer.1835" }
%"class.WTF::VectorBuffer.1835" = type { %"class.WTF::VectorBufferBase.1836" }
%"class.WTF::VectorBufferBase.1836" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1837", %"class.std::__1::unique_ptr.1853", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1837" = type { %"class.std::__1::__compressed_pair.1838" }
%"class.std::__1::__compressed_pair.1838" = type { %"struct.std::__1::__compressed_pair_elem.1839" }
%"struct.std::__1::__compressed_pair_elem.1839" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1840", %"class.WTF::Vector.1845", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1840" = type { %"class.WTF::VectorBuffer.1841" }
%"class.WTF::VectorBuffer.1841" = type { %"class.WTF::VectorBufferBase.1842" }
%"class.WTF::VectorBufferBase.1842" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1853" = type { %"class.std::__1::__compressed_pair.1854" }
%"class.std::__1::__compressed_pair.1854" = type { %"struct.std::__1::__compressed_pair_elem.1855" }
%"struct.std::__1::__compressed_pair_elem.1855" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1856", %"class.absl::optional.1856" }
%"class.absl::optional.1856" = type { %"class.absl::optional_internal::optional_data.1857" }
%"class.absl::optional_internal::optional_data.1857" = type { %"class.absl::optional_internal::optional_data_base.1858" }
%"class.absl::optional_internal::optional_data_base.1858" = type { %"class.absl::optional_internal::optional_data_dtor_base.1859" }
%"class.absl::optional_internal::optional_data_dtor_base.1859" = type { i8, [3 x i8], %union.anon.1860 }
%union.anon.1860 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1834"*, %"class.absl::optional.1866", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1866" = type { %"class.absl::optional_internal::optional_data.1867" }
%"class.absl::optional_internal::optional_data.1867" = type { %"class.absl::optional_internal::optional_data_base.1868" }
%"class.absl::optional_internal::optional_data_base.1868" = type { %"class.absl::optional_internal::optional_data_dtor_base.1869" }
%"class.absl::optional_internal::optional_data_dtor_base.1869" = type { i8, %union.anon.1870 }
%union.anon.1870 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1871", %"class.WTF::Vector.1876" }
%"class.WTF::Vector.1871" = type { %"class.WTF::VectorBuffer.1872" }
%"class.WTF::VectorBuffer.1872" = type { %"class.WTF::VectorBufferBase.1873", [128 x i8] }
%"class.WTF::VectorBufferBase.1873" = type { i32*, i32, i32 }
%"class.WTF::Vector.1876" = type { %"class.WTF::VectorBuffer.1877" }
%"class.WTF::VectorBuffer.1877" = type { %"class.WTF::VectorBufferBase.1878", [128 x i8] }
%"class.WTF::VectorBufferBase.1878" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1881" = type { %"class.WTF::VectorBuffer.1882" }
%"class.WTF::VectorBuffer.1882" = type { %"class.WTF::VectorBufferBase.1883" }
%"class.WTF::VectorBufferBase.1883" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1886" = type { %"class.WTF::HashTable.1887" }
%"class.WTF::HashTable.1887" = type <{ %"struct.WTF::KeyValuePair.1890"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1890" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1891", %"class.WTF::Vector.1896" }
%"class.WTF::HashMap.1891" = type { %"class.WTF::HashTable.1892" }
%"class.WTF::HashTable.1892" = type <{ %"struct.WTF::KeyValuePair.1895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1895" = type opaque
%"class.WTF::Vector.1896" = type { %"class.WTF::VectorBuffer.1897" }
%"class.WTF::VectorBuffer.1897" = type { %"class.WTF::VectorBufferBase.1898" }
%"class.WTF::VectorBufferBase.1898" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1904" = type { %"class.std::__1::__compressed_pair.1905" }
%"class.std::__1::__compressed_pair.1905" = type { %"struct.std::__1::__compressed_pair_elem.1906" }
%"struct.std::__1::__compressed_pair_elem.1906" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1910" = type { %"class.WTF::VectorBuffer.1911" }
%"class.WTF::VectorBuffer.1911" = type { %"class.WTF::VectorBufferBase.1912" }
%"class.WTF::VectorBufferBase.1912" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1915 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type { %"class.WTF::RefCounted.1916", i64, %"class.ukm::UkmRecorder"*, %"class.base::TickClock"*, i8*, %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord", %"struct.std::__1::array", %"struct.blink::LocalFrameUkmAggregator::SampleToRecord", i32, i32, i32, i8, i32, i32 }
%"class.WTF::RefCounted.1916" = type { %"class.base::RefCounted.1917" }
%"class.base::RefCounted.1917" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::TickClock" = type { i32 (...)** }
%"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord" = type { %"class.std::__1::unique_ptr.1918", %"class.std::__1::unique_ptr.1918", %"class.std::__1::unique_ptr.1918", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.1918" = type { %"class.std::__1::__compressed_pair.1919" }
%"class.std::__1::__compressed_pair.1919" = type { %"struct.std::__1::__compressed_pair_elem.1920" }
%"struct.std::__1::__compressed_pair_elem.1920" = type { %"class.blink::CustomCountHistogram"* }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::array" = type { [26 x %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord"] }
%"struct.blink::LocalFrameUkmAggregator::SampleToRecord" = type <{ %"class.base::TimeDelta", %"struct.std::__1::array.1924", %"struct.std::__1::array.1924", i16, [6 x i8] }>
%"struct.std::__1::array.1924" = type { [26 x %"class.base::TimeDelta"] }
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1927" = type { %"class.blink::MemberBase.1928" }
%"class.blink::MemberBase.1928" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1931" = type { %"class.WTF::HashSet.1934" }
%"class.WTF::HashSet.1934" = type { %"class.WTF::HashTable.1935" }
%"class.WTF::HashTable.1935" = type <{ %"class.blink::WeakMember.1937"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1937" = type opaque
%"class.blink::HeapHashSet.1938" = type { %"class.WTF::HashSet.1941" }
%"class.WTF::HashSet.1941" = type { %"class.WTF::HashTable.1942" }
%"class.WTF::HashTable.1942" = type <{ %"class.blink::WeakMember.1944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1944" = type opaque
%"class.std::__1::unique_ptr.1945" = type { %"class.std::__1::__compressed_pair.1946" }
%"class.std::__1::__compressed_pair.1946" = type { %"struct.std::__1::__compressed_pair_elem.1947" }
%"struct.std::__1::__compressed_pair_elem.1947" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1948" }
%"class.base::time_internal::TimeBase.1948" = type { i64 }
%"class.std::__1::unique_ptr.1952" = type { %"class.std::__1::__compressed_pair.1953" }
%"class.std::__1::__compressed_pair.1953" = type { %"struct.std::__1::__compressed_pair_elem.1954" }
%"struct.std::__1::__compressed_pair_elem.1954" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1955", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1955" = type { %"class.absl::optional_internal::optional_data.1956" }
%"class.absl::optional_internal::optional_data.1956" = type { %"class.absl::optional_internal::optional_data_base.1957" }
%"class.absl::optional_internal::optional_data_base.1957" = type { %"class.absl::optional_internal::optional_data_dtor_base.1958" }
%"class.absl::optional_internal::optional_data_dtor_base.1958" = type { i8, %union.anon.1959 }
%union.anon.1959 = type { %"class.base::Time" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1963" = type { %"class.std::__1::__compressed_pair.1964" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem.1965" }
%"struct.std::__1::__compressed_pair_elem.1965" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1969" = type { %"class.std::__1::__compressed_pair.1970" }
%"class.std::__1::__compressed_pair.1970" = type { %"struct.std::__1::__compressed_pair_elem.1971" }
%"struct.std::__1::__compressed_pair_elem.1971" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1975" = type { %"class.std::__1::__compressed_pair.1976" }
%"class.std::__1::__compressed_pair.1976" = type { %"struct.std::__1::__compressed_pair_elem.1977" }
%"struct.std::__1::__compressed_pair_elem.1977" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type { %"class.blink::LayoutView"*, i8, i8, i32, %"class.blink::CompositingInputsRoot" }
%"class.blink::CompositingInputsRoot" = type { %"class.blink::PaintLayer"* }
%class.scoped_refptr.1730 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1981" = type { %"class.blink::PersistentBase.1982" }
%"class.blink::PersistentBase.1982" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1985", i64 }
%"class.blink::HeapVector.1985" = type { %"class.WTF::Vector.1988" }
%"class.WTF::Vector.1988" = type { %"class.WTF::VectorBuffer.1989" }
%"class.WTF::VectorBuffer.1989" = type { %"class.WTF::VectorBufferBase.1990", [368 x i8] }
%"class.WTF::VectorBufferBase.1990" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1783", i8, %"class.blink::Member.1991", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::HeapLinkedHashSet.1993"* }
%"class.blink::HeapLinkedHashSet.1993" = type opaque
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::CompositingReasonsStats" = type { i64, i64, i64, i64, i64 }
%"class.blink::CompositingRequirementsUpdater::RecursionData" = type <{ %"class.blink::PaintLayer"*, i8, i8, i8, [5 x i8] }>
%"class.blink::CompositingRequirementsUpdater::OverlapMap" = type { %"class.WTF::Vector.2080" }
%"class.WTF::Vector.2080" = type { %"class.WTF::VectorBuffer.2081" }
%"class.WTF::VectorBuffer.2081" = type { %"class.WTF::VectorBufferBase.2082" }
%"class.WTF::VectorBufferBase.2082" = type { %"struct.blink::OverlapMapContainers"*, i32, i32 }
%"struct.blink::OverlapMapContainers" = type { %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer" }
%"class.blink::OverlapMapContainer" = type { %"class.WTF::Vector.2083", %"class.blink::IntRect" }
%"class.WTF::Vector.2083" = type { %"class.WTF::VectorBuffer.2084" }
%"class.WTF::VectorBuffer.2084" = type { %"class.WTF::VectorBufferBase.1847", [1024 x i8] }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.2089" = type { %"class.WTF::VectorBuffer.2090" }
%"class.WTF::VectorBuffer.2090" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.blink::PaintLayerPaintOrderIterator" = type { %"class.blink::PaintLayer"*, i32, i32, %"class.blink::PaintLayer"* }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutEmbeddedContent" = type <{ %"class.blink::LayoutReplaced", i32, [4 x i8] }>
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2095", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2096", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2095" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2096" = type { %"class.absl::optional_internal::optional_data.2097" }
%"class.absl::optional_internal::optional_data.2097" = type { %"class.absl::optional_internal::optional_data_base.2098" }
%"class.absl::optional_internal::optional_data_base.2098" = type { %"class.absl::optional_internal::optional_data_dtor_base.2099" }
%"class.absl::optional_internal::optional_data_dtor_base.2099" = type { i8, %union.anon.2100 }
%union.anon.2100 = type { %"class.blink::FloatSize" }
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable.2166", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration.2176", %"class.blink::HeapTaskRunnerTimer.2177", %"class.blink::HeapTaskRunnerTimer.2177", %"class.blink::HeapTaskRunnerTimer.2177", %"class.blink::HeapTaskRunnerTimer.2177", %"class.blink::HeapTaskRunnerTimer.2177", %"class.blink::Member.2180", %"class.blink::Member.2182", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.2184", %"class.blink::Member.2186", double, double, %"class.absl::optional.2188", double, double, double, i32, %"class.blink::Member.2197", %"class.blink::Member.318", i32, %"class.blink::HeapTaskRunnerTimer.2177", %"class.std::__1::unique_ptr.2199", %"class.cc::Layer"*, %class.scoped_refptr.2205, %"class.blink::Member.2206", double, i8, double, i32, i16, %"class.absl::optional.2208", i8, %"class.base::TimeTicks", %"class.blink::Member.2213", %"class.blink::Member.2215", %"class.blink::Member.2217", %"class.blink::HeapVector.2219", %"class.blink::Member.2226", %"class.blink::HeapVector.2228", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.2228", %"class.blink::HeapVector.2228", i32, %"class.blink::Member.2255", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.2288", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.2290", %"class.blink::Member.2293", %"class.blink::Member.2295", %"class.blink::Member.2320", %"class.blink::Member.2323", %"class.blink::Member.2330" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Supplementable.2166" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2167" }
%"class.blink::HeapHashMap.2167" = type { %"class.WTF::HashMap.2170" }
%"class.WTF::HashMap.2170" = type { %"class.WTF::HashTable.2171" }
%"class.WTF::HashTable.2171" = type <{ %"struct.WTF::KeyValuePair.2173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2173" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2174" }
%"class.blink::WeakMember.2174" = type { %"class.blink::MemberBase.2175" }
%"class.blink::MemberBase.2175" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.2176" = type { i8 }
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.2182" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.2188" = type { %"class.absl::optional_internal::optional_data.2189" }
%"class.absl::optional_internal::optional_data.2189" = type { %"class.absl::optional_internal::optional_data_base.2190" }
%"class.absl::optional_internal::optional_data_base.2190" = type { %"class.absl::optional_internal::optional_data_dtor_base.2191" }
%"class.absl::optional_internal::optional_data_dtor_base.2191" = type { i8, %union.anon.2192 }
%union.anon.2192 = type { %"class.base::ElapsedTimer" }
%"class.blink::Member.2197" = type { %"class.blink::MemberBase.2198" }
%"class.blink::MemberBase.2198" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.blink::HeapTaskRunnerTimer.2177" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2178", { i64, i64 } }
%"class.blink::WeakMember.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::HTMLMediaElement"* }
%"class.std::__1::unique_ptr.2199" = type { %"class.std::__1::__compressed_pair.2200" }
%"class.std::__1::__compressed_pair.2200" = type { %"struct.std::__1::__compressed_pair_elem.2201" }
%"struct.std::__1::__compressed_pair_elem.2201" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.2205 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.2208" = type { %"class.absl::optional_internal::optional_data.2209" }
%"class.absl::optional_internal::optional_data.2209" = type { %"class.absl::optional_internal::optional_data_base.2210" }
%"class.absl::optional_internal::optional_data_base.2210" = type { %"class.absl::optional_internal::optional_data_dtor_base.2211" }
%"class.absl::optional_internal::optional_data_dtor_base.2211" = type { i8, %union.anon.2212 }
%union.anon.2212 = type { i8 }
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.2215" = type { %"class.blink::MemberBase.2216" }
%"class.blink::MemberBase.2216" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::HeapVector.2219" = type { %"class.WTF::Vector.2222" }
%"class.WTF::Vector.2222" = type { %"class.WTF::VectorBuffer.2223" }
%"class.WTF::VectorBuffer.2223" = type { %"class.WTF::VectorBufferBase.2224" }
%"class.WTF::VectorBufferBase.2224" = type { %"class.blink::Member.1317"*, i32, i32 }
%"class.blink::Member.2226" = type { %"class.blink::MemberBase.2227" }
%"class.blink::MemberBase.2227" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.2228" = type { %"class.WTF::Vector.2231" }
%"class.WTF::Vector.2231" = type { %"class.WTF::VectorBuffer.2232" }
%"class.WTF::VectorBuffer.2232" = type { %"class.WTF::VectorBufferBase.2233" }
%"class.WTF::VectorBufferBase.2233" = type { %"class.blink::Member.2234"*, i32, i32 }
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.2238", i32, %"class.blink::Member.2239", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.2248", %"class.blink::SelfKeepAlive.2251" }
%"class.blink::ThreadState::PrefinalizerRegistration.2238" = type { i8 }
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2243, %"class.blink::Member.2244", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.2243 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2246" }
%"class.blink::Persistent.2246" = type { %"class.blink::PersistentBase.2247" }
%"class.blink::PersistentBase.2247" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.2239", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.2248", %class.scoped_refptr.945 }
%"class.blink::TraceWrapperV8Reference.2248" = type { %"class.v8::TracedReference.2249" }
%"class.v8::TracedReference.2249" = type { %"class.v8::BasicTracedReference.2250" }
%"class.v8::BasicTracedReference.2250" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.2251" = type { %"class.blink::Persistent.2252" }
%"class.blink::Persistent.2252" = type { %"class.blink::PersistentBase.2253" }
%"class.blink::PersistentBase.2253" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Member.2255" = type { %"class.blink::MemberBase.2256" }
%"class.blink::MemberBase.2256" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.2257, %"class.blink::Member.2284", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.2257 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.2259, %"class.std::__1::unique_ptr.2260", %"class.std::__1::unique_ptr.2277", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.2283" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2258" }>
%"class.base::RefCountedThreadSafe.2258" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.2259 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.2260" = type { %"class.std::__1::__compressed_pair.2261" }
%"class.std::__1::__compressed_pair.2261" = type { %"struct.std::__1::__compressed_pair_elem.2262" }
%"struct.std::__1::__compressed_pair_elem.2262" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.2263", i8, i64, i32, %"class.std::__1::vector.2267", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.2263" = type { %"class.std::__1::__compressed_pair.2264" }
%"class.std::__1::__compressed_pair.2264" = type { %"struct.std::__1::__compressed_pair_elem.2265" }
%"struct.std::__1::__compressed_pair_elem.2265" = type { float* }
%"class.std::__1::vector.2267" = type { %"class.std::__1::__vector_base.2268" }
%"class.std::__1::__vector_base.2268" = type { float**, float**, %"class.std::__1::__compressed_pair.2269" }
%"class.std::__1::__compressed_pair.2269" = type { %"struct.std::__1::__compressed_pair_elem.2270" }
%"struct.std::__1::__compressed_pair_elem.2270" = type { float** }
%"class.std::__1::unique_ptr.2277" = type { %"class.std::__1::__compressed_pair.2278" }
%"class.std::__1::__compressed_pair.2278" = type { %"struct.std::__1::__compressed_pair_elem.2279" }
%"struct.std::__1::__compressed_pair_elem.2279" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.2283" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2284" = type { %"class.blink::MemberBase.2285" }
%"class.blink::MemberBase.2285" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.2255" }
%"class.blink::Member.2288" = type { %"class.blink::MemberBase.2289" }
%"class.blink::MemberBase.2289" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.2290" = type { %"class.blink::MemberBase.2291" }
%"class.blink::MemberBase.2291" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2292" }
%"class.blink::Member.2292" = type { %"class.blink::MemberBase.2179" }
%"class.blink::Member.2293" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.2295" = type { %"class.blink::MemberBase.2296" }
%"class.blink::MemberBase.2296" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.2297", %"class.blink::ExecutionContextClient", %"class.blink::Member.2299", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet.2301", %"class.WTF::Vector.2315", double, %"class.WTF::Vector.701", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable.2297" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2298" }
%"class.blink::WeakMember.2298" = type { %"class.blink::MemberBase.916" }
%"class.blink::Member.2299" = type { %"class.blink::MemberBase.2300" }
%"class.blink::MemberBase.2300" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::HeapLinkedHashSet.2301" = type { %"class.WTF::LinkedHashSet.2304" }
%"class.WTF::LinkedHashSet.2304" = type { %"class.WTF::HashMap.2305", %"class.WTF::VectorBackedLinkedList.2309" }
%"class.WTF::HashMap.2305" = type { %"class.WTF::HashTable.2306" }
%"class.WTF::HashTable.2306" = type <{ %"struct.WTF::KeyValuePair.2308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2308" = type opaque
%"class.WTF::VectorBackedLinkedList.2309" = type { %"class.WTF::Vector.2310", i32, i32 }
%"class.WTF::Vector.2310" = type { %"class.WTF::VectorBuffer.2311" }
%"class.WTF::VectorBuffer.2311" = type { %"class.WTF::VectorBufferBase.2312" }
%"class.WTF::VectorBufferBase.2312" = type { %"class.WTF::VectorBackedLinkedListNode.2313"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2313" = type opaque
%"class.WTF::Vector.2315" = type { %"class.WTF::VectorBuffer.2316" }
%"class.WTF::VectorBuffer.2316" = type { %"class.WTF::VectorBufferBase.2317" }
%"class.WTF::VectorBufferBase.2317" = type { float*, i32, i32 }
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::DisallowNewWrapper.2322"* }
%"class.blink::DisallowNewWrapper.2322" = type opaque
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::DisallowNewWrapper.2325"* }
%"class.blink::DisallowNewWrapper.2325" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.2328" }
%"class.blink::Member.2328" = type { %"class.blink::MemberBase.2329" }
%"class.blink::MemberBase.2329" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::DisallowNewWrapper.2332"* }
%"class.blink::DisallowNewWrapper.2332" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>

$_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK5blink30CompositingRequirementsUpdater10OverlapMap14OverlapsLayersERKNS_7IntRectEb = comdat any

$_ZN5blink30CompositingRequirementsUpdater10OverlapMap29BeginNewOverlapTestingContextEv = comdat any

$_ZN5blink30CompositingRequirementsUpdater10OverlapMap3AddEPNS_10PaintLayerERKNS_7IntRectEb = comdat any

$_ZN5blink30CompositingRequirementsUpdater10OverlapMap34FinishCurrentOverlapTestingContextEv = comdat any

$_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink20OverlapMapContainersEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink20OverlapMapContainersENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_ = comdat any

$_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm = comdat any

$_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j = comdat any

$_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [48 x i8] c"CompositingRequirementsUpdater::updateRecursive\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20OverlapMapContainersEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::OverlapMapContainers]\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IntRect]\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PaintLayer *]\00", align 1

@_ZN5blink30CompositingRequirementsUpdaterC1ERNS_10LayoutViewE = hidden unnamed_addr alias void (%"class.blink::CompositingRequirementsUpdater"*, %"class.blink::LayoutView"*), void (%"class.blink::CompositingRequirementsUpdater"*, %"class.blink::LayoutView"*)* @_ZN5blink30CompositingRequirementsUpdaterC2ERNS_10LayoutViewE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink30CompositingRequirementsUpdaterC2ERNS_10LayoutViewE(%"class.blink::CompositingRequirementsUpdater"* nocapture, %"class.blink::LayoutView"* dereferenceable(408)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater", %"class.blink::CompositingRequirementsUpdater"* %0, i64 0, i32 0
  store %"class.blink::LayoutView"* %1, %"class.blink::LayoutView"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CompositingRequirementsUpdater6UpdateEPNS_10PaintLayerERNS_23CompositingReasonsStatsE(%"class.blink::CompositingRequirementsUpdater"* readonly, %"class.blink::PaintLayer"*, %"struct.blink::CompositingReasonsStats"* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.blink::CompositingRequirementsUpdater::RecursionData", align 8
  %6 = alloca %"class.blink::CompositingRequirementsUpdater::OverlapMap", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.WTF::Vector.2045", align 8
  %9 = alloca %"class.blink::IntRect", align 4
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %3
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %15 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  br label %19

19:                                               ; preds = %3, %13
  %20 = phi i64 [ -6148914691236517206, %3 ], [ %18, %13 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), %13 ]
  %22 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %13 ]
  %23 = bitcast %"class.blink::CompositingRequirementsUpdater::RecursionData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %5, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %5, i64 0, i32 2
  %27 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %5, i64 0, i32 3
  %28 = bitcast %"class.blink::CompositingRequirementsUpdater::RecursionData"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  store %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"** %24, align 8
  store i8 0, i8* %25, align 8
  store i8 0, i8* %26, align 1
  store i8 1, i8* %27, align 2
  %29 = bitcast %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7
  %30 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #7
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap29BeginNewOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* nonnull %6) #7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #7
  store i8 0, i8* %7, align 1
  %32 = bitcast %"class.WTF::Vector.2045"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #7
  %33 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %8, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #7
  %35 = bitcast %"class.blink::IntRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 16, i1 false) #7
  call void @_ZN5blink30CompositingRequirementsUpdater15UpdateRecursiveEPNS_10PaintLayerES2_RNS0_10OverlapMapERNS0_13RecursionDataERbRN3WTF6VectorIS2_Lj0ENS8_18PartitionAllocatorEEERNS_7IntRectERNS_23CompositingReasonsStatsE(%"class.blink::CompositingRequirementsUpdater"* %0, %"class.blink::PaintLayer"* undef, %"class.blink::PaintLayer"* %1, %"class.blink::CompositingRequirementsUpdater::OverlapMap"* nonnull dereferenceable(16) %6, %"class.blink::CompositingRequirementsUpdater::RecursionData"* nonnull dereferenceable(16) %5, i8* nonnull dereferenceable(1) %7, %"class.WTF::Vector.2045"* nonnull dereferenceable(16) %8, %"class.blink::IntRect"* nonnull dereferenceable(16) %9, %"struct.blink::CompositingReasonsStats"* dereferenceable(40) %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #7
  %36 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %33, align 8
  %37 = icmp eq %"class.blink::PaintLayer"** %36, null
  %38 = bitcast %"class.blink::PaintLayer"** %36 to i8*
  br i1 %37, label %44, label %39, !prof !2

39:                                               ; preds = %19
  %40 = load i32, i32* %34, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !3

42:                                               ; preds = %39
  store i32 0, i32* %34, align 4
  br label %43

43:                                               ; preds = %42, %39
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #7
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %33, align 8
  br label %44

44:                                               ; preds = %19, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  %45 = load %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"** %30, align 8
  %46 = icmp eq %"struct.blink::OverlapMapContainers"* %45, null
  br i1 %46, label %90, label %47, !prof !2

47:                                               ; preds = %44
  %48 = bitcast %"struct.blink::OverlapMapContainers"* %45 to i8*
  %49 = load i32, i32* %31, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %88, label %51, !prof !3

51:                                               ; preds = %47
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %45, i64 %52
  br label %54

54:                                               ; preds = %82, %51
  %55 = phi %"struct.blink::OverlapMapContainers"* [ %83, %82 ], [ %45, %51 ]
  %56 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %55, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60, !prof !3

60:                                               ; preds = %54
  store i32 0, i32* %57, align 4
  br label %61

61:                                               ; preds = %60, %54
  %62 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %62, align 8
  %64 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %55, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %65 = bitcast i8* %64 to %"class.blink::IntRect"*
  %66 = icmp eq %"class.blink::IntRect"* %63, %65
  br i1 %66, label %69, label %67, !prof !2

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %56, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"* %68, %"class.blink::IntRect"* %63) #7
  br label %69

69:                                               ; preds = %67, %61
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %62, align 8
  %70 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %69
  store i32 0, i32* %70, align 4
  br label %74

74:                                               ; preds = %73, %69
  %75 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %78 = bitcast i8* %77 to %"class.blink::IntRect"*
  %79 = icmp eq %"class.blink::IntRect"* %76, %78
  br i1 %79, label %82, label %80, !prof !2

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %55, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"* %81, %"class.blink::IntRect"* %76) #7
  br label %82

82:                                               ; preds = %80, %74
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %75, align 8
  %83 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %55, i64 1
  %84 = icmp eq %"struct.blink::OverlapMapContainers"* %83, %53
  br i1 %84, label %85, label %54

85:                                               ; preds = %82
  store i32 0, i32* %31, align 4
  %86 = bitcast %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %6 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %47
  %89 = phi i8* [ %87, %85 ], [ %48, %47 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #7
  store %"struct.blink::OverlapMapContainers"* null, %"struct.blink::OverlapMapContainers"** %30, align 8
  br label %90

90:                                               ; preds = %44, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #7
  %91 = icmp eq i8* %22, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %90
  %93 = load i8, i8* %22, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %20) #7
  br label %96

96:                                               ; preds = %90, %92, %95
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CompositingRequirementsUpdater15UpdateRecursiveEPNS_10PaintLayerES2_RNS0_10OverlapMapERNS0_13RecursionDataERbRN3WTF6VectorIS2_Lj0ENS8_18PartitionAllocatorEEERNS_7IntRectERNS_23CompositingReasonsStatsE(%"class.blink::CompositingRequirementsUpdater"* readonly, %"class.blink::PaintLayer"* nocapture readnone, %"class.blink::PaintLayer"*, %"class.blink::CompositingRequirementsUpdater::OverlapMap"* dereferenceable(16), %"class.blink::CompositingRequirementsUpdater::RecursionData"* nocapture dereferenceable(16), i8* nocapture dereferenceable(1), %"class.WTF::Vector.2045"* dereferenceable(16), %"class.blink::IntRect"* dereferenceable(16), %"struct.blink::CompositingReasonsStats"* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.blink::PaintLayer"*, align 8
  %14 = alloca %"class.WTF::Vector.2089", align 8
  %15 = alloca i32, align 4
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %"class.blink::IntRect"*
  %18 = alloca %"class.blink::CompositingRequirementsUpdater::RecursionData", align 8
  %19 = alloca i8, align 1
  %20 = alloca %"class.blink::PaintLayerPaintOrderIterator", align 8
  %21 = alloca %"class.blink::IntRect", align 4
  %22 = alloca { i64, i64 }, align 8
  %23 = bitcast { i64, i64 }* %22 to %"class.blink::IntRect"*
  %24 = alloca %"class.blink::PaintLayerPaintOrderIterator", align 8
  %25 = alloca %"class.blink::IntRect", align 4
  store %"class.blink::PaintLayer"* %2, %"class.blink::PaintLayer"** %13, align 8
  %26 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater", %"class.blink::CompositingRequirementsUpdater"* %0, i64 0, i32 0
  %27 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %26, align 8
  %28 = tail call %"class.blink::PaintLayerCompositor"* @_ZN5blink10LayoutView10CompositorEv(%"class.blink::LayoutView"* %27) #7
  %29 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %2, i64 0, i32 13
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.2012", %"class.std::__1::unique_ptr.2012"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"*, %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"** %30, align 8
  %32 = icmp eq %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %9
  %34 = tail call i8* @_Znwm(i64 88) #8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 88, i1 false) #7
  %35 = ptrtoint i8* %34 to i64
  %36 = bitcast %"class.std::__1::unique_ptr.2012"* %29 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast i8* %34 to %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"*
  br label %38

38:                                               ; preds = %9, %33
  %39 = phi %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* [ %31, %9 ], [ %37, %33 ]
  %40 = getelementptr inbounds %"struct.blink::PaintLayer::AncestorDependentCompositingInputs", %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* %39, i64 0, i32 5
  %41 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %40, align 8
  %42 = icmp eq %"class.blink::PaintLayer"* %41, null
  br i1 %42, label %71, label %43

43:                                               ; preds = %38, %66
  %44 = phi %"class.blink::PaintLayer"* [ %69, %66 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %44, i64 0, i32 14, i32 0, i32 0
  %46 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %45, align 8
  %47 = icmp eq %"class.blink::PaintLayerScrollableArea"* %46, null
  br i1 %47, label %71, label %48

48:                                               ; preds = %43
  %49 = tail call zeroext i1 @_ZNK5blink10PaintLayer24NeedsCompositedScrollingEv(%"class.blink::PaintLayer"* nonnull %44) #7
  br i1 %49, label %50, label %56

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %44, i64 0, i32 1
  %52 = bitcast [6 x i8]* %51 to i48*
  %53 = load i48, i48* %52, align 1
  %54 = and i48 %53, 2
  %55 = icmp eq i48 %54, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %50, %48
  %57 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %44, i64 0, i32 13
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.2012", %"class.std::__1::unique_ptr.2012"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"*, %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"** %58, align 8
  %60 = icmp eq %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* %59, null
  br i1 %60, label %61, label %66

61:                                               ; preds = %56
  %62 = tail call i8* @_Znwm(i64 88) #8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 88, i1 false) #7
  %63 = ptrtoint i8* %62 to i64
  %64 = bitcast %"class.std::__1::unique_ptr.2012"* %57 to i64*
  store i64 %63, i64* %64, align 8
  %65 = bitcast i8* %62 to %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"*
  br label %66

66:                                               ; preds = %56, %61
  %67 = phi %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* [ %59, %56 ], [ %65, %61 ]
  %68 = getelementptr inbounds %"struct.blink::PaintLayer::AncestorDependentCompositingInputs", %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* %67, i64 0, i32 5
  %69 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %68, align 8
  %70 = icmp eq %"class.blink::PaintLayer"* %69, null
  br i1 %70, label %71, label %43

71:                                               ; preds = %66, %43, %50, %38
  %72 = phi i1 [ false, %38 ], [ true, %50 ], [ false, %43 ], [ false, %66 ]
  %73 = xor i1 %72, true
  %74 = tail call zeroext i1 @_ZNK5blink10PaintLayer15CanBeCompositedEv(%"class.blink::PaintLayer"* %2) #7
  br i1 %74, label %75, label %86

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %2, i64 0, i32 17, i32 0, i32 0, i32 0
  %77 = load %"struct.blink::PaintLayerRareData"*, %"struct.blink::PaintLayerRareData"** %76, align 8
  %78 = icmp eq %"struct.blink::PaintLayerRareData"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.blink::PaintLayerRareData", %"struct.blink::PaintLayerRareData"* %77, i64 0, i32 3
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.blink::PaintLayerRareData", %"struct.blink::PaintLayerRareData"* %77, i64 0, i32 4
  %83 = load i64, i64* %82, align 8
  %84 = or i64 %83, %81
  %85 = and i64 %84, 4507997908746239
  br label %86

86:                                               ; preds = %79, %75, %71
  %87 = phi i64 [ 0, %71 ], [ %85, %79 ], [ 0, %75 ]
  %88 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %2, i64 0, i32 14, i32 0, i32 0
  %89 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %88, align 8
  %90 = icmp eq %"class.blink::PaintLayerScrollableArea"* %89, null
  br i1 %90, label %99, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %89, i64 0, i32 2
  %93 = bitcast i24* %92 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = shl i32 %94, 10
  %96 = and i32 %95, 16384
  %97 = zext i32 %96 to i64
  %98 = or i64 %87, %97
  br label %99

99:                                               ; preds = %91, %86
  %100 = phi i64 [ %87, %86 ], [ %98, %91 ]
  %101 = tail call zeroext i1 @_ZNK5blink10PaintLayer15CanBeCompositedEv(%"class.blink::PaintLayer"* %2) #7
  %102 = select i1 %101, i64 %100, i64 0
  %103 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %2, i64 0, i32 2
  %104 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %104, i64 0, i32 0
  br i1 %74, label %106, label %111

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %4, i64 0, i32 1
  %108 = load i8, i8* %107, align 8, !range !4
  %109 = icmp eq i8 %108, 0
  %110 = select i1 %109, i64 0, i64 536870912
  br label %111

111:                                              ; preds = %106, %99
  %112 = phi i64 [ 0, %99 ], [ %110, %106 ]
  br i1 %72, label %113, label %217

113:                                              ; preds = %111
  %114 = bitcast %"class.WTF::Vector.2089"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #7
  %115 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %14, i64 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %14, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %14, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 16, i1 false) #7
  %118 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #7
  store i32 0, i32* %15, align 4
  %119 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %6, i64 0, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %133

122:                                              ; preds = %113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #7
  br label %168

123:                                              ; preds = %162
  %124 = load i32, i32* %117, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #7
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %168, label %126

126:                                              ; preds = %123
  %127 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  %128 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  %129 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  %130 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %131 = bitcast %"class.logging::CheckError"* %12 to i8*
  %132 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %6, i64 0, i32 0, i32 0, i32 0
  br label %179

133:                                              ; preds = %113, %162
  %134 = phi i64 [ %163, %162 ], [ %102, %113 ]
  %135 = phi i32 [ %165, %162 ], [ 0, %113 ]
  %136 = call dereferenceable(8) %"class.blink::PaintLayer"** @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %135)
  %137 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %137, i64 0, i32 2
  %139 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %139, i64 0, i32 0
  %141 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %140, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #7
  %142 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = icmp eq %"class.blink::LayoutObject"* %142, %105
  br i1 %143, label %144, label %156

144:                                              ; preds = %133
  %145 = load i32, i32* %117, align 4
  %146 = load i32, i32* %116, align 8
  %147 = icmp eq i32 %145, %146
  br i1 %147, label %155, label %148, !prof !3

148:                                              ; preds = %144
  %149 = load i32*, i32** %115, align 8
  %150 = zext i32 %145 to i64
  %151 = getelementptr inbounds i32, i32* %149, i64 %150
  %152 = load i32, i32* %15, align 4
  store i32 %152, i32* %151, align 4
  %153 = load i32, i32* %117, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %117, align 4
  br label %162

155:                                              ; preds = %144
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.2089"* nonnull %14, i32* nonnull dereferenceable(4) %15) #7
  br label %162

156:                                              ; preds = %133
  br i1 %74, label %157, label %162

157:                                              ; preds = %156
  %158 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %159 = call zeroext i1 @_ZNK5blink10PaintLayer20ScrollsWithRespectToEPKS0_(%"class.blink::PaintLayer"* %158, %"class.blink::PaintLayer"* %137) #7
  %160 = or i64 %134, 536870912
  %161 = select i1 %159, i64 %160, i64 %134
  br label %162

162:                                              ; preds = %155, %148, %157, %156
  %163 = phi i64 [ %134, %156 ], [ %161, %157 ], [ %134, %148 ], [ %134, %155 ]
  %164 = load i32, i32* %15, align 4
  %165 = add i32 %164, 1
  store i32 %165, i32* %15, align 4
  %166 = load i32, i32* %119, align 4
  %167 = icmp ult i32 %165, %166
  br i1 %167, label %133, label %123

168:                                              ; preds = %211, %122, %123
  %169 = phi i64 [ %163, %123 ], [ %102, %122 ], [ %163, %211 ]
  %170 = phi i32 [ 0, %123 ], [ 0, %122 ], [ %215, %211 ]
  %171 = load i32*, i32** %115, align 8
  %172 = icmp eq i32* %171, null
  %173 = bitcast i32* %171 to i8*
  br i1 %172, label %178, label %174, !prof !2

174:                                              ; preds = %168
  %175 = icmp eq i32 %170, 0
  br i1 %175, label %177, label %176, !prof !3

176:                                              ; preds = %174
  store i32 0, i32* %117, align 4
  br label %177

177:                                              ; preds = %176, %174
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %173) #7
  store i32* null, i32** %115, align 8
  br label %178

178:                                              ; preds = %168, %177
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #7
  br label %217

179:                                              ; preds = %126, %211
  %180 = phi i32 [ %124, %126 ], [ %215, %211 ]
  %181 = phi i32 [ 0, %126 ], [ %214, %211 ]
  %182 = xor i32 %181, -1
  %183 = add i32 %180, %182
  %184 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2089"* nonnull %14, i32 %183)
  %185 = load i32, i32* %184, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %128, align 8
  %186 = load i32, i32* %119, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #7
  %187 = icmp ugt i32 %186, %185
  br i1 %187, label %188, label %189

188:                                              ; preds = %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #7
  store i8* null, i8** %128, align 8
  br label %196

189:                                              ; preds = %179
  %190 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %185) #7
  %191 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %186) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %190, i8* %191) #7
  %192 = load i8*, i8** %130, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #7
  store i8* %192, i8** %128, align 8
  %193 = icmp eq i8* %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %189
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %11) #7
  %195 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #7
  br label %196

196:                                              ; preds = %194, %189, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #7
  %197 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %132, align 8
  %198 = zext i32 %185 to i64
  %199 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %197, i64 %198
  %200 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %199, i64 1
  %201 = icmp eq %"class.blink::PaintLayer"** %199, null
  br i1 %201, label %211, label %202, !prof !3

202:                                              ; preds = %196
  %203 = load i32, i32* %119, align 4
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %197, i64 %204
  %206 = bitcast %"class.blink::PaintLayer"** %199 to i8*
  %207 = bitcast %"class.blink::PaintLayer"** %200 to i8*
  %208 = ptrtoint %"class.blink::PaintLayer"** %205 to i64
  %209 = ptrtoint %"class.blink::PaintLayer"** %200 to i64
  %210 = sub i64 %208, %209
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %206, i8* nonnull align 8 %207, i64 %210, i1 false) #7
  br label %211

211:                                              ; preds = %196, %202
  %212 = load i32, i32* %119, align 4
  %213 = add i32 %212, -1
  store i32 %213, i32* %119, align 4
  %214 = add nuw i32 %181, 1
  %215 = load i32, i32* %117, align 4
  %216 = icmp ult i32 %214, %215
  br i1 %216, label %179, label %168

217:                                              ; preds = %178, %111
  %218 = phi i64 [ %169, %178 ], [ %102, %111 ]
  %219 = and i64 %218, 65536
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %238, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %6, i64 0, i32 0, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %6, i64 0, i32 0, i32 0, i32 1
  %225 = load i32, i32* %224, align 8
  %226 = icmp eq i32 %223, %225
  br i1 %226, label %237, label %227, !prof !3

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %6, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %228, align 8
  %230 = zext i32 %223 to i64
  %231 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %229, i64 %230
  %232 = bitcast %"class.blink::PaintLayer"** %13 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.blink::PaintLayer"** %231 to i64*
  store i64 %233, i64* %234, align 8
  %235 = load i32, i32* %222, align 4
  %236 = add i32 %235, 1
  store i32 %236, i32* %222, align 4
  br label %238

237:                                              ; preds = %221
  call void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2045"* %6, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %13) #7
  br label %238

238:                                              ; preds = %237, %227, %217
  %239 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %239) #7
  %240 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %241 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %241, i8 -86, i64 16, i1 false)
  %242 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %243 = call { i64, i64 } @_ZNK5blink10PaintLayer44ExpandedBoundingBoxForCompositingOverlapTestEb(%"class.blink::PaintLayer"* %242, i1 zeroext %73) #7
  %244 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  %245 = extractvalue { i64, i64 } %243, 0
  store i64 %245, i64* %244, align 8
  %246 = extractvalue { i64, i64 } %243, 1
  store i64 %246, i64* %240, align 8
  %247 = bitcast %"class.blink::IntRect"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %247, i8* nonnull align 8 %239, i64 16, i1 false)
  br i1 %74, label %248, label %257

248:                                              ; preds = %238
  %249 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %4, i64 0, i32 3
  %250 = load i8, i8* %249, align 2, !range !4
  %251 = icmp eq i8 %250, 0
  %252 = icmp ne i64 %100, 0
  %253 = or i1 %252, %251
  br i1 %253, label %257, label %254

254:                                              ; preds = %248
  %255 = call zeroext i1 @_ZNK5blink30CompositingRequirementsUpdater10OverlapMap14OverlapsLayersERKNS_7IntRectEb(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3, %"class.blink::IntRect"* nonnull dereferenceable(16) %17, i1 zeroext %73)
  %256 = select i1 %255, i64 1073741824, i64 0
  br label %257

257:                                              ; preds = %248, %254, %238
  %258 = phi i64 [ %256, %254 ], [ %112, %248 ], [ %112, %238 ]
  %259 = or i64 %258, %218
  %260 = bitcast %"class.blink::CompositingRequirementsUpdater::RecursionData"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %260) #7
  %261 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %18, i64 0, i32 0
  %262 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %18, i64 0, i32 1
  %263 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %18, i64 0, i32 2
  %264 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %18, i64 0, i32 3
  %265 = bitcast %"class.blink::CompositingRequirementsUpdater::RecursionData"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %260, i8* align 8 %265, i64 16, i1 false)
  store i8 0, i8* %262, align 8
  %266 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %267 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %266, i64 0, i32 2
  %268 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %267, align 8
  %269 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %268, i64 0, i32 0
  %270 = bitcast %"class.blink::LayoutBoxModelObject"* %268 to i1 (%"class.blink::LayoutObject"*)***
  %271 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %270, align 8
  %272 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %271, i64 27
  %273 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %272, align 8
  %274 = call zeroext i1 %273(%"class.blink::LayoutObject"* %269) #7
  br i1 %274, label %275, label %281

275:                                              ; preds = %257
  %276 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %277 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %276, i64 0, i32 2
  %278 = bitcast %"class.blink::LayoutBoxModelObject"** %277 to %"class.blink::LayoutEmbeddedContent"**
  %279 = load %"class.blink::LayoutEmbeddedContent"*, %"class.blink::LayoutEmbeddedContent"** %278, align 8
  %280 = call zeroext i1 @_ZNK5blink21LayoutEmbeddedContent36ContentDocumentContainsGraphicsLayerEv(%"class.blink::LayoutEmbeddedContent"* %279) #7
  br label %281

281:                                              ; preds = %275, %257
  %282 = phi i1 [ false, %257 ], [ %280, %275 ]
  %283 = icmp ne i64 %259, 0
  %284 = and i1 %101, %283
  %285 = zext i1 %284 to i8
  %286 = or i1 %284, %282
  br i1 %286, label %287, label %293

287:                                              ; preds = %281
  br i1 %284, label %288, label %292

288:                                              ; preds = %287
  %289 = bitcast %"class.blink::PaintLayer"** %13 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.blink::CompositingRequirementsUpdater::RecursionData"* %18 to i64*
  store i64 %290, i64* %291, align 8
  br label %292

292:                                              ; preds = %288, %287
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap29BeginNewOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3)
  store i8 1, i8* %264, align 2
  br label %293

293:                                              ; preds = %281, %292
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #7
  store i8 0, i8* %19, align 1
  %294 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %295 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %294, i64 0, i32 1
  %296 = bitcast [6 x i8]* %295 to i48*
  %297 = load i48, i48* %296, align 1
  %298 = and i48 %297, 2097152
  %299 = icmp eq i48 %298, 0
  br i1 %299, label %300, label %305

300:                                              ; preds = %293
  %301 = and i48 %297, 4194304
  %302 = icmp eq i48 %301, 0
  %303 = or i1 %72, %302
  %304 = xor i1 %302, true
  br i1 %303, label %316, label %306

305:                                              ; preds = %293
  br i1 %72, label %316, label %306

306:                                              ; preds = %300, %305
  %307 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %294, i64 0, i32 14, i32 0, i32 0
  %308 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %307, align 8
  %309 = icmp eq %"class.blink::PaintLayerScrollableArea"* %308, null
  br i1 %309, label %316, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %308, i64 0, i32 2
  %312 = bitcast i24* %311 to i32*
  %313 = load i32, i32* %312, align 8
  %314 = and i32 %313, 16
  %315 = icmp ne i32 %314, 0
  br label %316

316:                                              ; preds = %300, %306, %305, %310
  %317 = phi i1 [ %304, %300 ], [ true, %305 ], [ false, %306 ], [ %315, %310 ]
  %318 = and i48 %297, 8388608
  %319 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %294, i64 0, i32 2
  %320 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %319, align 8
  %321 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %345, label %323

323:                                              ; preds = %316
  %324 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %320, i64 0, i32 0, i32 4
  %325 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %324 to i96*
  %326 = load i96, i96* %325, align 4
  %327 = and i96 %326, 16777216
  %328 = icmp eq i96 %327, 0
  br i1 %328, label %329, label %345

329:                                              ; preds = %323
  %330 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %320, i64 0, i32 0, i32 6, i32 0, i32 0
  %331 = load %"class.blink::Node"*, %"class.blink::Node"** %330, align 8
  %332 = icmp eq %"class.blink::Node"* %331, null
  br i1 %332, label %345, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %331, i64 0, i32 1
  %335 = load i32, i32* %334, align 8
  %336 = and i32 %335, 67108876
  %337 = icmp eq i32 %336, 67108864
  br i1 %337, label %338, label %345, !prof !5

338:                                              ; preds = %333
  %339 = bitcast %"class.blink::Node"* %331 to %"class.blink::Element"*
  %340 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %339) #7
  %341 = icmp eq %"class.blink::DisplayLockContext"* %340, null
  br i1 %341, label %345, label %342

342:                                              ; preds = %338
  %343 = call zeroext i1 @_ZNK5blink18DisplayLockContext22ShouldPrePaintChildrenEv(%"class.blink::DisplayLockContext"* nonnull %340) #7
  %344 = xor i1 %343, true
  br label %345

345:                                              ; preds = %316, %323, %329, %333, %338, %342
  %346 = phi i1 [ false, %338 ], [ %344, %342 ], [ false, %316 ], [ false, %333 ], [ false, %329 ], [ false, %323 ]
  %347 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %348 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %347, i64 0, i32 1
  %349 = bitcast [6 x i8]* %348 to i48*
  %350 = load i48, i48* %349, align 1
  %351 = and i48 %350, 536870912
  %352 = or i48 %351, %318
  %353 = icmp ne i48 %352, 0
  %354 = or i1 %317, %353
  br i1 %354, label %369, label %355

355:                                              ; preds = %345
  %356 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %347, i64 0, i32 2
  %357 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %356, align 8
  %358 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %357, i64 0, i32 0, i32 4
  %359 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %358 to i96*
  %360 = load i96, i96* %359, align 4
  %361 = and i96 %360, 464227514732017603087171584
  %362 = icmp eq i96 %361, 0
  %363 = and i48 %350, 512
  %364 = icmp ne i48 %363, 0
  %365 = or i1 %364, %362
  br i1 %365, label %369, label %366

366:                                              ; preds = %355
  %367 = trunc i48 %350 to i32
  %368 = icmp sgt i32 %367, -1
  br label %369

369:                                              ; preds = %355, %345, %366
  %370 = phi i1 [ false, %355 ], [ false, %345 ], [ %368, %366 ]
  %371 = or i1 %346, %370
  br i1 %371, label %470, label %372

372:                                              ; preds = %369
  %373 = bitcast %"class.blink::PaintLayerPaintOrderIterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %373) #7
  %374 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %20, i64 0, i32 0
  %375 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %20, i64 0, i32 1
  %376 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %20, i64 0, i32 2
  %377 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %20, i64 0, i32 3
  store %"class.blink::PaintLayer"* %347, %"class.blink::PaintLayer"** %374, align 8
  store i32 1, i32* %375, align 8
  store i32 0, i32* %376, align 4
  %378 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %347, i64 0, i32 6
  %379 = bitcast %"class.blink::PaintLayer"** %378 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = bitcast %"class.blink::PaintLayer"** %377 to i64*
  store i64 %380, i64* %381, align 8
  %382 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %20) #7
  %383 = icmp eq %"class.blink::PaintLayer"* %382, null
  br i1 %383, label %384, label %385

384:                                              ; preds = %372
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %373) #7
  br label %448

385:                                              ; preds = %372
  %386 = bitcast %"class.blink::IntRect"* %21 to i8*
  %387 = bitcast %"class.blink::PaintLayer"** %13 to i64*
  %388 = bitcast %"class.blink::CompositingRequirementsUpdater::RecursionData"* %18 to i64*
  %389 = bitcast { i64, i64 }* %22 to i8*
  %390 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 0
  %391 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 1
  %392 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3, i64 0, i32 0
  %393 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %394

394:                                              ; preds = %385, %438
  %395 = phi %"class.blink::PaintLayer"* [ %382, %385 ], [ %442, %438 ]
  %396 = phi i8 [ 0, %385 ], [ %441, %438 ]
  %397 = phi i8 [ %285, %385 ], [ %440, %438 ]
  %398 = phi i64 [ %259, %385 ], [ %439, %438 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %386) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %386, i8 0, i64 16, i1 false) #7
  call void @_ZN5blink30CompositingRequirementsUpdater15UpdateRecursiveEPNS_10PaintLayerES2_RNS0_10OverlapMapERNS0_13RecursionDataERbRN3WTF6VectorIS2_Lj0ENS8_18PartitionAllocatorEEERNS_7IntRectERNS_23CompositingReasonsStatsE(%"class.blink::CompositingRequirementsUpdater"* %0, %"class.blink::PaintLayer"* undef, %"class.blink::PaintLayer"* nonnull %395, %"class.blink::CompositingRequirementsUpdater::OverlapMap"* dereferenceable(16) %3, %"class.blink::CompositingRequirementsUpdater::RecursionData"* nonnull dereferenceable(16) %18, i8* nonnull dereferenceable(1) %19, %"class.WTF::Vector.2045"* dereferenceable(16) %6, %"class.blink::IntRect"* nonnull dereferenceable(16) %21, %"struct.blink::CompositingReasonsStats"* dereferenceable(40) %8)
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %7, %"class.blink::IntRect"* nonnull dereferenceable(16) %21) #7
  %399 = load i8, i8* %262, align 8, !range !4
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %438, label %401

401:                                              ; preds = %394
  %402 = or i64 %398, 2147483648
  %403 = and i8 %397, 1
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %405, label %438

405:                                              ; preds = %401
  %406 = load i64, i64* %387, align 8
  store i64 %406, i64* %388, align 8
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap29BeginNewOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3)
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap29BeginNewOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %389) #7
  %407 = call { i64, i64 } @_ZNK5blink10PaintLayer26ClippedAbsoluteBoundingBoxEv(%"class.blink::PaintLayer"* nonnull %395) #7
  %408 = extractvalue { i64, i64 } %407, 0
  store i64 %408, i64* %390, align 8
  %409 = extractvalue { i64, i64 } %407, 1
  store i64 %409, i64* %391, align 8
  %410 = trunc i64 %409 to i32
  %411 = icmp slt i32 %410, 1
  %412 = lshr i64 %409, 32
  %413 = trunc i64 %412 to i32
  %414 = icmp slt i32 %413, 1
  %415 = or i1 %411, %414
  br i1 %415, label %437, label %416

416:                                              ; preds = %405
  %417 = load i32, i32* %393, align 4
  %418 = add i32 %417, -2
  %419 = call dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"* %392, i32 %418) #7
  %420 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %419, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %421 = load i32, i32* %420, align 4
  %422 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %419, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %423 = load i32, i32* %422, align 8
  %424 = icmp eq i32 %421, %423
  br i1 %424, label %433, label %425, !prof !3

425:                                              ; preds = %416
  %426 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %419, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %426, align 8
  %428 = zext i32 %421 to i64
  %429 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %427, i64 %428
  %430 = bitcast %"class.blink::IntRect"* %429 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %430, i8* nonnull align 8 %389, i64 16, i1 false) #7
  %431 = load i32, i32* %420, align 4
  %432 = add i32 %431, 1
  store i32 %432, i32* %420, align 4
  br label %435

433:                                              ; preds = %416
  %434 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %419, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.2083"* %434, %"class.blink::IntRect"* nonnull dereferenceable(16) %23) #7
  br label %435

435:                                              ; preds = %433, %425
  %436 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %419, i64 0, i32 0, i32 1
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %436, %"class.blink::IntRect"* nonnull dereferenceable(16) %23) #7
  br label %437

437:                                              ; preds = %405, %435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %389) #7
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap34FinishCurrentOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3)
  br label %438

438:                                              ; preds = %437, %394, %401
  %439 = phi i64 [ %402, %401 ], [ %402, %437 ], [ %398, %394 ]
  %440 = phi i8 [ %397, %401 ], [ 1, %437 ], [ %397, %394 ]
  %441 = phi i8 [ %396, %401 ], [ 1, %437 ], [ %396, %394 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %386) #7
  %442 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %20) #7
  %443 = icmp eq %"class.blink::PaintLayer"* %442, null
  br i1 %443, label %444, label %394

444:                                              ; preds = %438
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %373) #7
  %445 = and i8 %441, 1
  %446 = icmp eq i8 %445, 0
  br i1 %446, label %448, label %447

447:                                              ; preds = %444
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap34FinishCurrentOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3)
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap29BeginNewOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3)
  store i8 1, i8* %264, align 2
  br label %448

448:                                              ; preds = %447, %444, %384
  %449 = phi i8 [ %285, %384 ], [ %440, %444 ], [ %440, %447 ]
  %450 = phi i64 [ %259, %384 ], [ %439, %444 ], [ %439, %447 ]
  %451 = bitcast %"class.blink::PaintLayerPaintOrderIterator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #7
  %452 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %24, i64 0, i32 0
  %453 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %24, i64 0, i32 1
  %454 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %24, i64 0, i32 2
  %455 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %24, i64 0, i32 3
  %456 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  store %"class.blink::PaintLayer"* %456, %"class.blink::PaintLayer"** %452, align 8
  store i32 6, i32* %453, align 8
  store i32 0, i32* %454, align 4
  %457 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %456, i64 0, i32 6
  %458 = bitcast %"class.blink::PaintLayer"** %457 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = bitcast %"class.blink::PaintLayer"** %455 to i64*
  store i64 %459, i64* %460, align 8
  %461 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %24) #7
  %462 = icmp eq %"class.blink::PaintLayer"* %461, null
  br i1 %462, label %469, label %463

463:                                              ; preds = %448
  %464 = bitcast %"class.blink::IntRect"* %25 to i8*
  br label %465

465:                                              ; preds = %463, %465
  %466 = phi %"class.blink::PaintLayer"* [ %461, %463 ], [ %467, %465 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %464) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %464, i8 0, i64 16, i1 false) #7
  call void @_ZN5blink30CompositingRequirementsUpdater15UpdateRecursiveEPNS_10PaintLayerES2_RNS0_10OverlapMapERNS0_13RecursionDataERbRN3WTF6VectorIS2_Lj0ENS8_18PartitionAllocatorEEERNS_7IntRectERNS_23CompositingReasonsStatsE(%"class.blink::CompositingRequirementsUpdater"* %0, %"class.blink::PaintLayer"* undef, %"class.blink::PaintLayer"* nonnull %466, %"class.blink::CompositingRequirementsUpdater::OverlapMap"* dereferenceable(16) %3, %"class.blink::CompositingRequirementsUpdater::RecursionData"* nonnull dereferenceable(16) %18, i8* nonnull dereferenceable(1) %19, %"class.WTF::Vector.2045"* dereferenceable(16) %6, %"class.blink::IntRect"* nonnull dereferenceable(16) %25, %"struct.blink::CompositingReasonsStats"* dereferenceable(40) %8)
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %7, %"class.blink::IntRect"* nonnull dereferenceable(16) %25) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %464) #7
  %467 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %24) #7
  %468 = icmp eq %"class.blink::PaintLayer"* %467, null
  br i1 %468, label %469, label %465

469:                                              ; preds = %465, %448
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #7
  br label %470

470:                                              ; preds = %369, %469
  %471 = phi i64 [ %450, %469 ], [ %259, %369 ]
  %472 = phi i8 [ %449, %469 ], [ %285, %369 ]
  %473 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %474 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %473, i64 0, i32 2
  %475 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %474, align 8
  %476 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %475, i64 0, i32 0
  %477 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %475, i64 0, i32 0, i32 5, i32 0
  %478 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %477, align 8
  %479 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %478, i64 0, i32 0, i32 3, i32 0, i32 0
  %480 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %479, align 8
  %481 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %480, i64 0, i32 3, i32 0, i32 0
  %482 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %481, align 8
  %483 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %482, i64 0, i32 39
  %484 = load i32, i32* %483, align 4
  %485 = and i32 %484, 67108864
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %544

487:                                              ; preds = %470
  %488 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %480, i64 0, i32 2, i32 0, i32 0
  %489 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %488, align 8
  %490 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %489, i64 0, i32 2, i32 0, i32 0
  %491 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %490, align 8
  %492 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %491, i64 0, i32 45
  %493 = load i32, i32* %492, align 4
  %494 = and i32 %493, 5
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %548, label %496

496:                                              ; preds = %487
  %497 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %475, i64 0, i32 0, i32 4
  %498 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %497 to i96*
  %499 = load i96, i96* %498, align 4
  %500 = and i96 %499, 1207959552
  %501 = icmp eq i96 %500, 134217728
  br i1 %501, label %548, label %502

502:                                              ; preds = %496
  %503 = bitcast %"class.blink::LayoutBoxModelObject"* %475 to i1 (%"class.blink::LayoutObject"*, i32)***
  %504 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %503, align 8
  %505 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %504, i64 92
  %506 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %505, align 8
  %507 = call zeroext i1 %506(%"class.blink::LayoutObject"* %476, i32 43) #7
  br i1 %507, label %508, label %510

508:                                              ; preds = %502
  %509 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  br label %548

510:                                              ; preds = %502
  %511 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %503, align 8
  %512 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %511, i64 92
  %513 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %512, align 8
  %514 = call zeroext i1 %513(%"class.blink::LayoutObject"* %476, i32 46) #7
  br i1 %514, label %537, label %515

515:                                              ; preds = %510
  %516 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %503, align 8
  %517 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %516, i64 92
  %518 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %517, align 8
  %519 = call zeroext i1 %518(%"class.blink::LayoutObject"* %476, i32 48) #7
  br i1 %519, label %537, label %520

520:                                              ; preds = %515
  %521 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %503, align 8
  %522 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %521, i64 92
  %523 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %522, align 8
  %524 = call zeroext i1 %523(%"class.blink::LayoutObject"* %476, i32 45) #7
  br i1 %524, label %537, label %525

525:                                              ; preds = %520
  %526 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %503, align 8
  %527 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %526, i64 92
  %528 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %527, align 8
  %529 = call zeroext i1 %528(%"class.blink::LayoutObject"* %476, i32 49) #7
  br i1 %529, label %537, label %530

530:                                              ; preds = %525
  %531 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %503, align 8
  %532 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %531, i64 92
  %533 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %532, align 8
  %534 = call zeroext i1 %533(%"class.blink::LayoutObject"* %476, i32 50) #7
  br i1 %534, label %537, label %535

535:                                              ; preds = %530
  %536 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  br label %544

537:                                              ; preds = %510, %515, %520, %525, %530
  %538 = bitcast %"class.blink::LayoutBoxModelObject"* %475 to i1 (%"class.blink::LayoutObject"*)***
  %539 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %538, align 8
  %540 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %539, i64 24
  %541 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %540, align 8
  %542 = call zeroext i1 %541(%"class.blink::LayoutObject"* %476) #7
  %543 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  br i1 %542, label %544, label %548

544:                                              ; preds = %470, %535, %537
  %545 = phi %"class.blink::PaintLayer"* [ %543, %537 ], [ %536, %535 ], [ %473, %470 ]
  %546 = load i8, i8* %263, align 1, !range !4
  %547 = icmp ne i8 %546, 0
  call void @_ZN5blink10PaintLayer37SetShouldIsolateCompositedDescendantsEb(%"class.blink::PaintLayer"* %545, i1 zeroext %547) #7
  br label %552

548:                                              ; preds = %496, %487, %508, %537
  %549 = phi %"class.blink::PaintLayer"* [ %543, %537 ], [ %509, %508 ], [ %473, %487 ], [ %473, %496 ]
  call void @_ZN5blink10PaintLayer37SetShouldIsolateCompositedDescendantsEb(%"class.blink::PaintLayer"* %549, i1 zeroext false) #7
  %550 = load i8, i8* %263, align 1, !range !4
  %551 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %4, i64 0, i32 2
  store i8 %550, i8* %551, align 1
  br label %552

552:                                              ; preds = %548, %544
  %553 = load i8, i8* %262, align 8, !range !4
  %554 = icmp ne i8 %553, 0
  %555 = or i1 %282, %554
  br i1 %555, label %556, label %558

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %4, i64 0, i32 1
  store i8 1, i8* %557, align 8
  br label %558

558:                                              ; preds = %552, %556
  %559 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %560 = icmp ne i8 %553, 0
  %561 = or i1 %282, %560
  call void @_ZN5blink10PaintLayer27SetHasCompositingDescendantEb(%"class.blink::PaintLayer"* %559, i1 zeroext %561) #7
  %562 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %563 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %562, i64 0, i32 1
  %564 = bitcast [6 x i8]* %563 to i48*
  %565 = load i48, i48* %564, align 1
  %566 = and i48 %565, 2
  %567 = icmp eq i48 %566, 0
  br i1 %567, label %574, label %568

568:                                              ; preds = %558
  %569 = icmp ne i64 %471, 0
  %570 = or i1 %569, %554
  br i1 %570, label %571, label %573

571:                                              ; preds = %568
  %572 = or i64 %471, 4398046511104
  br label %837

573:                                              ; preds = %568
  call void @_ZN5blink20PaintLayerCompositor25SetCompositingModeEnabledEb(%"class.blink::PaintLayerCompositor"* %28, i1 zeroext false) #7
  br label %826

574:                                              ; preds = %558
  %575 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %261, align 8
  %576 = icmp eq %"class.blink::PaintLayer"* %575, null
  br i1 %576, label %584, label %577

577:                                              ; preds = %574
  %578 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %575, i64 0, i32 1
  %579 = bitcast [6 x i8]* %578 to i48*
  %580 = load i48, i48* %579, align 1
  %581 = and i48 %580, 2
  %582 = icmp eq i48 %581, 0
  %583 = or i1 %282, %582
  br i1 %583, label %585, label %587

584:                                              ; preds = %574
  br i1 %282, label %585, label %587

585:                                              ; preds = %577, %584
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap3AddEPNS_10PaintLayerERKNS_7IntRectEb(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3, %"class.blink::PaintLayer"* %562, %"class.blink::IntRect"* nonnull dereferenceable(16) %17, i1 zeroext %73)
  %586 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  br label %587

587:                                              ; preds = %577, %585, %584
  %588 = phi %"class.blink::PaintLayer"* [ %562, %577 ], [ %586, %585 ], [ %562, %584 ]
  %589 = load i8, i8* %19, align 1, !range !4
  %590 = icmp eq i8 %589, 0
  br i1 %560, label %591, label %708

591:                                              ; preds = %587
  %592 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %588, i64 0, i32 17, i32 0, i32 0, i32 0
  %593 = load %"struct.blink::PaintLayerRareData"*, %"struct.blink::PaintLayerRareData"** %592, align 8
  %594 = icmp eq %"struct.blink::PaintLayerRareData"* %593, null
  br i1 %594, label %599, label %595

595:                                              ; preds = %591
  %596 = getelementptr inbounds %"struct.blink::PaintLayerRareData", %"struct.blink::PaintLayerRareData"* %593, i64 0, i32 3
  %597 = load i64, i64* %596, align 8
  %598 = and i64 %597, 1365799600128
  br label %599

599:                                              ; preds = %595, %591
  %600 = phi i64 [ %598, %595 ], [ 0, %591 ]
  %601 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %588, i64 0, i32 1
  %602 = bitcast [6 x i8]* %601 to i48*
  %603 = load i48, i48* %602, align 1
  %604 = shl i48 %603, 30
  %605 = and i48 %604, 1099511627776
  %606 = zext i48 %605 to i64
  %607 = or i64 %600, %606
  %608 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %588, i64 0, i32 2
  %609 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %608, align 8
  %610 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %609, i64 0, i32 0
  %611 = bitcast %"class.blink::LayoutBoxModelObject"* %609 to i1 (%"class.blink::LayoutObject"*, i32)***
  %612 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %611, align 8
  %613 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %612, i64 92
  %614 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %613, align 8
  %615 = call zeroext i1 %614(%"class.blink::LayoutObject"* %610, i32 54) #7
  br i1 %615, label %616, label %632

616:                                              ; preds = %599
  %617 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %608, align 8
  %618 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %617, i64 0, i32 0, i32 4
  %619 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %618 to i96*
  %620 = load i96, i96* %619, align 4
  %621 = and i96 %620, 16777216
  %622 = icmp eq i96 %621, 0
  br i1 %622, label %623, label %627

623:                                              ; preds = %616
  %624 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %617, i64 0, i32 0, i32 6, i32 0, i32 0
  %625 = bitcast %"class.blink::Node"** %624 to %"class.blink::HTMLMediaElement"**
  %626 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %625, align 8
  br label %627

627:                                              ; preds = %623, %616
  %628 = phi %"class.blink::HTMLMediaElement"* [ %626, %623 ], [ null, %616 ]
  %629 = call zeroext i1 @_ZNK5blink16HTMLMediaElement12IsFullscreenEv(%"class.blink::HTMLMediaElement"* %628) #7
  %630 = or i64 %607, 2199023255552
  %631 = select i1 %629, i64 %630, i64 %607
  br label %632

632:                                              ; preds = %627, %599
  %633 = phi i64 [ %607, %599 ], [ %631, %627 ]
  br i1 %590, label %708, label %634

634:                                              ; preds = %632
  %635 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %608, align 8
  %636 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %635, i64 0, i32 0, i32 5, i32 0
  %637 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %636, align 8
  %638 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %637, i64 0, i32 0, i32 3, i32 0, i32 0
  %639 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %638, align 8
  %640 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %639, i64 0, i32 2, i32 0, i32 0
  %641 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %640, align 8
  %642 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %641, i64 0, i32 2, i32 0, i32 0
  %643 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %642, align 8
  %644 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %643, i64 0, i32 15, i32 0
  %645 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %644, align 8
  %646 = icmp ne %"class.blink::StyleReflection"* %645, null
  %647 = call zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"* %637, i1 zeroext %646) #7
  br i1 %647, label %675, label %648

648:                                              ; preds = %634
  %649 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %637, i64 0, i32 0, i32 2, i32 0, i32 0
  %650 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %649, align 8
  %651 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %650, i64 0, i32 3
  %652 = load i8, i8* %651, align 4
  %653 = and i8 %652, 16
  %654 = icmp eq i8 %653, 0
  %655 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %637, i64 0, i32 0, i32 9
  %656 = bitcast [20 x i8]* %655 to i160*
  %657 = load i160, i160* %656, align 8
  %658 = and i160 %657, 7253554917687775048237056
  %659 = icmp eq i160 %658, 0
  %660 = and i1 %654, %659
  %661 = and i160 %657, 1190036353683150593851392
  %662 = icmp ne i160 %661, 340010386766614455386112
  %663 = or i1 %662, %660
  br i1 %663, label %675, label %664

664:                                              ; preds = %648
  %665 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %638, align 8
  %666 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %665, i64 0, i32 2, i32 0, i32 0
  %667 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %666, align 8
  %668 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %667, i64 0, i32 2, i32 0, i32 0
  %669 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %668, align 8
  %670 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %669, i64 0, i32 45
  %671 = load i32, i32* %670, align 4
  %672 = icmp slt i32 %671, 0
  %673 = or i64 %633, 549755813888
  %674 = select i1 %672, i64 %673, i64 %633
  br label %675

675:                                              ; preds = %664, %648, %634
  %676 = phi i64 [ %633, %634 ], [ %633, %648 ], [ %674, %664 ]
  %677 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %638, align 8
  %678 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %677, i64 0, i32 2, i32 0, i32 0
  %679 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %678, align 8
  %680 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %679, i64 0, i32 2, i32 0, i32 0
  %681 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %680, align 8
  %682 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %681, i64 0, i32 32
  %683 = load float, float* %682, align 4
  %684 = fcmp ogt float %683, 0.000000e+00
  br i1 %684, label %706, label %685

685:                                              ; preds = %675
  %686 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %677, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %687 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %686, align 8
  %688 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %677, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %689 = load i32, i32* %688, align 4
  %690 = zext i32 %689 to i64
  %691 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %687, i64 %690
  %692 = icmp eq i32 %689, 0
  br i1 %692, label %708, label %695

693:                                              ; preds = %695
  %694 = icmp eq %class.scoped_refptr.638* %705, %691
  br i1 %694, label %708, label %695

695:                                              ; preds = %685, %693
  %696 = phi %class.scoped_refptr.638* [ %705, %693 ], [ %687, %685 ]
  %697 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %696, i64 0, i32 0
  %698 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %697, align 8
  %699 = bitcast %"class.blink::TransformOperation"* %698 to i32 (%"class.blink::TransformOperation"*)***
  %700 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %699, align 8
  %701 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %700, i64 7
  %702 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %701, align 8
  %703 = call i32 %702(%"class.blink::TransformOperation"* %698) #7
  %704 = icmp eq i32 %703, 19
  %705 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %696, i64 1
  br i1 %704, label %706, label %693

706:                                              ; preds = %695, %675
  %707 = or i64 %676, 274877906944
  br label %708

708:                                              ; preds = %693, %632, %587, %685, %706
  %709 = phi i64 [ 0, %587 ], [ %633, %632 ], [ %707, %706 ], [ %676, %685 ], [ %676, %693 ]
  %710 = select i1 %74, i64 %709, i64 0
  %711 = or i64 %710, %471
  %712 = and i8 %472, 1
  %713 = icmp eq i8 %712, 0
  %714 = and i1 %101, %713
  %715 = icmp ne i64 %709, 0
  %716 = and i1 %714, %715
  br i1 %716, label %717, label %723

717:                                              ; preds = %708
  %718 = bitcast %"class.blink::PaintLayer"** %13 to i64*
  %719 = load i64, i64* %718, align 8
  %720 = bitcast %"class.blink::CompositingRequirementsUpdater::RecursionData"* %18 to i64*
  store i64 %719, i64* %720, align 8
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap29BeginNewOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3)
  %721 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap3AddEPNS_10PaintLayerERKNS_7IntRectEb(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3, %"class.blink::PaintLayer"* %721, %"class.blink::IntRect"* dereferenceable(16) %7, i1 zeroext %73)
  %722 = inttoptr i64 %719 to %"class.blink::PaintLayer"*
  br label %724

723:                                              ; preds = %708
  br i1 %713, label %745, label %724

724:                                              ; preds = %723, %717
  %725 = phi %"class.blink::PaintLayer"* [ %575, %723 ], [ %722, %717 ]
  %726 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %727 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %726, i64 0, i32 2
  %728 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %727, align 8
  %729 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %728, i64 0, i32 0, i32 5, i32 0
  %730 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %729, align 8
  %731 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %730, i64 0, i32 0, i32 3, i32 0, i32 0
  %732 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %731, align 8
  %733 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %732, i64 0, i32 2, i32 0, i32 0
  %734 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %733, align 8
  %735 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %734, i64 0, i32 2, i32 0, i32 0
  %736 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %735, align 8
  %737 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %736, i64 0, i32 45
  %738 = load i32, i32* %737, align 4
  %739 = and i32 %738, 480
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %743, label %741

741:                                              ; preds = %724
  %742 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %4, i64 0, i32 2
  store i8 1, i8* %742, align 1
  br label %743

743:                                              ; preds = %724, %741
  %744 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %4, i64 0, i32 1
  store i8 1, i8* %744, align 8
  br label %745

745:                                              ; preds = %723, %743
  %746 = phi %"class.blink::PaintLayer"* [ %575, %723 ], [ %725, %743 ]
  %747 = load i8, i8* %264, align 2, !range !4
  %748 = icmp eq i8 %747, 0
  %749 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  br i1 %748, label %764, label %750

750:                                              ; preds = %745
  %751 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %749, i64 0, i32 2
  %752 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %751, align 8
  %753 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %752, i64 0, i32 0, i32 5, i32 0
  %754 = bitcast %"class.blink::ComputedStyle"** %753 to %"class.blink::ComputedStyleBase"**
  %755 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %754, align 8
  %756 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %755, i64 0, i32 3, i32 0, i32 0
  %757 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %756, align 8
  %758 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %757, i64 0, i32 3, i32 0, i32 0
  %759 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %758, align 8
  %760 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %759, i64 0, i32 39
  %761 = load i32, i32* %760, align 4
  %762 = and i32 %761, 2097152
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %766, label %764

764:                                              ; preds = %745, %750
  %765 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::RecursionData", %"class.blink::CompositingRequirementsUpdater::RecursionData"* %4, i64 0, i32 3
  store i8 0, i8* %765, align 2
  br label %766

766:                                              ; preds = %750, %764
  %767 = icmp eq %"class.blink::PaintLayer"* %746, %749
  %768 = or i1 %282, %767
  br i1 %768, label %769, label %770

769:                                              ; preds = %766
  call void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap34FinishCurrentOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"* %3)
  br label %770

770:                                              ; preds = %766, %769
  br i1 %590, label %771, label %821

771:                                              ; preds = %770
  %772 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %773 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %772, i64 0, i32 17, i32 0, i32 0, i32 0
  %774 = load %"struct.blink::PaintLayerRareData"*, %"struct.blink::PaintLayerRareData"** %773, align 8
  %775 = icmp eq %"struct.blink::PaintLayerRareData"* %774, null
  br i1 %775, label %821, label %776

776:                                              ; preds = %771
  %777 = getelementptr inbounds %"struct.blink::PaintLayerRareData", %"struct.blink::PaintLayerRareData"* %774, i64 0, i32 1, i32 0, i32 0, i32 0
  %778 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %777, align 8
  %779 = icmp eq %"class.blink::TransformationMatrix"* %778, null
  br i1 %779, label %821, label %780

780:                                              ; preds = %776
  %781 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 0, i64 2
  %782 = load double, double* %781, align 8
  %783 = fcmp oeq double %782, 0.000000e+00
  br i1 %783, label %784, label %821

784:                                              ; preds = %780
  %785 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 0, i64 3
  %786 = load double, double* %785, align 8
  %787 = fcmp oeq double %786, 0.000000e+00
  br i1 %787, label %788, label %821

788:                                              ; preds = %784
  %789 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 1, i64 2
  %790 = load double, double* %789, align 8
  %791 = fcmp oeq double %790, 0.000000e+00
  br i1 %791, label %792, label %821

792:                                              ; preds = %788
  %793 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 1, i64 3
  %794 = load double, double* %793, align 8
  %795 = fcmp oeq double %794, 0.000000e+00
  br i1 %795, label %796, label %821

796:                                              ; preds = %792
  %797 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 2, i64 0
  %798 = load double, double* %797, align 8
  %799 = fcmp oeq double %798, 0.000000e+00
  br i1 %799, label %800, label %821

800:                                              ; preds = %796
  %801 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 2, i64 1
  %802 = load double, double* %801, align 8
  %803 = fcmp oeq double %802, 0.000000e+00
  br i1 %803, label %804, label %821

804:                                              ; preds = %800
  %805 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 2, i64 2
  %806 = load double, double* %805, align 8
  %807 = fcmp oeq double %806, 1.000000e+00
  br i1 %807, label %808, label %821

808:                                              ; preds = %804
  %809 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 2, i64 3
  %810 = load double, double* %809, align 8
  %811 = fcmp oeq double %810, 0.000000e+00
  br i1 %811, label %812, label %821

812:                                              ; preds = %808
  %813 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 3, i64 2
  %814 = load double, double* %813, align 8
  %815 = fcmp oeq double %814, 0.000000e+00
  br i1 %815, label %816, label %821

816:                                              ; preds = %812
  %817 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %778, i64 0, i32 0, i32 0, i64 3, i64 3
  %818 = load double, double* %817, align 8
  %819 = fcmp une double %818, 1.000000e+00
  %820 = zext i1 %819 to i8
  br label %821

821:                                              ; preds = %816, %812, %808, %804, %800, %796, %792, %788, %784, %780, %776, %771, %770
  %822 = phi i8 [ 1, %770 ], [ 0, %776 ], [ 0, %771 ], [ 1, %812 ], [ 1, %808 ], [ 1, %804 ], [ 1, %800 ], [ 1, %796 ], [ 1, %792 ], [ 1, %788 ], [ 1, %784 ], [ 1, %780 ], [ %820, %816 ]
  %823 = load i8, i8* %5, align 1, !range !4
  %824 = or i8 %823, %822
  store i8 %824, i8* %5, align 1
  %825 = icmp eq i64 %711, 0
  br i1 %825, label %826, label %837

826:                                              ; preds = %821, %573
  %827 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %828 = call i32 @_ZNK5blink10PaintLayer19GetCompositingStateEv(%"class.blink::PaintLayer"* %827) #7
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %837

830:                                              ; preds = %826
  %831 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %832 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %831, i64 0, i32 1
  %833 = bitcast [6 x i8]* %832 to i48*
  %834 = load i48, i48* %833, align 1
  %835 = and i48 %834, 2048
  %836 = icmp eq i48 %835, 0
  br i1 %836, label %841, label %837

837:                                              ; preds = %830, %821, %571, %826
  %838 = phi i1 [ true, %571 ], [ false, %826 ], [ false, %830 ], [ true, %821 ]
  %839 = phi i64 [ %572, %571 ], [ 0, %826 ], [ 0, %830 ], [ %711, %821 ]
  %840 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  call void @_ZN5blink10PaintLayer34SetNeedsCompositingLayerAssignmentEv(%"class.blink::PaintLayer"* %840) #7
  br label %843

841:                                              ; preds = %830
  br i1 %282, label %842, label %843

842:                                              ; preds = %841
  call void @_ZN5blink10PaintLayer50PropagateDescendantNeedsCompositingLayerAssignmentEv(%"class.blink::PaintLayer"* %831) #7
  br label %843

843:                                              ; preds = %841, %842, %837
  %844 = phi i1 [ false, %841 ], [ false, %842 ], [ %838, %837 ]
  %845 = phi i64 [ 0, %841 ], [ 0, %842 ], [ %839, %837 ]
  %846 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  call void @_ZN5blink10PaintLayer21SetCompositingReasonsEmm(%"class.blink::PaintLayer"* %846, i64 %845, i64 -1) #7
  %847 = xor i1 %346, true
  %848 = or i1 %370, %847
  br i1 %848, label %876, label %849

849:                                              ; preds = %843
  %850 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %851 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %850, i64 0, i32 2
  %852 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %851, align 8
  %853 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %854 = icmp eq i8 %853, 0
  br i1 %854, label %873, label %855

855:                                              ; preds = %849
  %856 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %852, i64 0, i32 0, i32 4
  %857 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %856 to i96*
  %858 = load i96, i96* %857, align 4
  %859 = and i96 %858, 16777216
  %860 = icmp eq i96 %859, 0
  br i1 %860, label %861, label %873

861:                                              ; preds = %855
  %862 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %852, i64 0, i32 0, i32 6, i32 0, i32 0
  %863 = load %"class.blink::Node"*, %"class.blink::Node"** %862, align 8
  %864 = icmp eq %"class.blink::Node"* %863, null
  br i1 %864, label %873, label %865

865:                                              ; preds = %861
  %866 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %863, i64 0, i32 1
  %867 = load i32, i32* %866, align 8
  %868 = and i32 %867, 67108876
  %869 = icmp eq i32 %868, 67108864
  br i1 %869, label %870, label %873, !prof !5

870:                                              ; preds = %865
  %871 = bitcast %"class.blink::Node"* %863 to %"class.blink::Element"*
  %872 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %871) #7
  br label %873

873:                                              ; preds = %849, %855, %861, %865, %870
  %874 = phi %"class.blink::DisplayLockContext"* [ null, %849 ], [ %872, %870 ], [ null, %865 ], [ null, %861 ], [ null, %855 ]
  %875 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %874, i64 0, i32 12
  store i8 1, i8* %875, align 4
  br label %876

876:                                              ; preds = %843, %873
  %877 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  %878 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %877, i64 0, i32 1
  %879 = bitcast [6 x i8]* %878 to i48*
  %880 = load i48, i48* %879, align 1
  %881 = and i48 %880, -2147483649
  store i48 %881, i48* %879, align 1
  %882 = and i64 %845, 1073741824
  %883 = icmp eq i64 %882, 0
  br i1 %883, label %888, label %884

884:                                              ; preds = %876
  %885 = getelementptr inbounds %"struct.blink::CompositingReasonsStats", %"struct.blink::CompositingReasonsStats"* %8, i64 0, i32 0
  %886 = load i64, i64* %885, align 8
  %887 = add i64 %886, 1
  store i64 %887, i64* %885, align 8
  br label %888

888:                                              ; preds = %876, %884
  %889 = and i64 %845, 3840
  %890 = icmp eq i64 %889, 0
  br i1 %890, label %895, label %891

891:                                              ; preds = %888
  %892 = getelementptr inbounds %"struct.blink::CompositingReasonsStats", %"struct.blink::CompositingReasonsStats"* %8, i64 0, i32 1
  %893 = load i64, i64* %892, align 8
  %894 = add i64 %893, 1
  store i64 %894, i64* %892, align 8
  br label %895

895:                                              ; preds = %888, %891
  %896 = and i64 %845, 536870912
  %897 = icmp eq i64 %896, 0
  br i1 %897, label %902, label %898

898:                                              ; preds = %895
  %899 = getelementptr inbounds %"struct.blink::CompositingReasonsStats", %"struct.blink::CompositingReasonsStats"* %8, i64 0, i32 2
  %900 = load i64, i64* %899, align 8
  %901 = add i64 %900, 1
  store i64 %901, i64* %899, align 8
  br label %902

902:                                              ; preds = %895, %898
  %903 = and i64 %845, 4507997908746239
  %904 = icmp eq i64 %903, 0
  br i1 %904, label %905, label %909

905:                                              ; preds = %902
  %906 = getelementptr inbounds %"struct.blink::CompositingReasonsStats", %"struct.blink::CompositingReasonsStats"* %8, i64 0, i32 3
  %907 = load i64, i64* %906, align 8
  %908 = add i64 %907, 1
  store i64 %908, i64* %906, align 8
  br label %909

909:                                              ; preds = %902, %905
  br i1 %844, label %910, label %914

910:                                              ; preds = %909
  %911 = getelementptr inbounds %"struct.blink::CompositingReasonsStats", %"struct.blink::CompositingReasonsStats"* %8, i64 0, i32 4
  %912 = load i64, i64* %911, align 8
  %913 = add i64 %912, 1
  store i64 %913, i64* %911, align 8
  br label %914

914:                                              ; preds = %910, %909
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %260) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %239) #7
  ret void
}

declare %"class.blink::PaintLayerCompositor"* @_ZN5blink10LayoutView10CompositorEv(%"class.blink::LayoutView"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink10PaintLayer24NeedsCompositedScrollingEv(%"class.blink::PaintLayer"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink10PaintLayer15CanBeCompositedEv(%"class.blink::PaintLayer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::PaintLayer"** @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %24, i64 %25
  ret %"class.blink::PaintLayer"** %26
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink10PaintLayer20ScrollsWithRespectToEPKS0_(%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2089"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare { i64, i64 } @_ZNK5blink10PaintLayer44ExpandedBoundingBoxForCompositingOverlapTestEb(%"class.blink::PaintLayer"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink30CompositingRequirementsUpdater10OverlapMap14OverlapsLayersERKNS_7IntRectEb(%"class.blink::CompositingRequirementsUpdater::OverlapMap"*, %"class.blink::IntRect"* dereferenceable(16), i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = tail call dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZNK3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"* %4, i32 %7) #7
  %9 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 0, i32 1
  %10 = tail call zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"* %1, %"class.blink::IntRect"* dereferenceable(16) %9) #7
  br i1 %10, label %11, label %25

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 0, i32 0
  br label %20

17:                                               ; preds = %20
  %18 = load i32, i32* %12, align 4
  %19 = icmp ult i32 %24, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %17, %15
  %21 = phi i32 [ 0, %15 ], [ %24, %17 ]
  %22 = tail call dereferenceable(16) %"class.blink::IntRect"* @_ZNK3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2083"* %16, i32 %21) #7
  %23 = tail call zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"* %22, %"class.blink::IntRect"* dereferenceable(16) %1) #7
  %24 = add nuw i32 %21, 1
  br i1 %23, label %46, label %17

25:                                               ; preds = %17, %3, %11
  br i1 %2, label %46, label %26

26:                                               ; preds = %25
  %27 = load i32, i32* %5, align 4
  %28 = add i32 %27, -1
  %29 = tail call dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZNK3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"* %4, i32 %28) #7
  %30 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %29, i64 0, i32 1, i32 1
  %31 = tail call zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"* %1, %"class.blink::IntRect"* dereferenceable(16) %30) #7
  br i1 %31, label %32, label %46

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %29, i64 0, i32 1, i32 0
  br label %41

38:                                               ; preds = %41
  %39 = load i32, i32* %33, align 4
  %40 = icmp ult i32 %45, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %38, %36
  %42 = phi i32 [ 0, %36 ], [ %45, %38 ]
  %43 = tail call dereferenceable(16) %"class.blink::IntRect"* @_ZNK3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2083"* %37, i32 %42) #7
  %44 = tail call zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"* %43, %"class.blink::IntRect"* dereferenceable(16) %1) #7
  %45 = add nuw i32 %42, 1
  br i1 %44, label %46, label %38

46:                                               ; preds = %20, %41, %38, %32, %26, %25
  %47 = phi i1 [ false, %25 ], [ false, %26 ], [ false, %32 ], [ false, %38 ], [ true, %41 ], [ true, %20 ]
  ret i1 %47
}

declare zeroext i1 @_ZNK5blink21LayoutEmbeddedContent36ContentDocumentContainsGraphicsLayerEv(%"class.blink::LayoutEmbeddedContent"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap29BeginNewOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %9, label %31

9:                                                ; preds = %1
  %10 = lshr i32 %7, 2
  %11 = add nuw i32 %7, 1
  %12 = add i32 %11, %10
  %13 = icmp ugt i32 %12, 4
  %14 = select i1 %13, i32 %12, i32 4
  %15 = icmp ugt i32 %14, %5
  %16 = select i1 %15, i32 %14, i32 %5
  %17 = icmp ult i32 %7, %16
  br i1 %17, label %18, label %31, !prof !2

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"** %19, align 8
  %21 = icmp eq %"struct.blink::OverlapMapContainers"* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = zext i32 %16 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink20OverlapMapContainersEEEmm(i64 %23) #7
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20OverlapMapContainersEEEPKcv, i64 0, i64 0)) #7
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = udiv i64 %24, 2112
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %6, align 8
  br label %31

30:                                               ; preds = %18
  tail call void @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2080"* %2, i32 %16) #7
  br label %31

31:                                               ; preds = %30, %22, %9, %1
  %32 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"** %32, align 8
  %34 = load i32, i32* %3, align 4
  %35 = zext i32 %5 to i64
  %36 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %33, i64 %35
  %37 = icmp eq i32 %34, %5
  br i1 %37, label %58, label %38

38:                                               ; preds = %31
  %39 = zext i32 %34 to i64
  %40 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %33, i64 %39
  br label %41

41:                                               ; preds = %41, %38
  %42 = phi %"struct.blink::OverlapMapContainers"* [ %56, %41 ], [ %40, %38 ]
  %43 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 2080, i1 false) #7
  %44 = bitcast %"struct.blink::OverlapMapContainers"* %42 to i8**
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 64, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 0, i32 1
  %48 = bitcast %"class.blink::IntRect"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 16, i1 false) #7
  %49 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %51 = bitcast %"class.blink::OverlapMapContainer"* %49 to i8**
  store i8* %50, i8** %51, align 8
  %52 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 64, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 0, i32 1, i32 1
  %55 = bitcast %"class.blink::IntRect"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 0, i64 16, i1 false) #7
  %56 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %42, i64 1
  %57 = icmp eq %"struct.blink::OverlapMapContainers"* %56, %36
  br i1 %57, label %58, label %41

58:                                               ; preds = %41, %31
  store i32 %5, i32* %3, align 4
  ret void
}

declare %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"*) local_unnamed_addr #3

declare void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap3AddEPNS_10PaintLayerERKNS_7IntRectEb(%"class.blink::CompositingRequirementsUpdater::OverlapMap"*, %"class.blink::PaintLayer"*, %"class.blink::IntRect"* dereferenceable(16), i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %57, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %57, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, -2
  %17 = tail call dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"* %13, i32 %16) #7
  br i1 %3, label %18, label %37

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %33, label %24, !prof !3

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %25, align 8
  %27 = zext i32 %20 to i64
  %28 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %26, i64 %27
  %29 = bitcast %"class.blink::IntRect"* %28 to i8*
  %30 = bitcast %"class.blink::IntRect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 16, i1 false) #7
  %31 = load i32, i32* %19, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %19, align 4
  br label %35

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.2083"* %34, %"class.blink::IntRect"* dereferenceable(16) %2) #7
  br label %35

35:                                               ; preds = %24, %33
  %36 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 0, i32 1
  tail call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %36, %"class.blink::IntRect"* dereferenceable(16) %2) #7
  br label %57

37:                                               ; preds = %12
  %38 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %53, label %44, !prof !3

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %45, align 8
  %47 = zext i32 %40 to i64
  %48 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %46, i64 %47
  %49 = bitcast %"class.blink::IntRect"* %48 to i8*
  %50 = bitcast %"class.blink::IntRect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 16, i1 false) #7
  %51 = load i32, i32* %39, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %39, align 4
  br label %55

53:                                               ; preds = %37
  %54 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %38, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.2083"* %54, %"class.blink::IntRect"* dereferenceable(16) %2) #7
  br label %55

55:                                               ; preds = %44, %53
  %56 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %17, i64 0, i32 1, i32 1
  tail call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %56, %"class.blink::IntRect"* dereferenceable(16) %2) #7
  br label %57

57:                                               ; preds = %4, %8, %55, %35
  ret void
}

declare { i64, i64 } @_ZNK5blink10PaintLayer26ClippedAbsoluteBoundingBoxEv(%"class.blink::PaintLayer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30CompositingRequirementsUpdater10OverlapMap34FinishCurrentOverlapTestingContextEv(%"class.blink::CompositingRequirementsUpdater::OverlapMap"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -2
  %6 = tail call dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"* %2, i32 %5) #7
  %7 = load i32, i32* %3, align 4
  %8 = add i32 %7, -1
  %9 = tail call dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"* %2, i32 %8) #7
  %10 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %6, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  tail call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.2083"* %10, %"class.blink::IntRect"* %12, i32 %14) #7
  %15 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %6, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %9, i64 0, i32 0, i32 1
  tail call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %15, %"class.blink::IntRect"* dereferenceable(16) %16) #7
  %17 = load i32, i32* %3, align 4
  %18 = add i32 %17, -2
  %19 = tail call dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"* %2, i32 %18) #7
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, -1
  %22 = tail call dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"* %2, i32 %21) #7
  %23 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %19, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %24, align 8
  %26 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  tail call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.2083"* %23, %"class.blink::IntRect"* %25, i32 %27) #7
  %28 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %19, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %22, i64 0, i32 1, i32 1
  tail call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %28, %"class.blink::IntRect"* dereferenceable(16) %29) #7
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, -1
  %32 = getelementptr inbounds %"class.blink::CompositingRequirementsUpdater::OverlapMap", %"class.blink::CompositingRequirementsUpdater::OverlapMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"** %32, align 8
  %34 = zext i32 %30 to i64
  %35 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %33, i64 %34
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %33, i64 %36
  br label %38

38:                                               ; preds = %66, %1
  %39 = phi %"struct.blink::OverlapMapContainers"* [ %67, %66 ], [ %37, %1 ]
  %40 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %39, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %39, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %38
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %38
  %46 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %46, align 8
  %48 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %39, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %49 = bitcast i8* %48 to %"class.blink::IntRect"*
  %50 = icmp eq %"class.blink::IntRect"* %47, %49
  br i1 %50, label %53, label %51, !prof !2

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %40, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"* %52, %"class.blink::IntRect"* %47) #7
  br label %53

53:                                               ; preds = %51, %45
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %46, align 8
  %54 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57, !prof !3

57:                                               ; preds = %53
  store i32 0, i32* %54, align 4
  br label %58

58:                                               ; preds = %57, %53
  %59 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %59, align 8
  %61 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %39, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %62 = bitcast i8* %61 to %"class.blink::IntRect"*
  %63 = icmp eq %"class.blink::IntRect"* %60, %62
  br i1 %63, label %66, label %64, !prof !2

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %39, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"* %65, %"class.blink::IntRect"* %60) #7
  br label %66

66:                                               ; preds = %64, %58
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %59, align 8
  %67 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %39, i64 1
  %68 = icmp eq %"struct.blink::OverlapMapContainers"* %67, %35
  br i1 %68, label %69, label %38

69:                                               ; preds = %66
  store i32 %31, i32* %3, align 4
  ret void
}

declare void @_ZN5blink10PaintLayer37SetShouldIsolateCompositedDescendantsEb(%"class.blink::PaintLayer"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink10PaintLayer27SetHasCompositingDescendantEb(%"class.blink::PaintLayer"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink20PaintLayerCompositor25SetCompositingModeEnabledEb(%"class.blink::PaintLayerCompositor"*, i1 zeroext) local_unnamed_addr #3

declare i32 @_ZNK5blink10PaintLayer19GetCompositingStateEv(%"class.blink::PaintLayer"*) local_unnamed_addr #3

declare void @_ZN5blink10PaintLayer34SetNeedsCompositingLayerAssignmentEv(%"class.blink::PaintLayer"*) local_unnamed_addr #3

declare void @_ZN5blink10PaintLayer50PropagateDescendantNeedsCompositingLayerAssignmentEv(%"class.blink::PaintLayer"*) local_unnamed_addr #3

declare void @_ZN5blink10PaintLayer21SetCompositingReasonsEmm(%"class.blink::PaintLayer"*, i64, i64) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"*, %"class.blink::IntRect"*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.blink::IntRect"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #7
  ret void
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZNK3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %24, i64 %25
  ret %"struct.blink::OverlapMapContainers"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::IntRect"* @_ZNK3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2083"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %24, i64 %25
  ret %"class.blink::IntRect"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2080"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2080"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink20OverlapMapContainersENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"struct.blink::OverlapMapContainers"* %6, %"struct.blink::OverlapMapContainers"* %10, %"struct.blink::OverlapMapContainers"* null, i1 zeroext true) #7
  %13 = bitcast %"struct.blink::OverlapMapContainers"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #7
  br label %32

14:                                               ; preds = %2
  %15 = zext i32 %1 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink20OverlapMapContainersEEEmm(i64 %15) #7
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20OverlapMapContainersEEEPKcv, i64 0, i64 0)) #7
  %18 = udiv i64 %16, 2112
  %19 = bitcast i8* %17 to %"struct.blink::OverlapMapContainers"*
  %20 = ptrtoint i8* %17 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %22, i64 %25
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink20OverlapMapContainersENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"struct.blink::OverlapMapContainers"* %22, %"struct.blink::OverlapMapContainers"* %26, %"struct.blink::OverlapMapContainers"* %19, i1 zeroext false) #7
  %27 = bitcast %"class.WTF::Vector.2080"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #7
  %29 = bitcast %"class.WTF::Vector.2080"* %0 to i64*
  store atomic i64 %20, i64* %29 monotonic, align 8
  %30 = trunc i64 %18 to i32
  %31 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink20OverlapMapContainersEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1015808
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1015808) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 2112
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink20OverlapMapContainersENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"*, i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %5 = icmp eq %"struct.blink::OverlapMapContainers"* %0, %1
  br i1 %5, label %59, label %6

6:                                                ; preds = %4, %55
  %7 = phi %"struct.blink::OverlapMapContainers"* [ %57, %55 ], [ %0, %4 ]
  %8 = phi %"struct.blink::OverlapMapContainers"* [ %56, %55 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %11 = bitcast %"struct.blink::OverlapMapContainers"* %8 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 64, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.2084"* %9, %"class.WTF::VectorBuffer.2084"* dereferenceable(1040) %14, i64 0, i64 0) #7
  %15 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 0, i32 1
  %16 = bitcast %"class.blink::IntRect"* %15 to i8*
  %17 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 0, i32 1
  %18 = bitcast %"class.blink::IntRect"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %18, i64 16, i1 false) #7
  %19 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %19, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %22 = bitcast %"class.blink::OverlapMapContainer"* %19 to i8**
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 64, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.2084"* %20, %"class.WTF::VectorBuffer.2084"* dereferenceable(1040) %25, i64 0, i64 0) #7
  %26 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 0, i32 1, i32 1
  %27 = bitcast %"class.blink::IntRect"* %26 to i8*
  %28 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 1, i32 1
  %29 = bitcast %"class.blink::IntRect"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %29, i64 16, i1 false) #7
  %30 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %6
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %6
  %36 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"class.blink::IntRect"*
  %40 = icmp eq %"class.blink::IntRect"* %37, %39
  br i1 %40, label %43, label %41, !prof !2

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::OverlapMapContainer", %"class.blink::OverlapMapContainer"* %30, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"* %42, %"class.blink::IntRect"* %37) #7
  br label %43

43:                                               ; preds = %41, %35
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !3

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  %49 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %49, align 8
  %51 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %52 = bitcast i8* %51 to %"class.blink::IntRect"*
  %53 = icmp eq %"class.blink::IntRect"* %50, %52
  br i1 %53, label %55, label %54, !prof !2

54:                                               ; preds = %48
  tail call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"* %14, %"class.blink::IntRect"* %50) #7
  br label %55

55:                                               ; preds = %48, %54
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %49, align 8
  %56 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %8, i64 1
  %57 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %7, i64 1
  %58 = icmp eq %"struct.blink::OverlapMapContainers"* %57, %1
  br i1 %58, label %59, label %6

59:                                               ; preds = %55, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.2084"*, %"class.WTF::VectorBuffer.2084"* dereferenceable(1040), i64, i64) local_unnamed_addr #1 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to %"class.blink::IntRect"*
  %12 = icmp eq %"class.blink::IntRect"* %9, %11
  %13 = ptrtoint %"class.blink::IntRect"* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to %"class.blink::IntRect"*
  %19 = icmp eq %"class.blink::IntRect"* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint %"class.blink::IntRect"* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.2084"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.2084"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"class.blink::IntRect"*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 0, i32 0
  %41 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi %"class.blink::IntRect"* [ %18, %14 ], [ %39, %32 ]
  %44 = phi %"class.blink::IntRect"* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi %"class.blink::IntRect"* [ null, %14 ], [ %9, %32 ]
  %49 = phi %"class.blink::IntRect"* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq %"class.blink::IntRect"* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi %"class.blink::IntRect"* [ %43, %52 ], [ null, %42 ]
  %60 = phi %"class.blink::IntRect"* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq %"class.blink::IntRect"* %48, null
  %66 = icmp ne %"class.blink::IntRect"* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer.2084"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer.2084"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer.2084"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.2084"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.2084", %"class.WTF::VectorBuffer.2084"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne %"class.blink::IntRect"* %48, null
  %84 = icmp ult i32 %47, 64
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 64
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %48, i64 %139
  %141 = bitcast %"class.blink::IntRect"* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %48, i64 %138
  %145 = bitcast %"class.blink::IntRect"* %144 to i8*
  %146 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %59, i64 %138
  %147 = bitcast %"class.blink::IntRect"* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 4
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr %"class.blink::IntRect", %"class.blink::IntRect"* %59, i64 %139
  %153 = icmp ult %"class.blink::IntRect"* %144, %152
  %154 = icmp ult %"class.blink::IntRect"* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !6, !noalias !9
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !6, !noalias !9
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !9
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !9
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !6, !noalias !9
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !6, !noalias !9
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !9
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !9
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !6, !noalias !9
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !6, !noalias !9
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !9
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !9
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !6, !noalias !9
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !6, !noalias !9
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !9
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !9
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !11

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !6, !noalias !9
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !6, !noalias !9
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !9
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !9
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !6, !noalias !9
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !6, !noalias !9
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !9
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !9
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !13

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %48, i64 %242
  %244 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %49, i64 %242
  %245 = icmp ne %"class.blink::IntRect"* %244, null
  %246 = icmp ne %"class.blink::IntRect"* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !2

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %48, i64 %249
  %251 = bitcast %"class.blink::IntRect"* %243 to i8*
  %252 = ptrtoint %"class.blink::IntRect"* %250 to i64
  %253 = ptrtoint %"class.blink::IntRect"* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast %"class.blink::IntRect"* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #7
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %59, i64 %258
  %260 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %60, i64 %258
  %261 = icmp ne %"class.blink::IntRect"* %260, null
  %262 = icmp ne %"class.blink::IntRect"* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !2

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %59, i64 %265
  %267 = bitcast %"class.blink::IntRect"* %259 to i8*
  %268 = ptrtoint %"class.blink::IntRect"* %266 to i64
  %269 = ptrtoint %"class.blink::IntRect"* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast %"class.blink::IntRect"* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #7
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 64
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

declare zeroext i1 @_ZNK5blink18DisplayLockContext22ShouldPrePaintChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(2112) %"struct.blink::OverlapMapContainers"* @_ZN3WTF6VectorIN5blink20OverlapMapContainersELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2080"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.2080", %"class.WTF::Vector.2080"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::OverlapMapContainers"*, %"struct.blink::OverlapMapContainers"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::OverlapMapContainers", %"struct.blink::OverlapMapContainers"* %24, i64 %25
  ret %"struct.blink::OverlapMapContainers"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.2083"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  %8 = icmp ugt %"class.blink::IntRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %7, i64 %10
  %12 = icmp ugt %"class.blink::IntRect"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2083"* %0, i32 %5) #7
  %14 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::IntRect"* %1 to i64
  %17 = ptrtoint %"class.blink::IntRect"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 4
  tail call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2083"* %0, i32 %5) #7
  %20 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::IntRect"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::IntRect"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %23, i64 %26
  %28 = bitcast %"class.blink::IntRect"* %27 to i8*
  %29 = bitcast %"class.blink::IntRect"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 16, i1 false) #7
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2083"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #7
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #7
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %31, align 8
  %33 = icmp eq %"class.blink::IntRect"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 64
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64 %37) #7
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv, i64 0, i64 0)) #7
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2083"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2083"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 64, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2083"* %0, i32 %27) #7
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2083"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 65
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %5, align 8
  %7 = icmp eq %"class.blink::IntRect"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::IntRect"*
  %10 = icmp eq %"class.blink::IntRect"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2083"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2083"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::IntRect"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #7
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"* %19, %"class.blink::IntRect"* nonnull %6) #7
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64 %30) #7
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv, i64 0, i64 0)) #7
  %33 = lshr i64 %31, 4
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::IntRect"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::IntRect"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #7
  %46 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::IntRect"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::IntRect"*
  %51 = icmp eq %"class.blink::IntRect"* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink7IntRectELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2084"* %53, %"class.blink::IntRect"* %48) #7
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2083"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.2083"*, %"class.blink::IntRect"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %29

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %14, align 8
  %16 = icmp ugt %"class.blink::IntRect"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %15, i64 %18
  %20 = icmp ugt %"class.blink::IntRect"* %19, %1
  br i1 %20, label %22, label %21

21:                                               ; preds = %17, %13
  tail call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2083"* %0, i32 %9) #7
  br label %29

22:                                               ; preds = %17
  %23 = ptrtoint %"class.blink::IntRect"* %1 to i64
  %24 = ptrtoint %"class.blink::IntRect"* %15 to i64
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 4
  tail call void @_ZN3WTF6VectorIN5blink7IntRectELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2083"* %0, i32 %9) #7
  %27 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %14, align 8
  %28 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %27, i64 %26
  br label %29

29:                                               ; preds = %22, %21, %3
  %30 = phi %"class.blink::IntRect"* [ %1, %3 ], [ %1, %21 ], [ %28, %22 ]
  %31 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %32, align 8
  %33 = load i32, i32* %7, align 4
  %34 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp ult i32 %9, %33
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %32, align 8
  br label %46

37:                                               ; preds = %29
  %38 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  %39 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %33) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %38, i8* %39) #7
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %32, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #7
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #7
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  %47 = getelementptr inbounds %"class.WTF::Vector.2083", %"class.WTF::Vector.2083"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %47, align 8
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %48, i64 %50
  %52 = icmp ne %"class.blink::IntRect"* %51, null
  %53 = icmp ne %"class.blink::IntRect"* %30, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %60, !prof !2

55:                                               ; preds = %46
  %56 = zext i32 %2 to i64
  %57 = bitcast %"class.blink::IntRect"* %51 to i8*
  %58 = bitcast %"class.blink::IntRect"* %30 to i8*
  %59 = shl nuw nsw i64 %56, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %57, i8* nonnull align 4 %58, i64 %59, i1 false) #7
  br label %60

60:                                               ; preds = %46, %55
  store i32 %9, i32* %7, align 4
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLMediaElement12IsFullscreenEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 9
  %6 = load float, float* %5, align 8
  %7 = fcmp olt float %6, 1.000000e+00
  br i1 %7, label %171, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %49, label %20

20:                                               ; preds = %8, %24
  %21 = phi i32* [ %25, %24 ], [ %14, %8 ]
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 251
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i32, i32* %21, i64 1
  %26 = icmp ult i32* %25, %18
  br i1 %26, label %20, label %34

27:                                               ; preds = %20
  %28 = ptrtoint i32* %21 to i64
  %29 = ptrtoint i32* %14 to i64
  %30 = sub i64 %28, %29
  %31 = lshr exact i64 %30, 2
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %171

34:                                               ; preds = %24, %27
  br label %35

35:                                               ; preds = %34, %39
  %36 = phi i32* [ %40, %39 ], [ %14, %34 ]
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1275
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i32, i32* %36, i64 1
  %41 = icmp ult i32* %40, %18
  br i1 %41, label %35, label %49

42:                                               ; preds = %35
  %43 = ptrtoint i32* %36 to i64
  %44 = ptrtoint i32* %14 to i64
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %171

49:                                               ; preds = %39, %8, %42
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 39
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 1048576
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %171

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %56, i64 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %171

62:                                               ; preds = %54
  br i1 %19, label %92, label %63

63:                                               ; preds = %62, %67
  %64 = phi i32* [ %68, %67 ], [ %14, %62 ]
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 145
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i32, i32* %64, i64 1
  %69 = icmp ult i32* %68, %18
  br i1 %69, label %63, label %77

70:                                               ; preds = %63
  %71 = ptrtoint i32* %64 to i64
  %72 = ptrtoint i32* %14 to i64
  %73 = sub i64 %71, %72
  %74 = lshr exact i64 %73, 2
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %171

77:                                               ; preds = %67, %70
  br label %78

78:                                               ; preds = %77, %82
  %79 = phi i32* [ %83, %82 ], [ %14, %77 ]
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 1169
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds i32, i32* %79, i64 1
  %84 = icmp ult i32* %83, %18
  br i1 %84, label %78, label %92

85:                                               ; preds = %78
  %86 = ptrtoint i32* %79 to i64
  %87 = ptrtoint i32* %14 to i64
  %88 = sub i64 %86, %87
  %89 = lshr exact i64 %88, 2
  %90 = trunc i64 %89 to i32
  %91 = icmp ne i32 %90, -1
  br label %92

92:                                               ; preds = %82, %62, %85
  %93 = phi i1 [ %91, %85 ], [ false, %62 ], [ false, %82 ]
  %94 = or i1 %93, %1
  br i1 %94, label %171, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %97, i64 0, i32 3
  %99 = load i8, i8* %98, align 4
  %100 = and i8 %99, 32
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %171

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %104 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %104, i64 0, i32 45
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 1073741824
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %171

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 13, i32 5
  %111 = bitcast [7 x i8]* %110 to i56*
  %112 = load i56, i56* %111, align 8
  %113 = and i56 %112, 281474976710656
  %114 = icmp eq i56 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 13
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %116) #7
  %117 = load i56, i56* %111, align 8
  br label %118

118:                                              ; preds = %115, %109
  %119 = phi i56 [ %112, %109 ], [ %117, %115 ]
  %120 = and i56 %119, 8796093022208
  %121 = icmp eq i56 %120, 0
  br i1 %121, label %122, label %171

122:                                              ; preds = %118
  %123 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %123, i64 0, i32 3, i32 0, i32 0
  %125 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %125, i64 0, i32 14, i32 0, i32 0, i32 0
  %127 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %127, i64 0, i32 2, i32 0, i32 0
  %129 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %128, align 8
  %130 = icmp eq %"class.blink::StyleImage"* %129, null
  br i1 %130, label %131, label %171

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %123, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %133, i64 0, i32 2, i32 0, i32 0
  %135 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %135, i64 0, i32 45
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, 480
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %171

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %135, i64 0, i32 16, i32 0, i32 0
  %142 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %170

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %125, i64 0, i32 2, i32 0, i32 0
  %148 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %148, i64 0, i32 2, i32 0, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %148, i64 0, i32 2, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %150, i64 %153
  %155 = icmp eq i32 %152, 0
  br i1 %155, label %171, label %156

156:                                              ; preds = %146, %160
  %157 = phi i32* [ %161, %160 ], [ %150, %146 ]
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 47
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds i32, i32* %157, i64 1
  %162 = icmp ult i32* %161, %154
  br i1 %162, label %156, label %171

163:                                              ; preds = %156
  %164 = ptrtoint i32* %157 to i64
  %165 = ptrtoint i32* %150 to i64
  %166 = sub i64 %164, %165
  %167 = lshr exact i64 %166, 2
  %168 = trunc i64 %167 to i32
  %169 = icmp eq i32 %168, -1
  br i1 %169, label %171, label %170

170:                                              ; preds = %163, %140
  br label %171

171:                                              ; preds = %160, %163, %131, %122, %102, %95, %49, %146, %118, %70, %54, %27, %2, %42, %170, %92
  %172 = phi i1 [ true, %49 ], [ true, %92 ], [ true, %95 ], [ true, %102 ], [ true, %122 ], [ true, %131 ], [ true, %170 ], [ false, %163 ], [ true, %42 ], [ true, %2 ], [ true, %27 ], [ true, %54 ], [ true, %70 ], [ true, %118 ], [ false, %146 ], [ false, %160 ]
  ret i1 %172
}

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #3

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.2089"*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2089"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.2089"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.2089"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.2089", %"class.WTF::Vector.2089"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2089"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.2089"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.2089"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2045"*, %"class.blink::PaintLayer"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %8 = icmp ugt %"class.blink::PaintLayer"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %7, i64 %10
  %12 = icmp ugt %"class.blink::PaintLayer"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::PaintLayer"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2045"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::PaintLayer"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::PaintLayer"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::PaintLayer"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.2045"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.2045"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::PaintLayer"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::PaintLayer"** %1 to i64
  %56 = ptrtoint %"class.blink::PaintLayer"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::PaintLayer"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2045"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::PaintLayer"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::PaintLayer"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.2045"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.2045"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::PaintLayer"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::PaintLayer"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::PaintLayer"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::PaintLayer"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %100, i64 %103
  %105 = bitcast %"class.blink::PaintLayer"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::PaintLayer"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 4001}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !12}
