; ModuleID = '../../extensions/renderer/activity_log_converter_strategy.cc'
source_filename = "../../extensions/renderer/activity_log_converter_strategy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ActivityLogConverterStrategy" = type { %"class.content::V8ValueConverter::Strategy" }
%"class.content::V8ValueConverter::Strategy" = type { i32 (...)** }
%"class.v8::Object" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::Value"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Isolate::DisallowJavascriptExecutionScope" = type <{ i32, [4 x i8], %"class.v8::Isolate"*, i8, i8, i8, [5 x i8] }>
%"class.v8::String::Utf8Value" = type <{ i8*, i32, [4 x i8] }>
%"class.v8::String" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Function" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::Array" = type { i8 }

@_ZTVN10extensions28ActivityLogConverterStrategyE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ActivityLogConverterStrategy"*)* @_ZN10extensions28ActivityLogConverterStrategyD2Ev to i8*), i8* bitcast (void (%"class.extensions::ActivityLogConverterStrategy"*)* @_ZN10extensions28ActivityLogConverterStrategyD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::ActivityLogConverterStrategy"*, %"class.v8::Object"*, %"class.std::__1::unique_ptr"*, %"class.v8::Isolate"*)* @_ZN10extensions28ActivityLogConverterStrategy12FromV8ObjectEN2v85LocalINS1_6ObjectEEEPNSt3__110unique_ptrIN4base5ValueENS5_14default_deleteIS8_EEEEPNS1_7IsolateE to i8*), i8* bitcast (i1 (%"class.extensions::ActivityLogConverterStrategy"*, %"class.v8::Array"*, %"class.std::__1::unique_ptr"*, %"class.v8::Isolate"*)* @_ZN10extensions28ActivityLogConverterStrategy11FromV8ArrayEN2v85LocalINS1_5ArrayEEEPNSt3__110unique_ptrIN4base5ValueENS5_14default_deleteIS8_EEEEPNS1_7IsolateE to i8*), i8* bitcast (i1 (%"class.content::V8ValueConverter::Strategy"*, %"class.v8::Object"*, %"class.std::__1::unique_ptr"*, %"class.v8::Isolate"*)* @_ZN7content16V8ValueConverter8Strategy17FromV8ArrayBufferEN2v85LocalINS2_6ObjectEEEPNSt3__110unique_ptrIN4base5ValueENS6_14default_deleteIS9_EEEEPNS2_7IsolateE to i8*), i8* bitcast (void ()* @_ZN7content16V8ValueConverter8Strategy12FromV8NumberEN2v85LocalINS2_6NumberEEEPNSt3__110unique_ptrIN4base5ValueENS6_14default_deleteIS9_EEEE to i8*), i8* bitcast (i1 (%"class.content::V8ValueConverter::Strategy"*, %"class.std::__1::unique_ptr"*)* @_ZN7content16V8ValueConverter8Strategy15FromV8UndefinedEPNSt3__110unique_ptrIN4base5ValueENS2_14default_deleteIS5_EEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"[JS Execution Exception]\00", align 1

@_ZN10extensions28ActivityLogConverterStrategyC1Ev = hidden unnamed_addr alias void (%"class.extensions::ActivityLogConverterStrategy"*), void (%"class.extensions::ActivityLogConverterStrategy"*)* @_ZN10extensions28ActivityLogConverterStrategyC2Ev
@_ZN10extensions28ActivityLogConverterStrategyD1Ev = hidden unnamed_addr alias void (%"class.extensions::ActivityLogConverterStrategy"*), void (%"class.extensions::ActivityLogConverterStrategy"*)* @_ZN10extensions28ActivityLogConverterStrategyD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions28ActivityLogConverterStrategyC2Ev(%"class.extensions::ActivityLogConverterStrategy"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ActivityLogConverterStrategy", %"class.extensions::ActivityLogConverterStrategy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions28ActivityLogConverterStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions28ActivityLogConverterStrategyD2Ev(%"class.extensions::ActivityLogConverterStrategy"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions28ActivityLogConverterStrategyD0Ev(%"class.extensions::ActivityLogConverterStrategy"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.extensions::ActivityLogConverterStrategy"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions28ActivityLogConverterStrategy12FromV8ObjectEN2v85LocalINS1_6ObjectEEEPNSt3__110unique_ptrIN4base5ValueENS5_14default_deleteIS8_EEEEPNS1_7IsolateE(%"class.extensions::ActivityLogConverterStrategy"* nocapture readnone, %"class.v8::Object"*, %"class.std::__1::unique_ptr"* nocapture, %"class.v8::Isolate"*) unnamed_addr #2 align 2 {
  %5 = tail call zeroext i1 @_ZNK10extensions28ActivityLogConverterStrategy14FromV8InternalEN2v85LocalINS1_6ObjectEEEPNSt3__110unique_ptrIN4base5ValueENS5_14default_deleteIS8_EEEEPNS1_7IsolateE(%"class.extensions::ActivityLogConverterStrategy"* undef, %"class.v8::Object"* %1, %"class.std::__1::unique_ptr"* %2, %"class.v8::Isolate"* %3)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions28ActivityLogConverterStrategy14FromV8InternalEN2v85LocalINS1_6ObjectEEEPNSt3__110unique_ptrIN4base5ValueENS5_14default_deleteIS8_EEEEPNS1_7IsolateE(%"class.extensions::ActivityLogConverterStrategy"* nocapture readnone, %"class.v8::Object"*, %"class.std::__1::unique_ptr"* nocapture, %"class.v8::Isolate"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.v8::String::Utf8Value", align 8
  %9 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #11
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %3) #11
  %10 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #11
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %6, %"class.v8::Isolate"* %3, i32 1) #11
  %11 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i32 0, i32 1) #11
  %12 = bitcast %"class.v8::Object"* %1 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %12) #11
  br i1 %13, label %14, label %44

14:                                               ; preds = %4
  %15 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 8) #11
  %16 = call %"class.v8::String"* @_ZN2v86String6ConcatEPNS_7IsolateENS_5LocalIS0_EES4_(%"class.v8::Isolate"* %3, %"class.v8::String"* %11, %"class.v8::String"* %15) #11
  %17 = bitcast %"class.v8::Object"* %1 to %"class.v8::Function"*
  %18 = call %"class.v8::Value"* @_ZNK2v88Function7GetNameEv(%"class.v8::Function"* %17) #11
  %19 = bitcast %"class.v8::Value"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 3
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %47

23:                                               ; preds = %14
  %24 = add i64 %20, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %20, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = icmp ult i16 %32, 64
  br i1 %33, label %34, label %47

34:                                               ; preds = %23
  %35 = bitcast %"class.v8::Value"* %18 to %"class.v8::String"*
  %36 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %35) #11
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %34
  %39 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 1) #11
  %40 = call %"class.v8::String"* @_ZN2v86String6ConcatEPNS_7IsolateENS_5LocalIS0_EES4_(%"class.v8::Isolate"* %3, %"class.v8::String"* %16, %"class.v8::String"* %39) #11
  %41 = call %"class.v8::String"* @_ZN2v86String6ConcatEPNS_7IsolateENS_5LocalIS0_EES4_(%"class.v8::Isolate"* %3, %"class.v8::String"* %40, %"class.v8::String"* %35) #11
  %42 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 2) #11
  %43 = call %"class.v8::String"* @_ZN2v86String6ConcatEPNS_7IsolateENS_5LocalIS0_EES4_(%"class.v8::Isolate"* %3, %"class.v8::String"* %41, %"class.v8::String"* %42) #11
  br label %47

44:                                               ; preds = %4
  %45 = call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %1) #11
  %46 = call %"class.v8::String"* @_ZN2v86String6ConcatEPNS_7IsolateENS_5LocalIS0_EES4_(%"class.v8::Isolate"* %3, %"class.v8::String"* %11, %"class.v8::String"* %45) #11
  br label %47

47:                                               ; preds = %44, %38, %34, %23, %14
  %48 = phi %"class.v8::String"* [ %46, %44 ], [ %43, %38 ], [ %16, %34 ], [ %16, %23 ], [ %16, %14 ]
  %49 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i32 0, i32 1) #11
  %50 = call %"class.v8::String"* @_ZN2v86String6ConcatEPNS_7IsolateENS_5LocalIS0_EES4_(%"class.v8::Isolate"* %3, %"class.v8::String"* %48, %"class.v8::String"* %49) #11
  %51 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %5) #11
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = call i8* @_Znwm(i64 32) #10
  %54 = bitcast i8* %53 to %"class.base::Value"*
  call void @_ZN4base5ValueC1EPKc(%"class.base::Value"* nonnull %54, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %97

55:                                               ; preds = %47
  %56 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  %57 = bitcast %"class.v8::String::Utf8Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #11
  %58 = bitcast %"class.v8::String"* %50 to %"class.v8::Value"*
  call void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"* nonnull %8, %"class.v8::Isolate"* %3, %"class.v8::Value"* %58) #11
  %59 = getelementptr inbounds %"class.v8::String::Utf8Value", %"class.v8::String::Utf8Value"* %8, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = call i64 @strlen(i8* %60) #11
  %62 = icmp ugt i64 %61, -17
  br i1 %62, label %63, label %65

63:                                               ; preds = %55
  %64 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %64) #12
  unreachable

65:                                               ; preds = %55
  %66 = icmp ult i64 %61, 23
  br i1 %66, label %76, label %67

67:                                               ; preds = %65
  %68 = add nuw i64 %61, 16
  %69 = and i64 %68, -16
  %70 = call i8* @_Znwm(i64 %69) #10
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %70, i8** %71, align 8
  %72 = or i64 %69, -9223372036854775808
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %61, i64* %74, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %81

76:                                               ; preds = %65
  %77 = trunc i64 %61 to i8
  %78 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  store i8 %77, i8* %79, align 1
  %80 = icmp eq i64 %61, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %76, %67
  %82 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %78, %76 ], [ %75, %67 ]
  %83 = phi i8* [ %56, %76 ], [ %70, %67 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %83, i8* align 1 %60, i64 %61, i1 false) #11
  br label %84

84:                                               ; preds = %81, %76
  %85 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %78, %76 ], [ %82, %81 ]
  %86 = phi i8* [ %56, %76 ], [ %83, %81 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 %61
  store i8 0, i8* %87, align 1
  %88 = call i8* @_Znwm(i64 32) #10
  %89 = bitcast i8* %88 to %"class.base::Value"*
  call void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %89, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #10
  br label %96

96:                                               ; preds = %93, %84
  call void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  br label %97

97:                                               ; preds = %52, %96
  %98 = phi %"class.base::Value"* [ %54, %52 ], [ %89, %96 ]
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  %99 = ptrtoint %"class.base::Value"* %98 to i64
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.base::Value"*, %"class.base::Value"** %100, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %99, i64* %102, align 8
  %103 = icmp eq %"class.base::Value"* %101, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %97
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %101) #11
  %105 = bitcast %"class.base::Value"* %101 to i8*
  call void @_ZdlPv(i8* %105) #10
  br label %106

106:                                              ; preds = %104, %97
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions28ActivityLogConverterStrategy11FromV8ArrayEN2v85LocalINS1_5ArrayEEEPNSt3__110unique_ptrIN4base5ValueENS5_14default_deleteIS8_EEEEPNS1_7IsolateE(%"class.extensions::ActivityLogConverterStrategy"* nocapture readnone, %"class.v8::Array"*, %"class.std::__1::unique_ptr"* nocapture, %"class.v8::Isolate"*) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.v8::Array"* %1 to %"class.v8::Object"*
  %6 = tail call zeroext i1 @_ZNK10extensions28ActivityLogConverterStrategy14FromV8InternalEN2v85LocalINS1_6ObjectEEEPNSt3__110unique_ptrIN4base5ValueENS5_14default_deleteIS8_EEEEPNS1_7IsolateE(%"class.extensions::ActivityLogConverterStrategy"* undef, %"class.v8::Object"* %5, %"class.std::__1::unique_ptr"* %2, %"class.v8::Isolate"* %3)
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN7content16V8ValueConverter8Strategy17FromV8ArrayBufferEN2v85LocalINS2_6ObjectEEEPNSt3__110unique_ptrIN4base5ValueENS6_14default_deleteIS9_EEEEPNS2_7IsolateE(%"class.content::V8ValueConverter::Strategy"*, %"class.v8::Object"*, %"class.std::__1::unique_ptr"*, %"class.v8::Isolate"*) unnamed_addr #5

declare void @_ZN7content16V8ValueConverter8Strategy12FromV8NumberEN2v85LocalINS2_6NumberEEEPNSt3__110unique_ptrIN4base5ValueENS6_14default_deleteIS9_EEEE() unnamed_addr

declare zeroext i1 @_ZN7content16V8ValueConverter8Strategy15FromV8UndefinedEPNSt3__110unique_ptrIN4base5ValueENS2_14default_deleteIS5_EEEE(%"class.content::V8ValueConverter::Strategy"*, %"class.std::__1::unique_ptr"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #5

declare void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #5

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #5

declare %"class.v8::String"* @_ZN2v86String6ConcatEPNS_7IsolateENS_5LocalIS0_EES4_(%"class.v8::Isolate"*, %"class.v8::String"*, %"class.v8::String"*) local_unnamed_addr #5

declare %"class.v8::Value"* @_ZNK2v88Function7GetNameEv(%"class.v8::Function"*) local_unnamed_addr #5

declare i32 @_ZNK2v86String6LengthEv(%"class.v8::String"*) local_unnamed_addr #5

declare %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #5

declare void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #6

declare %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN4base5ValueC1EPKc(%"class.base::Value"*, i8*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
