; ModuleID = '../../chrome/browser/downgrade/user_data_downgrade.cc'
source_filename = "../../chrome/browser/downgrade/user_data_downgrade.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%class.BrowserProcess = type { i32 (...)** }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.base::FileEnumerator::FileInfo"*, %"class.base::FileEnumerator::FileInfo"*, %"class.std::__1::__compressed_pair.62" }
%"class.base::FileEnumerator::FileInfo" = type { %struct.stat64, %"class.base::FilePath" }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.base::FileEnumerator::FileInfo"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.67" }
%"class.std::__1::__hash_table.67" = type <{ %"class.std::__1::unique_ptr.68", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87", [4 x i8] }>
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.71"** }
%"struct.std::__1::__hash_node_base.71" = type { %"struct.std::__1::__hash_node_base.71"* }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::__bucket_list_deallocator.73" }
%"class.std::__1::__bucket_list_deallocator.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::__hash_node_base.71" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { float }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::FilePath"*, i64 }
%"struct.std::nothrow_t" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.base::Version" }
%"class.base::Version" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %class.scoped_refptr.32, %"class.base::RepeatingCallback.33", %class.scoped_refptr.34, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.23" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.32 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.33" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.34 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.35", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37", %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.53" }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.base::Version"*, %"class.base::Version"*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.base::Version"* }
%"class.base::FileEnumerator" = type { %"class.std::__1::vector.60", %"class.std::__1::unordered_set", i64, %"class.base::FilePath", i8, i32, %"class.std::__1::basic_string", i32, i32, i32, %"class.std::__1::stack" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.base::FilePath"*, %"class.base::FilePath"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.base::FilePath"* }
%"class.downgrade::SnapshotManager" = type { i32 (...)**, %"class.base::FilePath" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare" = type { i8 }

$_ZNSt3__16vectorIN4base7VersionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN4base8internal9flat_treeINS_7VersionENS_8identityENSt3__14lessIvEENS4_6vectorIS2_NS4_9allocatorIS2_EEEEE15sort_and_uniqueENS4_11__wrap_iterIPS2_EESE_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareEPS4_SF_NS_11__wrap_iterISF_EEEEvT0_SI_T1_SJ_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_SI_T_NS_15iterator_traitsISI_E15difference_typeESM_PNSL_10value_typeEl = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_PNS_15iterator_traitsISI_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_SI_T_NS_15iterator_traitsISI_E15difference_typeESM_PNSL_10value_typeE = comdat any

$_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN4base7VersionEEEEET_S6_S6_S6_ = comdat any

$_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [13 x i8] c"Last Version\00", align 1
@_ZN9downgrade25kDowngradeLastVersionFileE = hidden local_unnamed_addr constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i64 12 }, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c".CHROME_DELETE\00", align 1
@_ZN9downgrade22kDowngradeDeleteSuffixE = hidden local_unnamed_addr constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i64 14 }, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"Snapshots\00", align 1
@_ZN9downgrade13kSnapshotsDirE = hidden local_unnamed_addr constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i64 9 }, align 8
@g_browser_process = external local_unnamed_addr global %class.BrowserProcess*, align 8
@_ZN5prefs13kDiskCacheDirE = external constant [0 x i8], align 1
@__const._ZN9downgrade19GetInvalidSnapshotsERKN4base8FilePathE.enumerator = private unnamed_addr constant { %"class.std::__1::vector.60", %"class.std::__1::unordered_set", i64, %"class.base::FilePath", i8, [3 x i8], i32, %"class.std::__1::basic_string", i32, i32, i32, [4 x i8], %"class.std::__1::stack" } { %"class.std::__1::vector.60" { %"class.std::__1::__vector_base.61" { %"class.base::FileEnumerator::FileInfo"* inttoptr (i64 -6148914691236517206 to %"class.base::FileEnumerator::FileInfo"*), %"class.base::FileEnumerator::FileInfo"* inttoptr (i64 -6148914691236517206 to %"class.base::FileEnumerator::FileInfo"*), %"class.std::__1::__compressed_pair.62" { %"struct.std::__1::__compressed_pair_elem.63" { %"class.base::FileEnumerator::FileInfo"* inttoptr (i64 -6148914691236517206 to %"class.base::FileEnumerator::FileInfo"*) } } } }, %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table.67" <{ %"class.std::__1::unique_ptr.68" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"struct.std::__1::__hash_node_base.71"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.71"**) }, %"struct.std::__1::__compressed_pair_elem.72" { %"class.std::__1::__bucket_list_deallocator.73" { %"class.std::__1::__compressed_pair.74" { %"struct.std::__1::__compressed_pair_elem.21" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.78" { %"struct.std::__1::__compressed_pair_elem.79" { %"struct.std::__1::__hash_node_base.71" { %"struct.std::__1::__hash_node_base.71"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.71"*) } } }, %"class.std::__1::__compressed_pair.83" { %"struct.std::__1::__compressed_pair_elem.21" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.87" { %"struct.std::__1::__compressed_pair_elem.51" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i64 -6148914691236517206, %"class.base::FilePath" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::stack" { %"class.base::circular_deque" { %"class.base::internal::VectorBuffer" { %"class.base::FilePath"* inttoptr (i64 -6148914691236517206 to %"class.base::FilePath"*), i64 -6148914691236517206 }, i64 -6148914691236517206, i64 -6148914691236517206 } } }, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9downgrade18GetLastVersionFileERKN4base8FilePathE(%"class.base::FilePath"* noalias sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 {
  tail call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret %0, %"class.base::FilePath"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #10
  ret void
}

declare void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9downgrade14GetLastVersionERKN4base8FilePathE(%"class.absl::optional"* noalias sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::FilePath", align 8
  %5 = alloca %"class.base::Version", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #10
  %8 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %4, %"class.base::FilePath"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #10
  %9 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull %3) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %33

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.base::Version"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = bitcast %"class.base::Version"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load i8, i8* %16, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %7, align 8
  %21 = select i1 %19, i8* %20, i8* %6
  %22 = load i64, i64* %13, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  %25 = call { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8* %21, i64 %24, i32 3) #10
  %26 = extractvalue { i8*, i64 } %25, 0
  %27 = extractvalue { i8*, i64 } %25, 1
  call void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nonnull %5, i8* %26, i64 %27) #10
  %28 = call zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* nonnull %5) #10
  br i1 %28, label %29, label %32

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %30, align 8
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %31, %"class.base::Version"* nonnull dereferenceable(24) %5) #10
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br label %38

32:                                               ; preds = %12
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br label %33

33:                                               ; preds = %10, %32
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %11, %10 ], [ %15, %32 ]
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %union.anon.1* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  br label %38

38:                                               ; preds = %29, %33
  %39 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %15, %29 ], [ %34, %33 ]
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8*, i64, i32) local_unnamed_addr #1

declare void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base7VersionD1Ev(%"class.base::Version"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9downgrade15GetDiskCacheDirEv(%"class.base::FilePath"* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %"class.base::FilePath", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.base::FilePath"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.base::FilePath"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  %6 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %7 = bitcast %class.BrowserProcess* %6 to %class.PrefService* (%class.BrowserProcess*)***
  %8 = load %class.PrefService* (%class.BrowserProcess*)**, %class.PrefService* (%class.BrowserProcess*)*** %7, align 8
  %9 = getelementptr inbounds %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %8, i64 7
  %10 = load %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %9, align 8
  %11 = tail call %class.PrefService* %10(%class.BrowserProcess* %6) #10
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs13kDiskCacheDirE, i64 0, i64 0)) #10
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #12
  unreachable

17:                                               ; preds = %1
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %28, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %13, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %26, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %33

28:                                               ; preds = %17
  %29 = trunc i64 %13 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %13, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %19
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %27, %19 ]
  %35 = phi i8* [ %12, %28 ], [ %22, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs13kDiskCacheDirE, i64 0, i64 0), i64 %13, i1 false) #10
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %34, %33 ]
  %38 = phi i8* [ %12, %28 ], [ %35, %33 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %13
  store i8 0, i8* %39, align 1
  call void @_ZNK11PrefService11GetFilePathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.base::FilePath"* nonnull sret %2, %class.PrefService* %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #10
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %36, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  %47 = call zeroext i1 @_ZNK4base8FilePath16ReferencesParentEv(%"class.base::FilePath"* nonnull %2) #10
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  call void @_ZN4base20MakeAbsoluteFilePathERKNS_8FilePathE(%"class.base::FilePath"* sret %0, %"class.base::FilePath"* nonnull dereferenceable(24) %2) #10
  br label %50

49:                                               ; preds = %46
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %0, %"class.base::FilePath"* nonnull dereferenceable(24) %2) #10
  br label %50

50:                                               ; preds = %49, %48
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

declare void @_ZNK11PrefService11GetFilePathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.base::FilePath"* sret, %class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8FilePath16ReferencesParentEv(%"class.base::FilePath"*) local_unnamed_addr #1

declare void @_ZN4base20MakeAbsoluteFilePathERKNS_8FilePathE(%"class.base::FilePath"* sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9downgrade21GetAvailableSnapshotsERKN4base8FilePathE(%"class.base::internal::flat_tree"* noalias sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca %"class.std::__1::vector.53", align 8
  %5 = alloca %"class.base::FileEnumerator", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = alloca %"class.base::Version", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.base::FilePath", align 8
  %10 = bitcast %"class.std::__1::vector.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #10
  %14 = bitcast %"class.base::FileEnumerator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %14) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast ({ %"class.std::__1::vector.60", %"class.std::__1::unordered_set", i64, %"class.base::FilePath", i8, [3 x i8], i32, %"class.std::__1::basic_string", i32, i32, i32, [4 x i8], %"class.std::__1::stack" }* @__const._ZN9downgrade19GetInvalidSnapshotsERKN4base8FilePathE.enumerator to i8*), i64 176, i1 false)
  call void @_ZN4base14FileEnumeratorC1ERKNS_8FilePathEbi(%"class.base::FileEnumerator"* nonnull %5, %"class.base::FilePath"* dereferenceable(24) %1, i1 zeroext false, i32 2) #10
  %15 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZN4base14FileEnumerator4NextEv(%"class.base::FilePath"* nonnull sret %6, %"class.base::FileEnumerator"* nonnull %5) #10
  %18 = bitcast %"class.base::FilePath"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = load i64, i64* %16, align 8
  %23 = zext i8 %20 to i64
  %24 = select i1 %21, i64 %22, i64 %23
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %2
  %27 = bitcast %"class.base::Version"** %12 to i64*
  br label %39

28:                                               ; preds = %2
  %29 = bitcast %"class.base::Version"* %7 to i8*
  %30 = bitcast %"class.base::FilePath"* %3 to i8*
  %31 = bitcast %"class.base::FilePath"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::FilePath"* %8 to i8*
  %36 = bitcast %"class.base::Version"** %12 to i64*
  %37 = bitcast %"class.base::FilePath"* %9 to i8*
  %38 = bitcast %"class.base::Version"* %7 to i8*
  br label %69

39:                                               ; preds = %88, %26
  %40 = phi i64* [ %27, %26 ], [ %36, %88 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  %41 = bitcast %"class.std::__1::vector.53"* %4 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  store i64 %42, i64* %43, align 8
  %44 = load i64, i64* %40, align 8
  %45 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.base::Version"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"class.base::Version"** %13 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.base::Version"** %49 to i64*
  store i64 %48, i64* %50, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #10
  %51 = inttoptr i64 %42 to %"class.base::Version"*
  %52 = inttoptr i64 %44 to %"class.base::Version"*
  call void @_ZN4base8internal9flat_treeINS_7VersionENS_8identityENSt3__14lessIvEENS4_6vectorIS2_NS4_9allocatorIS2_EEEEE15sort_and_uniqueENS4_11__wrap_iterIPS2_EESE_(%"class.base::internal::flat_tree"* %0, %"class.base::Version"* %51, %"class.base::Version"* %52) #10
  call void @_ZN4base14FileEnumeratorD1Ev(%"class.base::FileEnumerator"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %14) #10
  %53 = load %"class.base::Version"*, %"class.base::Version"** %11, align 8
  %54 = icmp eq %"class.base::Version"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %39
  %56 = bitcast %"class.base::Version"* %53 to i8*
  %57 = load %"class.base::Version"*, %"class.base::Version"** %12, align 8
  %58 = icmp eq %"class.base::Version"* %57, %53
  br i1 %58, label %66, label %59

59:                                               ; preds = %55, %59
  %60 = phi %"class.base::Version"* [ %61, %59 ], [ %57, %55 ]
  %61 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %60, i64 -1
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %61) #10
  %62 = icmp eq %"class.base::Version"* %61, %53
  br i1 %62, label %63, label %59

63:                                               ; preds = %59
  %64 = bitcast %"class.std::__1::vector.53"* %4 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %55
  %67 = phi i8* [ %65, %63 ], [ %56, %55 ]
  store %"class.base::Version"* %53, %"class.base::Version"** %12, align 8
  call void @_ZdlPv(i8* %67) #11
  br label %68

68:                                               ; preds = %39, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void

69:                                               ; preds = %28, %88
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10, !noalias !2
  call void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* nonnull sret %3, %"class.base::FilePath"* nonnull %6) #10, !noalias !2
  %70 = load i8, i8* %32, align 1, !noalias !2
  %71 = icmp slt i8 %70, 0
  %72 = load i8*, i8** %33, align 8, !noalias !2
  %73 = select i1 %71, i8* %72, i8* %30
  %74 = load i64, i64* %34, align 8, !noalias !2
  %75 = zext i8 %70 to i64
  %76 = select i1 %71, i64 %74, i64 %75
  call void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nonnull %7, i8* %73, i64 %76) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10, !noalias !2
  %77 = call zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* nonnull %7) #10
  br i1 %77, label %78, label %88

78:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %8, %"class.base::FilePath"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #10
  %79 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %8) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  br i1 %79, label %80, label %88

80:                                               ; preds = %78
  %81 = load %"class.base::Version"*, %"class.base::Version"** %12, align 8
  %82 = load %"class.base::Version"*, %"class.base::Version"** %13, align 8
  %83 = icmp ult %"class.base::Version"* %81, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %80
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %81, %"class.base::Version"* nonnull dereferenceable(24) %7) #10
  %85 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %81, i64 1
  %86 = ptrtoint %"class.base::Version"* %85 to i64
  store i64 %86, i64* %36, align 8
  br label %88

87:                                               ; preds = %80
  call void @_ZNSt3__16vectorIN4base7VersionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.53"* nonnull %4, %"class.base::Version"* nonnull dereferenceable(24) %7) #10
  br label %88

88:                                               ; preds = %78, %69, %87, %84
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  call void @_ZN4base14FileEnumerator4NextEv(%"class.base::FilePath"* nonnull sret %9, %"class.base::FileEnumerator"* nonnull %5) #10
  %89 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"* nonnull %6, %"class.base::FilePath"* nonnull dereferenceable(24) %9) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  %90 = load i8, i8* %19, align 1
  %91 = icmp slt i8 %90, 0
  %92 = load i64, i64* %16, align 8
  %93 = zext i8 %90 to i64
  %94 = select i1 %91, i64 %92, i64 %93
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %39, label %69
}

declare void @_ZN4base14FileEnumeratorC1ERKNS_8FilePathEbi(%"class.base::FileEnumerator"*, %"class.base::FilePath"* dereferenceable(24), i1 zeroext, i32) unnamed_addr #1

declare void @_ZN4base14FileEnumerator4NextEv(%"class.base::FilePath"* sret, %"class.base::FileEnumerator"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base14FileEnumeratorD1Ev(%"class.base::FileEnumerator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9downgrade19GetInvalidSnapshotsERKN4base8FilePathE(%"class.std::__1::vector.93"* noalias sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca %"class.base::Version", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = alloca %"class.base::FileEnumerator", align 8
  %7 = alloca %"class.base::FilePath", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector.93"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  %12 = bitcast %"class.base::FileEnumerator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %12) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast ({ %"class.std::__1::vector.60", %"class.std::__1::unordered_set", i64, %"class.base::FilePath", i8, [3 x i8], i32, %"class.std::__1::basic_string", i32, i32, i32, [4 x i8], %"class.std::__1::stack" }* @__const._ZN9downgrade19GetInvalidSnapshotsERKN4base8FilePathE.enumerator to i8*), i64 176, i1 false)
  call void @_ZN4base14FileEnumeratorC1ERKNS_8FilePathEbi(%"class.base::FileEnumerator"* nonnull %6, %"class.base::FilePath"* dereferenceable(24) %1, i1 zeroext false, i32 2) #10
  %13 = bitcast %"class.base::FilePath"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.base::FilePath"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN4base14FileEnumerator4NextEv(%"class.base::FilePath"* nonnull sret %7, %"class.base::FileEnumerator"* nonnull %6) #10
  %16 = bitcast %"class.base::FilePath"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i64, i64* %14, align 8
  %21 = zext i8 %18 to i64
  %22 = select i1 %19, i64 %20, i64 %21
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.base::Version"* %4 to i8*
  %26 = bitcast %"class.base::FilePath"* %3 to i8*
  %27 = bitcast %"class.base::FilePath"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::FilePath"* %5 to i8*
  %32 = bitcast %"class.base::FilePath"** %9 to i64*
  %33 = bitcast %"class.base::FilePath"* %8 to i8*
  br label %35

34:                                               ; preds = %55, %2
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  call void @_ZN4base14FileEnumeratorD1Ev(%"class.base::FileEnumerator"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %12) #10
  ret void

35:                                               ; preds = %24, %55
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10, !noalias !5
  call void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* nonnull sret %3, %"class.base::FilePath"* nonnull %7) #10, !noalias !5
  %36 = load i8, i8* %28, align 1, !noalias !5
  %37 = icmp slt i8 %36, 0
  %38 = load i8*, i8** %29, align 8, !noalias !5
  %39 = select i1 %37, i8* %38, i8* %26
  %40 = load i64, i64* %30, align 8, !noalias !5
  %41 = zext i8 %36 to i64
  %42 = select i1 %37, i64 %40, i64 %41
  call void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nonnull %4, i8* %39, i64 %42) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10, !noalias !5
  %43 = call zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* nonnull %4) #10
  br i1 %43, label %45, label %44

44:                                               ; preds = %35
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br label %47

45:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %5, %"class.base::FilePath"* nonnull %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #10
  %46 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %5) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br i1 %46, label %55, label %47

47:                                               ; preds = %44, %45
  %48 = load %"class.base::FilePath"*, %"class.base::FilePath"** %9, align 8
  %49 = load %"class.base::FilePath"*, %"class.base::FilePath"** %10, align 8
  %50 = icmp ult %"class.base::FilePath"* %48, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %48, %"class.base::FilePath"* nonnull dereferenceable(24) %7) #10
  %52 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %48, i64 1
  %53 = ptrtoint %"class.base::FilePath"* %52 to i64
  store i64 %53, i64* %32, align 8
  br label %55

54:                                               ; preds = %47
  call void @_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.93"* %0, %"class.base::FilePath"* nonnull dereferenceable(24) %7) #10
  br label %55

55:                                               ; preds = %54, %51, %45
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  call void @_ZN4base14FileEnumerator4NextEv(%"class.base::FilePath"* nonnull sret %8, %"class.base::FileEnumerator"* nonnull %6) #10
  %56 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"* nonnull %7, %"class.base::FilePath"* nonnull dereferenceable(24) %8) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  %57 = load i8, i8* %17, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i64, i64* %14, align 8
  %60 = zext i8 %57 to i64
  %61 = select i1 %58, i64 %59, i64 %60
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9downgrade20GetSnapshotToRestoreERKN4base7VersionERKNS0_8FilePathE(%"class.absl::optional"* noalias sret, %"class.base::Version"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.base::FilePath", align 8
  %5 = alloca %"class.base::internal::flat_tree", align 8
  %6 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %4, %"class.base::FilePath"* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #10
  %8 = bitcast %"class.base::internal::flat_tree"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.base::internal::flat_tree"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN9downgrade21GetAvailableSnapshotsERKN4base8FilePathE(%"class.base::internal::flat_tree"* nonnull sret %5, %"class.base::FilePath"* nonnull dereferenceable(24) %4)
  %12 = load %"class.base::Version"*, %"class.base::Version"** %9, align 8
  %13 = bitcast %"class.base::Version"** %10 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint %"class.base::Version"* %12 to i64
  %16 = sub i64 %14, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %40, label %18

18:                                               ; preds = %3
  %19 = sdiv exact i64 %16, 24
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi %"class.base::Version"* [ %30, %20 ], [ %12, %18 ]
  %22 = phi i64 [ %29, %20 ], [ %19, %18 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %21, i64 %23
  %25 = call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %1, %"class.base::Version"* dereferenceable(24) %24) #10
  %26 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %24, i64 1
  %27 = xor i64 %23, -1
  %28 = add i64 %22, %27
  %29 = select i1 %25, i64 %23, i64 %28
  %30 = select i1 %25, %"class.base::Version"* %21, %"class.base::Version"* %26
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %20

32:                                               ; preds = %20
  %33 = load %"class.base::Version"*, %"class.base::Version"** %9, align 8
  %34 = icmp eq %"class.base::Version"* %30, %33
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %30, i64 -1
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %37, align 8
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %38, %"class.base::Version"* dereferenceable(24) %36) #10
  %39 = load %"class.base::Version"*, %"class.base::Version"** %9, align 8
  br label %45

40:                                               ; preds = %3, %32
  %41 = phi %"class.base::Version"* [ %33, %32 ], [ %12, %3 ]
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %union.anon.1* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  br label %45

45:                                               ; preds = %40, %35
  %46 = phi %"class.base::Version"* [ %41, %40 ], [ %39, %35 ]
  %47 = icmp eq %"class.base::Version"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.base::Version"* %46 to i8*
  %50 = load %"class.base::Version"*, %"class.base::Version"** %10, align 8
  %51 = icmp eq %"class.base::Version"* %50, %46
  br i1 %51, label %59, label %52

52:                                               ; preds = %48, %52
  %53 = phi %"class.base::Version"* [ %54, %52 ], [ %50, %48 ]
  %54 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %53, i64 -1
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %54) #10
  %55 = icmp eq %"class.base::Version"* %54, %46
  br i1 %55, label %56, label %52

56:                                               ; preds = %52
  %57 = bitcast %"class.base::internal::flat_tree"* %5 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %48
  %60 = phi i8* [ %58, %56 ], [ %49, %48 ]
  store %"class.base::Version"* %46, %"class.base::Version"** %10, align 8
  call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %45, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9downgrade20RemoveDataForProfileEN4base4TimeERKNS0_8FilePathEm(i64, %"class.base::FilePath"* dereferenceable(24), i64) local_unnamed_addr #0 {
  %4 = alloca %"class.downgrade::SnapshotManager", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = bitcast %"class.downgrade::SnapshotManager"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  %8 = bitcast %"class.base::FilePath"* %5 to i8*
  %9 = bitcast %"class.downgrade::SnapshotManager"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  call void @_ZNK4base8FilePath7DirNameEv(%"class.base::FilePath"* nonnull sret %5, %"class.base::FilePath"* %1) #10
  call void @_ZN9downgrade15SnapshotManagerC1ERKN4base8FilePathE(%"class.downgrade::SnapshotManager"* nonnull %4, %"class.base::FilePath"* nonnull dereferenceable(24) %5) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  %10 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  call void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* nonnull sret %6, %"class.base::FilePath"* %1) #10
  call void @_ZN9downgrade15SnapshotManager28DeleteSnapshotDataForProfileEN4base4TimeERKNS1_8FilePathEm(%"class.downgrade::SnapshotManager"* nonnull %4, i64 %0, %"class.base::FilePath"* nonnull dereferenceable(24) %6, i64 %2) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @_ZN9downgrade15SnapshotManagerD1Ev(%"class.downgrade::SnapshotManager"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  ret void
}

declare void @_ZNK4base8FilePath7DirNameEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #1

declare void @_ZN9downgrade15SnapshotManagerC1ERKN4base8FilePathE(%"class.downgrade::SnapshotManager"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN9downgrade15SnapshotManager28DeleteSnapshotDataForProfileEN4base4TimeERKNS1_8FilePathEm(%"class.downgrade::SnapshotManager"*, i64, %"class.base::FilePath"* dereferenceable(24), i64) local_unnamed_addr #1

declare void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9downgrade15SnapshotManagerD1Ev(%"class.downgrade::SnapshotManager"*) unnamed_addr #3

declare void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"*, %"class.base::Version"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base7VersionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.53"*, %"class.base::Version"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::Version"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.53"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.53"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::Version"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.base::Version"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.base::Version"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %33, i64 %9
  %35 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %33, i64 %32
  %36 = ptrtoint %"class.base::Version"* %35 to i64
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %34, %"class.base::Version"* dereferenceable(24) %1) #10
  %37 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %34, i64 1
  %38 = ptrtoint %"class.base::Version"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.base::Version"*, %"class.base::Version"** %39, align 8
  %41 = load %"class.base::Version"*, %"class.base::Version"** %3, align 8
  %42 = icmp eq %"class.base::Version"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.base::Version"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.base::Version"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.base::Version"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %46, i64 -1
  %49 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %47, i64 -1
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %48, %"class.base::Version"* dereferenceable(24) %49) #10
  %50 = icmp eq %"class.base::Version"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.base::Version"*, %"class.base::Version"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.base::Version"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.base::Version"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.base::Version"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.base::Version"*
  %60 = icmp eq %"class.base::Version"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.base::Version"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %62, i64 -1
  tail call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %63) #10
  %64 = icmp eq %"class.base::Version"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINS_7VersionENS_8identityENSt3__14lessIvEENS4_6vectorIS2_NS4_9allocatorIS2_EEEEE15sort_and_uniqueENS4_11__wrap_iterIPS2_EESE_(%"class.base::internal::flat_tree"*, %"class.base::Version"*, %"class.base::Version"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare", align 1
  %5 = ptrtoint %"class.base::Version"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare", %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"class.base::Version"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 384307168202282325
  %13 = select i1 %12, i64 %9, i64 384307168202282325
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 24
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeEl(%"class.base::Version"* %1, %"class.base::Version"* %2, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.base::Version"* null, i64 0) #10
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"class.base::Version"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeEl(%"class.base::Version"* %1, %"class.base::Version"* %2, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.base::Version"* nonnull %24, i64 %15) #10
  call void @_ZdlPv(i8* nonnull %17) #11
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"class.base::Version"* %1, %2
  br i1 %26, label %68, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"class.base::Version"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %28, i64 1
  %30 = icmp eq %"class.base::Version"* %29, %2
  br i1 %30, label %68, label %31

31:                                               ; preds = %27
  %32 = call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %28, %"class.base::Version"* dereferenceable(24) %29) #10
  br i1 %32, label %27, label %33

33:                                               ; preds = %31
  %34 = ptrtoint %"class.base::Version"* %28 to i64
  %35 = icmp eq %"class.base::Version"* %28, %2
  br i1 %35, label %68, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %28, i64 2
  %38 = icmp eq %"class.base::Version"* %37, %2
  br i1 %38, label %64, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %28, i64 1
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi %"class.base::Version"* [ %61, %57 ], [ %28, %39 ]
  %43 = phi %"class.base::Version"* [ %59, %57 ], [ %37, %39 ]
  %44 = phi %"class.base::Version"* [ %43, %57 ], [ %40, %39 ]
  %45 = phi i64 [ %58, %57 ], [ %34, %39 ]
  %46 = call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %42, %"class.base::Version"* dereferenceable(24) %43) #10
  br i1 %46, label %47, label %57

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %42, i64 1
  %49 = ptrtoint %"class.base::Version"* %48 to i64
  %50 = icmp eq %"class.base::Version"* %44, %42
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %48, i64 0, i32 0
  %53 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %43, i64 0, i32 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %44, i64 1, i32 0, i32 0, i32 1
  %56 = load i32*, i32** %55, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %52, i32* %54, i32* %56) #10
  br label %57

57:                                               ; preds = %51, %47, %41
  %58 = phi i64 [ %45, %41 ], [ %49, %47 ], [ %49, %51 ]
  %59 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %43, i64 1
  %60 = icmp eq %"class.base::Version"* %59, %2
  %61 = inttoptr i64 %58 to %"class.base::Version"*
  br i1 %60, label %62, label %41

62:                                               ; preds = %57
  %63 = inttoptr i64 %58 to %"class.base::Version"*
  br label %64

64:                                               ; preds = %62, %36
  %65 = phi %"class.base::Version"* [ %28, %36 ], [ %63, %62 ]
  %66 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %65, i64 1
  %67 = ptrtoint %"class.base::Version"* %66 to i64
  br label %68

68:                                               ; preds = %27, %25, %33, %64
  %69 = phi i64 [ %67, %64 ], [ %34, %33 ], [ %5, %25 ], [ %5, %27 ]
  %70 = inttoptr i64 %69 to %"class.base::Version"*
  %71 = icmp eq %"class.base::Version"* %70, %2
  br i1 %71, label %101, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %74 = load %"class.base::Version"*, %"class.base::Version"** %73, align 8
  %75 = icmp eq %"class.base::Version"* %74, %2
  br i1 %75, label %92, label %76

76:                                               ; preds = %72, %86
  %77 = phi %"class.base::Version"* [ %88, %86 ], [ %70, %72 ]
  %78 = phi %"class.base::Version"* [ %87, %86 ], [ %2, %72 ]
  %79 = icmp eq %"class.base::Version"* %77, %78
  br i1 %79, label %86, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %77, i64 0, i32 0
  %82 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %78, i64 0, i32 0, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %78, i64 0, i32 0, i32 0, i32 1
  %85 = load i32*, i32** %84, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %81, i32* %83, i32* %85) #10
  br label %86

86:                                               ; preds = %80, %76
  %87 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %78, i64 1
  %88 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %77, i64 1
  %89 = icmp eq %"class.base::Version"* %87, %74
  br i1 %89, label %90, label %76

90:                                               ; preds = %86
  %91 = load %"class.base::Version"*, %"class.base::Version"** %73, align 8
  br label %92

92:                                               ; preds = %90, %72
  %93 = phi %"class.base::Version"* [ %2, %72 ], [ %91, %90 ]
  %94 = phi %"class.base::Version"* [ %70, %72 ], [ %88, %90 ]
  %95 = icmp eq %"class.base::Version"* %93, %94
  br i1 %95, label %100, label %96

96:                                               ; preds = %92, %96
  %97 = phi %"class.base::Version"* [ %98, %96 ], [ %93, %92 ]
  %98 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %97, i64 -1
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %98) #10
  %99 = icmp eq %"class.base::Version"* %98, %94
  br i1 %99, label %100, label %96

100:                                              ; preds = %96, %92
  store %"class.base::Version"* %94, %"class.base::Version"** %73, align 8
  br label %101

101:                                              ; preds = %68, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeEl(%"class.base::Version"*, %"class.base::Version"*, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1), i64, %"class.base::Version"*, i64) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.base::Version", align 8
  switch i64 %3, label %29 [
    i64 0, label %49
    i64 1, label %49
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 -1
  %10 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %9, %"class.base::Version"* dereferenceable(24) %0) #10
  br i1 %10, label %11, label %49

11:                                               ; preds = %8
  %12 = bitcast %"class.base::Version"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %7, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #10
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* nonnull %7, %"class.base::Version"* dereferenceable(24) %0) #10
  %15 = icmp eq %"class.base::Version"* %9, %0
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %9, i64 0, i32 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 -1, i32 0, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %17, i32* %19, i32* %21) #10
  br label %22

22:                                               ; preds = %16, %11
  %23 = icmp eq %"class.base::Version"* %7, %9
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %9, i64 0, i32 0
  %26 = load i32*, i32** %13, align 8
  %27 = load i32*, i32** %14, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %25, i32* %26, i32* %27) #10
  br label %28

28:                                               ; preds = %22, %24
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %49

29:                                               ; preds = %6
  %30 = icmp slt i64 %3, 1
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  tail call void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_(%"class.base::Version"* %0, %"class.base::Version"* %1, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2)
  br label %49

32:                                               ; preds = %29
  %33 = lshr i64 %3, 1
  %34 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 %33
  %35 = icmp sgt i64 %3, %5
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeE(%"class.base::Version"* %0, %"class.base::Version"* %34, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2, i64 %33, %"class.base::Version"* %4)
  %37 = sub nsw i64 %3, %33
  %38 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 %33
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeE(%"class.base::Version"* %34, %"class.base::Version"* %1, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2, i64 %37, %"class.base::Version"* %38)
  %39 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareEPS4_SF_NS_11__wrap_iterISF_EEEEvT0_SI_T1_SJ_T2_T_(%"class.base::Version"* %4, %"class.base::Version"* %38, %"class.base::Version"* %38, %"class.base::Version"* %39, %"class.base::Version"* %0, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2)
  %40 = icmp eq %"class.base::Version"* %4, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %36, %41
  %42 = phi i64 [ %44, %41 ], [ 0, %36 ]
  %43 = phi %"class.base::Version"* [ %45, %41 ], [ %4, %36 ]
  tail call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %43) #10
  %44 = add nuw i64 %42, 1
  %45 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %43, i64 1
  %46 = icmp eq i64 %44, %3
  br i1 %46, label %49, label %41

47:                                               ; preds = %32
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeEl(%"class.base::Version"* %0, %"class.base::Version"* %34, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2, i64 %33, %"class.base::Version"* %4, i64 %5)
  %48 = sub nsw i64 %3, %33
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeEl(%"class.base::Version"* %34, %"class.base::Version"* %1, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2, i64 %48, %"class.base::Version"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_SI_T_NS_15iterator_traitsISI_E15difference_typeESM_PNSL_10value_typeEl(%"class.base::Version"* %0, %"class.base::Version"* %34, %"class.base::Version"* %1, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2, i64 %33, i64 %48, %"class.base::Version"* %4, i64 %5)
  br label %49

49:                                               ; preds = %41, %36, %47, %8, %28, %6, %6, %31
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_(%"class.base::Version"*, %"class.base::Version"*, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.base::Version", align 8
  %5 = icmp eq %"class.base::Version"* %0, %1
  br i1 %5, label %38, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 1
  %8 = icmp eq %"class.base::Version"* %7, %1
  br i1 %8, label %38, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.base::Version"* %4 to i8*
  %11 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.base::Version"* %4 to i8*
  br label %14

14:                                               ; preds = %9, %28
  %15 = phi %"class.base::Version"* [ %7, %9 ], [ %29, %28 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* nonnull %4, %"class.base::Version"* dereferenceable(24) %15) #10
  %16 = icmp eq %"class.base::Version"* %15, %0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14, %31
  %18 = phi %"class.base::Version"* [ %19, %31 ], [ %15, %14 ]
  %19 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 -1
  %20 = call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* nonnull dereferenceable(24) %4, %"class.base::Version"* dereferenceable(24) %19) #10
  br i1 %20, label %31, label %21

21:                                               ; preds = %17, %31, %14
  %22 = phi %"class.base::Version"* [ %0, %14 ], [ %0, %31 ], [ %18, %17 ]
  %23 = icmp eq %"class.base::Version"* %4, %22
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %22, i64 0, i32 0
  %26 = load i32*, i32** %11, align 8
  %27 = load i32*, i32** %12, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %25, i32* %26, i32* %27) #10
  br label %28

28:                                               ; preds = %21, %24
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  %29 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %15, i64 1
  %30 = icmp eq %"class.base::Version"* %29, %1
  br i1 %30, label %38, label %14

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 0, i32 0
  %33 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %19, i64 0, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 -1, i32 0, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %32, i32* %34, i32* %36) #10
  %37 = icmp eq %"class.base::Version"* %19, %0
  br i1 %37, label %21, label %17

38:                                               ; preds = %28, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeE(%"class.base::Version"*, %"class.base::Version"*, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1), i64, %"class.base::Version"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %14 [
    i64 0, label %57
    i64 1, label %6
    i64 2, label %7
  ]

6:                                                ; preds = %5
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %4, %"class.base::Version"* dereferenceable(24) %0) #10
  br label %57

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 -1
  %9 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %8, %"class.base::Version"* dereferenceable(24) %0) #10
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %4, %"class.base::Version"* dereferenceable(24) %8) #10
  %11 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 1
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %11, %"class.base::Version"* dereferenceable(24) %0) #10
  br label %57

12:                                               ; preds = %7
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %4, %"class.base::Version"* dereferenceable(24) %0) #10
  %13 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 1
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %13, %"class.base::Version"* dereferenceable(24) %8) #10
  br label %57

14:                                               ; preds = %5
  %15 = icmp slt i64 %3, 9
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_PNS_15iterator_traitsISI_E10value_typeET_(%"class.base::Version"* %0, %"class.base::Version"* %1, %"class.base::Version"* %4, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2)
  br label %57

17:                                               ; preds = %14
  %18 = lshr i64 %3, 1
  %19 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 %18
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeEl(%"class.base::Version"* %0, %"class.base::Version"* %19, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2, i64 %18, %"class.base::Version"* %4, i64 %18)
  %20 = sub nsw i64 %3, %18
  %21 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 %18
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_T_NS_15iterator_traitsISI_E15difference_typeEPNSL_10value_typeEl(%"class.base::Version"* %19, %"class.base::Version"* %1, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %2, i64 %20, %"class.base::Version"* %21, i64 %20)
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %52, %17
  %24 = phi %"class.base::Version"* [ %19, %17 ], [ %53, %52 ]
  %25 = phi %"class.base::Version"* [ %4, %17 ], [ %55, %52 ]
  %26 = icmp eq %"class.base::Version"* %24, %1
  br i1 %26, label %57, label %27

27:                                               ; preds = %23, %27
  %28 = phi %"class.base::Version"* [ %31, %27 ], [ %25, %23 ]
  %29 = phi %"class.base::Version"* [ %30, %27 ], [ %24, %23 ]
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %28, %"class.base::Version"* dereferenceable(24) %29) #10
  %30 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %29, i64 1
  %31 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %28, i64 1
  %32 = icmp eq %"class.base::Version"* %30, %1
  br i1 %32, label %57, label %27

33:                                               ; preds = %17, %52
  %34 = phi %"class.base::Version"* [ %55, %52 ], [ %4, %17 ]
  %35 = phi %"class.base::Version"* [ %54, %52 ], [ %0, %17 ]
  %36 = phi %"class.base::Version"* [ %53, %52 ], [ %19, %17 ]
  %37 = icmp eq %"class.base::Version"* %36, %1
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = icmp eq %"class.base::Version"* %35, %19
  br i1 %39, label %57, label %40

40:                                               ; preds = %38, %40
  %41 = phi %"class.base::Version"* [ %44, %40 ], [ %34, %38 ]
  %42 = phi %"class.base::Version"* [ %43, %40 ], [ %35, %38 ]
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %41, %"class.base::Version"* dereferenceable(24) %42) #10
  %43 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %42, i64 1
  %44 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %41, i64 1
  %45 = icmp eq %"class.base::Version"* %43, %19
  br i1 %45, label %57, label %40

46:                                               ; preds = %33
  %47 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %36, %"class.base::Version"* dereferenceable(24) %35) #10
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %34, %"class.base::Version"* dereferenceable(24) %36) #10
  %49 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %36, i64 1
  br label %52

50:                                               ; preds = %46
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %34, %"class.base::Version"* dereferenceable(24) %35) #10
  %51 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %35, i64 1
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi %"class.base::Version"* [ %49, %48 ], [ %36, %50 ]
  %54 = phi %"class.base::Version"* [ %35, %48 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %34, i64 1
  %56 = icmp eq %"class.base::Version"* %54, %19
  br i1 %56, label %23, label %33

57:                                               ; preds = %40, %27, %38, %23, %12, %10, %5, %16, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareEPS4_SF_NS_11__wrap_iterISF_EEEEvT0_SI_T1_SJ_T2_T_(%"class.base::Version"*, %"class.base::Version"*, %"class.base::Version"*, %"class.base::Version"*, %"class.base::Version"*, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.base::Version"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %55, %6
  %9 = phi %"class.base::Version"* [ %4, %6 ], [ %58, %55 ]
  %10 = phi %"class.base::Version"* [ %2, %6 ], [ %56, %55 ]
  %11 = icmp eq %"class.base::Version"* %10, %3
  br i1 %11, label %74, label %60

12:                                               ; preds = %6, %55
  %13 = phi %"class.base::Version"* [ %57, %55 ], [ %0, %6 ]
  %14 = phi %"class.base::Version"* [ %56, %55 ], [ %2, %6 ]
  %15 = phi %"class.base::Version"* [ %58, %55 ], [ %4, %6 ]
  %16 = icmp eq %"class.base::Version"* %14, %3
  br i1 %16, label %17, label %33

17:                                               ; preds = %12
  %18 = icmp eq %"class.base::Version"* %13, %1
  br i1 %18, label %74, label %19

19:                                               ; preds = %17, %29
  %20 = phi %"class.base::Version"* [ %30, %29 ], [ %13, %17 ]
  %21 = phi %"class.base::Version"* [ %31, %29 ], [ %15, %17 ]
  %22 = icmp eq %"class.base::Version"* %21, %20
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %21, i64 0, i32 0
  %25 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %20, i64 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %20, i64 0, i32 0, i32 0, i32 1
  %28 = load i32*, i32** %27, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %24, i32* %26, i32* %28) #10
  br label %29

29:                                               ; preds = %19, %23
  %30 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %20, i64 1
  %31 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %21, i64 1
  %32 = icmp eq %"class.base::Version"* %30, %1
  br i1 %32, label %74, label %19

33:                                               ; preds = %12
  %34 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %14, %"class.base::Version"* dereferenceable(24) %13) #10
  br i1 %34, label %35, label %45

35:                                               ; preds = %33
  %36 = icmp eq %"class.base::Version"* %15, %14
  br i1 %36, label %43, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %15, i64 0, i32 0
  %39 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %14, i64 0, i32 0, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %14, i64 0, i32 0, i32 0, i32 1
  %42 = load i32*, i32** %41, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %38, i32* %40, i32* %42) #10
  br label %43

43:                                               ; preds = %35, %37
  %44 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %14, i64 1
  br label %55

45:                                               ; preds = %33
  %46 = icmp eq %"class.base::Version"* %15, %13
  br i1 %46, label %53, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %15, i64 0, i32 0
  %49 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %13, i64 0, i32 0, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %13, i64 0, i32 0, i32 0, i32 1
  %52 = load i32*, i32** %51, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %48, i32* %50, i32* %52) #10
  br label %53

53:                                               ; preds = %45, %47
  %54 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %13, i64 1
  br label %55

55:                                               ; preds = %43, %53
  %56 = phi %"class.base::Version"* [ %44, %43 ], [ %14, %53 ]
  %57 = phi %"class.base::Version"* [ %13, %43 ], [ %54, %53 ]
  %58 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %15, i64 1
  %59 = icmp eq %"class.base::Version"* %57, %1
  br i1 %59, label %8, label %12

60:                                               ; preds = %8, %70
  %61 = phi %"class.base::Version"* [ %71, %70 ], [ %10, %8 ]
  %62 = phi %"class.base::Version"* [ %72, %70 ], [ %9, %8 ]
  %63 = icmp eq %"class.base::Version"* %62, %61
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %62, i64 0, i32 0
  %66 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %61, i64 0, i32 0, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %61, i64 0, i32 0, i32 0, i32 1
  %69 = load i32*, i32** %68, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %65, i32* %67, i32* %69) #10
  br label %70

70:                                               ; preds = %60, %64
  %71 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %61, i64 1
  %72 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %62, i64 1
  %73 = icmp eq %"class.base::Version"* %71, %3
  br i1 %73, label %74, label %60

74:                                               ; preds = %29, %70, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_SI_T_NS_15iterator_traitsISI_E15difference_typeESM_PNSL_10value_typeEl(%"class.base::Version"*, %"class.base::Version"*, %"class.base::Version"*, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1), i64, i64, %"class.base::Version"*, i64) local_unnamed_addr #0 comdat {
  %9 = alloca %"class.base::Version", align 8
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %145, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"class.base::Version"* %1 to i64
  %13 = ptrtoint %"class.base::Version"* %0 to i64
  br label %14

14:                                               ; preds = %11, %138
  %15 = phi %"class.base::Version"* [ %143, %138 ], [ %2, %11 ]
  %16 = phi i64 [ %142, %138 ], [ %4, %11 ]
  %17 = phi i64 [ %141, %138 ], [ %5, %11 ]
  %18 = phi i64 [ %140, %138 ], [ %12, %11 ]
  %19 = phi i64 [ %139, %138 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %27

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %145, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"class.base::Version"*
  br label %30

27:                                               ; preds = %14
  %28 = inttoptr i64 %19 to %"class.base::Version"*
  %29 = inttoptr i64 %18 to %"class.base::Version"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_SI_T_NS_15iterator_traitsISI_E15difference_typeESM_PNSL_10value_typeE(%"class.base::Version"* %28, %"class.base::Version"* %29, %"class.base::Version"* %15, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %3, i64 %16, i64 %17, %"class.base::Version"* %6)
  br label %145

30:                                               ; preds = %25, %35
  %31 = phi i64 [ %16, %25 ], [ %38, %35 ]
  %32 = phi i64 [ %19, %25 ], [ %37, %35 ]
  %33 = inttoptr i64 %32 to %"class.base::Version"*
  %34 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %26, %"class.base::Version"* dereferenceable(24) %33) #10
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %33, i64 1
  %37 = ptrtoint %"class.base::Version"* %36 to i64
  %38 = add nsw i64 %31, -1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %145, label %30

40:                                               ; preds = %30
  %41 = inttoptr i64 %32 to %"class.base::Version"*
  %42 = icmp slt i64 %31, %17
  br i1 %42, label %43, label %68

43:                                               ; preds = %40
  %44 = sdiv i64 %17, 2
  %45 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %26, i64 %44
  %46 = ptrtoint %"class.base::Version"* %45 to i64
  %47 = sub i64 %18, %32
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %43
  %50 = sdiv exact i64 %47, 24
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi %"class.base::Version"* [ %61, %51 ], [ %41, %49 ]
  %53 = phi i64 [ %60, %51 ], [ %50, %49 ]
  %54 = lshr i64 %53, 1
  %55 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %52, i64 %54
  %56 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %45, %"class.base::Version"* dereferenceable(24) %55) #10
  %57 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %55, i64 1
  %58 = xor i64 %54, -1
  %59 = add i64 %53, %58
  %60 = select i1 %56, i64 %54, i64 %59
  %61 = select i1 %56, %"class.base::Version"* %52, %"class.base::Version"* %57
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %63, label %51

63:                                               ; preds = %51, %43
  %64 = phi %"class.base::Version"* [ %41, %43 ], [ %61, %51 ]
  %65 = ptrtoint %"class.base::Version"* %64 to i64
  %66 = sub i64 %65, %32
  %67 = sdiv exact i64 %66, 24
  br label %116

68:                                               ; preds = %40
  %69 = icmp eq i64 %31, 1
  br i1 %69, label %70, label %90

70:                                               ; preds = %68
  %71 = inttoptr i64 %18 to %"class.base::Version"*
  %72 = inttoptr i64 %32 to %"class.base::Version"*
  %73 = bitcast %"class.base::Version"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #10
  %74 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %9, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %9, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false) #10
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* nonnull %9, %"class.base::Version"* dereferenceable(24) %72) #10
  %76 = icmp eq %"class.base::Version"* %72, %71
  br i1 %76, label %83, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %72, i64 0, i32 0
  %79 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %71, i64 0, i32 0, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %71, i64 0, i32 0, i32 0, i32 1
  %82 = load i32*, i32** %81, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %78, i32* %80, i32* %82) #10
  br label %83

83:                                               ; preds = %77, %70
  %84 = icmp eq %"class.base::Version"* %9, %71
  br i1 %84, label %89, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %71, i64 0, i32 0
  %87 = load i32*, i32** %74, align 8
  %88 = load i32*, i32** %75, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %86, i32* %87, i32* %88) #10
  br label %89

89:                                               ; preds = %85, %83
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #10
  br label %145

90:                                               ; preds = %68
  %91 = sdiv i64 %31, 2
  %92 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %41, i64 %91
  %93 = ptrtoint %"class.base::Version"* %92 to i64
  %94 = ptrtoint %"class.base::Version"* %15 to i64
  %95 = sub i64 %94, %18
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %111, label %97

97:                                               ; preds = %90
  %98 = sdiv exact i64 %95, 24
  br label %99

99:                                               ; preds = %99, %97
  %100 = phi %"class.base::Version"* [ %109, %99 ], [ %26, %97 ]
  %101 = phi i64 [ %108, %99 ], [ %98, %97 ]
  %102 = lshr i64 %101, 1
  %103 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %100, i64 %102
  %104 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %103, %"class.base::Version"* dereferenceable(24) %92) #10
  %105 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %103, i64 1
  %106 = xor i64 %102, -1
  %107 = add i64 %101, %106
  %108 = select i1 %104, i64 %107, i64 %102
  %109 = select i1 %104, %"class.base::Version"* %105, %"class.base::Version"* %100
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %111, label %99

111:                                              ; preds = %99, %90
  %112 = phi %"class.base::Version"* [ %26, %90 ], [ %109, %99 ]
  %113 = ptrtoint %"class.base::Version"* %112 to i64
  %114 = sub i64 %113, %18
  %115 = sdiv exact i64 %114, 24
  br label %116

116:                                              ; preds = %111, %63
  %117 = phi i64 [ %65, %63 ], [ %93, %111 ]
  %118 = phi i64 [ %46, %63 ], [ %113, %111 ]
  %119 = phi i64 [ %44, %63 ], [ %115, %111 ]
  %120 = phi i64 [ %67, %63 ], [ %91, %111 ]
  %121 = sub nsw i64 %31, %120
  %122 = sub nsw i64 %17, %119
  %123 = inttoptr i64 %117 to %"class.base::Version"*
  %124 = inttoptr i64 %118 to %"class.base::Version"*
  %125 = icmp eq %"class.base::Version"* %123, %26
  br i1 %125, label %130, label %126

126:                                              ; preds = %116
  %127 = icmp eq %"class.base::Version"* %26, %124
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = tail call %"class.base::Version"* @_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN4base7VersionEEEEET_S6_S6_S6_(%"class.base::Version"* %123, %"class.base::Version"* %26, %"class.base::Version"* %124) #10
  br label %130

130:                                              ; preds = %116, %126, %128
  %131 = phi %"class.base::Version"* [ %129, %128 ], [ %123, %126 ], [ %124, %116 ]
  %132 = add nsw i64 %120, %119
  %133 = add nsw i64 %121, %122
  %134 = icmp slt i64 %132, %133
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  %136 = ptrtoint %"class.base::Version"* %131 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_SI_T_NS_15iterator_traitsISI_E15difference_typeESM_PNSL_10value_typeEl(%"class.base::Version"* %41, %"class.base::Version"* %123, %"class.base::Version"* %131, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %3, i64 %120, i64 %119, %"class.base::Version"* %6, i64 %7)
  br label %138

137:                                              ; preds = %130
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_SI_T_NS_15iterator_traitsISI_E15difference_typeESM_PNSL_10value_typeEl(%"class.base::Version"* %131, %"class.base::Version"* %124, %"class.base::Version"* %15, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1) %3, i64 %121, i64 %122, %"class.base::Version"* %6, i64 %7)
  br label %138

138:                                              ; preds = %135, %137
  %139 = phi i64 [ %136, %135 ], [ %32, %137 ]
  %140 = phi i64 [ %118, %135 ], [ %117, %137 ]
  %141 = phi i64 [ %122, %135 ], [ %119, %137 ]
  %142 = phi i64 [ %121, %135 ], [ %120, %137 ]
  %143 = phi %"class.base::Version"* [ %15, %135 ], [ %131, %137 ]
  %144 = icmp eq i64 %141, 0
  br i1 %144, label %145, label %14

145:                                              ; preds = %138, %23, %35, %8, %89, %27
  ret void
}

declare zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24), %"class.base::Version"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_PNS_15iterator_traitsISI_E10value_typeET_(%"class.base::Version"*, %"class.base::Version"*, %"class.base::Version"*, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.base::Version"* %0, %1
  br i1 %5, label %41, label %6

6:                                                ; preds = %4
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %2, %"class.base::Version"* dereferenceable(24) %0) #10
  %7 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 1
  %8 = icmp eq %"class.base::Version"* %7, %1
  br i1 %8, label %41, label %9

9:                                                ; preds = %6, %38
  %10 = phi %"class.base::Version"* [ %39, %38 ], [ %7, %6 ]
  %11 = phi %"class.base::Version"* [ %13, %38 ], [ %2, %6 ]
  %12 = phi %"class.base::Version"* [ %10, %38 ], [ %0, %6 ]
  %13 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %11, i64 1
  %14 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %10, %"class.base::Version"* dereferenceable(24) %11) #10
  br i1 %14, label %15, label %37

15:                                               ; preds = %9
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %13, %"class.base::Version"* dereferenceable(24) %11) #10
  %16 = icmp eq %"class.base::Version"* %11, %2
  br i1 %16, label %28, label %17

17:                                               ; preds = %15, %21
  %18 = phi %"class.base::Version"* [ %19, %21 ], [ %11, %15 ]
  %19 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 -1
  %20 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %10, %"class.base::Version"* dereferenceable(24) %19) #10
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %19, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 -1, i32 0, i32 0, i32 1
  %26 = load i32*, i32** %25, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %22, i32* %24, i32* %26) #10
  %27 = icmp eq %"class.base::Version"* %19, %2
  br i1 %27, label %28, label %17

28:                                               ; preds = %17, %21, %15
  %29 = phi %"class.base::Version"* [ %2, %15 ], [ %2, %21 ], [ %18, %17 ]
  %30 = icmp eq %"class.base::Version"* %29, %10
  br i1 %30, label %38, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %29, i64 0, i32 0
  %33 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %10, i64 0, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %12, i64 1, i32 0, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %32, i32* %34, i32* %36) #10
  br label %38

37:                                               ; preds = %9
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %13, %"class.base::Version"* dereferenceable(24) %10) #10
  br label %38

38:                                               ; preds = %31, %28, %37
  %39 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %10, i64 1
  %40 = icmp eq %"class.base::Version"* %39, %1
  br i1 %40, label %41, label %9

41:                                               ; preds = %38, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_7VersionENS1_8identityENS_4lessIvEENS_6vectorIS4_NS_9allocatorIS4_EEEEE13value_compareENS_11__wrap_iterIPS4_EEEEvT0_SI_SI_T_NS_15iterator_traitsISI_E15difference_typeESM_PNSL_10value_typeE(%"class.base::Version"*, %"class.base::Version"*, %"class.base::Version"*, %"struct.base::internal::flat_tree<base::Version, base::identity, std::__1::less<void>, std::__1::vector<base::Version, std::__1::allocator<base::Version> > >::value_compare"* dereferenceable(1), i64, i64, %"class.base::Version"*) local_unnamed_addr #0 comdat {
  %8 = icmp sgt i64 %4, %5
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = icmp eq %"class.base::Version"* %0, %1
  br i1 %10, label %134, label %61

11:                                               ; preds = %7
  %12 = icmp eq %"class.base::Version"* %1, %2
  br i1 %12, label %134, label %115

13:                                               ; preds = %61
  %14 = icmp eq %"class.base::Version"* %67, %6
  br i1 %14, label %123, label %15

15:                                               ; preds = %13, %56
  %16 = phi %"class.base::Version"* [ %58, %56 ], [ %6, %13 ]
  %17 = phi %"class.base::Version"* [ %59, %56 ], [ %0, %13 ]
  %18 = phi %"class.base::Version"* [ %57, %56 ], [ %1, %13 ]
  %19 = icmp eq %"class.base::Version"* %18, %2
  br i1 %19, label %20, label %34

20:                                               ; preds = %15, %30
  %21 = phi %"class.base::Version"* [ %32, %30 ], [ %17, %15 ]
  %22 = phi %"class.base::Version"* [ %31, %30 ], [ %16, %15 ]
  %23 = icmp eq %"class.base::Version"* %21, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %21, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %22, i64 0, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %22, i64 0, i32 0, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %25, i32* %27, i32* %29) #10
  br label %30

30:                                               ; preds = %24, %20
  %31 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %22, i64 1
  %32 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %21, i64 1
  %33 = icmp eq %"class.base::Version"* %22, %62
  br i1 %33, label %123, label %20

34:                                               ; preds = %15
  %35 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %18, %"class.base::Version"* dereferenceable(24) %16) #10
  br i1 %35, label %36, label %46

36:                                               ; preds = %34
  %37 = icmp eq %"class.base::Version"* %17, %18
  br i1 %37, label %44, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %17, i64 0, i32 0
  %40 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 0, i32 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 0, i32 0, i32 0, i32 1
  %43 = load i32*, i32** %42, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %39, i32* %41, i32* %43) #10
  br label %44

44:                                               ; preds = %38, %36
  %45 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %18, i64 1
  br label %56

46:                                               ; preds = %34
  %47 = icmp eq %"class.base::Version"* %17, %16
  br i1 %47, label %54, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %17, i64 0, i32 0
  %50 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %16, i64 0, i32 0, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %16, i64 0, i32 0, i32 0, i32 1
  %53 = load i32*, i32** %52, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %49, i32* %51, i32* %53) #10
  br label %54

54:                                               ; preds = %48, %46
  %55 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %16, i64 1
  br label %56

56:                                               ; preds = %54, %44
  %57 = phi %"class.base::Version"* [ %45, %44 ], [ %18, %54 ]
  %58 = phi %"class.base::Version"* [ %16, %44 ], [ %55, %54 ]
  %59 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %17, i64 1
  %60 = icmp eq %"class.base::Version"* %58, %67
  br i1 %60, label %123, label %15

61:                                               ; preds = %9, %61
  %62 = phi %"class.base::Version"* [ %67, %61 ], [ %6, %9 ]
  %63 = phi %"class.base::Version"* [ %66, %61 ], [ %0, %9 ]
  %64 = phi i64 [ %65, %61 ], [ 0, %9 ]
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %62, %"class.base::Version"* dereferenceable(24) %63) #10
  %65 = add i64 %64, 1
  %66 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %63, i64 1
  %67 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %62, i64 1
  %68 = icmp eq %"class.base::Version"* %66, %1
  br i1 %68, label %13, label %61

69:                                               ; preds = %115
  %70 = icmp eq %"class.base::Version"* %121, %6
  br i1 %70, label %123, label %71

71:                                               ; preds = %69, %111
  %72 = phi %"class.base::Version"* [ %94, %111 ], [ %2, %69 ]
  %73 = phi %"class.base::Version"* [ %113, %111 ], [ %121, %69 ]
  %74 = phi %"class.base::Version"* [ %112, %111 ], [ %1, %69 ]
  %75 = icmp eq %"class.base::Version"* %74, %0
  br i1 %75, label %76, label %90

76:                                               ; preds = %71, %88
  %77 = phi %"class.base::Version"* [ %79, %88 ], [ %73, %71 ]
  %78 = phi %"class.base::Version"* [ %80, %88 ], [ %72, %71 ]
  %79 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %77, i64 -1
  %80 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %78, i64 -1
  %81 = icmp eq %"class.base::Version"* %78, %77
  br i1 %81, label %88, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %80, i64 0, i32 0
  %84 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %79, i64 0, i32 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %77, i64 -1, i32 0, i32 0, i32 1
  %87 = load i32*, i32** %86, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %83, i32* %85, i32* %87) #10
  br label %88

88:                                               ; preds = %82, %76
  %89 = icmp eq %"class.base::Version"* %79, %6
  br i1 %89, label %123, label %76

90:                                               ; preds = %71
  %91 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %74, i64 -1
  %92 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %73, i64 -1
  %93 = tail call zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %92, %"class.base::Version"* dereferenceable(24) %91) #10
  %94 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %72, i64 -1
  br i1 %93, label %95, label %103

95:                                               ; preds = %90
  %96 = icmp eq %"class.base::Version"* %72, %74
  br i1 %96, label %111, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %94, i64 0, i32 0
  %99 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %91, i64 0, i32 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %74, i64 -1, i32 0, i32 0, i32 1
  %102 = load i32*, i32** %101, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %98, i32* %100, i32* %102) #10
  br label %111

103:                                              ; preds = %90
  %104 = icmp eq %"class.base::Version"* %72, %73
  br i1 %104, label %111, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %94, i64 0, i32 0
  %107 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %92, i64 0, i32 0, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %73, i64 -1, i32 0, i32 0, i32 1
  %110 = load i32*, i32** %109, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %106, i32* %108, i32* %110) #10
  br label %111

111:                                              ; preds = %105, %103, %97, %95
  %112 = phi %"class.base::Version"* [ %91, %95 ], [ %91, %97 ], [ %74, %103 ], [ %74, %105 ]
  %113 = phi %"class.base::Version"* [ %73, %95 ], [ %73, %97 ], [ %92, %103 ], [ %92, %105 ]
  %114 = icmp eq %"class.base::Version"* %113, %6
  br i1 %114, label %123, label %71

115:                                              ; preds = %11, %115
  %116 = phi %"class.base::Version"* [ %121, %115 ], [ %6, %11 ]
  %117 = phi %"class.base::Version"* [ %120, %115 ], [ %1, %11 ]
  %118 = phi i64 [ %119, %115 ], [ 0, %11 ]
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %116, %"class.base::Version"* dereferenceable(24) %117) #10
  %119 = add i64 %118, 1
  %120 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %117, i64 1
  %121 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %116, i64 1
  %122 = icmp eq %"class.base::Version"* %120, %2
  br i1 %122, label %69, label %115

123:                                              ; preds = %56, %30, %111, %88, %69, %13
  %124 = phi i64 [ %65, %13 ], [ %119, %69 ], [ %119, %88 ], [ %119, %111 ], [ %65, %30 ], [ %65, %56 ]
  %125 = icmp eq %"class.base::Version"* %6, null
  %126 = icmp eq i64 %124, 0
  %127 = or i1 %125, %126
  br i1 %127, label %134, label %128

128:                                              ; preds = %123, %128
  %129 = phi i64 [ %131, %128 ], [ 0, %123 ]
  %130 = phi %"class.base::Version"* [ %132, %128 ], [ %6, %123 ]
  tail call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %130) #10
  %131 = add nuw i64 %129, 1
  %132 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %130, i64 1
  %133 = icmp eq i64 %131, %124
  br i1 %133, label %134, label %128

134:                                              ; preds = %128, %11, %9, %123
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::Version"* @_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN4base7VersionEEEEET_S6_S6_S6_(%"class.base::Version"*, %"class.base::Version"*, %"class.base::Version"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.base::Version", align 8
  %5 = alloca %"class.base::Version", align 8
  %6 = ptrtoint %"class.base::Version"* %1 to i64
  %7 = bitcast %"class.base::Version"* %4 to i8*
  %8 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %4, i64 0, i32 0, i32 0, i32 1
  br label %10

10:                                               ; preds = %32, %3
  %11 = phi i64 [ %6, %3 ], [ %35, %32 ]
  %12 = phi %"class.base::Version"* [ %0, %3 ], [ %28, %32 ]
  %13 = phi %"class.base::Version"* [ %1, %3 ], [ %29, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false) #10
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* nonnull %4, %"class.base::Version"* dereferenceable(24) %12) #10
  %14 = icmp eq %"class.base::Version"* %12, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %12, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %13, i64 0, i32 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %13, i64 0, i32 0, i32 0, i32 1
  %20 = load i32*, i32** %19, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %16, i32* %18, i32* %20) #10
  br label %21

21:                                               ; preds = %15, %10
  %22 = icmp eq %"class.base::Version"* %4, %13
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %13, i64 0, i32 0
  %25 = load i32*, i32** %8, align 8
  %26 = load i32*, i32** %9, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %24, i32* %25, i32* %26) #10
  br label %27

27:                                               ; preds = %21, %23
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  %28 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %12, i64 1
  %29 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %13, i64 1
  %30 = icmp eq %"class.base::Version"* %29, %2
  %31 = inttoptr i64 %11 to %"class.base::Version"*
  br i1 %30, label %36, label %32

32:                                               ; preds = %27
  %33 = ptrtoint %"class.base::Version"* %29 to i64
  %34 = icmp eq %"class.base::Version"* %28, %31
  %35 = select i1 %34, i64 %33, i64 %11
  br label %10

36:                                               ; preds = %27
  %37 = inttoptr i64 %11 to %"class.base::Version"*
  %38 = icmp eq %"class.base::Version"* %28, %37
  br i1 %38, label %73, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.base::Version"* %5 to i8*
  %41 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %5, i64 0, i32 0, i32 0, i32 1
  br label %43

43:                                               ; preds = %70, %39
  %44 = phi i64 [ %72, %70 ], [ %11, %39 ]
  %45 = phi %"class.base::Version"* [ %65, %70 ], [ %28, %39 ]
  %46 = phi %"class.base::Version"* [ %66, %70 ], [ %37, %39 ]
  %47 = inttoptr i64 %44 to %"class.base::Version"*
  br label %48

48:                                               ; preds = %43, %69
  %49 = phi %"class.base::Version"* [ %65, %69 ], [ %45, %43 ]
  %50 = phi %"class.base::Version"* [ %47, %69 ], [ %46, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false) #10
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* nonnull %5, %"class.base::Version"* dereferenceable(24) %49) #10
  %51 = icmp eq %"class.base::Version"* %49, %50
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %49, i64 0, i32 0
  %54 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %50, i64 0, i32 0, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %50, i64 0, i32 0, i32 0, i32 1
  %57 = load i32*, i32** %56, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %53, i32* %55, i32* %57) #10
  br label %58

58:                                               ; preds = %52, %48
  %59 = icmp eq %"class.base::Version"* %5, %50
  br i1 %59, label %64, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %50, i64 0, i32 0
  %62 = load i32*, i32** %41, align 8
  %63 = load i32*, i32** %42, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %61, i32* %62, i32* %63) #10
  br label %64

64:                                               ; preds = %58, %60
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  %65 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %49, i64 1
  %66 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %50, i64 1
  %67 = icmp eq %"class.base::Version"* %66, %2
  %68 = icmp eq %"class.base::Version"* %65, %47
  br i1 %67, label %69, label %70

69:                                               ; preds = %64
  br i1 %68, label %73, label %48

70:                                               ; preds = %64
  %71 = ptrtoint %"class.base::Version"* %66 to i64
  %72 = select i1 %68, i64 %71, i64 %44
  br label %43

73:                                               ; preds = %69, %36
  ret %"class.base::Version"* %28
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.93"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::FilePath"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.93"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.93"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::FilePath"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.base::FilePath"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.base::FilePath"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %33, i64 %9
  %35 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %33, i64 %32
  %36 = ptrtoint %"class.base::FilePath"* %35 to i64
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %34, %"class.base::FilePath"* dereferenceable(24) %1) #10
  %37 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %34, i64 1
  %38 = ptrtoint %"class.base::FilePath"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.base::FilePath"*, %"class.base::FilePath"** %39, align 8
  %41 = load %"class.base::FilePath"*, %"class.base::FilePath"** %3, align 8
  %42 = icmp eq %"class.base::FilePath"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.base::FilePath"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.base::FilePath"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.base::FilePath"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %46, i64 -1
  %49 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %47, i64 -1
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %48, %"class.base::FilePath"* dereferenceable(24) %49) #10
  %50 = icmp eq %"class.base::FilePath"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.base::FilePath"*, %"class.base::FilePath"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.base::FilePath"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.base::FilePath"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.base::FilePath"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.base::FilePath"*
  %60 = icmp eq %"class.base::FilePath"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.base::FilePath"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %62, i64 -1
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %63) #10
  %64 = icmp eq %"class.base::FilePath"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9downgrade12_GLOBAL__N_122GetVersionFromFileNameERKN4base8FilePathE: argument 0"}
!4 = distinct !{!4, !"_ZN9downgrade12_GLOBAL__N_122GetVersionFromFileNameERKN4base8FilePathE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN9downgrade12_GLOBAL__N_122GetVersionFromFileNameERKN4base8FilePathE: argument 0"}
!7 = distinct !{!7, !"_ZN9downgrade12_GLOBAL__N_122GetVersionFromFileNameERKN4base8FilePathE"}
