; ModuleID = '../../third_party/libpng/pngtrans.c'
source_filename = "../../third_party/libpng/pngtrans.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, {}*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, %struct.png_unknown_chunk_t*, i32, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [56 x i8] c"png_set_filler is invalid for low bit depth gray output\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"png_set_filler: inappropriate color type\00", align 1
@onebppswaptable = internal unnamed_addr constant [256 x i8] c"\00\80@\C0 \A0`\E0\10\90P\D00\B0p\F0\08\88H\C8(\A8h\E8\18\98X\D88\B8x\F8\04\84D\C4$\A4d\E4\14\94T\D44\B4t\F4\0C\8CL\CC,\ACl\EC\1C\9C\5C\DC<\BC|\FC\02\82B\C2\22\A2b\E2\12\92R\D22\B2r\F2\0A\8AJ\CA*\AAj\EA\1A\9AZ\DA:\BAz\FA\06\86F\C6&\A6f\E6\16\96V\D66\B6v\F6\0E\8EN\CE.\AEn\EE\1E\9E^\DE>\BE~\FE\01\81A\C1!\A1a\E1\11\91Q\D11\B1q\F1\09\89I\C9)\A9i\E9\19\99Y\D99\B9y\F9\05\85E\C5%\A5e\E5\15\95U\D55\B5u\F5\0D\8DM\CD-\ADm\ED\1D\9D]\DD=\BD}\FD\03\83C\C3#\A3c\E3\13\93S\D33\B3s\F3\0B\8BK\CB+\ABk\EB\1B\9B[\DB;\BB{\FB\07\87G\C7'\A7g\E7\17\97W\D77\B7w\F7\0F\8FO\CF/\AFo\EF\1F\9F_\DF?\BF\7F\FF", align 16
@twobppswaptable = internal unnamed_addr constant [256 x i8] c"\00@\80\C0\10P\90\D0 `\A0\E00p\B0\F0\04D\84\C4\14T\94\D4$d\A4\E44t\B4\F4\08H\88\C8\18X\98\D8(h\A8\E88x\B8\F8\0CL\8C\CC\1C\5C\9C\DC,l\AC\EC<|\BC\FC\01A\81\C1\11Q\91\D1!a\A1\E11q\B1\F1\05E\85\C5\15U\95\D5%e\A5\E55u\B5\F5\09I\89\C9\19Y\99\D9)i\A9\E99y\B9\F9\0DM\8D\CD\1D]\9D\DD-m\AD\ED=}\BD\FD\02B\82\C2\12R\92\D2\22b\A2\E22r\B2\F2\06F\86\C6\16V\96\D6&f\A6\E66v\B6\F6\0AJ\8A\CA\1AZ\9A\DA*j\AA\EA:z\BA\FA\0EN\8E\CE\1E^\9E\DE.n\AE\EE>~\BE\FE\03C\83\C3\13S\93\D3#c\A3\E33s\B3\F3\07G\87\C7\17W\97\D7'g\A7\E77w\B7\F7\0BK\8B\CB\1B[\9B\DB+k\AB\EB;{\BB\FB\0FO\8F\CF\1F_\9F\DF/o\AF\EF?\7F\BF\FF", align 16
@fourbppswaptable = internal unnamed_addr constant [256 x i8] c"\00\10 0@P`p\80\90\A0\B0\C0\D0\E0\F0\01\11!1AQaq\81\91\A1\B1\C1\D1\E1\F1\02\12\222BRbr\82\92\A2\B2\C2\D2\E2\F2\03\13#3CScs\83\93\A3\B3\C3\D3\E3\F3\04\14$4DTdt\84\94\A4\B4\C4\D4\E4\F4\05\15%5EUeu\85\95\A5\B5\C5\D5\E5\F5\06\16&6FVfv\86\96\A6\B6\C6\D6\E6\F6\07\17'7GWgw\87\97\A7\B7\C7\D7\E7\F7\08\18(8HXhx\88\98\A8\B8\C8\D8\E8\F8\09\19)9IYiy\89\99\A9\B9\C9\D9\E9\F9\0A\1A*:JZjz\8A\9A\AA\BA\CA\DA\EA\FA\0B\1B+;K[k{\8B\9B\AB\BB\CB\DB\EB\FB\0C\1C,<L\5Cl|\8C\9C\AC\BC\CC\DC\EC\FC\0D\1D-=M]m}\8D\9D\AD\BD\CD\DD\ED\FD\0E\1E.>N^n~\8E\9E\AE\BE\CE\DE\EE\FE\0F\1F/?O_o\7F\8F\9F\AF\BF\CF\DF\EF\FF", align 16
@.str.2 = private unnamed_addr constant [63 x i8] c"info change after png_start_read_image or png_read_update_info\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_bgr(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %5 = load i32, i32* %4, align 4
  %6 = or i32 %5, 1
  store i32 %6, i32* %4, align 4
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_swap(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 16
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 16
  store i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %1, %7, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_packing(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %5 = load i8, i8* %4, align 2
  %6 = icmp ult i8 %5, 8
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 4
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 62
  store i8 8, i8* %11, align 1
  br label %12

12:                                               ; preds = %1, %7, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_packswap(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %5 = load i8, i8* %4, align 2
  %6 = icmp ult i8 %5, 8
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 65536
  store i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %1, %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_shift(%struct.png_struct_def* noalias, %struct.png_color_8_struct* nocapture readonly) local_unnamed_addr #1 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %6 = load i32, i32* %5, align 4
  %7 = or i32 %6, 8
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 0
  %9 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 5, i1 false)
  br label %10

10:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @cr_png_set_interlace_handling(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 57
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 2
  store i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %1, %3, %7
  %12 = phi i32 [ 7, %7 ], [ 1, %3 ], [ 1, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_filler(%struct.png_struct_def* noalias, i32, i32) local_unnamed_addr #1 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i16
  %9 = icmp slt i16 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = trunc i32 %1 to i16
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 70
  store i16 %11, i16* %12, align 4
  br label %26

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %25 [
    i8 2, label %16
    i8 0, label %18
  ]

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 65
  store i8 4, i8* %17, align 2
  br label %26

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %20 = load i8, i8* %19, align 2
  %21 = icmp ugt i8 %20, 7
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 65
  store i8 2, i8* %23, align 2
  br label %26

24:                                               ; preds = %18
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0)) #5
  br label %37

25:                                               ; preds = %13
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)) #5
  br label %37

26:                                               ; preds = %16, %22, %10
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %28 = load i32, i32* %27, align 4
  %29 = or i32 %28, 32768
  store i32 %29, i32* %27, align 4
  %30 = icmp eq i32 %2, 1
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %32 = load i32, i32* %31, align 8
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = or i32 %32, 128
  store i32 %34, i32* %31, align 8
  br label %37

35:                                               ; preds = %26
  %36 = and i32 %32, -129
  store i32 %36, i32* %31, align 8
  br label %37

37:                                               ; preds = %3, %24, %25, %35, %33
  ret void
}

declare void @cr_png_app_error(%struct.png_struct_def*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_add_alpha(%struct.png_struct_def* noalias, i32, i32) local_unnamed_addr #1 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %7 = load i32, i32* %6, align 4, !alias.scope !2
  %8 = trunc i32 %7 to i16
  %9 = icmp slt i16 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = trunc i32 %1 to i16
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 70
  store i16 %11, i16* %12, align 4, !alias.scope !2
  br label %26

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %15 = load i8, i8* %14, align 1, !alias.scope !2
  switch i8 %15, label %25 [
    i8 2, label %16
    i8 0, label %18
  ]

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 65
  store i8 4, i8* %17, align 2, !alias.scope !2
  br label %26

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %20 = load i8, i8* %19, align 2, !alias.scope !2
  %21 = icmp ugt i8 %20, 7
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 65
  store i8 2, i8* %23, align 2, !alias.scope !2
  br label %26

24:                                               ; preds = %18
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0)) #5
  br label %37

25:                                               ; preds = %13
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)) #5
  br label %37

26:                                               ; preds = %22, %16, %10
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %28 = load i32, i32* %27, align 4, !alias.scope !2
  %29 = or i32 %28, 32768
  store i32 %29, i32* %27, align 4, !alias.scope !2
  %30 = icmp eq i32 %2, 1
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %32 = load i32, i32* %31, align 8, !alias.scope !2
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = or i32 %32, 128
  store i32 %34, i32* %31, align 8, !alias.scope !2
  br label %37

35:                                               ; preds = %26
  %36 = and i32 %32, -129
  store i32 %36, i32* %31, align 8, !alias.scope !2
  br label %37

37:                                               ; preds = %24, %25, %33, %35
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i16
  %41 = icmp slt i16 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = or i32 %39, 16777216
  store i32 %43, i32* %38, align 4
  br label %44

44:                                               ; preds = %3, %42, %37
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_swap_alpha(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %5 = load i32, i32* %4, align 4
  %6 = or i32 %5, 131072
  store i32 %6, i32* %4, align 4
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_do_swap(%struct.png_row_info_struct* nocapture readonly, i8* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 16
  br i1 %5, label %6, label %53

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 2
  %11 = zext i8 %10 to i32
  %12 = mul i32 %8, %11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %53, label %14

14:                                               ; preds = %6
  %15 = add i32 %12, -1
  %16 = and i32 %12, 3
  %17 = icmp ult i32 %15, 3
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = sub i32 %12, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i8* [ %1, %18 ], [ %38, %20 ]
  %22 = phi i32 [ %19, %18 ], [ %39, %20 ]
  %23 = load i8, i8* %21, align 1
  %24 = getelementptr inbounds i8, i8* %21, i64 1
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %21, align 1
  store i8 %23, i8* %24, align 1
  %26 = getelementptr inbounds i8, i8* %21, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %21, i64 3
  %29 = load i8, i8* %28, align 1
  store i8 %29, i8* %26, align 1
  store i8 %27, i8* %28, align 1
  %30 = getelementptr inbounds i8, i8* %21, i64 4
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds i8, i8* %21, i64 5
  %33 = load i8, i8* %32, align 1
  store i8 %33, i8* %30, align 1
  store i8 %31, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %21, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds i8, i8* %21, i64 7
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %34, align 1
  store i8 %35, i8* %36, align 1
  %38 = getelementptr inbounds i8, i8* %21, i64 8
  %39 = add i32 %22, -4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %20

41:                                               ; preds = %20, %14
  %42 = phi i8* [ %1, %14 ], [ %38, %20 ]
  %43 = icmp eq i32 %16, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %41, %44
  %45 = phi i8* [ %50, %44 ], [ %42, %41 ]
  %46 = phi i32 [ %51, %44 ], [ %16, %41 ]
  %47 = load i8, i8* %45, align 1
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  %49 = load i8, i8* %48, align 1
  store i8 %49, i8* %45, align 1
  store i8 %47, i8* %48, align 1
  %50 = getelementptr inbounds i8, i8* %45, i64 2
  %51 = add i32 %46, -1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %44, !llvm.loop !5

53:                                               ; preds = %41, %44, %6, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_do_packswap(%struct.png_row_info_struct* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 1
  %5 = icmp ult i8 %4, 8
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  switch i8 %4, label %23 [
    i8 1, label %12
    i8 2, label %10
    i8 4, label %11
  ]

10:                                               ; preds = %6
  br label %12

11:                                               ; preds = %6
  br label %12

12:                                               ; preds = %6, %10, %11
  %13 = phi i8* [ getelementptr inbounds ([256 x i8], [256 x i8]* @twobppswaptable, i64 0, i64 0), %10 ], [ getelementptr inbounds ([256 x i8], [256 x i8]* @fourbppswaptable, i64 0, i64 0), %11 ], [ getelementptr inbounds ([256 x i8], [256 x i8]* @onebppswaptable, i64 0, i64 0), %6 ]
  %14 = icmp sgt i64 %8, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %12, %15
  %16 = phi i8* [ %21, %15 ], [ %1, %12 ]
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = load i8, i8* %19, align 1
  store i8 %20, i8* %16, align 1
  %21 = getelementptr inbounds i8, i8* %16, i64 1
  %22 = icmp ult i8* %21, %9
  br i1 %22, label %15, label %23

23:                                               ; preds = %15, %12, %6, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_do_strip_channel(%struct.png_row_info_struct* nocapture, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 %5
  %7 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 2
  switch i8 %8, label %208 [
    i8 2, label %9
    i8 4, label %141
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 1
  switch i8 %11, label %208 [
    i8 8, label %12
    i8 16, label %71
  ]

12:                                               ; preds = %9
  %13 = icmp eq i32 %2, 0
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = getelementptr inbounds i8, i8* %1, i64 2
  %16 = select i1 %13, i8* %15, i8* %14
  %17 = select i1 %13, i8* %14, i8* %1
  %18 = icmp ult i8* %16, %6
  br i1 %18, label %19, label %133

19:                                               ; preds = %12
  %20 = ptrtoint i8* %16 to i64
  %21 = xor i64 %20, -1
  %22 = add i64 %5, %21
  %23 = getelementptr i8, i8* %1, i64 %22
  %24 = ptrtoint i8* %23 to i64
  %25 = lshr i64 %24, 1
  %26 = add nuw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %19, %29
  %30 = phi i8* [ %34, %29 ], [ %17, %19 ]
  %31 = phi i8* [ %35, %29 ], [ %16, %19 ]
  %32 = phi i64 [ %36, %29 ], [ %27, %19 ]
  %33 = load i8, i8* %31, align 1
  %34 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 %33, i8* %30, align 1
  %35 = getelementptr inbounds i8, i8* %31, i64 2
  %36 = add i64 %32, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %29, !llvm.loop !7

38:                                               ; preds = %29, %19
  %39 = phi i8* [ %17, %19 ], [ %34, %29 ]
  %40 = phi i8* [ %16, %19 ], [ %35, %29 ]
  %41 = phi i8* [ undef, %19 ], [ %34, %29 ]
  %42 = icmp ult i8* %23, inttoptr (i64 14 to i8*)
  br i1 %42, label %133, label %43

43:                                               ; preds = %38, %43
  %44 = phi i8* [ %68, %43 ], [ %39, %38 ]
  %45 = phi i8* [ %69, %43 ], [ %40, %38 ]
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  store i8 %46, i8* %44, align 1
  %48 = getelementptr inbounds i8, i8* %45, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  store i8 %49, i8* %47, align 1
  %51 = getelementptr inbounds i8, i8* %45, i64 4
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds i8, i8* %44, i64 3
  store i8 %52, i8* %50, align 1
  %54 = getelementptr inbounds i8, i8* %45, i64 6
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %44, i64 4
  store i8 %55, i8* %53, align 1
  %57 = getelementptr inbounds i8, i8* %45, i64 8
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds i8, i8* %44, i64 5
  store i8 %58, i8* %56, align 1
  %60 = getelementptr inbounds i8, i8* %45, i64 10
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %44, i64 6
  store i8 %61, i8* %59, align 1
  %63 = getelementptr inbounds i8, i8* %45, i64 12
  %64 = load i8, i8* %63, align 1
  %65 = getelementptr inbounds i8, i8* %44, i64 7
  store i8 %64, i8* %62, align 1
  %66 = getelementptr inbounds i8, i8* %45, i64 14
  %67 = load i8, i8* %66, align 1
  %68 = getelementptr inbounds i8, i8* %44, i64 8
  store i8 %67, i8* %65, align 1
  %69 = getelementptr inbounds i8, i8* %45, i64 16
  %70 = icmp ult i8* %69, %6
  br i1 %70, label %43, label %133

71:                                               ; preds = %9
  %72 = icmp eq i32 %2, 0
  %73 = getelementptr inbounds i8, i8* %1, i64 2
  %74 = getelementptr inbounds i8, i8* %1, i64 4
  %75 = select i1 %72, i8* %74, i8* %73
  %76 = select i1 %72, i8* %73, i8* %1
  %77 = icmp ult i8* %75, %6
  br i1 %77, label %78, label %133

78:                                               ; preds = %71
  %79 = ptrtoint i8* %75 to i64
  %80 = xor i64 %79, -1
  %81 = add i64 %5, %80
  %82 = getelementptr i8, i8* %1, i64 %81
  %83 = ptrtoint i8* %82 to i64
  %84 = lshr i64 %83, 2
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 3
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %78, %88
  %89 = phi i8* [ %96, %88 ], [ %76, %78 ]
  %90 = phi i8* [ %97, %88 ], [ %75, %78 ]
  %91 = phi i64 [ %98, %88 ], [ %86, %78 ]
  %92 = getelementptr inbounds i8, i8* %90, i64 1
  %93 = load i8, i8* %90, align 1
  %94 = getelementptr inbounds i8, i8* %89, i64 1
  store i8 %93, i8* %89, align 1
  %95 = load i8, i8* %92, align 1
  %96 = getelementptr inbounds i8, i8* %89, i64 2
  store i8 %95, i8* %94, align 1
  %97 = getelementptr inbounds i8, i8* %90, i64 4
  %98 = add i64 %91, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %88, !llvm.loop !8

100:                                              ; preds = %88, %78
  %101 = phi i8* [ %76, %78 ], [ %96, %88 ]
  %102 = phi i8* [ %75, %78 ], [ %97, %88 ]
  %103 = phi i8* [ undef, %78 ], [ %96, %88 ]
  %104 = icmp ult i8* %82, inttoptr (i64 12 to i8*)
  br i1 %104, label %133, label %105

105:                                              ; preds = %100, %105
  %106 = phi i8* [ %130, %105 ], [ %101, %100 ]
  %107 = phi i8* [ %131, %105 ], [ %102, %100 ]
  %108 = getelementptr inbounds i8, i8* %107, i64 1
  %109 = load i8, i8* %107, align 1
  %110 = getelementptr inbounds i8, i8* %106, i64 1
  store i8 %109, i8* %106, align 1
  %111 = load i8, i8* %108, align 1
  %112 = getelementptr inbounds i8, i8* %106, i64 2
  store i8 %111, i8* %110, align 1
  %113 = getelementptr inbounds i8, i8* %107, i64 4
  %114 = getelementptr inbounds i8, i8* %107, i64 5
  %115 = load i8, i8* %113, align 1
  %116 = getelementptr inbounds i8, i8* %106, i64 3
  store i8 %115, i8* %112, align 1
  %117 = load i8, i8* %114, align 1
  %118 = getelementptr inbounds i8, i8* %106, i64 4
  store i8 %117, i8* %116, align 1
  %119 = getelementptr inbounds i8, i8* %107, i64 8
  %120 = getelementptr inbounds i8, i8* %107, i64 9
  %121 = load i8, i8* %119, align 1
  %122 = getelementptr inbounds i8, i8* %106, i64 5
  store i8 %121, i8* %118, align 1
  %123 = load i8, i8* %120, align 1
  %124 = getelementptr inbounds i8, i8* %106, i64 6
  store i8 %123, i8* %122, align 1
  %125 = getelementptr inbounds i8, i8* %107, i64 12
  %126 = getelementptr inbounds i8, i8* %107, i64 13
  %127 = load i8, i8* %125, align 1
  %128 = getelementptr inbounds i8, i8* %106, i64 7
  store i8 %127, i8* %124, align 1
  %129 = load i8, i8* %126, align 1
  %130 = getelementptr inbounds i8, i8* %106, i64 8
  store i8 %129, i8* %128, align 1
  %131 = getelementptr inbounds i8, i8* %107, i64 16
  %132 = icmp ult i8* %131, %6
  br i1 %132, label %105, label %133

133:                                              ; preds = %100, %105, %38, %43, %71, %12
  %134 = phi i8 [ 8, %12 ], [ 16, %71 ], [ 8, %43 ], [ 8, %38 ], [ 16, %105 ], [ 16, %100 ]
  %135 = phi i8* [ %17, %12 ], [ %76, %71 ], [ %41, %38 ], [ %68, %43 ], [ %103, %100 ], [ %130, %105 ]
  %136 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 5
  store i8 %134, i8* %136, align 1
  store i8 1, i8* %7, align 2
  %137 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 2
  %138 = load i8, i8* %137, align 8
  %139 = icmp eq i8 %138, 4
  br i1 %139, label %140, label %203

140:                                              ; preds = %133
  store i8 0, i8* %137, align 8
  br label %203

141:                                              ; preds = %3
  %142 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 3
  %143 = load i8, i8* %142, align 1
  switch i8 %143, label %208 [
    i8 8, label %144
    i8 16, label %165
  ]

144:                                              ; preds = %141
  %145 = icmp eq i32 %2, 0
  %146 = getelementptr inbounds i8, i8* %1, i64 3
  %147 = select i1 %145, i64 4, i64 1
  %148 = select i1 %145, i8* %146, i8* %1
  %149 = icmp slt i64 %147, %5
  br i1 %149, label %150, label %195

150:                                              ; preds = %144
  %151 = getelementptr inbounds i8, i8* %1, i64 %147
  br label %152

152:                                              ; preds = %150, %152
  %153 = phi i8* [ %162, %152 ], [ %148, %150 ]
  %154 = phi i8* [ %163, %152 ], [ %151, %150 ]
  %155 = getelementptr inbounds i8, i8* %154, i64 1
  %156 = load i8, i8* %154, align 1
  %157 = getelementptr inbounds i8, i8* %153, i64 1
  store i8 %156, i8* %153, align 1
  %158 = getelementptr inbounds i8, i8* %154, i64 2
  %159 = load i8, i8* %155, align 1
  %160 = getelementptr inbounds i8, i8* %153, i64 2
  store i8 %159, i8* %157, align 1
  %161 = load i8, i8* %158, align 1
  %162 = getelementptr inbounds i8, i8* %153, i64 3
  store i8 %161, i8* %160, align 1
  %163 = getelementptr inbounds i8, i8* %154, i64 4
  %164 = icmp ult i8* %163, %6
  br i1 %164, label %152, label %195

165:                                              ; preds = %141
  %166 = icmp eq i32 %2, 0
  %167 = getelementptr inbounds i8, i8* %1, i64 6
  %168 = select i1 %166, i64 8, i64 2
  %169 = select i1 %166, i8* %167, i8* %1
  %170 = icmp slt i64 %168, %5
  br i1 %170, label %171, label %195

171:                                              ; preds = %165
  %172 = getelementptr inbounds i8, i8* %1, i64 %168
  br label %173

173:                                              ; preds = %171, %173
  %174 = phi i8* [ %192, %173 ], [ %169, %171 ]
  %175 = phi i8* [ %193, %173 ], [ %172, %171 ]
  %176 = getelementptr inbounds i8, i8* %175, i64 1
  %177 = load i8, i8* %175, align 1
  %178 = getelementptr inbounds i8, i8* %174, i64 1
  store i8 %177, i8* %174, align 1
  %179 = getelementptr inbounds i8, i8* %175, i64 2
  %180 = load i8, i8* %176, align 1
  %181 = getelementptr inbounds i8, i8* %174, i64 2
  store i8 %180, i8* %178, align 1
  %182 = getelementptr inbounds i8, i8* %175, i64 3
  %183 = load i8, i8* %179, align 1
  %184 = getelementptr inbounds i8, i8* %174, i64 3
  store i8 %183, i8* %181, align 1
  %185 = getelementptr inbounds i8, i8* %175, i64 4
  %186 = load i8, i8* %182, align 1
  %187 = getelementptr inbounds i8, i8* %174, i64 4
  store i8 %186, i8* %184, align 1
  %188 = getelementptr inbounds i8, i8* %175, i64 5
  %189 = load i8, i8* %185, align 1
  %190 = getelementptr inbounds i8, i8* %174, i64 5
  store i8 %189, i8* %187, align 1
  %191 = load i8, i8* %188, align 1
  %192 = getelementptr inbounds i8, i8* %174, i64 6
  store i8 %191, i8* %190, align 1
  %193 = getelementptr inbounds i8, i8* %175, i64 8
  %194 = icmp ult i8* %193, %6
  br i1 %194, label %173, label %195

195:                                              ; preds = %173, %152, %165, %144
  %196 = phi i8 [ 24, %144 ], [ 48, %165 ], [ 24, %152 ], [ 48, %173 ]
  %197 = phi i8* [ %148, %144 ], [ %169, %165 ], [ %162, %152 ], [ %192, %173 ]
  %198 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 5
  store i8 %196, i8* %198, align 1
  store i8 3, i8* %7, align 2
  %199 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 2
  %200 = load i8, i8* %199, align 8
  %201 = icmp eq i8 %200, 6
  br i1 %201, label %202, label %203

202:                                              ; preds = %195
  store i8 2, i8* %199, align 8
  br label %203

203:                                              ; preds = %202, %195, %133, %140
  %204 = phi i8* [ %135, %140 ], [ %135, %133 ], [ %197, %202 ], [ %197, %195 ]
  %205 = ptrtoint i8* %204 to i64
  %206 = ptrtoint i8* %1 to i64
  %207 = sub i64 %205, %206
  store i64 %207, i64* %4, align 8
  br label %208

208:                                              ; preds = %3, %141, %9, %203
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_do_bgr(%struct.png_row_info_struct* nocapture readonly, i8* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %174, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 1
  switch i8 %11, label %174 [
    i8 8, label %12
    i8 16, label %71
  ]

12:                                               ; preds = %7
  switch i8 %4, label %174 [
    i8 2, label %21
    i8 6, label %13
  ]

13:                                               ; preds = %12
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %174, label %15

15:                                               ; preds = %13
  %16 = add i32 %9, -1
  %17 = and i32 %9, 3
  %18 = icmp ult i32 %16, 3
  br i1 %18, label %140, label %19

19:                                               ; preds = %15
  %20 = sub i32 %9, %17
  br label %50

21:                                               ; preds = %12
  %22 = icmp eq i32 %9, 0
  br i1 %22, label %174, label %23

23:                                               ; preds = %21
  %24 = add i32 %9, -1
  %25 = and i32 %9, 3
  %26 = icmp ult i32 %24, 3
  br i1 %26, label %128, label %27

27:                                               ; preds = %23
  %28 = sub i32 %9, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i8* [ %1, %27 ], [ %47, %29 ]
  %31 = phi i32 [ %28, %27 ], [ %48, %29 ]
  %32 = load i8, i8* %30, align 1
  %33 = getelementptr inbounds i8, i8* %30, i64 2
  %34 = load i8, i8* %33, align 1
  store i8 %34, i8* %30, align 1
  store i8 %32, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %30, i64 3
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds i8, i8* %30, i64 5
  %38 = load i8, i8* %37, align 1
  store i8 %38, i8* %35, align 1
  store i8 %36, i8* %37, align 1
  %39 = getelementptr inbounds i8, i8* %30, i64 6
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %30, i64 8
  %42 = load i8, i8* %41, align 1
  store i8 %42, i8* %39, align 1
  store i8 %40, i8* %41, align 1
  %43 = getelementptr inbounds i8, i8* %30, i64 9
  %44 = load i8, i8* %43, align 1
  %45 = getelementptr inbounds i8, i8* %30, i64 11
  %46 = load i8, i8* %45, align 1
  store i8 %46, i8* %43, align 1
  store i8 %44, i8* %45, align 1
  %47 = getelementptr inbounds i8, i8* %30, i64 12
  %48 = add i32 %31, -4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %128, label %29

50:                                               ; preds = %50, %19
  %51 = phi i8* [ %1, %19 ], [ %68, %50 ]
  %52 = phi i32 [ %20, %19 ], [ %69, %50 ]
  %53 = load i8, i8* %51, align 1
  %54 = getelementptr inbounds i8, i8* %51, i64 2
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %51, align 1
  store i8 %53, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %51, i64 4
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %51, i64 6
  %59 = load i8, i8* %58, align 1
  store i8 %59, i8* %56, align 1
  store i8 %57, i8* %58, align 1
  %60 = getelementptr inbounds i8, i8* %51, i64 8
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %51, i64 10
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %60, align 1
  store i8 %61, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %51, i64 12
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds i8, i8* %51, i64 14
  %67 = load i8, i8* %66, align 1
  store i8 %67, i8* %64, align 1
  store i8 %65, i8* %66, align 1
  %68 = getelementptr inbounds i8, i8* %51, i64 16
  %69 = add i32 %52, -4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %140, label %50

71:                                               ; preds = %7
  switch i8 %4, label %174 [
    i8 2, label %79
    i8 6, label %72
  ]

72:                                               ; preds = %71
  %73 = icmp eq i32 %9, 0
  br i1 %73, label %174, label %74

74:                                               ; preds = %72
  %75 = and i32 %9, 1
  %76 = icmp eq i32 %9, 1
  br i1 %76, label %163, label %77

77:                                               ; preds = %74
  %78 = sub i32 %9, %75
  br label %107

79:                                               ; preds = %71
  %80 = icmp eq i32 %9, 0
  br i1 %80, label %174, label %81

81:                                               ; preds = %79
  %82 = and i32 %9, 1
  %83 = icmp eq i32 %9, 1
  br i1 %83, label %152, label %84

84:                                               ; preds = %81
  %85 = sub i32 %9, %82
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i8* [ %1, %84 ], [ %104, %86 ]
  %88 = phi i32 [ %85, %84 ], [ %105, %86 ]
  %89 = load i8, i8* %87, align 1
  %90 = getelementptr inbounds i8, i8* %87, i64 4
  %91 = load i8, i8* %90, align 1
  store i8 %91, i8* %87, align 1
  store i8 %89, i8* %90, align 1
  %92 = getelementptr inbounds i8, i8* %87, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = getelementptr inbounds i8, i8* %87, i64 5
  %95 = load i8, i8* %94, align 1
  store i8 %95, i8* %92, align 1
  store i8 %93, i8* %94, align 1
  %96 = getelementptr inbounds i8, i8* %87, i64 6
  %97 = load i8, i8* %96, align 1
  %98 = getelementptr inbounds i8, i8* %87, i64 10
  %99 = load i8, i8* %98, align 1
  store i8 %99, i8* %96, align 1
  store i8 %97, i8* %98, align 1
  %100 = getelementptr inbounds i8, i8* %87, i64 7
  %101 = load i8, i8* %100, align 1
  %102 = getelementptr inbounds i8, i8* %87, i64 11
  %103 = load i8, i8* %102, align 1
  store i8 %103, i8* %100, align 1
  store i8 %101, i8* %102, align 1
  %104 = getelementptr inbounds i8, i8* %87, i64 12
  %105 = add i32 %88, -2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %152, label %86

107:                                              ; preds = %107, %77
  %108 = phi i8* [ %1, %77 ], [ %125, %107 ]
  %109 = phi i32 [ %78, %77 ], [ %126, %107 ]
  %110 = load i8, i8* %108, align 1
  %111 = getelementptr inbounds i8, i8* %108, i64 4
  %112 = load i8, i8* %111, align 1
  store i8 %112, i8* %108, align 1
  store i8 %110, i8* %111, align 1
  %113 = getelementptr inbounds i8, i8* %108, i64 1
  %114 = load i8, i8* %113, align 1
  %115 = getelementptr inbounds i8, i8* %108, i64 5
  %116 = load i8, i8* %115, align 1
  store i8 %116, i8* %113, align 1
  store i8 %114, i8* %115, align 1
  %117 = getelementptr inbounds i8, i8* %108, i64 8
  %118 = load i8, i8* %117, align 1
  %119 = getelementptr inbounds i8, i8* %108, i64 12
  %120 = load i8, i8* %119, align 1
  store i8 %120, i8* %117, align 1
  store i8 %118, i8* %119, align 1
  %121 = getelementptr inbounds i8, i8* %108, i64 9
  %122 = load i8, i8* %121, align 1
  %123 = getelementptr inbounds i8, i8* %108, i64 13
  %124 = load i8, i8* %123, align 1
  store i8 %124, i8* %121, align 1
  store i8 %122, i8* %123, align 1
  %125 = getelementptr inbounds i8, i8* %108, i64 16
  %126 = add i32 %109, -2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %163, label %107

128:                                              ; preds = %29, %23
  %129 = phi i8* [ %1, %23 ], [ %47, %29 ]
  %130 = icmp eq i32 %25, 0
  br i1 %130, label %174, label %131

131:                                              ; preds = %128, %131
  %132 = phi i8* [ %137, %131 ], [ %129, %128 ]
  %133 = phi i32 [ %138, %131 ], [ %25, %128 ]
  %134 = load i8, i8* %132, align 1
  %135 = getelementptr inbounds i8, i8* %132, i64 2
  %136 = load i8, i8* %135, align 1
  store i8 %136, i8* %132, align 1
  store i8 %134, i8* %135, align 1
  %137 = getelementptr inbounds i8, i8* %132, i64 3
  %138 = add i32 %133, -1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %174, label %131, !llvm.loop !9

140:                                              ; preds = %50, %15
  %141 = phi i8* [ %1, %15 ], [ %68, %50 ]
  %142 = icmp eq i32 %17, 0
  br i1 %142, label %174, label %143

143:                                              ; preds = %140, %143
  %144 = phi i8* [ %149, %143 ], [ %141, %140 ]
  %145 = phi i32 [ %150, %143 ], [ %17, %140 ]
  %146 = load i8, i8* %144, align 1
  %147 = getelementptr inbounds i8, i8* %144, i64 2
  %148 = load i8, i8* %147, align 1
  store i8 %148, i8* %144, align 1
  store i8 %146, i8* %147, align 1
  %149 = getelementptr inbounds i8, i8* %144, i64 4
  %150 = add i32 %145, -1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %174, label %143, !llvm.loop !10

152:                                              ; preds = %86, %81
  %153 = phi i8* [ %1, %81 ], [ %104, %86 ]
  %154 = icmp eq i32 %82, 0
  br i1 %154, label %174, label %155

155:                                              ; preds = %152
  %156 = load i8, i8* %153, align 1
  %157 = getelementptr inbounds i8, i8* %153, i64 4
  %158 = load i8, i8* %157, align 1
  store i8 %158, i8* %153, align 1
  store i8 %156, i8* %157, align 1
  %159 = getelementptr inbounds i8, i8* %153, i64 1
  %160 = load i8, i8* %159, align 1
  %161 = getelementptr inbounds i8, i8* %153, i64 5
  %162 = load i8, i8* %161, align 1
  store i8 %162, i8* %159, align 1
  store i8 %160, i8* %161, align 1
  br label %174

163:                                              ; preds = %107, %74
  %164 = phi i8* [ %1, %74 ], [ %125, %107 ]
  %165 = icmp eq i32 %75, 0
  br i1 %165, label %174, label %166

166:                                              ; preds = %163
  %167 = load i8, i8* %164, align 1
  %168 = getelementptr inbounds i8, i8* %164, i64 4
  %169 = load i8, i8* %168, align 1
  store i8 %169, i8* %164, align 1
  store i8 %167, i8* %168, align 1
  %170 = getelementptr inbounds i8, i8* %164, i64 1
  %171 = load i8, i8* %170, align 1
  %172 = getelementptr inbounds i8, i8* %164, i64 5
  %173 = load i8, i8* %172, align 1
  store i8 %173, i8* %170, align 1
  store i8 %171, i8* %172, align 1
  br label %174

174:                                              ; preds = %166, %163, %155, %152, %140, %143, %128, %131, %21, %13, %79, %72, %12, %7, %71, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_user_transform_info(%struct.png_struct_def* noalias, i8*, i32, i32) local_unnamed_addr #1 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 4
  %9 = trunc i32 %8 to i16
  %10 = icmp slt i16 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 64
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %23

17:                                               ; preds = %11, %6
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 12
  store i8* %1, i8** %18, align 8
  %19 = trunc i32 %2 to i8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 13
  store i8 %19, i8* %20, align 8
  %21 = trunc i32 %3 to i8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 14
  store i8 %21, i8* %22, align 1
  br label %23

23:                                               ; preds = %4, %17, %16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @cr_png_get_user_transform_ptr(%struct.png_struct_def* noalias readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 12
  %5 = load i8*, i8** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ null, %1 ]
  ret i8* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cr_png_get_current_row_number(%struct.png_struct_def* noalias readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %5 = load i32, i32* %4, align 4
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ -1, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @cr_png_get_current_pass_number(%struct.png_struct_def* noalias readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %5 = load i8, i8* %4, align 1
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i8 [ %5, %3 ], [ 8, %1 ]
  ret i8 %7
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"cr_png_set_filler: argument 0"}
!4 = distinct !{!4, !"cr_png_set_filler"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
