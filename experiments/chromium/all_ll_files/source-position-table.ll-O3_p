; ModuleID = '../../v8/src/codegen/source-position-table.cc'
source_filename = "../../v8/src/codegen/source-position-table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SourcePositionTableBuilder" = type { i32, %"class.v8::internal::ZoneVector", %"struct.v8::internal::PositionTableEntry" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::PositionTableEntry" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.14" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::set.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::SourcePositionTableIterator" = type { %"class.v8::internal::Vector.1139", %"class.v8::internal::Handle", i32, [4 x i8], %"struct.v8::internal::PositionTableEntry", i32, i32 }
%"class.v8::internal::Vector.1139" = type { i8*, i64 }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.27", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.657", %"class.std::__1::unique_ptr.678", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.688", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.821", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.834", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.844", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.855", %"struct.std::__1::atomic.182", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.930", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.973"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.981", i32, i8, i8, i32, i32, %"class.std::__1::vector.987", %"class.std::__1::vector.987", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.994", i64, %"class.std::__1::unordered_map.995", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.553", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.190", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1051", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1089", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1123", %"class.std::__1::vector.1127", %"class.std::__1::vector.1127", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.21", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.25", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.25" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.56", %"class.std::__1::vector.60", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.176", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.191", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.195", %"class.std::__1::vector.195", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.486", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.504", %"class.std::__1::shared_ptr.510", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.515", %"class.std::__1::unique_ptr.541", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.547", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.560", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.360", i8, [7 x i8], %"class.std::__1::unordered_map.566", %"class.std::__1::unordered_map.592", %"class.std::__1::unordered_map.566", %"class.std::__1::unordered_map.616", %"class.std::__1::vector.644", i8, %"class.std::__1::unique_ptr.651", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.48", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51" }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i64 }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i32 }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.62" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.133" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.127" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.67", %"class.std::__1::vector.67", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.69" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.74" }
%"class.std::__1::__hash_table.74" = type <{ %"class.std::__1::unique_ptr.75", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.92", [4 x i8] }>
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77", %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::__hash_node_base.78"** }
%"struct.std::__1::__hash_node_base.78" = type { %"struct.std::__1::__hash_node_base.78"* }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__bucket_list_deallocator.80" }
%"class.std::__1::__bucket_list_deallocator.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base.78" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.51", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.108"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.116", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.51", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.97", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.101" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.103" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.108" = type { %"class.std::__1::__tree.109" }
%"class.std::__1::__tree.109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.120", i8, [7 x i8] }>
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { i64*, i64*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.std::__1::pair.135"*, %"struct.std::__1::pair.135"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair.135" = type { i32, i64 }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair.135"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.141" }
%"class.std::__1::unordered_map.141" = type { %"class.std::__1::__hash_table.142" }
%"class.std::__1::__hash_table.142" = type <{ %"class.std::__1::unique_ptr.143", %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.163", [4 x i8] }>
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145", %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base.146"** }
%"struct.std::__1::__hash_node_base.146" = type { %"struct.std::__1::__hash_node_base.146"* }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::__bucket_list_deallocator.148" }
%"class.std::__1::__bucket_list_deallocator.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::__hash_node_base.146" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.169", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.171" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1056", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.1066", %"class.std::__1::unique_ptr.504", %"class.std::__1::vector.1072", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1056" = type { %"struct.std::__1::__atomic_base.1057" }
%"struct.std::__1::__atomic_base.1057" = type { %"struct.std::__1::__cxx_atomic_impl.1058" }
%"struct.std::__1::__cxx_atomic_impl.1058" = type { %"struct.std::__1::__cxx_atomic_base_impl.1059" }
%"struct.std::__1::__cxx_atomic_base_impl.1059" = type { i32 }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.814" }
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { i64**, i64**, %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { i64** }
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.814", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1072" = type { %"class.std::__1::__vector_base.1073" }
%"class.std::__1::__vector_base.1073" = type { %"struct.std::__1::pair.1074"*, %"struct.std::__1::pair.1074"*, %"class.std::__1::__compressed_pair.1075" }
%"struct.std::__1::pair.1074" = type opaque
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"struct.std::__1::pair.1074"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.182", %"struct.std::__1::atomic.186", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.190" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.197" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.256", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.310", %"class.std::__1::vector.310", %"class.std::__1::vector.310", %"class.std::__1::vector.317", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.211", %"class.std::__1::vector.212", %"class.std::__1::vector.219", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.211" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.214" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::unique_ptr.221" = type opaque
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::unique_ptr.221"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.227", %"class.v8::internal::Worklist.229", %"class.v8::internal::Worklist.229", %"class.v8::internal::Worklist.229", %"class.v8::internal::Worklist.231", %"class.v8::internal::Worklist.233", %"class.v8::internal::Worklist.235", %"class.v8::internal::Worklist.237", %"class.v8::internal::Worklist.239", %"class.v8::internal::Worklist.241" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.227" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.229" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.231" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.233" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.235" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.237" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.239" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.241" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.243", i8, i64 }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.259" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.211"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.259" = type { %"class.std::__1::__hash_table.260" }
%"class.std::__1::__hash_table.260" = type <{ %"class.std::__1::unique_ptr.261", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.279", [4 x i8] }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base.264"** }
%"struct.std::__1::__hash_node_base.264" = type { %"struct.std::__1::__hash_node_base.264"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator.266" }
%"class.std::__1::__bucket_list_deallocator.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base.264" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.286" }
%"class.std::__1::unordered_map.286" = type { %"class.std::__1::__hash_table.287" }
%"class.std::__1::__hash_table.287" = type <{ %"class.std::__1::unique_ptr.288", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.306", [4 x i8] }>
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290", %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::__hash_node_base.291"** }
%"struct.std::__1::__hash_node_base.291" = type { %"struct.std::__1::__hash_node_base.291"* }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.std::__1::__bucket_list_deallocator.293" }
%"class.std::__1::__bucket_list_deallocator.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::__hash_node_base.291" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"struct.std::__1::pair.319"*, %"struct.std::__1::pair.319"*, %"class.std::__1::__compressed_pair.320" }
%"struct.std::__1::pair.319" = type opaque
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::pair.319"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.325", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.310"], [3 x %"class.std::__1::vector.310"], i8, %"struct.std::__1::atomic.182", [6 x i8], %"class.std::__1::vector.310", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.335"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.310", %"class.std::__1::vector.310", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.335" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.360", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.353"], %"class.std::__1::unique_ptr.325" }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.392", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.396", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.401" }
%"struct.std::__1::atomic.392" = type { %"struct.std::__1::__atomic_base.393" }
%"struct.std::__1::__atomic_base.393" = type { %"struct.std::__1::__cxx_atomic_impl.394" }
%"struct.std::__1::__cxx_atomic_impl.394" = type { %"struct.std::__1::__cxx_atomic_base_impl.395" }
%"struct.std::__1::__cxx_atomic_base_impl.395" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.396" = type { %"struct.std::__1::__atomic_base.397" }
%"struct.std::__1::__atomic_base.397" = type { %"struct.std::__1::__cxx_atomic_impl.398" }
%"struct.std::__1::__cxx_atomic_impl.398" = type { %"struct.std::__1::__cxx_atomic_base_impl.399" }
%"struct.std::__1::__cxx_atomic_base_impl.399" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.325", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.182", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.431", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.431" = type { %"class.std::__1::__hash_table.432" }
%"class.std::__1::__hash_table.432" = type <{ %"class.std::__1::unique_ptr.433", %"class.std::__1::__compressed_pair.443", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.451", [4 x i8] }>
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435", %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"struct.std::__1::__hash_node_base.436"** }
%"struct.std::__1::__hash_node_base.436" = type { %"struct.std::__1::__hash_node_base.436"* }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.std::__1::__bucket_list_deallocator.438" }
%"class.std::__1::__bucket_list_deallocator.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"struct.std::__1::__hash_node_base.436" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.467" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.510" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.511", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.5", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.511" = type { %"struct.std::__1::__atomic_base.512" }
%"struct.std::__1::__atomic_base.512" = type { %"struct.std::__1::__cxx_atomic_impl.513" }
%"struct.std::__1::__cxx_atomic_impl.513" = type { %"struct.std::__1::__cxx_atomic_base_impl.514" }
%"struct.std::__1::__cxx_atomic_base_impl.514" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.515" = type { %"class.std::__1::__hash_table.516" }
%"class.std::__1::__hash_table.516" = type <{ %"class.std::__1::unique_ptr.517", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.532", %"class.std::__1::__compressed_pair.535", [4 x i8] }>
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519", %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.std::__1::__hash_node_base.520"** }
%"struct.std::__1::__hash_node_base.520" = type { %"struct.std::__1::__hash_node_base.520"* }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.std::__1::__bucket_list_deallocator.522" }
%"class.std::__1::__bucket_list_deallocator.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"struct.std::__1::__hash_node_base.520" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.553", %"class.std::__1::vector.553" }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.360" = type { %"class.std::__1::__hash_table.361" }
%"class.std::__1::__hash_table.361" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.381", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.365"** }
%"struct.std::__1::__hash_node_base.365" = type { %"struct.std::__1::__hash_node_base.365"* }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__bucket_list_deallocator.367" }
%"class.std::__1::__bucket_list_deallocator.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.365" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::unordered_map.592" = type { %"class.std::__1::__hash_table.593" }
%"class.std::__1::__hash_table.593" = type <{ %"class.std::__1::unique_ptr.594", %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.609", %"class.std::__1::__compressed_pair.612", [4 x i8] }>
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596", %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.597"** }
%"struct.std::__1::__hash_node_base.597" = type { %"struct.std::__1::__hash_node_base.597"* }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.std::__1::__bucket_list_deallocator.599" }
%"class.std::__1::__bucket_list_deallocator.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"struct.std::__1::__hash_node_base.597" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::unordered_map.616" = type { %"class.std::__1::__hash_table.617" }
%"class.std::__1::__hash_table.617" = type <{ %"class.std::__1::unique_ptr.618", %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.638", [4 x i8] }>
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620", %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"struct.std::__1::__hash_node_base.621"** }
%"struct.std::__1::__hash_node_base.621" = type { %"struct.std::__1::__hash_node_base.621"* }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.std::__1::__bucket_list_deallocator.623" }
%"class.std::__1::__bucket_list_deallocator.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"struct.std::__1::__hash_node_base.621" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::vector.644" = type { %"class.std::__1::__vector_base.645" }
%"class.std::__1::__vector_base.645" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.646" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.553" }
%"class.std::__1::shared_ptr.657" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.169", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.658", %"class.std::__1::unique_ptr.672" }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.661" }
%"class.std::__1::vector.661" = type { %"class.std::__1::__vector_base.662" }
%"class.std::__1::__vector_base.662" = type { %"class.std::__1::unique_ptr.663"*, %"class.std::__1::unique_ptr.663"*, %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.std::__1::unique_ptr.663"* }
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.681", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.681" = type { %"struct.std::__1::__atomic_base.682" }
%"struct.std::__1::__atomic_base.682" = type { %"struct.std::__1::__cxx_atomic_impl.683" }
%"struct.std::__1::__cxx_atomic_impl.683" = type { %"struct.std::__1::__cxx_atomic_base_impl.684" }
%"struct.std::__1::__cxx_atomic_base_impl.684" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.688" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.689", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.689" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.690", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.690" = type { %"class.std::__1::__vector_base.691" }
%"class.std::__1::__vector_base.691" = type { %"class.std::__1::unique_ptr.692"*, %"class.std::__1::unique_ptr.692"*, %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::unique_ptr.692" = type opaque
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.std::__1::unique_ptr.692"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"struct.std::__1::atomic.182", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.734", %"class.std::__1::set.740", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.740" = type { %"class.std::__1::__tree.741" }
%"class.std::__1::__tree.741" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.749" }
%"class.v8::internal::TaggedImpl.749" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.748" }
%"class.v8::internal::TaggedImpl.748" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.750", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.756", %"class.v8::internal::DetachableVector.757", %"class.v8::internal::DetachableVector.756", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.757" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.756" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.758", %"class.std::__1::vector.764", %"class.std::__1::unique_ptr.771", %"class.std::__1::vector.778", %"class.std::__1::unique_ptr.785", i64, %"class.std::__1::vector.791", %"class.std::__1::vector.799", %"class.std::__1::vector.807", i8, i8, i32 }
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.766" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.v8::internal::GlobalHandles::NodeSpace.774"* }
%"class.v8::internal::GlobalHandles::NodeSpace.774" = type opaque
%"class.std::__1::vector.778" = type { %"class.std::__1::__vector_base.779" }
%"class.std::__1::__vector_base.779" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.780" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { %"struct.std::__1::pair.793"*, %"struct.std::__1::pair.793"*, %"class.std::__1::__compressed_pair.794" }
%"struct.std::__1::pair.793" = type opaque
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.std::__1::pair.793"* }
%"class.std::__1::vector.799" = type { %"class.std::__1::__vector_base.800" }
%"class.std::__1::__vector_base.800" = type { %"struct.std::__1::pair.801"*, %"struct.std::__1::pair.801"*, %"class.std::__1::__compressed_pair.802" }
%"struct.std::__1::pair.801" = type opaque
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"struct.std::__1::pair.801"* }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.809" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.814", %"class.std::__1::vector.821" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.828" }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.821" = type { %"class.std::__1::__vector_base.822" }
%"class.std::__1::__vector_base.822" = type { i32*, i32*, %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.834" = type { %"struct.std::__1::__atomic_base.835" }
%"struct.std::__1::__atomic_base.835" = type { %"struct.std::__1::__cxx_atomic_impl.836" }
%"struct.std::__1::__cxx_atomic_impl.836" = type { %"struct.std::__1::__cxx_atomic_base_impl.837" }
%"struct.std::__1::__cxx_atomic_base_impl.837" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.844" = type { %"struct.std::__1::__atomic_base.845" }
%"struct.std::__1::__atomic_base.845" = type { %"struct.std::__1::__cxx_atomic_impl.846" }
%"struct.std::__1::__cxx_atomic_impl.846" = type { %"struct.std::__1::__cxx_atomic_base_impl.847" }
%"struct.std::__1::__cxx_atomic_base_impl.847" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.851 }
%union.anon.851 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.855" = type { %"class.std::__1::__hash_table.856" }
%"class.std::__1::__hash_table.856" = type <{ %"class.std::__1::unique_ptr.857", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.875", [4 x i8] }>
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859", %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"struct.std::__1::__hash_node_base.860"** }
%"struct.std::__1::__hash_node_base.860" = type { %"struct.std::__1::__hash_node_base.860"* }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.std::__1::__bucket_list_deallocator.862" }
%"class.std::__1::__bucket_list_deallocator.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::__hash_node_base.860" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.881", %"class.v8::internal::Handle.887", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.888", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.887" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.888" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.889", %"class.std::__1::vector.895", %"class.std::__1::unique_ptr.903", %"class.std::__1::unique_ptr.909", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.915", %"class.std::__1::vector.921", %"struct.std::__1::pair.929" }
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.895" = type { %"class.std::__1::__vector_base.896" }
%"class.std::__1::__vector_base.896" = type { %"class.std::__1::unique_ptr.897"*, %"class.std::__1::unique_ptr.897"*, %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::unique_ptr.897" = type opaque
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.std::__1::unique_ptr.897"* }
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.921" = type { %"class.std::__1::__vector_base.922" }
%"class.std::__1::__vector_base.922" = type { %"struct.std::__1::pair.923"*, %"struct.std::__1::pair.923"*, %"class.std::__1::__compressed_pair.924" }
%"struct.std::__1::pair.923" = type opaque
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"struct.std::__1::pair.923"* }
%"struct.std::__1::pair.929" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.26"*, i16, i8*)*, i8* }
%"class.v8::Local.26" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.933", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.933" = type { %"class.std::__1::__hash_table.934" }
%"class.std::__1::__hash_table.934" = type <{ %"class.std::__1::unique_ptr.935", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.950", %"class.std::__1::__compressed_pair.954", [4 x i8] }>
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937", %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"struct.std::__1::__hash_node_base.938"** }
%"struct.std::__1::__hash_node_base.938" = type { %"struct.std::__1::__hash_node_base.938"* }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.std::__1::__bucket_list_deallocator.940" }
%"class.std::__1::__bucket_list_deallocator.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"struct.std::__1::__hash_node_base.938" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.962"**, %"struct.std::__1::pair.962"**, %"struct.std::__1::pair.962"**, %"class.std::__1::__compressed_pair.963" }
%"struct.std::__1::pair.962" = type opaque
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"struct.std::__1::pair.962"** }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.973" = type { %"class.std::__1::__vector_base.974" }
%"class.std::__1::__vector_base.974" = type { %"class.v8::internal::Handle.975"*, %"class.v8::internal::Handle.975"*, %"class.std::__1::__compressed_pair.976" }
%"class.v8::internal::Handle.975" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::Handle.975"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.839", i32, %"class.v8::Local.26" }
%"class.v8::Local.839" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.987" = type { %"class.std::__1::__vector_base.988" }
%"class.std::__1::__vector_base.988" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.994" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.995" = type { %"class.std::__1::__hash_table.996" }
%"class.std::__1::__hash_table.996" = type <{ %"class.std::__1::unique_ptr.997", %"class.std::__1::__compressed_pair.1007", %"class.std::__1::__compressed_pair.1012", %"class.std::__1::__compressed_pair.1015", [4 x i8] }>
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999", %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"struct.std::__1::__hash_node_base.1000"** }
%"struct.std::__1::__hash_node_base.1000" = type { %"struct.std::__1::__hash_node_base.1000"* }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.std::__1::__bucket_list_deallocator.1002" }
%"class.std::__1::__bucket_list_deallocator.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"struct.std::__1::__hash_node_base.1000" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.190" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1019", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1048", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1049", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1019" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1044, %union.anon.1046, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1044 = type { i64 }
%union.anon.1046 = type { i64 }
%"class.std::__1::weak_ptr.1048" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1049" = type { %"class.v8::PersistentBase.1050" }
%"class.v8::PersistentBase.1050" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1020", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1020" = type { %"class.std::__1::__hash_table.1021" }
%"class.std::__1::__hash_table.1021" = type <{ %"class.std::__1::unique_ptr.1022", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1040", [4 x i8] }>
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024", %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1025"** }
%"struct.std::__1::__hash_node_base.1025" = type { %"struct.std::__1::__hash_node_base.1025"* }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.std::__1::__bucket_list_deallocator.1027" }
%"class.std::__1::__bucket_list_deallocator.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::__hash_node_base.1025" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1080", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.840", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.840" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1097" }
%"class.std::__1::unordered_map.1097" = type { %"class.std::__1::__hash_table.1098" }
%"class.std::__1::__hash_table.1098" = type <{ %"class.std::__1::unique_ptr.1099", %"class.std::__1::__compressed_pair.1109", %"class.std::__1::__compressed_pair.1114", %"class.std::__1::__compressed_pair.1117", [4 x i8] }>
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101", %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"struct.std::__1::__hash_node_base.1102"** }
%"struct.std::__1::__hash_node_base.1102" = type { %"struct.std::__1::__hash_node_base.1102"* }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.std::__1::__bucket_list_deallocator.1104" }
%"class.std::__1::__bucket_list_deallocator.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"struct.std::__1::__hash_node_base.1102" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::atomic.1123" = type { %"struct.std::__1::__atomic_base.1124" }
%"struct.std::__1::__atomic_base.1124" = type { %"struct.std::__1::__cxx_atomic_impl.1125" }
%"struct.std::__1::__cxx_atomic_impl.1125" = type { %"struct.std::__1::__cxx_atomic_base_impl.1126" }
%"struct.std::__1::__cxx_atomic_base_impl.1126" = type { %"class.std::__1::vector.1127"* }
%"class.std::__1::vector.1127" = type { %"class.std::__1::__vector_base.1128" }
%"class.std::__1::__vector_base.1128" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1129" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::FactoryBase.1054" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2v88internal26SourcePositionTableBuilder21ToSourcePositionTableINS0_7IsolateEEENS0_6HandleINS0_9ByteArrayEEEPT_ = comdat any

$_ZN2v88internal26SourcePositionTableBuilder21ToSourcePositionTableINS0_12LocalIsolateEEENS0_6HandleINS0_9ByteArrayEEEPT_ = comdat any

@_ZN2v88internal26SourcePositionTableBuilderC1EPNS0_4ZoneENS1_13RecordingModeE = hidden unnamed_addr alias void (%"class.v8::internal::SourcePositionTableBuilder"*, %"class.v8::internal::Zone"*, i32), void (%"class.v8::internal::SourcePositionTableBuilder"*, %"class.v8::internal::Zone"*, i32)* @_ZN2v88internal26SourcePositionTableBuilderC2EPNS0_4ZoneENS1_13RecordingModeE
@_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE = hidden unnamed_addr alias void (%"class.v8::internal::SourcePositionTableIterator"*, i64, i32, i32), void (%"class.v8::internal::SourcePositionTableIterator"*, i64, i32, i32)* @_ZN2v88internal27SourcePositionTableIteratorC2ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE
@_ZN2v88internal27SourcePositionTableIteratorC1ENS0_6HandleINS0_9ByteArrayEEENS1_15IterationFilterENS1_19FunctionEntryFilterE = hidden unnamed_addr alias void (%"class.v8::internal::SourcePositionTableIterator"*, i64*, i32, i32), void (%"class.v8::internal::SourcePositionTableIterator"*, i64*, i32, i32)* @_ZN2v88internal27SourcePositionTableIteratorC2ENS0_6HandleINS0_9ByteArrayEEENS1_15IterationFilterENS1_19FunctionEntryFilterE
@_ZN2v88internal27SourcePositionTableIteratorC1ENS0_6VectorIKhEENS1_15IterationFilterENS1_19FunctionEntryFilterE = hidden unnamed_addr alias void (%"class.v8::internal::SourcePositionTableIterator"*, i8*, i64, i32, i32), void (%"class.v8::internal::SourcePositionTableIterator"*, i8*, i64, i32, i32)* @_ZN2v88internal27SourcePositionTableIteratorC2ENS0_6VectorIKhEENS1_15IterationFilterENS1_19FunctionEntryFilterE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal26SourcePositionTableBuilder21ToSourcePositionTableINS0_7IsolateEEENS0_6HandleINS0_9ByteArrayEEEPT_(%"class.v8::internal::SourcePositionTableBuilder"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 107
  br label %52

10:                                               ; preds = %2
  %11 = ptrtoint i8* %4 to i64
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %14 = bitcast i8** %5 to i64*
  %15 = sub i64 %12, %11
  %16 = trunc i64 %15 to i32
  %17 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %13, i32 %16, i8 zeroext 1) #5
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i8*
  %21 = load i8*, i8** %3, align 8
  %22 = load i64, i64* %14, align 8
  %23 = ptrtoint i8* %21 to i64
  %24 = sub i64 %22, %23
  switch i64 %24, label %51 [
    i64 1, label %25
    i64 2, label %27
    i64 3, label %31
    i64 4, label %32
    i64 5, label %36
    i64 6, label %37
    i64 7, label %38
    i64 8, label %39
    i64 9, label %43
    i64 10, label %44
    i64 11, label %45
    i64 12, label %46
    i64 13, label %47
    i64 14, label %48
    i64 15, label %49
    i64 16, label %50
  ]

25:                                               ; preds = %10
  %26 = load i8, i8* %21, align 1
  store i8 %26, i8* %20, align 1
  br label %52

27:                                               ; preds = %10
  %28 = bitcast i8* %21 to i16*
  %29 = inttoptr i64 %19 to i16*
  %30 = load i16, i16* %28, align 1
  store i16 %30, i16* %29, align 1
  br label %52

31:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 3, i1 false) #5
  br label %52

32:                                               ; preds = %10
  %33 = bitcast i8* %21 to i32*
  %34 = inttoptr i64 %19 to i32*
  %35 = load i32, i32* %33, align 1
  store i32 %35, i32* %34, align 1
  br label %52

36:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 5, i1 false) #5
  br label %52

37:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 6, i1 false) #5
  br label %52

38:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 7, i1 false) #5
  br label %52

39:                                               ; preds = %10
  %40 = bitcast i8* %21 to i64*
  %41 = inttoptr i64 %19 to i64*
  %42 = load i64, i64* %40, align 1
  store i64 %42, i64* %41, align 1
  br label %52

43:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 9, i1 false) #5
  br label %52

44:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 10, i1 false) #5
  br label %52

45:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 11, i1 false) #5
  br label %52

46:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 12, i1 false) #5
  br label %52

47:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 13, i1 false) #5
  br label %52

48:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 14, i1 false) #5
  br label %52

49:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 15, i1 false) #5
  br label %52

50:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 16, i1 false) #5
  br label %52

51:                                               ; preds = %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 %24, i1 false) #5
  br label %52

52:                                               ; preds = %51, %50, %49, %48, %47, %46, %45, %44, %43, %39, %38, %37, %36, %32, %31, %27, %25, %8
  %53 = phi i64* [ %9, %8 ], [ %17, %25 ], [ %17, %27 ], [ %17, %31 ], [ %17, %32 ], [ %17, %36 ], [ %17, %37 ], [ %17, %38 ], [ %17, %39 ], [ %17, %43 ], [ %17, %44 ], [ %17, %45 ], [ %17, %46 ], [ %17, %47 ], [ %17, %48 ], [ %17, %49 ], [ %17, %50 ], [ %17, %51 ]
  ret i64* %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal26SourcePositionTableBuilder21ToSourcePositionTableINS0_12LocalIsolateEEENS0_6HandleINS0_9ByteArrayEEEPT_(%"class.v8::internal::SourcePositionTableBuilder"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 107
  br label %54

12:                                               ; preds = %2
  %13 = ptrtoint i8* %4 to i64
  %14 = ptrtoint i8* %6 to i64
  %15 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1054"*
  %16 = bitcast i8** %5 to i64*
  %17 = sub i64 %14, %13
  %18 = trunc i64 %17 to i32
  %19 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1054"* %15, i32 %18, i8 zeroext 1) #5
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i8*
  %23 = load i8*, i8** %3, align 8
  %24 = load i64, i64* %16, align 8
  %25 = ptrtoint i8* %23 to i64
  %26 = sub i64 %24, %25
  switch i64 %26, label %53 [
    i64 1, label %27
    i64 2, label %29
    i64 3, label %33
    i64 4, label %34
    i64 5, label %38
    i64 6, label %39
    i64 7, label %40
    i64 8, label %41
    i64 9, label %45
    i64 10, label %46
    i64 11, label %47
    i64 12, label %48
    i64 13, label %49
    i64 14, label %50
    i64 15, label %51
    i64 16, label %52
  ]

27:                                               ; preds = %12
  %28 = load i8, i8* %23, align 1
  store i8 %28, i8* %22, align 1
  br label %54

29:                                               ; preds = %12
  %30 = bitcast i8* %23 to i16*
  %31 = inttoptr i64 %21 to i16*
  %32 = load i16, i16* %30, align 1
  store i16 %32, i16* %31, align 1
  br label %54

33:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 3, i1 false) #5
  br label %54

34:                                               ; preds = %12
  %35 = bitcast i8* %23 to i32*
  %36 = inttoptr i64 %21 to i32*
  %37 = load i32, i32* %35, align 1
  store i32 %37, i32* %36, align 1
  br label %54

38:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 5, i1 false) #5
  br label %54

39:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 6, i1 false) #5
  br label %54

40:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 7, i1 false) #5
  br label %54

41:                                               ; preds = %12
  %42 = bitcast i8* %23 to i64*
  %43 = inttoptr i64 %21 to i64*
  %44 = load i64, i64* %42, align 1
  store i64 %44, i64* %43, align 1
  br label %54

45:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 9, i1 false) #5
  br label %54

46:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 10, i1 false) #5
  br label %54

47:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 11, i1 false) #5
  br label %54

48:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 12, i1 false) #5
  br label %54

49:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 13, i1 false) #5
  br label %54

50:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 14, i1 false) #5
  br label %54

51:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 15, i1 false) #5
  br label %54

52:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 16, i1 false) #5
  br label %54

53:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 %26, i1 false) #5
  br label %54

54:                                               ; preds = %53, %52, %51, %50, %49, %48, %47, %46, %45, %41, %40, %39, %38, %34, %33, %29, %27, %8
  %55 = phi i64* [ %11, %8 ], [ %19, %27 ], [ %19, %29 ], [ %19, %33 ], [ %19, %34 ], [ %19, %38 ], [ %19, %39 ], [ %19, %40 ], [ %19, %41 ], [ %19, %45 ], [ %19, %46 ], [ %19, %47 ], [ %19, %48 ], [ %19, %49 ], [ %19, %50 ], [ %19, %51 ], [ %19, %52 ], [ %19, %53 ]
  ret i64* %55
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1054"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourcePositionTableBuilderC2EPNS0_4ZoneENS1_13RecordingModeE(%"class.v8::internal::SourcePositionTableBuilder"* nocapture, %"class.v8::internal::Zone"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 0
  store i32 %2, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %8 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %7 to i64*
  %9 = bitcast %"class.v8::internal::ZoneVector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #5
  store i64 %6, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 2, i32 0
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourcePositionTableBuilder11AddPositionEmNS0_14SourcePositionEb(%"class.v8::internal::SourcePositionTableBuilder"*, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.v8::internal::PositionTableEntry", align 8
  %6 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = trunc i64 %1 to i32
  %11 = bitcast %"struct.v8::internal::PositionTableEntry"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #5
  %12 = zext i1 %3 to i8
  %13 = getelementptr inbounds %"struct.v8::internal::PositionTableEntry", %"struct.v8::internal::PositionTableEntry"* %5, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::PositionTableEntry", %"struct.v8::internal::PositionTableEntry"* %5, i64 0, i32 2
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::PositionTableEntry", %"struct.v8::internal::PositionTableEntry"* %5, i64 0, i32 3
  store i8 %12, i8* %15, align 8
  call void @_ZN2v88internal26SourcePositionTableBuilder8AddEntryERKNS0_18PositionTableEntryE(%"class.v8::internal::SourcePositionTableBuilder"* %0, %"struct.v8::internal::PositionTableEntry"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #5
  br label %16

16:                                               ; preds = %4, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourcePositionTableBuilder8AddEntryERKNS0_18PositionTableEntryE(%"class.v8::internal::SourcePositionTableBuilder"*, %"struct.v8::internal::PositionTableEntry"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.v8::internal::PositionTableEntry"* %1 to i8*
  %4 = getelementptr inbounds %"struct.v8::internal::PositionTableEntry", %"struct.v8::internal::PositionTableEntry"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::PositionTableEntry", %"struct.v8::internal::PositionTableEntry"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::PositionTableEntry", %"struct.v8::internal::PositionTableEntry"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.v8::internal::PositionTableEntry", %"struct.v8::internal::PositionTableEntry"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sub nsw i32 %5, %12
  %14 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 2, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %7, %15
  %17 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1
  %18 = add nsw i8 %9, -1
  %19 = sext i8 %18 to i32
  %20 = xor i32 %13, %19
  %21 = shl i32 %20, 1
  %22 = ashr i32 %20, 31
  %23 = xor i32 %21, %22
  %24 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i8** %24 to i64*
  %27 = bitcast %"class.v8::internal::ZoneVector"* %17 to i64*
  %28 = bitcast i8** %25 to i64*
  %29 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %17, i64 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %24, align 8
  br label %32

32:                                               ; preds = %204, %2
  %33 = phi i8* [ %31, %2 ], [ %205, %204 ]
  %34 = phi i32 [ %23, %2 ], [ %206, %204 ]
  %35 = icmp ugt i32 %34, 127
  %36 = zext i1 %35 to i8
  %37 = shl nuw i8 %36, 7
  %38 = trunc i32 %34 to i8
  %39 = and i8 %38, 127
  %40 = or i8 %37, %39
  %41 = load i8*, i8** %25, align 8
  %42 = icmp eq i8* %33, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %32
  store i8 %40, i8* %33, align 1
  %44 = getelementptr inbounds i8, i8* %33, i64 1
  %45 = ptrtoint i8* %44 to i64
  store i64 %45, i64* %26, align 8
  br label %204

46:                                               ; preds = %32
  %47 = ptrtoint i8* %33 to i64
  %48 = load i64, i64* %27, align 8
  %49 = sub i64 %47, %48
  %50 = add i64 %49, 1
  %51 = icmp ugt i64 %50, 2147483647
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = bitcast %"class.v8::internal::ZoneVector"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #6
  unreachable

54:                                               ; preds = %46
  %55 = icmp ult i64 %49, 1073741823
  br i1 %55, label %56, label %61

56:                                               ; preds = %54
  %57 = shl i64 %49, 1
  %58 = icmp ult i64 %57, %50
  %59 = select i1 %58, i64 %50, i64 %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %79, label %61

61:                                               ; preds = %56, %54
  %62 = phi i64 [ %59, %56 ], [ 2147483647, %54 ]
  %63 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %29, align 8
  %64 = add nuw nsw i64 %62, 7
  %65 = and i64 %64, -8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 3
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %69, %67
  %71 = icmp ugt i64 %65, %70
  br i1 %71, label %72, label %74, !prof !2

72:                                               ; preds = %61
  %73 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %63, i64 %65) #5
  br label %76

74:                                               ; preds = %61
  %75 = add i64 %67, %65
  store i64 %75, i64* %66, align 8
  br label %76

76:                                               ; preds = %74, %72
  %77 = phi i64 [ %73, %72 ], [ %67, %74 ]
  %78 = inttoptr i64 %77 to i8*
  br label %79

79:                                               ; preds = %76, %56
  %80 = phi i64 [ %62, %76 ], [ 0, %56 ]
  %81 = phi i8* [ %78, %76 ], [ null, %56 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  %83 = getelementptr inbounds i8, i8* %81, i64 %80
  %84 = ptrtoint i8* %83 to i64
  store i8 %40, i8* %82, align 1
  %85 = getelementptr inbounds i8, i8* %82, i64 1
  %86 = ptrtoint i8* %85 to i64
  %87 = load i8*, i8** %30, align 8
  %88 = load i8*, i8** %24, align 8
  %89 = ptrtoint i8* %88 to i64
  %90 = icmp eq i8* %88, %87
  br i1 %90, label %201, label %91

91:                                               ; preds = %79
  %92 = ptrtoint i8* %87 to i64
  %93 = ptrtoint i8* %88 to i64
  %94 = sub i64 %93, %92
  %95 = icmp ult i64 %94, 16
  br i1 %95, label %191, label %96

96:                                               ; preds = %91
  %97 = sub i64 %47, %89
  %98 = sub i64 %97, %48
  %99 = getelementptr i8, i8* %87, i64 %98
  %100 = ptrtoint i8* %99 to i64
  %101 = getelementptr i8, i8* %81, i64 %100
  %102 = icmp ult i8* %101, %88
  %103 = icmp ult i8* %87, %82
  %104 = and i1 %102, %103
  br i1 %104, label %191, label %105

105:                                              ; preds = %96
  %106 = and i64 %94, -16
  %107 = sub i64 0, %106
  %108 = getelementptr i8, i8* %82, i64 %107
  %109 = sub i64 0, %106
  %110 = getelementptr i8, i8* %88, i64 %109
  %111 = add i64 %106, -16
  %112 = lshr exact i64 %111, 4
  %113 = add nuw nsw i64 %112, 1
  %114 = and i64 %113, 3
  %115 = icmp ult i64 %111, 48
  br i1 %115, label %168, label %116

116:                                              ; preds = %105
  %117 = sub nsw i64 %113, %114
  %118 = getelementptr i8, i8* %82, i64 -1
  %119 = getelementptr inbounds i8, i8* %118, i64 -8
  %120 = getelementptr inbounds i8, i8* %88, i64 -16
  %121 = getelementptr inbounds i8, i8* %119, i64 -7
  %122 = getelementptr i8, i8* %82, i64 -1
  %123 = getelementptr inbounds i8, i8* %122, i64 -8
  %124 = getelementptr inbounds i8, i8* %88, i64 -16
  %125 = getelementptr inbounds i8, i8* %123, i64 -7
  %126 = getelementptr i8, i8* %82, i64 -1
  %127 = getelementptr inbounds i8, i8* %126, i64 -8
  %128 = getelementptr inbounds i8, i8* %88, i64 -16
  %129 = getelementptr inbounds i8, i8* %127, i64 -7
  %130 = getelementptr i8, i8* %82, i64 -1
  %131 = getelementptr inbounds i8, i8* %130, i64 -8
  %132 = getelementptr inbounds i8, i8* %88, i64 -16
  %133 = getelementptr inbounds i8, i8* %131, i64 -7
  br label %134

134:                                              ; preds = %134, %116
  %135 = phi i64 [ 0, %116 ], [ %165, %134 ]
  %136 = phi i64 [ %117, %116 ], [ %166, %134 ]
  %137 = sub i64 0, %135
  %138 = sub i64 0, %135
  %139 = getelementptr inbounds i8, i8* %120, i64 %138
  %140 = bitcast i8* %139 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 1, !alias.scope !3
  %142 = getelementptr inbounds i8, i8* %121, i64 %137
  %143 = bitcast i8* %142 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %143, align 1, !alias.scope !6, !noalias !3
  %144 = sub nuw nsw i64 -16, %135
  %145 = sub nuw nsw i64 -16, %135
  %146 = getelementptr inbounds i8, i8* %124, i64 %145
  %147 = bitcast i8* %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 1, !alias.scope !3
  %149 = getelementptr inbounds i8, i8* %125, i64 %144
  %150 = bitcast i8* %149 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %150, align 1, !alias.scope !6, !noalias !3
  %151 = sub nuw nsw i64 -32, %135
  %152 = sub nuw nsw i64 -32, %135
  %153 = getelementptr inbounds i8, i8* %128, i64 %152
  %154 = bitcast i8* %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 1, !alias.scope !3
  %156 = getelementptr inbounds i8, i8* %129, i64 %151
  %157 = bitcast i8* %156 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %157, align 1, !alias.scope !6, !noalias !3
  %158 = sub nuw nsw i64 -48, %135
  %159 = sub nuw nsw i64 -48, %135
  %160 = getelementptr inbounds i8, i8* %132, i64 %159
  %161 = bitcast i8* %160 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 1, !alias.scope !3
  %163 = getelementptr inbounds i8, i8* %133, i64 %158
  %164 = bitcast i8* %163 to <2 x i64>*
  store <2 x i64> %162, <2 x i64>* %164, align 1, !alias.scope !6, !noalias !3
  %165 = add i64 %135, 64
  %166 = add i64 %136, -4
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %134, !llvm.loop !8

168:                                              ; preds = %134, %105
  %169 = phi i64 [ 0, %105 ], [ %165, %134 ]
  %170 = icmp eq i64 %114, 0
  br i1 %170, label %189, label %171

171:                                              ; preds = %168
  %172 = getelementptr i8, i8* %82, i64 -1
  %173 = getelementptr inbounds i8, i8* %172, i64 -8
  %174 = getelementptr inbounds i8, i8* %88, i64 -16
  %175 = getelementptr inbounds i8, i8* %173, i64 -7
  br label %176

176:                                              ; preds = %176, %171
  %177 = phi i64 [ %169, %171 ], [ %186, %176 ]
  %178 = phi i64 [ %114, %171 ], [ %187, %176 ]
  %179 = sub i64 0, %177
  %180 = sub i64 0, %177
  %181 = getelementptr inbounds i8, i8* %174, i64 %180
  %182 = bitcast i8* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 1, !alias.scope !3
  %184 = getelementptr inbounds i8, i8* %175, i64 %179
  %185 = bitcast i8* %184 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %185, align 1, !alias.scope !6, !noalias !3
  %186 = add i64 %177, 16
  %187 = add i64 %178, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %176, !llvm.loop !10

189:                                              ; preds = %176, %168
  %190 = icmp eq i64 %94, %106
  br i1 %190, label %201, label %191

191:                                              ; preds = %189, %96, %91
  %192 = phi i8* [ %82, %96 ], [ %82, %91 ], [ %108, %189 ]
  %193 = phi i8* [ %88, %96 ], [ %88, %91 ], [ %110, %189 ]
  br label %194

194:                                              ; preds = %191, %194
  %195 = phi i8* [ %197, %194 ], [ %192, %191 ]
  %196 = phi i8* [ %198, %194 ], [ %193, %191 ]
  %197 = getelementptr inbounds i8, i8* %195, i64 -1
  %198 = getelementptr inbounds i8, i8* %196, i64 -1
  %199 = load i8, i8* %198, align 1
  store i8 %199, i8* %197, align 1
  %200 = icmp eq i8* %198, %87
  br i1 %200, label %201, label %194, !llvm.loop !12

201:                                              ; preds = %194, %189, %79
  %202 = phi i8* [ %82, %79 ], [ %108, %189 ], [ %197, %194 ]
  %203 = ptrtoint i8* %202 to i64
  store i64 %203, i64* %27, align 8
  store i64 %86, i64* %26, align 8
  store i64 %84, i64* %28, align 8
  br label %204

204:                                              ; preds = %201, %43
  %205 = phi i8* [ %44, %43 ], [ %85, %201 ]
  %206 = lshr i32 %34, 7
  br i1 %35, label %32, label %207

207:                                              ; preds = %204
  %208 = shl i64 %16, 1
  %209 = ashr i64 %16, 63
  %210 = xor i64 %208, %209
  br label %211

211:                                              ; preds = %383, %207
  %212 = phi i8* [ %205, %207 ], [ %384, %383 ]
  %213 = phi i64 [ %210, %207 ], [ %385, %383 ]
  %214 = icmp ugt i64 %213, 127
  %215 = zext i1 %214 to i8
  %216 = shl nuw i8 %215, 7
  %217 = trunc i64 %213 to i8
  %218 = and i8 %217, 127
  %219 = or i8 %216, %218
  %220 = load i8*, i8** %25, align 8
  %221 = icmp eq i8* %212, %220
  br i1 %221, label %225, label %222

222:                                              ; preds = %211
  store i8 %219, i8* %212, align 1
  %223 = getelementptr inbounds i8, i8* %212, i64 1
  %224 = ptrtoint i8* %223 to i64
  store i64 %224, i64* %26, align 8
  br label %383

225:                                              ; preds = %211
  %226 = ptrtoint i8* %212 to i64
  %227 = load i64, i64* %27, align 8
  %228 = sub i64 %226, %227
  %229 = add i64 %228, 1
  %230 = icmp ugt i64 %229, 2147483647
  br i1 %230, label %231, label %233

231:                                              ; preds = %225
  %232 = bitcast %"class.v8::internal::ZoneVector"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %232) #6
  unreachable

233:                                              ; preds = %225
  %234 = icmp ult i64 %228, 1073741823
  br i1 %234, label %235, label %240

235:                                              ; preds = %233
  %236 = shl i64 %228, 1
  %237 = icmp ult i64 %236, %229
  %238 = select i1 %237, i64 %229, i64 %236
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %258, label %240

240:                                              ; preds = %235, %233
  %241 = phi i64 [ %238, %235 ], [ 2147483647, %233 ]
  %242 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %29, align 8
  %243 = add nuw nsw i64 %241, 7
  %244 = and i64 %243, -8
  %245 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %242, i64 0, i32 2
  %246 = load i64, i64* %245, align 8
  %247 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %242, i64 0, i32 3
  %248 = load i64, i64* %247, align 8
  %249 = sub i64 %248, %246
  %250 = icmp ugt i64 %244, %249
  br i1 %250, label %251, label %253, !prof !2

251:                                              ; preds = %240
  %252 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %242, i64 %244) #5
  br label %255

253:                                              ; preds = %240
  %254 = add i64 %246, %244
  store i64 %254, i64* %245, align 8
  br label %255

255:                                              ; preds = %253, %251
  %256 = phi i64 [ %252, %251 ], [ %246, %253 ]
  %257 = inttoptr i64 %256 to i8*
  br label %258

258:                                              ; preds = %255, %235
  %259 = phi i64 [ %241, %255 ], [ 0, %235 ]
  %260 = phi i8* [ %257, %255 ], [ null, %235 ]
  %261 = getelementptr inbounds i8, i8* %260, i64 %228
  %262 = getelementptr inbounds i8, i8* %260, i64 %259
  %263 = ptrtoint i8* %262 to i64
  store i8 %219, i8* %261, align 1
  %264 = getelementptr inbounds i8, i8* %261, i64 1
  %265 = ptrtoint i8* %264 to i64
  %266 = load i8*, i8** %30, align 8
  %267 = load i8*, i8** %24, align 8
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp eq i8* %267, %266
  br i1 %269, label %380, label %270

270:                                              ; preds = %258
  %271 = ptrtoint i8* %266 to i64
  %272 = ptrtoint i8* %267 to i64
  %273 = sub i64 %272, %271
  %274 = icmp ult i64 %273, 16
  br i1 %274, label %370, label %275

275:                                              ; preds = %270
  %276 = sub i64 %226, %268
  %277 = sub i64 %276, %227
  %278 = getelementptr i8, i8* %266, i64 %277
  %279 = ptrtoint i8* %278 to i64
  %280 = getelementptr i8, i8* %260, i64 %279
  %281 = icmp ult i8* %280, %267
  %282 = icmp ult i8* %266, %261
  %283 = and i1 %281, %282
  br i1 %283, label %370, label %284

284:                                              ; preds = %275
  %285 = and i64 %273, -16
  %286 = sub i64 0, %285
  %287 = getelementptr i8, i8* %261, i64 %286
  %288 = sub i64 0, %285
  %289 = getelementptr i8, i8* %267, i64 %288
  %290 = add i64 %285, -16
  %291 = lshr exact i64 %290, 4
  %292 = add nuw nsw i64 %291, 1
  %293 = and i64 %292, 3
  %294 = icmp ult i64 %290, 48
  br i1 %294, label %347, label %295

295:                                              ; preds = %284
  %296 = sub nsw i64 %292, %293
  %297 = getelementptr i8, i8* %261, i64 -1
  %298 = getelementptr inbounds i8, i8* %297, i64 -8
  %299 = getelementptr inbounds i8, i8* %267, i64 -16
  %300 = getelementptr inbounds i8, i8* %298, i64 -7
  %301 = getelementptr i8, i8* %261, i64 -1
  %302 = getelementptr inbounds i8, i8* %301, i64 -8
  %303 = getelementptr inbounds i8, i8* %267, i64 -16
  %304 = getelementptr inbounds i8, i8* %302, i64 -7
  %305 = getelementptr i8, i8* %261, i64 -1
  %306 = getelementptr inbounds i8, i8* %305, i64 -8
  %307 = getelementptr inbounds i8, i8* %267, i64 -16
  %308 = getelementptr inbounds i8, i8* %306, i64 -7
  %309 = getelementptr i8, i8* %261, i64 -1
  %310 = getelementptr inbounds i8, i8* %309, i64 -8
  %311 = getelementptr inbounds i8, i8* %267, i64 -16
  %312 = getelementptr inbounds i8, i8* %310, i64 -7
  br label %313

313:                                              ; preds = %313, %295
  %314 = phi i64 [ 0, %295 ], [ %344, %313 ]
  %315 = phi i64 [ %296, %295 ], [ %345, %313 ]
  %316 = sub i64 0, %314
  %317 = sub i64 0, %314
  %318 = getelementptr inbounds i8, i8* %299, i64 %317
  %319 = bitcast i8* %318 to <2 x i64>*
  %320 = load <2 x i64>, <2 x i64>* %319, align 1, !alias.scope !13
  %321 = getelementptr inbounds i8, i8* %300, i64 %316
  %322 = bitcast i8* %321 to <2 x i64>*
  store <2 x i64> %320, <2 x i64>* %322, align 1, !alias.scope !16, !noalias !13
  %323 = sub nuw nsw i64 -16, %314
  %324 = sub nuw nsw i64 -16, %314
  %325 = getelementptr inbounds i8, i8* %303, i64 %324
  %326 = bitcast i8* %325 to <2 x i64>*
  %327 = load <2 x i64>, <2 x i64>* %326, align 1, !alias.scope !13
  %328 = getelementptr inbounds i8, i8* %304, i64 %323
  %329 = bitcast i8* %328 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %329, align 1, !alias.scope !16, !noalias !13
  %330 = sub nuw nsw i64 -32, %314
  %331 = sub nuw nsw i64 -32, %314
  %332 = getelementptr inbounds i8, i8* %307, i64 %331
  %333 = bitcast i8* %332 to <2 x i64>*
  %334 = load <2 x i64>, <2 x i64>* %333, align 1, !alias.scope !13
  %335 = getelementptr inbounds i8, i8* %308, i64 %330
  %336 = bitcast i8* %335 to <2 x i64>*
  store <2 x i64> %334, <2 x i64>* %336, align 1, !alias.scope !16, !noalias !13
  %337 = sub nuw nsw i64 -48, %314
  %338 = sub nuw nsw i64 -48, %314
  %339 = getelementptr inbounds i8, i8* %311, i64 %338
  %340 = bitcast i8* %339 to <2 x i64>*
  %341 = load <2 x i64>, <2 x i64>* %340, align 1, !alias.scope !13
  %342 = getelementptr inbounds i8, i8* %312, i64 %337
  %343 = bitcast i8* %342 to <2 x i64>*
  store <2 x i64> %341, <2 x i64>* %343, align 1, !alias.scope !16, !noalias !13
  %344 = add i64 %314, 64
  %345 = add i64 %315, -4
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %313, !llvm.loop !18

347:                                              ; preds = %313, %284
  %348 = phi i64 [ 0, %284 ], [ %344, %313 ]
  %349 = icmp eq i64 %293, 0
  br i1 %349, label %368, label %350

350:                                              ; preds = %347
  %351 = getelementptr i8, i8* %261, i64 -1
  %352 = getelementptr inbounds i8, i8* %351, i64 -8
  %353 = getelementptr inbounds i8, i8* %267, i64 -16
  %354 = getelementptr inbounds i8, i8* %352, i64 -7
  br label %355

355:                                              ; preds = %355, %350
  %356 = phi i64 [ %348, %350 ], [ %365, %355 ]
  %357 = phi i64 [ %293, %350 ], [ %366, %355 ]
  %358 = sub i64 0, %356
  %359 = sub i64 0, %356
  %360 = getelementptr inbounds i8, i8* %353, i64 %359
  %361 = bitcast i8* %360 to <2 x i64>*
  %362 = load <2 x i64>, <2 x i64>* %361, align 1, !alias.scope !13
  %363 = getelementptr inbounds i8, i8* %354, i64 %358
  %364 = bitcast i8* %363 to <2 x i64>*
  store <2 x i64> %362, <2 x i64>* %364, align 1, !alias.scope !16, !noalias !13
  %365 = add i64 %356, 16
  %366 = add i64 %357, -1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %355, !llvm.loop !19

368:                                              ; preds = %355, %347
  %369 = icmp eq i64 %273, %285
  br i1 %369, label %380, label %370

370:                                              ; preds = %368, %275, %270
  %371 = phi i8* [ %261, %275 ], [ %261, %270 ], [ %287, %368 ]
  %372 = phi i8* [ %267, %275 ], [ %267, %270 ], [ %289, %368 ]
  br label %373

373:                                              ; preds = %370, %373
  %374 = phi i8* [ %376, %373 ], [ %371, %370 ]
  %375 = phi i8* [ %377, %373 ], [ %372, %370 ]
  %376 = getelementptr inbounds i8, i8* %374, i64 -1
  %377 = getelementptr inbounds i8, i8* %375, i64 -1
  %378 = load i8, i8* %377, align 1
  store i8 %378, i8* %376, align 1
  %379 = icmp eq i8* %377, %266
  br i1 %379, label %380, label %373, !llvm.loop !20

380:                                              ; preds = %373, %368, %258
  %381 = phi i8* [ %261, %258 ], [ %287, %368 ], [ %376, %373 ]
  %382 = ptrtoint i8* %381 to i64
  store i64 %382, i64* %27, align 8
  store i64 %265, i64* %26, align 8
  store i64 %263, i64* %28, align 8
  br label %383

383:                                              ; preds = %380, %222
  %384 = phi i8* [ %223, %222 ], [ %264, %380 ]
  %385 = lshr i64 %213, 7
  br i1 %214, label %211, label %386

386:                                              ; preds = %383
  %387 = bitcast %"struct.v8::internal::PositionTableEntry"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %387, i8* align 8 %3, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN2v88internal26SourcePositionTableBuilder27ToSourcePositionTableVectorEv(%"class.v8::internal::SourcePositionTableBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = ptrtoint i8* %3 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = tail call i8* @_Znam(i64 %10) #7
  %14 = insertvalue { i8*, i64 } undef, i8* %13, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %10, 1
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 %3, i64 %10, i1 false) #5
  br label %16

16:                                               ; preds = %12, %7
  %17 = phi { i8*, i64 } [ %15, %12 ], [ zeroinitializer, %7 ]
  %18 = extractvalue { i8*, i64 } %17, 0
  %19 = extractvalue { i8*, i64 } %17, 1
  br label %20

20:                                               ; preds = %1, %16
  %21 = phi i64 [ %19, %16 ], [ 0, %1 ]
  %22 = phi i8* [ %18, %16 ], [ null, %1 ]
  %23 = insertvalue { i8*, i64 } undef, i8* %22, 0
  %24 = insertvalue { i8*, i64 } %23, i64 %21, 1
  ret { i8*, i64 } %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal27SourcePositionTableIterator10InitializeEv(%"class.v8::internal::SourcePositionTableIterator"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %0)
  %2 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %0)
  br label %14

14:                                               ; preds = %13, %9, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %19

10:                                               ; preds = %1
  %11 = load i64, i64* %3, align 8
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i8*
  %14 = add i64 %11, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = ashr i32 %16, 1
  %18 = sext i32 %17 to i64
  br label %19

19:                                               ; preds = %10, %5
  %20 = phi i8* [ %7, %5 ], [ %13, %10 ]
  %21 = phi i64 [ %9, %5 ], [ %18, %10 ]
  %22 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %99, label %25

25:                                               ; preds = %19
  %26 = trunc i64 %21 to i32
  %27 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 2
  %29 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 3
  %30 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 5
  br label %31

31:                                               ; preds = %25, %94
  %32 = phi i32 [ %23, %25 ], [ %76, %94 ]
  %33 = icmp slt i32 %32, %26
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  store i32 -1, i32* %22, align 8
  br label %99

35:                                               ; preds = %31
  %36 = sext i32 %32 to i64
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ %41, %37 ], [ %36, %35 ]
  %39 = phi i32 [ %48, %37 ], [ 0, %35 ]
  %40 = phi i32 [ %50, %37 ], [ 0, %35 ]
  %41 = add i64 %38, 1
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %22, align 4
  %43 = getelementptr inbounds i8, i8* %20, i64 %38
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, 127
  %46 = zext i8 %45 to i32
  %47 = shl i32 %46, %40
  %48 = or i32 %47, %39
  %49 = icmp slt i8 %44, 0
  %50 = add nuw nsw i32 %40, 7
  br i1 %49, label %37, label %51

51:                                               ; preds = %37
  %52 = ashr i32 %48, 1
  %53 = and i32 %48, 1
  %54 = sub nsw i32 0, %53
  %55 = xor i32 %52, %54
  %56 = lshr i32 %55, 31
  %57 = trunc i32 %56 to i8
  %58 = ashr i32 %55, 31
  %59 = shl i64 %41, 32
  %60 = ashr exact i64 %59, 32
  br label %61

61:                                               ; preds = %61, %51
  %62 = phi i64 [ %65, %61 ], [ %60, %51 ]
  %63 = phi i64 [ %74, %61 ], [ 0, %51 ]
  %64 = phi i64 [ %72, %61 ], [ 0, %51 ]
  %65 = add i64 %62, 1
  %66 = trunc i64 %65 to i32
  store i32 %66, i32* %22, align 4
  %67 = getelementptr inbounds i8, i8* %20, i64 %62
  %68 = load i8, i8* %67, align 1
  %69 = and i8 %68, 127
  %70 = zext i8 %69 to i64
  %71 = shl i64 %70, %63
  %72 = or i64 %71, %64
  %73 = icmp slt i8 %68, 0
  %74 = add nuw i64 %63, 7
  br i1 %73, label %61, label %75

75:                                               ; preds = %61
  %76 = trunc i64 %65 to i32
  %77 = xor i8 %57, 1
  %78 = xor i32 %58, %55
  %79 = ashr i64 %72, 1
  %80 = and i64 %72, 1
  %81 = sub nsw i64 0, %80
  %82 = xor i64 %79, %81
  %83 = load i32, i32* %27, align 8
  %84 = add nsw i32 %83, %78
  store i32 %84, i32* %27, align 8
  %85 = load i64, i64* %28, align 8
  %86 = add nsw i64 %85, %82
  store i64 %86, i64* %28, align 8
  store i8 %77, i8* %29, align 8
  %87 = load i32, i32* %30, align 8
  switch i32 %87, label %94 [
    i32 2, label %99
    i32 0, label %88
    i32 1, label %91
  ]

88:                                               ; preds = %75
  %89 = and i64 %86, 1
  %90 = icmp eq i64 %89, 0
  br label %94

91:                                               ; preds = %75
  %92 = and i64 %86, 1
  %93 = icmp ne i64 %92, 0
  br label %94

94:                                               ; preds = %75, %91, %88
  %95 = phi i1 [ %93, %91 ], [ %90, %88 ], [ false, %75 ]
  %96 = icmp ne i32 %76, -1
  %97 = xor i1 %95, true
  %98 = and i1 %96, %97
  br i1 %98, label %31, label %99

99:                                               ; preds = %75, %94, %34, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal27SourcePositionTableIteratorC2ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nocapture, i64, i32, i32) unnamed_addr #0 align 2 {
  %5 = add i64 %1, 7
  %6 = inttoptr i64 %5 to i8*
  %7 = add i64 %1, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 0, i32 0
  store i8* %6, i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 1, i32 0, i32 0
  store i64* null, i64** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 2
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 0
  store i32 -1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 2
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 3
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 5
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 6
  store i32 %3, i32* %20, align 4
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %0) #5
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %4
  %24 = load i32, i32* %16, align 8
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = load i32, i32* %15, align 8
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %0) #5
  br label %30

30:                                               ; preds = %4, %23, %26, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal27SourcePositionTableIteratorC2ENS0_6HandleINS0_9ByteArrayEEENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nocapture, i64*, i32, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::SourcePositionTableIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #5
  %6 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 1, i32 0, i32 0
  store i64* %1, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 0
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 2
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 3
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 5
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 6
  store i32 %3, i32* %12, align 4
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %0) #5
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %4
  %16 = load i32, i32* %8, align 8
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %22

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 8
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %0) #5
  br label %22

22:                                               ; preds = %4, %15, %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal27SourcePositionTableIteratorC2ENS0_6VectorIKhEENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nocapture, i8*, i64, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 1, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 0
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 2
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 4, i32 3
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 5
  store i32 %3, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %0, i64 0, i32 6
  store i32 %4, i32* %14, align 4
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %0) #5
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %5
  %18 = load i32, i32* %10, align 8
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = load i32, i32* %9, align 8
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %0) #5
  br label %24

24:                                               ; preds = %5, %17, %20, %23
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
