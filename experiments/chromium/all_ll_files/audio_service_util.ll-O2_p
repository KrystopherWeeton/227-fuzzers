; ModuleID = '../../chrome/browser/media/audio_service_util.cc'
source_filename = "../../chrome/browser/media/audio_service_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%class.BrowserProcess = type { i32 (...)** }
%"struct.policy::PolicyNamespace" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.policy::ChromeBrowserPolicyConnector" = type { %"class.policy::BrowserPolicyConnector", %"class.policy::ConfigurationPolicyProvider"*, %"class.std::__1::unique_ptr.93", %"class.policy::MachineLevelUserCloudPolicyManager"*, %"class.policy::ConfigurationPolicyProvider"* }
%"class.policy::BrowserPolicyConnector" = type { %"class.policy::BrowserPolicyConnectorBase", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87" }
%"class.policy::BrowserPolicyConnectorBase" = type { i32 (...)**, i8, %"class.std::__1::unique_ptr", %"class.policy::CombinedSchemaRegistry", %"class.std::__1::vector.60", %"class.std::__1::unique_ptr.68", %"class.std::__1::vector.74" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.policy::ConfigurationPolicyHandlerList"* }
%"class.policy::ConfigurationPolicyHandlerList" = type <{ %"class.std::__1::vector.16", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.25", i8, [7 x i8] }>
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::unique_ptr.18" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::unique_ptr.18"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.25" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.policy::CombinedSchemaRegistry" = type { %"class.policy::SchemaRegistry.base", %"class.policy::SchemaRegistry::Observer", %"class.policy::SchemaRegistry::InternalObserver", %"class.std::__1::set", %class.scoped_refptr.27 }
%"class.policy::SchemaRegistry.base" = type <{ i32 (...)**, %class.scoped_refptr.27, %"class.base::ObserverList", %"class.base::ObserverList.47", [3 x i8] }>
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.40", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.42" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.47" = type <{ %"class.std::__1::vector.40", %"class.base::LinkedList.48", i64, i32, [4 x i8] }>
%"class.base::LinkedList.48" = type { %"class.base::LinkNode.49" }
%"class.base::LinkNode.49" = type { %"class.base::internal::LinkNodeBase" }
%"class.policy::SchemaRegistry::Observer" = type { i32 (...)** }
%"class.policy::SchemaRegistry::InternalObserver" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%class.scoped_refptr.27 = type { %"class.policy::SchemaMap"* }
%"class.policy::SchemaMap" = type { %"class.base::RefCountedThreadSafe.28", %"class.std::__1::map.29" }
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.std::__1::unique_ptr.62"*, %"class.std::__1::unique_ptr.62"*, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::unique_ptr.62" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::unique_ptr.62"* }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.policy::PolicyServiceImpl"* }
%"class.policy::PolicyServiceImpl" = type opaque
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.76" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.base::OnceCallback"* }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.policy::PolicyStatisticsCollector"* }
%"class.policy::PolicyStatisticsCollector" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.policy::DeviceManagementService"* }
%"class.policy::DeviceManagementService" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.policy::ChromeBrowserCloudManagementController"* }
%"class.policy::ChromeBrowserCloudManagementController" = type opaque
%"class.policy::MachineLevelUserCloudPolicyManager" = type opaque
%"class.policy::ConfigurationPolicyProvider" = type opaque
%"class.policy::PolicyService" = type { i32 (...)** }
%"class.policy::PolicyMap" = type { %"class.std::__1::map", i8, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.100" }
%"union.absl::variant_internal::DestructibleUnionImpl.100" = type { %"union.absl::variant_internal::DestructibleUnionImpl.101" }
%"union.absl::variant_internal::DestructibleUnionImpl.101" = type { %"union.absl::variant_internal::DestructibleUnionImpl.102" }
%"union.absl::variant_internal::DestructibleUnionImpl.102" = type { %"union.absl::variant_internal::DestructibleUnionImpl.103" }
%"union.absl::variant_internal::DestructibleUnionImpl.103" = type { %"class.std::__1::basic_string" }

@_ZN6policy3key20kAudioSandboxEnabledE = external constant [0 x i8], align 1
@_ZN8features20kAudioServiceSandboxE = external global %"struct.base::Feature", align 8
@g_browser_process = external local_unnamed_addr global %class.BrowserProcess*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z28IsAudioServiceSandboxEnabledv() local_unnamed_addr #0 {
  %1 = alloca %"struct.policy::PolicyNamespace", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %5 = bitcast %class.BrowserProcess* %4 to %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)***
  %6 = load %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)**, %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)*** %5, align 8
  %7 = getelementptr inbounds %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)*, %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)** %6, i64 17
  %8 = load %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)*, %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)** %7, align 8
  %9 = tail call %"class.policy::ChromeBrowserPolicyConnector"* %8(%class.BrowserProcess* %4) #8
  %10 = getelementptr inbounds %"class.policy::ChromeBrowserPolicyConnector", %"class.policy::ChromeBrowserPolicyConnector"* %9, i64 0, i32 0, i32 0
  %11 = tail call %"class.policy::PolicyService"* @_ZN6policy26BrowserPolicyConnectorBase16GetPolicyServiceEv(%"class.policy::BrowserPolicyConnectorBase"* %10) #8
  %12 = bitcast %"struct.policy::PolicyNamespace"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #8
  call void @_ZN6policy15PolicyNamespaceC1ENS_12PolicyDomainERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.policy::PolicyNamespace"* nonnull %1, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #8
  %14 = bitcast %"class.policy::PolicyService"* %11 to %"class.policy::PolicyMap"* (%"class.policy::PolicyService"*, %"struct.policy::PolicyNamespace"*)***
  %15 = load %"class.policy::PolicyMap"* (%"class.policy::PolicyService"*, %"struct.policy::PolicyNamespace"*)**, %"class.policy::PolicyMap"* (%"class.policy::PolicyService"*, %"struct.policy::PolicyNamespace"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.policy::PolicyMap"* (%"class.policy::PolicyService"*, %"struct.policy::PolicyNamespace"*)*, %"class.policy::PolicyMap"* (%"class.policy::PolicyService"*, %"struct.policy::PolicyNamespace"*)** %15, i64 7
  %17 = load %"class.policy::PolicyMap"* (%"class.policy::PolicyService"*, %"struct.policy::PolicyNamespace"*)*, %"class.policy::PolicyMap"* (%"class.policy::PolicyService"*, %"struct.policy::PolicyNamespace"*)** %16, align 8
  %18 = call dereferenceable(80) %"class.policy::PolicyMap"* %17(%"class.policy::PolicyService"* %11, %"struct.policy::PolicyNamespace"* nonnull dereferenceable(32) %1) #8
  call void @_ZN6policy15PolicyNamespaceD1Ev(%"struct.policy::PolicyNamespace"* nonnull %1) #8
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #9
  br label %26

26:                                               ; preds = %23, %0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  %27 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %28 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key20kAudioSandboxEnabledE, i64 0, i64 0)) #8
  %29 = icmp ugt i64 %28, -17
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #10
  unreachable

32:                                               ; preds = %26
  %33 = icmp ult i64 %28, 23
  br i1 %33, label %43, label %34

34:                                               ; preds = %32
  %35 = add nuw i64 %28, 16
  %36 = and i64 %35, -16
  %37 = call i8* @_Znwm(i64 %36) #9
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = or i64 %36, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %41, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %48

43:                                               ; preds = %32
  %44 = trunc i64 %28 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  %47 = icmp eq i64 %28, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43, %34
  %49 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %45, %43 ], [ %42, %34 ]
  %50 = phi i8* [ %27, %43 ], [ %37, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key20kAudioSandboxEnabledE, i64 0, i64 0), i64 %28, i1 false) #8
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %45, %43 ], [ %49, %48 ]
  %53 = phi i8* [ %27, %43 ], [ %50, %48 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %28
  store i8 0, i8* %54, align 1
  %55 = call %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #8
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #9
  br label %62

62:                                               ; preds = %59, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  %63 = icmp eq %"class.base::Value"* %55, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features20kAudioServiceSandboxE) #8
  br label %73

66:                                               ; preds = %62
  %67 = call i16 @_ZNK4base5Value9GetIfBoolEv(%"class.base::Value"* nonnull %55) #8
  %68 = trunc i16 %67 to i8
  %69 = lshr i16 %67, 8
  %70 = trunc i16 %69 to i8
  %71 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features20kAudioServiceSandboxE) #8
  %72 = icmp eq i8 %68, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66, %64
  %74 = phi i1 [ %65, %64 ], [ %71, %66 ]
  %75 = zext i1 %74 to i8
  br label %76

76:                                               ; preds = %66, %73
  %77 = phi i8 [ %75, %73 ], [ %70, %66 ]
  %78 = icmp ne i8 %77, 0
  ret i1 %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.policy::PolicyService"* @_ZN6policy26BrowserPolicyConnectorBase16GetPolicyServiceEv(%"class.policy::BrowserPolicyConnectorBase"*) local_unnamed_addr #2

declare void @_ZN6policy15PolicyNamespaceC1ENS_12PolicyDomainERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.policy::PolicyNamespace"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6policy15PolicyNamespaceD1Ev(%"struct.policy::PolicyNamespace"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare i16 @_ZNK4base5Value9GetIfBoolEv(%"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
