; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_svc_layercontext.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_svc_layercontext.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VP9_COMP = type { %struct.FRAME_INFO, [8 x i8], %struct.QUANTS, %struct.ThreadData, %struct.MB_MODE_INFO_EXT*, [8 x i8], [256 x [8 x i16]], [256 x [8 x i16]], %struct.VP9Common, %struct.VP9EncoderConfig, %struct.lookahead_ctx*, %struct.lookahead_entry*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, i8, [50 x %struct.TplDepFrame], [8 x %struct.yv12_buffer_config*], [8 x %struct.EncFrameBuf], %union.pthread_mutex_t, i32, %struct.KMEANS_DATA*, i32, i32, [8 x double], [8 x double], [8 x i32], i32, %struct.TileDataEnc*, i32, i32, [3 x i32], i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64*, i32, i32, double*, %struct.yv12_buffer_config, [4 x [64 x %struct.TOKENEXTRA*]], [4 x [64 x %struct.TOKENLIST*]], i64, %struct.RD_OPT, %struct.CODING_CONTEXT, [2 x i32*], [2 x i32*], [2 x i32*], [2 x i32*], i64, i64, i64, %struct.RATE_CONTROL, double, [8 x [4 x i32]], %struct.vpx_codec_pkt_list*, [25 x %struct.MBGRAPH_FRAME_STATS], i32, i32, i32, %struct.SPEED_FEATURES, i32, i32, i32, i32, i32, i8*, i8*, [8 x i32], %struct.CYCLIC_REFRESH*, %struct.ActiveMap, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)*, %struct.scale_factors, i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)*, [13 x %struct.vp9_variance_vtable], i64, i64, i64, i64, %struct.TWO_PASS, i8, %struct.yv12_buffer_config, %struct.ALT_REF_AQ*, i32, i32, i32, i32, i32, i32, %struct.SVC, %struct.diff*, i32, i32, i32, %struct.search_site_config, [10 x i32], [7 x [4 x i32]], [2 x [10 x [10 x i32]]], [10 x [10 x [10 x i32]]], [4 x [3 x i32]], [16 x [4 x i32]], [3 x [2 x [4 x i32]]], %struct.vp9_denoiser, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.noise_estimate, i8*, [4 x i64], i64, i64, i64, i8, i32, %struct.VPxWorker*, %struct.EncWorkerData*, %struct.VP9LfSyncData, %struct.VP9BitstreamWorkerData*, i32, %struct.Vp9LevelInfo, %struct.MultiThreadHandle, void (%struct.VP9RowMTSyncData*, i32, i32)*, void (%struct.VP9RowMTSyncData*, i32, i32, i32)*, %struct.ARNRFilterData, i32, i32, i8*, i8*, i8*, i8*, i8, i8, i8*, i32, %struct.LevelConstraint, i8*, i8*, i32, %struct.vpx_roi_map, i32, %struct.EXT_RATECTRL, [8 x i8] }
%struct.FRAME_INFO = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.QUANTS = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.ThreadData = type { %struct.macroblock, %struct.RD_COUNTS, %struct.FRAME_COUNTS*, %struct.PICK_MODE_CONTEXT*, %struct.PC_TREE*, %struct.PC_TREE*, [8 x i8] }
%struct.macroblock = type { [3 x %struct.macroblock_plane], %struct.macroblockd, %struct.MB_MODE_INFO_EXT*, %struct.MB_MODE_INFO_EXT*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [4 x i32], [4 x i32], i32, [4 x i32], [4 x i32], [4 x i32], [2 x i32*], [2 x i32*], i32**, [4 x i32], [2 x i32*], [2 x i32*], i32**, i32, i32, %struct.MvLimits, [4 x [256 x i8]], [4 x i32], i32, i32, [4 x [2 x [2 x [6 x [2 x [6 x [12 x i32]]]]]]], i32, i32, i32, i32, i32, [12 x i8], [12 x i64], [4 x %struct.mv], [2 x i8], i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, [25 x i8], i8, i8, void (i16*, i32*, i32)*, void (i32*, i8*, i32, i32)*, void (i32*, i16*, i32, i32, i32)*, [8 x i8], [4096 x i8], %struct.scale_factors*, [8 x i8] }
%struct.macroblock_plane = type { [4096 x i16], i32*, i32*, i16*, %struct.buf_2d, [8 x i8], [8 x i16], i16*, i16*, i16*, i16*, i16*, [2 x i64], [8 x i8] }
%struct.buf_2d = type { i8*, i32 }
%struct.macroblockd = type { [3 x %struct.macroblockd_plane], i8, i8, %struct.FRAME_COUNTS*, %struct.TileInfo, i32, %struct.MODE_INFO**, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i32, [3 x i8]*, i32, i32, i32, i32, %struct.frame_contexts*, [2 x %struct.RefBuffer*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [16 x i8]], i8*, [8 x i8], i32, i32, i32, %struct.vpx_internal_error_info*, i32* }
%struct.macroblockd_plane = type { i32*, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i16, i16, i8, i8, i16*, i32* }
%struct.TileInfo = type { i32, i32, i32, i32 }
%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%union.int_mv = type { i32 }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.MvLimits = type { i32, i32, i32, i32 }
%struct.mv = type { i16, i16 }
%struct.RD_COUNTS = type { [4 x [2 x [2 x [6 x [6 x [12 x i32]]]]]], [3 x i64], [4 x i64] }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.PICK_MODE_CONTEXT = type { %struct.MODE_INFO, %struct.MB_MODE_INFO_EXT, i8*, [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i16*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i16*]], i32, i32, i32, i32, i32, [12 x i8], i32, i32, i32, i32, [4 x i64], i32, i64, i64, i32, i32, i32, i8, %union.int_mv, i8, i8, i32, [4 x %struct.mv], i8, i32, i8 }
%struct.MB_MODE_INFO_EXT = type { [4 x [2 x %union.int_mv]], [4 x i8] }
%struct.PC_TREE = type { i32, i32, i8, %struct.PICK_MODE_CONTEXT, [2 x %struct.PICK_MODE_CONTEXT], [2 x %struct.PICK_MODE_CONTEXT], %union.anon, %struct.mv }
%union.anon = type { [4 x %struct.PC_TREE*] }
%struct.VP9Common = type { %struct.vpx_internal_error_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], [8 x i32], [3 x %struct.RefBuffer], i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], i32, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, i32 (%struct.VP9Common*, i32)*, void (%struct.VP9Common*)*, void (%struct.VP9Common*)*, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, i32, i32, i32, [2 x i8*], i8*, i8*, i32, i8, [11 x i8], %struct.loop_filter_info_n, i32, [4 x i32], %struct.loopfilter, %struct.segmentation, i8, [2 x i8], i32, %struct.frame_contexts*, %struct.frame_contexts*, i32, %struct.FRAME_COUNTS, i32, i32, i32, i32, i32, %struct.postproc_state, i32, i32, i32, i32, i32, i32, %struct.BufferPool*, i8*, i8*, i32, i32, [8 x i8] }
%struct.RefCntBuffer = type { i32, %struct.MV_REF*, i32, i32, i8, i32, i32, %struct.vpx_codec_frame_buffer, %struct.yv12_buffer_config }
%struct.MV_REF = type { [2 x %union.int_mv], [2 x i8] }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [8 x [4 x [2 x i8]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { i32, i32, i32, i32, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], %struct.LOOP_FILTER_MASK*, i32 }
%struct.LOOP_FILTER_MASK = type { [4 x i64], [4 x i64], i64, [4 x i16], [4 x i16], i16, [64 x i8] }
%struct.segmentation = type { i8, i8, i8, i8, i8, [7 x i8], [3 x i8], [8 x [4 x i16]], [8 x i32], i32 }
%struct.postproc_state = type { i32, i32, i32, i32, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i8*, i8* }
%struct.BufferPool = type { i8*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, [12 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.VP9EncoderConfig = type { i32, i32, i32, i32, i32, double, %struct.vpx_rational, %struct.vpx_rational64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i32], [5 x i32], [5 x i32], [5 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vpx_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_rational = type { i32, i32 }
%struct.vpx_rational64 = type { i64, i32 }
%struct.vpx_fixed_buf = type { i8*, i64 }
%struct.lookahead_ctx = type { i32, i32, i32, i32, i32, %struct.lookahead_entry* }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.TplDepFrame = type { i8, %struct.TplDepStats*, i32, i32, i32, i32, i32, i32 }
%struct.TplDepStats = type { i64, i64, i64, i64, i64, i32, %union.int_mv }
%struct.EncFrameBuf = type { i32, i32, %struct.yv12_buffer_config }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.KMEANS_DATA = type { double, i32, i32 }
%struct.TileDataEnc = type { %struct.TileInfo, [13 x [30 x i32]], [13 x [30 x i8]], %struct.FIRSTPASS_DATA, %struct.VP9RowMTSyncData, i32* }
%struct.FIRSTPASS_DATA = type { double, double, i64, i64, i64, i64, i32, i32, double, double, double, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32 }
%struct.VP9RowMTSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%struct.TOKENEXTRA = type { i8*, i16, i32 }
%struct.TOKENLIST = type { %struct.TOKENEXTRA*, %struct.TOKENEXTRA*, i32 }
%struct.RD_OPT = type { [30 x i32], [6 x i32], [8 x [13 x [30 x i32]]], [4 x [3 x i64]], [4 x [4 x i64]], i32, i32, double }
%struct.CODING_CONTEXT = type { [4 x i32], [2 x [32767 x i32]], [2 x [32767 x i32]], [3 x i8], i8*, [4 x i8], [2 x i8], %struct.frame_contexts }
%struct.RATE_CONTROL = type { i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, [5 x double], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], double, double, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], [5 x i32], i32, i32, [25 x i64], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, [5 x i32], double, i32, i32, i32, i32 }
%struct.vpx_codec_pkt_list = type { i32, i32, [1 x %struct.vpx_codec_cx_pkt] }
%struct.vpx_codec_cx_pkt = type { i32, %union.anon.3 }
%union.anon.3 = type { %struct.anon.4, [40 x i8] }
%struct.anon.4 = type { i8*, i64, i64, i64, i32, i32, [5 x i32], [5 x i32], [5 x i8] }
%struct.MBGRAPH_FRAME_STATS = type { %struct.MBGRAPH_MB_STATS* }
%struct.MBGRAPH_MB_STATS = type { [4 x %struct.anon.5] }
%struct.anon.5 = type { i32, %union.anon.6 }
%union.anon.6 = type { %union.int_mv }
%struct.SPEED_FEATURES = type { %struct.MV_SPEED_FEATURES, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i8, i8, i32, i32, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x %struct.MESH_PATTERN], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], [4 x i32], [13 x i32], i32, i32, i32, i32, i32, [13 x i32], i32, i32, i32, i8, i32, i32, i32, i8, i32, i32, i32, %struct.PARTITION_SEARCH_BREAKOUT_THR, %struct.anon.7, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MV_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, %struct.ADAPT_SUBPEL_FORCE_STOP, i32 }
%struct.ADAPT_SUBPEL_FORCE_STOP = type { i32, i32, i32 }
%struct.MESH_PATTERN = type { i32, i32 }
%struct.PARTITION_SEARCH_BREAKOUT_THR = type { i64, i32 }
%struct.anon.7 = type { i32, [3 x float], i32, i32, [4 x i32] }
%struct.CYCLIC_REFRESH = type { i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i64, i16, double, i32, double, [3 x i32], i32, double, i32, i32, i32 }
%struct.ActiveMap = type { i32, i32, i8* }
%struct.vp9_variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)* }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.TWO_PASS = type { i32, i32, %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRST_PASS_INFO, %struct.FIRSTPASS_STATS, i32, i64, double, double, double, double, %struct.FP_MB_FLOAT_STATS*, i32, i64, double, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], %struct.GF_GROUP }
%struct.FIRST_PASS_INFO = type { %struct.FIRSTPASS_STATS*, i32 }
%struct.FIRSTPASS_STATS = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i64 }
%struct.FP_MB_FLOAT_STATS = type { double, double, double }
%struct.GF_GROUP = type { i8, [252 x i32], [252 x i32], [252 x i8], [252 x i8], [252 x i8], [252 x i32], [252 x i32], i32, i32, [50 x i32], i32, i32, i32, i32, i32, i32 }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ALT_REF_AQ = type opaque
%struct.SVC = type { i32, i32, i32, i32, i32, i32, %struct.lookahead_entry, i32, [25 x %struct.yv12_buffer_config], %struct.yv12_buffer_config, i32, i32, [12 x %struct.LAYER_CONTEXT], i32, [12 x i32], [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, [2 x %struct.BUFFER_LONGTERM_REF], i32, i32, i32, i32, [5 x i8], [5 x i32], i8*, [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, [12 x i32], [12 x i32], [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, i32, i32, [5 x i32], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i32], [8 x i8], [8 x i8], [5 x i32], i8, i8, i8, [8 x i8], i32, [5 x i32], i32, [5 x i64], i64, i64, [5 x i64], i32, i32, i32, i32 }
%struct.LAYER_CONTEXT = type { %struct.RATE_CONTROL, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, %struct.TWO_PASS, %struct.vpx_fixed_buf, i32, i32, i32, i32, %struct.lookahead_entry*, i32, i32, i32, i64, i32, i8*, i8*, i8*, i32, i32, i32, i8, i32 }
%struct.BUFFER_LONGTERM_REF = type { i32, i32 }
%struct.diff = type { i32, i32, i32 }
%struct.search_site_config = type { [88 x %struct.mv], [88 x i64], i32, i32 }
%struct.vp9_denoiser = type { %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i32, i32 }
%struct.noise_estimate = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VPxWorker = type { %struct.VPxWorkerImpl*, i32, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.VPxWorkerImpl = type opaque
%struct.EncWorkerData = type { %struct.VP9_COMP*, %struct.ThreadData*, i32, i32, [64 x i32] }
%struct.VP9LfSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, %struct.LoopFilterWorkerData*, i32, i32, %union.pthread_mutex_t*, %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32 }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.VP9Common*, [3 x %struct.macroblockd_plane], i32, i32, i32 }
%struct.VP9BitstreamWorkerData = type opaque
%struct.Vp9LevelInfo = type { %struct.Vp9LevelStats, %struct.Vp9LevelSpec }
%struct.Vp9LevelStats = type { i8, i32, i64, i64, double, %struct.FrameWindowBuffer, i32 }
%struct.FrameWindowBuffer = type { [128 x %struct.FrameRecord], i8, i8 }
%struct.FrameRecord = type { i64, i32, i32 }
%struct.Vp9LevelSpec = type { i32, i64, i32, i32, double, double, double, i8, i32, i8 }
%struct.MultiThreadHandle = type { i32, i32, i32, [4 x i32], %struct.JobQueue*, i32, [64 x %struct.RowMTInfo], [80 x i32] }
%struct.JobQueue = type { i8*, %struct.JobNode }
%struct.JobNode = type { i32, i32, i32 }
%struct.RowMTInfo = type { %struct.JobQueueHandle, %union.pthread_mutex_t }
%struct.JobQueueHandle = type { i8*, i32 }
%struct.ARNRFilterData = type { [25 x %struct.yv12_buffer_config*], i32, i32, i32, %struct.scale_factors }
%struct.LevelConstraint = type { i8, i8, i32, double }
%struct.vpx_roi_map = type { i8, i8*, i32, i32, [8 x i32], [8 x i32], [8 x i32], [8 x i32], [4 x i32] }
%struct.EXT_RATECTRL = type { i32, i8*, %struct.vpx_rc_funcs, %struct.vpx_rc_config, %struct.vpx_rc_firstpass_stats }
%struct.vpx_rc_funcs = type { i32 (i8*, %struct.vpx_rc_config*, i8**)*, i32 (i8*, %struct.vpx_rc_firstpass_stats*)*, i32 (i8*, %struct.vpx_rc_encodeframe_info*, %struct.vpx_rc_encodeframe_decision*)*, i32 (i8*, %struct.vpx_rc_encodeframe_result*)*, i32 (i8*)*, i8* }
%struct.vpx_rc_encodeframe_info = type { i32, i32, i32, i32, [3 x i32], [3 x i32] }
%struct.vpx_rc_encodeframe_decision = type { i32 }
%struct.vpx_rc_encodeframe_result = type { i64, i64, i64 }
%struct.vpx_rc_config = type { i32, i32, i32, i32, i32, i32 }
%struct.vpx_rc_firstpass_stats = type { %struct.vpx_rc_frame_stats*, i32 }
%struct.vpx_rc_frame_stats = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double }

@.str = private unnamed_addr constant [59 x i8] c"Failed to allocate empty frame for multiple frame contexts\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"Failed to allocate lc->map\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"Failed to allocate lc->last_coded_q_map\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"Failed to allocate lc->consec_zero_mv\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_init_layer_context(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %3 = load i32, i32* %2, align 16
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 35
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 18
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 19
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 20
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 11
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 10
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 22
  %16 = bitcast i32* %15 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %16, align 8
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 33
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 42
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 56
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 57
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 58
  store i8 0, i8* %22, align 2
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 60
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 67
  %25 = getelementptr %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 53, i64 0
  %26 = bitcast i32* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  %27 = getelementptr %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %25, i8 -1, i64 16, i1 false)
  %28 = bitcast i8* %27 to i64*
  store i64 0, i64* %28, align 1
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 41
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %54

33:                                               ; preds = %1
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 26
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %31 to i64
  br label %37

37:                                               ; preds = %33, %37
  %38 = phi i64 [ 0, %33 ], [ %52, %37 ]
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 35, i64 %38
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36, i64 %38
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 14, i64 %38
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 15, i64 %38
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 16, i64 %38
  store i32 1, i32* %43, align 4
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 17, i64 %38
  store i32 2, i32* %44, align 4
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 26, i64 %38
  store i8 3, i8* %45, align 1
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 27, i64 %38
  store i32 8, i32* %46, align 4
  %47 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 37, i64 %38
  store i32 %35, i32* %47, align 4
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 52, i64 %38
  store i32 -1, i32* %48, align 4
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 38, i64 %38
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 55, i64 %38
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 39, i64 %38
  store i32 0, i32* %51, align 4
  %52 = add nuw nsw i64 %38, 1
  %53 = icmp slt i64 %52, %36
  br i1 %53, label %37, label %54

54:                                               ; preds = %37, %1
  %55 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 40
  store i32 2147483647, i32* %55, align 4
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 0, i32 0
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 6, i32 0, i32 7, i32 0>, <4 x i32>* %57, align 8
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 49
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %85

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %65, label %85

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 6, i32 0
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 9
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 10
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 11
  %72 = load i32, i32* %71, align 16
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 87
  %74 = load i32, i32* %73, align 16
  %75 = tail call i32 @vpx_realloc_frame_buffer(%struct.yv12_buffer_config* %66, i32 32, i32 16, i32 %68, i32 %70, i32 %72, i32 160, i32 %74, %struct.vpx_codec_frame_buffer* null, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)* null, i8* null) #6
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %65
  %78 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %29, i64 0, i32 0
  tail call void (%struct.vpx_internal_error_info*, i32, i8*, ...) @vpx_internal_error(%struct.vpx_internal_error_info* %78, i32 2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0)) #6
  br label %79

79:                                               ; preds = %65, %77
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 6, i32 0, i32 17
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 6, i32 0, i32 18
  %83 = load i64, i64* %82, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %81, i8 -128, i64 %83, i1 false)
  %84 = load i32, i32* %30, align 4
  br label %85

85:                                               ; preds = %79, %61, %54
  %86 = phi i32 [ %84, %79 ], [ %31, %61 ], [ %31, %54 ]
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %216

88:                                               ; preds = %85
  %89 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 42
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 28
  %91 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 29
  %92 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %93 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 23
  %94 = mul nsw i32 %5, %3
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %29, i64 0, i32 0
  %97 = load i32, i32* %89, align 8
  br label %98

98:                                               ; preds = %88, %209
  %99 = phi i32 [ %86, %88 ], [ %210, %209 ]
  %100 = phi i32 [ %97, %88 ], [ %211, %209 ]
  %101 = phi i64 [ 0, %88 ], [ %213, %209 ]
  %102 = phi i32 [ %7, %88 ], [ %212, %209 ]
  %103 = icmp sgt i32 %100, 0
  br i1 %103, label %104, label %209

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 45, i64 %101
  %106 = trunc i64 %101 to i32
  br label %107

107:                                              ; preds = %104, %203
  %108 = phi i32 [ %100, %104 ], [ %205, %203 ]
  %109 = phi i32 [ %102, %104 ], [ %166, %203 ]
  %110 = phi i32 [ 0, %104 ], [ %204, %203 ]
  %111 = mul nsw i32 %108, %106
  %112 = add nsw i32 %111, %110
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 13
  store i32 0, i32* %114, align 8
  %115 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 21
  store i64 0, i64* %115, align 8
  %116 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 15
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 16
  store i32 2, i32* %117, align 4
  %118 = load i32, i32* %90, align 8
  %119 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 28
  store i32 %118, i32* %119, align 4
  %120 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 45
  store i64 0, i64* %120, align 8
  %121 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 47
  store i64 0, i64* %121, align 8
  %122 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 29
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 32
  %124 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 30
  store i32 0, i32* %124, align 4
  %125 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 39
  store i32 0, i32* %125, align 4
  %126 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 38
  store i32 0, i32* %126, align 8
  %127 = bitcast double* %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 16, i1 false)
  %128 = load i32, i32* %90, align 8
  %129 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 48
  store i32 %128, i32* %129, align 8
  %130 = load i32, i32* %91, align 4
  %131 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 49
  store i32 %130, i32* %131, align 4
  %132 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 10, i64 0
  %133 = bitcast double* %132 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %133, align 8
  %134 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 10, i64 2
  store double 1.000000e+00, double* %134, align 8
  %135 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 10, i64 3
  %136 = bitcast double* %135 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %136, align 8
  %137 = load i32, i32* %92, align 4
  %138 = icmp eq i32 %137, 1
  %139 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %113
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 1
  store i32 %140, i32* %141, align 8
  br i1 %138, label %142, label %147

142:                                              ; preds = %107
  %143 = load i32, i32* %90, align 8
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 4, i64 1
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 31, i64 1
  store i32 %143, i32* %145, align 4
  %146 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 31, i64 0
  store i32 %143, i32* %146, align 8
  br label %165

147:                                              ; preds = %107
  %148 = load i32, i32* %91, align 4
  %149 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 4, i64 0
  store i32 %148, i32* %149, align 8
  %150 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 4, i64 1
  store i32 %148, i32* %150, align 4
  %151 = load i32, i32* %90, align 8
  %152 = load i32, i32* %91, align 4
  %153 = add nsw i32 %152, %151
  %154 = sdiv i32 %153, 2
  %155 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 31, i64 0
  store i32 %154, i32* %155, align 8
  %156 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 31, i64 1
  store i32 %154, i32* %156, align 4
  %157 = load i32, i32* %105, align 4
  %158 = icmp eq i32 %157, 0
  %159 = select i1 %158, i32 -1, i32 %109
  %160 = xor i1 %158, true
  %161 = zext i1 %160 to i32
  %162 = add nsw i32 %109, %161
  %163 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 18
  store i32 %159, i32* %163, align 8
  %164 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 19
  store i32 -1, i32* %164, align 4
  br label %165

165:                                              ; preds = %147, %142
  %166 = phi i32 [ %109, %142 ], [ %162, %147 ]
  %167 = load i64, i64* %93, align 8
  %168 = sext i32 %140 to i64
  %169 = mul nsw i64 %167, %168
  %170 = sdiv i64 %169, 1000
  %171 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 34
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 0, i32 35
  store i64 %170, i64* %172, align 8
  %173 = load i32, i32* %30, align 4
  %174 = icmp sgt i32 %173, 1
  %175 = icmp eq i32 %110, 0
  %176 = and i1 %175, %174
  br i1 %176, label %177, label %203

177:                                              ; preds = %165
  %178 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 22
  store i32 0, i32* %178, align 8
  %179 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 26
  store i32 0, i32* %179, align 8
  %180 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 27
  store i32 0, i32* %180, align 4
  %181 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 28
  store i32 0, i32* %181, align 8
  %182 = tail call i8* @vpx_malloc(i64 %95) #6
  %183 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 23
  store i8* %182, i8** %183, align 8
  %184 = icmp eq i8* %182, null
  br i1 %184, label %185, label %187

185:                                              ; preds = %177
  tail call void (%struct.vpx_internal_error_info*, i32, i8*, ...) @vpx_internal_error(%struct.vpx_internal_error_info* %96, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #6
  %186 = load i8*, i8** %183, align 8
  br label %187

187:                                              ; preds = %177, %185
  %188 = phi i8* [ %182, %177 ], [ %186, %185 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %188, i8 0, i64 %95, i1 false)
  %189 = tail call i8* @vpx_malloc(i64 %95) #6
  %190 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 24
  store i8* %189, i8** %190, align 8
  %191 = icmp eq i8* %189, null
  br i1 %191, label %192, label %194

192:                                              ; preds = %187
  tail call void (%struct.vpx_internal_error_info*, i32, i8*, ...) @vpx_internal_error(%struct.vpx_internal_error_info* %96, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0)) #6
  %193 = load i8*, i8** %190, align 8
  br label %194

194:                                              ; preds = %187, %192
  %195 = phi i8* [ %189, %187 ], [ %193, %192 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %195, i8 -1, i64 %95, i1 false)
  %196 = tail call i8* @vpx_malloc(i64 %95) #6
  %197 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %113, i32 25
  store i8* %196, i8** %197, align 8
  %198 = icmp eq i8* %196, null
  br i1 %198, label %199, label %201

199:                                              ; preds = %194
  tail call void (%struct.vpx_internal_error_info*, i32, i8*, ...) @vpx_internal_error(%struct.vpx_internal_error_info* %96, i32 2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #6
  %200 = load i8*, i8** %197, align 8
  br label %201

201:                                              ; preds = %194, %199
  %202 = phi i8* [ %196, %194 ], [ %200, %199 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %202, i8 0, i64 %95, i1 false)
  br label %203

203:                                              ; preds = %201, %165
  %204 = add nuw nsw i32 %110, 1
  %205 = load i32, i32* %89, align 8
  %206 = icmp slt i32 %204, %205
  br i1 %206, label %107, label %207

207:                                              ; preds = %203
  %208 = load i32, i32* %30, align 4
  br label %209

209:                                              ; preds = %207, %98
  %210 = phi i32 [ %99, %98 ], [ %208, %207 ]
  %211 = phi i32 [ %100, %98 ], [ %205, %207 ]
  %212 = phi i32 [ %102, %98 ], [ %166, %207 ]
  %213 = add nuw nsw i64 %101, 1
  %214 = sext i32 %210 to i64
  %215 = icmp slt i64 %213, %214
  br i1 %215, label %98, label %216

216:                                              ; preds = %209, %85
  %217 = phi i32 [ %7, %85 ], [ %212, %209 ]
  %218 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %219 = load i32, i32* %218, align 4
  %220 = icmp sgt i32 %219, 1
  br i1 %220, label %221, label %227

221:                                              ; preds = %216
  %222 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %223 = load i32, i32* %222, align 4
  %224 = icmp ne i32 %223, 1
  %225 = icmp slt i32 %217, 8
  %226 = and i1 %225, %224
  br i1 %226, label %229, label %231

227:                                              ; preds = %216
  %228 = icmp slt i32 %217, 8
  br i1 %228, label %229, label %231

229:                                              ; preds = %221, %227
  %230 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 0, i32 19
  store i32 %217, i32* %230, align 4
  br label %231

231:                                              ; preds = %221, %229, %227
  ret void
}

declare i32 @vpx_realloc_frame_buffer(%struct.yv12_buffer_config*, i32, i32, i32, i32, i32, i32, i32, %struct.vpx_codec_frame_buffer*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i8*) local_unnamed_addr #1

declare void @vpx_internal_error(%struct.vpx_internal_error_info*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @vpx_malloc(i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_update_layer_context_change_config(%struct.VP9_COMP*, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 68
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 13
  store i32 %4, i32* %5, align 8
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %115, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 41
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %199

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 42
  %13 = sitofp i32 %1 to float
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 50
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 52
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %21 = load i32, i32* %12, align 8
  br label %22

22:                                               ; preds = %11, %110
  %23 = phi i32 [ %9, %11 ], [ %111, %110 ]
  %24 = phi i32 [ %21, %11 ], [ %112, %110 ]
  %25 = phi i32 [ 0, %11 ], [ %113, %110 ]
  %26 = icmp sgt i32 %24, 0
  %27 = mul nsw i32 %24, %25
  br i1 %26, label %28, label %40

28:                                               ; preds = %22, %28
  %29 = phi i32 [ %39, %28 ], [ %27, %22 ]
  %30 = phi i32 [ %36, %28 ], [ 0, %22 ]
  %31 = add nsw i32 %29, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %32, i32 1
  store i32 %34, i32* %35, align 8
  %36 = add nuw nsw i32 %30, 1
  %37 = load i32, i32* %12, align 8
  %38 = icmp slt i32 %36, %37
  %39 = mul nsw i32 %37, %25
  br i1 %38, label %28, label %40

40:                                               ; preds = %28, %22
  %41 = phi i32 [ %24, %22 ], [ %37, %28 ]
  %42 = phi i32 [ %27, %22 ], [ %39, %28 ]
  %43 = icmp slt i32 %41, 1
  %44 = add nsw i32 %41, -1
  %45 = select i1 %43, i32 0, i32 %44
  %46 = add nsw i32 %45, %42
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %47, i32 1
  store i32 %49, i32* %50, align 8
  %51 = load i32, i32* %12, align 8
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %110

53:                                               ; preds = %40, %53
  %54 = phi i64 [ %104, %53 ], [ 0, %40 ]
  %55 = phi i32 [ %105, %53 ], [ %51, %40 ]
  %56 = mul nsw i32 %55, %25
  %57 = trunc i64 %54 to i32
  %58 = add nsw i32 %56, %57
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 2
  store i32 %49, i32* %60, align 4
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = sitofp i32 %62 to float
  %64 = fdiv float %63, %13
  %65 = load i64, i64* %14, align 8
  %66 = sitofp i64 %65 to float
  %67 = fmul float %64, %66
  %68 = fptosi float %67 to i64
  %69 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 50
  store i64 %68, i64* %69, align 8
  %70 = load i64, i64* %15, align 8
  %71 = sitofp i64 %70 to float
  %72 = fmul float %64, %71
  %73 = fptosi float %72 to i64
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 51
  store i64 %73, i64* %74, align 8
  %75 = load i64, i64* %16, align 8
  %76 = sitofp i64 %75 to float
  %77 = fmul float %64, %76
  %78 = fptosi float %77 to i64
  %79 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 52
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 35
  %81 = load i64, i64* %80, align 8
  %82 = icmp slt i64 %81, %78
  %83 = select i1 %82, i64 %81, i64 %78
  store i64 %83, i64* %80, align 8
  %84 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 34
  %85 = load i64, i64* %84, align 8
  %86 = icmp slt i64 %85, %78
  %87 = select i1 %86, i64 %85, i64 %78
  store i64 %87, i64* %84, align 8
  %88 = load double, double* %17, align 16
  %89 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 46, i64 %54
  %90 = load i32, i32* %89, align 4
  %91 = sitofp i32 %90 to double
  %92 = fdiv double %88, %91
  %93 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 3
  store double %92, double* %93, align 8
  %94 = sitofp i32 %62 to double
  %95 = fdiv double %94, %92
  %96 = fptosi double %95 to i32
  %97 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 25
  store i32 %96, i32* %97, align 8
  %98 = load i32, i32* %18, align 8
  %99 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 27
  store i32 %98, i32* %99, align 8
  %100 = load i32, i32* %19, align 8
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 48
  store i32 %100, i32* %101, align 8
  %102 = load i32, i32* %20, align 4
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %59, i32 0, i32 49
  store i32 %102, i32* %103, align 4
  %104 = add nuw nsw i64 %54, 1
  %105 = load i32, i32* %12, align 8
  %106 = sext i32 %105 to i64
  %107 = icmp slt i64 %104, %106
  br i1 %107, label %53, label %108

108:                                              ; preds = %53
  %109 = load i32, i32* %8, align 4
  br label %110

110:                                              ; preds = %108, %40
  %111 = phi i32 [ %109, %108 ], [ %23, %40 ]
  %112 = phi i32 [ %105, %108 ], [ %51, %40 ]
  %113 = add nuw nsw i32 %25, 1
  %114 = icmp slt i32 %113, %111
  br i1 %114, label %22, label %199

115:                                              ; preds = %2
  %116 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 1
  br i1 %118, label %119, label %123

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %127, label %123

123:                                              ; preds = %115, %119
  %124 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %125 = load i32, i32* %124, align 8
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %127, label %199

127:                                              ; preds = %119, %123
  %128 = phi i32 [ %125, %123 ], [ %117, %119 ]
  %129 = sitofp i32 %1 to float
  %130 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 50
  %131 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 51
  %132 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 52
  %133 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %134 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %135 = bitcast double* %134 to i64*
  %136 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %137 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %138 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 49
  %139 = zext i32 %128 to i64
  %140 = load i64, i64* %130, align 8
  %141 = load i64, i64* %131, align 8
  %142 = load i64, i64* %132, align 8
  %143 = sitofp i64 %140 to float
  %144 = sitofp i64 %141 to float
  %145 = sitofp i64 %142 to float
  br label %146

146:                                              ; preds = %185, %127
  %147 = phi i64 [ 0, %127 ], [ %197, %185 ]
  %148 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 1
  store i32 %149, i32* %150, align 8
  %151 = sitofp i32 %149 to float
  %152 = fdiv float %151, %129
  %153 = fmul float %152, %143
  %154 = fptosi float %153 to i64
  %155 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 50
  store i64 %154, i64* %155, align 8
  %156 = fmul float %152, %144
  %157 = fptosi float %156 to i64
  %158 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 51
  store i64 %157, i64* %158, align 8
  %159 = fmul float %152, %145
  %160 = fptosi float %159 to i64
  %161 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 52
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 35
  %163 = load i64, i64* %162, align 8
  %164 = icmp slt i64 %163, %160
  %165 = select i1 %164, i64 %163, i64 %160
  store i64 %165, i64* %162, align 8
  %166 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 34
  %167 = load i64, i64* %166, align 8
  %168 = icmp slt i64 %167, %160
  %169 = select i1 %168, i64 %167, i64 %160
  store i64 %169, i64* %166, align 8
  br i1 %118, label %170, label %180

170:                                              ; preds = %146
  %171 = load i32, i32* %133, align 4
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %180

173:                                              ; preds = %170
  %174 = load double, double* %134, align 16
  %175 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 46, i64 %147
  %176 = load i32, i32* %175, align 4
  %177 = sitofp i32 %176 to double
  %178 = fdiv double %174, %177
  %179 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 3
  store double %178, double* %179, align 8
  br label %185

180:                                              ; preds = %170, %146
  %181 = load i64, i64* %135, align 16
  %182 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 3
  %183 = bitcast double* %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = bitcast i64 %181 to double
  br label %185

185:                                              ; preds = %180, %173
  %186 = phi double [ %184, %180 ], [ %178, %173 ]
  %187 = sitofp i32 %149 to double
  %188 = fdiv double %187, %186
  %189 = fptosi double %188 to i32
  %190 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 25
  store i32 %189, i32* %190, align 8
  %191 = load i32, i32* %136, align 8
  %192 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 27
  store i32 %191, i32* %192, align 8
  %193 = load i32, i32* %137, align 8
  %194 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 48
  store i32 %193, i32* %194, align 8
  %195 = load i32, i32* %138, align 4
  %196 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %147, i32 0, i32 49
  store i32 %195, i32* %196, align 4
  %197 = add nuw nsw i64 %147, 1
  %198 = icmp eq i64 %197, %139
  br i1 %198, label %199, label %146

199:                                              ; preds = %110, %185, %7, %123
  %200 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 41
  %201 = load i32, i32* %200, align 4
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %203, label %310

203:                                              ; preds = %199
  %204 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 42
  %205 = load i32, i32* %204, align 8
  %206 = add nsw i32 %205, -1
  %207 = sext i32 %205 to i64
  %208 = sext i32 %206 to i64
  %209 = sext i32 %201 to i64
  %210 = icmp ugt i32 %201, 7
  %211 = icmp eq i32 %205, 1
  %212 = and i1 %210, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %203
  %214 = and i64 %209, -8
  %215 = add nsw i64 %214, -8
  %216 = lshr exact i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %218 = and i64 %217, 1
  %219 = icmp eq i64 %215, 0
  br i1 %219, label %259, label %220

220:                                              ; preds = %213
  %221 = sub nuw nsw i64 %217, %218
  br label %222

222:                                              ; preds = %222, %220
  %223 = phi i64 [ 0, %220 ], [ %256, %222 ]
  %224 = phi <4 x i32> [ zeroinitializer, %220 ], [ %254, %222 ]
  %225 = phi <4 x i32> [ zeroinitializer, %220 ], [ %255, %222 ]
  %226 = phi i64 [ %221, %220 ], [ %257, %222 ]
  %227 = mul nsw i64 %223, %207
  %228 = add nsw i64 %227, %208
  %229 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %228
  %230 = bitcast i32* %229 to <4 x i32>*
  %231 = load <4 x i32>, <4 x i32>* %230, align 4
  %232 = getelementptr inbounds i32, i32* %229, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  %234 = load <4 x i32>, <4 x i32>* %233, align 4
  %235 = icmp sgt <4 x i32> %231, zeroinitializer
  %236 = icmp sgt <4 x i32> %234, zeroinitializer
  %237 = zext <4 x i1> %235 to <4 x i32>
  %238 = zext <4 x i1> %236 to <4 x i32>
  %239 = add nuw nsw <4 x i32> %224, %237
  %240 = add nuw nsw <4 x i32> %225, %238
  %241 = or i64 %223, 8
  %242 = mul nsw i64 %241, %207
  %243 = add nsw i64 %242, %208
  %244 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %243
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4
  %247 = getelementptr inbounds i32, i32* %244, i64 4
  %248 = bitcast i32* %247 to <4 x i32>*
  %249 = load <4 x i32>, <4 x i32>* %248, align 4
  %250 = icmp sgt <4 x i32> %246, zeroinitializer
  %251 = icmp sgt <4 x i32> %249, zeroinitializer
  %252 = zext <4 x i1> %250 to <4 x i32>
  %253 = zext <4 x i1> %251 to <4 x i32>
  %254 = add nuw nsw <4 x i32> %239, %252
  %255 = add nuw nsw <4 x i32> %240, %253
  %256 = add i64 %223, 16
  %257 = add i64 %226, -2
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %222, !llvm.loop !2

259:                                              ; preds = %222, %213
  %260 = phi <4 x i32> [ undef, %213 ], [ %254, %222 ]
  %261 = phi <4 x i32> [ undef, %213 ], [ %255, %222 ]
  %262 = phi i64 [ 0, %213 ], [ %256, %222 ]
  %263 = phi <4 x i32> [ zeroinitializer, %213 ], [ %254, %222 ]
  %264 = phi <4 x i32> [ zeroinitializer, %213 ], [ %255, %222 ]
  %265 = icmp eq i64 %218, 0
  br i1 %265, label %281, label %266

266:                                              ; preds = %259
  %267 = mul nsw i64 %262, %207
  %268 = add nsw i64 %267, %208
  %269 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %268
  %270 = getelementptr inbounds i32, i32* %269, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  %272 = load <4 x i32>, <4 x i32>* %271, align 4
  %273 = icmp sgt <4 x i32> %272, zeroinitializer
  %274 = zext <4 x i1> %273 to <4 x i32>
  %275 = add nuw nsw <4 x i32> %264, %274
  %276 = bitcast i32* %269 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4
  %278 = icmp sgt <4 x i32> %277, zeroinitializer
  %279 = zext <4 x i1> %278 to <4 x i32>
  %280 = add nuw nsw <4 x i32> %263, %279
  br label %281

281:                                              ; preds = %259, %266
  %282 = phi <4 x i32> [ %260, %259 ], [ %280, %266 ]
  %283 = phi <4 x i32> [ %261, %259 ], [ %275, %266 ]
  %284 = add nuw <4 x i32> %283, %282
  %285 = shufflevector <4 x i32> %284, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %286 = add <4 x i32> %284, %285
  %287 = shufflevector <4 x i32> %286, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %288 = add <4 x i32> %286, %287
  %289 = extractelement <4 x i32> %288, i32 0
  %290 = icmp eq i64 %214, %209
  br i1 %290, label %306, label %291

291:                                              ; preds = %203, %281
  %292 = phi i64 [ 0, %203 ], [ %214, %281 ]
  %293 = phi i32 [ 0, %203 ], [ %289, %281 ]
  br label %294

294:                                              ; preds = %291, %294
  %295 = phi i64 [ %304, %294 ], [ %292, %291 ]
  %296 = phi i32 [ %303, %294 ], [ %293, %291 ]
  %297 = mul nsw i64 %295, %207
  %298 = add nsw i64 %297, %208
  %299 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = icmp sgt i32 %300, 0
  %302 = zext i1 %301 to i32
  %303 = add nuw nsw i32 %296, %302
  %304 = add nuw nsw i64 %295, 1
  %305 = icmp slt i64 %304, %209
  br i1 %305, label %294, label %306, !llvm.loop !4

306:                                              ; preds = %294, %281
  %307 = phi i32 [ %289, %281 ], [ %303, %294 ]
  %308 = icmp eq i32 %307, 1
  %309 = zext i1 %308 to i32
  br label %310

310:                                              ; preds = %306, %199
  %311 = phi i32 [ 0, %199 ], [ %309, %306 ]
  %312 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 69
  store i32 %311, i32* %312, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_update_temporal_layer_framerate(%struct.VP9_COMP* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %11 = load i32, i32* %10, align 16
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, %11
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %14, %16
  br label %37

18:                                               ; preds = %5, %1
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  br label %30

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i32* [ %27, %26 ], [ %29, %28 ]
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %9, %30
  %38 = phi i32 [ %16, %9 ], [ %36, %30 ]
  %39 = phi i32 [ %13, %9 ], [ %20, %30 ]
  %40 = phi i32 [ %11, %9 ], [ %34, %30 ]
  %41 = phi i32 [ %17, %9 ], [ %32, %30 ]
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 68
  %44 = load double, double* %43, align 16
  %45 = sext i32 %38 to i64
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 46, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to double
  %49 = fdiv double %44, %48
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %42, i32 3
  store double %49, double* %50, align 8
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %42, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = sitofp i32 %52 to double
  %54 = fdiv double %53, %49
  %55 = fptosi double %54 to i32
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %42, i32 0, i32 25
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 27
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %42, i32 0, i32 27
  store i32 %58, i32* %59, align 8
  %60 = icmp eq i32 %38, 0
  br i1 %60, label %79, label %61

61:                                               ; preds = %37
  %62 = mul nsw i32 %39, %40
  %63 = load double, double* %43, align 16
  %64 = add i32 %38, -1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 46, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sitofp i32 %67 to double
  %69 = fdiv double %63, %68
  %70 = add i32 %64, %62
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 43, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sub nsw i32 %52, %73
  %75 = sitofp i32 %74 to double
  %76 = fsub double %49, %69
  %77 = fdiv double %75, %76
  %78 = fptosi double %77 to i32
  br label %79

79:                                               ; preds = %37, %61
  %80 = phi i32 [ %78, %61 ], [ %55, %37 ]
  %81 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %42, i32 4
  store i32 %80, i32* %81, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_update_spatial_layer_framerate(%struct.VP9_COMP*, double) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %12 = load i32, i32* %11, align 16
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = mul nsw i32 %14, %12
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %15, %17
  br label %34

19:                                               ; preds = %6, %2
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  br label %31

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  br label %31

31:                                               ; preds = %29, %27
  %32 = phi i32* [ %28, %27 ], [ %30, %29 ]
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %10, %31
  %35 = phi i32 [ %18, %10 ], [ %33, %31 ]
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 0
  %38 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 3
  store double %1, double* %38, align 8
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = sitofp i32 %40 to double
  %42 = fdiv double %41, %1
  %43 = fptosi double %42 to i32
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 0, i32 25
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 38
  %46 = load i32, i32* %45, align 8
  %47 = mul nsw i32 %46, %43
  %48 = sdiv i32 %47, 100
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 0, i32 26
  store i32 %48, i32* %49, align 4
  %50 = sext i32 %43 to i64
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 39
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = mul nsw i64 %53, %50
  %55 = sdiv i64 %54, 100
  %56 = trunc i64 %55 to i32
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 0, i32 27
  store i32 %56, i32* %57, align 8
  tail call void @vp9_rc_set_gf_interval_range(%struct.VP9_COMP* %0, %struct.RATE_CONTROL* %37) #6
  ret void
}

declare void @vp9_rc_set_gf_interval_range(%struct.VP9_COMP*, %struct.RATE_CONTROL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_restore_layer_context(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %11 = load i32, i32* %10, align 16
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, %11
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %14, %16
  br label %33

18:                                               ; preds = %5, %1
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  br label %30

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i32* [ %27, %26 ], [ %29, %28 ]
  %32 = load i32, i32* %31, align 4
  br label %33

33:                                               ; preds = %9, %30
  %34 = phi i32 [ %13, %9 ], [ %20, %30 ]
  %35 = phi i32 [ %17, %9 ], [ %32, %30 ]
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36
  %38 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 18
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 83
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %struct.RATE_CONTROL* %38 to i8*
  %46 = bitcast %struct.LAYER_CONTEXT* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 712, i1 false)
  %47 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 11
  %49 = bitcast %struct.TWO_PASS* %47 to i8*
  %50 = bitcast %struct.TWO_PASS* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 5856, i1 false)
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 8
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 17
  %56 = bitcast %struct.lookahead_entry** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 11
  %59 = bitcast %struct.lookahead_entry** %58 to i64*
  store i64 %57, i64* %59, align 16
  br i1 %4, label %71, label %60

60:                                               ; preds = %33
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 29
  %66 = load i8, i8* %65, align 4
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = zext i8 %66 to i32
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 11
  store i32 %69, i32* %70, align 8
  br label %71

71:                                               ; preds = %60, %33, %64, %68
  %72 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 30
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 161
  store i32 %73, i32* %74, align 8
  %75 = icmp sgt i32 %34, 1
  br i1 %75, label %80, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp sgt i32 %78, 1
  br i1 %79, label %80, label %81

80:                                               ; preds = %76, %71
  store i32 %40, i32* %39, align 8
  store i32 %42, i32* %41, align 4
  br label %81

81:                                               ; preds = %80, %76
  store i32 %44, i32* %43, align 4
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 3
  br i1 %84, label %85, label %126

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = icmp sgt i32 %87, 1
  br i1 %88, label %89, label %126

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %126

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 84
  %95 = load %struct.CYCLIC_REFRESH*, %struct.CYCLIC_REFRESH** %94, align 8
  %96 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %95, i64 0, i32 8
  %97 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 23
  %98 = bitcast i8** %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i8** %97 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %98, align 8
  store i64 %99, i64* %100, align 8
  %102 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %95, i64 0, i32 9
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 24
  %104 = bitcast i8** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast i8** %103 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %104, align 8
  store i64 %105, i64* %106, align 8
  %108 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 129
  %109 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 25
  %110 = bitcast i8** %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8** %109 to i64*
  %113 = load i64, i64* %112, align 8
  store i64 %113, i64* %110, align 8
  store i64 %111, i64* %112, align 8
  %114 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 22
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %95, i64 0, i32 2
  store i32 %115, i32* %116, align 8
  %117 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 26
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %95, i64 0, i32 5
  store i32 %118, i32* %119, align 4
  %120 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 27
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %95, i64 0, i32 6
  store i32 %121, i32* %122, align 8
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 28
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %95, i64 0, i32 20
  store i32 %124, i32* %125, align 4
  br label %126

126:                                              ; preds = %93, %89, %85, %81
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_save_layer_context(%struct.VP9_COMP* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %11 = load i32, i32* %10, align 16
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, %11
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %14, %16
  br label %33

18:                                               ; preds = %5, %1
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  br label %30

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i32* [ %27, %26 ], [ %29, %28 ]
  %32 = load i32, i32* %31, align 4
  br label %33

33:                                               ; preds = %9, %30
  %34 = phi i32 [ %17, %9 ], [ %32, %30 ]
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67
  %38 = bitcast %struct.LAYER_CONTEXT* %36 to i8*
  %39 = bitcast %struct.RATE_CONTROL* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 712, i1 false)
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 11
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94
  %42 = bitcast %struct.TWO_PASS* %40 to i8*
  %43 = bitcast %struct.TWO_PASS* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 5856, i1 false)
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 8
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 1
  store i32 %46, i32* %47, align 8
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 11
  %49 = bitcast %struct.lookahead_entry** %48 to i64*
  %50 = load i64, i64* %49, align 16
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 17
  %52 = bitcast %struct.lookahead_entry** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 3
  br i1 %55, label %56, label %97

56:                                               ; preds = %33
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, 1
  br i1 %59, label %60, label %97

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %97

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 84
  %66 = load %struct.CYCLIC_REFRESH*, %struct.CYCLIC_REFRESH** %65, align 8
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 23
  %68 = bitcast i8** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 24
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 25
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %66, i64 0, i32 8
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %68, align 8
  store i64 %69, i64* %77, align 8
  %79 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %66, i64 0, i32 9
  %80 = bitcast i8** %79 to i64*
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %71, align 8
  store i64 %72, i64* %80, align 8
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 129
  %83 = bitcast i8** %82 to i64*
  %84 = load i64, i64* %83, align 16
  store i64 %84, i64* %74, align 8
  store i64 %75, i64* %83, align 16
  %85 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %66, i64 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 22
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %66, i64 0, i32 5
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 26
  store i32 %89, i32* %90, align 8
  %91 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %66, i64 0, i32 6
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 27
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %struct.CYCLIC_REFRESH, %struct.CYCLIC_REFRESH* %66, i64 0, i32 20
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %35, i32 28
  store i32 %95, i32* %96, align 8
  br label %97

97:                                               ; preds = %64, %60, %56, %33
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_inc_frame_in_layer(%struct.VP9_COMP* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %3 = load i32, i32* %2, align 16
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = mul nsw i32 %5, %3
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %7, i32 13
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %7, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = load i32, i32* %2, align 16
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -1
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %1
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 22
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %20, align 8
  br label %23

23:                                               ; preds = %19, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @get_layer_resolution(i32, i32, i32, i32, i32*, i32*) local_unnamed_addr #4 {
  %7 = icmp eq i32* %4, null
  %8 = icmp eq i32* %5, null
  %9 = or i1 %7, %8
  %10 = icmp eq i32 %3, 0
  %11 = or i1 %10, %9
  br i1 %11, label %21, label %12

12:                                               ; preds = %6
  %13 = mul nsw i32 %2, %0
  %14 = sdiv i32 %13, %3
  %15 = mul nsw i32 %2, %1
  %16 = sdiv i32 %15, %3
  %17 = srem i32 %14, 2
  %18 = add nsw i32 %17, %14
  %19 = srem i32 %16, 2
  %20 = add nsw i32 %19, %16
  store i32 %18, i32* %4, align 4
  store i32 %20, i32* %5, align 4
  br label %21

21:                                               ; preds = %6, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_copy_flags_ref_update_idx(%struct.VP9_COMP*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 15, i64 %6
  store i32 %5, i32* %7, align 4
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %9 = load i32, i32* %8, align 16
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 16, i64 %6
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 17, i64 %6
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 13
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %44, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 45, i64 %6
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %22 = load i32, i32* %18, align 4
  %23 = and i32 %22, -2
  store i32 %23, i32* %18, align 4
  %24 = icmp eq i32 %5, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = load i32, i32* %19, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %25, %17
  %29 = icmp eq i32 %9, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %28
  %31 = load i32, i32* %20, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %30, %28
  %34 = icmp eq i32 %12, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %33
  %36 = load i32, i32* %21, align 16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %25, %30, %35
  %39 = or i32 %22, 1
  store i32 %39, i32* %18, align 4
  br label %40

40:                                               ; preds = %35, %33, %38
  %41 = phi i32 [ %23, %35 ], [ %23, %33 ], [ %39, %38 ]
  %42 = and i32 %41, -3
  store i32 %42, i32* %18, align 4
  %43 = icmp eq i32 %5, 1
  br i1 %43, label %70, label %73

44:                                               ; preds = %192, %194, %197, %1
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  %46 = load i32, i32* %45, align 8
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 49, i64 %6
  store i8 %47, i8* %48, align 1
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %50 = load i32, i32* %49, align 4
  %51 = trunc i32 %50 to i8
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 50, i64 %6
  store i8 %51, i8* %52, align 1
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %54 = load i32, i32* %53, align 16
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 51, i64 %6
  store i8 %55, i8* %56, align 1
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %58 = load i32, i32* %57, align 16
  %59 = trunc i32 %58 to i8
  %60 = and i8 %59, 1
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 46, i64 %6
  store i8 %60, i8* %61, align 1
  %62 = load i32, i32* %57, align 16
  %63 = trunc i32 %62 to i8
  %64 = and i8 %63, 2
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 47, i64 %6
  store i8 %64, i8* %65, align 1
  %66 = load i32, i32* %57, align 16
  %67 = trunc i32 %66 to i8
  %68 = and i8 %67, 4
  %69 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 48, i64 %6
  store i8 %68, i8* %69, align 1
  ret void

70:                                               ; preds = %40
  %71 = load i32, i32* %19, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %70, %40
  %74 = icmp eq i32 %9, 1
  br i1 %74, label %75, label %78

75:                                               ; preds = %73
  %76 = load i32, i32* %20, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %83

78:                                               ; preds = %75, %73
  %79 = icmp eq i32 %12, 1
  br i1 %79, label %80, label %85

80:                                               ; preds = %78
  %81 = load i32, i32* %21, align 16
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %80, %75, %70
  %84 = or i32 %41, 2
  store i32 %84, i32* %18, align 4
  br label %85

85:                                               ; preds = %83, %80, %78
  %86 = phi i32 [ %42, %80 ], [ %42, %78 ], [ %84, %83 ]
  %87 = and i32 %86, -5
  store i32 %87, i32* %18, align 4
  %88 = icmp eq i32 %5, 2
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = load i32, i32* %19, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %89, %85
  %93 = icmp eq i32 %9, 2
  br i1 %93, label %94, label %97

94:                                               ; preds = %92
  %95 = load i32, i32* %20, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %102

97:                                               ; preds = %94, %92
  %98 = icmp eq i32 %12, 2
  br i1 %98, label %99, label %104

99:                                               ; preds = %97
  %100 = load i32, i32* %21, align 16
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99, %94, %89
  %103 = or i32 %86, 4
  store i32 %103, i32* %18, align 4
  br label %104

104:                                              ; preds = %102, %99, %97
  %105 = phi i32 [ %87, %99 ], [ %87, %97 ], [ %103, %102 ]
  %106 = and i32 %105, -9
  store i32 %106, i32* %18, align 4
  %107 = icmp eq i32 %5, 3
  br i1 %107, label %108, label %111

108:                                              ; preds = %104
  %109 = load i32, i32* %19, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %121

111:                                              ; preds = %108, %104
  %112 = icmp eq i32 %9, 3
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = load i32, i32* %20, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %121

116:                                              ; preds = %113, %111
  %117 = icmp eq i32 %12, 3
  br i1 %117, label %118, label %123

118:                                              ; preds = %116
  %119 = load i32, i32* %21, align 16
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %118, %113, %108
  %122 = or i32 %105, 8
  store i32 %122, i32* %18, align 4
  br label %123

123:                                              ; preds = %121, %118, %116
  %124 = phi i32 [ %106, %118 ], [ %106, %116 ], [ %122, %121 ]
  %125 = and i32 %124, -17
  store i32 %125, i32* %18, align 4
  %126 = icmp eq i32 %5, 4
  br i1 %126, label %127, label %130

127:                                              ; preds = %123
  %128 = load i32, i32* %19, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %140

130:                                              ; preds = %127, %123
  %131 = icmp eq i32 %9, 4
  br i1 %131, label %132, label %135

132:                                              ; preds = %130
  %133 = load i32, i32* %20, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %132, %130
  %136 = icmp eq i32 %12, 4
  br i1 %136, label %137, label %142

137:                                              ; preds = %135
  %138 = load i32, i32* %21, align 16
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %137, %132, %127
  %141 = or i32 %124, 16
  store i32 %141, i32* %18, align 4
  br label %142

142:                                              ; preds = %140, %137, %135
  %143 = phi i32 [ %125, %137 ], [ %125, %135 ], [ %141, %140 ]
  %144 = and i32 %143, -33
  store i32 %144, i32* %18, align 4
  %145 = icmp eq i32 %5, 5
  br i1 %145, label %146, label %149

146:                                              ; preds = %142
  %147 = load i32, i32* %19, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %159

149:                                              ; preds = %146, %142
  %150 = icmp eq i32 %9, 5
  br i1 %150, label %151, label %154

151:                                              ; preds = %149
  %152 = load i32, i32* %20, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %159

154:                                              ; preds = %151, %149
  %155 = icmp eq i32 %12, 5
  br i1 %155, label %156, label %161

156:                                              ; preds = %154
  %157 = load i32, i32* %21, align 16
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %156, %151, %146
  %160 = or i32 %143, 32
  store i32 %160, i32* %18, align 4
  br label %161

161:                                              ; preds = %159, %156, %154
  %162 = phi i32 [ %144, %156 ], [ %144, %154 ], [ %160, %159 ]
  %163 = and i32 %162, -65
  store i32 %163, i32* %18, align 4
  %164 = icmp eq i32 %5, 6
  br i1 %164, label %165, label %168

165:                                              ; preds = %161
  %166 = load i32, i32* %19, align 8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %178

168:                                              ; preds = %165, %161
  %169 = icmp eq i32 %9, 6
  br i1 %169, label %170, label %173

170:                                              ; preds = %168
  %171 = load i32, i32* %20, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %178

173:                                              ; preds = %170, %168
  %174 = icmp eq i32 %12, 6
  br i1 %174, label %175, label %180

175:                                              ; preds = %173
  %176 = load i32, i32* %21, align 16
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %175, %170, %165
  %179 = or i32 %162, 64
  store i32 %179, i32* %18, align 4
  br label %180

180:                                              ; preds = %178, %175, %173
  %181 = phi i32 [ %163, %175 ], [ %163, %173 ], [ %179, %178 ]
  %182 = and i32 %181, -129
  store i32 %182, i32* %18, align 4
  %183 = icmp eq i32 %5, 7
  br i1 %183, label %184, label %187

184:                                              ; preds = %180
  %185 = load i32, i32* %19, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %197

187:                                              ; preds = %184, %180
  %188 = icmp eq i32 %9, 7
  br i1 %188, label %189, label %192

189:                                              ; preds = %187
  %190 = load i32, i32* %20, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %189, %187
  %193 = icmp eq i32 %12, 7
  br i1 %193, label %194, label %44

194:                                              ; preds = %192
  %195 = load i32, i32* %21, align 16
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %44, label %197

197:                                              ; preds = %194, %189, %184
  %198 = or i32 %181, 128
  store i32 %198, i32* %18, align 4
  br label %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_one_pass_cbr_svc_start_layer(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 33
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 42
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, -2
  %9 = icmp eq i32 %8, 2
  %10 = and i1 %5, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 4
  br i1 %14, label %16, label %15

15:                                               ; preds = %1, %11
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i32 [ 0, %15 ], [ 1, %11 ]
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %20 = icmp sgt i32 %7, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 24
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 25
  store i32 1, i32* %23, align 4
  br label %24

24:                                               ; preds = %21, %16
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 18
  store i32 1, i32* %25, align 4
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 36
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 29, i64 %30
  store i32 %27, i32* %31, align 4
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %33 = load i32, i32* %32, align 16
  %34 = load i32, i32* %28, align 8
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 30, i64 %35
  store i32 %33, i32* %36, align 4
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 35
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %28, align 8
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 31, i64 %40
  store i32 %38, i32* %41, align 4
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 62
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %95

47:                                               ; preds = %24
  %48 = load i32, i32* %19, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  %51 = getelementptr %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 39, i64 0
  %52 = bitcast i32* %51 to i8*
  %53 = zext i32 %48 to i64
  %54 = shl nuw nsw i64 %53, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 %54, i1 false)
  br label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 3
  br i1 %58, label %59, label %95

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67
  %63 = bitcast %struct.RATE_CONTROL* %62 to i8*
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 8
  br label %65

65:                                               ; preds = %59, %70
  %66 = phi i32 [ %67, %70 ], [ %48, %59 ]
  %67 = add nsw i32 %66, -1
  %68 = load i32, i32* %44, align 8
  %69 = icmp sgt i32 %66, %68
  br i1 %69, label %70, label %95

70:                                               ; preds = %65
  %71 = load i32, i32* %60, align 4
  %72 = mul nsw i32 %71, %67
  %73 = load i32, i32* %61, align 4
  %74 = add nsw i32 %72, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %75
  %77 = bitcast %struct.LAYER_CONTEXT* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %77, i64 712, i1 false)
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %75, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  store i64 %80, i64* %64, align 8
  %81 = tail call i32 @vp9_test_drop(%struct.VP9_COMP* %0) #6
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %65, label %83

83:                                               ; preds = %70
  %84 = load i32, i32* %44, align 8
  %85 = icmp sgt i32 %66, %84
  br i1 %85, label %86, label %95

86:                                               ; preds = %83
  %87 = sext i32 %67 to i64
  br label %88

88:                                               ; preds = %86, %88
  %89 = phi i64 [ %87, %86 ], [ %91, %88 ]
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 39, i64 %89
  store i32 1, i32* %90, align 4
  %91 = add i64 %89, -1
  %92 = load i32, i32* %44, align 8
  %93 = sext i32 %92 to i64
  %94 = icmp sgt i64 %89, %93
  br i1 %94, label %88, label %95

95:                                               ; preds = %65, %88, %83, %55, %24
  %96 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 13
  %97 = load i32, i32* %96, align 8
  switch i32 %97, label %189 [
    i32 3, label %98
    i32 0, label %99
    i32 2, label %148
    i32 1, label %149
  ]

98:                                               ; preds = %95
  tail call fastcc void @set_flags_and_fb_idx_for_temporal_mode3(%struct.VP9_COMP* %0)
  br label %189

99:                                               ; preds = %95
  %100 = load i32, i32* %42, align 16
  store i32 %100, i32* %28, align 16
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  %102 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 45
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 44
  %104 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %105, align 4
  %106 = icmp eq i32 %100, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 0, i32 14
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  br i1 %110, label %115, label %112

112:                                              ; preds = %107
  store i32 1, i32* %111, align 16
  store i32 0, i32* %103, align 8
  store i32 1, i32* %102, align 4
  %113 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %114 = add nsw i32 %100, -1
  store i32 %114, i32* %113, align 4
  br label %121

115:                                              ; preds = %107
  store i32 3, i32* %111, align 16
  %116 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %100, i32* %116, align 4
  %117 = add nsw i32 %100, -1
  br label %121

118:                                              ; preds = %99
  %119 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 1, i32* %119, align 16
  %120 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 0, i32* %120, align 4
  br label %121

121:                                              ; preds = %118, %115, %112
  %122 = phi i32 [ 0, %118 ], [ %117, %115 ], [ %100, %112 ]
  %123 = phi i32 [ 0, %118 ], [ 0, %115 ], [ 1, %112 ]
  %124 = phi i32 [ 0, %118 ], [ 2, %115 ], [ 0, %112 ]
  %125 = phi i32 [ 0, %118 ], [ %100, %115 ], [ %114, %112 ]
  %126 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %122, i32* %126, align 16
  %127 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %140, label %130

130:                                              ; preds = %121
  %131 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %134, -1
  %136 = icmp eq i32 %132, %135
  %137 = icmp sgt i32 %132, 0
  %138 = and i1 %137, %136
  br i1 %138, label %139, label %140

139:                                              ; preds = %130
  store i32 0, i32* %103, align 8
  store i32 0, i32* %102, align 4
  store i32 0, i32* %101, align 16
  br label %140

140:                                              ; preds = %121, %130, %139
  %141 = phi i32 [ %123, %121 ], [ %123, %130 ], [ 0, %139 ]
  %142 = or i32 %124, %141
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %125, i32* %145, align 16
  br label %189

146:                                              ; preds = %140
  %147 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 %125, i32* %147, align 4
  br label %189

148:                                              ; preds = %95
  tail call fastcc void @set_flags_and_fb_idx_for_temporal_mode2(%struct.VP9_COMP* %0)
  br label %189

149:                                              ; preds = %95
  %150 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 60
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %189, label %153

153:                                              ; preds = %149
  %154 = load i32, i32* %42, align 8
  store i32 %154, i32* %28, align 8
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 61, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  store i32 %157, i32* %158, align 4
  %159 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 1, i32* %159, align 4
  %160 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 15, i64 %155
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %161, i32* %162, align 4
  %163 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 16, i64 %155
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %164, i32* %165, align 16
  %166 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 17, i64 %155
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 %167, i32* %168, align 4
  %169 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 44
  store i32 0, i32* %169, align 8
  %170 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 45
  store i32 0, i32* %170, align 4
  %171 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  store i32 0, i32* %171, align 16
  %172 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 0, i32* %172, align 16
  %173 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 46, i64 %155
  %174 = load i8, i8* %173, align 1
  %175 = icmp ne i8 %174, 0
  %176 = zext i1 %175 to i32
  store i32 %176, i32* %172, align 16
  %177 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 47, i64 %155
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %153
  %181 = or i32 %176, 2
  store i32 %181, i32* %172, align 16
  br label %182

182:                                              ; preds = %180, %153
  %183 = phi i32 [ %176, %153 ], [ %181, %180 ]
  %184 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 48, i64 %155
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %189, label %187

187:                                              ; preds = %182
  %188 = or i32 %183, 4
  store i32 %188, i32* %172, align 16
  br label %189

189:                                              ; preds = %146, %144, %187, %182, %95, %149, %148, %98
  %190 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 0, i32 0
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %191, %193
  br i1 %194, label %203, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %197 = load i32, i32* %196, align 16
  %198 = icmp eq i32 %197, %193
  br i1 %198, label %203, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, %193
  br i1 %202, label %203, label %205

203:                                              ; preds = %199, %195, %189
  %204 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 0, i32 1
  store i32 1, i32* %204, align 4
  br label %205

205:                                              ; preds = %203, %199
  %206 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 1, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = icmp eq i32 %191, %207
  br i1 %208, label %217, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %211 = load i32, i32* %210, align 16
  %212 = icmp eq i32 %211, %207
  br i1 %212, label %217, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, %207
  br i1 %216, label %217, label %219

217:                                              ; preds = %213, %209, %205
  %218 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 1, i32 1
  store i32 1, i32* %218, align 4
  br label %219

219:                                              ; preds = %217, %213
  %220 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 20
  store i32 0, i32* %220, align 4
  %221 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 19
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %250, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %250

228:                                              ; preds = %224
  %229 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 1, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %250

232:                                              ; preds = %228
  %233 = load i32, i32* %96, align 8
  %234 = icmp eq i32 %233, 1
  br i1 %234, label %250, label %235

235:                                              ; preds = %232
  %236 = load i32, i32* %3, align 4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %250, label %238

238:                                              ; preds = %235
  %239 = load i32, i32* %19, align 8
  %240 = icmp slt i32 %239, 4
  br i1 %240, label %241, label %250

241:                                              ; preds = %238
  %242 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %243 = load i32, i32* %242, align 4
  %244 = icmp slt i32 %243, 4
  br i1 %244, label %245, label %250

245:                                              ; preds = %241
  %246 = load i32, i32* %28, align 8
  %247 = add nsw i32 %239, -2
  %248 = icmp slt i32 %246, %247
  br i1 %248, label %252, label %249

249:                                              ; preds = %245
  store i32 1, i32* %220, align 4
  br label %252

250:                                              ; preds = %238, %241, %219, %224, %228, %232, %235
  %251 = load i32, i32* %28, align 8
  br label %252

252:                                              ; preds = %250, %245, %249
  %253 = phi i32 [ %251, %250 ], [ %246, %245 ], [ %246, %249 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %292

255:                                              ; preds = %252
  %256 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 58
  store i8 0, i8* %256, align 2
  %257 = load i32, i32* %19, align 8
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %259, label %292

259:                                              ; preds = %255
  %260 = sext i32 %257 to i64
  %261 = add nsw i64 %260, -1
  %262 = and i64 %260, 3
  %263 = icmp ult i64 %261, 3
  br i1 %263, label %278, label %264

264:                                              ; preds = %259
  %265 = sub nsw i64 %260, %262
  br label %266

266:                                              ; preds = %500, %264
  %267 = phi i64 [ 0, %264 ], [ %501, %500 ]
  %268 = phi i64 [ %265, %264 ], [ %502, %500 ]
  %269 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 55, i64 %267
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %273, label %272

272:                                              ; preds = %266
  store i8 1, i8* %256, align 2
  br label %273

273:                                              ; preds = %266, %272
  %274 = or i64 %267, 1
  %275 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 55, i64 %274
  %276 = load i32, i32* %275, align 4
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %488, label %487

278:                                              ; preds = %500, %259
  %279 = phi i64 [ 0, %259 ], [ %501, %500 ]
  %280 = icmp eq i64 %262, 0
  br i1 %280, label %292, label %281

281:                                              ; preds = %278, %288
  %282 = phi i64 [ %289, %288 ], [ %279, %278 ]
  %283 = phi i64 [ %290, %288 ], [ %262, %278 ]
  %284 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 55, i64 %282
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %288, label %287

287:                                              ; preds = %281
  store i8 1, i8* %256, align 2
  br label %288

288:                                              ; preds = %287, %281
  %289 = add nuw nsw i64 %282, 1
  %290 = add i64 %283, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %281, !llvm.loop !5

292:                                              ; preds = %278, %288, %255, %252
  %293 = load i32, i32* %44, align 8
  %294 = icmp eq i32 %253, %293
  br i1 %294, label %297, label %295

295:                                              ; preds = %292
  %296 = load i32, i32* %96, align 8
  br label %307

297:                                              ; preds = %292
  %298 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36
  %299 = bitcast [12 x i32]* %298 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %299, i8 0, i64 48, i1 false)
  %300 = load i32, i32* %96, align 8
  %301 = icmp eq i32 %300, 1
  br i1 %301, label %307, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 15
  %304 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 45
  %305 = bitcast [12 x i32]* %303 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %305, i8 -1, i64 144, i1 false)
  %306 = bitcast [5 x i32]* %304 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %306, i8 0, i64 50, i1 false)
  br label %307

307:                                              ; preds = %295, %297, %302
  %308 = phi i32 [ %296, %295 ], [ 1, %297 ], [ %300, %302 ]
  %309 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = mul nsw i32 %310, %253
  %312 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = add nsw i32 %311, %313
  %315 = sext i32 %314 to i64
  %316 = icmp eq i32 %308, 1
  br i1 %316, label %317, label %321

317:                                              ; preds = %307
  %318 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 60
  %319 = load i32, i32* %318, align 8
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %330, label %321

321:                                              ; preds = %317, %307
  %322 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %315, i32 5
  %323 = load i32, i32* %322, align 4
  %324 = tail call i32 @vp9_quantizer_to_qindex(i32 %323) #6
  %325 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %315, i32 0, i32 48
  store i32 %324, i32* %325, align 8
  %326 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %315, i32 6
  %327 = load i32, i32* %326, align 8
  %328 = tail call i32 @vp9_quantizer_to_qindex(i32 %327) #6
  %329 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %315, i32 0, i32 49
  store i32 %328, i32* %329, align 4
  br label %330

330:                                              ; preds = %317, %321
  %331 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %332, 2
  br i1 %333, label %334, label %349

334:                                              ; preds = %330
  %335 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 69
  %336 = load i32, i32* %335, align 8
  %337 = icmp eq i32 %336, 1
  br i1 %337, label %338, label %349

338:                                              ; preds = %334
  %339 = load i32, i32* %28, align 8
  %340 = load i32, i32* %44, align 8
  %341 = icmp eq i32 %339, %340
  br i1 %341, label %342, label %349

342:                                              ; preds = %338
  %343 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 119
  %344 = load i32, i32* %343, align 4
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %349, label %346

346:                                              ; preds = %342
  %347 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %315, i32 9
  %348 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %315, i32 10
  br label %352

349:                                              ; preds = %342, %338, %334, %330
  %350 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %315, i32 7
  %351 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %315, i32 8
  br label %352

352:                                              ; preds = %349, %346
  %353 = phi i32* [ %347, %346 ], [ %350, %349 ]
  %354 = phi i32* [ %348, %346 ], [ %351, %349 ]
  %355 = load i32, i32* %354, align 8
  %356 = load i32, i32* %353, align 4
  %357 = icmp eq i32 %355, 0
  br i1 %357, label %371, label %358

358:                                              ; preds = %352
  %359 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 3
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 2
  %362 = load i32, i32* %361, align 8
  %363 = mul nsw i32 %362, %356
  %364 = sdiv i32 %363, %355
  %365 = mul nsw i32 %360, %356
  %366 = sdiv i32 %365, %355
  %367 = srem i32 %364, 2
  %368 = add nsw i32 %367, %364
  %369 = srem i32 %366, 2
  %370 = add nsw i32 %369, %366
  br label %371

371:                                              ; preds = %352, %358
  %372 = phi i32 [ 0, %352 ], [ %368, %358 ]
  %373 = phi i32 [ 0, %352 ], [ %370, %358 ]
  %374 = mul nsw i32 %373, %372
  %375 = icmp slt i32 %374, 76801
  br i1 %375, label %376, label %380

376:                                              ; preds = %371
  %377 = load i32, i32* %28, align 8
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 26, i64 %378
  store i8 1, i8* %379, align 1
  br label %380

380:                                              ; preds = %376, %371
  %381 = mul nsw i32 %355, 3
  %382 = ashr i32 %381, 2
  %383 = icmp sgt i32 %356, %382
  br i1 %383, label %384, label %388

384:                                              ; preds = %380
  %385 = load i32, i32* %28, align 8
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 27, i64 %386
  store i32 0, i32* %387, align 4
  br label %388

388:                                              ; preds = %384, %380
  %389 = load i32, i32* %19, align 8
  %390 = icmp sgt i32 %389, 1
  br i1 %390, label %391, label %433

391:                                              ; preds = %388
  %392 = add nsw i32 %389, -1
  %393 = load i32, i32* %309, align 4
  %394 = load i32, i32* %312, align 4
  %395 = icmp eq i32 %389, 3
  %396 = sext i32 %393 to i64
  %397 = sext i32 %394 to i64
  %398 = zext i32 %392 to i64
  br label %399

399:                                              ; preds = %418, %391
  %400 = phi i64 [ 0, %391 ], [ %419, %418 ]
  %401 = mul nsw i64 %400, %396
  %402 = add nsw i64 %401, %397
  %403 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %402, i32 7
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %402, i32 8
  %406 = load i32, i32* %405, align 8
  %407 = ashr i32 %406, 1
  %408 = icmp eq i32 %404, %407
  br i1 %408, label %418, label %409

409:                                              ; preds = %399
  %410 = ashr i32 %406, 2
  %411 = icmp eq i32 %404, %410
  %412 = icmp eq i64 %400, 0
  %413 = and i1 %412, %411
  %414 = and i1 %395, %413
  br i1 %414, label %418, label %415

415:                                              ; preds = %409
  %416 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 24
  store i32 0, i32* %416, align 8
  %417 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 25
  store i32 0, i32* %417, align 4
  br label %421

418:                                              ; preds = %409, %399
  %419 = add nuw nsw i64 %400, 1
  %420 = icmp eq i64 %419, %398
  br i1 %420, label %421, label %399

421:                                              ; preds = %418, %415
  %422 = load i32, i32* %28, align 8
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %424, label %433

424:                                              ; preds = %421
  %425 = add nsw i32 %422, -1
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36, i64 %426
  %428 = load i32, i32* %427, align 4
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %433, label %430

430:                                              ; preds = %424
  %431 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 24
  store i32 0, i32* %431, align 8
  %432 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 25
  store i32 0, i32* %432, align 4
  br label %433

433:                                              ; preds = %421, %430, %424, %388
  %434 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 23
  store i32 0, i32* %434, align 4
  %435 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %436 = load i32, i32* %435, align 4
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %451, label %438

438:                                              ; preds = %433
  %439 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 44
  %440 = load i32, i32* %439, align 8
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %451

442:                                              ; preds = %438
  %443 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 45
  %444 = load i32, i32* %443, align 4
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %451

446:                                              ; preds = %442
  %447 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  %448 = load i32, i32* %447, align 16
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %446
  store i32 1, i32* %434, align 4
  br label %451

451:                                              ; preds = %446, %442, %438, %433, %450
  %452 = load i32, i32* %96, align 8
  %453 = icmp eq i32 %452, 1
  %454 = load i32, i32* %28, align 8
  br i1 %453, label %455, label %461

455:                                              ; preds = %451
  %456 = sext i32 %454 to i64
  %457 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 45, i64 %456
  %458 = load i32, i32* %457, align 4
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %461, label %460

460:                                              ; preds = %455
  store i32 0, i32* %434, align 4
  br label %461

461:                                              ; preds = %451, %460, %455
  %462 = icmp eq i32 %454, 0
  br i1 %462, label %463, label %466

463:                                              ; preds = %461
  %464 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 43
  store i32 0, i32* %464, align 8
  %465 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 44
  store i32 0, i32* %465, align 4
  br label %466

466:                                              ; preds = %463, %461
  br i1 %453, label %483, label %467

467:                                              ; preds = %466
  %468 = sext i32 %454 to i64
  %469 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 35, i64 %468
  %470 = load i32, i32* %469, align 4
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %483, label %472

472:                                              ; preds = %467
  %473 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 52, i64 %468
  %474 = load i32, i32* %473, align 4
  %475 = icmp eq i32 %474, -1
  br i1 %475, label %483, label %476

476:                                              ; preds = %472
  %477 = load i32, i32* %312, align 4
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %478, i32 14
  %480 = load i32, i32* %479, align 4
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %483

482:                                              ; preds = %476
  store i32 %474, i32* %190, align 4
  br label %483

483:                                              ; preds = %476, %472, %467, %466, %482
  %484 = tail call i32 @vp9_set_size_literal(%struct.VP9_COMP* %0, i32 %372, i32 %373) #6
  %485 = icmp eq i32 %484, 0
  %486 = select i1 %485, i32 0, i32 8
  ret i32 %486

487:                                              ; preds = %273
  store i8 1, i8* %256, align 2
  br label %488

488:                                              ; preds = %487, %273
  %489 = or i64 %267, 2
  %490 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 55, i64 %489
  %491 = load i32, i32* %490, align 4
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %494, label %493

493:                                              ; preds = %488
  store i8 1, i8* %256, align 2
  br label %494

494:                                              ; preds = %493, %488
  %495 = or i64 %267, 3
  %496 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 55, i64 %495
  %497 = load i32, i32* %496, align 4
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %500, label %499

499:                                              ; preds = %494
  store i8 1, i8* %256, align 2
  br label %500

500:                                              ; preds = %499, %494
  %501 = add nuw nsw i64 %267, 4
  %502 = add i64 %268, -4
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %278, label %266
}

declare i32 @vp9_test_drop(%struct.VP9_COMP*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @set_flags_and_fb_idx_for_temporal_mode3(%struct.VP9_COMP*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 4
  %3 = load i32, i32* %2, align 16
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  store i32 %3, i32* %4, align 16
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = mul nsw i32 %6, %3
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %8, i32 13
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 3
  %12 = and i32 %10, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = select i1 %13, i32 %14, i32 2
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  store i32 0, i32* %17, align 16
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 45
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 44
  store i32 0, i32* %19, align 8
  switch i32 %15, label %38 [
    i32 0, label %20
    i32 1, label %28
  ]

20:                                               ; preds = %1
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 1, i32* %21, align 4
  store i32 1, i32* %19, align 8
  %22 = icmp eq i32 %3, 0
  br i1 %22, label %80, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 0, i32 14
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  br i1 %26, label %77, label %74

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 1, i32* %29, align 4
  store i32 1, i32* %17, align 16
  %30 = icmp eq i32 %3, 0
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %32 = select i1 %30, i32 1, i32 3
  store i32 %32, i32* %31, align 16
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %3, i32* %33, align 4
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, %3
  %37 = add nsw i32 %36, -1
  br label %93

38:                                               ; preds = %1
  %39 = icmp eq i32 %11, 1
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, -1
  %43 = icmp eq i32 %3, %42
  br i1 %39, label %44, label %61

44:                                               ; preds = %38
  br i1 %43, label %45, label %51

45:                                               ; preds = %44
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 1, i32* %46, align 4
  %47 = icmp eq i32 %3, 0
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  br i1 %47, label %49, label %50

49:                                               ; preds = %45
  store i32 1, i32* %48, align 16
  br label %83

50:                                               ; preds = %45
  store i32 3, i32* %48, align 16
  br label %83

51:                                               ; preds = %44
  %52 = icmp eq i32 %3, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 1, i32* %54, align 4
  store i32 1, i32* %17, align 16
  %55 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 1, i32* %55, align 16
  br label %83

56:                                               ; preds = %51
  %57 = icmp slt i32 %3, %42
  br i1 %57, label %58, label %83

58:                                               ; preds = %56
  %59 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 1, i32* %59, align 4
  store i32 1, i32* %17, align 16
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 3, i32* %60, align 16
  br label %83

61:                                               ; preds = %38
  br i1 %43, label %62, label %68

62:                                               ; preds = %61
  %63 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 1, i32* %63, align 4
  %64 = icmp eq i32 %3, 0
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  br i1 %64, label %66, label %67

66:                                               ; preds = %62
  store i32 1, i32* %65, align 16
  br label %88

67:                                               ; preds = %62
  store i32 3, i32* %65, align 16
  br label %88

68:                                               ; preds = %61
  %69 = icmp eq i32 %3, 0
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  store i32 1, i32* %70, align 4
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  br i1 %69, label %72, label %73

72:                                               ; preds = %68
  store i32 1, i32* %71, align 16
  store i32 1, i32* %17, align 16
  br label %88

73:                                               ; preds = %68
  store i32 3, i32* %71, align 16
  store i32 1, i32* %17, align 16
  br label %88

74:                                               ; preds = %23
  store i32 1, i32* %27, align 16
  store i32 0, i32* %19, align 8
  store i32 1, i32* %18, align 4
  %75 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %76 = add nsw i32 %3, -1
  store i32 %76, i32* %75, align 4
  br label %93

77:                                               ; preds = %23
  store i32 3, i32* %27, align 16
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %3, i32* %78, align 4
  %79 = add nsw i32 %3, -1
  br label %93

80:                                               ; preds = %20
  %81 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 1, i32* %81, align 16
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 0, i32* %82, align 4
  br label %93

83:                                               ; preds = %53, %58, %56, %49, %50
  %84 = phi i32 [ 1, %53 ], [ 1, %58 ], [ 0, %56 ], [ 0, %49 ], [ 0, %50 ]
  %85 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %3, i32* %85, align 4
  %86 = add nsw i32 %41, %3
  %87 = add nsw i32 %86, -1
  br label %93

88:                                               ; preds = %72, %73, %66, %67
  %89 = phi i32 [ 0, %67 ], [ 0, %66 ], [ 1, %73 ], [ 1, %72 ]
  %90 = add nsw i32 %41, %3
  %91 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %90, i32* %91, align 4
  %92 = add nsw i32 %90, -1
  br label %93

93:                                               ; preds = %80, %77, %74, %28, %88, %83
  %94 = phi i32 [ %37, %28 ], [ %92, %88 ], [ %87, %83 ], [ %3, %74 ], [ %79, %77 ], [ 0, %80 ]
  %95 = phi i32 [ %36, %28 ], [ %90, %88 ], [ %86, %83 ], [ 0, %74 ], [ 0, %77 ], [ 0, %80 ]
  %96 = phi i32 [ 1, %28 ], [ %89, %88 ], [ %84, %83 ], [ 0, %74 ], [ 0, %77 ], [ 0, %80 ]
  %97 = phi i32 [ 0, %28 ], [ 0, %88 ], [ 0, %83 ], [ 1, %74 ], [ 0, %77 ], [ 0, %80 ]
  %98 = phi i32 [ 0, %28 ], [ 0, %88 ], [ 0, %83 ], [ 0, %74 ], [ 1, %77 ], [ 1, %80 ]
  %99 = phi i32 [ %3, %28 ], [ %90, %88 ], [ %3, %83 ], [ %76, %74 ], [ %3, %77 ], [ 0, %80 ]
  %100 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %94, i32* %100, align 16
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 %95, i32* %101, align 4
  %102 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %111, label %105

105:                                              ; preds = %93
  %106 = add nsw i32 %6, -1
  %107 = icmp eq i32 %15, %106
  %108 = icmp ne i32 %15, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %111

110:                                              ; preds = %105
  store i32 0, i32* %19, align 8
  store i32 0, i32* %18, align 4
  store i32 0, i32* %17, align 16
  br label %111

111:                                              ; preds = %110, %105, %93
  %112 = phi i32 [ 0, %110 ], [ %96, %105 ], [ %96, %93 ]
  %113 = phi i32 [ 0, %110 ], [ %97, %105 ], [ %97, %93 ]
  %114 = phi i32 [ 0, %110 ], [ %98, %105 ], [ %98, %93 ]
  %115 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %116 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %117 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %118 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %119 = load i32, i32* %118, align 16
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = and i32 %119, 2
  br i1 %121, label %123, label %132

123:                                              ; preds = %111
  %124 = icmp eq i32 %122, 0
  br i1 %124, label %146, label %125

125:                                              ; preds = %146, %123
  %126 = phi i32 [ %94, %123 ], [ %95, %146 ]
  %127 = phi i8 [ 2, %123 ], [ 3, %146 ]
  %128 = icmp eq i32 %114, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  store i32 %126, i32* %115, align 4
  br label %149

130:                                              ; preds = %125
  %131 = icmp eq i8 %127, 2
  br i1 %131, label %140, label %132

132:                                              ; preds = %111, %130
  %133 = phi i32 [ %126, %130 ], [ %99, %111 ]
  %134 = phi i8 [ 3, %130 ], [ 1, %111 ]
  %135 = or i32 %122, %113
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %132
  store i32 %133, i32* %116, align 16
  br label %149

138:                                              ; preds = %132
  %139 = icmp eq i8 %134, 3
  br i1 %139, label %149, label %140

140:                                              ; preds = %138, %130
  %141 = phi i32 [ %126, %130 ], [ %133, %138 ]
  %142 = and i32 %119, 4
  %143 = or i32 %142, %112
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %140
  store i32 %141, i32* %117, align 4
  br label %149

146:                                              ; preds = %123
  %147 = and i32 %119, 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %125

149:                                              ; preds = %129, %137, %138, %140, %145, %146
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @set_flags_and_fb_idx_for_temporal_mode2(%struct.VP9_COMP*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 4
  %3 = load i32, i32* %2, align 16
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  store i32 %3, i32* %4, align 16
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = mul nsw i32 %6, %3
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %8, i32 13
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 45
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 44
  %16 = icmp eq i32 %11, 0
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  %18 = bitcast i32* %17 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, <4 x i32>* %18, align 4
  br i1 %16, label %19, label %26

19:                                               ; preds = %1
  store i32 1, i32* %15, align 8
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %47, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 0, i32 14
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  br i1 %24, label %44, label %41

26:                                               ; preds = %1
  store i32 1, i32* %13, align 16
  %27 = icmp eq i32 %3, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 1, i32* %29, align 16
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %31 = load i32, i32* %30, align 8
  br label %50

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = add nsw i32 %34, -1
  %36 = icmp eq i32 %3, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i32 0, i32* %13, align 16
  br label %38

38:                                               ; preds = %37, %32
  %39 = phi i32 [ 0, %37 ], [ 1, %32 ]
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 3, i32* %40, align 16
  br label %50

41:                                               ; preds = %21
  store i32 1, i32* %25, align 16
  store i32 0, i32* %15, align 8
  store i32 1, i32* %14, align 4
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %43 = add nsw i32 %3, -1
  store i32 %43, i32* %42, align 4
  br label %57

44:                                               ; preds = %21
  store i32 3, i32* %25, align 16
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %3, i32* %45, align 4
  %46 = add nsw i32 %3, -1
  br label %57

47:                                               ; preds = %19
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 1, i32* %48, align 16
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 0, i32* %49, align 4
  br label %57

50:                                               ; preds = %28, %38
  %51 = phi i32 [ 1, %28 ], [ %39, %38 ]
  %52 = phi i32 [ 1, %28 ], [ 3, %38 ]
  %53 = phi i32 [ %31, %28 ], [ %34, %38 ]
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %3, i32* %54, align 4
  %55 = add nsw i32 %53, %3
  %56 = add nsw i32 %55, -1
  br label %57

57:                                               ; preds = %47, %44, %41, %50
  %58 = phi i32 [ %56, %50 ], [ %3, %41 ], [ %46, %44 ], [ 0, %47 ]
  %59 = phi i32 [ %55, %50 ], [ 0, %41 ], [ 0, %44 ], [ 0, %47 ]
  %60 = phi i32 [ %51, %50 ], [ 0, %41 ], [ 0, %44 ], [ 0, %47 ]
  %61 = phi i32 [ 0, %50 ], [ 1, %41 ], [ 0, %44 ], [ 0, %47 ]
  %62 = phi i32 [ %52, %50 ], [ 1, %41 ], [ 3, %44 ], [ 1, %47 ]
  %63 = phi i32 [ %3, %50 ], [ %43, %41 ], [ %3, %44 ], [ 0, %47 ]
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %58, i32* %64, align 16
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 %59, i32* %65, align 4
  %66 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %57
  %70 = add nsw i32 %6, -1
  %71 = icmp eq i32 %11, %70
  %72 = icmp ne i32 %11, 0
  %73 = and i1 %72, %71
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  store i32 0, i32* %15, align 8
  store i32 0, i32* %14, align 4
  store i32 0, i32* %13, align 16
  br label %75

75:                                               ; preds = %74, %69, %57
  %76 = phi i32 [ 0, %74 ], [ %60, %69 ], [ %60, %57 ]
  %77 = phi i32 [ 0, %74 ], [ %61, %69 ], [ %61, %57 ]
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %79 = and i32 %62, 2
  %80 = or i32 %79, %77
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %75
  %83 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %63, i32* %83, align 16
  br label %87

84:                                               ; preds = %75
  %85 = icmp eq i32 %76, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  store i32 %63, i32* %78, align 4
  br label %87

87:                                               ; preds = %82, %84, %86
  ret void
}

declare i32 @vp9_quantizer_to_qindex(i32) local_unnamed_addr #1

declare i32 @vp9_set_size_literal(%struct.VP9_COMP*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.lookahead_entry* @vp9_svc_lookahead_pop(%struct.VP9_COMP* nocapture readonly, %struct.lookahead_ctx*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, -1
  %13 = icmp eq i32 %5, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %7, %9
  %15 = tail call %struct.lookahead_entry* @vp9_lookahead_peek(%struct.lookahead_ctx* %1, i32 0) #6
  %16 = icmp eq %struct.lookahead_entry* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %19 = load i32, i32* %18, align 16
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, -1
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = tail call %struct.lookahead_entry* @vp9_lookahead_pop(%struct.lookahead_ctx* %1, i32 %2) #6
  br label %26

26:                                               ; preds = %14, %3, %24, %17, %9
  %27 = phi %struct.lookahead_entry* [ %15, %24 ], [ %15, %17 ], [ null, %14 ], [ null, %9 ], [ null, %3 ]
  ret %struct.lookahead_entry* %27
}

declare %struct.lookahead_entry* @vp9_lookahead_peek(%struct.lookahead_ctx*, i32) local_unnamed_addr #1

declare %struct.lookahead_entry* @vp9_lookahead_pop(%struct.lookahead_ctx*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_free_svc_cyclic_refresh(%struct.VP9_COMP* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 41
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %41

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 42
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %5, %36
  %9 = phi i32 [ %7, %5 ], [ %37, %36 ]
  %10 = phi i32 [ 0, %5 ], [ %38, %36 ]
  %11 = icmp sgt i32 %9, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %8, %32
  %13 = phi i32 [ %34, %32 ], [ %9, %8 ]
  %14 = phi i32 [ %33, %32 ], [ 0, %8 ]
  %15 = mul nsw i32 %13, %10
  %16 = add nsw i32 %15, %14
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %17, i32 23
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %12
  tail call void @vpx_free(i8* nonnull %19) #6
  br label %22

22:                                               ; preds = %12, %21
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %17, i32 24
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @vpx_free(i8* nonnull %24) #6
  br label %27

27:                                               ; preds = %22, %26
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %17, i32 25
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @vpx_free(i8* nonnull %29) #6
  br label %32

32:                                               ; preds = %27, %31
  %33 = add nuw nsw i32 %14, 1
  %34 = load i32, i32* %6, align 8
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %12, label %36

36:                                               ; preds = %32, %8
  %37 = phi i32 [ %9, %8 ], [ %34, %32 ]
  %38 = add nuw nsw i32 %10, 1
  %39 = load i32, i32* %2, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %8, label %41

41:                                               ; preds = %36, %1
  ret void
}

declare void @vpx_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_svc_reset_temporal_layers(%struct.VP9_COMP*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %44

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  %10 = icmp eq i32 %1, 0
  %11 = and i32 %8, 1
  %12 = icmp eq i32 %8, 1
  %13 = sub i32 %8, %11
  %14 = icmp eq i32 %11, 0
  br label %15

15:                                               ; preds = %6, %40
  %16 = phi i32 [ 0, %6 ], [ %41, %40 ]
  br i1 %9, label %17, label %40

17:                                               ; preds = %15
  %18 = mul nsw i32 %8, %16
  br i1 %12, label %32, label %19

19:                                               ; preds = %17, %103
  %20 = phi i32 [ %104, %103 ], [ 0, %17 ]
  %21 = phi i32 [ %105, %103 ], [ %13, %17 ]
  %22 = add nsw i32 %18, %20
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %23, i32 13
  store i32 0, i32* %24, align 8
  br i1 %10, label %27, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %23, i32 15
  store i32 0, i32* %26, align 8
  br label %27

27:                                               ; preds = %19, %25
  %28 = or i32 %20, 1
  %29 = add nsw i32 %18, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %30, i32 13
  store i32 0, i32* %31, align 8
  br i1 %10, label %103, label %101

32:                                               ; preds = %103, %17
  %33 = phi i32 [ 0, %17 ], [ %104, %103 ]
  br i1 %14, label %40, label %34

34:                                               ; preds = %32
  %35 = add nsw i32 %18, %33
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 13
  store i32 0, i32* %37, align 8
  br i1 %10, label %40, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %36, i32 15
  store i32 0, i32* %39, align 8
  br label %40

40:                                               ; preds = %32, %34, %38, %15
  %41 = add nuw nsw i32 %16, 1
  %42 = load i32, i32* %3, align 8
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %15, label %44

44:                                               ; preds = %40, %2
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 13
  %46 = load i32, i32* %45, align 8
  switch i32 %46, label %100 [
    i32 3, label %47
    i32 0, label %48
    i32 2, label %99
  ]

47:                                               ; preds = %44
  tail call fastcc void @set_flags_and_fb_idx_for_temporal_mode3(%struct.VP9_COMP* %0)
  br label %100

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 4
  %50 = load i32, i32* %49, align 16
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  store i32 %50, i32* %51, align 16
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 45
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 44
  %55 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 43
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %56, align 4
  %57 = icmp eq i32 %50, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 0, i32 14
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  br i1 %61, label %66, label %63

63:                                               ; preds = %58
  store i32 1, i32* %62, align 16
  store i32 0, i32* %54, align 8
  store i32 1, i32* %53, align 4
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %65 = add nsw i32 %50, -1
  store i32 %65, i32* %64, align 4
  br label %72

66:                                               ; preds = %58
  store i32 3, i32* %62, align 16
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 %50, i32* %67, align 4
  %68 = add nsw i32 %50, -1
  br label %72

69:                                               ; preds = %48
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  store i32 1, i32* %70, align 16
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  store i32 0, i32* %71, align 4
  br label %72

72:                                               ; preds = %69, %66, %63
  %73 = phi i32 [ 0, %69 ], [ %68, %66 ], [ %50, %63 ]
  %74 = phi i32 [ 0, %69 ], [ 0, %66 ], [ 1, %63 ]
  %75 = phi i32 [ 0, %69 ], [ 2, %66 ], [ 0, %63 ]
  %76 = phi i32 [ 0, %69 ], [ %50, %66 ], [ %65, %63 ]
  %77 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %73, i32* %77, align 16
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %72
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %85, -1
  %87 = icmp eq i32 %83, %86
  %88 = icmp sgt i32 %83, 0
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %91

90:                                               ; preds = %81
  store i32 0, i32* %54, align 8
  store i32 0, i32* %53, align 4
  store i32 0, i32* %52, align 16
  br label %91

91:                                               ; preds = %72, %81, %90
  %92 = phi i32 [ %74, %72 ], [ %74, %81 ], [ 0, %90 ]
  %93 = or i32 %75, %92
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  store i32 %76, i32* %96, align 16
  br label %100

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 %76, i32* %98, align 4
  br label %100

99:                                               ; preds = %44
  tail call fastcc void @set_flags_and_fb_idx_for_temporal_mode2(%struct.VP9_COMP* %0)
  br label %100

100:                                              ; preds = %97, %95, %44, %99, %47
  tail call void @vp9_update_temporal_layer_framerate(%struct.VP9_COMP* %0)
  tail call void @vp9_restore_layer_context(%struct.VP9_COMP* %0)
  ret void

101:                                              ; preds = %27
  %102 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %30, i32 15
  store i32 0, i32* %102, align 8
  br label %103

103:                                              ; preds = %101, %27
  %104 = add nuw nsw i32 %20, 2
  %105 = add i32 %21, -2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %32, label %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_svc_check_reset_layer_rc_flag(%struct.VP9_COMP* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %52

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %5, %46
  %9 = phi i32 [ %3, %5 ], [ %47, %46 ]
  %10 = phi i32 [ %7, %5 ], [ %48, %46 ]
  %11 = phi i32 [ %7, %5 ], [ %49, %46 ]
  %12 = phi i32 [ 0, %5 ], [ %50, %46 ]
  %13 = mul nsw i32 %11, %12
  %14 = add nsw i32 %11, -1
  %15 = add nsw i32 %14, %13
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %16, i32 0, i32 25
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %16, i32 0, i32 57
  %20 = load i32, i32* %19, align 8
  %21 = mul nsw i32 %20, 3
  %22 = ashr i32 %21, 1
  %23 = icmp sgt i32 %18, %22
  %24 = ashr i32 %20, 1
  %25 = icmp slt i32 %18, %24
  %26 = or i1 %25, %23
  br i1 %26, label %27, label %46

27:                                               ; preds = %8
  %28 = icmp sgt i32 %10, 0
  br i1 %28, label %29, label %46

29:                                               ; preds = %27, %29
  %30 = phi i32 [ %42, %29 ], [ %10, %27 ]
  %31 = phi i32 [ %41, %29 ], [ 0, %27 ]
  %32 = mul nsw i32 %30, %12
  %33 = add nsw i32 %32, %31
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %34, i32 0, i32 53
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %34, i32 0, i32 54
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %34, i32 0, i32 51
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %34, i32 0, i32 35
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %34, i32 0, i32 34
  store i64 %38, i64* %40, align 8
  %41 = add nuw nsw i32 %31, 1
  %42 = load i32, i32* %6, align 4
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %29, label %44

44:                                               ; preds = %29
  %45 = load i32, i32* %2, align 8
  br label %46

46:                                               ; preds = %44, %27, %8
  %47 = phi i32 [ %45, %44 ], [ %9, %27 ], [ %9, %8 ]
  %48 = phi i32 [ %42, %44 ], [ %10, %27 ], [ %10, %8 ]
  %49 = phi i32 [ %42, %44 ], [ %10, %27 ], [ %11, %8 ]
  %50 = add nuw nsw i32 %12, 1
  %51 = icmp slt i32 %50, %47
  br i1 %51, label %8, label %52

52:                                               ; preds = %46, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_svc_constrain_inter_layer_pred(%struct.VP9_COMP*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 42
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %17 [
    i32 2, label %6
    i32 1, label %23
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %9, i32 14
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 58
  %15 = load i8, i8* %14, align 2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %1, %6, %13
  %18 = add nsw i32 %3, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 36, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %60, label %23

23:                                               ; preds = %17, %13, %1
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 89
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %30 = load i32, i32* %25, align 4
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %160, label %32

32:                                               ; preds = %23
  %33 = sext i32 %30 to i64
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 15, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %160, label %37

37:                                               ; preds = %32
  %38 = load %struct.BufferPool*, %struct.BufferPool** %27, align 8
  %39 = sext i32 %35 to i64
  %40 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %38, i64 0, i32 3, i64 %39, i32 8
  %41 = icmp eq %struct.yv12_buffer_config* %40, null
  br i1 %41, label %160, label %42

42:                                               ; preds = %37
  %43 = load i32, i32* %28, align 16
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %160, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 0, i32 2, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %160, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 0, i32 2, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %160, label %54

54:                                               ; preds = %50
  %55 = icmp eq i32 %48, 16384
  %56 = icmp eq i32 %52, 16384
  %57 = and i1 %55, %56
  br i1 %57, label %160, label %58

58:                                               ; preds = %54
  %59 = and i32 %43, -2
  store i32 %59, i32* %28, align 16
  br label %160

60:                                               ; preds = %195, %198, %203, %208, %212, %216, %220, %224, %228, %17
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 13
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = icmp eq i32 %5, 1
  %65 = or i1 %64, %63
  br i1 %65, label %121, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %68 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %69 = add nsw i32 %3, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 15, i64 %70
  %72 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 45, i64 %70
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 16, i64 %70
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 17, i64 %70
  %75 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %76 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 0, i32 2, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %117, label %79

79:                                               ; preds = %66
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 0, i32 2, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %117, label %83

83:                                               ; preds = %79
  %84 = icmp eq i32 %77, 16384
  %85 = icmp eq i32 %81, 16384
  %86 = and i1 %84, %85
  br i1 %86, label %117, label %87

87:                                               ; preds = %83
  %88 = load i32, i32* %67, align 4
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %117, label %90

90:                                               ; preds = %87
  %91 = load i32, i32* %71, align 4
  %92 = icmp eq i32 %88, %91
  br i1 %92, label %93, label %98

93:                                               ; preds = %90
  %94 = load i32, i32* %72, align 4
  %95 = shl i32 1, %88
  %96 = and i32 %94, %95
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %117

98:                                               ; preds = %93, %90
  %99 = load i32, i32* %73, align 4
  %100 = icmp eq i32 %88, %99
  br i1 %100, label %101, label %106

101:                                              ; preds = %98
  %102 = load i32, i32* %72, align 4
  %103 = shl i32 1, %88
  %104 = and i32 %102, %103
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %117

106:                                              ; preds = %101, %98
  %107 = load i32, i32* %74, align 4
  %108 = icmp eq i32 %88, %107
  br i1 %108, label %109, label %114

109:                                              ; preds = %106
  %110 = load i32, i32* %72, align 4
  %111 = shl i32 1, %88
  %112 = and i32 %110, %111
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %106, %109
  %115 = load i32, i32* %75, align 16
  %116 = and i32 %115, -2
  store i32 %116, i32* %75, align 16
  br label %117

117:                                              ; preds = %83, %66, %79, %109, %101, %93, %87, %114
  %118 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 1, i32 2, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, -1
  br i1 %120, label %121, label %122

121:                                              ; preds = %117, %122, %126, %130, %136, %144, %152, %157, %60
  ret void

122:                                              ; preds = %117
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 1, i32 2, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %121, label %126

126:                                              ; preds = %122
  %127 = icmp eq i32 %119, 16384
  %128 = icmp eq i32 %124, 16384
  %129 = and i1 %127, %128
  br i1 %129, label %121, label %130

130:                                              ; preds = %126
  %131 = load i32, i32* %68, align 4
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %121, label %133

133:                                              ; preds = %130
  %134 = load i32, i32* %71, align 4
  %135 = icmp eq i32 %131, %134
  br i1 %135, label %136, label %141

136:                                              ; preds = %133
  %137 = load i32, i32* %72, align 4
  %138 = shl i32 1, %131
  %139 = and i32 %137, %138
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %121

141:                                              ; preds = %136, %133
  %142 = load i32, i32* %73, align 4
  %143 = icmp eq i32 %131, %142
  br i1 %143, label %144, label %149

144:                                              ; preds = %141
  %145 = load i32, i32* %72, align 4
  %146 = shl i32 1, %131
  %147 = and i32 %145, %146
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %121

149:                                              ; preds = %144, %141
  %150 = load i32, i32* %74, align 4
  %151 = icmp eq i32 %131, %150
  br i1 %151, label %152, label %157

152:                                              ; preds = %149
  %153 = load i32, i32* %72, align 4
  %154 = shl i32 1, %131
  %155 = and i32 %153, %154
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %121

157:                                              ; preds = %152, %149
  %158 = load i32, i32* %75, align 16
  %159 = and i32 %158, -3
  store i32 %159, i32* %75, align 16
  br label %121

160:                                              ; preds = %58, %54, %46, %50, %23, %32, %42, %37
  %161 = load i32, i32* %24, align 4
  %162 = icmp eq i32 %161, -1
  br i1 %162, label %195, label %163

163:                                              ; preds = %160
  %164 = sext i32 %161 to i64
  %165 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 15, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, -1
  br i1 %167, label %195, label %168

168:                                              ; preds = %163
  %169 = load %struct.BufferPool*, %struct.BufferPool** %27, align 8
  %170 = sext i32 %166 to i64
  %171 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %169, i64 0, i32 3, i64 %170, i32 8
  %172 = icmp eq %struct.yv12_buffer_config* %171, null
  br i1 %172, label %195, label %173

173:                                              ; preds = %168
  %174 = load i32, i32* %28, align 16
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %195, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 1, i32 2, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, -1
  br i1 %180, label %195, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 1, i32 2, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, -1
  br i1 %184, label %195, label %185

185:                                              ; preds = %181
  %186 = icmp eq i32 %179, 16384
  %187 = icmp eq i32 %183, 16384
  %188 = and i1 %186, %187
  br i1 %188, label %195, label %189

189:                                              ; preds = %185
  %190 = and i32 %174, -3
  store i32 %190, i32* %28, align 16
  %191 = load i32, i32* %29, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %189
  %194 = load i32, i32* %25, align 4
  store i32 %194, i32* %24, align 16
  br label %195

195:                                              ; preds = %193, %189, %185, %181, %177, %173, %168, %163, %160
  %196 = load i32, i32* %26, align 4
  %197 = icmp eq i32 %196, -1
  br i1 %197, label %60, label %198

198:                                              ; preds = %195
  %199 = sext i32 %196 to i64
  %200 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 15, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, -1
  br i1 %202, label %60, label %203

203:                                              ; preds = %198
  %204 = load %struct.BufferPool*, %struct.BufferPool** %27, align 8
  %205 = sext i32 %201 to i64
  %206 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %204, i64 0, i32 3, i64 %205, i32 8
  %207 = icmp eq %struct.yv12_buffer_config* %206, null
  br i1 %207, label %60, label %208

208:                                              ; preds = %203
  %209 = load i32, i32* %28, align 16
  %210 = and i32 %209, 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %60, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 2, i32 2, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = icmp eq i32 %214, -1
  br i1 %215, label %60, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 2, i32 2, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, -1
  br i1 %219, label %60, label %220

220:                                              ; preds = %216
  %221 = icmp eq i32 %214, 16384
  %222 = icmp eq i32 %218, 16384
  %223 = and i1 %221, %222
  br i1 %223, label %60, label %224

224:                                              ; preds = %220
  %225 = and i32 %209, -5
  store i32 %225, i32* %28, align 16
  %226 = load i32, i32* %29, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %60

228:                                              ; preds = %224
  %229 = load i32, i32* %25, align 4
  store i32 %229, i32* %26, align 4
  br label %60
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_svc_assert_constraints_pattern(%struct.VP9_COMP* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 42
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 41
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %14, label %13

13:                                               ; preds = %39, %14, %18, %35, %9
  ret void

14:                                               ; preds = %9, %1, %5
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 20
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %13, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %21, i32 14
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %13

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %27 = load i32, i32* %26, align 16
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 53, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %31
  br i1 %34, label %35, label %39

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 54, i64 %28
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %13, label %39

39:                                               ; preds = %35, %25
  store i32 0, i32* %15, align 4
  br label %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_denoise_svc_non_key(%struct.VP9_COMP* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %3 = load i32, i32* %2, align 16
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 32
  %13 = load i32, i32* %12, align 16
  %14 = icmp slt i32 %3, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %1, %11
  %16 = mul nsw i32 %5, %3
  %17 = add nsw i32 %16, %7
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %18, i32 14
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %11, %15
  %24 = phi i32 [ 0, %11 ], [ %22, %15 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_svc_check_spatial_layer_sync(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %4, i32 14
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %50

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 58
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %50, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = zext i1 %19 to i32
  tail call void @vp9_svc_reset_temporal_layers(%struct.VP9_COMP* %0, i32 %20)
  %21 = load i32, i32* %9, align 8
  br label %22

22:                                               ; preds = %16, %8
  %23 = phi i32 [ %10, %8 ], [ %21, %16 ]
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %50

25:                                               ; preds = %22
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 55, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %50, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %32 = load i32, i32* %31, align 16
  %33 = and i32 %32, -2
  store i32 %33, i32* %31, align 16
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 20
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %30
  store i32 0, i32* %34, align 4
  %38 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 16
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 12
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 3
  %43 = zext i1 %42 to i32
  %44 = sub nuw nsw i32 %23, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 21, i64 %45, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 46
  store i32 1, i32* %49, align 16
  br label %50

50:                                               ; preds = %12, %30, %25, %1, %22, %37
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_svc_update_ref_frame_buffer_idx(%struct.VP9_COMP* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %47

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %7 = load i32, i32* %6, align 16
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %5
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 %17
  store i8 1, i8* %18, align 1
  %19 = load i32, i32* %6, align 16
  br label %20

20:                                               ; preds = %10, %14
  %21 = phi i32 [ %7, %10 ], [ %19, %14 ]
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %24, %20
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %30 = load i32, i32* %29, align 16
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 %31
  store i8 1, i8* %32, align 1
  %33 = load i32, i32* %6, align 16
  br label %34

34:                                               ; preds = %24, %28
  %35 = phi i32 [ %21, %24 ], [ %33, %28 ]
  %36 = and i32 %35, 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %40 = load i32, i32* %39, align 16
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %38, %34
  %43 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 %45
  store i8 1, i8* %46, align 1
  br label %47

47:                                               ; preds = %38, %42, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_svc_update_ref_frame(%struct.VP9_COMP*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 89
  %4 = load %struct.BufferPool*, %struct.BufferPool** %3, align 8
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 13
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %60

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 60
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %60, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %15 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 18
  %17 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  br label %18

18:                                               ; preds = %57, %12
  %19 = phi i64 [ 0, %12 ], [ %58, %57 ]
  %20 = load i32, i32* %13, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = load i32, i32* %14, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %22, %18
  %26 = load i32, i32* %15, align 8
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 45, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = trunc i64 %19 to i32
  %31 = shl i32 1, %30
  %32 = and i32 %29, %31
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %57, label %34

34:                                               ; preds = %25, %22
  %35 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 15, i64 %19
  %36 = load i32, i32* %16, align 16
  %37 = load i32, i32* %35, align 4
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = sext i32 %37 to i64
  %41 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %4, i64 0, i32 3, i64 %40, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = add nsw i32 %42, -1
  store i32 %45, i32* %41, align 8
  br label %46

46:                                               ; preds = %44, %39, %34
  store i32 %36, i32* %35, align 4
  %47 = sext i32 %36 to i64
  %48 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %4, i64 0, i32 3, i64 %47, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %48, align 8
  %51 = load i32, i32* %15, align 8
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 53, i64 %19
  store i8 %52, i8* %53, align 1
  %54 = load i32, i32* %17, align 4
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 54, i64 %19
  store i8 %55, i8* %56, align 1
  br label %57

57:                                               ; preds = %46, %25
  %58 = add nuw nsw i64 %19, 1
  %59 = icmp eq i64 %58, 8
  br i1 %59, label %168, label %18

60:                                               ; preds = %8, %1
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %114

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %114

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.SVC, %struct.SVC* %2, i64 0, i32 0
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %71 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %72 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 18
  br label %75

75:                                               ; preds = %111, %68
  %76 = phi i64 [ 0, %68 ], [ %112, %111 ]
  %77 = load i32, i32* %69, align 8
  %78 = trunc i32 %77 to i8
  %79 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 53, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i32, i32* %70, align 4
  %81 = trunc i32 %80 to i8
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 54, i64 %76
  store i8 %81, i8* %82, align 1
  %83 = load i32, i32* %71, align 4
  %84 = zext i32 %83 to i64
  %85 = icmp eq i64 %76, %84
  br i1 %85, label %111, label %86

86:                                               ; preds = %75
  %87 = load i32, i32* %72, align 16
  %88 = zext i32 %87 to i64
  %89 = icmp eq i64 %76, %88
  br i1 %89, label %111, label %90

90:                                               ; preds = %86
  %91 = load i32, i32* %73, align 4
  %92 = zext i32 %91 to i64
  %93 = icmp eq i64 %76, %92
  br i1 %93, label %111, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 15, i64 %76
  %96 = load i32, i32* %74, align 16
  %97 = load i32, i32* %95, align 4
  %98 = icmp sgt i32 %97, -1
  br i1 %98, label %99, label %106

99:                                               ; preds = %94
  %100 = sext i32 %97 to i64
  %101 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %4, i64 0, i32 3, i64 %100, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = add nsw i32 %102, -1
  store i32 %105, i32* %101, align 8
  br label %106

106:                                              ; preds = %94, %99, %104
  store i32 %96, i32* %95, align 4
  %107 = sext i32 %96 to i64
  %108 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %4, i64 0, i32 3, i64 %107, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %108, align 8
  br label %111

111:                                              ; preds = %90, %86, %75, %106
  %112 = add nuw nsw i64 %76, 1
  %113 = icmp eq i64 %112, 8
  br i1 %113, label %168, label %75

114:                                              ; preds = %64, %60
  %115 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %132, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.SVC, %struct.SVC* %2, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = trunc i32 %120 to i8
  %122 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 53, i64 %124
  store i8 %121, i8* %125, align 1
  %126 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = trunc i32 %127 to i8
  %129 = load i32, i32* %122, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 54, i64 %130
  store i8 %128, i8* %131, align 1
  br label %132

132:                                              ; preds = %114, %118
  %133 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %150, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.SVC, %struct.SVC* %2, i64 0, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = trunc i32 %138 to i8
  %140 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %141 = load i32, i32* %140, align 16
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 53, i64 %142
  store i8 %139, i8* %143, align 1
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = trunc i32 %145 to i8
  %147 = load i32, i32* %140, align 16
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 54, i64 %148
  store i8 %146, i8* %149, align 1
  br label %150

150:                                              ; preds = %132, %136
  %151 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %152 = load i32, i32* %151, align 16
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %168, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.SVC, %struct.SVC* %2, i64 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = trunc i32 %156 to i8
  %158 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %159 = load i32, i32* %158, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 53, i64 %160
  store i8 %157, i8* %161, align 1
  %162 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = trunc i32 %163 to i8
  %165 = load i32, i32* %158, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 54, i64 %166
  store i8 %164, i8* %167, align 1
  br label %168

168:                                              ; preds = %57, %111, %150, %154
  %169 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %170 to i64
  %174 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 15, i64 %173
  store i32 %172, i32* %174, align 4
  %175 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %176 = load i32, i32* %175, align 16
  %177 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 16, i64 %173
  store i32 %176, i32* %177, align 4
  %178 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 17, i64 %173
  store i32 %179, i32* %180, align 4
  %181 = load i32, i32* %5, align 8
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %210, label %183

183:                                              ; preds = %168
  %184 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 45, i64 %173
  %185 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  %186 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %187 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %188 = load i32, i32* %184, align 4
  %189 = and i32 %188, -2
  store i32 %189, i32* %184, align 4
  %190 = icmp eq i32 %172, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %183
  %192 = load i32, i32* %185, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %204

194:                                              ; preds = %191, %183
  %195 = icmp eq i32 %176, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %194
  %197 = load i32, i32* %186, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %204

199:                                              ; preds = %196, %194
  %200 = icmp eq i32 %179, 0
  br i1 %200, label %201, label %206

201:                                              ; preds = %199
  %202 = load i32, i32* %187, align 16
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %201, %196, %191
  %205 = or i32 %188, 1
  store i32 %205, i32* %184, align 4
  br label %206

206:                                              ; preds = %204, %201, %199
  %207 = phi i32 [ %189, %201 ], [ %189, %199 ], [ %205, %204 ]
  %208 = and i32 %207, -3
  store i32 %208, i32* %184, align 4
  %209 = icmp eq i32 %172, 1
  br i1 %209, label %274, label %277

210:                                              ; preds = %396, %398, %401, %168
  %211 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 40
  %212 = load i32, i32* %211, align 8
  %213 = trunc i32 %212 to i8
  %214 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 49, i64 %173
  store i8 %213, i8* %214, align 1
  %215 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 41
  %216 = load i32, i32* %215, align 4
  %217 = trunc i32 %216 to i8
  %218 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 50, i64 %173
  store i8 %217, i8* %218, align 1
  %219 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 42
  %220 = load i32, i32* %219, align 16
  %221 = trunc i32 %220 to i8
  %222 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 51, i64 %173
  store i8 %221, i8* %222, align 1
  %223 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %224 = load i32, i32* %223, align 16
  %225 = trunc i32 %224 to i8
  %226 = and i8 %225, 1
  %227 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 46, i64 %173
  store i8 %226, i8* %227, align 1
  %228 = load i32, i32* %223, align 16
  %229 = trunc i32 %228 to i8
  %230 = and i8 %229, 2
  %231 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 47, i64 %173
  store i8 %230, i8* %231, align 1
  %232 = load i32, i32* %223, align 16
  %233 = trunc i32 %232 to i8
  %234 = and i8 %233, 4
  %235 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 48, i64 %173
  store i8 %234, i8* %235, align 1
  %236 = load i32, i32* %169, align 8
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %273

238:                                              ; preds = %210
  %239 = load i32, i32* %223, align 16
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %238
  %243 = load i32, i32* %211, align 8
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %250, label %245

245:                                              ; preds = %242, %238
  %246 = load i32, i32* %171, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 %247
  store i8 1, i8* %248, align 1
  %249 = load i32, i32* %223, align 16
  br label %250

250:                                              ; preds = %245, %242
  %251 = phi i32 [ %239, %242 ], [ %249, %245 ]
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %250
  %255 = load i32, i32* %215, align 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %254, %250
  %258 = load i32, i32* %175, align 16
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 %259
  store i8 1, i8* %260, align 1
  %261 = load i32, i32* %223, align 16
  br label %262

262:                                              ; preds = %257, %254
  %263 = phi i32 [ %251, %254 ], [ %261, %257 ]
  %264 = and i32 %263, 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %262
  %267 = load i32, i32* %219, align 16
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %273, label %269

269:                                              ; preds = %266, %262
  %270 = load i32, i32* %178, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 59, i64 %271
  store i8 1, i8* %272, align 1
  br label %273

273:                                              ; preds = %210, %266, %269
  ret void

274:                                              ; preds = %206
  %275 = load i32, i32* %185, align 8
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %287

277:                                              ; preds = %274, %206
  %278 = icmp eq i32 %176, 1
  br i1 %278, label %279, label %282

279:                                              ; preds = %277
  %280 = load i32, i32* %186, align 4
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %287

282:                                              ; preds = %279, %277
  %283 = icmp eq i32 %179, 1
  br i1 %283, label %284, label %289

284:                                              ; preds = %282
  %285 = load i32, i32* %187, align 16
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %284, %279, %274
  %288 = or i32 %207, 2
  store i32 %288, i32* %184, align 4
  br label %289

289:                                              ; preds = %287, %284, %282
  %290 = phi i32 [ %208, %284 ], [ %208, %282 ], [ %288, %287 ]
  %291 = and i32 %290, -5
  store i32 %291, i32* %184, align 4
  %292 = icmp eq i32 %172, 2
  br i1 %292, label %293, label %296

293:                                              ; preds = %289
  %294 = load i32, i32* %185, align 8
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %306

296:                                              ; preds = %293, %289
  %297 = icmp eq i32 %176, 2
  br i1 %297, label %298, label %301

298:                                              ; preds = %296
  %299 = load i32, i32* %186, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %306

301:                                              ; preds = %298, %296
  %302 = icmp eq i32 %179, 2
  br i1 %302, label %303, label %308

303:                                              ; preds = %301
  %304 = load i32, i32* %187, align 16
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %308, label %306

306:                                              ; preds = %303, %298, %293
  %307 = or i32 %290, 4
  store i32 %307, i32* %184, align 4
  br label %308

308:                                              ; preds = %306, %303, %301
  %309 = phi i32 [ %291, %303 ], [ %291, %301 ], [ %307, %306 ]
  %310 = and i32 %309, -9
  store i32 %310, i32* %184, align 4
  %311 = icmp eq i32 %172, 3
  br i1 %311, label %312, label %315

312:                                              ; preds = %308
  %313 = load i32, i32* %185, align 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %325

315:                                              ; preds = %312, %308
  %316 = icmp eq i32 %176, 3
  br i1 %316, label %317, label %320

317:                                              ; preds = %315
  %318 = load i32, i32* %186, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %325

320:                                              ; preds = %317, %315
  %321 = icmp eq i32 %179, 3
  br i1 %321, label %322, label %327

322:                                              ; preds = %320
  %323 = load i32, i32* %187, align 16
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %327, label %325

325:                                              ; preds = %322, %317, %312
  %326 = or i32 %309, 8
  store i32 %326, i32* %184, align 4
  br label %327

327:                                              ; preds = %325, %322, %320
  %328 = phi i32 [ %310, %322 ], [ %310, %320 ], [ %326, %325 ]
  %329 = and i32 %328, -17
  store i32 %329, i32* %184, align 4
  %330 = icmp eq i32 %172, 4
  br i1 %330, label %331, label %334

331:                                              ; preds = %327
  %332 = load i32, i32* %185, align 8
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %344

334:                                              ; preds = %331, %327
  %335 = icmp eq i32 %176, 4
  br i1 %335, label %336, label %339

336:                                              ; preds = %334
  %337 = load i32, i32* %186, align 4
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %344

339:                                              ; preds = %336, %334
  %340 = icmp eq i32 %179, 4
  br i1 %340, label %341, label %346

341:                                              ; preds = %339
  %342 = load i32, i32* %187, align 16
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %346, label %344

344:                                              ; preds = %341, %336, %331
  %345 = or i32 %328, 16
  store i32 %345, i32* %184, align 4
  br label %346

346:                                              ; preds = %344, %341, %339
  %347 = phi i32 [ %329, %341 ], [ %329, %339 ], [ %345, %344 ]
  %348 = and i32 %347, -33
  store i32 %348, i32* %184, align 4
  %349 = icmp eq i32 %172, 5
  br i1 %349, label %350, label %353

350:                                              ; preds = %346
  %351 = load i32, i32* %185, align 8
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %363

353:                                              ; preds = %350, %346
  %354 = icmp eq i32 %176, 5
  br i1 %354, label %355, label %358

355:                                              ; preds = %353
  %356 = load i32, i32* %186, align 4
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %363

358:                                              ; preds = %355, %353
  %359 = icmp eq i32 %179, 5
  br i1 %359, label %360, label %365

360:                                              ; preds = %358
  %361 = load i32, i32* %187, align 16
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %365, label %363

363:                                              ; preds = %360, %355, %350
  %364 = or i32 %347, 32
  store i32 %364, i32* %184, align 4
  br label %365

365:                                              ; preds = %363, %360, %358
  %366 = phi i32 [ %348, %360 ], [ %348, %358 ], [ %364, %363 ]
  %367 = and i32 %366, -65
  store i32 %367, i32* %184, align 4
  %368 = icmp eq i32 %172, 6
  br i1 %368, label %369, label %372

369:                                              ; preds = %365
  %370 = load i32, i32* %185, align 8
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %382

372:                                              ; preds = %369, %365
  %373 = icmp eq i32 %176, 6
  br i1 %373, label %374, label %377

374:                                              ; preds = %372
  %375 = load i32, i32* %186, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %382

377:                                              ; preds = %374, %372
  %378 = icmp eq i32 %179, 6
  br i1 %378, label %379, label %384

379:                                              ; preds = %377
  %380 = load i32, i32* %187, align 16
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %384, label %382

382:                                              ; preds = %379, %374, %369
  %383 = or i32 %366, 64
  store i32 %383, i32* %184, align 4
  br label %384

384:                                              ; preds = %382, %379, %377
  %385 = phi i32 [ %367, %379 ], [ %367, %377 ], [ %383, %382 ]
  %386 = and i32 %385, -129
  store i32 %386, i32* %184, align 4
  %387 = icmp eq i32 %172, 7
  br i1 %387, label %388, label %391

388:                                              ; preds = %384
  %389 = load i32, i32* %185, align 8
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %401

391:                                              ; preds = %388, %384
  %392 = icmp eq i32 %176, 7
  br i1 %392, label %393, label %396

393:                                              ; preds = %391
  %394 = load i32, i32* %186, align 4
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %401

396:                                              ; preds = %393, %391
  %397 = icmp eq i32 %179, 7
  br i1 %397, label %398, label %210

398:                                              ; preds = %396
  %399 = load i32, i32* %187, align 16
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %210, label %401

401:                                              ; preds = %398, %393, %388
  %402 = or i32 %385, 128
  store i32 %402, i32* %184, align 4
  br label %210
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_svc_adjust_frame_rate(%struct.VP9_COMP*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 64
  %3 = load i64, i64* %2, align 16
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 0
  %5 = load i32, i32* %4, align 16
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 63, i64 %6
  %8 = load i64, i64* %7, align 8
  %9 = mul nsw i64 %8, %3
  %10 = sitofp i64 %9 to double
  %11 = fdiv double 1.000000e+07, %10
  tail call void @vp9_new_framerate(%struct.VP9_COMP* %0, double %11) #6
  ret void
}

declare void @vp9_new_framerate(%struct.VP9_COMP*, double) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_svc_adjust_avg_frame_qindex(%struct.VP9_COMP* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %64

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %64

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %64

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 25
  %17 = load i32, i32* %16, align 8
  %18 = mul nsw i32 %17, 3
  %19 = icmp sgt i32 %15, %18
  br i1 %19, label %20, label %64

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 38
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 48
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, %24
  %28 = ashr i32 %27, 1
  %29 = icmp sgt i32 %22, %28
  %30 = select i1 %29, i32 %22, i32 %28
  store i32 %30, i32* %21, align 4
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %64

34:                                               ; preds = %20
  %35 = sext i32 %32 to i64
  %36 = add nsw i64 %35, -1
  %37 = and i64 %35, 3
  %38 = icmp ult i64 %36, 3
  br i1 %38, label %54, label %39

39:                                               ; preds = %34
  %40 = sub nsw i64 %35, %37
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %51, %41 ]
  %43 = phi i64 [ %40, %39 ], [ %52, %41 ]
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %42, i32 0, i32 31, i64 1
  store i32 %30, i32* %44, align 4
  %45 = or i64 %42, 1
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %45, i32 0, i32 31, i64 1
  store i32 %30, i32* %46, align 4
  %47 = or i64 %42, 2
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %47, i32 0, i32 31, i64 1
  store i32 %30, i32* %48, align 4
  %49 = or i64 %42, 3
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %49, i32 0, i32 31, i64 1
  store i32 %30, i32* %50, align 4
  %51 = add nuw nsw i64 %42, 4
  %52 = add i64 %43, -4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %41

54:                                               ; preds = %41, %34
  %55 = phi i64 [ 0, %34 ], [ %51, %41 ]
  %56 = icmp eq i64 %37, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %54, %57
  %58 = phi i64 [ %61, %57 ], [ %55, %54 ]
  %59 = phi i64 [ %62, %57 ], [ %37, %54 ]
  %60 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 12, i64 %58, i32 0, i32 31, i64 1
  store i32 %30, i32* %60, align 4
  %61 = add nuw nsw i64 %58, 1
  %62 = add i64 %59, -1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %57, !llvm.loop !7

64:                                               ; preds = %54, %57, %20, %9, %13, %5, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
