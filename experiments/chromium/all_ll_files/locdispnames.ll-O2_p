; ModuleID = '../../third_party/icu/source/common/locdispnames.cpp'
source_filename = "../../third_party/icu/source/common/locdispnames.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%struct.UResourceBundle = type { i8*, %struct.UResourceDataEntry*, i8*, %struct.UResourceDataEntry*, i8*, %struct.ResourceData, [64 x i8], i32, i32, i8, i8, i32, i32, i32, i32 }
%struct.UResourceDataEntry = type { i8*, i8*, %struct.UResourceDataEntry*, %struct.UResourceDataEntry*, %struct.UResourceDataEntry*, %struct.ResourceData, [3 x i8], i32, i32 }
%struct.ResourceData = type { %struct.UDataMemory*, i32*, i16*, i8*, i32, i32, i16*, i32, i32, i8, i8, i8, i8 }
%struct.UDataMemory = type opaque
%struct.UEnumeration = type opaque
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::CharStringByteSink" = type { %"class.icu_69::ByteSink", %"class.icu_69::CharString"* }
%"class.icu_69::ByteSink" = type { i32 (...)** }

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@_ZL19_kScriptsStandAlone = internal constant [20 x i8] c"Scripts%stand-alone\00", align 16
@_ZL9_kScripts = internal constant [8 x i8] c"Scripts\00", align 1
@_ZL11_kCountries = internal constant [10 x i8] c"Countries\00", align 1
@_ZL10_kVariants = internal constant [9 x i8] c"Variants\00", align 1
@_ZZ22uloc_getDisplayName_69E16defaultSeparator = internal constant [9 x i16] [i16 123, i16 48, i16 125, i16 44, i16 32, i16 123, i16 49, i16 125, i16 0], align 16
@_ZZ22uloc_getDisplayName_69E4sub0 = internal constant [4 x i16] [i16 123, i16 48, i16 125, i16 0], align 2
@_ZZ22uloc_getDisplayName_69E4sub1 = internal constant [4 x i16] [i16 123, i16 49, i16 125, i16 0], align 2
@_ZZ22uloc_getDisplayName_69E14defaultPattern = internal constant [10 x i16] [i16 123, i16 48, i16 125, i16 32, i16 40, i16 123, i16 49, i16 125, i16 41, i16 0], align 16
@.str = private unnamed_addr constant [14 x i8] c"icudt69l-lang\00", align 1
@_ZL22_kLocaleDisplayPattern = internal constant [21 x i8] c"localeDisplayPattern\00", align 16
@_ZL11_kSeparator = internal constant [10 x i8] c"separator\00", align 1
@_ZL9_kPattern = internal constant [8 x i8] c"pattern\00", align 1
@_ZL6_kKeys = internal constant [5 x i8] c"Keys\00", align 1
@_ZL10_kCurrency = internal constant [9 x i8] c"currency\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"icudt69l-curr\00", align 1
@_ZL12_kCurrencies = internal constant [11 x i8] c"Currencies\00", align 1
@_ZL7_kTypes = internal constant [6 x i8] c"Types\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"icudt69l-region\00", align 1
@.str.4 = private constant [10 x i8] c"Languages\00", align 1

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #9
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #10
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #10
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #10
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #10
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #9
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #9
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #10
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale18getDisplayLanguageERNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %4 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale18getDisplayLanguageERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* %0, %"class.icu_69::Locale"* dereferenceable(224) %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %1)
  ret %"class.icu_69::UnicodeString"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale18getDisplayLanguageERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::Locale"* nocapture readonly dereferenceable(224), %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca [628 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 0, i32* %7, align 4
  %9 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 157) #10
  %10 = icmp eq i16* %9, null
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %111

17:                                               ; preds = %11
  %18 = icmp slt i16 %13, 0
  %19 = lshr i16 %13, 5
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %111, label %25

25:                                               ; preds = %17
  %26 = and i16 %13, 31
  store i16 %26, i16* %12, align 8
  br label %111

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %0, i64 0, i32 7
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 7
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %33 = load i16, i16* %32, align 8
  %34 = and i16 %33, 2
  %35 = icmp eq i16 %34, 0
  %36 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = select i1 %35, i32 %37, i32 27
  %39 = getelementptr inbounds [628 x i8], [628 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 628, i1 false) #10
  %40 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #10
  store i32 -1431655766, i32* %4, align 4
  %41 = icmp slt i32 %38, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %27
  store i32 1, i32* %7, align 4
  br label %59

43:                                               ; preds = %27
  store i32 0, i32* %4, align 4
  %44 = call i32 @uloc_getLanguage_69(i8* %29, i8* nonnull %39, i32 628, i32* nonnull %4) #10, !callees !2
  %45 = load i32, i32* %4, align 4
  %46 = icmp sgt i32 %45, 0
  %47 = icmp eq i32 %45, -124
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  store i32 1, i32* %7, align 4
  br label %59

50:                                               ; preds = %43
  %51 = icmp eq i32 %44, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = bitcast [628 x i8]* %5 to i32*
  store i32 6581877, i32* %53, align 16
  br label %54

54:                                               ; preds = %52, %50
  %55 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* null, i8* nonnull %39, i8* nonnull %39, i16* nonnull %9, i32 %38, i32* nonnull %7) #10
  %56 = load i32, i32* %7, align 4
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 0, i32 %55
  br label %59

59:                                               ; preds = %42, %49, %54
  %60 = phi i32 [ 0, %42 ], [ 0, %49 ], [ %58, %54 ]
  %61 = phi i32 [ 0, %42 ], [ 0, %49 ], [ %55, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %39) #10
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %60) #10
  %62 = load i32, i32* %7, align 4
  %63 = icmp eq i32 %62, 15
  br i1 %63, label %64, label %111

64:                                               ; preds = %59
  %65 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %61) #10
  %66 = icmp eq i16* %65, null
  br i1 %66, label %67, label %82

67:                                               ; preds = %64
  %68 = load i16, i16* %32, align 8
  %69 = and i16 %68, 1
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %111

72:                                               ; preds = %67
  %73 = icmp slt i16 %68, 0
  %74 = lshr i16 %68, 5
  %75 = zext i16 %74 to i32
  %76 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = select i1 %73, i32 %77, i32 %75
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %111, label %80

80:                                               ; preds = %72
  %81 = and i16 %68, 31
  store i16 %81, i16* %32, align 8
  br label %111

82:                                               ; preds = %64
  store i32 0, i32* %7, align 4
  %83 = load i8*, i8** %28, align 8
  %84 = load i8*, i8** %30, align 8
  %85 = load i16, i16* %32, align 8
  %86 = and i16 %85, 2
  %87 = icmp eq i16 %86, 0
  %88 = load i32, i32* %36, align 8
  %89 = select i1 %87, i32 %88, i32 27
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 628, i1 false) #10
  %90 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #10
  store i32 -1431655766, i32* %6, align 4
  %91 = icmp slt i32 %89, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %82
  store i32 1, i32* %7, align 4
  br label %109

93:                                               ; preds = %82
  store i32 0, i32* %6, align 4
  %94 = call i32 @uloc_getLanguage_69(i8* %83, i8* nonnull %39, i32 628, i32* nonnull %6) #10, !callees !2
  %95 = load i32, i32* %6, align 4
  %96 = icmp sgt i32 %95, 0
  %97 = icmp eq i32 %95, -124
  %98 = or i1 %96, %97
  br i1 %98, label %99, label %100

99:                                               ; preds = %93
  store i32 1, i32* %7, align 4
  br label %109

100:                                              ; preds = %93
  %101 = icmp eq i32 %94, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %100
  %103 = bitcast [628 x i8]* %5 to i32*
  store i32 6581877, i32* %103, align 16
  br label %104

104:                                              ; preds = %102, %100
  %105 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %84, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* null, i8* nonnull %39, i8* nonnull %39, i16* nonnull %65, i32 %89, i32* nonnull %7) #10
  %106 = load i32, i32* %7, align 4
  %107 = icmp sgt i32 %106, 0
  %108 = select i1 %107, i32 0, i32 %105
  br label %109

109:                                              ; preds = %92, %99, %104
  %110 = phi i32 [ 0, %92 ], [ 0, %99 ], [ %108, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %39) #10
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %110) #10
  br label %111

111:                                              ; preds = %17, %72, %80, %71, %25, %16, %59, %109
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  ret %"class.icu_69::UnicodeString"* %2
}

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() local_unnamed_addr #4

declare i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_getDisplayLanguage_69(i8*, i8*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca [628 x i8], align 16
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds [628 x i8], [628 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 628, i1 false) #10
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  store i32 -1431655766, i32* %7, align 4
  %10 = icmp eq i32* %4, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %5
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %34

14:                                               ; preds = %11
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = icmp ne i32 %3, 0
  %18 = icmp eq i16* %2, null
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %21

20:                                               ; preds = %16, %14
  store i32 1, i32* %4, align 4
  br label %34

21:                                               ; preds = %16
  store i32 0, i32* %7, align 4
  %22 = call i32 @uloc_getLanguage_69(i8* %0, i8* nonnull %8, i32 628, i32* nonnull %7) #10, !callees !2
  %23 = load i32, i32* %7, align 4
  %24 = icmp sgt i32 %23, 0
  %25 = icmp eq i32 %23, -124
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  store i32 1, i32* %4, align 4
  br label %34

28:                                               ; preds = %21
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast [628 x i8]* %6 to i32*
  store i32 6581877, i32* %31, align 16
  br label %32

32:                                               ; preds = %30, %28
  %33 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* null, i8* nonnull %8, i8* nonnull %8, i16* %2, i32 %3, i32* nonnull %4) #10
  br label %34

34:                                               ; preds = %5, %11, %20, %27, %32
  %35 = phi i32 [ 0, %20 ], [ 0, %27 ], [ %33, %32 ], [ 0, %11 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %8) #10
  ret i32 %35
}

declare void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale16getDisplayScriptERNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %4 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale16getDisplayScriptERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* %0, %"class.icu_69::Locale"* dereferenceable(224) %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %1)
  ret %"class.icu_69::UnicodeString"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale16getDisplayScriptERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::Locale"* nocapture readonly dereferenceable(224), %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 0, i32* %4, align 4
  %6 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 157) #10
  %7 = icmp eq i16* %6, null
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = and i16 %10, 1
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %72

14:                                               ; preds = %8
  %15 = icmp slt i16 %10, 0
  %16 = lshr i16 %10, 5
  %17 = zext i16 %16 to i32
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = select i1 %15, i32 %19, i32 %17
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %72, label %22

22:                                               ; preds = %14
  %23 = and i16 %10, 31
  store i16 %23, i16* %9, align 8
  br label %72

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %0, i64 0, i32 7
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 7
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %30 = load i16, i16* %29, align 8
  %31 = and i16 %30, 2
  %32 = icmp eq i16 %31, 0
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = select i1 %32, i32 %34, i32 27
  %36 = call i32 @uloc_getDisplayScript_69(i8* %26, i8* %28, i16* nonnull %6, i32 %35, i32* nonnull %4)
  %37 = load i32, i32* %4, align 4
  %38 = icmp sgt i32 %37, 0
  %39 = select i1 %38, i32 0, i32 %36
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %39) #10
  %40 = load i32, i32* %4, align 4
  %41 = icmp eq i32 %40, 15
  br i1 %41, label %42, label %72

42:                                               ; preds = %24
  %43 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %36) #10
  %44 = icmp eq i16* %43, null
  br i1 %44, label %45, label %60

45:                                               ; preds = %42
  %46 = load i16, i16* %29, align 8
  %47 = and i16 %46, 1
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %72

50:                                               ; preds = %45
  %51 = icmp slt i16 %46, 0
  %52 = lshr i16 %46, 5
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = select i1 %51, i32 %55, i32 %53
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %72, label %58

58:                                               ; preds = %50
  %59 = and i16 %46, 31
  store i16 %59, i16* %29, align 8
  br label %72

60:                                               ; preds = %42
  store i32 0, i32* %4, align 4
  %61 = load i8*, i8** %25, align 8
  %62 = load i8*, i8** %27, align 8
  %63 = load i16, i16* %29, align 8
  %64 = and i16 %63, 2
  %65 = icmp eq i16 %64, 0
  %66 = load i32, i32* %33, align 8
  %67 = select i1 %65, i32 %66, i32 27
  %68 = call i32 @uloc_getDisplayScript_69(i8* %61, i8* %62, i16* nonnull %43, i32 %67, i32* nonnull %4)
  %69 = load i32, i32* %4, align 4
  %70 = icmp sgt i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %68
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %71) #10
  br label %72

72:                                               ; preds = %14, %50, %58, %49, %22, %13, %24, %60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret %"class.icu_69::UnicodeString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_getDisplayScript_69(i8*, i8*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [628 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  store i32 0, i32* %10, align 4
  %12 = getelementptr inbounds [628 x i8], [628 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 628, i1 false) #10
  %13 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  store i32 -1431655766, i32* %9, align 4
  %14 = icmp slt i32 %3, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %5
  %16 = icmp ne i32 %3, 0
  %17 = icmp eq i16* %2, null
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %5
  store i32 1, i32* %10, align 4
  br label %36

20:                                               ; preds = %15
  store i32 0, i32* %9, align 4
  %21 = call i32 @uloc_getScript_69(i8* %0, i8* nonnull %12, i32 628, i32* nonnull %9) #10, !callees !2
  %22 = load i32, i32* %9, align 4
  %23 = icmp sgt i32 %22, 0
  %24 = icmp eq i32 %22, -124
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  store i32 1, i32* %10, align 4
  br label %36

27:                                               ; preds = %20
  %28 = icmp eq i32 %21, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 0, i32* nonnull %10) #10
  br label %33

31:                                               ; preds = %27
  %32 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZL19_kScriptsStandAlone, i64 0, i64 0), i8* null, i8* nonnull %12, i8* nonnull %12, i16* %2, i32 %3, i32* nonnull %10) #10
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ %30, %29 ], [ %32, %31 ]
  %35 = load i32, i32* %10, align 4
  br label %36

36:                                               ; preds = %33, %19, %26
  %37 = phi i32 [ %35, %33 ], [ 1, %19 ], [ 1, %26 ]
  %38 = phi i32 [ %34, %33 ], [ 0, %19 ], [ 0, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %12) #10
  %39 = icmp eq i32 %3, 0
  %40 = icmp eq i32 %37, 15
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %65

42:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 628, i1 false) #10
  %43 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #10
  store i32 -1431655766, i32* %7, align 4
  %44 = icmp eq i32* %4, null
  br i1 %44, label %61, label %45

45:                                               ; preds = %42
  %46 = load i32, i32* %4, align 4
  %47 = icmp slt i32 %46, 1
  br i1 %47, label %48, label %61

48:                                               ; preds = %45
  store i32 0, i32* %7, align 4
  %49 = call i32 @uloc_getScript_69(i8* %0, i8* nonnull %12, i32 628, i32* nonnull %7) #10, !callees !2
  %50 = load i32, i32* %7, align 4
  %51 = icmp sgt i32 %50, 0
  %52 = icmp eq i32 %50, -124
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %48
  store i32 1, i32* %4, align 4
  br label %61

55:                                               ; preds = %48
  %56 = icmp eq i32 %49, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = call i32 @u_terminateUChars_69(i16* %2, i32 0, i32 0, i32* nonnull %4) #10
  br label %61

59:                                               ; preds = %55
  %60 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZL9_kScripts, i64 0, i64 0), i8* null, i8* nonnull %12, i8* nonnull %12, i16* %2, i32 0, i32* nonnull %4) #10
  br label %61

61:                                               ; preds = %42, %45, %54, %57, %59
  %62 = phi i32 [ 0, %54 ], [ %60, %59 ], [ %58, %57 ], [ 0, %45 ], [ 0, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %12) #10
  %63 = icmp sgt i32 %62, %38
  %64 = select i1 %63, i32 %62, i32 %38
  br label %95

65:                                               ; preds = %36
  %66 = icmp eq i32 %37, -127
  br i1 %66, label %67, label %94

67:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 628, i1 false) #10
  %68 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #10
  store i32 -1431655766, i32* %6, align 4
  %69 = icmp eq i32* %4, null
  br i1 %69, label %92, label %70

70:                                               ; preds = %67
  %71 = load i32, i32* %4, align 4
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %73, label %92

73:                                               ; preds = %70
  br i1 %14, label %78, label %74

74:                                               ; preds = %73
  %75 = icmp ne i32 %3, 0
  %76 = icmp eq i16* %2, null
  %77 = and i1 %76, %75
  br i1 %77, label %78, label %79

78:                                               ; preds = %74, %73
  store i32 1, i32* %4, align 4
  br label %92

79:                                               ; preds = %74
  store i32 0, i32* %6, align 4
  %80 = call i32 @uloc_getScript_69(i8* %0, i8* nonnull %12, i32 628, i32* nonnull %6) #10, !callees !2
  %81 = load i32, i32* %6, align 4
  %82 = icmp sgt i32 %81, 0
  %83 = icmp eq i32 %81, -124
  %84 = or i1 %82, %83
  br i1 %84, label %85, label %86

85:                                               ; preds = %79
  store i32 1, i32* %4, align 4
  br label %92

86:                                               ; preds = %79
  %87 = icmp eq i32 %80, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 0, i32* nonnull %4) #10
  br label %92

90:                                               ; preds = %86
  %91 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZL9_kScripts, i64 0, i64 0), i8* null, i8* nonnull %12, i8* nonnull %12, i16* %2, i32 %3, i32* nonnull %4) #10
  br label %92

92:                                               ; preds = %67, %70, %78, %85, %88, %90
  %93 = phi i32 [ 0, %78 ], [ 0, %85 ], [ %91, %90 ], [ %89, %88 ], [ 0, %70 ], [ 0, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %12) #10
  br label %95

94:                                               ; preds = %65
  store i32 %37, i32* %4, align 4
  br label %95

95:                                               ; preds = %94, %92, %61
  %96 = phi i32 [ %64, %61 ], [ %93, %92 ], [ %38, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale17getDisplayCountryERNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %4 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale17getDisplayCountryERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* %0, %"class.icu_69::Locale"* dereferenceable(224) %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %1)
  ret %"class.icu_69::UnicodeString"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale17getDisplayCountryERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::Locale"* nocapture readonly dereferenceable(224), %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca [628 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 0, i32* %7, align 4
  %9 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 157) #10
  %10 = icmp eq i16* %9, null
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %110

17:                                               ; preds = %11
  %18 = icmp slt i16 %13, 0
  %19 = lshr i16 %13, 5
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %110, label %25

25:                                               ; preds = %17
  %26 = and i16 %13, 31
  store i16 %26, i16* %12, align 8
  br label %110

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %0, i64 0, i32 7
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 7
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %33 = load i16, i16* %32, align 8
  %34 = and i16 %33, 2
  %35 = icmp eq i16 %34, 0
  %36 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = select i1 %35, i32 %37, i32 27
  %39 = getelementptr inbounds [628 x i8], [628 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 628, i1 false) #10
  %40 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #10
  store i32 -1431655766, i32* %4, align 4
  %41 = icmp slt i32 %38, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %27
  store i32 1, i32* %7, align 4
  br label %56

43:                                               ; preds = %27
  store i32 0, i32* %4, align 4
  %44 = call i32 @uloc_getCountry_69(i8* %29, i8* nonnull %39, i32 628, i32* nonnull %4) #10, !callees !2
  %45 = load i32, i32* %4, align 4
  %46 = icmp sgt i32 %45, 0
  %47 = icmp eq i32 %45, -124
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  store i32 1, i32* %7, align 4
  br label %56

50:                                               ; preds = %43
  %51 = icmp eq i32 %44, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = call i32 @u_terminateUChars_69(i16* nonnull %9, i32 %38, i32 0, i32* nonnull %7) #10
  br label %56

54:                                               ; preds = %50
  %55 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL11_kCountries, i64 0, i64 0), i8* null, i8* nonnull %39, i8* nonnull %39, i16* nonnull %9, i32 %38, i32* nonnull %7) #10
  br label %56

56:                                               ; preds = %42, %49, %52, %54
  %57 = phi i32 [ 0, %42 ], [ 0, %49 ], [ %55, %54 ], [ %53, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %39) #10
  %58 = load i32, i32* %7, align 4
  %59 = icmp sgt i32 %58, 0
  %60 = select i1 %59, i32 0, i32 %57
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %60) #10
  %61 = load i32, i32* %7, align 4
  %62 = icmp eq i32 %61, 15
  br i1 %62, label %63, label %110

63:                                               ; preds = %56
  %64 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %57) #10
  %65 = icmp eq i16* %64, null
  br i1 %65, label %66, label %81

66:                                               ; preds = %63
  %67 = load i16, i16* %32, align 8
  %68 = and i16 %67, 1
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %110

71:                                               ; preds = %66
  %72 = icmp slt i16 %67, 0
  %73 = lshr i16 %67, 5
  %74 = zext i16 %73 to i32
  %75 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = select i1 %72, i32 %76, i32 %74
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %110, label %79

79:                                               ; preds = %71
  %80 = and i16 %67, 31
  store i16 %80, i16* %32, align 8
  br label %110

81:                                               ; preds = %63
  store i32 0, i32* %7, align 4
  %82 = load i8*, i8** %28, align 8
  %83 = load i8*, i8** %30, align 8
  %84 = load i16, i16* %32, align 8
  %85 = and i16 %84, 2
  %86 = icmp eq i16 %85, 0
  %87 = load i32, i32* %36, align 8
  %88 = select i1 %86, i32 %87, i32 27
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 628, i1 false) #10
  %89 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #10
  store i32 -1431655766, i32* %6, align 4
  %90 = icmp slt i32 %88, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %81
  store i32 1, i32* %7, align 4
  br label %105

92:                                               ; preds = %81
  store i32 0, i32* %6, align 4
  %93 = call i32 @uloc_getCountry_69(i8* %82, i8* nonnull %39, i32 628, i32* nonnull %6) #10, !callees !2
  %94 = load i32, i32* %6, align 4
  %95 = icmp sgt i32 %94, 0
  %96 = icmp eq i32 %94, -124
  %97 = or i1 %95, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %92
  store i32 1, i32* %7, align 4
  br label %105

99:                                               ; preds = %92
  %100 = icmp eq i32 %93, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = call i32 @u_terminateUChars_69(i16* nonnull %64, i32 %88, i32 0, i32* nonnull %7) #10
  br label %105

103:                                              ; preds = %99
  %104 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* %83, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL11_kCountries, i64 0, i64 0), i8* null, i8* nonnull %39, i8* nonnull %39, i16* nonnull %64, i32 %88, i32* nonnull %7) #10
  br label %105

105:                                              ; preds = %91, %98, %101, %103
  %106 = phi i32 [ 0, %91 ], [ 0, %98 ], [ %104, %103 ], [ %102, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %39) #10
  %107 = load i32, i32* %7, align 4
  %108 = icmp sgt i32 %107, 0
  %109 = select i1 %108, i32 0, i32 %106
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %109) #10
  br label %110

110:                                              ; preds = %17, %71, %79, %70, %25, %16, %56, %105
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  ret %"class.icu_69::UnicodeString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_getDisplayCountry_69(i8*, i8*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca [628 x i8], align 16
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds [628 x i8], [628 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 628, i1 false) #10
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  store i32 -1431655766, i32* %7, align 4
  %10 = icmp eq i32* %4, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %5
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %34

14:                                               ; preds = %11
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = icmp ne i32 %3, 0
  %18 = icmp eq i16* %2, null
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %21

20:                                               ; preds = %16, %14
  store i32 1, i32* %4, align 4
  br label %34

21:                                               ; preds = %16
  store i32 0, i32* %7, align 4
  %22 = call i32 @uloc_getCountry_69(i8* %0, i8* nonnull %8, i32 628, i32* nonnull %7) #10, !callees !2
  %23 = load i32, i32* %7, align 4
  %24 = icmp sgt i32 %23, 0
  %25 = icmp eq i32 %23, -124
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  store i32 1, i32* %4, align 4
  br label %34

28:                                               ; preds = %21
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 0, i32* nonnull %4) #10
  br label %34

32:                                               ; preds = %28
  %33 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL11_kCountries, i64 0, i64 0), i8* null, i8* nonnull %8, i8* nonnull %8, i16* %2, i32 %3, i32* nonnull %4) #10
  br label %34

34:                                               ; preds = %5, %11, %20, %27, %30, %32
  %35 = phi i32 [ 0, %20 ], [ 0, %27 ], [ %33, %32 ], [ %31, %30 ], [ 0, %11 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %8) #10
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale17getDisplayVariantERNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %4 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale17getDisplayVariantERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* %0, %"class.icu_69::Locale"* dereferenceable(224) %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %1)
  ret %"class.icu_69::UnicodeString"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale17getDisplayVariantERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::Locale"* nocapture readonly dereferenceable(224), %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca [628 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 0, i32* %7, align 4
  %9 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 157) #10
  %10 = icmp eq i16* %9, null
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %110

17:                                               ; preds = %11
  %18 = icmp slt i16 %13, 0
  %19 = lshr i16 %13, 5
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %110, label %25

25:                                               ; preds = %17
  %26 = and i16 %13, 31
  store i16 %26, i16* %12, align 8
  br label %110

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %0, i64 0, i32 7
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 7
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %33 = load i16, i16* %32, align 8
  %34 = and i16 %33, 2
  %35 = icmp eq i16 %34, 0
  %36 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = select i1 %35, i32 %37, i32 27
  %39 = getelementptr inbounds [628 x i8], [628 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 628, i1 false) #10
  %40 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #10
  store i32 -1431655766, i32* %4, align 4
  %41 = icmp slt i32 %38, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %27
  store i32 1, i32* %7, align 4
  br label %56

43:                                               ; preds = %27
  store i32 0, i32* %4, align 4
  %44 = call i32 @uloc_getVariant_69(i8* %29, i8* nonnull %39, i32 628, i32* nonnull %4) #10, !callees !2
  %45 = load i32, i32* %4, align 4
  %46 = icmp sgt i32 %45, 0
  %47 = icmp eq i32 %45, -124
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  store i32 1, i32* %7, align 4
  br label %56

50:                                               ; preds = %43
  %51 = icmp eq i32 %44, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = call i32 @u_terminateUChars_69(i16* nonnull %9, i32 %38, i32 0, i32* nonnull %7) #10
  br label %56

54:                                               ; preds = %50
  %55 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL10_kVariants, i64 0, i64 0), i8* null, i8* nonnull %39, i8* nonnull %39, i16* nonnull %9, i32 %38, i32* nonnull %7) #10
  br label %56

56:                                               ; preds = %42, %49, %52, %54
  %57 = phi i32 [ 0, %42 ], [ 0, %49 ], [ %55, %54 ], [ %53, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %39) #10
  %58 = load i32, i32* %7, align 4
  %59 = icmp sgt i32 %58, 0
  %60 = select i1 %59, i32 0, i32 %57
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %60) #10
  %61 = load i32, i32* %7, align 4
  %62 = icmp eq i32 %61, 15
  br i1 %62, label %63, label %110

63:                                               ; preds = %56
  %64 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %57) #10
  %65 = icmp eq i16* %64, null
  br i1 %65, label %66, label %81

66:                                               ; preds = %63
  %67 = load i16, i16* %32, align 8
  %68 = and i16 %67, 1
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %110

71:                                               ; preds = %66
  %72 = icmp slt i16 %67, 0
  %73 = lshr i16 %67, 5
  %74 = zext i16 %73 to i32
  %75 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = select i1 %72, i32 %76, i32 %74
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %110, label %79

79:                                               ; preds = %71
  %80 = and i16 %67, 31
  store i16 %80, i16* %32, align 8
  br label %110

81:                                               ; preds = %63
  store i32 0, i32* %7, align 4
  %82 = load i8*, i8** %28, align 8
  %83 = load i8*, i8** %30, align 8
  %84 = load i16, i16* %32, align 8
  %85 = and i16 %84, 2
  %86 = icmp eq i16 %85, 0
  %87 = load i32, i32* %36, align 8
  %88 = select i1 %86, i32 %87, i32 27
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 628, i1 false) #10
  %89 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #10
  store i32 -1431655766, i32* %6, align 4
  %90 = icmp slt i32 %88, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %81
  store i32 1, i32* %7, align 4
  br label %105

92:                                               ; preds = %81
  store i32 0, i32* %6, align 4
  %93 = call i32 @uloc_getVariant_69(i8* %82, i8* nonnull %39, i32 628, i32* nonnull %6) #10, !callees !2
  %94 = load i32, i32* %6, align 4
  %95 = icmp sgt i32 %94, 0
  %96 = icmp eq i32 %94, -124
  %97 = or i1 %95, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %92
  store i32 1, i32* %7, align 4
  br label %105

99:                                               ; preds = %92
  %100 = icmp eq i32 %93, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = call i32 @u_terminateUChars_69(i16* nonnull %64, i32 %88, i32 0, i32* nonnull %7) #10
  br label %105

103:                                              ; preds = %99
  %104 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %83, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL10_kVariants, i64 0, i64 0), i8* null, i8* nonnull %39, i8* nonnull %39, i16* nonnull %64, i32 %88, i32* nonnull %7) #10
  br label %105

105:                                              ; preds = %91, %98, %101, %103
  %106 = phi i32 [ 0, %91 ], [ 0, %98 ], [ %104, %103 ], [ %102, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %39) #10
  %107 = load i32, i32* %7, align 4
  %108 = icmp sgt i32 %107, 0
  %109 = select i1 %108, i32 0, i32 %106
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %109) #10
  br label %110

110:                                              ; preds = %17, %71, %79, %70, %25, %16, %56, %105
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  ret %"class.icu_69::UnicodeString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_getDisplayVariant_69(i8*, i8*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca [628 x i8], align 16
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds [628 x i8], [628 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 628, i1 false) #10
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  store i32 -1431655766, i32* %7, align 4
  %10 = icmp eq i32* %4, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %5
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %34

14:                                               ; preds = %11
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = icmp ne i32 %3, 0
  %18 = icmp eq i16* %2, null
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %21

20:                                               ; preds = %16, %14
  store i32 1, i32* %4, align 4
  br label %34

21:                                               ; preds = %16
  store i32 0, i32* %7, align 4
  %22 = call i32 @uloc_getVariant_69(i8* %0, i8* nonnull %8, i32 628, i32* nonnull %7) #10, !callees !2
  %23 = load i32, i32* %7, align 4
  %24 = icmp sgt i32 %23, 0
  %25 = icmp eq i32 %23, -124
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  store i32 1, i32* %4, align 4
  br label %34

28:                                               ; preds = %21
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 0, i32* nonnull %4) #10
  br label %34

32:                                               ; preds = %28
  %33 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL10_kVariants, i64 0, i64 0), i8* null, i8* nonnull %8, i8* nonnull %8, i16* %2, i32 %3, i32* nonnull %4) #10
  br label %34

34:                                               ; preds = %5, %11, %20, %27, %30, %32
  %35 = phi i32 [ 0, %20 ], [ 0, %27 ], [ %33, %32 ], [ %31, %30 ], [ 0, %11 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %8) #10
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale14getDisplayNameERNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %4 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale14getDisplayNameERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* %0, %"class.icu_69::Locale"* dereferenceable(224) %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %1)
  ret %"class.icu_69::UnicodeString"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale14getDisplayNameERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly, %"class.icu_69::Locale"* nocapture readonly dereferenceable(224), %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 0, i32* %4, align 4
  %6 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 157) #10
  %7 = icmp eq i16* %6, null
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = and i16 %10, 1
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %72

14:                                               ; preds = %8
  %15 = icmp slt i16 %10, 0
  %16 = lshr i16 %10, 5
  %17 = zext i16 %16 to i32
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = select i1 %15, i32 %19, i32 %17
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %72, label %22

22:                                               ; preds = %14
  %23 = and i16 %10, 31
  store i16 %23, i16* %9, align 8
  br label %72

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %0, i64 0, i32 7
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 7
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %30 = load i16, i16* %29, align 8
  %31 = and i16 %30, 2
  %32 = icmp eq i16 %31, 0
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = select i1 %32, i32 %34, i32 27
  %36 = call i32 @uloc_getDisplayName_69(i8* %26, i8* %28, i16* nonnull %6, i32 %35, i32* nonnull %4)
  %37 = load i32, i32* %4, align 4
  %38 = icmp sgt i32 %37, 0
  %39 = select i1 %38, i32 0, i32 %36
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %39) #10
  %40 = load i32, i32* %4, align 4
  %41 = icmp eq i32 %40, 15
  br i1 %41, label %42, label %72

42:                                               ; preds = %24
  %43 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %36) #10
  %44 = icmp eq i16* %43, null
  br i1 %44, label %45, label %60

45:                                               ; preds = %42
  %46 = load i16, i16* %29, align 8
  %47 = and i16 %46, 1
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #10
  br label %72

50:                                               ; preds = %45
  %51 = icmp slt i16 %46, 0
  %52 = lshr i16 %46, 5
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = select i1 %51, i32 %55, i32 %53
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %72, label %58

58:                                               ; preds = %50
  %59 = and i16 %46, 31
  store i16 %59, i16* %29, align 8
  br label %72

60:                                               ; preds = %42
  store i32 0, i32* %4, align 4
  %61 = load i8*, i8** %25, align 8
  %62 = load i8*, i8** %27, align 8
  %63 = load i16, i16* %29, align 8
  %64 = and i16 %63, 2
  %65 = icmp eq i16 %64, 0
  %66 = load i32, i32* %33, align 8
  %67 = select i1 %65, i32 %66, i32 27
  %68 = call i32 @uloc_getDisplayName_69(i8* %61, i8* %62, i16* nonnull %43, i32 %67, i32* nonnull %4)
  %69 = load i32, i32* %4, align 4
  %70 = icmp sgt i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %68
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %2, i32 %71) #10
  br label %72

72:                                               ; preds = %14, %50, %58, %49, %22, %13, %24, %60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret %"class.icu_69::UnicodeString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_getDisplayName_69(i8*, i8*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca [628 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  store i32 0, i32* %9, align 4
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 0, i32* %10, align 4
  %15 = icmp eq i32* %4, null
  br i1 %15, label %678, label %16

16:                                               ; preds = %5
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %678

19:                                               ; preds = %16
  %20 = icmp slt i32 %3, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = icmp ne i32 %3, 0
  %23 = icmp eq i16* %2, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %26

25:                                               ; preds = %21, %19
  store i32 1, i32* %4, align 4
  br label %678

26:                                               ; preds = %21
  %27 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #10
  store i32 0, i32* %11, align 4
  %28 = call %struct.UResourceBundle* @ures_open_69(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i32* nonnull %11) #10
  %29 = call %struct.UResourceBundle* @ures_getByKeyWithFallback_69(%struct.UResourceBundle* %28, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZL22_kLocaleDisplayPattern, i64 0, i64 0), %struct.UResourceBundle* null, i32* nonnull %11) #10
  %30 = call i16* @ures_getStringByKeyWithFallback_69(%struct.UResourceBundle* %29, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL11_kSeparator, i64 0, i64 0), i32* nonnull %9, i32* nonnull %11) #10
  %31 = call i16* @ures_getStringByKeyWithFallback_69(%struct.UResourceBundle* %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZL9_kPattern, i64 0, i64 0), i32* nonnull %10, i32* nonnull %11) #10
  %32 = icmp eq %struct.UResourceBundle* %29, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %26
  call void @ures_close_69(%struct.UResourceBundle* nonnull %29) #10
  br label %34

34:                                               ; preds = %26, %33
  %35 = icmp eq %struct.UResourceBundle* %28, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  call void @ures_close_69(%struct.UResourceBundle* nonnull %28) #10
  br label %37

37:                                               ; preds = %34, %36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #10
  %38 = load i32, i32* %9, align 4
  %39 = icmp eq i32 %38, 0
  %40 = select i1 %39, i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZZ22uloc_getDisplayName_69E16defaultSeparator, i64 0, i64 0), i16* %30
  %41 = call i16* @u_strstr_69(i16* %40, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZ22uloc_getDisplayName_69E4sub0, i64 0, i64 0)) #10
  %42 = call i16* @u_strstr_69(i16* %40, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZ22uloc_getDisplayName_69E4sub1, i64 0, i64 0)) #10
  %43 = icmp eq i16* %41, null
  %44 = icmp eq i16* %42, null
  %45 = or i1 %43, %44
  %46 = icmp ult i16* %42, %41
  %47 = or i1 %46, %45
  br i1 %47, label %48, label %49

48:                                               ; preds = %37
  store i32 1, i32* %4, align 4
  br label %678

49:                                               ; preds = %37
  %50 = getelementptr inbounds i16, i16* %41, i64 3
  %51 = ptrtoint i16* %42 to i64
  %52 = ptrtoint i16* %50 to i64
  %53 = sub i64 %51, %52
  %54 = lshr exact i64 %53, 1
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %9, align 4
  %56 = load i32, i32* %10, align 4
  switch i32 %56, label %61 [
    i32 0, label %60
    i32 9, label %57
  ]

57:                                               ; preds = %49
  %58 = call i32 @u_strncmp_69(i16* %31, i16* getelementptr inbounds ([10 x i16], [10 x i16]* @_ZZ22uloc_getDisplayName_69E14defaultPattern, i64 0, i64 0), i32 9) #10
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %49, %57
  store i32 9, i32* %10, align 4
  br label %88

61:                                               ; preds = %49, %57
  %62 = call i16* @u_strstr_69(i16* %31, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZ22uloc_getDisplayName_69E4sub0, i64 0, i64 0)) #10
  %63 = call i16* @u_strstr_69(i16* %31, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZZ22uloc_getDisplayName_69E4sub1, i64 0, i64 0)) #10
  %64 = icmp eq i16* %62, null
  %65 = icmp eq i16* %63, null
  %66 = or i1 %64, %65
  br i1 %66, label %87, label %67

67:                                               ; preds = %61
  %68 = ptrtoint i16* %62 to i64
  %69 = ptrtoint i16* %31 to i64
  %70 = sub i64 %68, %69
  %71 = lshr exact i64 %70, 1
  %72 = trunc i64 %71 to i32
  %73 = ptrtoint i16* %63 to i64
  %74 = sub i64 %73, %69
  %75 = lshr exact i64 %74, 1
  %76 = trunc i64 %75 to i32
  %77 = icmp slt i32 %76, %72
  %78 = select i1 %77, i32 %76, i32 %72
  %79 = select i1 %77, i32 %72, i32 %76
  %80 = zext i1 %77 to i32
  %81 = call i16* @u_strchr_69(i16* %31, i16 zeroext -248) #10
  %82 = icmp eq i16* %81, null
  %83 = select i1 %82, i32 40, i32 65288
  %84 = select i1 %82, i16 91, i16 -197
  %85 = select i1 %82, i32 41, i32 65289
  %86 = select i1 %82, i16 93, i16 -195
  br label %88

87:                                               ; preds = %61
  store i32 1, i32* %4, align 4
  br label %678

88:                                               ; preds = %67, %60
  %89 = phi i16* [ getelementptr inbounds ([10 x i16], [10 x i16]* @_ZZ22uloc_getDisplayName_69E14defaultPattern, i64 0, i64 0), %60 ], [ %31, %67 ]
  %90 = phi i32 [ 0, %60 ], [ %78, %67 ]
  %91 = phi i32 [ 5, %60 ], [ %79, %67 ]
  %92 = phi i32 [ 40, %60 ], [ %83, %67 ]
  %93 = phi i16 [ 91, %60 ], [ %84, %67 ]
  %94 = phi i32 [ 41, %60 ], [ %85, %67 ]
  %95 = phi i16 [ 93, %60 ], [ %86, %67 ]
  %96 = phi i32 [ 0, %60 ], [ %80, %67 ]
  %97 = bitcast i32* %12 to i8*
  %98 = getelementptr inbounds [628 x i8], [628 x i8]* %7, i64 0, i64 0
  %99 = bitcast i32* %8 to i8*
  %100 = bitcast i32* %6 to i8*
  %101 = bitcast [628 x i8]* %7 to i32*
  %102 = icmp ne i16* %2, null
  %103 = getelementptr i16, i16* %2, i64 1
  %104 = getelementptr i16, i16* %89, i64 1
  br label %105

105:                                              ; preds = %268, %88
  %106 = phi i32 [ %90, %88 ], [ %670, %268 ]
  %107 = phi i8 [ 1, %88 ], [ %475, %268 ]
  %108 = phi i8 [ 1, %88 ], [ %476, %268 ]
  %109 = phi i8 [ 0, %88 ], [ %671, %268 ]
  %110 = icmp eq i32 %106, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %105
  %112 = icmp sgt i32 %106, %3
  br i1 %112, label %113, label %116

113:                                              ; preds = %224, %229, %205, %116, %105, %111
  %114 = phi i32 [ %106, %111 ], [ 0, %105 ], [ 0, %116 ], [ %106, %205 ], [ %106, %229 ], [ %106, %224 ]
  %115 = phi i16* [ %2, %111 ], [ %2, %105 ], [ %2, %116 ], [ %129, %205 ], [ %225, %224 ], [ %263, %229 ]
  br label %270

116:                                              ; preds = %111
  %117 = icmp sgt i32 %106, 0
  br i1 %117, label %118, label %113

118:                                              ; preds = %116
  %119 = zext i32 %106 to i64
  %120 = icmp ult i32 %106, 16
  br i1 %120, label %207, label %121

121:                                              ; preds = %118
  %122 = getelementptr i16, i16* %2, i64 %119
  %123 = getelementptr i16, i16* %89, i64 %119
  %124 = icmp ugt i16* %123, %2
  %125 = icmp ult i16* %89, %122
  %126 = and i1 %124, %125
  br i1 %126, label %207, label %127

127:                                              ; preds = %121
  %128 = and i64 %119, 4294967280
  %129 = getelementptr i16, i16* %2, i64 %128
  %130 = add nsw i64 %128, -16
  %131 = lshr exact i64 %130, 4
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 3
  %134 = icmp ult i64 %130, 48
  br i1 %134, label %186, label %135

135:                                              ; preds = %127
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %183, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %184, %137 ]
  %140 = getelementptr i16, i16* %2, i64 %138
  %141 = getelementptr inbounds i16, i16* %89, i64 %138
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !3
  %144 = getelementptr inbounds i16, i16* %141, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !3
  %147 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !6, !noalias !3
  %148 = getelementptr i16, i16* %140, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !6, !noalias !3
  %150 = or i64 %138, 16
  %151 = getelementptr i16, i16* %2, i64 %150
  %152 = getelementptr inbounds i16, i16* %89, i64 %150
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !3
  %155 = getelementptr inbounds i16, i16* %152, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !3
  %158 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !6, !noalias !3
  %159 = getelementptr i16, i16* %151, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !6, !noalias !3
  %161 = or i64 %138, 32
  %162 = getelementptr i16, i16* %2, i64 %161
  %163 = getelementptr inbounds i16, i16* %89, i64 %161
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !3
  %166 = getelementptr inbounds i16, i16* %163, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !3
  %169 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !6, !noalias !3
  %170 = getelementptr i16, i16* %162, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !6, !noalias !3
  %172 = or i64 %138, 48
  %173 = getelementptr i16, i16* %2, i64 %172
  %174 = getelementptr inbounds i16, i16* %89, i64 %172
  %175 = bitcast i16* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !3
  %177 = getelementptr inbounds i16, i16* %174, i64 8
  %178 = bitcast i16* %177 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !3
  %180 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %176, <8 x i16>* %180, align 2, !alias.scope !6, !noalias !3
  %181 = getelementptr i16, i16* %173, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %182, align 2, !alias.scope !6, !noalias !3
  %183 = add i64 %138, 64
  %184 = add i64 %139, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %137, !llvm.loop !8

186:                                              ; preds = %137, %127
  %187 = phi i64 [ 0, %127 ], [ %183, %137 ]
  %188 = icmp eq i64 %133, 0
  br i1 %188, label %205, label %189

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %202, %189 ], [ %187, %186 ]
  %191 = phi i64 [ %203, %189 ], [ %133, %186 ]
  %192 = getelementptr i16, i16* %2, i64 %190
  %193 = getelementptr inbounds i16, i16* %89, i64 %190
  %194 = bitcast i16* %193 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !3
  %196 = getelementptr inbounds i16, i16* %193, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  %198 = load <8 x i16>, <8 x i16>* %197, align 2, !alias.scope !3
  %199 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %199, align 2, !alias.scope !6, !noalias !3
  %200 = getelementptr i16, i16* %192, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %198, <8 x i16>* %201, align 2, !alias.scope !6, !noalias !3
  %202 = add i64 %190, 16
  %203 = add i64 %191, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %189, !llvm.loop !10

205:                                              ; preds = %189, %186
  %206 = icmp eq i64 %128, %119
  br i1 %206, label %113, label %207

207:                                              ; preds = %205, %121, %118
  %208 = phi i64 [ 0, %121 ], [ 0, %118 ], [ %128, %205 ]
  %209 = phi i16* [ %2, %121 ], [ %2, %118 ], [ %129, %205 ]
  %210 = xor i64 %208, -1
  %211 = add nsw i64 %210, %119
  %212 = and i64 %119, 7
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %224, label %214

214:                                              ; preds = %207, %214
  %215 = phi i64 [ %218, %214 ], [ %208, %207 ]
  %216 = phi i16* [ %221, %214 ], [ %209, %207 ]
  %217 = phi i64 [ %222, %214 ], [ %212, %207 ]
  %218 = add nuw nsw i64 %215, 1
  %219 = getelementptr inbounds i16, i16* %89, i64 %215
  %220 = load i16, i16* %219, align 2
  %221 = getelementptr inbounds i16, i16* %216, i64 1
  store i16 %220, i16* %216, align 2
  %222 = add i64 %217, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %214, !llvm.loop !12

224:                                              ; preds = %214, %207
  %225 = phi i16* [ undef, %207 ], [ %221, %214 ]
  %226 = phi i64 [ %208, %207 ], [ %218, %214 ]
  %227 = phi i16* [ %209, %207 ], [ %221, %214 ]
  %228 = icmp ult i64 %211, 7
  br i1 %228, label %113, label %229

229:                                              ; preds = %224, %229
  %230 = phi i64 [ %260, %229 ], [ %226, %224 ]
  %231 = phi i16* [ %263, %229 ], [ %227, %224 ]
  %232 = add nuw nsw i64 %230, 1
  %233 = getelementptr inbounds i16, i16* %89, i64 %230
  %234 = load i16, i16* %233, align 2
  %235 = getelementptr inbounds i16, i16* %231, i64 1
  store i16 %234, i16* %231, align 2
  %236 = add nuw nsw i64 %230, 2
  %237 = getelementptr inbounds i16, i16* %89, i64 %232
  %238 = load i16, i16* %237, align 2
  %239 = getelementptr inbounds i16, i16* %231, i64 2
  store i16 %238, i16* %235, align 2
  %240 = add nuw nsw i64 %230, 3
  %241 = getelementptr inbounds i16, i16* %89, i64 %236
  %242 = load i16, i16* %241, align 2
  %243 = getelementptr inbounds i16, i16* %231, i64 3
  store i16 %242, i16* %239, align 2
  %244 = add nuw nsw i64 %230, 4
  %245 = getelementptr inbounds i16, i16* %89, i64 %240
  %246 = load i16, i16* %245, align 2
  %247 = getelementptr inbounds i16, i16* %231, i64 4
  store i16 %246, i16* %243, align 2
  %248 = add nuw nsw i64 %230, 5
  %249 = getelementptr inbounds i16, i16* %89, i64 %244
  %250 = load i16, i16* %249, align 2
  %251 = getelementptr inbounds i16, i16* %231, i64 5
  store i16 %250, i16* %247, align 2
  %252 = add nuw nsw i64 %230, 6
  %253 = getelementptr inbounds i16, i16* %89, i64 %248
  %254 = load i16, i16* %253, align 2
  %255 = getelementptr inbounds i16, i16* %231, i64 6
  store i16 %254, i16* %251, align 2
  %256 = add nuw nsw i64 %230, 7
  %257 = getelementptr inbounds i16, i16* %89, i64 %252
  %258 = load i16, i16* %257, align 2
  %259 = getelementptr inbounds i16, i16* %231, i64 7
  store i16 %258, i16* %255, align 2
  %260 = add nuw nsw i64 %230, 8
  %261 = getelementptr inbounds i16, i16* %89, i64 %256
  %262 = load i16, i16* %261, align 2
  %263 = getelementptr inbounds i16, i16* %231, i64 8
  store i16 %262, i16* %259, align 2
  %264 = icmp eq i64 %260, %119
  br i1 %264, label %113, label %229, !llvm.loop !13

265:                                              ; preds = %668
  %266 = icmp eq %struct.UEnumeration* %473, null
  br i1 %266, label %268, label %267

267:                                              ; preds = %265
  call void @uenum_close_69(%struct.UEnumeration* nonnull %473) #10
  br label %268

268:                                              ; preds = %265, %267
  %269 = icmp eq i8 %671, 0
  br i1 %269, label %676, label %105

270:                                              ; preds = %113, %668
  %271 = phi i32 [ %482, %668 ], [ 0, %113 ]
  %272 = phi i32 [ %674, %668 ], [ 0, %113 ]
  %273 = phi i32 [ %481, %668 ], [ 0, %113 ]
  %274 = phi i32 [ %480, %668 ], [ 0, %113 ]
  %275 = phi i32 [ %479, %668 ], [ 0, %113 ]
  %276 = phi i32 [ %478, %668 ], [ 0, %113 ]
  %277 = phi i32 [ %673, %668 ], [ %114, %113 ]
  %278 = phi i16* [ %672, %668 ], [ %115, %113 ]
  %279 = phi i8 [ %671, %668 ], [ %109, %113 ]
  %280 = phi i8 [ %476, %668 ], [ %108, %113 ]
  %281 = phi i8 [ %475, %668 ], [ %107, %113 ]
  %282 = phi i32 [ %670, %668 ], [ %106, %113 ]
  %283 = phi i32 [ %669, %668 ], [ %106, %113 ]
  %284 = phi %struct.UEnumeration* [ %473, %668 ], [ null, %113 ]
  %285 = sub nsw i32 %3, %283
  %286 = icmp slt i32 %285, 1
  %287 = sext i32 %283 to i64
  %288 = getelementptr inbounds i16, i16* %2, i64 %287
  %289 = select i1 %286, i16* %278, i16* %288
  %290 = select i1 %286, i32 0, i32 %285
  %291 = icmp eq i32 %272, %96
  br i1 %291, label %292, label %319

292:                                              ; preds = %270
  %293 = icmp eq i8 %281, 0
  br i1 %293, label %472, label %294

294:                                              ; preds = %292
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %98) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %98, i8 -86, i64 628, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #10
  store i32 -1431655766, i32* %6, align 4
  %295 = load i32, i32* %4, align 4
  %296 = icmp slt i32 %295, 1
  br i1 %296, label %297, label %314

297:                                              ; preds = %294
  %298 = icmp ne i32 %290, 0
  %299 = icmp eq i16* %289, null
  %300 = and i1 %298, %299
  br i1 %300, label %301, label %302

301:                                              ; preds = %297
  store i32 1, i32* %4, align 4
  br label %314

302:                                              ; preds = %297
  store i32 0, i32* %6, align 4
  %303 = call i32 @uloc_getLanguage_69(i8* %0, i8* nonnull %98, i32 628, i32* nonnull %6) #10, !callees !2
  %304 = load i32, i32* %6, align 4
  %305 = icmp sgt i32 %304, 0
  %306 = icmp eq i32 %304, -124
  %307 = or i1 %305, %306
  br i1 %307, label %308, label %309

308:                                              ; preds = %302
  store i32 1, i32* %4, align 4
  br label %314

309:                                              ; preds = %302
  %310 = icmp eq i32 %303, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %309
  store i32 6581877, i32* %101, align 16
  br label %312

312:                                              ; preds = %311, %309
  %313 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* null, i8* nonnull %98, i8* nonnull %98, i16* %289, i32 %290, i32* nonnull %4) #10
  br label %314

314:                                              ; preds = %294, %301, %308, %312
  %315 = phi i32 [ 0, %301 ], [ 0, %308 ], [ %313, %312 ], [ 0, %294 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %98) #10
  %316 = add nsw i32 %315, %283
  %317 = icmp sgt i32 %315, 0
  %318 = zext i1 %317 to i8
  br label %472

319:                                              ; preds = %270
  %320 = icmp eq i8 %280, 0
  br i1 %320, label %472, label %321

321:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #10
  store i32 -1431655766, i32* %12, align 4
  %322 = add nsw i32 %271, 1
  switch i32 %271, label %354 [
    i32 0, label %323
    i32 1, label %346
    i32 2, label %348
    i32 3, label %350
  ]

323:                                              ; preds = %321
  call void @llvm.lifetime.start.p0i8(i64 628, i8* nonnull %98) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %98, i8 -86, i64 628, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #10
  store i32 -1431655766, i32* %8, align 4
  %324 = load i32, i32* %4, align 4
  %325 = icmp slt i32 %324, 1
  br i1 %325, label %326, label %344

326:                                              ; preds = %323
  %327 = icmp ne i32 %290, 0
  %328 = icmp eq i16* %289, null
  %329 = and i1 %327, %328
  br i1 %329, label %330, label %331

330:                                              ; preds = %326
  store i32 1, i32* %4, align 4
  br label %344

331:                                              ; preds = %326
  store i32 0, i32* %8, align 4
  %332 = call i32 @uloc_getScript_69(i8* %0, i8* nonnull %98, i32 628, i32* nonnull %8) #10, !callees !2
  %333 = load i32, i32* %8, align 4
  %334 = icmp sgt i32 %333, 0
  %335 = icmp eq i32 %333, -124
  %336 = or i1 %334, %335
  br i1 %336, label %337, label %338

337:                                              ; preds = %331
  store i32 1, i32* %4, align 4
  br label %344

338:                                              ; preds = %331
  %339 = icmp eq i32 %332, 0
  br i1 %339, label %340, label %342

340:                                              ; preds = %338
  %341 = call i32 @u_terminateUChars_69(i16* %289, i32 %290, i32 0, i32* nonnull %4) #10
  br label %344

342:                                              ; preds = %338
  %343 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZL9_kScripts, i64 0, i64 0), i8* null, i8* nonnull %98, i8* nonnull %98, i16* %289, i32 %290, i32* nonnull %4) #10
  br label %344

344:                                              ; preds = %323, %330, %337, %340, %342
  %345 = phi i32 [ 0, %330 ], [ 0, %337 ], [ %343, %342 ], [ %341, %340 ], [ 0, %323 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #10
  call void @llvm.lifetime.end.p0i8(i64 628, i8* nonnull %98) #10
  store i32 %345, i32* %12, align 4
  br label %411

346:                                              ; preds = %321
  %347 = call i32 @uloc_getDisplayCountry_69(i8* %0, i8* %1, i16* %289, i32 %290, i32* nonnull %4)
  store i32 %347, i32* %12, align 4
  br label %411

348:                                              ; preds = %321
  %349 = call i32 @uloc_getDisplayVariant_69(i8* %0, i8* %1, i16* %289, i32 %290, i32* nonnull %4)
  store i32 %349, i32* %12, align 4
  br label %411

350:                                              ; preds = %321
  %351 = call %struct.UEnumeration* @uloc_openKeywords_69(i8* %0, i32* nonnull %4) #10
  %352 = icmp eq %struct.UEnumeration* %284, null
  br i1 %352, label %354, label %353

353:                                              ; preds = %350
  call void @uenum_close_69(%struct.UEnumeration* nonnull %284) #10
  br label %354

354:                                              ; preds = %353, %350, %321
  %355 = phi %struct.UEnumeration* [ %284, %321 ], [ %351, %350 ], [ %351, %353 ]
  %356 = call i8* @uenum_next_69(%struct.UEnumeration* %355, i32* nonnull %12, i32* nonnull %4) #10
  %357 = icmp eq i8* %356, null
  br i1 %357, label %406, label %358

358:                                              ; preds = %354
  %359 = load i32, i32* %4, align 4
  %360 = icmp slt i32 %359, 1
  br i1 %360, label %361, label %366

361:                                              ; preds = %358
  %362 = icmp ne i32 %290, 0
  %363 = icmp eq i16* %289, null
  %364 = and i1 %362, %363
  br i1 %364, label %365, label %367

365:                                              ; preds = %361
  store i32 1, i32* %4, align 4
  br label %366

366:                                              ; preds = %365, %358
  store i32 0, i32* %12, align 4
  br label %384

367:                                              ; preds = %361
  %368 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL6_kKeys, i64 0, i64 0), i8* null, i8* nonnull %356, i8* nonnull %356, i16* %289, i32 %290, i32* nonnull %4) #10
  store i32 %368, i32* %12, align 4
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %384, label %370

370:                                              ; preds = %367
  %371 = icmp slt i32 %368, %290
  br i1 %371, label %372, label %376

372:                                              ; preds = %370
  %373 = sext i32 %368 to i64
  %374 = getelementptr inbounds i16, i16* %289, i64 %373
  store i16 61, i16* %374, align 2
  %375 = load i32, i32* %12, align 4
  br label %376

376:                                              ; preds = %372, %370
  %377 = phi i32 [ %375, %372 ], [ %368, %370 ]
  %378 = add nsw i32 %377, 1
  store i32 %378, i32* %12, align 4
  %379 = sub nsw i32 %290, %378
  %380 = icmp slt i32 %379, 1
  br i1 %380, label %384, label %381

381:                                              ; preds = %376
  %382 = sext i32 %378 to i64
  %383 = getelementptr inbounds i16, i16* %289, i64 %382
  br label %384

384:                                              ; preds = %366, %376, %367, %381
  %385 = phi i16* [ %383, %381 ], [ %289, %367 ], [ %289, %376 ], [ %289, %366 ]
  %386 = phi i32 [ %379, %381 ], [ %290, %367 ], [ 0, %376 ], [ %290, %366 ]
  %387 = load i32, i32* %4, align 4
  %388 = icmp eq i32 %387, 15
  br i1 %388, label %389, label %390

389:                                              ; preds = %384
  store i32 0, i32* %4, align 4
  br label %390

390:                                              ; preds = %389, %384
  %391 = call i32 @uloc_getDisplayKeywordValue_69(i8* %0, i8* nonnull %356, i8* %1, i16* %385, i32 %386, i32* nonnull %4)
  %392 = load i32, i32* %12, align 4
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %401, label %394

394:                                              ; preds = %390
  %395 = icmp eq i32 %391, 0
  br i1 %395, label %396, label %398

396:                                              ; preds = %394
  %397 = add nsw i32 %392, -1
  store i32 %397, i32* %12, align 4
  br label %398

398:                                              ; preds = %396, %394
  %399 = phi i32 [ %397, %396 ], [ %392, %394 ]
  %400 = select i1 %286, i16* %385, i16* %288
  br label %401

401:                                              ; preds = %398, %390
  %402 = phi i32 [ 0, %390 ], [ %399, %398 ]
  %403 = phi i16* [ %385, %390 ], [ %400, %398 ]
  %404 = phi i32 [ %386, %390 ], [ %290, %398 ]
  %405 = add nsw i32 %402, %391
  br label %406

406:                                              ; preds = %354, %401
  %407 = phi i32 [ %405, %401 ], [ 0, %354 ]
  %408 = phi i16* [ %403, %401 ], [ %289, %354 ]
  %409 = phi i8 [ 0, %401 ], [ 1, %354 ]
  %410 = phi i32 [ %404, %401 ], [ %290, %354 ]
  store i32 %407, i32* %12, align 4
  br label %411

411:                                              ; preds = %406, %348, %346, %344
  %412 = phi i32 [ %407, %406 ], [ %349, %348 ], [ %347, %346 ], [ %345, %344 ]
  %413 = phi %struct.UEnumeration* [ %355, %406 ], [ %284, %348 ], [ %284, %346 ], [ %284, %344 ]
  %414 = phi i16* [ %408, %406 ], [ %289, %348 ], [ %289, %346 ], [ %289, %344 ]
  %415 = phi i32 [ %273, %406 ], [ %273, %348 ], [ %273, %346 ], [ %283, %344 ]
  %416 = phi i8 [ %409, %406 ], [ 0, %348 ], [ 0, %346 ], [ 0, %344 ]
  %417 = phi i32 [ %410, %406 ], [ %290, %348 ], [ %290, %346 ], [ %290, %344 ]
  %418 = icmp sgt i32 %412, 0
  br i1 %418, label %419, label %457

419:                                              ; preds = %411
  %420 = load i32, i32* %9, align 4
  %421 = add nsw i32 %420, %412
  %422 = icmp sgt i32 %421, %417
  br i1 %422, label %451, label %423

423:                                              ; preds = %419
  %424 = sext i32 %412 to i64
  %425 = getelementptr inbounds i16, i16* %414, i64 %424
  br label %429

426:                                              ; preds = %438
  %427 = load i32, i32* %9, align 4
  %428 = icmp sgt i32 %427, 0
  br i1 %428, label %441, label %451

429:                                              ; preds = %423, %438
  %430 = phi i16* [ %439, %438 ], [ %414, %423 ]
  %431 = load i16, i16* %430, align 2
  %432 = zext i16 %431 to i32
  %433 = icmp eq i32 %92, %432
  br i1 %433, label %436, label %434

434:                                              ; preds = %429
  %435 = icmp eq i32 %94, %432
  br i1 %435, label %436, label %438

436:                                              ; preds = %434, %429
  %437 = phi i16 [ %93, %429 ], [ %95, %434 ]
  store i16 %437, i16* %430, align 2
  br label %438

438:                                              ; preds = %436, %434
  %439 = getelementptr inbounds i16, i16* %430, i64 1
  %440 = icmp ult i16* %439, %425
  br i1 %440, label %429, label %426

441:                                              ; preds = %426, %441
  %442 = phi i64 [ %447, %441 ], [ 0, %426 ]
  %443 = phi i16* [ %446, %441 ], [ %439, %426 ]
  %444 = getelementptr inbounds i16, i16* %50, i64 %442
  %445 = load i16, i16* %444, align 2
  %446 = getelementptr inbounds i16, i16* %443, i64 1
  store i16 %445, i16* %443, align 2
  %447 = add nuw nsw i64 %442, 1
  %448 = load i32, i32* %9, align 4
  %449 = sext i32 %448 to i64
  %450 = icmp slt i64 %447, %449
  br i1 %450, label %441, label %451

451:                                              ; preds = %441, %426, %419
  %452 = phi i32 [ %420, %419 ], [ %427, %426 ], [ %448, %441 ]
  %453 = phi i16* [ %414, %419 ], [ %439, %426 ], [ %446, %441 ]
  %454 = load i32, i32* %12, align 4
  %455 = add i32 %454, %283
  %456 = add i32 %455, %452
  br label %467

457:                                              ; preds = %411
  %458 = icmp eq i8 %416, 0
  br i1 %458, label %467, label %459

459:                                              ; preds = %457
  %460 = icmp eq i32 %283, %415
  %461 = load i32, i32* %9, align 4
  %462 = select i1 %460, i32 0, i32 %461
  %463 = sub nsw i32 %283, %462
  %464 = sub nsw i32 %463, %415
  %465 = icmp sgt i32 %464, 0
  %466 = zext i1 %465 to i8
  br label %467

467:                                              ; preds = %457, %459, %451
  %468 = phi i32 [ %456, %451 ], [ %463, %459 ], [ %283, %457 ]
  %469 = phi i8 [ %280, %451 ], [ %466, %459 ], [ %280, %457 ]
  %470 = phi i16* [ %453, %451 ], [ %414, %459 ], [ %414, %457 ]
  %471 = phi i32 [ %274, %451 ], [ %464, %459 ], [ %274, %457 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #10
  br label %472

472:                                              ; preds = %319, %314, %292, %467
  %473 = phi %struct.UEnumeration* [ %284, %292 ], [ %284, %314 ], [ %284, %319 ], [ %413, %467 ]
  %474 = phi i32 [ %283, %292 ], [ %316, %314 ], [ %283, %319 ], [ %468, %467 ]
  %475 = phi i8 [ 0, %292 ], [ %318, %314 ], [ %281, %319 ], [ %281, %467 ]
  %476 = phi i8 [ %280, %292 ], [ %280, %314 ], [ 0, %319 ], [ %469, %467 ]
  %477 = phi i16* [ %289, %292 ], [ %289, %314 ], [ %289, %319 ], [ %470, %467 ]
  %478 = phi i32 [ %276, %292 ], [ %315, %314 ], [ %276, %319 ], [ %276, %467 ]
  %479 = phi i32 [ %275, %292 ], [ %283, %314 ], [ %275, %319 ], [ %275, %467 ]
  %480 = phi i32 [ %274, %292 ], [ %274, %314 ], [ %274, %319 ], [ %471, %467 ]
  %481 = phi i32 [ %273, %292 ], [ %273, %314 ], [ %273, %319 ], [ %415, %467 ]
  %482 = phi i32 [ %271, %292 ], [ %271, %314 ], [ %271, %319 ], [ %322, %467 ]
  %483 = phi i8 [ 1, %292 ], [ 1, %314 ], [ 1, %319 ], [ %416, %467 ]
  %484 = load i32, i32* %4, align 4
  %485 = icmp eq i32 %484, 15
  br i1 %485, label %486, label %487

486:                                              ; preds = %472
  store i32 0, i32* %4, align 4
  br label %487

487:                                              ; preds = %486, %472
  %488 = icmp eq i8 %483, 0
  br i1 %488, label %668, label %489

489:                                              ; preds = %487
  %490 = icmp ne i8 %475, 0
  %491 = icmp ne i8 %476, 0
  %492 = and i1 %490, %491
  br i1 %492, label %493, label %641

493:                                              ; preds = %489
  %494 = add i32 %277, 3
  %495 = icmp eq i32 %272, 0
  %496 = load i32, i32* %10, align 4
  %497 = select i1 %495, i32 %91, i32 %496
  %498 = sub nsw i32 %497, %494
  %499 = add nsw i32 %498, %474
  %500 = icmp sgt i32 %499, %3
  br i1 %500, label %661, label %501

501:                                              ; preds = %493
  %502 = sext i32 %474 to i64
  %503 = getelementptr inbounds i16, i16* %2, i64 %502
  %504 = icmp sgt i32 %498, 0
  br i1 %504, label %505, label %661

505:                                              ; preds = %501
  %506 = sext i32 %494 to i64
  %507 = add i32 %497, -3
  %508 = sub i32 %507, %277
  %509 = add i32 %497, -4
  %510 = sub i32 %509, %277
  %511 = zext i32 %510 to i64
  %512 = add nuw nsw i64 %511, 1
  %513 = icmp ult i64 %512, 8
  br i1 %513, label %588, label %514

514:                                              ; preds = %505
  %515 = add i32 %497, -4
  %516 = sub i32 %515, %277
  %517 = zext i32 %516 to i64
  %518 = add nsw i64 %502, %517
  %519 = getelementptr i16, i16* %103, i64 %518
  %520 = getelementptr i16, i16* %89, i64 %506
  %521 = add nsw i64 %506, %517
  %522 = getelementptr i16, i16* %104, i64 %521
  %523 = icmp ult i16* %503, %522
  %524 = icmp ult i16* %520, %519
  %525 = and i1 %523, %524
  br i1 %525, label %588, label %526

526:                                              ; preds = %514
  %527 = and i64 %512, 8589934584
  %528 = add nsw i64 %527, %506
  %529 = trunc i64 %527 to i32
  %530 = getelementptr i16, i16* %503, i64 %527
  %531 = add nsw i64 %527, -8
  %532 = lshr exact i64 %531, 3
  %533 = add nuw nsw i64 %532, 1
  %534 = and i64 %533, 3
  %535 = icmp ult i64 %531, 24
  br i1 %535, label %571, label %536

536:                                              ; preds = %526
  %537 = sub nsw i64 %533, %534
  br label %538

538:                                              ; preds = %538, %536
  %539 = phi i64 [ 0, %536 ], [ %568, %538 ]
  %540 = phi i64 [ %537, %536 ], [ %569, %538 ]
  %541 = add i64 %539, %506
  %542 = getelementptr i16, i16* %503, i64 %539
  %543 = getelementptr inbounds i16, i16* %89, i64 %541
  %544 = bitcast i16* %543 to <8 x i16>*
  %545 = load <8 x i16>, <8 x i16>* %544, align 2, !alias.scope !14
  %546 = bitcast i16* %542 to <8 x i16>*
  store <8 x i16> %545, <8 x i16>* %546, align 2, !alias.scope !17, !noalias !14
  %547 = or i64 %539, 8
  %548 = add i64 %547, %506
  %549 = getelementptr i16, i16* %503, i64 %547
  %550 = getelementptr inbounds i16, i16* %89, i64 %548
  %551 = bitcast i16* %550 to <8 x i16>*
  %552 = load <8 x i16>, <8 x i16>* %551, align 2, !alias.scope !14
  %553 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %552, <8 x i16>* %553, align 2, !alias.scope !17, !noalias !14
  %554 = or i64 %539, 16
  %555 = add i64 %554, %506
  %556 = getelementptr i16, i16* %503, i64 %554
  %557 = getelementptr inbounds i16, i16* %89, i64 %555
  %558 = bitcast i16* %557 to <8 x i16>*
  %559 = load <8 x i16>, <8 x i16>* %558, align 2, !alias.scope !14
  %560 = bitcast i16* %556 to <8 x i16>*
  store <8 x i16> %559, <8 x i16>* %560, align 2, !alias.scope !17, !noalias !14
  %561 = or i64 %539, 24
  %562 = add i64 %561, %506
  %563 = getelementptr i16, i16* %503, i64 %561
  %564 = getelementptr inbounds i16, i16* %89, i64 %562
  %565 = bitcast i16* %564 to <8 x i16>*
  %566 = load <8 x i16>, <8 x i16>* %565, align 2, !alias.scope !14
  %567 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %567, align 2, !alias.scope !17, !noalias !14
  %568 = add i64 %539, 32
  %569 = add i64 %540, -4
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %538, !llvm.loop !19

571:                                              ; preds = %538, %526
  %572 = phi i64 [ 0, %526 ], [ %568, %538 ]
  %573 = icmp eq i64 %534, 0
  br i1 %573, label %586, label %574

574:                                              ; preds = %571, %574
  %575 = phi i64 [ %583, %574 ], [ %572, %571 ]
  %576 = phi i64 [ %584, %574 ], [ %534, %571 ]
  %577 = add i64 %575, %506
  %578 = getelementptr i16, i16* %503, i64 %575
  %579 = getelementptr inbounds i16, i16* %89, i64 %577
  %580 = bitcast i16* %579 to <8 x i16>*
  %581 = load <8 x i16>, <8 x i16>* %580, align 2, !alias.scope !14
  %582 = bitcast i16* %578 to <8 x i16>*
  store <8 x i16> %581, <8 x i16>* %582, align 2, !alias.scope !17, !noalias !14
  %583 = add i64 %575, 8
  %584 = add i64 %576, -1
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %574, !llvm.loop !20

586:                                              ; preds = %574, %571
  %587 = icmp eq i64 %512, %527
  br i1 %587, label %657, label %588

588:                                              ; preds = %586, %514, %505
  %589 = phi i64 [ %506, %514 ], [ %506, %505 ], [ %528, %586 ]
  %590 = phi i32 [ 0, %514 ], [ 0, %505 ], [ %529, %586 ]
  %591 = phi i16* [ %503, %514 ], [ %503, %505 ], [ %530, %586 ]
  %592 = add i32 %497, 1
  %593 = sub i32 %592, %590
  %594 = sub i32 %593, %277
  %595 = add i32 %497, -4
  %596 = sub i32 %595, %590
  %597 = sub i32 %596, %277
  %598 = and i32 %594, 3
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %612, label %600

600:                                              ; preds = %588, %600
  %601 = phi i64 [ %605, %600 ], [ %589, %588 ]
  %602 = phi i32 [ %609, %600 ], [ %590, %588 ]
  %603 = phi i16* [ %608, %600 ], [ %591, %588 ]
  %604 = phi i32 [ %610, %600 ], [ %598, %588 ]
  %605 = add nsw i64 %601, 1
  %606 = getelementptr inbounds i16, i16* %89, i64 %601
  %607 = load i16, i16* %606, align 2
  %608 = getelementptr inbounds i16, i16* %603, i64 1
  store i16 %607, i16* %603, align 2
  %609 = add nuw nsw i32 %602, 1
  %610 = add i32 %604, -1
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %600, !llvm.loop !21

612:                                              ; preds = %600, %588
  %613 = phi i64 [ undef, %588 ], [ %605, %600 ]
  %614 = phi i16* [ undef, %588 ], [ %608, %600 ]
  %615 = phi i64 [ %589, %588 ], [ %605, %600 ]
  %616 = phi i32 [ %590, %588 ], [ %609, %600 ]
  %617 = phi i16* [ %591, %588 ], [ %608, %600 ]
  %618 = icmp ult i32 %597, 3
  br i1 %618, label %657, label %619

619:                                              ; preds = %612, %619
  %620 = phi i64 [ %635, %619 ], [ %615, %612 ]
  %621 = phi i32 [ %639, %619 ], [ %616, %612 ]
  %622 = phi i16* [ %638, %619 ], [ %617, %612 ]
  %623 = add nsw i64 %620, 1
  %624 = getelementptr inbounds i16, i16* %89, i64 %620
  %625 = load i16, i16* %624, align 2
  %626 = getelementptr inbounds i16, i16* %622, i64 1
  store i16 %625, i16* %622, align 2
  %627 = add nsw i64 %620, 2
  %628 = getelementptr inbounds i16, i16* %89, i64 %623
  %629 = load i16, i16* %628, align 2
  %630 = getelementptr inbounds i16, i16* %622, i64 2
  store i16 %629, i16* %626, align 2
  %631 = add nsw i64 %620, 3
  %632 = getelementptr inbounds i16, i16* %89, i64 %627
  %633 = load i16, i16* %632, align 2
  %634 = getelementptr inbounds i16, i16* %622, i64 3
  store i16 %633, i16* %630, align 2
  %635 = add nsw i64 %620, 4
  %636 = getelementptr inbounds i16, i16* %89, i64 %631
  %637 = load i16, i16* %636, align 2
  %638 = getelementptr inbounds i16, i16* %622, i64 4
  store i16 %637, i16* %634, align 2
  %639 = add nuw nsw i32 %621, 4
  %640 = icmp eq i32 %639, %508
  br i1 %640, label %657, label %619, !llvm.loop !22

641:                                              ; preds = %489
  %642 = icmp eq i32 %272, 0
  br i1 %642, label %661, label %643

643:                                              ; preds = %641
  %644 = icmp sgt i32 %474, 0
  br i1 %644, label %645, label %661

645:                                              ; preds = %643
  %646 = select i1 %490, i32 %478, i32 %480
  %647 = icmp ne i32 %282, 0
  %648 = and i1 %102, %647
  br i1 %648, label %649, label %661

649:                                              ; preds = %645
  %650 = add nsw i32 %646, %282
  %651 = icmp sgt i32 %650, %3
  br i1 %651, label %661, label %652

652:                                              ; preds = %649
  %653 = select i1 %490, i32 %479, i32 %481
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds i16, i16* %2, i64 %654
  %656 = call i16* @u_memmove_69(i16* nonnull %2, i16* %655, i32 %646) #10
  br label %661

657:                                              ; preds = %612, %619, %586
  %658 = phi i64 [ %528, %586 ], [ %613, %612 ], [ %635, %619 ]
  %659 = phi i16* [ %530, %586 ], [ %614, %612 ], [ %638, %619 ]
  %660 = trunc i64 %658 to i32
  br label %661

661:                                              ; preds = %657, %501, %649, %641, %493, %645, %652, %643
  %662 = phi i32 [ %646, %652 ], [ %646, %645 ], [ %474, %643 ], [ %499, %493 ], [ 0, %641 ], [ %646, %649 ], [ %499, %501 ], [ %499, %657 ]
  %663 = phi i32 [ %282, %652 ], [ %282, %645 ], [ %282, %643 ], [ %282, %493 ], [ 0, %641 ], [ 0, %649 ], [ %282, %501 ], [ %282, %657 ]
  %664 = phi i8 [ %279, %652 ], [ %279, %645 ], [ %279, %643 ], [ %279, %493 ], [ %279, %641 ], [ 1, %649 ], [ %279, %501 ], [ %279, %657 ]
  %665 = phi i16* [ %477, %652 ], [ %477, %645 ], [ %477, %643 ], [ %477, %493 ], [ %477, %641 ], [ %477, %649 ], [ %503, %501 ], [ %659, %657 ]
  %666 = phi i32 [ %277, %652 ], [ %277, %645 ], [ %277, %643 ], [ %497, %493 ], [ %277, %641 ], [ %277, %649 ], [ %494, %501 ], [ %660, %657 ]
  %667 = add nsw i32 %272, 1
  br label %668

668:                                              ; preds = %487, %661
  %669 = phi i32 [ %662, %661 ], [ %474, %487 ]
  %670 = phi i32 [ %663, %661 ], [ %282, %487 ]
  %671 = phi i8 [ %664, %661 ], [ %279, %487 ]
  %672 = phi i16* [ %665, %661 ], [ %477, %487 ]
  %673 = phi i32 [ %666, %661 ], [ %277, %487 ]
  %674 = phi i32 [ %667, %661 ], [ %272, %487 ]
  %675 = icmp slt i32 %674, 2
  br i1 %675, label %270, label %265

676:                                              ; preds = %268
  %677 = call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 %669, i32* nonnull %4) #10
  br label %678

678:                                              ; preds = %87, %48, %5, %16, %676, %25
  %679 = phi i32 [ 0, %25 ], [ %677, %676 ], [ 0, %87 ], [ 0, %48 ], [ 0, %16 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  ret i32 %679
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913BreakIterator14getDisplayNameERKNS_6LocaleERNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly dereferenceable(224), %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %4 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale14getDisplayNameERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* %0, %"class.icu_69::Locale"* dereferenceable(224) %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %1) #10
  ret %"class.icu_69::UnicodeString"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913BreakIterator14getDisplayNameERKNS_6LocaleES3_RNS_13UnicodeStringE(%"class.icu_69::Locale"* nocapture readonly dereferenceable(224), %"class.icu_69::Locale"* nocapture readonly dereferenceable(224), %"class.icu_69::UnicodeString"* returned dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_696Locale14getDisplayNameERKS0_RNS_13UnicodeStringE(%"class.icu_69::Locale"* %0, %"class.icu_69::Locale"* dereferenceable(224) %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %2)
  ret %"class.icu_69::UnicodeString"* %4
}

declare i32 @uloc_getLanguage_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare i32 @uloc_getScript_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare i32 @uloc_getCountry_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare i32 @uloc_getVariant_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare %struct.UResourceBundle* @ures_open_69(i8*, i8*, i32*) local_unnamed_addr #4

declare %struct.UResourceBundle* @ures_getByKeyWithFallback_69(%struct.UResourceBundle*, i8*, %struct.UResourceBundle*, i32*) local_unnamed_addr #4

declare i16* @ures_getStringByKeyWithFallback_69(%struct.UResourceBundle*, i8*, i32*, i32*) local_unnamed_addr #4

declare i16* @u_strstr_69(i16*, i16*) local_unnamed_addr #4

declare i32 @u_strncmp_69(i16*, i16*, i32) local_unnamed_addr #4

declare i16* @u_strchr_69(i16*, i16 zeroext) local_unnamed_addr #4

declare %struct.UEnumeration* @uloc_openKeywords_69(i8*, i32*) local_unnamed_addr #4

declare i8* @uenum_next_69(%struct.UEnumeration*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_getDisplayKeyword_69(i8*, i8*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = icmp eq i32* %4, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %19

10:                                               ; preds = %7
  %11 = icmp slt i32 %3, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = icmp ne i32 %3, 0
  %14 = icmp eq i16* %2, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %10
  store i32 1, i32* %4, align 4
  br label %19

17:                                               ; preds = %12
  %18 = tail call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL6_kKeys, i64 0, i64 0), i8* null, i8* %0, i8* %0, i16* %2, i32 %3, i32* nonnull %4)
  br label %19

19:                                               ; preds = %5, %7, %17, %16
  %20 = phi i32 [ 0, %16 ], [ %18, %17 ], [ 0, %7 ], [ 0, %5 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_getDisplayKeywordValue_69(i8*, i8*, i8*, i16*, i32, i32*) local_unnamed_addr #0 {
  %7 = alloca %"class.icu_69::CharString", align 8
  %8 = alloca %"class.icu_69::CharStringByteSink", align 8
  %9 = alloca i32, align 4
  %10 = icmp eq i32* %5, null
  br i1 %10, label %84, label %11

11:                                               ; preds = %6
  %12 = load i32, i32* %5, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %84

14:                                               ; preds = %11
  %15 = icmp slt i32 %4, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = icmp ne i32 %4, 0
  %18 = icmp eq i16* %3, null
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %21

20:                                               ; preds = %16, %14
  store i32 1, i32* %5, align 4
  br label %84

21:                                               ; preds = %16
  %22 = bitcast %"class.icu_69::CharString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 64, i1 false)
  %23 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %7, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %7, i64 0, i32 0, i32 3, i64 0
  store i8* %24, i8** %23, align 8
  %25 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %7, i64 0, i32 0, i32 1
  store i32 40, i32* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %7, i64 0, i32 0, i32 2
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %7, i64 0, i32 1
  store i32 0, i32* %27, align 8
  store i8 0, i8* %24, align 1
  %28 = bitcast %"class.icu_69::CharStringByteSink"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = bitcast %"class.icu_69::CharStringByteSink"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  call void @_ZN6icu_6918CharStringByteSinkC1EPNS_10CharStringE(%"class.icu_69::CharStringByteSink"* nonnull %8, %"class.icu_69::CharString"* nonnull %7) #10
  %30 = getelementptr inbounds %"class.icu_69::CharStringByteSink", %"class.icu_69::CharStringByteSink"* %8, i64 0, i32 0
  call void @ulocimp_getKeywordValue_69(i8* %0, i8* %1, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %30, i32* nonnull %5) #10
  call void @_ZN6icu_6918CharStringByteSinkD1Ev(%"class.icu_69::CharStringByteSink"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  %31 = call i32 @uprv_stricmp_69(i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL10_kCurrency, i64 0, i64 0)) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %74

33:                                               ; preds = %21
  %34 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #10
  store i32 0, i32* %9, align 4
  %35 = call %struct.UResourceBundle* @ures_open_69(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* %2, i32* nonnull %5) #10
  %36 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZL12_kCurrencies, i64 0, i64 0), %struct.UResourceBundle* null, i32* nonnull %5) #10
  %37 = load i8*, i8** %23, align 8
  %38 = call %struct.UResourceBundle* @ures_getByKeyWithFallback_69(%struct.UResourceBundle* %36, i8* %37, %struct.UResourceBundle* null, i32* nonnull %5) #10
  %39 = call i16* @ures_getStringByIndex_69(%struct.UResourceBundle* %38, i32 1, i32* nonnull %9, i32* nonnull %5) #10
  %40 = load i32, i32* %5, align 4
  %41 = icmp slt i32 %40, 1
  br i1 %41, label %45, label %42

42:                                               ; preds = %33
  %43 = icmp eq i32 %40, 2
  br i1 %43, label %44, label %63

44:                                               ; preds = %42
  store i32 -127, i32* %5, align 4
  br label %45

45:                                               ; preds = %33, %44
  %46 = icmp eq i16* %39, null
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = load i32, i32* %9, align 4
  %49 = icmp sgt i32 %48, %4
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = call i16* @u_memcpy_69(i16* %3, i16* nonnull %39, i32 %48) #10
  %52 = load i32, i32* %9, align 4
  %53 = call i32 @u_terminateUChars_69(i16* %3, i32 %4, i32 %52, i32* nonnull %5) #10
  br label %63

54:                                               ; preds = %47
  store i32 15, i32* %5, align 4
  br label %63

55:                                               ; preds = %45
  %56 = load i32, i32* %27, align 8
  %57 = icmp sgt i32 %56, %4
  br i1 %57, label %62, label %58

58:                                               ; preds = %55
  %59 = load i8*, i8** %23, align 8
  call void @u_charsToUChars_69(i8* %59, i16* %3, i32 %56) #10
  %60 = load i32, i32* %27, align 8
  %61 = call i32 @u_terminateUChars_69(i16* %3, i32 %4, i32 %60, i32* nonnull %5) #10
  br label %63

62:                                               ; preds = %55
  store i32 15, i32* %5, align 4
  br label %63

63:                                               ; preds = %42, %62, %58, %54, %50
  %64 = phi i32 [ %53, %50 ], [ %48, %54 ], [ %61, %58 ], [ %56, %62 ], [ 0, %42 ]
  %65 = icmp eq %struct.UResourceBundle* %38, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  call void @ures_close_69(%struct.UResourceBundle* nonnull %38) #10
  br label %67

67:                                               ; preds = %63, %66
  %68 = icmp eq %struct.UResourceBundle* %36, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %67
  call void @ures_close_69(%struct.UResourceBundle* nonnull %36) #10
  br label %70

70:                                               ; preds = %67, %69
  %71 = icmp eq %struct.UResourceBundle* %35, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %70
  call void @ures_close_69(%struct.UResourceBundle* nonnull %35) #10
  br label %73

73:                                               ; preds = %70, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10
  br label %77

74:                                               ; preds = %21
  %75 = load i8*, i8** %23, align 8
  %76 = call fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZL7_kTypes, i64 0, i64 0), i8* %1, i8* %75, i8* %75, i16* %3, i32 %4, i32* nonnull %5)
  br label %77

77:                                               ; preds = %74, %73
  %78 = phi i32 [ %64, %73 ], [ %76, %74 ]
  %79 = load i8, i8* %26, align 4
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = load i8*, i8** %23, align 8
  call void @uprv_free_69(i8* %82) #10
  br label %83

83:                                               ; preds = %77, %81
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #10
  br label %84

84:                                               ; preds = %6, %11, %83, %20
  %85 = phi i32 [ 0, %20 ], [ %78, %83 ], [ 0, %11 ], [ 0, %6 ]
  ret i32 %85
}

declare i16* @u_memmove_69(i16*, i16*, i32) local_unnamed_addr #4

declare i32 @u_terminateUChars_69(i16*, i32, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL19_getStringOrCopyKeyPKcS0_S0_S0_S0_S0_PDsiP10UErrorCode(i8*, i8*, i8*, i8*, i8*, i8*, i16*, i32, i32*) unnamed_addr #0 {
  %10 = alloca i32, align 4
  %11 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  store i32 0, i32* %10, align 4
  %12 = icmp eq i8* %4, null
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = tail call %struct.UResourceBundle* @ures_open_69(i8* %0, i8* %1, i32* %8) #10
  %15 = load i32, i32* %8, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = call i16* @ures_getStringByKey_69(%struct.UResourceBundle* %14, i8* %2, i32* nonnull %10, i32* %8) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = phi i16* [ %18, %17 ], [ null, %13 ]
  %21 = icmp eq %struct.UResourceBundle* %14, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %19
  call void @ures_close_69(%struct.UResourceBundle* nonnull %14) #10
  br label %32

23:                                               ; preds = %9
  %24 = tail call i32 @strncmp(i8* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = tail call i64 @strtol(i8* nocapture nonnull %4, i8** null, i32 10) #10
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  store i32 2, i32* %8, align 4
  br label %44

30:                                               ; preds = %26, %23
  %31 = call i16* @uloc_getTableStringWithFallback_69(i8* %0, i8* %1, i8* %2, i8* %3, i8* nonnull %4, i32* nonnull %10, i32* %8) #10
  br label %32

32:                                               ; preds = %22, %19, %30
  %33 = phi i16* [ %20, %22 ], [ %20, %19 ], [ %31, %30 ]
  %34 = load i32, i32* %8, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %32
  %37 = load i32, i32* %10, align 4
  %38 = call i32 @uprv_min_69(i32 %37, i32 %7) #10
  %39 = icmp sgt i32 %38, 0
  %40 = icmp ne i16* %33, null
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %48

42:                                               ; preds = %36
  %43 = call i16* @u_memcpy_69(i16* %6, i16* nonnull %33, i32 %38) #10
  br label %48

44:                                               ; preds = %29, %32
  %45 = call i64 @strlen(i8* %5) #11
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %10, align 4
  %47 = call i32 @uprv_min_69(i32 %46, i32 %7) #10
  call void @u_charsToUChars_69(i8* %5, i16* %6, i32 %47) #10
  store i32 -127, i32* %8, align 4
  br label %48

48:                                               ; preds = %36, %42, %44
  %49 = load i32, i32* %10, align 4
  %50 = call i32 @u_terminateUChars_69(i16* %6, i32 %7, i32 %49, i32* %8) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  ret i32 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6icu_6918CharStringByteSinkC1EPNS_10CharStringE(%"class.icu_69::CharStringByteSink"*, %"class.icu_69::CharString"*) unnamed_addr #4

declare void @ulocimp_getKeywordValue_69(i8*, i8*, %"class.icu_69::ByteSink"* dereferenceable(8), i32*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6918CharStringByteSinkD1Ev(%"class.icu_69::CharStringByteSink"*) unnamed_addr #5

declare i32 @uprv_stricmp_69(i8*, i8*) local_unnamed_addr #4

declare %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle*, i8*, %struct.UResourceBundle*, i32*) local_unnamed_addr #4

declare i16* @ures_getStringByIndex_69(%struct.UResourceBundle*, i32, i32*, i32*) local_unnamed_addr #4

declare i16* @u_memcpy_69(i16*, i16*, i32) local_unnamed_addr #4

declare void @u_charsToUChars_69(i8*, i16*, i32) local_unnamed_addr #4

declare void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"*) local_unnamed_addr #4

declare void @ures_close_69(%struct.UResourceBundle*) local_unnamed_addr #4

declare void @uenum_close_69(%struct.UEnumeration*) local_unnamed_addr #4

declare i16* @ures_getStringByKey_69(%struct.UResourceBundle*, i8*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #7

declare i16* @uloc_getTableStringWithFallback_69(i8*, i8*, i8*, i8*, i8*, i32*, i32*) local_unnamed_addr #4

declare i32 @uprv_min_69(i32, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind allocsize(0) }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 (i8*, i8*, i32, i32*)* @uloc_getCountry_69, i32 (i8*, i8*, i32, i32*)* @uloc_getLanguage_69, i32 (i8*, i8*, i32, i32*)* @uloc_getScript_69, i32 (i8*, i8*, i32, i32*)* @uloc_getVariant_69}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
