; ModuleID = '../../third_party/blink/renderer/platform/graphics/image_frame_generator.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/image_frame_generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::ImageFrameGenerator" = type { %"class.WTF::ThreadSafeRefCounted", %struct.SkISize, %"class.blink::ColorBehavior", i8, %"class.WTF::Vector", %"class.WTF::Mutex", i8, i8, i64, %"class.WTF::Vector.1", %"class.WTF::HashMap", %"class.std::__1::unique_ptr.9" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkISize = type { i32, i32 }
%"class.blink::ColorBehavior" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %struct.SkISize*, i32, i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { i8*, i32, i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ImageFrameGenerator::ClientMutex"* }
%"struct.blink::ImageFrameGenerator::ClientMutex" = type { i32, %"class.WTF::Mutex" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ImageDecoderFactory"* }
%"class.blink::ImageDecoderFactory" = type { i32 (...)** }
%"class.blink::ImageFrameGenerator::ClientMutexLocker" = type { %"class.blink::ImageFrameGenerator"*, i32, %"class.WTF::Mutex"* }
%"class.blink::ImageDecodingStore" = type { %"class.WTF::DoublyLinkedList", %"class.WTF::HashMap.15", %"class.WTF::HashMap.20", i64, i64, %"class.base::MemoryPressureListener", %"class.WTF::Mutex" }
%"class.WTF::DoublyLinkedList" = type { %"class.blink::CacheEntry"*, %"class.blink::CacheEntry"* }
%"class.blink::CacheEntry" = type { i32 (...)**, %"class.blink::ImageFrameGenerator"*, i32, %"class.blink::CacheEntry"*, %"class.blink::CacheEntry"* }
%"class.WTF::HashMap.15" = type { %"class.WTF::HashTable.16" }
%"class.WTF::HashTable.16" = type <{ %"struct.WTF::KeyValuePair.19"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.19" = type opaque
%"class.WTF::HashMap.20" = type { %"class.WTF::HashTable.21" }
%"class.WTF::HashTable.21" = type <{ %"struct.WTF::KeyValuePair.24"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.24" = type opaque
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.25", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.26", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.26" = type { %"class.base::RefCountedThreadSafe.27" }
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ImageDecoderWrapper" = type <{ %"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, %struct.SkISize, i32, %"class.blink::ColorBehavior", i32, [4 x i8], i64, %struct.SkImageInfo, i8*, i64, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.58", i64, i64 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.87" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { i64 }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr.39, %"class.WTF::Vector.40", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr.47", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.53", %class.sk_sp, i8, %"class.std::__1::unique_ptr.67" }
%class.scoped_refptr.39 = type { %"class.blink::SegmentReader"* }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42", [128 x i8] }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp.43, %class.SkPixmap, %class.sk_sp.44 }
%class.sk_sp.43 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.44 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.58" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.57, [8 x i8] }
%struct.anon.57 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.76", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.76" = type { [4 x i64] }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SD_SK_EERiS9_EENS_18HashTableAddResultISL_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSM_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE5eraseEPKSA_ = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [36 x i8] c"ImageFrameGenerator::decodeAndScale\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"generator\00", align 1
@.str.2 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/platform/graphics/image_frame_generator.cc\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"GetSupportedDecodeSize(scaled_size) == scaled_size\00", align 1
@_ZZN5blink19ImageFrameGenerator11DecodeToYUVEPNS_13SegmentReaderEm11SkColorTypePK7SkISizePPvPKmE28trace_event_unique_atomic207 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"blink,benchmark\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"ImageFrameGenerator::decodeToYUV\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"ImageFrameGenerator::GetYUVAInfo\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.9 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = bool]\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [202 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, std::__1::unique_ptr<blink::ImageFrameGenerator::ClientMutex, std::__1::default_delete<blink::ImageFrameGenerator::ClientMutex> > >]\00", align 1
@switch.table._ZN5blink28SubsamplingToSkiaSubsamplingEN2cc14YUVSubsamplingE = private unnamed_addr constant [7 x i32] [i32 6, i32 5, i32 3, i32 2, i32 4, i32 1, i32 0], align 4

@_ZN5blink19ImageFrameGeneratorC1ERK7SkISizebRKNS_13ColorBehaviorEN3WTF6VectorIS1_Lj0ENS7_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::ImageFrameGenerator"*, %struct.SkISize*, i1, %"class.blink::ColorBehavior"*, %"class.WTF::Vector"*), void (%"class.blink::ImageFrameGenerator"*, %struct.SkISize*, i1, %"class.blink::ColorBehavior"*, %"class.WTF::Vector"*)* @_ZN5blink19ImageFrameGeneratorC2ERK7SkISizebRKNS_13ColorBehaviorEN3WTF6VectorIS1_Lj0ENS7_18PartitionAllocatorEEE
@_ZN5blink19ImageFrameGeneratorD1Ev = hidden unnamed_addr alias void (%"class.blink::ImageFrameGenerator"*), void (%"class.blink::ImageFrameGenerator"*)* @_ZN5blink19ImageFrameGeneratorD2Ev
@_ZN5blink19ImageFrameGenerator17ClientMutexLockerC1EPS0_i = hidden unnamed_addr alias void (%"class.blink::ImageFrameGenerator::ClientMutexLocker"*, %"class.blink::ImageFrameGenerator"*, i32), void (%"class.blink::ImageFrameGenerator::ClientMutexLocker"*, %"class.blink::ImageFrameGenerator"*, i32)* @_ZN5blink19ImageFrameGenerator17ClientMutexLockerC2EPS0_i
@_ZN5blink19ImageFrameGenerator17ClientMutexLockerD1Ev = hidden unnamed_addr alias void (%"class.blink::ImageFrameGenerator::ClientMutexLocker"*), void (%"class.blink::ImageFrameGenerator::ClientMutexLocker"*)* @_ZN5blink19ImageFrameGenerator17ClientMutexLockerD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink28SubsamplingToSkiaSubsamplingEN2cc14YUVSubsamplingE(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN5blink28SubsamplingToSkiaSubsamplingEN2cc14YUVSubsamplingE, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ImageFrameGeneratorC2ERK7SkISizebRKNS_13ColorBehaviorEN3WTF6VectorIS1_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ImageFrameGenerator"*, %struct.SkISize* nocapture readonly dereferenceable(8), i1 zeroext, %"class.blink::ColorBehavior"* nocapture readonly dereferenceable(4), %"class.WTF::Vector"* nocapture) unnamed_addr #1 align 2 {
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 1
  %9 = bitcast %struct.SkISize* %1 to i64*
  %10 = bitcast %struct.SkISize* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 2, i32 0
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 3
  store i8 %6, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %19 = bitcast %"class.WTF::Vector"* %4 to i64*
  %20 = bitcast %"class.WTF::Vector"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  %21 = load i64, i64* %19, align 8
  %22 = bitcast %"class.WTF::Vector"* %16 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %17, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %17, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %18, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %18, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %29, i1 zeroext false) #10
  %30 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 6
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 7
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 8
  %33 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 11
  %34 = bitcast %"class.std::__1::unique_ptr.9"* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = bitcast i64* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ImageFrameGeneratorD2Ev(%"class.blink::ImageFrameGenerator"*) unnamed_addr #1 align 2 {
  %2 = tail call dereferenceable(168) %"class.blink::ImageDecodingStore"* @_ZN5blink18ImageDecodingStore8InstanceEv() #10
  tail call void @_ZN5blink18ImageDecodingStore29RemoveCacheIndexedByGeneratorEPKNS_19ImageFrameGeneratorE(%"class.blink::ImageDecodingStore"* %2, %"class.blink::ImageFrameGenerator"* %0) #10
  %3 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ImageDecoderFactory"*, %"class.blink::ImageDecoderFactory"** %3, align 8
  store %"class.blink::ImageDecoderFactory"* null, %"class.blink::ImageDecoderFactory"** %3, align 8
  %5 = icmp eq %"class.blink::ImageDecoderFactory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ImageDecoderFactory"* %4 to void (%"class.blink::ImageDecoderFactory"*)***
  %8 = load void (%"class.blink::ImageDecoderFactory"*)**, void (%"class.blink::ImageDecoderFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::ImageDecoderFactory"*)*, void (%"class.blink::ImageDecoderFactory"*)** %8, i64 1
  %10 = load void (%"class.blink::ImageDecoderFactory"*)*, void (%"class.blink::ImageDecoderFactory"*)** %9, align 8
  tail call void %10(%"class.blink::ImageDecoderFactory"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 10, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %13, null
  br i1 %14, label %38, label %15, !prof !2

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 10, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %36, label %19

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  br label %21

21:                                               ; preds = %33, %19
  %22 = phi i64 [ 0, %19 ], [ %34, %33 ]
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 2147483646
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %27, align 8
  store %"struct.blink::ImageFrameGenerator::ClientMutex"* null, %"struct.blink::ImageFrameGenerator::ClientMutex"** %27, align 8
  %29 = icmp eq %"struct.blink::ImageFrameGenerator::ClientMutex"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %28, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %31) #10
  %32 = bitcast %"struct.blink::ImageFrameGenerator::ClientMutex"* %28 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %30, %26, %21
  %34 = add nuw nsw i64 %22, 1
  %35 = icmp eq i64 %34, %20
  br i1 %35, label %36, label %21

36:                                               ; preds = %33, %15
  %37 = bitcast %"struct.WTF::KeyValuePair"* %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %12, align 8
  br label %38

38:                                               ; preds = %11, %36
  %39 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %48, label %42, !prof !2

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %40) #10
  store i8* null, i8** %39, align 8
  br label %48

48:                                               ; preds = %38, %47
  %49 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %49) #10
  %50 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %struct.SkISize*, %struct.SkISize** %50, align 8
  %52 = icmp eq %struct.SkISize* %51, null
  %53 = bitcast %struct.SkISize* %51 to i8*
  br i1 %52, label %60, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !3

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #10
  store %struct.SkISize* null, %struct.SkISize** %50, align 8
  br label %60

60:                                               ; preds = %48, %59
  ret void
}

declare dereferenceable(168) %"class.blink::ImageDecodingStore"* @_ZN5blink18ImageDecodingStore8InstanceEv() local_unnamed_addr #3

declare void @_ZN5blink18ImageDecodingStore29RemoveCacheIndexedByGeneratorEPKNS_19ImageFrameGeneratorE(%"class.blink::ImageDecodingStore"*, %"class.blink::ImageFrameGenerator"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19ImageFrameGenerator14DecodeAndScaleEPNS_13SegmentReaderEbmRK11SkImageInfoPvmNS_12ImageDecoder11AlphaOptionEi(%"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, i1 zeroext, i64, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #1 align 2 {
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %struct.SkISize*
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.blink::ImageFrameGenerator::ClientMutexLocker", align 8
  %17 = alloca %"class.blink::ImageDecoderWrapper", align 8
  %18 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %18) #10
  %19 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 6
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %18) #10
  br i1 %21, label %22, label %109

22:                                               ; preds = %9
  %23 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %24 = and i8 %23, 25
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26, !prof !2

26:                                               ; preds = %22
  %27 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = bitcast i8** %10 to %"class.blink::ImageFrameGenerator"**
  store %"class.blink::ImageFrameGenerator"* %0, %"class.blink::ImageFrameGenerator"** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %30

30:                                               ; preds = %22, %26
  %31 = phi i8* [ null, %22 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %26 ]
  %32 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %22 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), %26 ]
  %33 = phi i64 [ -6148914691236517206, %22 ], [ %29, %26 ]
  %34 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %36 to i64
  %42 = or i64 %40, %41
  store i64 %42, i64* %11, align 8
  %43 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %44 = load %struct.SkISize*, %struct.SkISize** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %44, i64 %47
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %30, %59
  %51 = phi %struct.SkISize* [ %60, %59 ], [ %44, %30 ]
  %52 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, %36
  br i1 %54, label %59, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %51, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, %38
  br i1 %58, label %59, label %64

59:                                               ; preds = %55, %50
  %60 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %51, i64 1
  %61 = icmp eq %struct.SkISize* %60, %48
  br i1 %61, label %62, label %50

62:                                               ; preds = %59, %30
  %63 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 1
  br label %64

64:                                               ; preds = %55, %62
  %65 = phi %struct.SkISize* [ %63, %62 ], [ %51, %55 ]
  %66 = bitcast %struct.SkISize* %65 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = trunc i64 %67 to i32
  %69 = lshr i64 %67, 32
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %36, %68
  %72 = icmp eq i32 %38, %70
  %73 = and i1 %71, %72
  br i1 %73, label %77, label %74

74:                                               ; preds = %64
  %75 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 123, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0)) #10
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  br label %77

77:                                               ; preds = %64, %74
  %78 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 13
  %81 = zext i1 %80 to i32
  %82 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #10
  store i64 0, i64* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #10
  store i8 1, i8* %15, align 1
  %83 = bitcast %"class.blink::ImageFrameGenerator::ClientMutexLocker"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 24, i1 false)
  call void @_ZN5blink19ImageFrameGenerator17ClientMutexLockerC2EPS0_i(%"class.blink::ImageFrameGenerator::ClientMutexLocker"* nonnull %16, %"class.blink::ImageFrameGenerator"* %0, i32 %8)
  %84 = bitcast %"class.blink::ImageDecoderWrapper"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %84) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 104, i1 false)
  %85 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 2, i32 0
  %86 = load i32, i32* %85, align 4
  call void @_ZN5blink19ImageDecoderWrapperC1EPNS_19ImageFrameGeneratorEPNS_13SegmentReaderERK7SkISizeNS_12ImageDecoder11AlphaOptionENS_13ColorBehaviorENS8_26HighBitDepthDecodingOptionEmRK11SkImageInfoPvmbi(%"class.blink::ImageDecoderWrapper"* nonnull %17, %"class.blink::ImageFrameGenerator"* %0, %"class.blink::SegmentReader"* %1, %struct.SkISize* nonnull dereferenceable(8) %12, i32 %7, i32 %86, i32 %81, i64 %3, %struct.SkImageInfo* dereferenceable(24) %4, i8* %5, i64 %6, i1 zeroext %2, i32 %8) #10
  %87 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %88 = load %"class.blink::ImageDecoderFactory"*, %"class.blink::ImageDecoderFactory"** %87, align 8
  %89 = call zeroext i1 @_ZN5blink19ImageDecoderWrapper6DecodeEPNS_19ImageDecoderFactoryEPmPb(%"class.blink::ImageDecoderWrapper"* nonnull %17, %"class.blink::ImageDecoderFactory"* %88, i64* nonnull %14, i8* nonnull %15) #10
  %90 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %17, i64 0, i32 14
  %91 = load i8, i8* %90, align 8, !range !4
  %92 = icmp ne i8 %91, 0
  call void @_ZN5blink19ImageDecoderWrapperD1Ev(%"class.blink::ImageDecoderWrapper"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %84) #10
  call void @_ZN5blink19ImageFrameGenerator17ClientMutexLockerD2Ev(%"class.blink::ImageFrameGenerator::ClientMutexLocker"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #10
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %18) #10
  store i8 %91, i8* %19, align 8
  %93 = xor i1 %89, true
  %94 = or i1 %92, %93
  br i1 %94, label %102, label %95

95:                                               ; preds = %77
  %96 = load i8, i8* %15, align 1, !range !4
  %97 = icmp ne i8 %96, 0
  call void @_ZN5blink19ImageFrameGenerator11SetHasAlphaEmb(%"class.blink::ImageFrameGenerator"* %0, i64 %3, i1 zeroext %97)
  %98 = load i64, i64* %14, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 8
  store i64 %98, i64* %101, align 8
  br label %102

102:                                              ; preds = %77, %100, %95
  %103 = phi i1 [ false, %77 ], [ true, %95 ], [ true, %100 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %18) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  %104 = icmp eq i8* %31, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = load i8, i8* %31, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %31, i8* %32, i64 %33) #10
  br label %109

109:                                              ; preds = %108, %105, %102, %9
  %110 = phi i1 [ false, %9 ], [ %103, %102 ], [ %103, %105 ], [ %103, %108 ]
  ret i1 %110
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8** dereferenceable(8)) local_unnamed_addr #5 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 5, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = bitcast i8** %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #10
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #10
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #10
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink19ImageFrameGenerator22GetSupportedDecodeSizeERK7SkISize(%"class.blink::ImageFrameGenerator"* nocapture readonly, %struct.SkISize* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.SkISize*, %struct.SkISize** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %10, %24
  %16 = phi %struct.SkISize* [ %4, %10 ], [ %25, %24 ]
  %17 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %12
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %16, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %14
  br i1 %23, label %24, label %29

24:                                               ; preds = %20, %15
  %25 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %16, i64 1
  %26 = icmp eq %struct.SkISize* %25, %8
  br i1 %26, label %27, label %15

27:                                               ; preds = %24, %2
  %28 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 1
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi %struct.SkISize* [ %28, %27 ], [ %16, %20 ]
  %31 = bitcast %struct.SkISize* %30 to i64*
  %32 = load i64, i64* %31, align 4
  ret i64 %32
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink19ImageDecoderWrapperC1EPNS_19ImageFrameGeneratorEPNS_13SegmentReaderERK7SkISizeNS_12ImageDecoder11AlphaOptionENS_13ColorBehaviorENS8_26HighBitDepthDecodingOptionEmRK11SkImageInfoPvmbi(%"class.blink::ImageDecoderWrapper"*, %"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, %struct.SkISize* dereferenceable(8), i32, i32, i32, i64, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i1 zeroext, i32) unnamed_addr #3

declare zeroext i1 @_ZN5blink19ImageDecoderWrapper6DecodeEPNS_19ImageDecoderFactoryEPmPb(%"class.blink::ImageDecoderWrapper"*, %"class.blink::ImageDecoderFactory"*, i64*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink19ImageDecoderWrapperD1Ev(%"class.blink::ImageDecoderWrapper"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ImageFrameGenerator11SetHasAlphaEmb(%"class.blink::ImageFrameGenerator"*, i64, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 9
  %6 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = icmp ugt i64 %8, %1
  %10 = trunc i64 %1 to i32
  br i1 %9, label %71, label %11

11:                                               ; preds = %3
  %12 = add i32 %10, 1
  %13 = icmp ult i32 %7, %12
  br i1 %13, label %14, label %51

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %16, %12
  br i1 %17, label %18, label %52

18:                                               ; preds = %14
  %19 = lshr i32 %16, 2
  %20 = add nuw i32 %16, 1
  %21 = add i32 %20, %19
  %22 = icmp ugt i32 %21, 4
  %23 = select i1 %22, i32 %21, i32 4
  %24 = icmp ugt i32 %23, %12
  %25 = select i1 %24, i32 %23, i32 %12
  %26 = icmp ult i32 %16, %25
  br i1 %26, label %27, label %52, !prof !2

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  %31 = zext i32 %25 to i64
  %32 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %31) #10
  %33 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %32, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #10
  %34 = ptrtoint i8* %33 to i64
  br i1 %30, label %35, label %38

35:                                               ; preds = %27
  %36 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  store atomic i64 %34, i64* %36 monotonic, align 8
  %37 = trunc i64 %32 to i32
  store i32 %37, i32* %15, align 8
  br label %52

38:                                               ; preds = %27
  %39 = load i8*, i8** %28, align 8
  %40 = icmp ne i8* %33, null
  %41 = icmp ne i8* %39, null
  %42 = and i1 %40, %41
  br i1 %42, label %43, label %47, !prof !2

43:                                               ; preds = %38
  %44 = load i32, i32* %6, align 4
  %45 = zext i32 %44 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* nonnull align 1 %39, i64 %45, i1 false) #10
  %46 = load i8*, i8** %28, align 8
  br label %47

47:                                               ; preds = %43, %38
  %48 = phi i8* [ %39, %38 ], [ %46, %43 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #10
  %49 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  store atomic i64 %34, i64* %49 monotonic, align 8
  %50 = trunc i64 %32 to i32
  store i32 %50, i32* %15, align 8
  br label %52

51:                                               ; preds = %11
  store i32 %12, i32* %6, align 4
  br label %71

52:                                               ; preds = %14, %18, %35, %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i32, i32* %6, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  %58 = zext i32 %12 to i64
  %59 = getelementptr inbounds i8, i8* %54, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = ptrtoint i8* %57 to i64
  %62 = sub i64 %60, %61
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 %62, i1 false) #10
  store i32 %12, i32* %6, align 4
  br label %63

63:                                               ; preds = %52, %63
  %64 = phi i64 [ %67, %63 ], [ %8, %52 ]
  %65 = trunc i64 %64 to i32
  %66 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"* %5, i32 %65) #10
  store i8 1, i8* %66, align 1
  %67 = add nuw nsw i64 %64, 1
  %68 = load i32, i32* %6, align 4
  %69 = zext i32 %68 to i64
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %63, label %71

71:                                               ; preds = %63, %3, %51
  %72 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"* %5, i32 %10) #10
  store i8 %4, i8* %72, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19ImageFrameGenerator11DecodeToYUVEPNS_13SegmentReaderEm11SkColorTypePK7SkISizePPvPKm(%"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, i64, i32, %struct.SkISize* nocapture readnone, i8**, i64*) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %struct.SkISize*
  %12 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #10
  %13 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 6
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %121

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 7
  %18 = load i8, i8* %17, align 1, !range !4
  %19 = icmp ne i8 %18, 0
  %20 = icmp eq i8** %5, null
  %21 = or i1 %20, %19
  br i1 %21, label %121, label %22

22:                                               ; preds = %16
  %23 = load i8*, i8** %5, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %121, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8*, i8** %5, i64 1
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %121, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8*, i8** %5, i64 2
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  %33 = icmp ne i64* %6, null
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %121

35:                                               ; preds = %29
  %36 = load i64, i64* %6, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %121, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds i64, i64* %6, i64 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %121, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds i64, i64* %6, i64 2
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %121, label %46

46:                                               ; preds = %42
  %47 = icmp eq %"class.blink::SegmentReader"* %1, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #10
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  br label %55

55:                                               ; preds = %46, %48, %52
  %56 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 2
  %57 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #10
  store i64 0, i64* %10, align 8
  %58 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"* %1, i1 zeroext true, i32 0, i32 0, %"class.blink::ColorBehavior"* dereferenceable(4) %56, %struct.SkISize* nonnull dereferenceable(8) %11, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #10
  %59 = call noalias i8* @malloc(i64 56) #10
  %60 = bitcast i8* %59 to %"class.blink::ImagePlanes"*
  call void @_ZN5blink11ImagePlanesC1EPPvPKm11SkColorType(%"class.blink::ImagePlanes"* %60, i8** nonnull %5, i64* nonnull %6, i32 %3) #10
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %58, i64 0, i32 10
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.47"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.47"* %62 to i64*
  store i64 %61, i64* %65, align 8
  %66 = icmp eq %"class.blink::ImagePlanes"* %64, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %55
  %68 = bitcast %"class.blink::ImagePlanes"* %64 to i8*
  call void @free(i8* %68) #10
  br label %69

69:                                               ; preds = %55, %67
  %70 = load atomic i64, i64* @_ZZN5blink19ImageFrameGenerator11DecodeToYUVEPNS_13SegmentReaderEm11SkColorTypePK7SkISizePPvPKmE28trace_event_unique_atomic207 monotonic, align 8
  %71 = inttoptr i64 %70 to i8*
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %76, !prof !3

73:                                               ; preds = %69
  %74 = call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #10
  %75 = ptrtoint i8* %74 to i64
  store atomic volatile i64 %75, i64* @_ZZN5blink19ImageFrameGenerator11DecodeToYUVEPNS_13SegmentReaderEm11SkColorTypePK7SkISizePPvPKmE28trace_event_unique_atomic207 monotonic, align 8
  br label %76

76:                                               ; preds = %73, %69
  %77 = phi i8* [ %74, %73 ], [ %71, %69 ]
  %78 = load i8, i8* %77, align 1
  %79 = and i8 %78, 25
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %87, label %81, !prof !2

81:                                               ; preds = %76
  %82 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %83 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #10
  %84 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %85 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %85, i64* %84, align 8
  %86 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %77, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %82, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #10
  br label %87

87:                                               ; preds = %76, %81
  %88 = phi i64 [ -6148914691236517206, %76 ], [ %86, %81 ]
  %89 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %76 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), %81 ]
  %90 = phi i8* [ null, %76 ], [ %77, %81 ]
  %91 = bitcast %"class.blink::ImageDecoder"* %58 to void (%"class.blink::ImageDecoder"*)***
  %92 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %92, i64 25
  %94 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %93, align 8
  call void %94(%"class.blink::ImageDecoder"* %58) #10
  %95 = icmp eq i8* %90, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %87
  %97 = load i8, i8* %90, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %90, i8* %89, i64 %88) #10
  br label %100

100:                                              ; preds = %87, %96, %99
  %101 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %58, i64 0, i32 10, i32 0, i32 0, i32 0
  %102 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %101, align 8
  %103 = icmp eq %"class.blink::ImagePlanes"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ImagePlanes", %"class.blink::ImagePlanes"* %102, i64 0, i32 3
  %106 = load i8, i8* %105, align 4, !range !4
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  call void @_ZN5blink19ImageFrameGenerator11SetHasAlphaEmb(%"class.blink::ImageFrameGenerator"* %0, i64 %2, i1 zeroext false)
  br label %114

109:                                              ; preds = %104, %100
  %110 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %58, i64 0, i32 15
  %111 = load i8, i8* %110, align 2, !range !4
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %109
  store i8 1, i8* %17, align 1
  br label %114

114:                                              ; preds = %109, %108, %113
  %115 = phi i1 [ true, %108 ], [ false, %113 ], [ false, %109 ]
  %116 = icmp eq %"class.blink::ImageDecoder"* %58, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %91, align 8
  %119 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %118, i64 1
  %120 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %119, align 8
  call void %120(%"class.blink::ImageDecoder"* nonnull %58) #10
  br label %121

121:                                              ; preds = %16, %117, %114, %29, %22, %25, %35, %38, %42, %7
  %122 = phi i1 [ false, %16 ], [ false, %7 ], [ false, %42 ], [ false, %38 ], [ false, %35 ], [ false, %25 ], [ false, %22 ], [ false, %29 ], [ %115, %114 ], [ %115, %117 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #10
  ret i1 %122
}

declare %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"*, i1 zeroext, i32, i32, %"class.blink::ColorBehavior"* dereferenceable(4), %struct.SkISize* dereferenceable(8), i32) local_unnamed_addr #3

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19ImageFrameGenerator8HasAlphaEm(%"class.blink::ImageFrameGenerator"*, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #10
  %4 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = icmp ugt i64 %6, %1
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 9
  %10 = trunc i64 %1 to i32
  %11 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"* %9, i32 %10) #10
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp ne i8 %12, 0
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ %13, %8 ], [ true, %2 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #10
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19ImageFrameGenerator11GetYUVAInfoEPNS_13SegmentReaderERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS3_(%"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* nocapture readonly dereferenceable(8), %class.SkYUVAPixmapInfo*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkISize*
  %10 = alloca [4 x i64], align 16
  %11 = alloca %class.SkYUVAInfo, align 4
  %12 = alloca %class.SkYUVAPixmapInfo, align 8
  %13 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %24, label %16, !prof !2

16:                                               ; preds = %4
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %6, align 4
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %7, align 4
  %23 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32* nonnull dereferenceable(4) %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i32* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #10
  br label %24

24:                                               ; preds = %4, %16
  %25 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), %16 ]
  %26 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %16 ]
  %27 = phi i64 [ -6148914691236517206, %4 ], [ %23, %16 ]
  %28 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 5, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %28) #10
  %29 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 7
  %30 = load i8, i8* %29, align 1, !range !4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %164

32:                                               ; preds = %24
  %33 = icmp eq %"class.blink::SegmentReader"* %1, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #10
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %41

41:                                               ; preds = %32, %34, %38
  %42 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 2
  %43 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  store i64 0, i64* %8, align 8
  %44 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"* %1, i1 zeroext true, i32 0, i32 0, %"class.blink::ColorBehavior"* dereferenceable(4) %42, %struct.SkISize* nonnull dereferenceable(8) %9, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  %45 = bitcast [4 x i64]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #10
  %46 = getelementptr inbounds [4 x i64], [4 x i64]* %10, i64 0, i64 0
  %47 = getelementptr inbounds [4 x i64], [4 x i64]* %10, i64 0, i64 1
  %48 = getelementptr inbounds [4 x i64], [4 x i64]* %10, i64 0, i64 2
  %49 = getelementptr inbounds [4 x i64], [4 x i64]* %10, i64 0, i64 3
  %50 = bitcast %"class.blink::ImageDecoder"* %44 to i32 (%"class.blink::ImageDecoder"*)***
  %51 = bitcast [4 x i64]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 32, i1 false)
  %52 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %50, align 8
  %53 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %52, i64 8
  %54 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %53, align 8
  %55 = call i32 %54(%"class.blink::ImageDecoder"* %44) #10
  switch i32 %55, label %61 [
    i32 0, label %62
    i32 1, label %56
    i32 2, label %57
    i32 3, label %58
    i32 4, label %59
    i32 5, label %60
    i32 6, label %156
  ]

56:                                               ; preds = %41
  br label %62

57:                                               ; preds = %41
  br label %62

58:                                               ; preds = %41
  br label %62

59:                                               ; preds = %41
  br label %62

60:                                               ; preds = %41
  br label %62

61:                                               ; preds = %41
  unreachable

62:                                               ; preds = %41, %56, %57, %58, %59, %60
  %63 = phi i32 [ 6, %41 ], [ 5, %56 ], [ 3, %57 ], [ 2, %58 ], [ 4, %59 ], [ 1, %60 ]
  %64 = bitcast %"class.blink::ImageDecoder"* %44 to i64 (%"class.blink::ImageDecoder"*, i32)***
  %65 = load i64 (%"class.blink::ImageDecoder"*, i32)**, i64 (%"class.blink::ImageDecoder"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %65, i64 10
  %67 = load i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %66, align 8
  %68 = call i64 %67(%"class.blink::ImageDecoder"* %44, i32 0) #10
  store i64 %68, i64* %46, align 16
  %69 = load i64 (%"class.blink::ImageDecoder"*, i32)**, i64 (%"class.blink::ImageDecoder"*, i32)*** %64, align 8
  %70 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %69, i64 10
  %71 = load i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %70, align 8
  %72 = call i64 %71(%"class.blink::ImageDecoder"* %44, i32 1) #10
  store i64 %72, i64* %47, align 8
  %73 = load i64 (%"class.blink::ImageDecoder"*, i32)**, i64 (%"class.blink::ImageDecoder"*, i32)*** %64, align 8
  %74 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %73, i64 10
  %75 = load i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %74, align 8
  %76 = call i64 %75(%"class.blink::ImageDecoder"* %44, i32 2) #10
  store i64 %76, i64* %48, align 16
  store i64 0, i64* %49, align 8
  %77 = bitcast %class.SkYUVAInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #10
  %78 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %0, i64 0, i32 1
  %79 = bitcast %struct.SkISize* %78 to i64*
  %80 = bitcast %class.SkYUVAInfo* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %80, i8 -86, i64 32, i1 false)
  %81 = load i64, i64* %79, align 4
  %82 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %50, align 8
  %83 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %82, i64 11
  %84 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %83, align 8
  %85 = call i32 %84(%"class.blink::ImageDecoder"* %44) #10
  call void @_ZN10SkYUVAInfoC1E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_(%class.SkYUVAInfo* nonnull %11, i64 %81, i32 1, i32 %63, i32 %85, i32 1, i32 0, i32 0) #10
  %86 = bitcast %"class.blink::ImageDecoder"* %44 to i8 (%"class.blink::ImageDecoder"*)***
  %87 = load i8 (%"class.blink::ImageDecoder"*)**, i8 (%"class.blink::ImageDecoder"*)*** %86, align 8
  %88 = getelementptr inbounds i8 (%"class.blink::ImageDecoder"*)*, i8 (%"class.blink::ImageDecoder"*)** %87, i64 12
  %89 = load i8 (%"class.blink::ImageDecoder"*)*, i8 (%"class.blink::ImageDecoder"*)** %88, align 8
  %90 = call zeroext i8 %89(%"class.blink::ImageDecoder"* %44) #10
  %91 = icmp ugt i8 %90, 8
  %92 = getelementptr inbounds %"class.SkYUVAPixmapInfo::SupportedDataTypes", %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %2, i64 0, i32 0, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  br i1 %91, label %97, label %94

94:                                               ; preds = %62
  %95 = and i64 %93, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %154, label %103

97:                                               ; preds = %62
  %98 = and i64 %93, 2
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %97
  %101 = and i64 %93, 4
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %154, label %103

103:                                              ; preds = %94, %97, %100
  %104 = phi i32 [ 2, %100 ], [ 1, %97 ], [ 0, %94 ]
  %105 = bitcast %class.SkYUVAPixmapInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %105) #10
  call void @_ZN16SkYUVAPixmapInfoC1ERK10SkYUVAInfoNS_8DataTypeEPKm(%class.SkYUVAPixmapInfo* nonnull %12, %class.SkYUVAInfo* nonnull dereferenceable(32) %11, i32 %104, i64* nonnull %46) #10
  %106 = bitcast %class.SkYUVAPixmapInfo* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %105, i64 32, i1 false) #10
  %107 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %3, i64 0, i32 1
  %108 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %12, i64 0, i32 1
  %109 = call dereferenceable(96) %"struct.std::__1::array"* @_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_(%"struct.std::__1::array"* %107, %"struct.std::__1::array"* dereferenceable(96) %108) #10
  %110 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %3, i64 0, i32 2
  %111 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %12, i64 0, i32 2
  %112 = bitcast %"struct.std::__1::array.76"* %110 to i8*
  %113 = bitcast %"struct.std::__1::array.76"* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 36, i1 false) #10
  %114 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %12, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %115 = load %class.SkColorSpace*, %class.SkColorSpace** %114, align 8
  %116 = icmp eq %class.SkColorSpace* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %103
  %118 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = bitcast %class.SkColorSpace* %115 to i8*
  call void @_ZdlPv(i8* %122) #11
  br label %123

123:                                              ; preds = %121, %117, %103
  %124 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %12, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %125 = load %class.SkColorSpace*, %class.SkColorSpace** %124, align 8
  %126 = icmp eq %class.SkColorSpace* %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw add i32* %128, i32 -1 acq_rel
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %133

131:                                              ; preds = %127
  %132 = bitcast %class.SkColorSpace* %125 to i8*
  call void @_ZdlPv(i8* %132) #11
  br label %133

133:                                              ; preds = %131, %127, %123
  %134 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %12, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %135 = load %class.SkColorSpace*, %class.SkColorSpace** %134, align 8
  %136 = icmp eq %class.SkColorSpace* %135, null
  br i1 %136, label %143, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw add i32* %138, i32 -1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = bitcast %class.SkColorSpace* %135 to i8*
  call void @_ZdlPv(i8* %142) #11
  br label %143

143:                                              ; preds = %141, %137, %133
  %144 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %12, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %145 = load %class.SkColorSpace*, %class.SkColorSpace** %144, align 8
  %146 = icmp eq %class.SkColorSpace* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 -1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %153

151:                                              ; preds = %147
  %152 = bitcast %class.SkColorSpace* %145 to i8*
  call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %143, %147, %151
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %105) #10
  br label %154

154:                                              ; preds = %94, %100, %153
  %155 = phi i1 [ true, %153 ], [ false, %100 ], [ false, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #10
  br label %156

156:                                              ; preds = %41, %154
  %157 = phi i1 [ %155, %154 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #10
  %158 = icmp eq %"class.blink::ImageDecoder"* %44, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.blink::ImageDecoder"* %44 to void (%"class.blink::ImageDecoder"*)***
  %161 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %161, i64 1
  %163 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %162, align 8
  call void %163(%"class.blink::ImageDecoder"* nonnull %44) #10
  br label %164

164:                                              ; preds = %159, %156, %24
  %165 = phi i1 [ false, %24 ], [ %157, %156 ], [ %157, %159 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %28) #10
  %166 = icmp eq i8* %26, null
  br i1 %166, label %171, label %167

167:                                              ; preds = %164
  %168 = load i8, i8* %26, align 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %26, i8* %25, i64 %27) #10
  br label %171

171:                                              ; preds = %164, %167, %170
  ret i1 %165
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i32* dereferenceable(4)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #10
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247504638, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i32, i32* %10, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #10
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #10
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #10
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #10
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #10
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  ret i64 %28
}

declare void @_ZN10SkYUVAInfoC1E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_(%class.SkYUVAInfo*, i64, i32, i32, i32, i32, i32, i32) unnamed_addr #3

declare void @_ZN16SkYUVAPixmapInfoC1ERK10SkYUVAInfoNS_8DataTypeEPKm(%class.SkYUVAPixmapInfo*, %class.SkYUVAInfo* dereferenceable(32), i32, i64*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ImageFrameGenerator17ClientMutexLockerC2EPS0_i(%"class.blink::ImageFrameGenerator::ClientMutexLocker"*, %"class.blink::ImageFrameGenerator"*, i32) unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.blink::ImageFrameGenerator::ClientMutexLocker", %"class.blink::ImageFrameGenerator::ClientMutexLocker"* %0, i64 0, i32 0
  store %"class.blink::ImageFrameGenerator"* %1, %"class.blink::ImageFrameGenerator"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ImageFrameGenerator::ClientMutexLocker", %"class.blink::ImageFrameGenerator::ClientMutexLocker"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %1, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %7) #10
  %8 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %5, align 8
  %9 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %8, i64 0, i32 10
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = icmp eq %"struct.WTF::KeyValuePair"* %11, null
  %13 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %8, i64 0, i32 10, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  br i1 %12, label %71, label %15

15:                                               ; preds = %3
  %16 = add i32 %14, -1
  %17 = zext i32 %16 to i64
  %18 = load i32, i32* %6, align 4
  %19 = shl i32 %18, 15
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 10
  %23 = xor i32 %22, %21
  %24 = mul i32 %23, 9
  %25 = lshr i32 %24, 6
  %26 = xor i32 %25, %24
  %27 = shl i32 %26, 11
  %28 = xor i32 %27, -1
  %29 = add i32 %26, %28
  %30 = lshr i32 %29, 16
  %31 = xor i32 %30, %29
  %32 = and i32 %31, %16
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %18
  br i1 %37, label %66, label %38

38:                                               ; preds = %15
  %39 = xor i32 %31, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi i32 [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq i32 %53, 2147483647
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %17
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %18
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %15
  %67 = phi %"struct.WTF::KeyValuePair"* [ %34, %15 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %14 to i64
  br label %74

71:                                               ; preds = %52, %66, %3
  %72 = zext i32 %14 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %72
  br label %74

74:                                               ; preds = %69, %71
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %75
  %78 = icmp eq %"struct.WTF::KeyValuePair"* %76, %77
  br i1 %78, label %79, label %95

79:                                               ; preds = %74
  %80 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #10
  %81 = tail call i8* @_Znwm(i64 48) #11
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = bitcast i8* %82 to %"class.WTF::MutexBase"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 48, i1 false) #10
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %83, i1 zeroext false) #10
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %81, i8** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0
  %87 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SD_SK_EERiS9_EENS_18HashTableAddResultISL_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %86, i32* dereferenceable(4) %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #10
  %88 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %87, 0
  %89 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %84, align 8
  store %"struct.blink::ImageFrameGenerator::ClientMutex"* null, %"struct.blink::ImageFrameGenerator::ClientMutex"** %84, align 8
  %90 = icmp eq %"struct.blink::ImageFrameGenerator::ClientMutex"* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %89, i64 0, i32 1, i32 0
  call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %92) #10
  %93 = bitcast %"struct.blink::ImageFrameGenerator::ClientMutex"* %89 to i8*
  call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %79, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #10
  br label %95

95:                                               ; preds = %74, %94
  %96 = phi %"struct.WTF::KeyValuePair"* [ %88, %94 ], [ %76, %74 ]
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %99, align 8
  %102 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %98, i64 0, i32 1
  %103 = getelementptr inbounds %"class.blink::ImageFrameGenerator::ClientMutexLocker", %"class.blink::ImageFrameGenerator::ClientMutexLocker"* %0, i64 0, i32 2
  store %"class.WTF::Mutex"* %102, %"class.WTF::Mutex"** %103, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %7) #10
  %104 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** %103, align 8
  %105 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %104, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %105) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ImageFrameGenerator17ClientMutexLockerD2Ev(%"class.blink::ImageFrameGenerator::ClientMutexLocker"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageFrameGenerator::ClientMutexLocker", %"class.blink::ImageFrameGenerator::ClientMutexLocker"* %0, i64 0, i32 2
  %3 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #10
  %5 = getelementptr inbounds %"class.blink::ImageFrameGenerator::ClientMutexLocker", %"class.blink::ImageFrameGenerator::ClientMutexLocker"* %0, i64 0, i32 0
  %6 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %6, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %7) #10
  %8 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %5, align 8
  %9 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %8, i64 0, i32 10, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair"* %10, null
  %12 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %8, i64 0, i32 10, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  br i1 %11, label %69, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ImageFrameGenerator::ClientMutexLocker", %"class.blink::ImageFrameGenerator::ClientMutexLocker"* %0, i64 0, i32 1
  %16 = add i32 %13, -1
  %17 = zext i32 %16 to i64
  %18 = load i32, i32* %15, align 4
  %19 = shl i32 %18, 15
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 10
  %23 = xor i32 %22, %21
  %24 = mul i32 %23, 9
  %25 = lshr i32 %24, 6
  %26 = xor i32 %25, %24
  %27 = shl i32 %26, 11
  %28 = xor i32 %27, -1
  %29 = add i32 %26, %28
  %30 = lshr i32 %29, 16
  %31 = xor i32 %30, %29
  %32 = and i32 %31, %16
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %18
  br i1 %37, label %66, label %38

38:                                               ; preds = %14
  %39 = xor i32 %31, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi i32 [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq i32 %53, 2147483647
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %17
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %18
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %14
  %67 = phi %"struct.WTF::KeyValuePair"* [ %34, %14 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %52, %66, %1
  %70 = zext i32 %13 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %70
  br label %72

72:                                               ; preds = %66, %69
  %73 = phi %"struct.WTF::KeyValuePair"* [ %71, %69 ], [ %67, %66 ]
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %74, align 8
  %76 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, -1
  store i32 %78, i32* %76, align 8
  %79 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %74, align 8
  %80 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %72
  %84 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %5, align 8
  %85 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %84, i64 0, i32 10
  %86 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %85, i64 0, i32 0, i32 0
  %87 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %84, i64 0, i32 10, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 %90
  %92 = icmp eq %"struct.WTF::KeyValuePair"* %91, %73
  br i1 %92, label %95, label %93

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %85, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable"* %94, %"struct.WTF::KeyValuePair"* %73) #10
  br label %95

95:                                               ; preds = %93, %83, %72
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %7) #10
  ret void
}

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"struct.std::__1::array"* @_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_(%"struct.std::__1::array"*, %"struct.std::__1::array"* dereferenceable(96)) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq %"struct.std::__1::array"* %0, %1
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  %7 = icmp eq %class.SkColorSpace* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  store %class.SkColorSpace* %6, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorSpace* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %11, %15, %19
  %22 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 1
  %24 = bitcast i32* %23 to i64*
  %25 = bitcast i32* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  %30 = bitcast %struct.SkISize* %27 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  br i1 %3, label %49, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 8
  %35 = icmp eq %class.SkColorSpace* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %36, %32
  %40 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %40, align 8
  store %class.SkColorSpace* %34, %class.SkColorSpace** %40, align 8
  %42 = icmp eq %class.SkColorSpace* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = bitcast %class.SkColorSpace* %41 to i8*
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %47, %43, %39, %21
  %50 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 1
  %52 = bitcast i32* %51 to i64*
  %53 = bitcast i32* %50 to i64*
  %54 = load i64, i64* %52, align 8
  store i64 %54, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 1
  %57 = bitcast %struct.SkISize* %56 to i64*
  %58 = bitcast %struct.SkISize* %55 to i64*
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  br i1 %3, label %77, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %62 = load %class.SkColorSpace*, %class.SkColorSpace** %61, align 8
  %63 = icmp eq %class.SkColorSpace* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %64, %60
  %68 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %69 = load %class.SkColorSpace*, %class.SkColorSpace** %68, align 8
  store %class.SkColorSpace* %62, %class.SkColorSpace** %68, align 8
  %70 = icmp eq %class.SkColorSpace* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = bitcast %class.SkColorSpace* %69 to i8*
  tail call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %75, %71, %67, %49
  %78 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 1
  %80 = bitcast i32* %79 to i64*
  %81 = bitcast i32* %78 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 1
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 1
  %85 = bitcast %struct.SkISize* %84 to i64*
  %86 = bitcast %struct.SkISize* %83 to i64*
  %87 = load i64, i64* %85, align 8
  store i64 %87, i64* %86, align 8
  br i1 %3, label %105, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %90 = load %class.SkColorSpace*, %class.SkColorSpace** %89, align 8
  %91 = icmp eq %class.SkColorSpace* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 1 monotonic
  br label %95

95:                                               ; preds = %92, %88
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %97 = load %class.SkColorSpace*, %class.SkColorSpace** %96, align 8
  store %class.SkColorSpace* %90, %class.SkColorSpace** %96, align 8
  %98 = icmp eq %class.SkColorSpace* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = bitcast %class.SkColorSpace* %97 to i8*
  tail call void @_ZdlPv(i8* %104) #11
  br label %105

105:                                              ; preds = %103, %99, %95, %77
  %106 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 1
  %108 = bitcast i32* %107 to i64*
  %109 = bitcast i32* %106 to i64*
  %110 = load i64, i64* %108, align 8
  store i64 %110, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 1
  %112 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 1
  %113 = bitcast %struct.SkISize* %112 to i64*
  %114 = bitcast %struct.SkISize* %111 to i64*
  %115 = load i64, i64* %113, align 8
  store i64 %115, i64* %114, align 8
  ret %"struct.std::__1::array"* %0
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

declare void @_ZN5blink11ImagePlanesC1EPPvPKm11SkColorType(%"class.blink::ImagePlanes"*, i8**, i64*, i32) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SD_SK_EERiS9_EENS_18HashTableAddResultISL_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 2147483647
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %108, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, 2147483646
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 2147483647
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 2147483647, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"struct.blink::ImageFrameGenerator::ClientMutex"* null, %"struct.blink::ImageFrameGenerator::ClientMutex"** %86, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 0, i32 0, i32 0, i32 0
  %90 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %89, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %88, i64* %91, align 8
  %92 = icmp eq %"struct.blink::ImageFrameGenerator::ClientMutex"* %90, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %90, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %94) #10
  %95 = bitcast %"struct.blink::ImageFrameGenerator::ClientMutex"* %90 to i8*
  tail call void @_ZdlPv(i8* %95) #11
  br label %96

96:                                               ; preds = %81, %93
  %97 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, %99
  %103 = shl i32 %102, 1
  %104 = load i32, i32* %12, align 8
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %108, label %106

106:                                              ; preds = %96
  %107 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %108

108:                                              ; preds = %50, %96, %106
  %109 = phi i8 [ 1, %96 ], [ 1, %106 ], [ 0, %50 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ %83, %96 ], [ %107, %106 ], [ %52, %50 ]
  %111 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %110, 0
  %112 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %111, i8 %109, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0
  store i32 2147483647, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  %49 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0
  store i32 2147483647, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  %53 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0
  store i32 2147483647, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  %57 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0
  store i32 2147483647, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  %61 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0
  store i32 2147483647, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !5

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSM_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSM_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %52

18:                                               ; preds = %150
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %151, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %154, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %152, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %43, %29
  %32 = phi i64 [ 0, %29 ], [ %44, %43 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 2147483646
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %37, align 8
  store %"struct.blink::ImageFrameGenerator::ClientMutex"* null, %"struct.blink::ImageFrameGenerator::ClientMutex"** %37, align 8
  %39 = icmp eq %"struct.blink::ImageFrameGenerator::ClientMutex"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %38, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %41) #10
  %42 = bitcast %"struct.blink::ImageFrameGenerator::ClientMutex"* %38 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %40, %36, %31
  %44 = add nuw nsw i64 %32, 1
  %45 = icmp eq i64 %44, %30
  br i1 %45, label %46, label %31

46:                                               ; preds = %43, %27
  %47 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #10
  br label %48

48:                                               ; preds = %20, %46
  %49 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, -2147483648
  store i32 %51, i32* %49, align 8
  ret %"struct.WTF::KeyValuePair"* %23

52:                                               ; preds = %13, %150
  %53 = phi i64 [ %17, %13 ], [ %151, %150 ]
  %54 = phi i32 [ %7, %13 ], [ %152, %150 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %153, %150 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %154, %150 ]
  %57 = phi i32 [ 0, %13 ], [ %155, %150 ]
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 %58, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = or i32 %60, 1
  %62 = icmp eq i32 %61, 2147483647
  br i1 %62, label %150, label %63

63:                                               ; preds = %52
  %64 = shl i32 %60, 15
  %65 = xor i32 %64, -1
  %66 = add i32 %60, %65
  %67 = lshr i32 %66, 10
  %68 = xor i32 %67, %66
  %69 = mul i32 %68, 9
  %70 = lshr i32 %69, 6
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 11
  %73 = xor i32 %72, -1
  %74 = add i32 %71, %73
  %75 = lshr i32 %74, 16
  %76 = xor i32 %75, %74
  %77 = and i32 %76, %14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %78
  %80 = ptrtoint %"struct.WTF::KeyValuePair"* %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 2147483647
  br i1 %83, label %101, label %84

84:                                               ; preds = %63
  %85 = xor i32 %76, -1
  %86 = lshr i32 %74, 23
  %87 = add i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %107

98:                                               ; preds = %114
  %99 = ptrtoint %"struct.WTF::KeyValuePair"* %121 to i64
  %100 = inttoptr i64 %116 to %"struct.WTF::KeyValuePair"*
  br label %101

101:                                              ; preds = %98, %63
  %102 = phi i64 [ %99, %98 ], [ %80, %63 ]
  %103 = phi %"struct.WTF::KeyValuePair"* [ %100, %98 ], [ null, %63 ]
  %104 = icmp eq %"struct.WTF::KeyValuePair"* %103, null
  %105 = ptrtoint %"struct.WTF::KeyValuePair"* %103 to i64
  %106 = select i1 %104, i64 %102, i64 %105
  br label %126

107:                                              ; preds = %114, %84
  %108 = phi i64 [ 0, %84 ], [ %116, %114 ]
  %109 = phi i32 [ %82, %84 ], [ %124, %114 ]
  %110 = phi i64 [ %80, %84 ], [ %122, %114 ]
  %111 = phi i64 [ %78, %84 ], [ %120, %114 ]
  %112 = phi i64 [ 0, %84 ], [ %118, %114 ]
  %113 = icmp eq i32 %109, %60
  br i1 %113, label %126, label %114

114:                                              ; preds = %107
  %115 = icmp eq i32 %109, 2147483646
  %116 = select i1 %115, i64 %110, i64 %108
  %117 = icmp eq i64 %112, 0
  %118 = select i1 %117, i64 %97, i64 %112
  %119 = add i64 %118, %111
  %120 = and i64 %119, %15
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %120
  %122 = ptrtoint %"struct.WTF::KeyValuePair"* %121 to i64
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %121, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 2147483647
  br i1 %125, label %98, label %107

126:                                              ; preds = %107, %101
  %127 = phi i64 [ %106, %101 ], [ %110, %107 ]
  %128 = inttoptr i64 %127 to %"struct.WTF::KeyValuePair"*
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %129, align 8
  store %"struct.blink::ImageFrameGenerator::ClientMutex"* null, %"struct.blink::ImageFrameGenerator::ClientMutex"** %129, align 8
  %131 = icmp eq %"struct.blink::ImageFrameGenerator::ClientMutex"* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %130, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %133) #10
  %134 = bitcast %"struct.blink::ImageFrameGenerator::ClientMutex"* %130 to i8*
  tail call void @_ZdlPv(i8* %134) #11
  br label %135

135:                                              ; preds = %126, %132
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 0
  %137 = load i32, i32* %59, align 8
  store i32 %137, i32* %136, align 8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 1
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 %58, i32 1
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.std::__1::unique_ptr"* %139 to i64*
  %142 = load i64, i64* %141, align 8
  store %"struct.blink::ImageFrameGenerator::ClientMutex"* null, %"struct.blink::ImageFrameGenerator::ClientMutex"** %140, align 8
  %143 = bitcast %"class.std::__1::unique_ptr"* %138 to i64*
  store i64 %142, i64* %143, align 8
  %144 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %144, i64 %58
  %146 = icmp eq %"struct.WTF::KeyValuePair"* %145, %3
  %147 = select i1 %146, %"struct.WTF::KeyValuePair"* %128, %"struct.WTF::KeyValuePair"* %56
  %148 = load i32, i32* %6, align 8
  %149 = ptrtoint %"struct.WTF::KeyValuePair"* %144 to i64
  br label %150

150:                                              ; preds = %52, %135
  %151 = phi i64 [ %53, %52 ], [ %149, %135 ]
  %152 = phi i32 [ %54, %52 ], [ %148, %135 ]
  %153 = phi %"struct.WTF::KeyValuePair"* [ %55, %52 ], [ %144, %135 ]
  %154 = phi %"struct.WTF::KeyValuePair"* [ %56, %52 ], [ %147, %135 ]
  %155 = add i32 %57, 1
  %156 = icmp eq i32 %155, %152
  br i1 %156, label %18, label %52
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::ImageFrameGenerator::ClientMutex"*, %"struct.blink::ImageFrameGenerator::ClientMutex"** %3, align 8
  store %"struct.blink::ImageFrameGenerator::ClientMutex"* null, %"struct.blink::ImageFrameGenerator::ClientMutex"** %3, align 8
  %5 = icmp eq %"struct.blink::ImageFrameGenerator::ClientMutex"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::ImageFrameGenerator::ClientMutex", %"struct.blink::ImageFrameGenerator::ClientMutex"* %4, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %7) #10
  %8 = bitcast %"struct.blink::ImageFrameGenerator::ClientMutex"* %4 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i32 2147483646, i32* %10, align 4
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  %14 = and i32 %13, 2147483647
  %15 = and i32 %12, -2147483648
  %16 = or i32 %14, %15
  store i32 %16, i32* %11, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, i32* %17, align 4
  %20 = mul i32 %19, 6
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %20, %22
  %24 = icmp ugt i32 %22, 8
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %74

26:                                               ; preds = %9
  %27 = lshr i32 %22, 1
  %28 = zext i32 %27 to i64
  %29 = shl nuw nsw i64 %28, 4
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #10
  %31 = bitcast i8* %30 to %"struct.WTF::KeyValuePair"*
  %32 = icmp eq i32 %27, 0
  br i1 %32, label %72, label %33

33:                                               ; preds = %26
  %34 = add nsw i64 %28, -1
  %35 = and i64 %28, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %60, label %37

37:                                               ; preds = %33
  %38 = sub nsw i64 %28, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %57, %39 ]
  %41 = phi i64 [ %38, %37 ], [ %58, %39 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %40, i32 0
  store i32 2147483647, i32* %42, align 8
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %40, i32 1
  %44 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = or i64 %40, 1
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %45, i32 0
  store i32 2147483647, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %45, i32 1
  %48 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = or i64 %40, 2
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %49, i32 0
  store i32 2147483647, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %49, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = or i64 %40, 3
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %53, i32 0
  store i32 2147483647, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %53, i32 1
  %56 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = add nuw nsw i64 %40, 4
  %58 = add i64 %41, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %39

60:                                               ; preds = %39, %33
  %61 = phi i64 [ 0, %33 ], [ %57, %39 ]
  %62 = icmp eq i64 %35, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %69, %63 ], [ %61, %60 ]
  %65 = phi i64 [ %70, %63 ], [ %35, %60 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %64, i32 0
  store i32 2147483647, i32* %66, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %64, i32 1
  %68 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = add nuw nsw i64 %64, 1
  %70 = add i64 %65, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %63, !llvm.loop !7

72:                                               ; preds = %60, %63, %26
  %73 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink19ImageFrameGenerator11ClientMutexENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEENS_10HashTraitsIS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSM_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %31, i32 %27, %"struct.WTF::KeyValuePair"* null) #10
  br label %74

74:                                               ; preds = %72, %9
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
