; ModuleID = '../../third_party/libyuv/source/scale_common.cc'
source_filename = "../../third_party/libyuv/source/scale_common.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@cpu_info_ = external local_unnamed_addr global i32, align 4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown2_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 1
  br i1 %5, label %6, label %64

6:                                                ; preds = %4
  %7 = add i32 %3, -2
  %8 = lshr i32 %7, 1
  %9 = add nuw i32 %8, 1
  %10 = and i32 %9, 3
  %11 = icmp ult i32 %7, 6
  br i1 %11, label %45, label %12

12:                                               ; preds = %6
  %13 = sub i32 %9, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i8* [ %0, %12 ], [ %42, %14 ]
  %16 = phi i8* [ %2, %12 ], [ %41, %14 ]
  %17 = phi i32 [ %13, %12 ], [ %43, %14 ]
  %18 = getelementptr inbounds i8, i8* %15, i64 1
  %19 = load i8, i8* %18, align 1
  store i8 %19, i8* %16, align 1
  %20 = getelementptr inbounds i8, i8* %15, i64 3
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds i8, i8* %16, i64 2
  %24 = getelementptr inbounds i8, i8* %15, i64 5
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %23, align 1
  %26 = getelementptr inbounds i8, i8* %15, i64 7
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %16, i64 4
  %30 = getelementptr inbounds i8, i8* %15, i64 9
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds i8, i8* %15, i64 11
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %16, i64 5
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %16, i64 6
  %36 = getelementptr inbounds i8, i8* %15, i64 13
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %35, align 1
  %38 = getelementptr inbounds i8, i8* %15, i64 15
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %16, i64 7
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %16, i64 8
  %42 = getelementptr inbounds i8, i8* %15, i64 16
  %43 = add i32 %17, -4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %14

45:                                               ; preds = %14, %6
  %46 = phi i8* [ undef, %6 ], [ %41, %14 ]
  %47 = phi i8* [ undef, %6 ], [ %42, %14 ]
  %48 = phi i8* [ %0, %6 ], [ %42, %14 ]
  %49 = phi i8* [ %2, %6 ], [ %41, %14 ]
  %50 = icmp eq i32 %10, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %45, %51
  %52 = phi i8* [ %61, %51 ], [ %48, %45 ]
  %53 = phi i8* [ %60, %51 ], [ %49, %45 ]
  %54 = phi i32 [ %62, %51 ], [ %10, %45 ]
  %55 = getelementptr inbounds i8, i8* %52, i64 1
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %53, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i8, i8* %53, i64 2
  %61 = getelementptr inbounds i8, i8* %52, i64 4
  %62 = add i32 %54, -1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51, !llvm.loop !2

64:                                               ; preds = %45, %51, %4
  %65 = phi i8* [ %2, %4 ], [ %46, %45 ], [ %60, %51 ]
  %66 = phi i8* [ %0, %4 ], [ %47, %45 ], [ %61, %51 ]
  %67 = and i32 %3, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds i8, i8* %66, i64 1
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %65, align 1
  br label %72

72:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown2_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 1
  br i1 %5, label %6, label %64

6:                                                ; preds = %4
  %7 = add i32 %3, -2
  %8 = lshr i32 %7, 1
  %9 = add nuw i32 %8, 1
  %10 = and i32 %9, 3
  %11 = icmp ult i32 %7, 6
  br i1 %11, label %45, label %12

12:                                               ; preds = %6
  %13 = sub i32 %9, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i16* [ %0, %12 ], [ %42, %14 ]
  %16 = phi i16* [ %2, %12 ], [ %41, %14 ]
  %17 = phi i32 [ %13, %12 ], [ %43, %14 ]
  %18 = getelementptr inbounds i16, i16* %15, i64 1
  %19 = load i16, i16* %18, align 2
  store i16 %19, i16* %16, align 2
  %20 = getelementptr inbounds i16, i16* %15, i64 3
  %21 = load i16, i16* %20, align 2
  %22 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 %21, i16* %22, align 2
  %23 = getelementptr inbounds i16, i16* %16, i64 2
  %24 = getelementptr inbounds i16, i16* %15, i64 5
  %25 = load i16, i16* %24, align 2
  store i16 %25, i16* %23, align 2
  %26 = getelementptr inbounds i16, i16* %15, i64 7
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i16, i16* %16, i64 3
  store i16 %27, i16* %28, align 2
  %29 = getelementptr inbounds i16, i16* %16, i64 4
  %30 = getelementptr inbounds i16, i16* %15, i64 9
  %31 = load i16, i16* %30, align 2
  store i16 %31, i16* %29, align 2
  %32 = getelementptr inbounds i16, i16* %15, i64 11
  %33 = load i16, i16* %32, align 2
  %34 = getelementptr inbounds i16, i16* %16, i64 5
  store i16 %33, i16* %34, align 2
  %35 = getelementptr inbounds i16, i16* %16, i64 6
  %36 = getelementptr inbounds i16, i16* %15, i64 13
  %37 = load i16, i16* %36, align 2
  store i16 %37, i16* %35, align 2
  %38 = getelementptr inbounds i16, i16* %15, i64 15
  %39 = load i16, i16* %38, align 2
  %40 = getelementptr inbounds i16, i16* %16, i64 7
  store i16 %39, i16* %40, align 2
  %41 = getelementptr inbounds i16, i16* %16, i64 8
  %42 = getelementptr inbounds i16, i16* %15, i64 16
  %43 = add i32 %17, -4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %14

45:                                               ; preds = %14, %6
  %46 = phi i16* [ undef, %6 ], [ %41, %14 ]
  %47 = phi i16* [ undef, %6 ], [ %42, %14 ]
  %48 = phi i16* [ %0, %6 ], [ %42, %14 ]
  %49 = phi i16* [ %2, %6 ], [ %41, %14 ]
  %50 = icmp eq i32 %10, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %45, %51
  %52 = phi i16* [ %61, %51 ], [ %48, %45 ]
  %53 = phi i16* [ %60, %51 ], [ %49, %45 ]
  %54 = phi i32 [ %62, %51 ], [ %10, %45 ]
  %55 = getelementptr inbounds i16, i16* %52, i64 1
  %56 = load i16, i16* %55, align 2
  store i16 %56, i16* %53, align 2
  %57 = getelementptr inbounds i16, i16* %52, i64 3
  %58 = load i16, i16* %57, align 2
  %59 = getelementptr inbounds i16, i16* %53, i64 1
  store i16 %58, i16* %59, align 2
  %60 = getelementptr inbounds i16, i16* %53, i64 2
  %61 = getelementptr inbounds i16, i16* %52, i64 4
  %62 = add i32 %54, -1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51, !llvm.loop !4

64:                                               ; preds = %45, %51, %4
  %65 = phi i16* [ %2, %4 ], [ %46, %45 ], [ %60, %51 ]
  %66 = phi i16* [ %0, %4 ], [ %47, %45 ], [ %61, %51 ]
  %67 = and i32 %3, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds i16, i16* %66, i64 1
  %71 = load i16, i16* %70, align 2
  store i16 %71, i16* %65, align 2
  br label %72

72:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown2Linear_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 1
  br i1 %5, label %6, label %93

6:                                                ; preds = %4
  %7 = add i32 %3, -2
  %8 = lshr i32 %7, 1
  %9 = add nuw i32 %8, 1
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %64, label %12

12:                                               ; preds = %6
  %13 = sub nuw i32 %9, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i8* [ %0, %12 ], [ %61, %14 ]
  %16 = phi i8* [ %2, %12 ], [ %60, %14 ]
  %17 = phi i32 [ %13, %12 ], [ %62, %14 ]
  %18 = load i8, i8* %15, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds i8, i8* %15, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = add nuw nsw i32 %19, 1
  %24 = add nuw nsw i32 %23, %22
  %25 = lshr i32 %24, 1
  %26 = trunc i32 %25 to i8
  store i8 %26, i8* %16, align 1
  %27 = getelementptr inbounds i8, i8* %15, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds i8, i8* %15, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = add nuw nsw i32 %29, 1
  %34 = add nuw nsw i32 %33, %32
  %35 = lshr i32 %34, 1
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %16, i64 2
  %39 = getelementptr inbounds i8, i8* %15, i64 4
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds i8, i8* %15, i64 5
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = add nuw nsw i32 %41, 1
  %46 = add nuw nsw i32 %45, %44
  %47 = lshr i32 %46, 1
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %38, align 1
  %49 = getelementptr inbounds i8, i8* %15, i64 6
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = getelementptr inbounds i8, i8* %15, i64 7
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = add nuw nsw i32 %51, 1
  %56 = add nuw nsw i32 %55, %54
  %57 = lshr i32 %56, 1
  %58 = trunc i32 %57 to i8
  %59 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i8, i8* %16, i64 4
  %61 = getelementptr inbounds i8, i8* %15, i64 8
  %62 = add i32 %17, -2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %14

64:                                               ; preds = %14, %6
  %65 = phi i8* [ undef, %6 ], [ %60, %14 ]
  %66 = phi i8* [ undef, %6 ], [ %61, %14 ]
  %67 = phi i8* [ %0, %6 ], [ %61, %14 ]
  %68 = phi i8* [ %2, %6 ], [ %60, %14 ]
  %69 = icmp eq i32 %10, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %64
  %71 = load i8, i8* %67, align 1
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds i8, i8* %67, i64 1
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = add nuw nsw i32 %72, 1
  %77 = add nuw nsw i32 %76, %75
  %78 = lshr i32 %77, 1
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %68, align 1
  %80 = getelementptr inbounds i8, i8* %67, i64 2
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = getelementptr inbounds i8, i8* %67, i64 3
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = add nuw nsw i32 %82, 1
  %87 = add nuw nsw i32 %86, %85
  %88 = lshr i32 %87, 1
  %89 = trunc i32 %88 to i8
  %90 = getelementptr inbounds i8, i8* %68, i64 1
  store i8 %89, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %67, i64 4
  %92 = getelementptr inbounds i8, i8* %68, i64 2
  br label %93

93:                                               ; preds = %70, %64, %4
  %94 = phi i8* [ %2, %4 ], [ %65, %64 ], [ %92, %70 ]
  %95 = phi i8* [ %0, %4 ], [ %66, %64 ], [ %91, %70 ]
  %96 = and i32 %3, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %93
  %99 = load i8, i8* %95, align 1
  %100 = zext i8 %99 to i32
  %101 = getelementptr inbounds i8, i8* %95, i64 1
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = add nuw nsw i32 %100, 1
  %105 = add nuw nsw i32 %104, %103
  %106 = lshr i32 %105, 1
  %107 = trunc i32 %106 to i8
  store i8 %107, i8* %94, align 1
  br label %108

108:                                              ; preds = %93, %98
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown2Linear_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 1
  br i1 %5, label %6, label %93

6:                                                ; preds = %4
  %7 = add i32 %3, -2
  %8 = lshr i32 %7, 1
  %9 = add nuw i32 %8, 1
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %64, label %12

12:                                               ; preds = %6
  %13 = sub nuw i32 %9, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i16* [ %0, %12 ], [ %61, %14 ]
  %16 = phi i16* [ %2, %12 ], [ %60, %14 ]
  %17 = phi i32 [ %13, %12 ], [ %62, %14 ]
  %18 = load i16, i16* %15, align 2
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds i16, i16* %15, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = add nuw nsw i32 %19, 1
  %24 = add nuw nsw i32 %23, %22
  %25 = lshr i32 %24, 1
  %26 = trunc i32 %25 to i16
  store i16 %26, i16* %16, align 2
  %27 = getelementptr inbounds i16, i16* %15, i64 2
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = getelementptr inbounds i16, i16* %15, i64 3
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nuw nsw i32 %29, 1
  %34 = add nuw nsw i32 %33, %32
  %35 = lshr i32 %34, 1
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds i16, i16* %16, i64 2
  %39 = getelementptr inbounds i16, i16* %15, i64 4
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = getelementptr inbounds i16, i16* %15, i64 5
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nuw nsw i32 %41, 1
  %46 = add nuw nsw i32 %45, %44
  %47 = lshr i32 %46, 1
  %48 = trunc i32 %47 to i16
  store i16 %48, i16* %38, align 2
  %49 = getelementptr inbounds i16, i16* %15, i64 6
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds i16, i16* %15, i64 7
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = add nuw nsw i32 %51, 1
  %56 = add nuw nsw i32 %55, %54
  %57 = lshr i32 %56, 1
  %58 = trunc i32 %57 to i16
  %59 = getelementptr inbounds i16, i16* %16, i64 3
  store i16 %58, i16* %59, align 2
  %60 = getelementptr inbounds i16, i16* %16, i64 4
  %61 = getelementptr inbounds i16, i16* %15, i64 8
  %62 = add i32 %17, -2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %14

64:                                               ; preds = %14, %6
  %65 = phi i16* [ undef, %6 ], [ %60, %14 ]
  %66 = phi i16* [ undef, %6 ], [ %61, %14 ]
  %67 = phi i16* [ %0, %6 ], [ %61, %14 ]
  %68 = phi i16* [ %2, %6 ], [ %60, %14 ]
  %69 = icmp eq i32 %10, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %64
  %71 = load i16, i16* %67, align 2
  %72 = zext i16 %71 to i32
  %73 = getelementptr inbounds i16, i16* %67, i64 1
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = add nuw nsw i32 %72, 1
  %77 = add nuw nsw i32 %76, %75
  %78 = lshr i32 %77, 1
  %79 = trunc i32 %78 to i16
  store i16 %79, i16* %68, align 2
  %80 = getelementptr inbounds i16, i16* %67, i64 2
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = getelementptr inbounds i16, i16* %67, i64 3
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = add nuw nsw i32 %82, 1
  %87 = add nuw nsw i32 %86, %85
  %88 = lshr i32 %87, 1
  %89 = trunc i32 %88 to i16
  %90 = getelementptr inbounds i16, i16* %68, i64 1
  store i16 %89, i16* %90, align 2
  %91 = getelementptr inbounds i16, i16* %67, i64 4
  %92 = getelementptr inbounds i16, i16* %68, i64 2
  br label %93

93:                                               ; preds = %70, %64, %4
  %94 = phi i16* [ %2, %4 ], [ %65, %64 ], [ %92, %70 ]
  %95 = phi i16* [ %0, %4 ], [ %66, %64 ], [ %91, %70 ]
  %96 = and i32 %3, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %93
  %99 = load i16, i16* %95, align 2
  %100 = zext i16 %99 to i32
  %101 = getelementptr inbounds i16, i16* %95, i64 1
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = add nuw nsw i32 %100, 1
  %105 = add nuw nsw i32 %104, %103
  %106 = lshr i32 %105, 1
  %107 = trunc i32 %106 to i16
  store i16 %107, i16* %94, align 2
  br label %108

108:                                              ; preds = %93, %98
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown2Box_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds i8, i8* %0, i64 %1
  %6 = add nsw i32 %3, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %53

8:                                                ; preds = %4, %8
  %9 = phi i32 [ %51, %8 ], [ 0, %4 ]
  %10 = phi i8* [ %50, %8 ], [ %5, %4 ]
  %11 = phi i8* [ %49, %8 ], [ %0, %4 ]
  %12 = phi i8* [ %48, %8 ], [ %2, %4 ]
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds i8, i8* %11, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = load i8, i8* %10, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds i8, i8* %10, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = add nuw nsw i32 %14, 2
  %24 = add nuw nsw i32 %23, %17
  %25 = add nuw nsw i32 %24, %19
  %26 = add nuw nsw i32 %25, %22
  %27 = lshr i32 %26, 2
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %12, align 1
  %29 = getelementptr inbounds i8, i8* %11, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds i8, i8* %11, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds i8, i8* %10, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = add nuw nsw i32 %31, 2
  %42 = add nuw nsw i32 %41, %34
  %43 = add nuw nsw i32 %42, %37
  %44 = add nuw nsw i32 %43, %40
  %45 = lshr i32 %44, 2
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %46, i8* %47, align 1
  %48 = getelementptr inbounds i8, i8* %12, i64 2
  %49 = getelementptr inbounds i8, i8* %11, i64 4
  %50 = getelementptr inbounds i8, i8* %10, i64 4
  %51 = add nuw nsw i32 %9, 2
  %52 = icmp slt i32 %51, %6
  br i1 %52, label %8, label %53

53:                                               ; preds = %8, %4
  %54 = phi i8* [ %2, %4 ], [ %48, %8 ]
  %55 = phi i8* [ %0, %4 ], [ %49, %8 ]
  %56 = phi i8* [ %5, %4 ], [ %50, %8 ]
  %57 = and i32 %3, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %76, label %59

59:                                               ; preds = %53
  %60 = load i8, i8* %55, align 1
  %61 = zext i8 %60 to i32
  %62 = getelementptr inbounds i8, i8* %55, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = load i8, i8* %56, align 1
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds i8, i8* %56, i64 1
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = add nuw nsw i32 %61, 2
  %71 = add nuw nsw i32 %70, %64
  %72 = add nuw nsw i32 %71, %66
  %73 = add nuw nsw i32 %72, %69
  %74 = lshr i32 %73, 2
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %54, align 1
  br label %76

76:                                               ; preds = %53, %59
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown2Box_Odd_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds i8, i8* %0, i64 %1
  %6 = add nsw i32 %3, -2
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %53

8:                                                ; preds = %4, %8
  %9 = phi i32 [ %51, %8 ], [ 0, %4 ]
  %10 = phi i8* [ %50, %8 ], [ %5, %4 ]
  %11 = phi i8* [ %49, %8 ], [ %0, %4 ]
  %12 = phi i8* [ %48, %8 ], [ %2, %4 ]
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds i8, i8* %11, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = load i8, i8* %10, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds i8, i8* %10, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = add nuw nsw i32 %14, 2
  %24 = add nuw nsw i32 %23, %17
  %25 = add nuw nsw i32 %24, %19
  %26 = add nuw nsw i32 %25, %22
  %27 = lshr i32 %26, 2
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %12, align 1
  %29 = getelementptr inbounds i8, i8* %11, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds i8, i8* %11, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds i8, i8* %10, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = add nuw nsw i32 %31, 2
  %42 = add nuw nsw i32 %41, %34
  %43 = add nuw nsw i32 %42, %37
  %44 = add nuw nsw i32 %43, %40
  %45 = lshr i32 %44, 2
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %46, i8* %47, align 1
  %48 = getelementptr inbounds i8, i8* %12, i64 2
  %49 = getelementptr inbounds i8, i8* %11, i64 4
  %50 = getelementptr inbounds i8, i8* %10, i64 4
  %51 = add nuw nsw i32 %9, 2
  %52 = icmp slt i32 %51, %6
  br i1 %52, label %8, label %53

53:                                               ; preds = %8, %4
  %54 = phi i8* [ %2, %4 ], [ %48, %8 ]
  %55 = phi i8* [ %0, %4 ], [ %49, %8 ]
  %56 = phi i8* [ %5, %4 ], [ %50, %8 ]
  %57 = and i32 %3, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %79

59:                                               ; preds = %53
  %60 = load i8, i8* %55, align 1
  %61 = zext i8 %60 to i32
  %62 = getelementptr inbounds i8, i8* %55, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = load i8, i8* %56, align 1
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds i8, i8* %56, i64 1
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = add nuw nsw i32 %61, 2
  %71 = add nuw nsw i32 %70, %64
  %72 = add nuw nsw i32 %71, %66
  %73 = add nuw nsw i32 %72, %69
  %74 = lshr i32 %73, 2
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %54, align 1
  %76 = getelementptr inbounds i8, i8* %54, i64 1
  %77 = getelementptr inbounds i8, i8* %55, i64 2
  %78 = getelementptr inbounds i8, i8* %56, i64 2
  br label %79

79:                                               ; preds = %59, %53
  %80 = phi i8* [ %76, %59 ], [ %54, %53 ]
  %81 = phi i8* [ %77, %59 ], [ %55, %53 ]
  %82 = phi i8* [ %78, %59 ], [ %56, %53 ]
  %83 = load i8, i8* %81, align 1
  %84 = zext i8 %83 to i32
  %85 = load i8, i8* %82, align 1
  %86 = zext i8 %85 to i32
  %87 = add nuw nsw i32 %84, 1
  %88 = add nuw nsw i32 %87, %86
  %89 = lshr i32 %88, 1
  %90 = trunc i32 %89 to i8
  store i8 %90, i8* %80, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown2Box_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds i16, i16* %0, i64 %1
  %6 = add nsw i32 %3, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %53

8:                                                ; preds = %4, %8
  %9 = phi i32 [ %51, %8 ], [ 0, %4 ]
  %10 = phi i16* [ %50, %8 ], [ %5, %4 ]
  %11 = phi i16* [ %49, %8 ], [ %0, %4 ]
  %12 = phi i16* [ %48, %8 ], [ %2, %4 ]
  %13 = load i16, i16* %11, align 2
  %14 = zext i16 %13 to i32
  %15 = getelementptr inbounds i16, i16* %11, i64 1
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = load i16, i16* %10, align 2
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds i16, i16* %10, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = add nuw nsw i32 %14, 2
  %24 = add nuw nsw i32 %23, %17
  %25 = add nuw nsw i32 %24, %19
  %26 = add nuw nsw i32 %25, %22
  %27 = lshr i32 %26, 2
  %28 = trunc i32 %27 to i16
  store i16 %28, i16* %12, align 2
  %29 = getelementptr inbounds i16, i16* %11, i64 2
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = getelementptr inbounds i16, i16* %11, i64 3
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds i16, i16* %10, i64 2
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = getelementptr inbounds i16, i16* %10, i64 3
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = add nuw nsw i32 %31, 2
  %42 = add nuw nsw i32 %41, %34
  %43 = add nuw nsw i32 %42, %37
  %44 = add nuw nsw i32 %43, %40
  %45 = lshr i32 %44, 2
  %46 = trunc i32 %45 to i16
  %47 = getelementptr inbounds i16, i16* %12, i64 1
  store i16 %46, i16* %47, align 2
  %48 = getelementptr inbounds i16, i16* %12, i64 2
  %49 = getelementptr inbounds i16, i16* %11, i64 4
  %50 = getelementptr inbounds i16, i16* %10, i64 4
  %51 = add nuw nsw i32 %9, 2
  %52 = icmp slt i32 %51, %6
  br i1 %52, label %8, label %53

53:                                               ; preds = %8, %4
  %54 = phi i16* [ %2, %4 ], [ %48, %8 ]
  %55 = phi i16* [ %0, %4 ], [ %49, %8 ]
  %56 = phi i16* [ %5, %4 ], [ %50, %8 ]
  %57 = and i32 %3, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %76, label %59

59:                                               ; preds = %53
  %60 = load i16, i16* %55, align 2
  %61 = zext i16 %60 to i32
  %62 = getelementptr inbounds i16, i16* %55, i64 1
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = load i16, i16* %56, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %56, i64 1
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = add nuw nsw i32 %61, 2
  %71 = add nuw nsw i32 %70, %64
  %72 = add nuw nsw i32 %71, %66
  %73 = add nuw nsw i32 %72, %69
  %74 = lshr i32 %73, 2
  %75 = trunc i32 %74 to i16
  store i16 %75, i16* %54, align 2
  br label %76

76:                                               ; preds = %53, %59
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown4_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 1
  br i1 %5, label %6, label %64

6:                                                ; preds = %4
  %7 = add i32 %3, -2
  %8 = lshr i32 %7, 1
  %9 = add nuw i32 %8, 1
  %10 = and i32 %9, 3
  %11 = icmp ult i32 %7, 6
  br i1 %11, label %45, label %12

12:                                               ; preds = %6
  %13 = sub i32 %9, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i8* [ %0, %12 ], [ %42, %14 ]
  %16 = phi i8* [ %2, %12 ], [ %41, %14 ]
  %17 = phi i32 [ %13, %12 ], [ %43, %14 ]
  %18 = getelementptr inbounds i8, i8* %15, i64 2
  %19 = load i8, i8* %18, align 1
  store i8 %19, i8* %16, align 1
  %20 = getelementptr inbounds i8, i8* %15, i64 6
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds i8, i8* %16, i64 2
  %24 = getelementptr inbounds i8, i8* %15, i64 10
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %23, align 1
  %26 = getelementptr inbounds i8, i8* %15, i64 14
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %16, i64 4
  %30 = getelementptr inbounds i8, i8* %15, i64 18
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds i8, i8* %15, i64 22
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %16, i64 5
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %16, i64 6
  %36 = getelementptr inbounds i8, i8* %15, i64 26
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %35, align 1
  %38 = getelementptr inbounds i8, i8* %15, i64 30
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %16, i64 7
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %16, i64 8
  %42 = getelementptr inbounds i8, i8* %15, i64 32
  %43 = add i32 %17, -4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %14

45:                                               ; preds = %14, %6
  %46 = phi i8* [ undef, %6 ], [ %41, %14 ]
  %47 = phi i8* [ undef, %6 ], [ %42, %14 ]
  %48 = phi i8* [ %0, %6 ], [ %42, %14 ]
  %49 = phi i8* [ %2, %6 ], [ %41, %14 ]
  %50 = icmp eq i32 %10, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %45, %51
  %52 = phi i8* [ %61, %51 ], [ %48, %45 ]
  %53 = phi i8* [ %60, %51 ], [ %49, %45 ]
  %54 = phi i32 [ %62, %51 ], [ %10, %45 ]
  %55 = getelementptr inbounds i8, i8* %52, i64 2
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %53, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 6
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i8, i8* %53, i64 2
  %61 = getelementptr inbounds i8, i8* %52, i64 8
  %62 = add i32 %54, -1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51, !llvm.loop !5

64:                                               ; preds = %45, %51, %4
  %65 = phi i8* [ %2, %4 ], [ %46, %45 ], [ %60, %51 ]
  %66 = phi i8* [ %0, %4 ], [ %47, %45 ], [ %61, %51 ]
  %67 = and i32 %3, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds i8, i8* %66, i64 2
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %65, align 1
  br label %72

72:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown4_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 1
  br i1 %5, label %6, label %64

6:                                                ; preds = %4
  %7 = add i32 %3, -2
  %8 = lshr i32 %7, 1
  %9 = add nuw i32 %8, 1
  %10 = and i32 %9, 3
  %11 = icmp ult i32 %7, 6
  br i1 %11, label %45, label %12

12:                                               ; preds = %6
  %13 = sub i32 %9, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i16* [ %0, %12 ], [ %42, %14 ]
  %16 = phi i16* [ %2, %12 ], [ %41, %14 ]
  %17 = phi i32 [ %13, %12 ], [ %43, %14 ]
  %18 = getelementptr inbounds i16, i16* %15, i64 2
  %19 = load i16, i16* %18, align 2
  store i16 %19, i16* %16, align 2
  %20 = getelementptr inbounds i16, i16* %15, i64 6
  %21 = load i16, i16* %20, align 2
  %22 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 %21, i16* %22, align 2
  %23 = getelementptr inbounds i16, i16* %16, i64 2
  %24 = getelementptr inbounds i16, i16* %15, i64 10
  %25 = load i16, i16* %24, align 2
  store i16 %25, i16* %23, align 2
  %26 = getelementptr inbounds i16, i16* %15, i64 14
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i16, i16* %16, i64 3
  store i16 %27, i16* %28, align 2
  %29 = getelementptr inbounds i16, i16* %16, i64 4
  %30 = getelementptr inbounds i16, i16* %15, i64 18
  %31 = load i16, i16* %30, align 2
  store i16 %31, i16* %29, align 2
  %32 = getelementptr inbounds i16, i16* %15, i64 22
  %33 = load i16, i16* %32, align 2
  %34 = getelementptr inbounds i16, i16* %16, i64 5
  store i16 %33, i16* %34, align 2
  %35 = getelementptr inbounds i16, i16* %16, i64 6
  %36 = getelementptr inbounds i16, i16* %15, i64 26
  %37 = load i16, i16* %36, align 2
  store i16 %37, i16* %35, align 2
  %38 = getelementptr inbounds i16, i16* %15, i64 30
  %39 = load i16, i16* %38, align 2
  %40 = getelementptr inbounds i16, i16* %16, i64 7
  store i16 %39, i16* %40, align 2
  %41 = getelementptr inbounds i16, i16* %16, i64 8
  %42 = getelementptr inbounds i16, i16* %15, i64 32
  %43 = add i32 %17, -4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %14

45:                                               ; preds = %14, %6
  %46 = phi i16* [ undef, %6 ], [ %41, %14 ]
  %47 = phi i16* [ undef, %6 ], [ %42, %14 ]
  %48 = phi i16* [ %0, %6 ], [ %42, %14 ]
  %49 = phi i16* [ %2, %6 ], [ %41, %14 ]
  %50 = icmp eq i32 %10, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %45, %51
  %52 = phi i16* [ %61, %51 ], [ %48, %45 ]
  %53 = phi i16* [ %60, %51 ], [ %49, %45 ]
  %54 = phi i32 [ %62, %51 ], [ %10, %45 ]
  %55 = getelementptr inbounds i16, i16* %52, i64 2
  %56 = load i16, i16* %55, align 2
  store i16 %56, i16* %53, align 2
  %57 = getelementptr inbounds i16, i16* %52, i64 6
  %58 = load i16, i16* %57, align 2
  %59 = getelementptr inbounds i16, i16* %53, i64 1
  store i16 %58, i16* %59, align 2
  %60 = getelementptr inbounds i16, i16* %53, i64 2
  %61 = getelementptr inbounds i16, i16* %52, i64 8
  %62 = add i32 %54, -1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51, !llvm.loop !6

64:                                               ; preds = %45, %51, %4
  %65 = phi i16* [ %2, %4 ], [ %46, %45 ], [ %60, %51 ]
  %66 = phi i16* [ %0, %4 ], [ %47, %45 ], [ %61, %51 ]
  %67 = and i32 %3, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds i16, i16* %66, i64 2
  %71 = load i16, i16* %70, align 2
  store i16 %71, i16* %65, align 2
  br label %72

72:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown4Box_C(i8* readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = add nsw i32 %3, -1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %171

7:                                                ; preds = %4
  %8 = add nsw i64 %1, 1
  %9 = add nsw i64 %1, 2
  %10 = add nsw i64 %1, 3
  %11 = shl nsw i64 %1, 1
  %12 = or i64 %11, 1
  %13 = add nsw i64 %11, 2
  %14 = add nsw i64 %11, 3
  %15 = mul nsw i64 %1, 3
  %16 = add nsw i64 %15, 1
  %17 = add nsw i64 %15, 2
  %18 = add nsw i64 %15, 3
  %19 = add nsw i64 %1, 4
  %20 = add nsw i64 %1, 5
  %21 = add nsw i64 %1, 6
  %22 = add nsw i64 %1, 7
  %23 = add nsw i64 %11, 4
  %24 = add nsw i64 %11, 5
  %25 = add nsw i64 %11, 6
  %26 = add nsw i64 %11, 7
  %27 = add nsw i64 %15, 4
  %28 = add nsw i64 %15, 5
  %29 = add nsw i64 %15, 6
  %30 = add nsw i64 %15, 7
  br label %31

31:                                               ; preds = %7, %31
  %32 = phi i32 [ 0, %7 ], [ %169, %31 ]
  %33 = phi i8* [ %0, %7 ], [ %168, %31 ]
  %34 = phi i8* [ %2, %7 ], [ %167, %31 ]
  %35 = load i8, i8* %33, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds i8, i8* %33, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds i8, i8* %33, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i8, i8* %33, i64 3
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %33, i64 %1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds i8, i8* %33, i64 %8
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = getelementptr inbounds i8, i8* %33, i64 %9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds i8, i8* %33, i64 %10
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = getelementptr inbounds i8, i8* %33, i64 %11
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds i8, i8* %33, i64 %12
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds i8, i8* %33, i64 %13
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds i8, i8* %33, i64 %14
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = getelementptr inbounds i8, i8* %33, i64 %15
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds i8, i8* %33, i64 %16
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = getelementptr inbounds i8, i8* %33, i64 %17
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds i8, i8* %33, i64 %18
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = add nuw nsw i32 %36, 8
  %83 = add nuw nsw i32 %82, %39
  %84 = add nuw nsw i32 %83, %42
  %85 = add nuw nsw i32 %84, %45
  %86 = add nuw nsw i32 %85, %48
  %87 = add nuw nsw i32 %86, %51
  %88 = add nuw nsw i32 %87, %54
  %89 = add nuw nsw i32 %88, %57
  %90 = add nuw nsw i32 %89, %60
  %91 = add nuw nsw i32 %90, %63
  %92 = add nuw nsw i32 %91, %66
  %93 = add nuw nsw i32 %92, %69
  %94 = add nuw nsw i32 %93, %72
  %95 = add nuw nsw i32 %94, %75
  %96 = add nuw nsw i32 %95, %78
  %97 = add nuw nsw i32 %96, %81
  %98 = lshr i32 %97, 4
  %99 = trunc i32 %98 to i8
  store i8 %99, i8* %34, align 1
  %100 = getelementptr inbounds i8, i8* %33, i64 4
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds i8, i8* %33, i64 5
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = getelementptr inbounds i8, i8* %33, i64 6
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = getelementptr inbounds i8, i8* %33, i64 7
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = getelementptr inbounds i8, i8* %33, i64 %19
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = getelementptr inbounds i8, i8* %33, i64 %20
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = getelementptr inbounds i8, i8* %33, i64 %21
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = getelementptr inbounds i8, i8* %33, i64 %22
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = getelementptr inbounds i8, i8* %33, i64 %23
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = getelementptr inbounds i8, i8* %33, i64 %24
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds i8, i8* %33, i64 %25
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = getelementptr inbounds i8, i8* %33, i64 %26
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = getelementptr inbounds i8, i8* %33, i64 %27
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = getelementptr inbounds i8, i8* %33, i64 %28
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = getelementptr inbounds i8, i8* %33, i64 %29
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds i8, i8* %33, i64 %30
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = add nuw nsw i32 %102, 8
  %149 = add nuw nsw i32 %148, %105
  %150 = add nuw nsw i32 %149, %108
  %151 = add nuw nsw i32 %150, %111
  %152 = add nuw nsw i32 %151, %114
  %153 = add nuw nsw i32 %152, %117
  %154 = add nuw nsw i32 %153, %120
  %155 = add nuw nsw i32 %154, %123
  %156 = add nuw nsw i32 %155, %126
  %157 = add nuw nsw i32 %156, %129
  %158 = add nuw nsw i32 %157, %132
  %159 = add nuw nsw i32 %158, %135
  %160 = add nuw nsw i32 %159, %138
  %161 = add nuw nsw i32 %160, %141
  %162 = add nuw nsw i32 %161, %144
  %163 = add nuw nsw i32 %162, %147
  %164 = lshr i32 %163, 4
  %165 = trunc i32 %164 to i8
  %166 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %165, i8* %166, align 1
  %167 = getelementptr inbounds i8, i8* %34, i64 2
  %168 = getelementptr inbounds i8, i8* %33, i64 8
  %169 = add nuw nsw i32 %32, 2
  %170 = icmp slt i32 %169, %5
  br i1 %170, label %31, label %171

171:                                              ; preds = %31, %4
  %172 = phi i8* [ %2, %4 ], [ %167, %31 ]
  %173 = phi i8* [ %0, %4 ], [ %168, %31 ]
  %174 = and i32 %3, 1
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %253, label %176

176:                                              ; preds = %171
  %177 = load i8, i8* %173, align 1
  %178 = zext i8 %177 to i32
  %179 = getelementptr inbounds i8, i8* %173, i64 1
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = getelementptr inbounds i8, i8* %173, i64 2
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = getelementptr inbounds i8, i8* %173, i64 3
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = getelementptr inbounds i8, i8* %173, i64 %1
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = add nsw i64 %1, 1
  %192 = getelementptr inbounds i8, i8* %173, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = add nsw i64 %1, 2
  %196 = getelementptr inbounds i8, i8* %173, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = add nsw i64 %1, 3
  %200 = getelementptr inbounds i8, i8* %173, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = shl nsw i64 %1, 1
  %204 = getelementptr inbounds i8, i8* %173, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = or i64 %203, 1
  %208 = getelementptr inbounds i8, i8* %173, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = add nsw i64 %203, 2
  %212 = getelementptr inbounds i8, i8* %173, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = add nsw i64 %203, 3
  %216 = getelementptr inbounds i8, i8* %173, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = mul nsw i64 %1, 3
  %220 = getelementptr inbounds i8, i8* %173, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = add nsw i64 %219, 1
  %224 = getelementptr inbounds i8, i8* %173, i64 %223
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = add nsw i64 %219, 2
  %228 = getelementptr inbounds i8, i8* %173, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = add nsw i64 %219, 3
  %232 = getelementptr inbounds i8, i8* %173, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = add nuw nsw i32 %178, 8
  %236 = add nuw nsw i32 %235, %181
  %237 = add nuw nsw i32 %236, %184
  %238 = add nuw nsw i32 %237, %187
  %239 = add nuw nsw i32 %238, %190
  %240 = add nuw nsw i32 %239, %194
  %241 = add nuw nsw i32 %240, %198
  %242 = add nuw nsw i32 %241, %202
  %243 = add nuw nsw i32 %242, %206
  %244 = add nuw nsw i32 %243, %210
  %245 = add nuw nsw i32 %244, %214
  %246 = add nuw nsw i32 %245, %218
  %247 = add nuw nsw i32 %246, %222
  %248 = add nuw nsw i32 %247, %226
  %249 = add nuw nsw i32 %248, %230
  %250 = add nuw nsw i32 %249, %234
  %251 = lshr i32 %250, 4
  %252 = trunc i32 %251 to i8
  store i8 %252, i8* %172, align 1
  br label %253

253:                                              ; preds = %171, %176
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown4Box_16_C(i16* readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = add nsw i32 %3, -1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %171

7:                                                ; preds = %4
  %8 = add nsw i64 %1, 1
  %9 = add nsw i64 %1, 2
  %10 = add nsw i64 %1, 3
  %11 = shl nsw i64 %1, 1
  %12 = or i64 %11, 1
  %13 = add nsw i64 %11, 2
  %14 = add nsw i64 %11, 3
  %15 = mul nsw i64 %1, 3
  %16 = add nsw i64 %15, 1
  %17 = add nsw i64 %15, 2
  %18 = add nsw i64 %15, 3
  %19 = add nsw i64 %1, 4
  %20 = add nsw i64 %1, 5
  %21 = add nsw i64 %1, 6
  %22 = add nsw i64 %1, 7
  %23 = add nsw i64 %11, 4
  %24 = add nsw i64 %11, 5
  %25 = add nsw i64 %11, 6
  %26 = add nsw i64 %11, 7
  %27 = add nsw i64 %15, 4
  %28 = add nsw i64 %15, 5
  %29 = add nsw i64 %15, 6
  %30 = add nsw i64 %15, 7
  br label %31

31:                                               ; preds = %7, %31
  %32 = phi i32 [ 0, %7 ], [ %169, %31 ]
  %33 = phi i16* [ %0, %7 ], [ %168, %31 ]
  %34 = phi i16* [ %2, %7 ], [ %167, %31 ]
  %35 = load i16, i16* %33, align 2
  %36 = zext i16 %35 to i32
  %37 = getelementptr inbounds i16, i16* %33, i64 1
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = getelementptr inbounds i16, i16* %33, i64 2
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds i16, i16* %33, i64 3
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %33, i64 %1
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = getelementptr inbounds i16, i16* %33, i64 %8
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds i16, i16* %33, i64 %9
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = getelementptr inbounds i16, i16* %33, i64 %10
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = getelementptr inbounds i16, i16* %33, i64 %11
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = getelementptr inbounds i16, i16* %33, i64 %12
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = getelementptr inbounds i16, i16* %33, i64 %13
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %33, i64 %14
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = getelementptr inbounds i16, i16* %33, i64 %15
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = getelementptr inbounds i16, i16* %33, i64 %16
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = getelementptr inbounds i16, i16* %33, i64 %17
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = getelementptr inbounds i16, i16* %33, i64 %18
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = add nuw nsw i32 %36, 8
  %83 = add nuw nsw i32 %82, %39
  %84 = add nuw nsw i32 %83, %42
  %85 = add nuw nsw i32 %84, %45
  %86 = add nuw nsw i32 %85, %48
  %87 = add nuw nsw i32 %86, %51
  %88 = add nuw nsw i32 %87, %54
  %89 = add nuw nsw i32 %88, %57
  %90 = add nuw nsw i32 %89, %60
  %91 = add nuw nsw i32 %90, %63
  %92 = add nuw nsw i32 %91, %66
  %93 = add nuw nsw i32 %92, %69
  %94 = add nuw nsw i32 %93, %72
  %95 = add nuw nsw i32 %94, %75
  %96 = add nuw nsw i32 %95, %78
  %97 = add nuw nsw i32 %96, %81
  %98 = lshr i32 %97, 4
  %99 = trunc i32 %98 to i16
  store i16 %99, i16* %34, align 2
  %100 = getelementptr inbounds i16, i16* %33, i64 4
  %101 = load i16, i16* %100, align 2
  %102 = zext i16 %101 to i32
  %103 = getelementptr inbounds i16, i16* %33, i64 5
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = getelementptr inbounds i16, i16* %33, i64 6
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = getelementptr inbounds i16, i16* %33, i64 7
  %110 = load i16, i16* %109, align 2
  %111 = zext i16 %110 to i32
  %112 = getelementptr inbounds i16, i16* %33, i64 %19
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = getelementptr inbounds i16, i16* %33, i64 %20
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds i16, i16* %33, i64 %21
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %33, i64 %22
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = getelementptr inbounds i16, i16* %33, i64 %23
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = getelementptr inbounds i16, i16* %33, i64 %24
  %128 = load i16, i16* %127, align 2
  %129 = zext i16 %128 to i32
  %130 = getelementptr inbounds i16, i16* %33, i64 %25
  %131 = load i16, i16* %130, align 2
  %132 = zext i16 %131 to i32
  %133 = getelementptr inbounds i16, i16* %33, i64 %26
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i32
  %136 = getelementptr inbounds i16, i16* %33, i64 %27
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = getelementptr inbounds i16, i16* %33, i64 %28
  %140 = load i16, i16* %139, align 2
  %141 = zext i16 %140 to i32
  %142 = getelementptr inbounds i16, i16* %33, i64 %29
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = getelementptr inbounds i16, i16* %33, i64 %30
  %146 = load i16, i16* %145, align 2
  %147 = zext i16 %146 to i32
  %148 = add nuw nsw i32 %102, 8
  %149 = add nuw nsw i32 %148, %105
  %150 = add nuw nsw i32 %149, %108
  %151 = add nuw nsw i32 %150, %111
  %152 = add nuw nsw i32 %151, %114
  %153 = add nuw nsw i32 %152, %117
  %154 = add nuw nsw i32 %153, %120
  %155 = add nuw nsw i32 %154, %123
  %156 = add nuw nsw i32 %155, %126
  %157 = add nuw nsw i32 %156, %129
  %158 = add nuw nsw i32 %157, %132
  %159 = add nuw nsw i32 %158, %135
  %160 = add nuw nsw i32 %159, %138
  %161 = add nuw nsw i32 %160, %141
  %162 = add nuw nsw i32 %161, %144
  %163 = add nuw nsw i32 %162, %147
  %164 = lshr i32 %163, 4
  %165 = trunc i32 %164 to i16
  %166 = getelementptr inbounds i16, i16* %34, i64 1
  store i16 %165, i16* %166, align 2
  %167 = getelementptr inbounds i16, i16* %34, i64 2
  %168 = getelementptr inbounds i16, i16* %33, i64 8
  %169 = add nuw nsw i32 %32, 2
  %170 = icmp slt i32 %169, %5
  br i1 %170, label %31, label %171

171:                                              ; preds = %31, %4
  %172 = phi i16* [ %2, %4 ], [ %167, %31 ]
  %173 = phi i16* [ %0, %4 ], [ %168, %31 ]
  %174 = and i32 %3, 1
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %253, label %176

176:                                              ; preds = %171
  %177 = load i16, i16* %173, align 2
  %178 = zext i16 %177 to i32
  %179 = getelementptr inbounds i16, i16* %173, i64 1
  %180 = load i16, i16* %179, align 2
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds i16, i16* %173, i64 2
  %183 = load i16, i16* %182, align 2
  %184 = zext i16 %183 to i32
  %185 = getelementptr inbounds i16, i16* %173, i64 3
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i32
  %188 = getelementptr inbounds i16, i16* %173, i64 %1
  %189 = load i16, i16* %188, align 2
  %190 = zext i16 %189 to i32
  %191 = add nsw i64 %1, 1
  %192 = getelementptr inbounds i16, i16* %173, i64 %191
  %193 = load i16, i16* %192, align 2
  %194 = zext i16 %193 to i32
  %195 = add nsw i64 %1, 2
  %196 = getelementptr inbounds i16, i16* %173, i64 %195
  %197 = load i16, i16* %196, align 2
  %198 = zext i16 %197 to i32
  %199 = add nsw i64 %1, 3
  %200 = getelementptr inbounds i16, i16* %173, i64 %199
  %201 = load i16, i16* %200, align 2
  %202 = zext i16 %201 to i32
  %203 = shl nsw i64 %1, 1
  %204 = getelementptr inbounds i16, i16* %173, i64 %203
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  %207 = or i64 %203, 1
  %208 = getelementptr inbounds i16, i16* %173, i64 %207
  %209 = load i16, i16* %208, align 2
  %210 = zext i16 %209 to i32
  %211 = add nsw i64 %203, 2
  %212 = getelementptr inbounds i16, i16* %173, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = add nsw i64 %203, 3
  %216 = getelementptr inbounds i16, i16* %173, i64 %215
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = mul nsw i64 %1, 3
  %220 = getelementptr inbounds i16, i16* %173, i64 %219
  %221 = load i16, i16* %220, align 2
  %222 = zext i16 %221 to i32
  %223 = add nsw i64 %219, 1
  %224 = getelementptr inbounds i16, i16* %173, i64 %223
  %225 = load i16, i16* %224, align 2
  %226 = zext i16 %225 to i32
  %227 = add nsw i64 %219, 2
  %228 = getelementptr inbounds i16, i16* %173, i64 %227
  %229 = load i16, i16* %228, align 2
  %230 = zext i16 %229 to i32
  %231 = add nsw i64 %219, 3
  %232 = getelementptr inbounds i16, i16* %173, i64 %231
  %233 = load i16, i16* %232, align 2
  %234 = zext i16 %233 to i32
  %235 = add nuw nsw i32 %178, 8
  %236 = add nuw nsw i32 %235, %181
  %237 = add nuw nsw i32 %236, %184
  %238 = add nuw nsw i32 %237, %187
  %239 = add nuw nsw i32 %238, %190
  %240 = add nuw nsw i32 %239, %194
  %241 = add nuw nsw i32 %240, %198
  %242 = add nuw nsw i32 %241, %202
  %243 = add nuw nsw i32 %242, %206
  %244 = add nuw nsw i32 %243, %210
  %245 = add nuw nsw i32 %244, %214
  %246 = add nuw nsw i32 %245, %218
  %247 = add nuw nsw i32 %246, %222
  %248 = add nuw nsw i32 %247, %226
  %249 = add nuw nsw i32 %248, %230
  %250 = add nuw nsw i32 %249, %234
  %251 = lshr i32 %250, 4
  %252 = trunc i32 %251 to i16
  store i16 %252, i16* %172, align 2
  br label %253

253:                                              ; preds = %171, %176
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown34_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %19, %6 ], [ 0, %4 ]
  %8 = phi i8* [ %18, %6 ], [ %0, %4 ]
  %9 = phi i8* [ %17, %6 ], [ %2, %4 ]
  %10 = load i8, i8* %8, align 1
  store i8 %10, i8* %9, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %12, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %8, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds i8, i8* %9, i64 2
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds i8, i8* %9, i64 3
  %18 = getelementptr inbounds i8, i8* %8, i64 4
  %19 = add nuw nsw i32 %7, 3
  %20 = icmp slt i32 %19, %3
  br i1 %20, label %6, label %21

21:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown34_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %19, %6 ], [ 0, %4 ]
  %8 = phi i16* [ %18, %6 ], [ %0, %4 ]
  %9 = phi i16* [ %17, %6 ], [ %2, %4 ]
  %10 = load i16, i16* %8, align 2
  store i16 %10, i16* %9, align 2
  %11 = getelementptr inbounds i16, i16* %8, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds i16, i16* %9, i64 1
  store i16 %12, i16* %13, align 2
  %14 = getelementptr inbounds i16, i16* %8, i64 3
  %15 = load i16, i16* %14, align 2
  %16 = getelementptr inbounds i16, i16* %9, i64 2
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i16, i16* %9, i64 3
  %18 = getelementptr inbounds i16, i16* %8, i64 4
  %19 = add nuw nsw i32 %7, 3
  %20 = icmp slt i32 %19, %3
  br i1 %20, label %6, label %21

21:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown34_0_Box_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %85

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %80, %8 ], [ %2, %6 ]
  %10 = phi i8* [ %81, %8 ], [ %0, %6 ]
  %11 = phi i8* [ %82, %8 ], [ %7, %6 ]
  %12 = phi i32 [ %83, %8 ], [ 0, %6 ]
  %13 = load i8, i8* %10, align 1
  %14 = zext i8 %13 to i32
  %15 = mul nuw nsw i32 %14, 3
  %16 = getelementptr inbounds i8, i8* %10, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = add nuw nsw i32 %18, 2
  %20 = add nuw nsw i32 %19, %15
  %21 = lshr i32 %20, 2
  %22 = getelementptr inbounds i8, i8* %10, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nuw nsw i32 %18, 1
  %26 = add nuw nsw i32 %25, %24
  %27 = lshr i32 %26, 1
  %28 = getelementptr inbounds i8, i8* %10, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nuw nsw i32 %30, 3
  %32 = add nuw nsw i32 %24, 2
  %33 = add nuw nsw i32 %32, %31
  %34 = lshr i32 %33, 2
  %35 = load i8, i8* %11, align 1
  %36 = zext i8 %35 to i32
  %37 = mul nuw nsw i32 %36, 3
  %38 = getelementptr inbounds i8, i8* %11, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = add nuw nsw i32 %40, 2
  %42 = add nuw nsw i32 %41, %37
  %43 = lshr i32 %42, 2
  %44 = getelementptr inbounds i8, i8* %11, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = add nuw nsw i32 %40, 1
  %48 = add nuw nsw i32 %47, %46
  %49 = lshr i32 %48, 1
  %50 = getelementptr inbounds i8, i8* %11, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = mul nuw nsw i32 %52, 3
  %54 = add nuw nsw i32 %46, 2
  %55 = add nuw nsw i32 %54, %53
  %56 = lshr i32 %55, 2
  %57 = and i32 %21, 255
  %58 = mul nuw nsw i32 %57, 3
  %59 = and i32 %43, 255
  %60 = add nuw nsw i32 %58, 2
  %61 = add nuw nsw i32 %60, %59
  %62 = lshr i32 %61, 2
  %63 = trunc i32 %62 to i8
  store i8 %63, i8* %9, align 1
  %64 = and i32 %27, 255
  %65 = mul nuw nsw i32 %64, 3
  %66 = and i32 %49, 255
  %67 = add nuw nsw i32 %65, 2
  %68 = add nuw nsw i32 %67, %66
  %69 = lshr i32 %68, 2
  %70 = trunc i32 %69 to i8
  %71 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %70, i8* %71, align 1
  %72 = and i32 %34, 255
  %73 = mul nuw nsw i32 %72, 3
  %74 = and i32 %56, 255
  %75 = add nuw nsw i32 %73, 2
  %76 = add nuw nsw i32 %75, %74
  %77 = lshr i32 %76, 2
  %78 = trunc i32 %77 to i8
  %79 = getelementptr inbounds i8, i8* %9, i64 2
  store i8 %78, i8* %79, align 1
  %80 = getelementptr inbounds i8, i8* %9, i64 3
  %81 = getelementptr inbounds i8, i8* %10, i64 4
  %82 = getelementptr inbounds i8, i8* %11, i64 4
  %83 = add nuw nsw i32 %12, 3
  %84 = icmp slt i32 %83, %3
  br i1 %84, label %8, label %85

85:                                               ; preds = %8, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown34_0_Box_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %204

6:                                                ; preds = %4
  %7 = getelementptr inbounds i16, i16* %0, i64 %1
  %8 = add i32 %3, -1
  %9 = udiv i32 %8, 3
  %10 = add nuw nsw i32 %9, 1
  %11 = zext i32 %10 to i64
  %12 = icmp ult i32 %10, 4
  br i1 %12, label %122, label %13

13:                                               ; preds = %6
  %14 = add i32 %3, -1
  %15 = udiv i32 %14, 3
  %16 = zext i32 %15 to i64
  %17 = mul nuw nsw i64 %16, 3
  %18 = add nuw nsw i64 %17, 3
  %19 = getelementptr i16, i16* %2, i64 %18
  %20 = shl nuw nsw i64 %16, 2
  %21 = add i64 %20, %1
  %22 = add i64 %21, 4
  %23 = getelementptr i16, i16* %0, i64 %22
  %24 = add nuw nsw i64 %20, 4
  %25 = getelementptr i16, i16* %0, i64 %24
  %26 = icmp ugt i16* %23, %2
  %27 = icmp ult i16* %7, %19
  %28 = and i1 %26, %27
  %29 = icmp ugt i16* %25, %2
  %30 = icmp ugt i16* %19, %0
  %31 = and i1 %29, %30
  %32 = or i1 %28, %31
  br i1 %32, label %122, label %33

33:                                               ; preds = %13
  %34 = and i64 %11, 2147483644
  %35 = mul nuw nsw i64 %34, 3
  %36 = getelementptr i16, i16* %2, i64 %35
  %37 = shl nuw nsw i64 %34, 2
  %38 = getelementptr i16, i16* %0, i64 %37
  %39 = shl nuw nsw i64 %34, 2
  %40 = getelementptr i16, i16* %7, i64 %39
  %41 = trunc i64 %34 to i32
  %42 = mul i32 %41, 3
  br label %43

43:                                               ; preds = %43, %33
  %44 = phi i64 [ 0, %33 ], [ %118, %43 ]
  %45 = mul i64 %44, 3
  %46 = shl i64 %44, 2
  %47 = getelementptr i16, i16* %0, i64 %46
  %48 = shl i64 %44, 2
  %49 = getelementptr i16, i16* %7, i64 %48
  %50 = bitcast i16* %47 to <16 x i16>*
  %51 = load <16 x i16>, <16 x i16>* %50, align 2
  %52 = shufflevector <16 x i16> %51, <16 x i16> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %53 = shufflevector <16 x i16> %51, <16 x i16> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %54 = shufflevector <16 x i16> %51, <16 x i16> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %55 = shufflevector <16 x i16> %51, <16 x i16> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %56 = zext <4 x i16> %52 to <4 x i32>
  %57 = mul nuw nsw <4 x i32> %56, <i32 3, i32 3, i32 3, i32 3>
  %58 = zext <4 x i16> %53 to <4 x i32>
  %59 = add nuw nsw <4 x i32> %58, <i32 2, i32 2, i32 2, i32 2>
  %60 = add nuw nsw <4 x i32> %59, %57
  %61 = lshr <4 x i32> %60, <i32 2, i32 2, i32 2, i32 2>
  %62 = zext <4 x i16> %54 to <4 x i32>
  %63 = add nuw nsw <4 x i32> %58, <i32 1, i32 1, i32 1, i32 1>
  %64 = add nuw nsw <4 x i32> %63, %62
  %65 = lshr <4 x i32> %64, <i32 1, i32 1, i32 1, i32 1>
  %66 = zext <4 x i16> %55 to <4 x i32>
  %67 = mul nuw nsw <4 x i32> %66, <i32 3, i32 3, i32 3, i32 3>
  %68 = add nuw nsw <4 x i32> %62, <i32 2, i32 2, i32 2, i32 2>
  %69 = add nuw nsw <4 x i32> %68, %67
  %70 = lshr <4 x i32> %69, <i32 2, i32 2, i32 2, i32 2>
  %71 = bitcast i16* %49 to <16 x i16>*
  %72 = load <16 x i16>, <16 x i16>* %71, align 2
  %73 = shufflevector <16 x i16> %72, <16 x i16> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %74 = shufflevector <16 x i16> %72, <16 x i16> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %75 = shufflevector <16 x i16> %72, <16 x i16> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %76 = shufflevector <16 x i16> %72, <16 x i16> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %77 = zext <4 x i16> %73 to <4 x i32>
  %78 = mul nuw nsw <4 x i32> %77, <i32 3, i32 3, i32 3, i32 3>
  %79 = zext <4 x i16> %74 to <4 x i32>
  %80 = add nuw nsw <4 x i32> %79, <i32 2, i32 2, i32 2, i32 2>
  %81 = add nuw nsw <4 x i32> %80, %78
  %82 = lshr <4 x i32> %81, <i32 2, i32 2, i32 2, i32 2>
  %83 = zext <4 x i16> %75 to <4 x i32>
  %84 = add nuw nsw <4 x i32> %79, <i32 1, i32 1, i32 1, i32 1>
  %85 = add nuw nsw <4 x i32> %84, %83
  %86 = lshr <4 x i32> %85, <i32 1, i32 1, i32 1, i32 1>
  %87 = zext <4 x i16> %76 to <4 x i32>
  %88 = mul nuw nsw <4 x i32> %87, <i32 3, i32 3, i32 3, i32 3>
  %89 = add nuw nsw <4 x i32> %83, <i32 2, i32 2, i32 2, i32 2>
  %90 = add nuw nsw <4 x i32> %89, %88
  %91 = lshr <4 x i32> %90, <i32 2, i32 2, i32 2, i32 2>
  %92 = and <4 x i32> %61, <i32 65535, i32 65535, i32 65535, i32 65535>
  %93 = mul nuw nsw <4 x i32> %92, <i32 3, i32 3, i32 3, i32 3>
  %94 = and <4 x i32> %82, <i32 65535, i32 65535, i32 65535, i32 65535>
  %95 = add nuw nsw <4 x i32> %93, <i32 2, i32 2, i32 2, i32 2>
  %96 = add nuw nsw <4 x i32> %95, %94
  %97 = lshr <4 x i32> %96, <i32 2, i32 2, i32 2, i32 2>
  %98 = trunc <4 x i32> %97 to <4 x i16>
  %99 = and <4 x i32> %65, <i32 65535, i32 65535, i32 65535, i32 65535>
  %100 = mul nuw nsw <4 x i32> %99, <i32 3, i32 3, i32 3, i32 3>
  %101 = and <4 x i32> %86, <i32 65535, i32 65535, i32 65535, i32 65535>
  %102 = add nuw nsw <4 x i32> %100, <i32 2, i32 2, i32 2, i32 2>
  %103 = add nuw nsw <4 x i32> %102, %101
  %104 = lshr <4 x i32> %103, <i32 2, i32 2, i32 2, i32 2>
  %105 = trunc <4 x i32> %104 to <4 x i16>
  %106 = and <4 x i32> %70, <i32 65535, i32 65535, i32 65535, i32 65535>
  %107 = mul nuw nsw <4 x i32> %106, <i32 3, i32 3, i32 3, i32 3>
  %108 = and <4 x i32> %91, <i32 65535, i32 65535, i32 65535, i32 65535>
  %109 = add nuw nsw <4 x i32> %107, <i32 2, i32 2, i32 2, i32 2>
  %110 = add nuw nsw <4 x i32> %109, %108
  %111 = lshr <4 x i32> %110, <i32 2, i32 2, i32 2, i32 2>
  %112 = trunc <4 x i32> %111 to <4 x i16>
  %113 = getelementptr inbounds i16, i16* %2, i64 %45
  %114 = bitcast i16* %113 to <12 x i16>*
  %115 = shufflevector <4 x i16> %98, <4 x i16> %105, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %116 = shufflevector <4 x i16> %112, <4 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef>
  %117 = shufflevector <8 x i16> %115, <8 x i16> %116, <12 x i32> <i32 0, i32 4, i32 8, i32 1, i32 5, i32 9, i32 2, i32 6, i32 10, i32 3, i32 7, i32 11>
  store <12 x i16> %117, <12 x i16>* %114, align 2
  %118 = add i64 %44, 4
  %119 = icmp eq i64 %118, %34
  br i1 %119, label %120, label %43, !llvm.loop !7

120:                                              ; preds = %43
  %121 = icmp eq i64 %34, %11
  br i1 %121, label %204, label %122

122:                                              ; preds = %120, %13, %6
  %123 = phi i16* [ %2, %13 ], [ %2, %6 ], [ %36, %120 ]
  %124 = phi i16* [ %0, %13 ], [ %0, %6 ], [ %38, %120 ]
  %125 = phi i16* [ %7, %13 ], [ %7, %6 ], [ %40, %120 ]
  %126 = phi i32 [ 0, %13 ], [ 0, %6 ], [ %42, %120 ]
  br label %127

127:                                              ; preds = %122, %127
  %128 = phi i16* [ %199, %127 ], [ %123, %122 ]
  %129 = phi i16* [ %200, %127 ], [ %124, %122 ]
  %130 = phi i16* [ %201, %127 ], [ %125, %122 ]
  %131 = phi i32 [ %202, %127 ], [ %126, %122 ]
  %132 = load i16, i16* %129, align 2
  %133 = zext i16 %132 to i32
  %134 = mul nuw nsw i32 %133, 3
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %136 to i32
  %138 = add nuw nsw i32 %137, 2
  %139 = add nuw nsw i32 %138, %134
  %140 = lshr i32 %139, 2
  %141 = getelementptr inbounds i16, i16* %129, i64 2
  %142 = load i16, i16* %141, align 2
  %143 = zext i16 %142 to i32
  %144 = add nuw nsw i32 %137, 1
  %145 = add nuw nsw i32 %144, %143
  %146 = lshr i32 %145, 1
  %147 = getelementptr inbounds i16, i16* %129, i64 3
  %148 = load i16, i16* %147, align 2
  %149 = zext i16 %148 to i32
  %150 = mul nuw nsw i32 %149, 3
  %151 = add nuw nsw i32 %143, 2
  %152 = add nuw nsw i32 %151, %150
  %153 = lshr i32 %152, 2
  %154 = load i16, i16* %130, align 2
  %155 = zext i16 %154 to i32
  %156 = mul nuw nsw i32 %155, 3
  %157 = getelementptr inbounds i16, i16* %130, i64 1
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = add nuw nsw i32 %159, 2
  %161 = add nuw nsw i32 %160, %156
  %162 = lshr i32 %161, 2
  %163 = getelementptr inbounds i16, i16* %130, i64 2
  %164 = load i16, i16* %163, align 2
  %165 = zext i16 %164 to i32
  %166 = add nuw nsw i32 %159, 1
  %167 = add nuw nsw i32 %166, %165
  %168 = lshr i32 %167, 1
  %169 = getelementptr inbounds i16, i16* %130, i64 3
  %170 = load i16, i16* %169, align 2
  %171 = zext i16 %170 to i32
  %172 = mul nuw nsw i32 %171, 3
  %173 = add nuw nsw i32 %165, 2
  %174 = add nuw nsw i32 %173, %172
  %175 = lshr i32 %174, 2
  %176 = and i32 %140, 65535
  %177 = mul nuw nsw i32 %176, 3
  %178 = and i32 %162, 65535
  %179 = add nuw nsw i32 %177, 2
  %180 = add nuw nsw i32 %179, %178
  %181 = lshr i32 %180, 2
  %182 = trunc i32 %181 to i16
  store i16 %182, i16* %128, align 2
  %183 = and i32 %146, 65535
  %184 = mul nuw nsw i32 %183, 3
  %185 = and i32 %168, 65535
  %186 = add nuw nsw i32 %184, 2
  %187 = add nuw nsw i32 %186, %185
  %188 = lshr i32 %187, 2
  %189 = trunc i32 %188 to i16
  %190 = getelementptr inbounds i16, i16* %128, i64 1
  store i16 %189, i16* %190, align 2
  %191 = and i32 %153, 65535
  %192 = mul nuw nsw i32 %191, 3
  %193 = and i32 %175, 65535
  %194 = add nuw nsw i32 %192, 2
  %195 = add nuw nsw i32 %194, %193
  %196 = lshr i32 %195, 2
  %197 = trunc i32 %196 to i16
  %198 = getelementptr inbounds i16, i16* %128, i64 2
  store i16 %197, i16* %198, align 2
  %199 = getelementptr inbounds i16, i16* %128, i64 3
  %200 = getelementptr inbounds i16, i16* %129, i64 4
  %201 = getelementptr inbounds i16, i16* %130, i64 4
  %202 = add nuw nsw i32 %131, 3
  %203 = icmp slt i32 %202, %3
  br i1 %203, label %127, label %204, !llvm.loop !9

204:                                              ; preds = %127, %120, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown34_1_Box_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %198

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = add i32 %3, -1
  %9 = udiv i32 %8, 3
  %10 = add nuw nsw i32 %9, 1
  %11 = zext i32 %10 to i64
  %12 = icmp ult i32 %10, 16
  br i1 %12, label %119, label %13

13:                                               ; preds = %6
  %14 = add i32 %3, -1
  %15 = udiv i32 %14, 3
  %16 = zext i32 %15 to i64
  %17 = mul nuw nsw i64 %16, 3
  %18 = add nuw nsw i64 %17, 3
  %19 = getelementptr i8, i8* %2, i64 %18
  %20 = shl nuw nsw i64 %16, 2
  %21 = add i64 %20, %1
  %22 = add i64 %21, 4
  %23 = getelementptr i8, i8* %0, i64 %22
  %24 = add nuw nsw i64 %20, 4
  %25 = getelementptr i8, i8* %0, i64 %24
  %26 = icmp ugt i8* %23, %2
  %27 = icmp ult i8* %7, %19
  %28 = and i1 %26, %27
  %29 = icmp ugt i8* %25, %2
  %30 = icmp ugt i8* %19, %0
  %31 = and i1 %29, %30
  %32 = or i1 %28, %31
  br i1 %32, label %119, label %33

33:                                               ; preds = %13
  %34 = and i64 %11, 2147483632
  %35 = mul nuw nsw i64 %34, 3
  %36 = getelementptr i8, i8* %2, i64 %35
  %37 = shl nuw nsw i64 %34, 2
  %38 = getelementptr i8, i8* %0, i64 %37
  %39 = shl nuw nsw i64 %34, 2
  %40 = getelementptr i8, i8* %7, i64 %39
  %41 = trunc i64 %34 to i32
  %42 = mul i32 %41, 3
  br label %43

43:                                               ; preds = %43, %33
  %44 = phi i64 [ 0, %33 ], [ %115, %43 ]
  %45 = mul i64 %44, 3
  %46 = shl i64 %44, 2
  %47 = getelementptr i8, i8* %0, i64 %46
  %48 = shl i64 %44, 2
  %49 = getelementptr i8, i8* %7, i64 %48
  %50 = bitcast i8* %47 to <64 x i8>*
  %51 = load <64 x i8>, <64 x i8>* %50, align 1
  %52 = shufflevector <64 x i8> %51, <64 x i8> undef, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %53 = shufflevector <64 x i8> %51, <64 x i8> undef, <16 x i32> <i32 1, i32 5, i32 9, i32 13, i32 17, i32 21, i32 25, i32 29, i32 33, i32 37, i32 41, i32 45, i32 49, i32 53, i32 57, i32 61>
  %54 = shufflevector <64 x i8> %51, <64 x i8> undef, <16 x i32> <i32 2, i32 6, i32 10, i32 14, i32 18, i32 22, i32 26, i32 30, i32 34, i32 38, i32 42, i32 46, i32 50, i32 54, i32 58, i32 62>
  %55 = shufflevector <64 x i8> %51, <64 x i8> undef, <16 x i32> <i32 3, i32 7, i32 11, i32 15, i32 19, i32 23, i32 27, i32 31, i32 35, i32 39, i32 43, i32 47, i32 51, i32 55, i32 59, i32 63>
  %56 = zext <16 x i8> %52 to <16 x i32>
  %57 = mul nuw nsw <16 x i32> %56, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %58 = zext <16 x i8> %53 to <16 x i32>
  %59 = add nuw nsw <16 x i32> %58, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %60 = add nuw nsw <16 x i32> %59, %57
  %61 = lshr <16 x i32> %60, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %62 = zext <16 x i8> %54 to <16 x i32>
  %63 = add nuw nsw <16 x i32> %58, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %64 = add nuw nsw <16 x i32> %63, %62
  %65 = lshr <16 x i32> %64, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %66 = zext <16 x i8> %55 to <16 x i32>
  %67 = mul nuw nsw <16 x i32> %66, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %68 = add nuw nsw <16 x i32> %62, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %69 = add nuw nsw <16 x i32> %68, %67
  %70 = lshr <16 x i32> %69, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %71 = bitcast i8* %49 to <64 x i8>*
  %72 = load <64 x i8>, <64 x i8>* %71, align 1
  %73 = shufflevector <64 x i8> %72, <64 x i8> undef, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %74 = shufflevector <64 x i8> %72, <64 x i8> undef, <16 x i32> <i32 1, i32 5, i32 9, i32 13, i32 17, i32 21, i32 25, i32 29, i32 33, i32 37, i32 41, i32 45, i32 49, i32 53, i32 57, i32 61>
  %75 = shufflevector <64 x i8> %72, <64 x i8> undef, <16 x i32> <i32 2, i32 6, i32 10, i32 14, i32 18, i32 22, i32 26, i32 30, i32 34, i32 38, i32 42, i32 46, i32 50, i32 54, i32 58, i32 62>
  %76 = shufflevector <64 x i8> %72, <64 x i8> undef, <16 x i32> <i32 3, i32 7, i32 11, i32 15, i32 19, i32 23, i32 27, i32 31, i32 35, i32 39, i32 43, i32 47, i32 51, i32 55, i32 59, i32 63>
  %77 = zext <16 x i8> %73 to <16 x i32>
  %78 = mul nuw nsw <16 x i32> %77, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %79 = zext <16 x i8> %74 to <16 x i32>
  %80 = add nuw nsw <16 x i32> %79, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %81 = add nuw nsw <16 x i32> %80, %78
  %82 = lshr <16 x i32> %81, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %83 = zext <16 x i8> %75 to <16 x i32>
  %84 = add nuw nsw <16 x i32> %79, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %85 = add nuw nsw <16 x i32> %84, %83
  %86 = lshr <16 x i32> %85, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %87 = zext <16 x i8> %76 to <16 x i32>
  %88 = mul nuw nsw <16 x i32> %87, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %89 = add nuw nsw <16 x i32> %83, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %90 = add nuw nsw <16 x i32> %89, %88
  %91 = lshr <16 x i32> %90, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %92 = and <16 x i32> %61, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %93 = and <16 x i32> %82, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %94 = add nuw nsw <16 x i32> %92, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %95 = add nuw nsw <16 x i32> %94, %93
  %96 = lshr <16 x i32> %95, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %97 = trunc <16 x i32> %96 to <16 x i8>
  %98 = and <16 x i32> %65, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %99 = and <16 x i32> %86, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %100 = add nuw nsw <16 x i32> %98, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %101 = add nuw nsw <16 x i32> %100, %99
  %102 = lshr <16 x i32> %101, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %103 = trunc <16 x i32> %102 to <16 x i8>
  %104 = and <16 x i32> %70, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %105 = and <16 x i32> %91, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %106 = add nuw nsw <16 x i32> %104, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %107 = add nuw nsw <16 x i32> %106, %105
  %108 = lshr <16 x i32> %107, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %109 = trunc <16 x i32> %108 to <16 x i8>
  %110 = getelementptr inbounds i8, i8* %2, i64 %45
  %111 = bitcast i8* %110 to <48 x i8>*
  %112 = shufflevector <16 x i8> %97, <16 x i8> %103, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %113 = shufflevector <16 x i8> %109, <16 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %114 = shufflevector <32 x i8> %112, <32 x i8> %113, <48 x i32> <i32 0, i32 16, i32 32, i32 1, i32 17, i32 33, i32 2, i32 18, i32 34, i32 3, i32 19, i32 35, i32 4, i32 20, i32 36, i32 5, i32 21, i32 37, i32 6, i32 22, i32 38, i32 7, i32 23, i32 39, i32 8, i32 24, i32 40, i32 9, i32 25, i32 41, i32 10, i32 26, i32 42, i32 11, i32 27, i32 43, i32 12, i32 28, i32 44, i32 13, i32 29, i32 45, i32 14, i32 30, i32 46, i32 15, i32 31, i32 47>
  store <48 x i8> %114, <48 x i8>* %111, align 1
  %115 = add i64 %44, 16
  %116 = icmp eq i64 %115, %34
  br i1 %116, label %117, label %43, !llvm.loop !10

117:                                              ; preds = %43
  %118 = icmp eq i64 %34, %11
  br i1 %118, label %198, label %119

119:                                              ; preds = %117, %13, %6
  %120 = phi i8* [ %2, %13 ], [ %2, %6 ], [ %36, %117 ]
  %121 = phi i8* [ %0, %13 ], [ %0, %6 ], [ %38, %117 ]
  %122 = phi i8* [ %7, %13 ], [ %7, %6 ], [ %40, %117 ]
  %123 = phi i32 [ 0, %13 ], [ 0, %6 ], [ %42, %117 ]
  br label %124

124:                                              ; preds = %119, %124
  %125 = phi i8* [ %193, %124 ], [ %120, %119 ]
  %126 = phi i8* [ %194, %124 ], [ %121, %119 ]
  %127 = phi i8* [ %195, %124 ], [ %122, %119 ]
  %128 = phi i32 [ %196, %124 ], [ %123, %119 ]
  %129 = load i8, i8* %126, align 1
  %130 = zext i8 %129 to i32
  %131 = mul nuw nsw i32 %130, 3
  %132 = getelementptr inbounds i8, i8* %126, i64 1
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = add nuw nsw i32 %134, 2
  %136 = add nuw nsw i32 %135, %131
  %137 = lshr i32 %136, 2
  %138 = getelementptr inbounds i8, i8* %126, i64 2
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = add nuw nsw i32 %134, 1
  %142 = add nuw nsw i32 %141, %140
  %143 = lshr i32 %142, 1
  %144 = getelementptr inbounds i8, i8* %126, i64 3
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = mul nuw nsw i32 %146, 3
  %148 = add nuw nsw i32 %140, 2
  %149 = add nuw nsw i32 %148, %147
  %150 = lshr i32 %149, 2
  %151 = load i8, i8* %127, align 1
  %152 = zext i8 %151 to i32
  %153 = mul nuw nsw i32 %152, 3
  %154 = getelementptr inbounds i8, i8* %127, i64 1
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = add nuw nsw i32 %156, 2
  %158 = add nuw nsw i32 %157, %153
  %159 = lshr i32 %158, 2
  %160 = getelementptr inbounds i8, i8* %127, i64 2
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = add nuw nsw i32 %156, 1
  %164 = add nuw nsw i32 %163, %162
  %165 = lshr i32 %164, 1
  %166 = getelementptr inbounds i8, i8* %127, i64 3
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = mul nuw nsw i32 %168, 3
  %170 = add nuw nsw i32 %162, 2
  %171 = add nuw nsw i32 %170, %169
  %172 = lshr i32 %171, 2
  %173 = and i32 %137, 255
  %174 = and i32 %159, 255
  %175 = add nuw nsw i32 %173, 1
  %176 = add nuw nsw i32 %175, %174
  %177 = lshr i32 %176, 1
  %178 = trunc i32 %177 to i8
  store i8 %178, i8* %125, align 1
  %179 = and i32 %143, 255
  %180 = and i32 %165, 255
  %181 = add nuw nsw i32 %179, 1
  %182 = add nuw nsw i32 %181, %180
  %183 = lshr i32 %182, 1
  %184 = trunc i32 %183 to i8
  %185 = getelementptr inbounds i8, i8* %125, i64 1
  store i8 %184, i8* %185, align 1
  %186 = and i32 %150, 255
  %187 = and i32 %172, 255
  %188 = add nuw nsw i32 %186, 1
  %189 = add nuw nsw i32 %188, %187
  %190 = lshr i32 %189, 1
  %191 = trunc i32 %190 to i8
  %192 = getelementptr inbounds i8, i8* %125, i64 2
  store i8 %191, i8* %192, align 1
  %193 = getelementptr inbounds i8, i8* %125, i64 3
  %194 = getelementptr inbounds i8, i8* %126, i64 4
  %195 = getelementptr inbounds i8, i8* %127, i64 4
  %196 = add nuw nsw i32 %128, 3
  %197 = icmp slt i32 %196, %3
  br i1 %197, label %124, label %198, !llvm.loop !11

198:                                              ; preds = %124, %117, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown34_1_Box_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %198

6:                                                ; preds = %4
  %7 = getelementptr inbounds i16, i16* %0, i64 %1
  %8 = add i32 %3, -1
  %9 = udiv i32 %8, 3
  %10 = add nuw nsw i32 %9, 1
  %11 = zext i32 %10 to i64
  %12 = icmp ult i32 %10, 4
  br i1 %12, label %119, label %13

13:                                               ; preds = %6
  %14 = add i32 %3, -1
  %15 = udiv i32 %14, 3
  %16 = zext i32 %15 to i64
  %17 = mul nuw nsw i64 %16, 3
  %18 = add nuw nsw i64 %17, 3
  %19 = getelementptr i16, i16* %2, i64 %18
  %20 = shl nuw nsw i64 %16, 2
  %21 = add i64 %20, %1
  %22 = add i64 %21, 4
  %23 = getelementptr i16, i16* %0, i64 %22
  %24 = add nuw nsw i64 %20, 4
  %25 = getelementptr i16, i16* %0, i64 %24
  %26 = icmp ugt i16* %23, %2
  %27 = icmp ult i16* %7, %19
  %28 = and i1 %26, %27
  %29 = icmp ugt i16* %25, %2
  %30 = icmp ugt i16* %19, %0
  %31 = and i1 %29, %30
  %32 = or i1 %28, %31
  br i1 %32, label %119, label %33

33:                                               ; preds = %13
  %34 = and i64 %11, 2147483644
  %35 = mul nuw nsw i64 %34, 3
  %36 = getelementptr i16, i16* %2, i64 %35
  %37 = shl nuw nsw i64 %34, 2
  %38 = getelementptr i16, i16* %0, i64 %37
  %39 = shl nuw nsw i64 %34, 2
  %40 = getelementptr i16, i16* %7, i64 %39
  %41 = trunc i64 %34 to i32
  %42 = mul i32 %41, 3
  br label %43

43:                                               ; preds = %43, %33
  %44 = phi i64 [ 0, %33 ], [ %115, %43 ]
  %45 = mul i64 %44, 3
  %46 = shl i64 %44, 2
  %47 = getelementptr i16, i16* %0, i64 %46
  %48 = shl i64 %44, 2
  %49 = getelementptr i16, i16* %7, i64 %48
  %50 = bitcast i16* %47 to <16 x i16>*
  %51 = load <16 x i16>, <16 x i16>* %50, align 2
  %52 = shufflevector <16 x i16> %51, <16 x i16> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %53 = shufflevector <16 x i16> %51, <16 x i16> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %54 = shufflevector <16 x i16> %51, <16 x i16> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %55 = shufflevector <16 x i16> %51, <16 x i16> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %56 = zext <4 x i16> %52 to <4 x i32>
  %57 = mul nuw nsw <4 x i32> %56, <i32 3, i32 3, i32 3, i32 3>
  %58 = zext <4 x i16> %53 to <4 x i32>
  %59 = add nuw nsw <4 x i32> %58, <i32 2, i32 2, i32 2, i32 2>
  %60 = add nuw nsw <4 x i32> %59, %57
  %61 = lshr <4 x i32> %60, <i32 2, i32 2, i32 2, i32 2>
  %62 = zext <4 x i16> %54 to <4 x i32>
  %63 = add nuw nsw <4 x i32> %58, <i32 1, i32 1, i32 1, i32 1>
  %64 = add nuw nsw <4 x i32> %63, %62
  %65 = lshr <4 x i32> %64, <i32 1, i32 1, i32 1, i32 1>
  %66 = zext <4 x i16> %55 to <4 x i32>
  %67 = mul nuw nsw <4 x i32> %66, <i32 3, i32 3, i32 3, i32 3>
  %68 = add nuw nsw <4 x i32> %62, <i32 2, i32 2, i32 2, i32 2>
  %69 = add nuw nsw <4 x i32> %68, %67
  %70 = lshr <4 x i32> %69, <i32 2, i32 2, i32 2, i32 2>
  %71 = bitcast i16* %49 to <16 x i16>*
  %72 = load <16 x i16>, <16 x i16>* %71, align 2
  %73 = shufflevector <16 x i16> %72, <16 x i16> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %74 = shufflevector <16 x i16> %72, <16 x i16> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %75 = shufflevector <16 x i16> %72, <16 x i16> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %76 = shufflevector <16 x i16> %72, <16 x i16> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %77 = zext <4 x i16> %73 to <4 x i32>
  %78 = mul nuw nsw <4 x i32> %77, <i32 3, i32 3, i32 3, i32 3>
  %79 = zext <4 x i16> %74 to <4 x i32>
  %80 = add nuw nsw <4 x i32> %79, <i32 2, i32 2, i32 2, i32 2>
  %81 = add nuw nsw <4 x i32> %80, %78
  %82 = lshr <4 x i32> %81, <i32 2, i32 2, i32 2, i32 2>
  %83 = zext <4 x i16> %75 to <4 x i32>
  %84 = add nuw nsw <4 x i32> %79, <i32 1, i32 1, i32 1, i32 1>
  %85 = add nuw nsw <4 x i32> %84, %83
  %86 = lshr <4 x i32> %85, <i32 1, i32 1, i32 1, i32 1>
  %87 = zext <4 x i16> %76 to <4 x i32>
  %88 = mul nuw nsw <4 x i32> %87, <i32 3, i32 3, i32 3, i32 3>
  %89 = add nuw nsw <4 x i32> %83, <i32 2, i32 2, i32 2, i32 2>
  %90 = add nuw nsw <4 x i32> %89, %88
  %91 = lshr <4 x i32> %90, <i32 2, i32 2, i32 2, i32 2>
  %92 = and <4 x i32> %61, <i32 65535, i32 65535, i32 65535, i32 65535>
  %93 = and <4 x i32> %82, <i32 65535, i32 65535, i32 65535, i32 65535>
  %94 = add nuw nsw <4 x i32> %92, <i32 1, i32 1, i32 1, i32 1>
  %95 = add nuw nsw <4 x i32> %94, %93
  %96 = lshr <4 x i32> %95, <i32 1, i32 1, i32 1, i32 1>
  %97 = trunc <4 x i32> %96 to <4 x i16>
  %98 = and <4 x i32> %65, <i32 65535, i32 65535, i32 65535, i32 65535>
  %99 = and <4 x i32> %86, <i32 65535, i32 65535, i32 65535, i32 65535>
  %100 = add nuw nsw <4 x i32> %98, <i32 1, i32 1, i32 1, i32 1>
  %101 = add nuw nsw <4 x i32> %100, %99
  %102 = lshr <4 x i32> %101, <i32 1, i32 1, i32 1, i32 1>
  %103 = trunc <4 x i32> %102 to <4 x i16>
  %104 = and <4 x i32> %70, <i32 65535, i32 65535, i32 65535, i32 65535>
  %105 = and <4 x i32> %91, <i32 65535, i32 65535, i32 65535, i32 65535>
  %106 = add nuw nsw <4 x i32> %104, <i32 1, i32 1, i32 1, i32 1>
  %107 = add nuw nsw <4 x i32> %106, %105
  %108 = lshr <4 x i32> %107, <i32 1, i32 1, i32 1, i32 1>
  %109 = trunc <4 x i32> %108 to <4 x i16>
  %110 = getelementptr inbounds i16, i16* %2, i64 %45
  %111 = bitcast i16* %110 to <12 x i16>*
  %112 = shufflevector <4 x i16> %97, <4 x i16> %103, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %113 = shufflevector <4 x i16> %109, <4 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef>
  %114 = shufflevector <8 x i16> %112, <8 x i16> %113, <12 x i32> <i32 0, i32 4, i32 8, i32 1, i32 5, i32 9, i32 2, i32 6, i32 10, i32 3, i32 7, i32 11>
  store <12 x i16> %114, <12 x i16>* %111, align 2
  %115 = add i64 %44, 4
  %116 = icmp eq i64 %115, %34
  br i1 %116, label %117, label %43, !llvm.loop !12

117:                                              ; preds = %43
  %118 = icmp eq i64 %34, %11
  br i1 %118, label %198, label %119

119:                                              ; preds = %117, %13, %6
  %120 = phi i16* [ %2, %13 ], [ %2, %6 ], [ %36, %117 ]
  %121 = phi i16* [ %0, %13 ], [ %0, %6 ], [ %38, %117 ]
  %122 = phi i16* [ %7, %13 ], [ %7, %6 ], [ %40, %117 ]
  %123 = phi i32 [ 0, %13 ], [ 0, %6 ], [ %42, %117 ]
  br label %124

124:                                              ; preds = %119, %124
  %125 = phi i16* [ %193, %124 ], [ %120, %119 ]
  %126 = phi i16* [ %194, %124 ], [ %121, %119 ]
  %127 = phi i16* [ %195, %124 ], [ %122, %119 ]
  %128 = phi i32 [ %196, %124 ], [ %123, %119 ]
  %129 = load i16, i16* %126, align 2
  %130 = zext i16 %129 to i32
  %131 = mul nuw nsw i32 %130, 3
  %132 = getelementptr inbounds i16, i16* %126, i64 1
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = add nuw nsw i32 %134, 2
  %136 = add nuw nsw i32 %135, %131
  %137 = lshr i32 %136, 2
  %138 = getelementptr inbounds i16, i16* %126, i64 2
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = add nuw nsw i32 %134, 1
  %142 = add nuw nsw i32 %141, %140
  %143 = lshr i32 %142, 1
  %144 = getelementptr inbounds i16, i16* %126, i64 3
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = mul nuw nsw i32 %146, 3
  %148 = add nuw nsw i32 %140, 2
  %149 = add nuw nsw i32 %148, %147
  %150 = lshr i32 %149, 2
  %151 = load i16, i16* %127, align 2
  %152 = zext i16 %151 to i32
  %153 = mul nuw nsw i32 %152, 3
  %154 = getelementptr inbounds i16, i16* %127, i64 1
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = add nuw nsw i32 %156, 2
  %158 = add nuw nsw i32 %157, %153
  %159 = lshr i32 %158, 2
  %160 = getelementptr inbounds i16, i16* %127, i64 2
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i32
  %163 = add nuw nsw i32 %156, 1
  %164 = add nuw nsw i32 %163, %162
  %165 = lshr i32 %164, 1
  %166 = getelementptr inbounds i16, i16* %127, i64 3
  %167 = load i16, i16* %166, align 2
  %168 = zext i16 %167 to i32
  %169 = mul nuw nsw i32 %168, 3
  %170 = add nuw nsw i32 %162, 2
  %171 = add nuw nsw i32 %170, %169
  %172 = lshr i32 %171, 2
  %173 = and i32 %137, 65535
  %174 = and i32 %159, 65535
  %175 = add nuw nsw i32 %173, 1
  %176 = add nuw nsw i32 %175, %174
  %177 = lshr i32 %176, 1
  %178 = trunc i32 %177 to i16
  store i16 %178, i16* %125, align 2
  %179 = and i32 %143, 65535
  %180 = and i32 %165, 65535
  %181 = add nuw nsw i32 %179, 1
  %182 = add nuw nsw i32 %181, %180
  %183 = lshr i32 %182, 1
  %184 = trunc i32 %183 to i16
  %185 = getelementptr inbounds i16, i16* %125, i64 1
  store i16 %184, i16* %185, align 2
  %186 = and i32 %150, 65535
  %187 = and i32 %172, 65535
  %188 = add nuw nsw i32 %186, 1
  %189 = add nuw nsw i32 %188, %187
  %190 = lshr i32 %189, 1
  %191 = trunc i32 %190 to i16
  %192 = getelementptr inbounds i16, i16* %125, i64 2
  store i16 %191, i16* %192, align 2
  %193 = getelementptr inbounds i16, i16* %125, i64 3
  %194 = getelementptr inbounds i16, i16* %126, i64 4
  %195 = getelementptr inbounds i16, i16* %127, i64 4
  %196 = add nuw nsw i32 %128, 3
  %197 = icmp slt i32 %196, %3
  br i1 %197, label %124, label %198, !llvm.loop !13

198:                                              ; preds = %124, %117, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowUp2_Linear_C(i8* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 1
  br i1 %4, label %5, label %90

5:                                                ; preds = %3
  %6 = lshr i32 %2, 1
  %7 = zext i32 %6 to i64
  %8 = icmp ugt i64 %7, 1
  %9 = select i1 %8, i64 %7, i64 1
  %10 = icmp ult i64 %9, 16
  br i1 %10, label %60, label %11

11:                                               ; preds = %5
  %12 = icmp ugt i64 %7, 1
  %13 = select i1 %12, i64 %7, i64 1
  %14 = shl nuw nsw i64 %13, 1
  %15 = getelementptr i8, i8* %1, i64 %14
  %16 = add nuw nsw i64 %13, 1
  %17 = getelementptr i8, i8* %0, i64 %16
  %18 = icmp ugt i8* %17, %1
  %19 = icmp ugt i8* %15, %0
  %20 = and i1 %18, %19
  br i1 %20, label %60, label %21

21:                                               ; preds = %11
  %22 = and i64 %9, 2147483632
  %23 = getelementptr inbounds i8, i8* %1, i64 -1
  br label %24

24:                                               ; preds = %24, %21
  %25 = phi i64 [ 0, %21 ], [ %56, %24 ]
  %26 = getelementptr inbounds i8, i8* %0, i64 %25
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1, !alias.scope !14
  %29 = zext <16 x i8> %28 to <16 x i32>
  %30 = mul nuw nsw <16 x i32> %29, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %31 = or i64 %25, 1
  %32 = getelementptr inbounds i8, i8* %0, i64 %31
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1, !alias.scope !14
  %35 = zext <16 x i8> %34 to <16 x i32>
  %36 = add nuw nsw <16 x i32> %35, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %37 = add nuw nsw <16 x i32> %36, %30
  %38 = lshr <16 x i32> %37, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %39 = trunc <16 x i32> %38 to <16 x i8>
  %40 = shl nuw nsw i64 %25, 1
  %41 = bitcast i8* %26 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1, !alias.scope !14
  %43 = zext <16 x i8> %42 to <16 x i32>
  %44 = bitcast i8* %32 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1, !alias.scope !14
  %46 = zext <16 x i8> %45 to <16 x i32>
  %47 = mul nuw nsw <16 x i32> %46, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %48 = add nuw nsw <16 x i32> %43, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %49 = add nuw nsw <16 x i32> %48, %47
  %50 = lshr <16 x i32> %49, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %51 = trunc <16 x i32> %50 to <16 x i8>
  %52 = or i64 %40, 1
  %53 = getelementptr inbounds i8, i8* %23, i64 %52
  %54 = bitcast i8* %53 to <32 x i8>*
  %55 = shufflevector <16 x i8> %39, <16 x i8> %51, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %55, <32 x i8>* %54, align 1
  %56 = add i64 %25, 16
  %57 = icmp eq i64 %56, %22
  br i1 %57, label %58, label %24, !llvm.loop !17

58:                                               ; preds = %24
  %59 = icmp eq i64 %9, %22
  br i1 %59, label %90, label %60

60:                                               ; preds = %58, %11, %5
  %61 = phi i64 [ 0, %11 ], [ 0, %5 ], [ %22, %58 ]
  br label %62

62:                                               ; preds = %60, %62
  %63 = phi i64 [ %68, %62 ], [ %61, %60 ]
  %64 = getelementptr inbounds i8, i8* %0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = mul nuw nsw i32 %66, 3
  %68 = add nuw nsw i64 %63, 1
  %69 = getelementptr inbounds i8, i8* %0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nuw nsw i32 %71, 2
  %73 = add nuw nsw i32 %72, %67
  %74 = lshr i32 %73, 2
  %75 = trunc i32 %74 to i8
  %76 = shl nuw nsw i64 %63, 1
  %77 = getelementptr inbounds i8, i8* %1, i64 %76
  store i8 %75, i8* %77, align 1
  %78 = load i8, i8* %64, align 1
  %79 = zext i8 %78 to i32
  %80 = load i8, i8* %69, align 1
  %81 = zext i8 %80 to i32
  %82 = mul nuw nsw i32 %81, 3
  %83 = add nuw nsw i32 %79, 2
  %84 = add nuw nsw i32 %83, %82
  %85 = lshr i32 %84, 2
  %86 = trunc i32 %85 to i8
  %87 = or i64 %76, 1
  %88 = getelementptr inbounds i8, i8* %1, i64 %87
  store i8 %86, i8* %88, align 1
  %89 = icmp ult i64 %68, %7
  br i1 %89, label %62, label %90, !llvm.loop !18

90:                                               ; preds = %62, %58, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowUp2_Bilinear_C(i8* nocapture readonly, i64, i8* nocapture, i64, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds i8, i8* %0, i64 %1
  %7 = getelementptr inbounds i8, i8* %2, i64 %3
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %9, label %90

9:                                                ; preds = %5
  %10 = lshr i32 %4, 1
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %9, %12
  %13 = phi i64 [ 0, %9 ], [ %18, %12 ]
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = mul nuw nsw i32 %16, 9
  %18 = add nuw nsw i64 %13, 1
  %19 = getelementptr inbounds i8, i8* %0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %6, i64 %13
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds i8, i8* %6, i64 %18
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nuw nsw i32 %24, %21
  %29 = mul nuw nsw i32 %28, 3
  %30 = add nuw nsw i32 %17, 8
  %31 = add nuw nsw i32 %30, %27
  %32 = add nuw nsw i32 %31, %29
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = shl nuw nsw i64 %13, 1
  %36 = getelementptr inbounds i8, i8* %2, i64 %35
  store i8 %34, i8* %36, align 1
  %37 = load i8, i8* %14, align 1
  %38 = zext i8 %37 to i32
  %39 = load i8, i8* %19, align 1
  %40 = zext i8 %39 to i32
  %41 = mul nuw nsw i32 %40, 9
  %42 = load i8, i8* %22, align 1
  %43 = zext i8 %42 to i32
  %44 = load i8, i8* %25, align 1
  %45 = zext i8 %44 to i32
  %46 = add nuw nsw i32 %45, %38
  %47 = mul nuw nsw i32 %46, 3
  %48 = add nuw nsw i32 %41, 8
  %49 = add nuw nsw i32 %48, %43
  %50 = add nuw nsw i32 %49, %47
  %51 = lshr i32 %50, 4
  %52 = trunc i32 %51 to i8
  %53 = or i64 %35, 1
  %54 = getelementptr inbounds i8, i8* %2, i64 %53
  store i8 %52, i8* %54, align 1
  %55 = load i8, i8* %14, align 1
  %56 = zext i8 %55 to i32
  %57 = load i8, i8* %19, align 1
  %58 = zext i8 %57 to i32
  %59 = load i8, i8* %22, align 1
  %60 = zext i8 %59 to i32
  %61 = mul nuw nsw i32 %60, 9
  %62 = load i8, i8* %25, align 1
  %63 = zext i8 %62 to i32
  %64 = add nuw nsw i32 %63, %56
  %65 = mul nuw nsw i32 %64, 3
  %66 = add nuw nsw i32 %58, 8
  %67 = add nuw nsw i32 %66, %61
  %68 = add nuw nsw i32 %67, %65
  %69 = lshr i32 %68, 4
  %70 = trunc i32 %69 to i8
  %71 = getelementptr inbounds i8, i8* %7, i64 %35
  store i8 %70, i8* %71, align 1
  %72 = load i8, i8* %14, align 1
  %73 = zext i8 %72 to i32
  %74 = load i8, i8* %19, align 1
  %75 = zext i8 %74 to i32
  %76 = load i8, i8* %22, align 1
  %77 = zext i8 %76 to i32
  %78 = load i8, i8* %25, align 1
  %79 = zext i8 %78 to i32
  %80 = mul nuw nsw i32 %79, 9
  %81 = add nuw nsw i32 %77, %75
  %82 = mul nuw nsw i32 %81, 3
  %83 = add nuw nsw i32 %73, 8
  %84 = add nuw nsw i32 %83, %80
  %85 = add nuw nsw i32 %84, %82
  %86 = lshr i32 %85, 4
  %87 = trunc i32 %86 to i8
  %88 = getelementptr inbounds i8, i8* %7, i64 %53
  store i8 %87, i8* %88, align 1
  %89 = icmp ult i64 %18, %11
  br i1 %89, label %12, label %90

90:                                               ; preds = %12, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowUp2_Linear_16_C(i16* nocapture readonly, i16* nocapture, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 1
  br i1 %4, label %5, label %90

5:                                                ; preds = %3
  %6 = lshr i32 %2, 1
  %7 = zext i32 %6 to i64
  %8 = icmp ugt i64 %7, 1
  %9 = select i1 %8, i64 %7, i64 1
  %10 = icmp ult i64 %9, 8
  br i1 %10, label %60, label %11

11:                                               ; preds = %5
  %12 = icmp ugt i64 %7, 1
  %13 = select i1 %12, i64 %7, i64 1
  %14 = shl nuw nsw i64 %13, 1
  %15 = getelementptr i16, i16* %1, i64 %14
  %16 = add nuw nsw i64 %13, 1
  %17 = getelementptr i16, i16* %0, i64 %16
  %18 = icmp ugt i16* %17, %1
  %19 = icmp ugt i16* %15, %0
  %20 = and i1 %18, %19
  br i1 %20, label %60, label %21

21:                                               ; preds = %11
  %22 = and i64 %9, 2147483640
  %23 = getelementptr inbounds i16, i16* %1, i64 -1
  br label %24

24:                                               ; preds = %24, %21
  %25 = phi i64 [ 0, %21 ], [ %56, %24 ]
  %26 = getelementptr inbounds i16, i16* %0, i64 %25
  %27 = bitcast i16* %26 to <8 x i16>*
  %28 = load <8 x i16>, <8 x i16>* %27, align 2, !alias.scope !19
  %29 = zext <8 x i16> %28 to <8 x i32>
  %30 = mul nuw nsw <8 x i32> %29, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %31 = or i64 %25, 1
  %32 = getelementptr inbounds i16, i16* %0, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !19
  %35 = zext <8 x i16> %34 to <8 x i32>
  %36 = add nuw nsw <8 x i32> %35, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %37 = add nuw nsw <8 x i32> %36, %30
  %38 = lshr <8 x i32> %37, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %39 = trunc <8 x i32> %38 to <8 x i16>
  %40 = shl nuw nsw i64 %25, 1
  %41 = bitcast i16* %26 to <8 x i16>*
  %42 = load <8 x i16>, <8 x i16>* %41, align 2, !alias.scope !19
  %43 = zext <8 x i16> %42 to <8 x i32>
  %44 = bitcast i16* %32 to <8 x i16>*
  %45 = load <8 x i16>, <8 x i16>* %44, align 2, !alias.scope !19
  %46 = zext <8 x i16> %45 to <8 x i32>
  %47 = mul nuw nsw <8 x i32> %46, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %48 = add nuw nsw <8 x i32> %43, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %49 = add nuw nsw <8 x i32> %48, %47
  %50 = lshr <8 x i32> %49, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %51 = trunc <8 x i32> %50 to <8 x i16>
  %52 = or i64 %40, 1
  %53 = getelementptr inbounds i16, i16* %23, i64 %52
  %54 = bitcast i16* %53 to <16 x i16>*
  %55 = shufflevector <8 x i16> %39, <8 x i16> %51, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %55, <16 x i16>* %54, align 2
  %56 = add i64 %25, 8
  %57 = icmp eq i64 %56, %22
  br i1 %57, label %58, label %24, !llvm.loop !22

58:                                               ; preds = %24
  %59 = icmp eq i64 %9, %22
  br i1 %59, label %90, label %60

60:                                               ; preds = %58, %11, %5
  %61 = phi i64 [ 0, %11 ], [ 0, %5 ], [ %22, %58 ]
  br label %62

62:                                               ; preds = %60, %62
  %63 = phi i64 [ %68, %62 ], [ %61, %60 ]
  %64 = getelementptr inbounds i16, i16* %0, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = mul nuw nsw i32 %66, 3
  %68 = add nuw nsw i64 %63, 1
  %69 = getelementptr inbounds i16, i16* %0, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = add nuw nsw i32 %71, 2
  %73 = add nuw nsw i32 %72, %67
  %74 = lshr i32 %73, 2
  %75 = trunc i32 %74 to i16
  %76 = shl nuw nsw i64 %63, 1
  %77 = getelementptr inbounds i16, i16* %1, i64 %76
  store i16 %75, i16* %77, align 2
  %78 = load i16, i16* %64, align 2
  %79 = zext i16 %78 to i32
  %80 = load i16, i16* %69, align 2
  %81 = zext i16 %80 to i32
  %82 = mul nuw nsw i32 %81, 3
  %83 = add nuw nsw i32 %79, 2
  %84 = add nuw nsw i32 %83, %82
  %85 = lshr i32 %84, 2
  %86 = trunc i32 %85 to i16
  %87 = or i64 %76, 1
  %88 = getelementptr inbounds i16, i16* %1, i64 %87
  store i16 %86, i16* %88, align 2
  %89 = icmp ult i64 %68, %7
  br i1 %89, label %62, label %90, !llvm.loop !23

90:                                               ; preds = %62, %58, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowUp2_Bilinear_16_C(i16* nocapture readonly, i64, i16* nocapture, i64, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds i16, i16* %0, i64 %1
  %7 = getelementptr inbounds i16, i16* %2, i64 %3
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %9, label %90

9:                                                ; preds = %5
  %10 = lshr i32 %4, 1
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %9, %12
  %13 = phi i64 [ 0, %9 ], [ %18, %12 ]
  %14 = getelementptr inbounds i16, i16* %0, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = mul nuw nsw i32 %16, 9
  %18 = add nuw nsw i64 %13, 1
  %19 = getelementptr inbounds i16, i16* %0, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds i16, i16* %6, i64 %13
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds i16, i16* %6, i64 %18
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = add nuw nsw i32 %24, %21
  %29 = mul nuw nsw i32 %28, 3
  %30 = add nuw nsw i32 %17, 8
  %31 = add nuw nsw i32 %30, %27
  %32 = add nuw nsw i32 %31, %29
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i16
  %35 = shl nuw nsw i64 %13, 1
  %36 = getelementptr inbounds i16, i16* %2, i64 %35
  store i16 %34, i16* %36, align 2
  %37 = load i16, i16* %14, align 2
  %38 = zext i16 %37 to i32
  %39 = load i16, i16* %19, align 2
  %40 = zext i16 %39 to i32
  %41 = mul nuw nsw i32 %40, 9
  %42 = load i16, i16* %22, align 2
  %43 = zext i16 %42 to i32
  %44 = load i16, i16* %25, align 2
  %45 = zext i16 %44 to i32
  %46 = add nuw nsw i32 %45, %38
  %47 = mul nuw nsw i32 %46, 3
  %48 = add nuw nsw i32 %41, 8
  %49 = add nuw nsw i32 %48, %43
  %50 = add nuw nsw i32 %49, %47
  %51 = lshr i32 %50, 4
  %52 = trunc i32 %51 to i16
  %53 = or i64 %35, 1
  %54 = getelementptr inbounds i16, i16* %2, i64 %53
  store i16 %52, i16* %54, align 2
  %55 = load i16, i16* %14, align 2
  %56 = zext i16 %55 to i32
  %57 = load i16, i16* %19, align 2
  %58 = zext i16 %57 to i32
  %59 = load i16, i16* %22, align 2
  %60 = zext i16 %59 to i32
  %61 = mul nuw nsw i32 %60, 9
  %62 = load i16, i16* %25, align 2
  %63 = zext i16 %62 to i32
  %64 = add nuw nsw i32 %63, %56
  %65 = mul nuw nsw i32 %64, 3
  %66 = add nuw nsw i32 %58, 8
  %67 = add nuw nsw i32 %66, %61
  %68 = add nuw nsw i32 %67, %65
  %69 = lshr i32 %68, 4
  %70 = trunc i32 %69 to i16
  %71 = getelementptr inbounds i16, i16* %7, i64 %35
  store i16 %70, i16* %71, align 2
  %72 = load i16, i16* %14, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16, i16* %19, align 2
  %75 = zext i16 %74 to i32
  %76 = load i16, i16* %22, align 2
  %77 = zext i16 %76 to i32
  %78 = load i16, i16* %25, align 2
  %79 = zext i16 %78 to i32
  %80 = mul nuw nsw i32 %79, 9
  %81 = add nuw nsw i32 %77, %75
  %82 = mul nuw nsw i32 %81, 3
  %83 = add nuw nsw i32 %73, 8
  %84 = add nuw nsw i32 %83, %80
  %85 = add nuw nsw i32 %84, %82
  %86 = lshr i32 %85, 4
  %87 = trunc i32 %86 to i16
  %88 = getelementptr inbounds i16, i16* %7, i64 %53
  store i16 %87, i16* %88, align 2
  %89 = icmp ult i64 %18, %11
  br i1 %89, label %12, label %90

90:                                               ; preds = %12, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleCols_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %2, 1
  br i1 %6, label %7, label %64

7:                                                ; preds = %5
  %8 = add i32 %2, -2
  %9 = lshr i32 %8, 1
  %10 = add nuw i32 %9, 1
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %45, label %13

13:                                               ; preds = %7
  %14 = sub nuw i32 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i8* [ %0, %13 ], [ %42, %15 ]
  %17 = phi i32 [ %3, %13 ], [ %41, %15 ]
  %18 = phi i32 [ %14, %13 ], [ %43, %15 ]
  %19 = ashr i32 %17, 16
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %1, i64 %20
  %22 = load i8, i8* %21, align 1
  store i8 %22, i8* %16, align 1
  %23 = add nsw i32 %17, %4
  %24 = ashr i32 %23, 16
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %27, i8* %28, align 1
  %29 = add nsw i32 %23, %4
  %30 = getelementptr inbounds i8, i8* %16, i64 2
  %31 = ashr i32 %29, 16
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  %34 = load i8, i8* %33, align 1
  store i8 %34, i8* %30, align 1
  %35 = add nsw i32 %29, %4
  %36 = ashr i32 %35, 16
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 %39, i8* %40, align 1
  %41 = add nsw i32 %35, %4
  %42 = getelementptr inbounds i8, i8* %16, i64 4
  %43 = add i32 %18, -2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %15

45:                                               ; preds = %15, %7
  %46 = phi i32 [ undef, %7 ], [ %41, %15 ]
  %47 = phi i8* [ undef, %7 ], [ %42, %15 ]
  %48 = phi i8* [ %0, %7 ], [ %42, %15 ]
  %49 = phi i32 [ %3, %7 ], [ %41, %15 ]
  %50 = icmp eq i32 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %45
  %52 = ashr i32 %49, 16
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %48, align 1
  %56 = add nsw i32 %49, %4
  %57 = ashr i32 %56, 16
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds i8, i8* %48, i64 1
  store i8 %60, i8* %61, align 1
  %62 = getelementptr inbounds i8, i8* %48, i64 2
  %63 = add nsw i32 %56, %4
  br label %64

64:                                               ; preds = %51, %45, %5
  %65 = phi i32 [ %3, %5 ], [ %46, %45 ], [ %63, %51 ]
  %66 = phi i8* [ %0, %5 ], [ %47, %45 ], [ %62, %51 ]
  %67 = and i32 %2, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = ashr i32 %65, 16
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %1, i64 %71
  %73 = load i8, i8* %72, align 1
  store i8 %73, i8* %66, align 1
  br label %74

74:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleCols_16_C(i16* nocapture, i16* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %2, 1
  br i1 %6, label %7, label %64

7:                                                ; preds = %5
  %8 = add i32 %2, -2
  %9 = lshr i32 %8, 1
  %10 = add nuw i32 %9, 1
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %45, label %13

13:                                               ; preds = %7
  %14 = sub nuw i32 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i16* [ %0, %13 ], [ %42, %15 ]
  %17 = phi i32 [ %3, %13 ], [ %41, %15 ]
  %18 = phi i32 [ %14, %13 ], [ %43, %15 ]
  %19 = ashr i32 %17, 16
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %1, i64 %20
  %22 = load i16, i16* %21, align 2
  store i16 %22, i16* %16, align 2
  %23 = add nsw i32 %17, %4
  %24 = ashr i32 %23, 16
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i16, i16* %1, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 %27, i16* %28, align 2
  %29 = add nsw i32 %23, %4
  %30 = getelementptr inbounds i16, i16* %16, i64 2
  %31 = ashr i32 %29, 16
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  %34 = load i16, i16* %33, align 2
  store i16 %34, i16* %30, align 2
  %35 = add nsw i32 %29, %4
  %36 = ashr i32 %35, 16
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = getelementptr inbounds i16, i16* %16, i64 3
  store i16 %39, i16* %40, align 2
  %41 = add nsw i32 %35, %4
  %42 = getelementptr inbounds i16, i16* %16, i64 4
  %43 = add i32 %18, -2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %15

45:                                               ; preds = %15, %7
  %46 = phi i32 [ undef, %7 ], [ %41, %15 ]
  %47 = phi i16* [ undef, %7 ], [ %42, %15 ]
  %48 = phi i16* [ %0, %7 ], [ %42, %15 ]
  %49 = phi i32 [ %3, %7 ], [ %41, %15 ]
  %50 = icmp eq i32 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %45
  %52 = ashr i32 %49, 16
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i16, i16* %1, i64 %53
  %55 = load i16, i16* %54, align 2
  store i16 %55, i16* %48, align 2
  %56 = add nsw i32 %49, %4
  %57 = ashr i32 %56, 16
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i16, i16* %1, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = getelementptr inbounds i16, i16* %48, i64 1
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i16, i16* %48, i64 2
  %63 = add nsw i32 %56, %4
  br label %64

64:                                               ; preds = %51, %45, %5
  %65 = phi i32 [ %3, %5 ], [ %46, %45 ], [ %63, %51 ]
  %66 = phi i16* [ %0, %5 ], [ %47, %45 ], [ %62, %51 ]
  %67 = and i32 %2, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = ashr i32 %65, 16
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i16, i16* %1, i64 %71
  %73 = load i16, i16* %72, align 2
  store i16 %73, i16* %66, align 2
  br label %74

74:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleColsUp2_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = add nsw i32 %2, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %115

8:                                                ; preds = %5
  %9 = add i32 %2, -2
  %10 = lshr i32 %9, 1
  %11 = add nuw i32 %10, 1
  %12 = zext i32 %11 to i64
  %13 = icmp ult i32 %11, 16
  br i1 %13, label %101, label %14

14:                                               ; preds = %8
  %15 = add i32 %2, -2
  %16 = lshr i32 %15, 1
  %17 = and i32 %15, -2
  %18 = zext i32 %17 to i64
  %19 = add nuw nsw i64 %18, 2
  %20 = getelementptr i8, i8* %0, i64 %19
  %21 = add nuw i32 %16, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr i8, i8* %1, i64 %22
  %24 = icmp ugt i8* %23, %0
  %25 = icmp ugt i8* %20, %1
  %26 = and i1 %24, %25
  br i1 %26, label %101, label %27

27:                                               ; preds = %14
  %28 = and i64 %12, 4294967280
  %29 = trunc i64 %28 to i32
  %30 = shl i32 %29, 1
  %31 = shl nuw nsw i64 %28, 1
  %32 = getelementptr i8, i8* %0, i64 %31
  %33 = getelementptr i8, i8* %1, i64 %28
  %34 = add nsw i64 %28, -16
  %35 = lshr exact i64 %34, 4
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 3
  %38 = icmp ult i64 %34, 48
  br i1 %38, label %82, label %39

39:                                               ; preds = %27
  %40 = sub nsw i64 %36, %37
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %79, %41 ]
  %43 = phi i64 [ %40, %39 ], [ %80, %41 ]
  %44 = shl i64 %42, 1
  %45 = getelementptr i8, i8* %1, i64 %42
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1, !alias.scope !24
  %48 = getelementptr inbounds i8, i8* %0, i64 %44
  %49 = bitcast i8* %48 to <32 x i8>*
  %50 = shufflevector <16 x i8> %47, <16 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %51 = shufflevector <32 x i8> %50, <32 x i8> undef, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %51, <32 x i8>* %49, align 1
  %52 = or i64 %42, 16
  %53 = shl i64 %52, 1
  %54 = getelementptr i8, i8* %1, i64 %52
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1, !alias.scope !24
  %57 = getelementptr inbounds i8, i8* %0, i64 %53
  %58 = bitcast i8* %57 to <32 x i8>*
  %59 = shufflevector <16 x i8> %56, <16 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %60 = shufflevector <32 x i8> %59, <32 x i8> undef, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %60, <32 x i8>* %58, align 1
  %61 = or i64 %42, 32
  %62 = shl i64 %61, 1
  %63 = getelementptr i8, i8* %1, i64 %61
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1, !alias.scope !24
  %66 = getelementptr inbounds i8, i8* %0, i64 %62
  %67 = bitcast i8* %66 to <32 x i8>*
  %68 = shufflevector <16 x i8> %65, <16 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %69 = shufflevector <32 x i8> %68, <32 x i8> undef, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %69, <32 x i8>* %67, align 1
  %70 = or i64 %42, 48
  %71 = shl i64 %70, 1
  %72 = getelementptr i8, i8* %1, i64 %70
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !24
  %75 = getelementptr inbounds i8, i8* %0, i64 %71
  %76 = bitcast i8* %75 to <32 x i8>*
  %77 = shufflevector <16 x i8> %74, <16 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %78 = shufflevector <32 x i8> %77, <32 x i8> undef, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %78, <32 x i8>* %76, align 1
  %79 = add i64 %42, 64
  %80 = add i64 %43, -4
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %41, !llvm.loop !27

82:                                               ; preds = %41, %27
  %83 = phi i64 [ 0, %27 ], [ %79, %41 ]
  %84 = icmp eq i64 %37, 0
  br i1 %84, label %99, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %96, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %97, %85 ], [ %37, %82 ]
  %88 = shl i64 %86, 1
  %89 = getelementptr i8, i8* %1, i64 %86
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1, !alias.scope !24
  %92 = getelementptr inbounds i8, i8* %0, i64 %88
  %93 = bitcast i8* %92 to <32 x i8>*
  %94 = shufflevector <16 x i8> %91, <16 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %95 = shufflevector <32 x i8> %94, <32 x i8> undef, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %95, <32 x i8>* %93, align 1
  %96 = add i64 %86, 16
  %97 = add i64 %87, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %85, !llvm.loop !28

99:                                               ; preds = %85, %82
  %100 = icmp eq i64 %28, %12
  br i1 %100, label %115, label %101

101:                                              ; preds = %99, %14, %8
  %102 = phi i32 [ 0, %14 ], [ 0, %8 ], [ %30, %99 ]
  %103 = phi i8* [ %0, %14 ], [ %0, %8 ], [ %32, %99 ]
  %104 = phi i8* [ %1, %14 ], [ %1, %8 ], [ %33, %99 ]
  br label %105

105:                                              ; preds = %101, %105
  %106 = phi i32 [ %113, %105 ], [ %102, %101 ]
  %107 = phi i8* [ %112, %105 ], [ %103, %101 ]
  %108 = phi i8* [ %111, %105 ], [ %104, %101 ]
  %109 = load i8, i8* %108, align 1
  store i8 %109, i8* %107, align 1
  %110 = getelementptr inbounds i8, i8* %107, i64 1
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i8, i8* %108, i64 1
  %112 = getelementptr inbounds i8, i8* %107, i64 2
  %113 = add nuw nsw i32 %106, 2
  %114 = icmp slt i32 %113, %6
  br i1 %114, label %105, label %115, !llvm.loop !29

115:                                              ; preds = %105, %99, %5
  %116 = phi i8* [ %1, %5 ], [ %33, %99 ], [ %111, %105 ]
  %117 = phi i8* [ %0, %5 ], [ %32, %99 ], [ %112, %105 ]
  %118 = and i32 %2, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  %121 = load i8, i8* %116, align 1
  store i8 %121, i8* %117, align 1
  br label %122

122:                                              ; preds = %115, %120
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleColsUp2_16_C(i16* nocapture, i16* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = add nsw i32 %2, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %115

8:                                                ; preds = %5
  %9 = add i32 %2, -2
  %10 = lshr i32 %9, 1
  %11 = add nuw i32 %10, 1
  %12 = zext i32 %11 to i64
  %13 = icmp ult i32 %11, 8
  br i1 %13, label %101, label %14

14:                                               ; preds = %8
  %15 = add i32 %2, -2
  %16 = lshr i32 %15, 1
  %17 = and i32 %15, -2
  %18 = zext i32 %17 to i64
  %19 = add nuw nsw i64 %18, 2
  %20 = getelementptr i16, i16* %0, i64 %19
  %21 = add nuw i32 %16, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr i16, i16* %1, i64 %22
  %24 = icmp ugt i16* %23, %0
  %25 = icmp ugt i16* %20, %1
  %26 = and i1 %24, %25
  br i1 %26, label %101, label %27

27:                                               ; preds = %14
  %28 = and i64 %12, 4294967288
  %29 = trunc i64 %28 to i32
  %30 = shl i32 %29, 1
  %31 = shl nuw nsw i64 %28, 1
  %32 = getelementptr i16, i16* %0, i64 %31
  %33 = getelementptr i16, i16* %1, i64 %28
  %34 = add nsw i64 %28, -8
  %35 = lshr exact i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 3
  %38 = icmp ult i64 %34, 24
  br i1 %38, label %82, label %39

39:                                               ; preds = %27
  %40 = sub nsw i64 %36, %37
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %79, %41 ]
  %43 = phi i64 [ %40, %39 ], [ %80, %41 ]
  %44 = shl i64 %42, 1
  %45 = getelementptr i16, i16* %1, i64 %42
  %46 = bitcast i16* %45 to <8 x i16>*
  %47 = load <8 x i16>, <8 x i16>* %46, align 2, !alias.scope !30
  %48 = getelementptr inbounds i16, i16* %0, i64 %44
  %49 = bitcast i16* %48 to <16 x i16>*
  %50 = shufflevector <8 x i16> %47, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %51 = shufflevector <16 x i16> %50, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %51, <16 x i16>* %49, align 2
  %52 = or i64 %42, 8
  %53 = shl i64 %52, 1
  %54 = getelementptr i16, i16* %1, i64 %52
  %55 = bitcast i16* %54 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !30
  %57 = getelementptr inbounds i16, i16* %0, i64 %53
  %58 = bitcast i16* %57 to <16 x i16>*
  %59 = shufflevector <8 x i16> %56, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %60 = shufflevector <16 x i16> %59, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %60, <16 x i16>* %58, align 2
  %61 = or i64 %42, 16
  %62 = shl i64 %61, 1
  %63 = getelementptr i16, i16* %1, i64 %61
  %64 = bitcast i16* %63 to <8 x i16>*
  %65 = load <8 x i16>, <8 x i16>* %64, align 2, !alias.scope !30
  %66 = getelementptr inbounds i16, i16* %0, i64 %62
  %67 = bitcast i16* %66 to <16 x i16>*
  %68 = shufflevector <8 x i16> %65, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %69 = shufflevector <16 x i16> %68, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %69, <16 x i16>* %67, align 2
  %70 = or i64 %42, 24
  %71 = shl i64 %70, 1
  %72 = getelementptr i16, i16* %1, i64 %70
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !30
  %75 = getelementptr inbounds i16, i16* %0, i64 %71
  %76 = bitcast i16* %75 to <16 x i16>*
  %77 = shufflevector <8 x i16> %74, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %78 = shufflevector <16 x i16> %77, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %78, <16 x i16>* %76, align 2
  %79 = add i64 %42, 32
  %80 = add i64 %43, -4
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %41, !llvm.loop !33

82:                                               ; preds = %41, %27
  %83 = phi i64 [ 0, %27 ], [ %79, %41 ]
  %84 = icmp eq i64 %37, 0
  br i1 %84, label %99, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %96, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %97, %85 ], [ %37, %82 ]
  %88 = shl i64 %86, 1
  %89 = getelementptr i16, i16* %1, i64 %86
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !30
  %92 = getelementptr inbounds i16, i16* %0, i64 %88
  %93 = bitcast i16* %92 to <16 x i16>*
  %94 = shufflevector <8 x i16> %91, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %95 = shufflevector <16 x i16> %94, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %95, <16 x i16>* %93, align 2
  %96 = add i64 %86, 8
  %97 = add i64 %87, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %85, !llvm.loop !34

99:                                               ; preds = %85, %82
  %100 = icmp eq i64 %28, %12
  br i1 %100, label %115, label %101

101:                                              ; preds = %99, %14, %8
  %102 = phi i32 [ 0, %14 ], [ 0, %8 ], [ %30, %99 ]
  %103 = phi i16* [ %0, %14 ], [ %0, %8 ], [ %32, %99 ]
  %104 = phi i16* [ %1, %14 ], [ %1, %8 ], [ %33, %99 ]
  br label %105

105:                                              ; preds = %101, %105
  %106 = phi i32 [ %113, %105 ], [ %102, %101 ]
  %107 = phi i16* [ %112, %105 ], [ %103, %101 ]
  %108 = phi i16* [ %111, %105 ], [ %104, %101 ]
  %109 = load i16, i16* %108, align 2
  store i16 %109, i16* %107, align 2
  %110 = getelementptr inbounds i16, i16* %107, i64 1
  store i16 %109, i16* %110, align 2
  %111 = getelementptr inbounds i16, i16* %108, i64 1
  %112 = getelementptr inbounds i16, i16* %107, i64 2
  %113 = add nuw nsw i32 %106, 2
  %114 = icmp slt i32 %113, %6
  br i1 %114, label %105, label %115, !llvm.loop !35

115:                                              ; preds = %105, %99, %5
  %116 = phi i16* [ %1, %5 ], [ %33, %99 ], [ %111, %105 ]
  %117 = phi i16* [ %0, %5 ], [ %32, %99 ], [ %112, %105 ]
  %118 = and i32 %2, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  %121 = load i16, i16* %116, align 2
  store i16 %121, i16* %117, align 2
  br label %122

122:                                              ; preds = %115, %120
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleFilterCols_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = add nsw i32 %2, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %54

8:                                                ; preds = %5, %8
  %9 = phi i8* [ %51, %8 ], [ %0, %5 ]
  %10 = phi i32 [ %50, %8 ], [ %3, %5 ]
  %11 = phi i32 [ %52, %8 ], [ 0, %5 ]
  %12 = ashr i32 %10, 16
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = add nsw i32 %12, 1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = lshr i32 %10, 9
  %23 = and i32 %22, 127
  %24 = sub nsw i32 %21, %16
  %25 = mul nsw i32 %24, %23
  %26 = add nsw i32 %25, 64
  %27 = lshr i32 %26, 7
  %28 = trunc i32 %27 to i8
  %29 = add i8 %15, %28
  store i8 %29, i8* %9, align 1
  %30 = add nsw i32 %10, %4
  %31 = ashr i32 %30, 16
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = add nsw i32 %31, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = lshr i32 %30, 9
  %42 = and i32 %41, 127
  %43 = sub nsw i32 %40, %35
  %44 = mul nsw i32 %43, %42
  %45 = add nsw i32 %44, 64
  %46 = lshr i32 %45, 7
  %47 = trunc i32 %46 to i8
  %48 = add i8 %34, %47
  %49 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %48, i8* %49, align 1
  %50 = add nsw i32 %30, %4
  %51 = getelementptr inbounds i8, i8* %9, i64 2
  %52 = add nuw nsw i32 %11, 2
  %53 = icmp slt i32 %52, %6
  br i1 %53, label %8, label %54

54:                                               ; preds = %8, %5
  %55 = phi i32 [ %3, %5 ], [ %50, %8 ]
  %56 = phi i8* [ %0, %5 ], [ %51, %8 ]
  %57 = and i32 %2, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %54
  %60 = ashr i32 %55, 16
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %1, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = add nsw i32 %60, 1
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %1, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = lshr i32 %55, 9
  %71 = and i32 %70, 127
  %72 = sub nsw i32 %69, %64
  %73 = mul nsw i32 %72, %71
  %74 = add nsw i32 %73, 64
  %75 = lshr i32 %74, 7
  %76 = trunc i32 %75 to i8
  %77 = add i8 %63, %76
  store i8 %77, i8* %56, align 1
  br label %78

78:                                               ; preds = %54, %59
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleFilterCols64_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = add nsw i32 %2, -1
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %55

9:                                                ; preds = %5
  %10 = sext i32 %4 to i64
  br label %11

11:                                               ; preds = %9, %11
  %12 = phi i8* [ %0, %9 ], [ %52, %11 ]
  %13 = phi i64 [ %6, %9 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %9 ], [ %53, %11 ]
  %15 = ashr i64 %13, 16
  %16 = getelementptr inbounds i8, i8* %1, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = add nsw i64 %15, 1
  %20 = getelementptr inbounds i8, i8* %1, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = lshr i64 %13, 9
  %24 = trunc i64 %23 to i32
  %25 = and i32 %24, 127
  %26 = sub nsw i32 %22, %18
  %27 = mul nsw i32 %26, %25
  %28 = add nsw i32 %27, 64
  %29 = lshr i32 %28, 7
  %30 = trunc i32 %29 to i8
  %31 = add i8 %17, %30
  store i8 %31, i8* %12, align 1
  %32 = add nsw i64 %13, %10
  %33 = ashr i64 %32, 16
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = add nsw i64 %33, 1
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = lshr i64 %32, 9
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 127
  %44 = sub nsw i32 %40, %36
  %45 = mul nsw i32 %44, %43
  %46 = add nsw i32 %45, 64
  %47 = lshr i32 %46, 7
  %48 = trunc i32 %47 to i8
  %49 = add i8 %35, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %49, i8* %50, align 1
  %51 = add nsw i64 %32, %10
  %52 = getelementptr inbounds i8, i8* %12, i64 2
  %53 = add nuw nsw i32 %14, 2
  %54 = icmp slt i32 %53, %7
  br i1 %54, label %11, label %55

55:                                               ; preds = %11, %5
  %56 = phi i64 [ %6, %5 ], [ %51, %11 ]
  %57 = phi i8* [ %0, %5 ], [ %52, %11 ]
  %58 = and i32 %2, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %78, label %60

60:                                               ; preds = %55
  %61 = ashr i64 %56, 16
  %62 = getelementptr inbounds i8, i8* %1, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = add nsw i64 %61, 1
  %66 = getelementptr inbounds i8, i8* %1, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = lshr i64 %56, 9
  %70 = trunc i64 %69 to i32
  %71 = and i32 %70, 127
  %72 = sub nsw i32 %68, %64
  %73 = mul nsw i32 %72, %71
  %74 = add nsw i32 %73, 64
  %75 = lshr i32 %74, 7
  %76 = trunc i32 %75 to i8
  %77 = add i8 %63, %76
  store i8 %77, i8* %57, align 1
  br label %78

78:                                               ; preds = %55, %60
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleFilterCols_16_C(i16* nocapture, i16* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = add nsw i32 %2, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %54

8:                                                ; preds = %5, %8
  %9 = phi i16* [ %51, %8 ], [ %0, %5 ]
  %10 = phi i32 [ %50, %8 ], [ %3, %5 ]
  %11 = phi i32 [ %52, %8 ], [ 0, %5 ]
  %12 = ashr i32 %10, 16
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i16, i16* %1, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = add nsw i32 %12, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i16, i16* %1, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i32 %10, 65535
  %21 = zext i32 %20 to i64
  %22 = zext i16 %19 to i64
  %23 = zext i16 %15 to i64
  %24 = sub nsw i64 %22, %23
  %25 = mul nsw i64 %24, %21
  %26 = add nsw i64 %25, 32768
  %27 = lshr i64 %26, 16
  %28 = trunc i64 %27 to i16
  %29 = add i16 %15, %28
  store i16 %29, i16* %9, align 2
  %30 = add nsw i32 %10, %4
  %31 = ashr i32 %30, 16
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = add nsw i32 %31, 1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  %38 = load i16, i16* %37, align 2
  %39 = and i32 %30, 65535
  %40 = zext i32 %39 to i64
  %41 = zext i16 %38 to i64
  %42 = zext i16 %34 to i64
  %43 = sub nsw i64 %41, %42
  %44 = mul nsw i64 %43, %40
  %45 = add nsw i64 %44, 32768
  %46 = lshr i64 %45, 16
  %47 = trunc i64 %46 to i16
  %48 = add i16 %34, %47
  %49 = getelementptr inbounds i16, i16* %9, i64 1
  store i16 %48, i16* %49, align 2
  %50 = add nsw i32 %30, %4
  %51 = getelementptr inbounds i16, i16* %9, i64 2
  %52 = add nuw nsw i32 %11, 2
  %53 = icmp slt i32 %52, %6
  br i1 %53, label %8, label %54

54:                                               ; preds = %8, %5
  %55 = phi i32 [ %3, %5 ], [ %50, %8 ]
  %56 = phi i16* [ %0, %5 ], [ %51, %8 ]
  %57 = and i32 %2, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %54
  %60 = ashr i32 %55, 16
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i16, i16* %1, i64 %61
  %63 = load i16, i16* %62, align 2
  %64 = add nsw i32 %60, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %1, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = and i32 %55, 65535
  %69 = zext i32 %68 to i64
  %70 = zext i16 %67 to i64
  %71 = zext i16 %63 to i64
  %72 = sub nsw i64 %70, %71
  %73 = mul nsw i64 %72, %69
  %74 = add nsw i64 %73, 32768
  %75 = lshr i64 %74, 16
  %76 = trunc i64 %75 to i16
  %77 = add i16 %63, %76
  store i16 %77, i16* %56, align 2
  br label %78

78:                                               ; preds = %54, %59
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleFilterCols64_16_C(i16* nocapture, i16* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = add nsw i32 %2, -1
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %51

9:                                                ; preds = %5
  %10 = sext i32 %4 to i64
  br label %11

11:                                               ; preds = %9, %11
  %12 = phi i16* [ %0, %9 ], [ %48, %11 ]
  %13 = phi i64 [ %6, %9 ], [ %47, %11 ]
  %14 = phi i32 [ 0, %9 ], [ %49, %11 ]
  %15 = ashr i64 %13, 16
  %16 = getelementptr inbounds i16, i16* %1, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = add nsw i64 %15, 1
  %19 = getelementptr inbounds i16, i16* %1, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = and i64 %13, 65535
  %22 = zext i16 %20 to i64
  %23 = zext i16 %17 to i64
  %24 = sub nsw i64 %22, %23
  %25 = mul nsw i64 %24, %21
  %26 = add nsw i64 %25, 32768
  %27 = lshr i64 %26, 16
  %28 = trunc i64 %27 to i16
  %29 = add i16 %17, %28
  store i16 %29, i16* %12, align 2
  %30 = add nsw i64 %13, %10
  %31 = ashr i64 %30, 16
  %32 = getelementptr inbounds i16, i16* %1, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = add nsw i64 %31, 1
  %35 = getelementptr inbounds i16, i16* %1, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = and i64 %30, 65535
  %38 = zext i16 %36 to i64
  %39 = zext i16 %33 to i64
  %40 = sub nsw i64 %38, %39
  %41 = mul nsw i64 %40, %37
  %42 = add nsw i64 %41, 32768
  %43 = lshr i64 %42, 16
  %44 = trunc i64 %43 to i16
  %45 = add i16 %33, %44
  %46 = getelementptr inbounds i16, i16* %12, i64 1
  store i16 %45, i16* %46, align 2
  %47 = add nsw i64 %30, %10
  %48 = getelementptr inbounds i16, i16* %12, i64 2
  %49 = add nuw nsw i32 %14, 2
  %50 = icmp slt i32 %49, %7
  br i1 %50, label %11, label %51

51:                                               ; preds = %11, %5
  %52 = phi i64 [ %6, %5 ], [ %47, %11 ]
  %53 = phi i16* [ %0, %5 ], [ %48, %11 ]
  %54 = and i32 %2, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %51
  %57 = ashr i64 %52, 16
  %58 = getelementptr inbounds i16, i16* %1, i64 %57
  %59 = load i16, i16* %58, align 2
  %60 = add nsw i64 %57, 1
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = and i64 %52, 65535
  %64 = zext i16 %62 to i64
  %65 = zext i16 %59 to i64
  %66 = sub nsw i64 %64, %65
  %67 = mul nsw i64 %66, %63
  %68 = add nsw i64 %67, 32768
  %69 = lshr i64 %68, 16
  %70 = trunc i64 %69 to i16
  %71 = add i16 %59, %70
  store i16 %71, i16* %53, align 2
  br label %72

72:                                               ; preds = %51, %56
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown38_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %19, %6 ], [ 0, %4 ]
  %8 = phi i8* [ %18, %6 ], [ %0, %4 ]
  %9 = phi i8* [ %17, %6 ], [ %2, %4 ]
  %10 = load i8, i8* %8, align 1
  store i8 %10, i8* %9, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 3
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %12, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %8, i64 6
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds i8, i8* %9, i64 2
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds i8, i8* %9, i64 3
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = add nuw nsw i32 %7, 3
  %20 = icmp slt i32 %19, %3
  br i1 %20, label %6, label %21

21:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown38_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %19, %6 ], [ 0, %4 ]
  %8 = phi i16* [ %18, %6 ], [ %0, %4 ]
  %9 = phi i16* [ %17, %6 ], [ %2, %4 ]
  %10 = load i16, i16* %8, align 2
  store i16 %10, i16* %9, align 2
  %11 = getelementptr inbounds i16, i16* %8, i64 3
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds i16, i16* %9, i64 1
  store i16 %12, i16* %13, align 2
  %14 = getelementptr inbounds i16, i16* %8, i64 6
  %15 = load i16, i16* %14, align 2
  %16 = getelementptr inbounds i16, i16* %9, i64 2
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i16, i16* %9, i64 3
  %18 = getelementptr inbounds i16, i16* %8, i64 8
  %19 = add nuw nsw i32 %7, 3
  %20 = icmp slt i32 %19, %3
  br i1 %20, label %6, label %21

21:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown38_3_Box_C(i8* readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %133

6:                                                ; preds = %4
  %7 = add nsw i64 %1, 1
  %8 = add nsw i64 %1, 2
  %9 = shl nsw i64 %1, 1
  %10 = or i64 %9, 1
  %11 = add nsw i64 %9, 2
  %12 = add nsw i64 %1, 3
  %13 = add nsw i64 %1, 4
  %14 = add nsw i64 %1, 5
  %15 = add nsw i64 %9, 3
  %16 = add nsw i64 %9, 4
  %17 = add nsw i64 %9, 5
  %18 = add nsw i64 %1, 6
  %19 = add nsw i64 %1, 7
  %20 = add nsw i64 %9, 6
  %21 = add nsw i64 %9, 7
  br label %22

22:                                               ; preds = %6, %22
  %23 = phi i32 [ 0, %6 ], [ %131, %22 ]
  %24 = phi i8* [ %0, %6 ], [ %129, %22 ]
  %25 = phi i8* [ %2, %6 ], [ %130, %22 ]
  %26 = load i8, i8* %24, align 1
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i8, i8* %24, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = add nuw nsw i32 %30, %27
  %32 = getelementptr inbounds i8, i8* %24, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = add nuw nsw i32 %31, %34
  %36 = getelementptr inbounds i8, i8* %24, i64 %1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = add nuw nsw i32 %35, %38
  %40 = getelementptr inbounds i8, i8* %24, i64 %7
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = add nuw nsw i32 %39, %42
  %44 = getelementptr inbounds i8, i8* %24, i64 %8
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = add nuw nsw i32 %43, %46
  %48 = getelementptr inbounds i8, i8* %24, i64 %9
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = add nuw nsw i32 %47, %50
  %52 = getelementptr inbounds i8, i8* %24, i64 %10
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = add nuw nsw i32 %51, %54
  %56 = getelementptr inbounds i8, i8* %24, i64 %11
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = add nuw nsw i32 %55, %58
  %60 = mul nsw i32 %59, 7281
  %61 = lshr i32 %60, 16
  %62 = trunc i32 %61 to i8
  store i8 %62, i8* %25, align 1
  %63 = getelementptr inbounds i8, i8* %24, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = getelementptr inbounds i8, i8* %24, i64 4
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = add nuw nsw i32 %68, %65
  %70 = getelementptr inbounds i8, i8* %24, i64 5
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = add nuw nsw i32 %69, %72
  %74 = getelementptr inbounds i8, i8* %24, i64 %12
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = add nuw nsw i32 %73, %76
  %78 = getelementptr inbounds i8, i8* %24, i64 %13
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = add nuw nsw i32 %77, %80
  %82 = getelementptr inbounds i8, i8* %24, i64 %14
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = add nuw nsw i32 %81, %84
  %86 = getelementptr inbounds i8, i8* %24, i64 %15
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = add nuw nsw i32 %85, %88
  %90 = getelementptr inbounds i8, i8* %24, i64 %16
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = add nuw nsw i32 %89, %92
  %94 = getelementptr inbounds i8, i8* %24, i64 %17
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = add nuw nsw i32 %93, %96
  %98 = mul nsw i32 %97, 7281
  %99 = lshr i32 %98, 16
  %100 = trunc i32 %99 to i8
  %101 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %100, i8* %101, align 1
  %102 = getelementptr inbounds i8, i8* %24, i64 6
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = getelementptr inbounds i8, i8* %24, i64 7
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = add nuw nsw i32 %107, %104
  %109 = getelementptr inbounds i8, i8* %24, i64 %18
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = add nuw nsw i32 %108, %111
  %113 = getelementptr inbounds i8, i8* %24, i64 %19
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = add nuw nsw i32 %112, %115
  %117 = getelementptr inbounds i8, i8* %24, i64 %20
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = add nuw nsw i32 %116, %119
  %121 = getelementptr inbounds i8, i8* %24, i64 %21
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = add nuw nsw i32 %120, %123
  %125 = mul nuw nsw i32 %124, 10922
  %126 = lshr i32 %125, 16
  %127 = trunc i32 %126 to i8
  %128 = getelementptr inbounds i8, i8* %25, i64 2
  store i8 %127, i8* %128, align 1
  %129 = getelementptr inbounds i8, i8* %24, i64 8
  %130 = getelementptr inbounds i8, i8* %25, i64 3
  %131 = add nuw nsw i32 %23, 3
  %132 = icmp slt i32 %131, %3
  br i1 %132, label %22, label %133

133:                                              ; preds = %22, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown38_3_Box_16_C(i16* readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %133

6:                                                ; preds = %4
  %7 = add nsw i64 %1, 1
  %8 = add nsw i64 %1, 2
  %9 = shl nsw i64 %1, 1
  %10 = or i64 %9, 1
  %11 = add nsw i64 %9, 2
  %12 = add nsw i64 %1, 3
  %13 = add nsw i64 %1, 4
  %14 = add nsw i64 %1, 5
  %15 = add nsw i64 %9, 3
  %16 = add nsw i64 %9, 4
  %17 = add nsw i64 %9, 5
  %18 = add nsw i64 %1, 6
  %19 = add nsw i64 %1, 7
  %20 = add nsw i64 %9, 6
  %21 = add nsw i64 %9, 7
  br label %22

22:                                               ; preds = %6, %22
  %23 = phi i32 [ 0, %6 ], [ %131, %22 ]
  %24 = phi i16* [ %0, %6 ], [ %129, %22 ]
  %25 = phi i16* [ %2, %6 ], [ %130, %22 ]
  %26 = load i16, i16* %24, align 2
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds i16, i16* %24, i64 1
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = add nuw nsw i32 %30, %27
  %32 = getelementptr inbounds i16, i16* %24, i64 2
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %31, %34
  %36 = getelementptr inbounds i16, i16* %24, i64 %1
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %35, %38
  %40 = getelementptr inbounds i16, i16* %24, i64 %7
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = add nuw nsw i32 %39, %42
  %44 = getelementptr inbounds i16, i16* %24, i64 %8
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = add nuw nsw i32 %43, %46
  %48 = getelementptr inbounds i16, i16* %24, i64 %9
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  %51 = add nuw nsw i32 %47, %50
  %52 = getelementptr inbounds i16, i16* %24, i64 %10
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = add nuw nsw i32 %51, %54
  %56 = getelementptr inbounds i16, i16* %24, i64 %11
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = add nuw nsw i32 %55, %58
  %60 = mul nsw i32 %59, 7281
  %61 = lshr i32 %60, 16
  %62 = trunc i32 %61 to i16
  store i16 %62, i16* %25, align 2
  %63 = getelementptr inbounds i16, i16* %24, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds i16, i16* %24, i64 4
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = add nuw nsw i32 %68, %65
  %70 = getelementptr inbounds i16, i16* %24, i64 5
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = add nuw nsw i32 %69, %72
  %74 = getelementptr inbounds i16, i16* %24, i64 %12
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = add nuw nsw i32 %73, %76
  %78 = getelementptr inbounds i16, i16* %24, i64 %13
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = add nuw nsw i32 %77, %80
  %82 = getelementptr inbounds i16, i16* %24, i64 %14
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = add nuw nsw i32 %81, %84
  %86 = getelementptr inbounds i16, i16* %24, i64 %15
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = add nuw nsw i32 %85, %88
  %90 = getelementptr inbounds i16, i16* %24, i64 %16
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = add nuw nsw i32 %89, %92
  %94 = getelementptr inbounds i16, i16* %24, i64 %17
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = add nuw nsw i32 %93, %96
  %98 = mul nsw i32 %97, 7281
  %99 = lshr i32 %98, 16
  %100 = trunc i32 %99 to i16
  %101 = getelementptr inbounds i16, i16* %25, i64 1
  store i16 %100, i16* %101, align 2
  %102 = getelementptr inbounds i16, i16* %24, i64 6
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = getelementptr inbounds i16, i16* %24, i64 7
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = add nuw nsw i32 %107, %104
  %109 = getelementptr inbounds i16, i16* %24, i64 %18
  %110 = load i16, i16* %109, align 2
  %111 = zext i16 %110 to i32
  %112 = add nuw nsw i32 %108, %111
  %113 = getelementptr inbounds i16, i16* %24, i64 %19
  %114 = load i16, i16* %113, align 2
  %115 = zext i16 %114 to i32
  %116 = add nuw nsw i32 %112, %115
  %117 = getelementptr inbounds i16, i16* %24, i64 %20
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = add nuw nsw i32 %116, %119
  %121 = getelementptr inbounds i16, i16* %24, i64 %21
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = add nuw nsw i32 %120, %123
  %125 = mul nsw i32 %124, 10922
  %126 = lshr i32 %125, 16
  %127 = trunc i32 %126 to i16
  %128 = getelementptr inbounds i16, i16* %25, i64 2
  store i16 %127, i16* %128, align 2
  %129 = getelementptr inbounds i16, i16* %24, i64 8
  %130 = getelementptr inbounds i16, i16* %25, i64 3
  %131 = add nuw nsw i32 %23, 3
  %132 = icmp slt i32 %131, %3
  br i1 %132, label %22, label %133

133:                                              ; preds = %22, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown38_2_Box_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %92

6:                                                ; preds = %4
  %7 = add nsw i64 %1, 1
  %8 = add nsw i64 %1, 2
  %9 = add nsw i64 %1, 3
  %10 = add nsw i64 %1, 4
  %11 = add nsw i64 %1, 5
  %12 = add nsw i64 %1, 6
  %13 = add nsw i64 %1, 7
  br label %14

14:                                               ; preds = %6, %14
  %15 = phi i32 [ 0, %6 ], [ %90, %14 ]
  %16 = phi i8* [ %0, %6 ], [ %88, %14 ]
  %17 = phi i8* [ %2, %6 ], [ %89, %14 ]
  %18 = load i8, i8* %16, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds i8, i8* %16, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = add nuw nsw i32 %22, %19
  %24 = getelementptr inbounds i8, i8* %16, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = add nuw nsw i32 %23, %26
  %28 = getelementptr inbounds i8, i8* %16, i64 %1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = add nuw nsw i32 %27, %30
  %32 = getelementptr inbounds i8, i8* %16, i64 %7
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = add nuw nsw i32 %31, %34
  %36 = getelementptr inbounds i8, i8* %16, i64 %8
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = add nuw nsw i32 %35, %38
  %40 = mul nuw nsw i32 %39, 10922
  %41 = lshr i32 %40, 16
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %17, align 1
  %43 = getelementptr inbounds i8, i8* %16, i64 3
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %16, i64 4
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nuw nsw i32 %48, %45
  %50 = getelementptr inbounds i8, i8* %16, i64 5
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = add nuw nsw i32 %49, %52
  %54 = getelementptr inbounds i8, i8* %16, i64 %9
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = add nuw nsw i32 %53, %56
  %58 = getelementptr inbounds i8, i8* %16, i64 %10
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = add nuw nsw i32 %57, %60
  %62 = getelementptr inbounds i8, i8* %16, i64 %11
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = add nuw nsw i32 %61, %64
  %66 = mul nuw nsw i32 %65, 10922
  %67 = lshr i32 %66, 16
  %68 = trunc i32 %67 to i8
  %69 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %68, i8* %69, align 1
  %70 = getelementptr inbounds i8, i8* %16, i64 6
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds i8, i8* %16, i64 7
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = add nuw nsw i32 %75, %72
  %77 = getelementptr inbounds i8, i8* %16, i64 %12
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = add nuw nsw i32 %76, %79
  %81 = getelementptr inbounds i8, i8* %16, i64 %13
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = add nuw nsw i32 %80, %83
  %85 = lshr i32 %84, 2
  %86 = trunc i32 %85 to i8
  %87 = getelementptr inbounds i8, i8* %17, i64 2
  store i8 %86, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %16, i64 8
  %89 = getelementptr inbounds i8, i8* %17, i64 3
  %90 = add nuw nsw i32 %15, 3
  %91 = icmp slt i32 %90, %3
  br i1 %91, label %14, label %92

92:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowDown38_2_Box_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %92

6:                                                ; preds = %4
  %7 = add nsw i64 %1, 1
  %8 = add nsw i64 %1, 2
  %9 = add nsw i64 %1, 3
  %10 = add nsw i64 %1, 4
  %11 = add nsw i64 %1, 5
  %12 = add nsw i64 %1, 6
  %13 = add nsw i64 %1, 7
  br label %14

14:                                               ; preds = %6, %14
  %15 = phi i32 [ 0, %6 ], [ %90, %14 ]
  %16 = phi i16* [ %0, %6 ], [ %88, %14 ]
  %17 = phi i16* [ %2, %6 ], [ %89, %14 ]
  %18 = load i16, i16* %16, align 2
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds i16, i16* %16, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = add nuw nsw i32 %22, %19
  %24 = getelementptr inbounds i16, i16* %16, i64 2
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = add nuw nsw i32 %23, %26
  %28 = getelementptr inbounds i16, i16* %16, i64 %1
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = add nuw nsw i32 %27, %30
  %32 = getelementptr inbounds i16, i16* %16, i64 %7
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %31, %34
  %36 = getelementptr inbounds i16, i16* %16, i64 %8
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %35, %38
  %40 = mul nsw i32 %39, 10922
  %41 = lshr i32 %40, 16
  %42 = trunc i32 %41 to i16
  store i16 %42, i16* %17, align 2
  %43 = getelementptr inbounds i16, i16* %16, i64 3
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %16, i64 4
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add nuw nsw i32 %48, %45
  %50 = getelementptr inbounds i16, i16* %16, i64 5
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = add nuw nsw i32 %49, %52
  %54 = getelementptr inbounds i16, i16* %16, i64 %9
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nuw nsw i32 %53, %56
  %58 = getelementptr inbounds i16, i16* %16, i64 %10
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = add nuw nsw i32 %57, %60
  %62 = getelementptr inbounds i16, i16* %16, i64 %11
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = add nuw nsw i32 %61, %64
  %66 = mul nsw i32 %65, 10922
  %67 = lshr i32 %66, 16
  %68 = trunc i32 %67 to i16
  %69 = getelementptr inbounds i16, i16* %17, i64 1
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i16, i16* %16, i64 6
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = getelementptr inbounds i16, i16* %16, i64 7
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = add nuw nsw i32 %75, %72
  %77 = getelementptr inbounds i16, i16* %16, i64 %12
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = add nuw nsw i32 %76, %79
  %81 = getelementptr inbounds i16, i16* %16, i64 %13
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = add nuw nsw i32 %80, %83
  %85 = lshr i32 %84, 2
  %86 = trunc i32 %85 to i16
  %87 = getelementptr inbounds i16, i16* %17, i64 2
  store i16 %86, i16* %87, align 2
  %88 = getelementptr inbounds i16, i16* %16, i64 8
  %89 = getelementptr inbounds i16, i16* %17, i64 3
  %90 = add nuw nsw i32 %15, 3
  %91 = icmp slt i32 %90, %3
  br i1 %91, label %14, label %92

92:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleAddRow_C(i8* nocapture readonly, i16* nocapture, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 1
  br i1 %4, label %5, label %62

5:                                                ; preds = %3
  %6 = add i32 %2, -2
  %7 = lshr i32 %6, 1
  %8 = add nuw i32 %7, 1
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %43, label %11

11:                                               ; preds = %5
  %12 = sub nuw i32 %8, %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i8* [ %0, %11 ], [ %39, %13 ]
  %15 = phi i16* [ %1, %11 ], [ %40, %13 ]
  %16 = phi i32 [ %12, %11 ], [ %41, %13 ]
  %17 = load i8, i8* %14, align 1
  %18 = zext i8 %17 to i16
  %19 = load i16, i16* %15, align 2
  %20 = add i16 %19, %18
  store i16 %20, i16* %15, align 2
  %21 = getelementptr inbounds i8, i8* %14, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  %24 = getelementptr inbounds i16, i16* %15, i64 1
  %25 = load i16, i16* %24, align 2
  %26 = add i16 %25, %23
  store i16 %26, i16* %24, align 2
  %27 = getelementptr inbounds i8, i8* %14, i64 2
  %28 = getelementptr inbounds i16, i16* %15, i64 2
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i16
  %31 = load i16, i16* %28, align 2
  %32 = add i16 %31, %30
  store i16 %32, i16* %28, align 2
  %33 = getelementptr inbounds i8, i8* %14, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = getelementptr inbounds i16, i16* %15, i64 3
  %37 = load i16, i16* %36, align 2
  %38 = add i16 %37, %35
  store i16 %38, i16* %36, align 2
  %39 = getelementptr inbounds i8, i8* %14, i64 4
  %40 = getelementptr inbounds i16, i16* %15, i64 4
  %41 = add i32 %16, -2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %13

43:                                               ; preds = %13, %5
  %44 = phi i8* [ undef, %5 ], [ %39, %13 ]
  %45 = phi i16* [ undef, %5 ], [ %40, %13 ]
  %46 = phi i8* [ %0, %5 ], [ %39, %13 ]
  %47 = phi i16* [ %1, %5 ], [ %40, %13 ]
  %48 = icmp eq i32 %9, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %43
  %50 = load i8, i8* %46, align 1
  %51 = zext i8 %50 to i16
  %52 = load i16, i16* %47, align 2
  %53 = add i16 %52, %51
  store i16 %53, i16* %47, align 2
  %54 = getelementptr inbounds i8, i8* %46, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  %57 = getelementptr inbounds i16, i16* %47, i64 1
  %58 = load i16, i16* %57, align 2
  %59 = add i16 %58, %56
  store i16 %59, i16* %57, align 2
  %60 = getelementptr inbounds i16, i16* %47, i64 2
  %61 = getelementptr inbounds i8, i8* %46, i64 2
  br label %62

62:                                               ; preds = %49, %43, %3
  %63 = phi i16* [ %1, %3 ], [ %45, %43 ], [ %60, %49 ]
  %64 = phi i8* [ %0, %3 ], [ %44, %43 ], [ %61, %49 ]
  %65 = and i32 %2, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = load i8, i8* %64, align 1
  %69 = zext i8 %68 to i16
  %70 = load i16, i16* %63, align 2
  %71 = add i16 %70, %69
  store i16 %71, i16* %63, align 2
  br label %72

72:                                               ; preds = %62, %67
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleAddRow_16_C(i16* nocapture readonly, i32* nocapture, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 1
  br i1 %4, label %5, label %62

5:                                                ; preds = %3
  %6 = add i32 %2, -2
  %7 = lshr i32 %6, 1
  %8 = add nuw i32 %7, 1
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %43, label %11

11:                                               ; preds = %5
  %12 = sub nuw i32 %8, %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i16* [ %0, %11 ], [ %39, %13 ]
  %15 = phi i32* [ %1, %11 ], [ %40, %13 ]
  %16 = phi i32 [ %12, %11 ], [ %41, %13 ]
  %17 = load i16, i16* %14, align 2
  %18 = zext i16 %17 to i32
  %19 = load i32, i32* %15, align 4
  %20 = add i32 %19, %18
  store i32 %20, i32* %15, align 4
  %21 = getelementptr inbounds i16, i16* %14, i64 1
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = getelementptr inbounds i32, i32* %15, i64 1
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, %23
  store i32 %26, i32* %24, align 4
  %27 = getelementptr inbounds i16, i16* %14, i64 2
  %28 = getelementptr inbounds i32, i32* %15, i64 2
  %29 = load i16, i16* %27, align 2
  %30 = zext i16 %29 to i32
  %31 = load i32, i32* %28, align 4
  %32 = add i32 %31, %30
  store i32 %32, i32* %28, align 4
  %33 = getelementptr inbounds i16, i16* %14, i64 3
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = getelementptr inbounds i32, i32* %15, i64 3
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, %35
  store i32 %38, i32* %36, align 4
  %39 = getelementptr inbounds i16, i16* %14, i64 4
  %40 = getelementptr inbounds i32, i32* %15, i64 4
  %41 = add i32 %16, -2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %13

43:                                               ; preds = %13, %5
  %44 = phi i16* [ undef, %5 ], [ %39, %13 ]
  %45 = phi i32* [ undef, %5 ], [ %40, %13 ]
  %46 = phi i16* [ %0, %5 ], [ %39, %13 ]
  %47 = phi i32* [ %1, %5 ], [ %40, %13 ]
  %48 = icmp eq i32 %9, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %43
  %50 = load i16, i16* %46, align 2
  %51 = zext i16 %50 to i32
  %52 = load i32, i32* %47, align 4
  %53 = add i32 %52, %51
  store i32 %53, i32* %47, align 4
  %54 = getelementptr inbounds i16, i16* %46, i64 1
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds i32, i32* %47, i64 1
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, %56
  store i32 %59, i32* %57, align 4
  %60 = getelementptr inbounds i32, i32* %47, i64 2
  %61 = getelementptr inbounds i16, i16* %46, i64 2
  br label %62

62:                                               ; preds = %49, %43, %3
  %63 = phi i32* [ %1, %3 ], [ %45, %43 ], [ %60, %49 ]
  %64 = phi i16* [ %0, %3 ], [ %44, %43 ], [ %61, %49 ]
  %65 = and i32 %2, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = load i16, i16* %64, align 2
  %69 = zext i16 %68 to i32
  %70 = load i32, i32* %63, align 4
  %71 = add i32 %70, %69
  store i32 %71, i32* %63, align 4
  br label %72

72:                                               ; preds = %62, %67
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBRowDown2_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = bitcast i8* %0 to i32*
  %6 = bitcast i8* %2 to i32*
  %7 = icmp sgt i32 %3, 1
  br i1 %7, label %8, label %66

8:                                                ; preds = %4
  %9 = add i32 %3, -2
  %10 = lshr i32 %9, 1
  %11 = add nuw i32 %10, 1
  %12 = and i32 %11, 3
  %13 = icmp ult i32 %9, 6
  br i1 %13, label %47, label %14

14:                                               ; preds = %8
  %15 = sub i32 %11, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i32* [ %6, %14 ], [ %44, %16 ]
  %18 = phi i32* [ %5, %14 ], [ %43, %16 ]
  %19 = phi i32 [ %15, %14 ], [ %45, %16 ]
  %20 = getelementptr inbounds i32, i32* %18, i64 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %17, align 4
  %22 = getelementptr inbounds i32, i32* %18, i64 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i32, i32* %17, i64 2
  %26 = getelementptr inbounds i32, i32* %18, i64 5
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %25, align 4
  %28 = getelementptr inbounds i32, i32* %18, i64 7
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %17, i64 3
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds i32, i32* %17, i64 4
  %32 = getelementptr inbounds i32, i32* %18, i64 9
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %31, align 4
  %34 = getelementptr inbounds i32, i32* %18, i64 11
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds i32, i32* %17, i64 5
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds i32, i32* %17, i64 6
  %38 = getelementptr inbounds i32, i32* %18, i64 13
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds i32, i32* %18, i64 15
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds i32, i32* %17, i64 7
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds i32, i32* %18, i64 16
  %44 = getelementptr inbounds i32, i32* %17, i64 8
  %45 = add i32 %19, -4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %16

47:                                               ; preds = %16, %8
  %48 = phi i32* [ undef, %8 ], [ %43, %16 ]
  %49 = phi i32* [ undef, %8 ], [ %44, %16 ]
  %50 = phi i32* [ %6, %8 ], [ %44, %16 ]
  %51 = phi i32* [ %5, %8 ], [ %43, %16 ]
  %52 = icmp eq i32 %12, 0
  br i1 %52, label %66, label %53

53:                                               ; preds = %47, %53
  %54 = phi i32* [ %63, %53 ], [ %50, %47 ]
  %55 = phi i32* [ %62, %53 ], [ %51, %47 ]
  %56 = phi i32 [ %64, %53 ], [ %12, %47 ]
  %57 = getelementptr inbounds i32, i32* %55, i64 1
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %54, align 4
  %59 = getelementptr inbounds i32, i32* %55, i64 3
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds i32, i32* %54, i64 1
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds i32, i32* %55, i64 4
  %63 = getelementptr inbounds i32, i32* %54, i64 2
  %64 = add i32 %56, -1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53, !llvm.loop !36

66:                                               ; preds = %47, %53, %4
  %67 = phi i32* [ %5, %4 ], [ %48, %47 ], [ %62, %53 ]
  %68 = phi i32* [ %6, %4 ], [ %49, %47 ], [ %63, %53 ]
  %69 = and i32 %3, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds i32, i32* %67, i64 1
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %68, align 4
  br label %74

74:                                               ; preds = %66, %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBRowDown2Linear_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %56

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %54, %6 ], [ 0, %4 ]
  %8 = phi i8* [ %52, %6 ], [ %0, %4 ]
  %9 = phi i8* [ %53, %6 ], [ %2, %4 ]
  %10 = load i8, i8* %8, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds i8, i8* %8, i64 4
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = add nuw nsw i32 %11, 1
  %16 = add nuw nsw i32 %15, %14
  %17 = lshr i32 %16, 1
  %18 = trunc i32 %17 to i8
  store i8 %18, i8* %9, align 1
  %19 = getelementptr inbounds i8, i8* %8, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %8, i64 5
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nuw nsw i32 %21, 1
  %26 = add nuw nsw i32 %25, %24
  %27 = lshr i32 %26, 1
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %8, i64 2
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds i8, i8* %8, i64 6
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = add nuw nsw i32 %32, 1
  %37 = add nuw nsw i32 %36, %35
  %38 = lshr i32 %37, 1
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds i8, i8* %9, i64 2
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %8, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i8, i8* %8, i64 7
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = add nuw nsw i32 %43, 1
  %48 = add nuw nsw i32 %47, %46
  %49 = lshr i32 %48, 1
  %50 = trunc i32 %49 to i8
  %51 = getelementptr inbounds i8, i8* %9, i64 3
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds i8, i8* %8, i64 8
  %53 = getelementptr inbounds i8, i8* %9, i64 4
  %54 = add nuw nsw i32 %7, 1
  %55 = icmp eq i32 %54, %3
  br i1 %55, label %56, label %6

56:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBRowDown2Box_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %96

6:                                                ; preds = %4
  %7 = add nsw i64 %1, 4
  %8 = add nsw i64 %1, 1
  %9 = add nsw i64 %1, 5
  %10 = add nsw i64 %1, 2
  %11 = add nsw i64 %1, 6
  %12 = add nsw i64 %1, 3
  %13 = add nsw i64 %1, 7
  br label %14

14:                                               ; preds = %14, %6
  %15 = phi i32 [ 0, %6 ], [ %94, %14 ]
  %16 = phi i8* [ %0, %6 ], [ %92, %14 ]
  %17 = phi i8* [ %2, %6 ], [ %93, %14 ]
  %18 = load i8, i8* %16, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds i8, i8* %16, i64 4
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i8, i8* %16, i64 %1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %16, i64 %7
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = add nuw nsw i32 %19, 2
  %30 = add nuw nsw i32 %29, %22
  %31 = add nuw nsw i32 %30, %25
  %32 = add nuw nsw i32 %31, %28
  %33 = lshr i32 %32, 2
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %17, align 1
  %35 = getelementptr inbounds i8, i8* %16, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i8, i8* %16, i64 5
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = getelementptr inbounds i8, i8* %16, i64 %8
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i8, i8* %16, i64 %9
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = add nuw nsw i32 %37, 2
  %48 = add nuw nsw i32 %47, %40
  %49 = add nuw nsw i32 %48, %43
  %50 = add nuw nsw i32 %49, %46
  %51 = lshr i32 %50, 2
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %52, i8* %53, align 1
  %54 = getelementptr inbounds i8, i8* %16, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = getelementptr inbounds i8, i8* %16, i64 6
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = getelementptr inbounds i8, i8* %16, i64 %10
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = getelementptr inbounds i8, i8* %16, i64 %11
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = add nuw nsw i32 %56, 2
  %67 = add nuw nsw i32 %66, %59
  %68 = add nuw nsw i32 %67, %62
  %69 = add nuw nsw i32 %68, %65
  %70 = lshr i32 %69, 2
  %71 = trunc i32 %70 to i8
  %72 = getelementptr inbounds i8, i8* %17, i64 2
  store i8 %71, i8* %72, align 1
  %73 = getelementptr inbounds i8, i8* %16, i64 3
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = getelementptr inbounds i8, i8* %16, i64 7
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds i8, i8* %16, i64 %12
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = getelementptr inbounds i8, i8* %16, i64 %13
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = add nuw nsw i32 %75, 2
  %86 = add nuw nsw i32 %85, %78
  %87 = add nuw nsw i32 %86, %81
  %88 = add nuw nsw i32 %87, %84
  %89 = lshr i32 %88, 2
  %90 = trunc i32 %89 to i8
  %91 = getelementptr inbounds i8, i8* %17, i64 3
  store i8 %90, i8* %91, align 1
  %92 = getelementptr inbounds i8, i8* %16, i64 8
  %93 = getelementptr inbounds i8, i8* %17, i64 4
  %94 = add nuw nsw i32 %15, 1
  %95 = icmp eq i32 %94, %3
  br i1 %95, label %96, label %14

96:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBRowDownEven_C(i8* nocapture readonly, i64, i32, i8* nocapture, i32) local_unnamed_addr #0 {
  %6 = bitcast i8* %0 to i32*
  %7 = bitcast i8* %3 to i32*
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %9, label %68

9:                                                ; preds = %5
  %10 = sext i32 %2 to i64
  %11 = shl nsw i32 %2, 1
  %12 = sext i32 %11 to i64
  %13 = add i32 %4, -2
  %14 = lshr i32 %13, 1
  %15 = add nuw i32 %14, 1
  %16 = and i32 %15, 3
  %17 = icmp ult i32 %13, 6
  br i1 %17, label %50, label %18

18:                                               ; preds = %9
  %19 = sub i32 %15, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i32* [ %7, %18 ], [ %47, %20 ]
  %22 = phi i32* [ %6, %18 ], [ %46, %20 ]
  %23 = phi i32 [ %19, %18 ], [ %48, %20 ]
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %21, align 4
  %25 = getelementptr inbounds i32, i32* %22, i64 %10
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds i32, i32* %22, i64 %12
  %29 = getelementptr inbounds i32, i32* %21, i64 2
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  %31 = getelementptr inbounds i32, i32* %28, i64 %10
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds i32, i32* %21, i64 3
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds i32, i32* %28, i64 %12
  %35 = getelementptr inbounds i32, i32* %21, i64 4
  %36 = load i32, i32* %34, align 4
  store i32 %36, i32* %35, align 4
  %37 = getelementptr inbounds i32, i32* %34, i64 %10
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i32, i32* %21, i64 5
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds i32, i32* %34, i64 %12
  %41 = getelementptr inbounds i32, i32* %21, i64 6
  %42 = load i32, i32* %40, align 4
  store i32 %42, i32* %41, align 4
  %43 = getelementptr inbounds i32, i32* %40, i64 %10
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds i32, i32* %21, i64 7
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds i32, i32* %40, i64 %12
  %47 = getelementptr inbounds i32, i32* %21, i64 8
  %48 = add i32 %23, -4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %20

50:                                               ; preds = %20, %9
  %51 = phi i32* [ undef, %9 ], [ %46, %20 ]
  %52 = phi i32* [ undef, %9 ], [ %47, %20 ]
  %53 = phi i32* [ %7, %9 ], [ %47, %20 ]
  %54 = phi i32* [ %6, %9 ], [ %46, %20 ]
  %55 = icmp eq i32 %16, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %50, %56
  %57 = phi i32* [ %65, %56 ], [ %53, %50 ]
  %58 = phi i32* [ %64, %56 ], [ %54, %50 ]
  %59 = phi i32 [ %66, %56 ], [ %16, %50 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 %10
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds i32, i32* %57, i64 1
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds i32, i32* %58, i64 %12
  %65 = getelementptr inbounds i32, i32* %57, i64 2
  %66 = add i32 %59, -1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %56, !llvm.loop !37

68:                                               ; preds = %50, %56, %5
  %69 = phi i32* [ %6, %5 ], [ %51, %50 ], [ %64, %56 ]
  %70 = phi i32* [ %7, %5 ], [ %52, %50 ], [ %65, %56 ]
  %71 = and i32 %4, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = load i32, i32* %69, align 4
  store i32 %74, i32* %70, align 4
  br label %75

75:                                               ; preds = %68, %73
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBRowDownEvenBox_C(i8* nocapture readonly, i64, i32, i8* nocapture, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %99

7:                                                ; preds = %5
  %8 = add nsw i64 %1, 4
  %9 = add nsw i64 %1, 1
  %10 = add nsw i64 %1, 5
  %11 = add nsw i64 %1, 2
  %12 = add nsw i64 %1, 6
  %13 = add nsw i64 %1, 3
  %14 = add nsw i64 %1, 7
  %15 = shl nsw i32 %2, 2
  %16 = sext i32 %15 to i64
  br label %17

17:                                               ; preds = %17, %7
  %18 = phi i32 [ 0, %7 ], [ %97, %17 ]
  %19 = phi i8* [ %0, %7 ], [ %95, %17 ]
  %20 = phi i8* [ %3, %7 ], [ %96, %17 ]
  %21 = load i8, i8* %19, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %19, i64 %1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %19, i64 %8
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = add nuw nsw i32 %22, 2
  %33 = add nuw nsw i32 %32, %25
  %34 = add nuw nsw i32 %33, %28
  %35 = add nuw nsw i32 %34, %31
  %36 = lshr i32 %35, 2
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %20, align 1
  %38 = getelementptr inbounds i8, i8* %19, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = getelementptr inbounds i8, i8* %19, i64 5
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i8, i8* %19, i64 %9
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i8, i8* %19, i64 %10
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = add nuw nsw i32 %40, 2
  %51 = add nuw nsw i32 %50, %43
  %52 = add nuw nsw i32 %51, %46
  %53 = add nuw nsw i32 %52, %49
  %54 = lshr i32 %53, 2
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds i8, i8* %20, i64 1
  store i8 %55, i8* %56, align 1
  %57 = getelementptr inbounds i8, i8* %19, i64 2
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = getelementptr inbounds i8, i8* %19, i64 6
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = getelementptr inbounds i8, i8* %19, i64 %11
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = getelementptr inbounds i8, i8* %19, i64 %12
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = add nuw nsw i32 %59, 2
  %70 = add nuw nsw i32 %69, %62
  %71 = add nuw nsw i32 %70, %65
  %72 = add nuw nsw i32 %71, %68
  %73 = lshr i32 %72, 2
  %74 = trunc i32 %73 to i8
  %75 = getelementptr inbounds i8, i8* %20, i64 2
  store i8 %74, i8* %75, align 1
  %76 = getelementptr inbounds i8, i8* %19, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds i8, i8* %19, i64 7
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = getelementptr inbounds i8, i8* %19, i64 %13
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = getelementptr inbounds i8, i8* %19, i64 %14
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = add nuw nsw i32 %78, 2
  %89 = add nuw nsw i32 %88, %81
  %90 = add nuw nsw i32 %89, %84
  %91 = add nuw nsw i32 %90, %87
  %92 = lshr i32 %91, 2
  %93 = trunc i32 %92 to i8
  %94 = getelementptr inbounds i8, i8* %20, i64 3
  store i8 %93, i8* %94, align 1
  %95 = getelementptr inbounds i8, i8* %19, i64 %16
  %96 = getelementptr inbounds i8, i8* %20, i64 4
  %97 = add nuw nsw i32 %18, 1
  %98 = icmp eq i32 %97, %4
  br i1 %98, label %99, label %17

99:                                               ; preds = %17, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBCols_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = bitcast i8* %1 to i32*
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 1
  br i1 %8, label %9, label %66

9:                                                ; preds = %5
  %10 = add i32 %2, -2
  %11 = lshr i32 %10, 1
  %12 = add nuw i32 %11, 1
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %47, label %15

15:                                               ; preds = %9
  %16 = sub nuw i32 %12, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32* [ %7, %15 ], [ %44, %17 ]
  %19 = phi i32 [ %3, %15 ], [ %43, %17 ]
  %20 = phi i32 [ %16, %15 ], [ %45, %17 ]
  %21 = ashr i32 %19, 16
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %6, i64 %22
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %18, align 4
  %25 = add nsw i32 %19, %4
  %26 = ashr i32 %25, 16
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %6, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %18, i64 1
  store i32 %29, i32* %30, align 4
  %31 = add nsw i32 %25, %4
  %32 = getelementptr inbounds i32, i32* %18, i64 2
  %33 = ashr i32 %31, 16
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %6, i64 %34
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %32, align 4
  %37 = add nsw i32 %31, %4
  %38 = ashr i32 %37, 16
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %6, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds i32, i32* %18, i64 3
  store i32 %41, i32* %42, align 4
  %43 = add nsw i32 %37, %4
  %44 = getelementptr inbounds i32, i32* %18, i64 4
  %45 = add i32 %20, -2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %17

47:                                               ; preds = %17, %9
  %48 = phi i32 [ undef, %9 ], [ %43, %17 ]
  %49 = phi i32* [ undef, %9 ], [ %44, %17 ]
  %50 = phi i32* [ %7, %9 ], [ %44, %17 ]
  %51 = phi i32 [ %3, %9 ], [ %43, %17 ]
  %52 = icmp eq i32 %13, 0
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = ashr i32 %51, 16
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %6, i64 %55
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %50, align 4
  %58 = add nsw i32 %51, %4
  %59 = ashr i32 %58, 16
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %6, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds i32, i32* %50, i64 1
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds i32, i32* %50, i64 2
  %65 = add nsw i32 %58, %4
  br label %66

66:                                               ; preds = %53, %47, %5
  %67 = phi i32 [ %3, %5 ], [ %48, %47 ], [ %65, %53 ]
  %68 = phi i32* [ %7, %5 ], [ %49, %47 ], [ %64, %53 ]
  %69 = and i32 %2, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %66
  %72 = ashr i32 %67, 16
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %6, i64 %73
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %68, align 4
  br label %76

76:                                               ; preds = %66, %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBCols64_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %1 to i32*
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 1
  br i1 %9, label %10, label %62

10:                                               ; preds = %5
  %11 = sext i32 %4 to i64
  %12 = add i32 %2, -2
  %13 = lshr i32 %12, 1
  %14 = add nuw i32 %13, 1
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %10
  %18 = sub nuw i32 %14, %15
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32* [ %8, %17 ], [ %42, %19 ]
  %21 = phi i64 [ %6, %17 ], [ %41, %19 ]
  %22 = phi i32 [ %18, %17 ], [ %43, %19 ]
  %23 = ashr i64 %21, 16
  %24 = getelementptr inbounds i32, i32* %7, i64 %23
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %20, align 4
  %26 = add nsw i64 %21, %11
  %27 = ashr i64 %26, 16
  %28 = getelementptr inbounds i32, i32* %7, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %20, i64 1
  store i32 %29, i32* %30, align 4
  %31 = add nsw i64 %26, %11
  %32 = getelementptr inbounds i32, i32* %20, i64 2
  %33 = ashr i64 %31, 16
  %34 = getelementptr inbounds i32, i32* %7, i64 %33
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %32, align 4
  %36 = add nsw i64 %31, %11
  %37 = ashr i64 %36, 16
  %38 = getelementptr inbounds i32, i32* %7, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i32, i32* %20, i64 3
  store i32 %39, i32* %40, align 4
  %41 = add nsw i64 %36, %11
  %42 = getelementptr inbounds i32, i32* %20, i64 4
  %43 = add i32 %22, -2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %19

45:                                               ; preds = %19, %10
  %46 = phi i64 [ undef, %10 ], [ %41, %19 ]
  %47 = phi i32* [ undef, %10 ], [ %42, %19 ]
  %48 = phi i32* [ %8, %10 ], [ %42, %19 ]
  %49 = phi i64 [ %6, %10 ], [ %41, %19 ]
  %50 = icmp eq i32 %15, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %45
  %52 = ashr i64 %49, 16
  %53 = getelementptr inbounds i32, i32* %7, i64 %52
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %48, align 4
  %55 = add nsw i64 %49, %11
  %56 = ashr i64 %55, 16
  %57 = getelementptr inbounds i32, i32* %7, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds i32, i32* %48, i64 1
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds i32, i32* %48, i64 2
  %61 = add nsw i64 %55, %11
  br label %62

62:                                               ; preds = %51, %45, %5
  %63 = phi i64 [ %6, %5 ], [ %46, %45 ], [ %61, %51 ]
  %64 = phi i32* [ %8, %5 ], [ %47, %45 ], [ %60, %51 ]
  %65 = and i32 %2, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = ashr i64 %63, 16
  %69 = getelementptr inbounds i32, i32* %7, i64 %68
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %64, align 4
  br label %71

71:                                               ; preds = %62, %67
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBColsUp2_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = bitcast i8* %1 to i32*
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 1
  br i1 %8, label %9, label %55

9:                                                ; preds = %5
  %10 = add i32 %2, -2
  %11 = lshr i32 %10, 1
  %12 = add nuw i32 %11, 1
  %13 = and i32 %12, 3
  %14 = icmp ult i32 %10, 6
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = sub i32 %12, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32* [ %7, %15 ], [ %36, %17 ]
  %19 = phi i32* [ %6, %15 ], [ %35, %17 ]
  %20 = phi i32 [ %16, %15 ], [ %37, %17 ]
  %21 = load i32, i32* %19, align 4
  store i32 %21, i32* %18, align 4
  %22 = getelementptr inbounds i32, i32* %18, i64 1
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds i32, i32* %19, i64 1
  %24 = getelementptr inbounds i32, i32* %18, i64 2
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %24, align 4
  %26 = getelementptr inbounds i32, i32* %18, i64 3
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds i32, i32* %19, i64 2
  %28 = getelementptr inbounds i32, i32* %18, i64 4
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %18, i64 5
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds i32, i32* %19, i64 3
  %32 = getelementptr inbounds i32, i32* %18, i64 6
  %33 = load i32, i32* %31, align 4
  store i32 %33, i32* %32, align 4
  %34 = getelementptr inbounds i32, i32* %18, i64 7
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %19, i64 4
  %36 = getelementptr inbounds i32, i32* %18, i64 8
  %37 = add i32 %20, -4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %17

39:                                               ; preds = %17, %9
  %40 = phi i32* [ undef, %9 ], [ %35, %17 ]
  %41 = phi i32* [ undef, %9 ], [ %36, %17 ]
  %42 = phi i32* [ %7, %9 ], [ %36, %17 ]
  %43 = phi i32* [ %6, %9 ], [ %35, %17 ]
  %44 = icmp eq i32 %13, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %39, %45
  %46 = phi i32* [ %52, %45 ], [ %42, %39 ]
  %47 = phi i32* [ %51, %45 ], [ %43, %39 ]
  %48 = phi i32 [ %53, %45 ], [ %13, %39 ]
  %49 = load i32, i32* %47, align 4
  store i32 %49, i32* %46, align 4
  %50 = getelementptr inbounds i32, i32* %46, i64 1
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds i32, i32* %47, i64 1
  %52 = getelementptr inbounds i32, i32* %46, i64 2
  %53 = add i32 %48, -1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %45, !llvm.loop !38

55:                                               ; preds = %39, %45, %5
  %56 = phi i32* [ %6, %5 ], [ %40, %39 ], [ %51, %45 ]
  %57 = phi i32* [ %7, %5 ], [ %41, %39 ], [ %52, %45 ]
  %58 = and i32 %2, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %55
  %61 = load i32, i32* %56, align 4
  store i32 %61, i32* %57, align 4
  br label %62

62:                                               ; preds = %55, %60
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBFilterCols_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = bitcast i8* %1 to i32*
  %7 = bitcast i8* %0 to i32*
  %8 = add nsw i32 %2, -1
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %110

10:                                               ; preds = %5, %10
  %11 = phi i32 [ %106, %10 ], [ %3, %5 ]
  %12 = phi i32* [ %107, %10 ], [ %7, %5 ]
  %13 = phi i32 [ %108, %10 ], [ 0, %5 ]
  %14 = ashr i32 %11, 16
  %15 = lshr i32 %11, 9
  %16 = and i32 %15, 127
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds i32, i32* %6, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %14, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %6, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = lshr i32 %19, 24
  %25 = xor i32 %16, 127
  %26 = mul nuw nsw i32 %24, %25
  %27 = lshr i32 %23, 24
  %28 = mul nuw nsw i32 %27, %16
  %29 = add nuw nsw i32 %28, %26
  %30 = lshr i32 %29, 7
  %31 = shl i32 %30, 24
  %32 = lshr i32 %19, 16
  %33 = and i32 %32, 255
  %34 = mul nuw nsw i32 %33, %25
  %35 = lshr i32 %23, 16
  %36 = and i32 %35, 255
  %37 = mul nuw nsw i32 %36, %16
  %38 = add nuw nsw i32 %37, %34
  %39 = lshr i32 %38, 7
  %40 = shl nuw nsw i32 %39, 16
  %41 = lshr i32 %19, 8
  %42 = and i32 %41, 255
  %43 = mul nuw nsw i32 %42, %25
  %44 = lshr i32 %23, 8
  %45 = and i32 %44, 255
  %46 = mul nuw nsw i32 %45, %16
  %47 = add nuw nsw i32 %46, %43
  %48 = lshr i32 %47, 7
  %49 = shl nuw nsw i32 %48, 8
  %50 = and i32 %19, 255
  %51 = mul nuw nsw i32 %50, %25
  %52 = and i32 %23, 255
  %53 = mul nuw nsw i32 %52, %16
  %54 = add nuw nsw i32 %53, %51
  %55 = lshr i32 %54, 7
  %56 = or i32 %31, %55
  %57 = or i32 %56, %40
  %58 = or i32 %57, %49
  store i32 %58, i32* %12, align 4
  %59 = add nsw i32 %11, %4
  %60 = ashr i32 %59, 16
  %61 = lshr i32 %59, 9
  %62 = and i32 %61, 127
  %63 = sext i32 %60 to i64
  %64 = getelementptr inbounds i32, i32* %6, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %60, 1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %6, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = lshr i32 %65, 24
  %71 = xor i32 %62, 127
  %72 = mul nuw nsw i32 %70, %71
  %73 = lshr i32 %69, 24
  %74 = mul nuw nsw i32 %73, %62
  %75 = add nuw nsw i32 %74, %72
  %76 = lshr i32 %75, 7
  %77 = shl i32 %76, 24
  %78 = lshr i32 %65, 16
  %79 = and i32 %78, 255
  %80 = mul nuw nsw i32 %79, %71
  %81 = lshr i32 %69, 16
  %82 = and i32 %81, 255
  %83 = mul nuw nsw i32 %82, %62
  %84 = add nuw nsw i32 %83, %80
  %85 = lshr i32 %84, 7
  %86 = shl nuw nsw i32 %85, 16
  %87 = lshr i32 %65, 8
  %88 = and i32 %87, 255
  %89 = mul nuw nsw i32 %88, %71
  %90 = lshr i32 %69, 8
  %91 = and i32 %90, 255
  %92 = mul nuw nsw i32 %91, %62
  %93 = add nuw nsw i32 %92, %89
  %94 = lshr i32 %93, 7
  %95 = shl nuw nsw i32 %94, 8
  %96 = and i32 %65, 255
  %97 = mul nuw nsw i32 %96, %71
  %98 = and i32 %69, 255
  %99 = mul nuw nsw i32 %98, %62
  %100 = add nuw nsw i32 %99, %97
  %101 = lshr i32 %100, 7
  %102 = or i32 %77, %101
  %103 = or i32 %102, %86
  %104 = or i32 %103, %95
  %105 = getelementptr inbounds i32, i32* %12, i64 1
  store i32 %104, i32* %105, align 4
  %106 = add nsw i32 %59, %4
  %107 = getelementptr inbounds i32, i32* %12, i64 2
  %108 = add nuw nsw i32 %13, 2
  %109 = icmp slt i32 %108, %8
  br i1 %109, label %10, label %110

110:                                              ; preds = %10, %5
  %111 = phi i32* [ %7, %5 ], [ %107, %10 ]
  %112 = phi i32 [ %3, %5 ], [ %106, %10 ]
  %113 = and i32 %2, 1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %161, label %115

115:                                              ; preds = %110
  %116 = ashr i32 %112, 16
  %117 = lshr i32 %112, 9
  %118 = and i32 %117, 127
  %119 = sext i32 %116 to i64
  %120 = getelementptr inbounds i32, i32* %6, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = add nsw i32 %116, 1
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %6, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = lshr i32 %121, 24
  %127 = xor i32 %118, 127
  %128 = mul nuw nsw i32 %126, %127
  %129 = lshr i32 %125, 24
  %130 = mul nuw nsw i32 %129, %118
  %131 = add nuw nsw i32 %130, %128
  %132 = lshr i32 %131, 7
  %133 = shl i32 %132, 24
  %134 = lshr i32 %121, 16
  %135 = and i32 %134, 255
  %136 = mul nuw nsw i32 %135, %127
  %137 = lshr i32 %125, 16
  %138 = and i32 %137, 255
  %139 = mul nuw nsw i32 %138, %118
  %140 = add nuw nsw i32 %139, %136
  %141 = lshr i32 %140, 7
  %142 = shl nuw nsw i32 %141, 16
  %143 = lshr i32 %121, 8
  %144 = and i32 %143, 255
  %145 = mul nuw nsw i32 %144, %127
  %146 = lshr i32 %125, 8
  %147 = and i32 %146, 255
  %148 = mul nuw nsw i32 %147, %118
  %149 = add nuw nsw i32 %148, %145
  %150 = lshr i32 %149, 7
  %151 = shl nuw nsw i32 %150, 8
  %152 = and i32 %121, 255
  %153 = mul nuw nsw i32 %152, %127
  %154 = and i32 %125, 255
  %155 = mul nuw nsw i32 %154, %118
  %156 = add nuw nsw i32 %155, %153
  %157 = lshr i32 %156, 7
  %158 = or i32 %133, %157
  %159 = or i32 %158, %142
  %160 = or i32 %159, %151
  store i32 %160, i32* %111, align 4
  br label %161

161:                                              ; preds = %110, %115
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleARGBFilterCols64_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %1 to i32*
  %8 = bitcast i8* %0 to i32*
  %9 = add nsw i32 %2, -1
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %111

11:                                               ; preds = %5
  %12 = sext i32 %4 to i64
  br label %13

13:                                               ; preds = %11, %13
  %14 = phi i64 [ %6, %11 ], [ %107, %13 ]
  %15 = phi i32* [ %8, %11 ], [ %108, %13 ]
  %16 = phi i32 [ 0, %11 ], [ %109, %13 ]
  %17 = ashr i64 %14, 16
  %18 = lshr i64 %14, 9
  %19 = trunc i64 %18 to i32
  %20 = and i32 %19, 127
  %21 = getelementptr inbounds i32, i32* %7, i64 %17
  %22 = load i32, i32* %21, align 4
  %23 = add nsw i64 %17, 1
  %24 = getelementptr inbounds i32, i32* %7, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = lshr i32 %22, 24
  %27 = xor i32 %20, 127
  %28 = mul nuw nsw i32 %26, %27
  %29 = lshr i32 %25, 24
  %30 = mul nuw nsw i32 %29, %20
  %31 = add nuw nsw i32 %30, %28
  %32 = lshr i32 %31, 7
  %33 = shl i32 %32, 24
  %34 = lshr i32 %22, 16
  %35 = and i32 %34, 255
  %36 = mul nuw nsw i32 %35, %27
  %37 = lshr i32 %25, 16
  %38 = and i32 %37, 255
  %39 = mul nuw nsw i32 %38, %20
  %40 = add nuw nsw i32 %39, %36
  %41 = lshr i32 %40, 7
  %42 = shl nuw nsw i32 %41, 16
  %43 = lshr i32 %22, 8
  %44 = and i32 %43, 255
  %45 = mul nuw nsw i32 %44, %27
  %46 = lshr i32 %25, 8
  %47 = and i32 %46, 255
  %48 = mul nuw nsw i32 %47, %20
  %49 = add nuw nsw i32 %48, %45
  %50 = lshr i32 %49, 7
  %51 = shl nuw nsw i32 %50, 8
  %52 = and i32 %22, 255
  %53 = mul nuw nsw i32 %52, %27
  %54 = and i32 %25, 255
  %55 = mul nuw nsw i32 %54, %20
  %56 = add nuw nsw i32 %55, %53
  %57 = lshr i32 %56, 7
  %58 = or i32 %33, %57
  %59 = or i32 %58, %42
  %60 = or i32 %59, %51
  store i32 %60, i32* %15, align 4
  %61 = add nsw i64 %14, %12
  %62 = ashr i64 %61, 16
  %63 = lshr i64 %61, 9
  %64 = trunc i64 %63 to i32
  %65 = and i32 %64, 127
  %66 = getelementptr inbounds i32, i32* %7, i64 %62
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i64 %62, 1
  %69 = getelementptr inbounds i32, i32* %7, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = lshr i32 %67, 24
  %72 = xor i32 %65, 127
  %73 = mul nuw nsw i32 %71, %72
  %74 = lshr i32 %70, 24
  %75 = mul nuw nsw i32 %74, %65
  %76 = add nuw nsw i32 %75, %73
  %77 = lshr i32 %76, 7
  %78 = shl i32 %77, 24
  %79 = lshr i32 %67, 16
  %80 = and i32 %79, 255
  %81 = mul nuw nsw i32 %80, %72
  %82 = lshr i32 %70, 16
  %83 = and i32 %82, 255
  %84 = mul nuw nsw i32 %83, %65
  %85 = add nuw nsw i32 %84, %81
  %86 = lshr i32 %85, 7
  %87 = shl nuw nsw i32 %86, 16
  %88 = lshr i32 %67, 8
  %89 = and i32 %88, 255
  %90 = mul nuw nsw i32 %89, %72
  %91 = lshr i32 %70, 8
  %92 = and i32 %91, 255
  %93 = mul nuw nsw i32 %92, %65
  %94 = add nuw nsw i32 %93, %90
  %95 = lshr i32 %94, 7
  %96 = shl nuw nsw i32 %95, 8
  %97 = and i32 %67, 255
  %98 = mul nuw nsw i32 %97, %72
  %99 = and i32 %70, 255
  %100 = mul nuw nsw i32 %99, %65
  %101 = add nuw nsw i32 %100, %98
  %102 = lshr i32 %101, 7
  %103 = or i32 %78, %102
  %104 = or i32 %103, %87
  %105 = or i32 %104, %96
  %106 = getelementptr inbounds i32, i32* %15, i64 1
  store i32 %105, i32* %106, align 4
  %107 = add nsw i64 %61, %12
  %108 = getelementptr inbounds i32, i32* %15, i64 2
  %109 = add nuw nsw i32 %16, 2
  %110 = icmp slt i32 %109, %9
  br i1 %110, label %13, label %111

111:                                              ; preds = %13, %5
  %112 = phi i32* [ %8, %5 ], [ %108, %13 ]
  %113 = phi i64 [ %6, %5 ], [ %107, %13 ]
  %114 = and i32 %2, 1
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %161, label %116

116:                                              ; preds = %111
  %117 = ashr i64 %113, 16
  %118 = lshr i64 %113, 9
  %119 = trunc i64 %118 to i32
  %120 = and i32 %119, 127
  %121 = getelementptr inbounds i32, i32* %7, i64 %117
  %122 = load i32, i32* %121, align 4
  %123 = add nsw i64 %117, 1
  %124 = getelementptr inbounds i32, i32* %7, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = lshr i32 %122, 24
  %127 = xor i32 %120, 127
  %128 = mul nuw nsw i32 %126, %127
  %129 = lshr i32 %125, 24
  %130 = mul nuw nsw i32 %129, %120
  %131 = add nuw nsw i32 %130, %128
  %132 = lshr i32 %131, 7
  %133 = shl i32 %132, 24
  %134 = lshr i32 %122, 16
  %135 = and i32 %134, 255
  %136 = mul nuw nsw i32 %135, %127
  %137 = lshr i32 %125, 16
  %138 = and i32 %137, 255
  %139 = mul nuw nsw i32 %138, %120
  %140 = add nuw nsw i32 %139, %136
  %141 = lshr i32 %140, 7
  %142 = shl nuw nsw i32 %141, 16
  %143 = lshr i32 %122, 8
  %144 = and i32 %143, 255
  %145 = mul nuw nsw i32 %144, %127
  %146 = lshr i32 %125, 8
  %147 = and i32 %146, 255
  %148 = mul nuw nsw i32 %147, %120
  %149 = add nuw nsw i32 %148, %145
  %150 = lshr i32 %149, 7
  %151 = shl nuw nsw i32 %150, 8
  %152 = and i32 %122, 255
  %153 = mul nuw nsw i32 %152, %127
  %154 = and i32 %125, 255
  %155 = mul nuw nsw i32 %154, %120
  %156 = add nuw nsw i32 %155, %153
  %157 = lshr i32 %156, 7
  %158 = or i32 %133, %157
  %159 = or i32 %158, %142
  %160 = or i32 %159, %151
  store i32 %160, i32* %112, align 4
  br label %161

161:                                              ; preds = %111, %116
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowDown2_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %2 to i16*
  %7 = icmp sgt i32 %3, 1
  br i1 %7, label %8, label %66

8:                                                ; preds = %4
  %9 = add i32 %3, -2
  %10 = lshr i32 %9, 1
  %11 = add nuw i32 %10, 1
  %12 = and i32 %11, 3
  %13 = icmp ult i32 %9, 6
  br i1 %13, label %47, label %14

14:                                               ; preds = %8
  %15 = sub i32 %11, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i16* [ %6, %14 ], [ %44, %16 ]
  %18 = phi i16* [ %5, %14 ], [ %43, %16 ]
  %19 = phi i32 [ %15, %14 ], [ %45, %16 ]
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  store i16 %21, i16* %17, align 2
  %22 = getelementptr inbounds i16, i16* %18, i64 3
  %23 = load i16, i16* %22, align 2
  %24 = getelementptr inbounds i16, i16* %17, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i16, i16* %17, i64 2
  %26 = getelementptr inbounds i16, i16* %18, i64 3
  %27 = load i16, i16* %26, align 2
  store i16 %27, i16* %25, align 2
  %28 = getelementptr inbounds i16, i16* %18, i64 5
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds i16, i16* %17, i64 3
  store i16 %29, i16* %30, align 2
  %31 = getelementptr inbounds i16, i16* %17, i64 4
  %32 = getelementptr inbounds i16, i16* %18, i64 5
  %33 = load i16, i16* %32, align 2
  store i16 %33, i16* %31, align 2
  %34 = getelementptr inbounds i16, i16* %18, i64 7
  %35 = load i16, i16* %34, align 2
  %36 = getelementptr inbounds i16, i16* %17, i64 5
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i16, i16* %17, i64 6
  %38 = getelementptr inbounds i16, i16* %18, i64 7
  %39 = load i16, i16* %38, align 2
  store i16 %39, i16* %37, align 2
  %40 = getelementptr inbounds i16, i16* %18, i64 9
  %41 = load i16, i16* %40, align 2
  %42 = getelementptr inbounds i16, i16* %17, i64 7
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i16, i16* %18, i64 8
  %44 = getelementptr inbounds i16, i16* %17, i64 8
  %45 = add i32 %19, -4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %16

47:                                               ; preds = %16, %8
  %48 = phi i16* [ undef, %8 ], [ %43, %16 ]
  %49 = phi i16* [ undef, %8 ], [ %44, %16 ]
  %50 = phi i16* [ %6, %8 ], [ %44, %16 ]
  %51 = phi i16* [ %5, %8 ], [ %43, %16 ]
  %52 = icmp eq i32 %12, 0
  br i1 %52, label %66, label %53

53:                                               ; preds = %47, %53
  %54 = phi i16* [ %63, %53 ], [ %50, %47 ]
  %55 = phi i16* [ %62, %53 ], [ %51, %47 ]
  %56 = phi i32 [ %64, %53 ], [ %12, %47 ]
  %57 = getelementptr inbounds i16, i16* %55, i64 1
  %58 = load i16, i16* %57, align 2
  store i16 %58, i16* %54, align 2
  %59 = getelementptr inbounds i16, i16* %55, i64 3
  %60 = load i16, i16* %59, align 2
  %61 = getelementptr inbounds i16, i16* %54, i64 1
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i16, i16* %55, i64 2
  %63 = getelementptr inbounds i16, i16* %54, i64 2
  %64 = add i32 %56, -1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53, !llvm.loop !39

66:                                               ; preds = %47, %53, %4
  %67 = phi i16* [ %5, %4 ], [ %48, %47 ], [ %62, %53 ]
  %68 = phi i16* [ %6, %4 ], [ %49, %47 ], [ %63, %53 ]
  %69 = and i32 %3, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds i16, i16* %67, i64 1
  %73 = load i16, i16* %72, align 2
  store i16 %73, i16* %68, align 2
  br label %74

74:                                               ; preds = %66, %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowDown2Linear_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %86

6:                                                ; preds = %4
  %7 = and i32 %3, 1
  %8 = icmp eq i32 %3, 1
  br i1 %8, label %61, label %9

9:                                                ; preds = %6
  %10 = sub i32 %3, %7
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i8* [ %0, %9 ], [ %57, %11 ]
  %13 = phi i8* [ %2, %9 ], [ %58, %11 ]
  %14 = phi i32 [ %10, %9 ], [ %59, %11 ]
  %15 = load i8, i8* %12, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %12, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = add nuw nsw i32 %16, 1
  %21 = add nuw nsw i32 %20, %19
  %22 = lshr i32 %21, 1
  %23 = trunc i32 %22 to i8
  store i8 %23, i8* %13, align 1
  %24 = getelementptr inbounds i8, i8* %12, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %12, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = add nuw nsw i32 %26, 1
  %31 = add nuw nsw i32 %30, %29
  %32 = lshr i32 %31, 1
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds i8, i8* %13, i64 1
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %12, i64 4
  %36 = getelementptr inbounds i8, i8* %13, i64 2
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds i8, i8* %12, i64 6
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = add nuw nsw i32 %38, 1
  %43 = add nuw nsw i32 %42, %41
  %44 = lshr i32 %43, 1
  %45 = trunc i32 %44 to i8
  store i8 %45, i8* %36, align 1
  %46 = getelementptr inbounds i8, i8* %12, i64 5
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds i8, i8* %12, i64 7
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = add nuw nsw i32 %48, 1
  %53 = add nuw nsw i32 %52, %51
  %54 = lshr i32 %53, 1
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds i8, i8* %13, i64 3
  store i8 %55, i8* %56, align 1
  %57 = getelementptr inbounds i8, i8* %12, i64 8
  %58 = getelementptr inbounds i8, i8* %13, i64 4
  %59 = add i32 %14, -2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %11

61:                                               ; preds = %11, %6
  %62 = phi i8* [ %0, %6 ], [ %57, %11 ]
  %63 = phi i8* [ %2, %6 ], [ %58, %11 ]
  %64 = icmp eq i32 %7, 0
  br i1 %64, label %86, label %65

65:                                               ; preds = %61
  %66 = load i8, i8* %62, align 1
  %67 = zext i8 %66 to i32
  %68 = getelementptr inbounds i8, i8* %62, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = add nuw nsw i32 %67, 1
  %72 = add nuw nsw i32 %71, %70
  %73 = lshr i32 %72, 1
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %63, align 1
  %75 = getelementptr inbounds i8, i8* %62, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = getelementptr inbounds i8, i8* %62, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = add nuw nsw i32 %77, 1
  %82 = add nuw nsw i32 %81, %80
  %83 = lshr i32 %82, 1
  %84 = trunc i32 %83 to i8
  %85 = getelementptr inbounds i8, i8* %63, i64 1
  store i8 %84, i8* %85, align 1
  br label %86

86:                                               ; preds = %65, %61, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowDown2Box_C(i8* nocapture readonly, i64, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %54

6:                                                ; preds = %4
  %7 = add nsw i64 %1, 2
  %8 = add nsw i64 %1, 1
  %9 = add nsw i64 %1, 3
  br label %10

10:                                               ; preds = %10, %6
  %11 = phi i32 [ 0, %6 ], [ %52, %10 ]
  %12 = phi i8* [ %0, %6 ], [ %50, %10 ]
  %13 = phi i8* [ %2, %6 ], [ %51, %10 ]
  %14 = load i8, i8* %12, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds i8, i8* %12, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds i8, i8* %12, i64 %1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %12, i64 %7
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nuw nsw i32 %15, 2
  %26 = add nuw nsw i32 %25, %18
  %27 = add nuw nsw i32 %26, %21
  %28 = add nuw nsw i32 %27, %24
  %29 = lshr i32 %28, 2
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %13, align 1
  %31 = getelementptr inbounds i8, i8* %12, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds i8, i8* %12, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds i8, i8* %12, i64 %8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds i8, i8* %12, i64 %9
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = add nuw nsw i32 %33, 2
  %44 = add nuw nsw i32 %43, %36
  %45 = add nuw nsw i32 %44, %39
  %46 = add nuw nsw i32 %45, %42
  %47 = lshr i32 %46, 2
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds i8, i8* %13, i64 1
  store i8 %48, i8* %49, align 1
  %50 = getelementptr inbounds i8, i8* %12, i64 4
  %51 = getelementptr inbounds i8, i8* %13, i64 2
  %52 = add nuw nsw i32 %11, 1
  %53 = icmp eq i32 %52, %3
  br i1 %53, label %54, label %10

54:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowDownEven_C(i8* nocapture readonly, i64, i32, i8* nocapture, i32) local_unnamed_addr #0 {
  %6 = bitcast i8* %0 to i16*
  %7 = bitcast i8* %3 to i16*
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %9, label %68

9:                                                ; preds = %5
  %10 = sext i32 %2 to i64
  %11 = shl nsw i32 %2, 1
  %12 = sext i32 %11 to i64
  %13 = add i32 %4, -2
  %14 = lshr i32 %13, 1
  %15 = add nuw i32 %14, 1
  %16 = and i32 %15, 3
  %17 = icmp ult i32 %13, 6
  br i1 %17, label %50, label %18

18:                                               ; preds = %9
  %19 = sub i32 %15, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i16* [ %7, %18 ], [ %47, %20 ]
  %22 = phi i16* [ %6, %18 ], [ %46, %20 ]
  %23 = phi i32 [ %19, %18 ], [ %48, %20 ]
  %24 = load i16, i16* %22, align 2
  store i16 %24, i16* %21, align 2
  %25 = getelementptr inbounds i16, i16* %22, i64 %10
  %26 = load i16, i16* %25, align 2
  %27 = getelementptr inbounds i16, i16* %21, i64 1
  store i16 %26, i16* %27, align 2
  %28 = getelementptr inbounds i16, i16* %22, i64 %12
  %29 = getelementptr inbounds i16, i16* %21, i64 2
  %30 = load i16, i16* %28, align 2
  store i16 %30, i16* %29, align 2
  %31 = getelementptr inbounds i16, i16* %28, i64 %10
  %32 = load i16, i16* %31, align 2
  %33 = getelementptr inbounds i16, i16* %21, i64 3
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i16, i16* %28, i64 %12
  %35 = getelementptr inbounds i16, i16* %21, i64 4
  %36 = load i16, i16* %34, align 2
  store i16 %36, i16* %35, align 2
  %37 = getelementptr inbounds i16, i16* %34, i64 %10
  %38 = load i16, i16* %37, align 2
  %39 = getelementptr inbounds i16, i16* %21, i64 5
  store i16 %38, i16* %39, align 2
  %40 = getelementptr inbounds i16, i16* %34, i64 %12
  %41 = getelementptr inbounds i16, i16* %21, i64 6
  %42 = load i16, i16* %40, align 2
  store i16 %42, i16* %41, align 2
  %43 = getelementptr inbounds i16, i16* %40, i64 %10
  %44 = load i16, i16* %43, align 2
  %45 = getelementptr inbounds i16, i16* %21, i64 7
  store i16 %44, i16* %45, align 2
  %46 = getelementptr inbounds i16, i16* %40, i64 %12
  %47 = getelementptr inbounds i16, i16* %21, i64 8
  %48 = add i32 %23, -4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %20

50:                                               ; preds = %20, %9
  %51 = phi i16* [ undef, %9 ], [ %46, %20 ]
  %52 = phi i16* [ undef, %9 ], [ %47, %20 ]
  %53 = phi i16* [ %7, %9 ], [ %47, %20 ]
  %54 = phi i16* [ %6, %9 ], [ %46, %20 ]
  %55 = icmp eq i32 %16, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %50, %56
  %57 = phi i16* [ %65, %56 ], [ %53, %50 ]
  %58 = phi i16* [ %64, %56 ], [ %54, %50 ]
  %59 = phi i32 [ %66, %56 ], [ %16, %50 ]
  %60 = load i16, i16* %58, align 2
  store i16 %60, i16* %57, align 2
  %61 = getelementptr inbounds i16, i16* %58, i64 %10
  %62 = load i16, i16* %61, align 2
  %63 = getelementptr inbounds i16, i16* %57, i64 1
  store i16 %62, i16* %63, align 2
  %64 = getelementptr inbounds i16, i16* %58, i64 %12
  %65 = getelementptr inbounds i16, i16* %57, i64 2
  %66 = add i32 %59, -1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %56, !llvm.loop !40

68:                                               ; preds = %50, %56, %5
  %69 = phi i16* [ %6, %5 ], [ %51, %50 ], [ %64, %56 ]
  %70 = phi i16* [ %7, %5 ], [ %52, %50 ], [ %65, %56 ]
  %71 = and i32 %4, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = load i16, i16* %69, align 2
  store i16 %74, i16* %70, align 2
  br label %75

75:                                               ; preds = %68, %73
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowDownEvenBox_C(i8* nocapture readonly, i64, i32, i8* nocapture, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %57

7:                                                ; preds = %5
  %8 = add nsw i64 %1, 2
  %9 = add nsw i64 %1, 1
  %10 = add nsw i64 %1, 3
  %11 = shl nsw i32 %2, 1
  %12 = sext i32 %11 to i64
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi i32 [ 0, %7 ], [ %55, %13 ]
  %15 = phi i8* [ %0, %7 ], [ %53, %13 ]
  %16 = phi i8* [ %3, %7 ], [ %54, %13 ]
  %17 = load i8, i8* %15, align 1
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds i8, i8* %15, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %15, i64 %1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds i8, i8* %15, i64 %8
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nuw nsw i32 %18, 2
  %29 = add nuw nsw i32 %28, %21
  %30 = add nuw nsw i32 %29, %24
  %31 = add nuw nsw i32 %30, %27
  %32 = lshr i32 %31, 2
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %16, align 1
  %34 = getelementptr inbounds i8, i8* %15, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds i8, i8* %15, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds i8, i8* %15, i64 %9
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i8, i8* %15, i64 %10
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = add nuw nsw i32 %36, 2
  %47 = add nuw nsw i32 %46, %39
  %48 = add nuw nsw i32 %47, %42
  %49 = add nuw nsw i32 %48, %45
  %50 = lshr i32 %49, 2
  %51 = trunc i32 %50 to i8
  %52 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %51, i8* %52, align 1
  %53 = getelementptr inbounds i8, i8* %15, i64 %12
  %54 = getelementptr inbounds i8, i8* %16, i64 2
  %55 = add nuw nsw i32 %14, 1
  %56 = icmp eq i32 %55, %4
  br i1 %56, label %57, label %13

57:                                               ; preds = %13, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowUp2_Linear_C(i8* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 1
  br i1 %4, label %5, label %64

5:                                                ; preds = %3
  %6 = lshr i32 %2, 1
  %7 = zext i32 %6 to i64
  br label %8

8:                                                ; preds = %5, %8
  %9 = phi i64 [ 0, %5 ], [ %62, %8 ]
  %10 = shl nuw nsw i64 %9, 1
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = mul nuw nsw i32 %13, 3
  %15 = add nuw nsw i64 %10, 2
  %16 = getelementptr inbounds i8, i8* %0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = add nuw nsw i32 %18, 2
  %20 = add nuw nsw i32 %19, %14
  %21 = lshr i32 %20, 2
  %22 = trunc i32 %21 to i8
  %23 = shl nsw i64 %9, 2
  %24 = getelementptr inbounds i8, i8* %1, i64 %23
  store i8 %22, i8* %24, align 1
  %25 = or i64 %10, 1
  %26 = getelementptr inbounds i8, i8* %0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = mul nuw nsw i32 %28, 3
  %30 = add nuw nsw i64 %10, 3
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = add nuw nsw i32 %33, 2
  %35 = add nuw nsw i32 %34, %29
  %36 = lshr i32 %35, 2
  %37 = trunc i32 %36 to i8
  %38 = or i64 %23, 1
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  store i8 %37, i8* %39, align 1
  %40 = load i8, i8* %11, align 1
  %41 = zext i8 %40 to i32
  %42 = load i8, i8* %16, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, 3
  %45 = add nuw nsw i32 %41, 2
  %46 = add nuw nsw i32 %45, %44
  %47 = lshr i32 %46, 2
  %48 = trunc i32 %47 to i8
  %49 = or i64 %23, 2
  %50 = getelementptr inbounds i8, i8* %1, i64 %49
  store i8 %48, i8* %50, align 1
  %51 = load i8, i8* %26, align 1
  %52 = zext i8 %51 to i32
  %53 = load i8, i8* %31, align 1
  %54 = zext i8 %53 to i32
  %55 = mul nuw nsw i32 %54, 3
  %56 = add nuw nsw i32 %52, 2
  %57 = add nuw nsw i32 %56, %55
  %58 = lshr i32 %57, 2
  %59 = trunc i32 %58 to i8
  %60 = or i64 %23, 3
  %61 = getelementptr inbounds i8, i8* %1, i64 %60
  store i8 %59, i8* %61, align 1
  %62 = add nuw nsw i64 %9, 1
  %63 = icmp ult i64 %62, %7
  br i1 %63, label %8, label %64

64:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowUp2_Bilinear_C(i8* nocapture readonly, i64, i8* nocapture, i64, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds i8, i8* %0, i64 %1
  %7 = getelementptr inbounds i8, i8* %2, i64 %3
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %9, label %168

9:                                                ; preds = %5
  %10 = lshr i32 %4, 1
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %9, %12
  %13 = phi i64 [ 0, %9 ], [ %166, %12 ]
  %14 = shl nuw nsw i64 %13, 1
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = mul nuw nsw i32 %17, 9
  %19 = add nuw nsw i64 %14, 2
  %20 = getelementptr inbounds i8, i8* %0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i8, i8* %6, i64 %14
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %6, i64 %19
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = add nuw nsw i32 %25, %22
  %30 = mul nuw nsw i32 %29, 3
  %31 = add nuw nsw i32 %18, 8
  %32 = add nuw nsw i32 %31, %28
  %33 = add nuw nsw i32 %32, %30
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = shl nsw i64 %13, 2
  %37 = getelementptr inbounds i8, i8* %2, i64 %36
  store i8 %35, i8* %37, align 1
  %38 = or i64 %14, 1
  %39 = getelementptr inbounds i8, i8* %0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = mul nuw nsw i32 %41, 9
  %43 = add nuw nsw i64 %14, 3
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i8, i8* %6, i64 %38
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %6, i64 %43
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = add nuw nsw i32 %49, %46
  %54 = mul nuw nsw i32 %53, 3
  %55 = add nuw nsw i32 %42, 8
  %56 = add nuw nsw i32 %55, %52
  %57 = add nuw nsw i32 %56, %54
  %58 = lshr i32 %57, 4
  %59 = trunc i32 %58 to i8
  %60 = or i64 %36, 1
  %61 = getelementptr inbounds i8, i8* %2, i64 %60
  store i8 %59, i8* %61, align 1
  %62 = load i8, i8* %15, align 1
  %63 = zext i8 %62 to i32
  %64 = load i8, i8* %20, align 1
  %65 = zext i8 %64 to i32
  %66 = mul nuw nsw i32 %65, 9
  %67 = load i8, i8* %23, align 1
  %68 = zext i8 %67 to i32
  %69 = load i8, i8* %26, align 1
  %70 = zext i8 %69 to i32
  %71 = add nuw nsw i32 %70, %63
  %72 = mul nuw nsw i32 %71, 3
  %73 = add nuw nsw i32 %66, 8
  %74 = add nuw nsw i32 %73, %68
  %75 = add nuw nsw i32 %74, %72
  %76 = lshr i32 %75, 4
  %77 = trunc i32 %76 to i8
  %78 = or i64 %36, 2
  %79 = getelementptr inbounds i8, i8* %2, i64 %78
  store i8 %77, i8* %79, align 1
  %80 = load i8, i8* %39, align 1
  %81 = zext i8 %80 to i32
  %82 = load i8, i8* %44, align 1
  %83 = zext i8 %82 to i32
  %84 = mul nuw nsw i32 %83, 9
  %85 = load i8, i8* %47, align 1
  %86 = zext i8 %85 to i32
  %87 = load i8, i8* %50, align 1
  %88 = zext i8 %87 to i32
  %89 = add nuw nsw i32 %88, %81
  %90 = mul nuw nsw i32 %89, 3
  %91 = add nuw nsw i32 %84, 8
  %92 = add nuw nsw i32 %91, %86
  %93 = add nuw nsw i32 %92, %90
  %94 = lshr i32 %93, 4
  %95 = trunc i32 %94 to i8
  %96 = or i64 %36, 3
  %97 = getelementptr inbounds i8, i8* %2, i64 %96
  store i8 %95, i8* %97, align 1
  %98 = load i8, i8* %15, align 1
  %99 = zext i8 %98 to i32
  %100 = load i8, i8* %20, align 1
  %101 = zext i8 %100 to i32
  %102 = load i8, i8* %23, align 1
  %103 = zext i8 %102 to i32
  %104 = mul nuw nsw i32 %103, 9
  %105 = load i8, i8* %26, align 1
  %106 = zext i8 %105 to i32
  %107 = add nuw nsw i32 %106, %99
  %108 = mul nuw nsw i32 %107, 3
  %109 = add nuw nsw i32 %101, 8
  %110 = add nuw nsw i32 %109, %104
  %111 = add nuw nsw i32 %110, %108
  %112 = lshr i32 %111, 4
  %113 = trunc i32 %112 to i8
  %114 = getelementptr inbounds i8, i8* %7, i64 %36
  store i8 %113, i8* %114, align 1
  %115 = load i8, i8* %39, align 1
  %116 = zext i8 %115 to i32
  %117 = load i8, i8* %44, align 1
  %118 = zext i8 %117 to i32
  %119 = load i8, i8* %47, align 1
  %120 = zext i8 %119 to i32
  %121 = mul nuw nsw i32 %120, 9
  %122 = load i8, i8* %50, align 1
  %123 = zext i8 %122 to i32
  %124 = add nuw nsw i32 %123, %116
  %125 = mul nuw nsw i32 %124, 3
  %126 = add nuw nsw i32 %118, 8
  %127 = add nuw nsw i32 %126, %121
  %128 = add nuw nsw i32 %127, %125
  %129 = lshr i32 %128, 4
  %130 = trunc i32 %129 to i8
  %131 = getelementptr inbounds i8, i8* %7, i64 %60
  store i8 %130, i8* %131, align 1
  %132 = load i8, i8* %15, align 1
  %133 = zext i8 %132 to i32
  %134 = load i8, i8* %20, align 1
  %135 = zext i8 %134 to i32
  %136 = load i8, i8* %23, align 1
  %137 = zext i8 %136 to i32
  %138 = load i8, i8* %26, align 1
  %139 = zext i8 %138 to i32
  %140 = mul nuw nsw i32 %139, 9
  %141 = add nuw nsw i32 %137, %135
  %142 = mul nuw nsw i32 %141, 3
  %143 = add nuw nsw i32 %133, 8
  %144 = add nuw nsw i32 %143, %140
  %145 = add nuw nsw i32 %144, %142
  %146 = lshr i32 %145, 4
  %147 = trunc i32 %146 to i8
  %148 = getelementptr inbounds i8, i8* %7, i64 %78
  store i8 %147, i8* %148, align 1
  %149 = load i8, i8* %39, align 1
  %150 = zext i8 %149 to i32
  %151 = load i8, i8* %44, align 1
  %152 = zext i8 %151 to i32
  %153 = load i8, i8* %47, align 1
  %154 = zext i8 %153 to i32
  %155 = load i8, i8* %50, align 1
  %156 = zext i8 %155 to i32
  %157 = mul nuw nsw i32 %156, 9
  %158 = add nuw nsw i32 %154, %152
  %159 = mul nuw nsw i32 %158, 3
  %160 = add nuw nsw i32 %150, 8
  %161 = add nuw nsw i32 %160, %157
  %162 = add nuw nsw i32 %161, %159
  %163 = lshr i32 %162, 4
  %164 = trunc i32 %163 to i8
  %165 = getelementptr inbounds i8, i8* %7, i64 %96
  store i8 %164, i8* %165, align 1
  %166 = add nuw nsw i64 %13, 1
  %167 = icmp ult i64 %166, %11
  br i1 %167, label %12, label %168

168:                                              ; preds = %12, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowUp2_Linear_16_C(i16* nocapture readonly, i16* nocapture, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 1
  br i1 %4, label %5, label %64

5:                                                ; preds = %3
  %6 = lshr i32 %2, 1
  %7 = zext i32 %6 to i64
  br label %8

8:                                                ; preds = %5, %8
  %9 = phi i64 [ 0, %5 ], [ %62, %8 ]
  %10 = shl nuw nsw i64 %9, 1
  %11 = getelementptr inbounds i16, i16* %0, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = mul nuw nsw i32 %13, 3
  %15 = add nuw nsw i64 %10, 2
  %16 = getelementptr inbounds i16, i16* %0, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = add nuw nsw i32 %18, 2
  %20 = add nuw nsw i32 %19, %14
  %21 = lshr i32 %20, 2
  %22 = trunc i32 %21 to i16
  %23 = shl nsw i64 %9, 2
  %24 = getelementptr inbounds i16, i16* %1, i64 %23
  store i16 %22, i16* %24, align 2
  %25 = or i64 %10, 1
  %26 = getelementptr inbounds i16, i16* %0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = mul nuw nsw i32 %28, 3
  %30 = add nuw nsw i64 %10, 3
  %31 = getelementptr inbounds i16, i16* %0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = add nuw nsw i32 %33, 2
  %35 = add nuw nsw i32 %34, %29
  %36 = lshr i32 %35, 2
  %37 = trunc i32 %36 to i16
  %38 = or i64 %23, 1
  %39 = getelementptr inbounds i16, i16* %1, i64 %38
  store i16 %37, i16* %39, align 2
  %40 = load i16, i16* %11, align 2
  %41 = zext i16 %40 to i32
  %42 = load i16, i16* %16, align 2
  %43 = zext i16 %42 to i32
  %44 = mul nuw nsw i32 %43, 3
  %45 = add nuw nsw i32 %41, 2
  %46 = add nuw nsw i32 %45, %44
  %47 = lshr i32 %46, 2
  %48 = trunc i32 %47 to i16
  %49 = or i64 %23, 2
  %50 = getelementptr inbounds i16, i16* %1, i64 %49
  store i16 %48, i16* %50, align 2
  %51 = load i16, i16* %26, align 2
  %52 = zext i16 %51 to i32
  %53 = load i16, i16* %31, align 2
  %54 = zext i16 %53 to i32
  %55 = mul nuw nsw i32 %54, 3
  %56 = add nuw nsw i32 %52, 2
  %57 = add nuw nsw i32 %56, %55
  %58 = lshr i32 %57, 2
  %59 = trunc i32 %58 to i16
  %60 = or i64 %23, 3
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  store i16 %59, i16* %61, align 2
  %62 = add nuw nsw i64 %9, 1
  %63 = icmp ult i64 %62, %7
  br i1 %63, label %8, label %64

64:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVRowUp2_Bilinear_16_C(i16* nocapture readonly, i64, i16* nocapture, i64, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds i16, i16* %0, i64 %1
  %7 = getelementptr inbounds i16, i16* %2, i64 %3
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %9, label %168

9:                                                ; preds = %5
  %10 = lshr i32 %4, 1
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %9, %12
  %13 = phi i64 [ 0, %9 ], [ %166, %12 ]
  %14 = shl nuw nsw i64 %13, 1
  %15 = getelementptr inbounds i16, i16* %0, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = mul nuw nsw i32 %17, 9
  %19 = add nuw nsw i64 %14, 2
  %20 = getelementptr inbounds i16, i16* %0, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds i16, i16* %6, i64 %14
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = getelementptr inbounds i16, i16* %6, i64 %19
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = add nuw nsw i32 %25, %22
  %30 = mul nuw nsw i32 %29, 3
  %31 = add nuw nsw i32 %18, 8
  %32 = add nuw nsw i32 %31, %28
  %33 = add nuw nsw i32 %32, %30
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i16
  %36 = shl nsw i64 %13, 2
  %37 = getelementptr inbounds i16, i16* %2, i64 %36
  store i16 %35, i16* %37, align 2
  %38 = or i64 %14, 1
  %39 = getelementptr inbounds i16, i16* %0, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = mul nuw nsw i32 %41, 9
  %43 = add nuw nsw i64 %14, 3
  %44 = getelementptr inbounds i16, i16* %0, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = getelementptr inbounds i16, i16* %6, i64 %38
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = getelementptr inbounds i16, i16* %6, i64 %43
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = add nuw nsw i32 %49, %46
  %54 = mul nuw nsw i32 %53, 3
  %55 = add nuw nsw i32 %42, 8
  %56 = add nuw nsw i32 %55, %52
  %57 = add nuw nsw i32 %56, %54
  %58 = lshr i32 %57, 4
  %59 = trunc i32 %58 to i16
  %60 = or i64 %36, 1
  %61 = getelementptr inbounds i16, i16* %2, i64 %60
  store i16 %59, i16* %61, align 2
  %62 = load i16, i16* %15, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16, i16* %20, align 2
  %65 = zext i16 %64 to i32
  %66 = mul nuw nsw i32 %65, 9
  %67 = load i16, i16* %23, align 2
  %68 = zext i16 %67 to i32
  %69 = load i16, i16* %26, align 2
  %70 = zext i16 %69 to i32
  %71 = add nuw nsw i32 %70, %63
  %72 = mul nuw nsw i32 %71, 3
  %73 = add nuw nsw i32 %66, 8
  %74 = add nuw nsw i32 %73, %68
  %75 = add nuw nsw i32 %74, %72
  %76 = lshr i32 %75, 4
  %77 = trunc i32 %76 to i16
  %78 = or i64 %36, 2
  %79 = getelementptr inbounds i16, i16* %2, i64 %78
  store i16 %77, i16* %79, align 2
  %80 = load i16, i16* %39, align 2
  %81 = zext i16 %80 to i32
  %82 = load i16, i16* %44, align 2
  %83 = zext i16 %82 to i32
  %84 = mul nuw nsw i32 %83, 9
  %85 = load i16, i16* %47, align 2
  %86 = zext i16 %85 to i32
  %87 = load i16, i16* %50, align 2
  %88 = zext i16 %87 to i32
  %89 = add nuw nsw i32 %88, %81
  %90 = mul nuw nsw i32 %89, 3
  %91 = add nuw nsw i32 %84, 8
  %92 = add nuw nsw i32 %91, %86
  %93 = add nuw nsw i32 %92, %90
  %94 = lshr i32 %93, 4
  %95 = trunc i32 %94 to i16
  %96 = or i64 %36, 3
  %97 = getelementptr inbounds i16, i16* %2, i64 %96
  store i16 %95, i16* %97, align 2
  %98 = load i16, i16* %15, align 2
  %99 = zext i16 %98 to i32
  %100 = load i16, i16* %20, align 2
  %101 = zext i16 %100 to i32
  %102 = load i16, i16* %23, align 2
  %103 = zext i16 %102 to i32
  %104 = mul nuw nsw i32 %103, 9
  %105 = load i16, i16* %26, align 2
  %106 = zext i16 %105 to i32
  %107 = add nuw nsw i32 %106, %99
  %108 = mul nuw nsw i32 %107, 3
  %109 = add nuw nsw i32 %101, 8
  %110 = add nuw nsw i32 %109, %104
  %111 = add nuw nsw i32 %110, %108
  %112 = lshr i32 %111, 4
  %113 = trunc i32 %112 to i16
  %114 = getelementptr inbounds i16, i16* %7, i64 %36
  store i16 %113, i16* %114, align 2
  %115 = load i16, i16* %39, align 2
  %116 = zext i16 %115 to i32
  %117 = load i16, i16* %44, align 2
  %118 = zext i16 %117 to i32
  %119 = load i16, i16* %47, align 2
  %120 = zext i16 %119 to i32
  %121 = mul nuw nsw i32 %120, 9
  %122 = load i16, i16* %50, align 2
  %123 = zext i16 %122 to i32
  %124 = add nuw nsw i32 %123, %116
  %125 = mul nuw nsw i32 %124, 3
  %126 = add nuw nsw i32 %118, 8
  %127 = add nuw nsw i32 %126, %121
  %128 = add nuw nsw i32 %127, %125
  %129 = lshr i32 %128, 4
  %130 = trunc i32 %129 to i16
  %131 = getelementptr inbounds i16, i16* %7, i64 %60
  store i16 %130, i16* %131, align 2
  %132 = load i16, i16* %15, align 2
  %133 = zext i16 %132 to i32
  %134 = load i16, i16* %20, align 2
  %135 = zext i16 %134 to i32
  %136 = load i16, i16* %23, align 2
  %137 = zext i16 %136 to i32
  %138 = load i16, i16* %26, align 2
  %139 = zext i16 %138 to i32
  %140 = mul nuw nsw i32 %139, 9
  %141 = add nuw nsw i32 %137, %135
  %142 = mul nuw nsw i32 %141, 3
  %143 = add nuw nsw i32 %133, 8
  %144 = add nuw nsw i32 %143, %140
  %145 = add nuw nsw i32 %144, %142
  %146 = lshr i32 %145, 4
  %147 = trunc i32 %146 to i16
  %148 = getelementptr inbounds i16, i16* %7, i64 %78
  store i16 %147, i16* %148, align 2
  %149 = load i16, i16* %39, align 2
  %150 = zext i16 %149 to i32
  %151 = load i16, i16* %44, align 2
  %152 = zext i16 %151 to i32
  %153 = load i16, i16* %47, align 2
  %154 = zext i16 %153 to i32
  %155 = load i16, i16* %50, align 2
  %156 = zext i16 %155 to i32
  %157 = mul nuw nsw i32 %156, 9
  %158 = add nuw nsw i32 %154, %152
  %159 = mul nuw nsw i32 %158, 3
  %160 = add nuw nsw i32 %150, 8
  %161 = add nuw nsw i32 %160, %157
  %162 = add nuw nsw i32 %161, %159
  %163 = lshr i32 %162, 4
  %164 = trunc i32 %163 to i16
  %165 = getelementptr inbounds i16, i16* %7, i64 %96
  store i16 %164, i16* %165, align 2
  %166 = add nuw nsw i64 %13, 1
  %167 = icmp ult i64 %166, %11
  br i1 %167, label %12, label %168

168:                                              ; preds = %12, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVCols_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = bitcast i8* %1 to i16*
  %7 = bitcast i8* %0 to i16*
  %8 = icmp sgt i32 %2, 1
  br i1 %8, label %9, label %66

9:                                                ; preds = %5
  %10 = add i32 %2, -2
  %11 = lshr i32 %10, 1
  %12 = add nuw i32 %11, 1
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %47, label %15

15:                                               ; preds = %9
  %16 = sub nuw i32 %12, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i16* [ %7, %15 ], [ %44, %17 ]
  %19 = phi i32 [ %3, %15 ], [ %43, %17 ]
  %20 = phi i32 [ %16, %15 ], [ %45, %17 ]
  %21 = ashr i32 %19, 16
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %6, i64 %22
  %24 = load i16, i16* %23, align 2
  store i16 %24, i16* %18, align 2
  %25 = add nsw i32 %19, %4
  %26 = ashr i32 %25, 16
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i16, i16* %6, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds i16, i16* %18, i64 1
  store i16 %29, i16* %30, align 2
  %31 = add nsw i32 %25, %4
  %32 = getelementptr inbounds i16, i16* %18, i64 2
  %33 = ashr i32 %31, 16
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i16, i16* %6, i64 %34
  %36 = load i16, i16* %35, align 2
  store i16 %36, i16* %32, align 2
  %37 = add nsw i32 %31, %4
  %38 = ashr i32 %37, 16
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %6, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = getelementptr inbounds i16, i16* %18, i64 3
  store i16 %41, i16* %42, align 2
  %43 = add nsw i32 %37, %4
  %44 = getelementptr inbounds i16, i16* %18, i64 4
  %45 = add i32 %20, -2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %17

47:                                               ; preds = %17, %9
  %48 = phi i32 [ undef, %9 ], [ %43, %17 ]
  %49 = phi i16* [ undef, %9 ], [ %44, %17 ]
  %50 = phi i16* [ %7, %9 ], [ %44, %17 ]
  %51 = phi i32 [ %3, %9 ], [ %43, %17 ]
  %52 = icmp eq i32 %13, 0
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = ashr i32 %51, 16
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %6, i64 %55
  %57 = load i16, i16* %56, align 2
  store i16 %57, i16* %50, align 2
  %58 = add nsw i32 %51, %4
  %59 = ashr i32 %58, 16
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %6, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = getelementptr inbounds i16, i16* %50, i64 1
  store i16 %62, i16* %63, align 2
  %64 = getelementptr inbounds i16, i16* %50, i64 2
  %65 = add nsw i32 %58, %4
  br label %66

66:                                               ; preds = %53, %47, %5
  %67 = phi i32 [ %3, %5 ], [ %48, %47 ], [ %65, %53 ]
  %68 = phi i16* [ %7, %5 ], [ %49, %47 ], [ %64, %53 ]
  %69 = and i32 %2, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %66
  %72 = ashr i32 %67, 16
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i16, i16* %6, i64 %73
  %75 = load i16, i16* %74, align 2
  store i16 %75, i16* %68, align 2
  br label %76

76:                                               ; preds = %66, %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVCols64_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %1 to i16*
  %8 = bitcast i8* %0 to i16*
  %9 = icmp sgt i32 %2, 1
  br i1 %9, label %10, label %62

10:                                               ; preds = %5
  %11 = sext i32 %4 to i64
  %12 = add i32 %2, -2
  %13 = lshr i32 %12, 1
  %14 = add nuw i32 %13, 1
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %10
  %18 = sub nuw i32 %14, %15
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i16* [ %8, %17 ], [ %42, %19 ]
  %21 = phi i64 [ %6, %17 ], [ %41, %19 ]
  %22 = phi i32 [ %18, %17 ], [ %43, %19 ]
  %23 = ashr i64 %21, 16
  %24 = getelementptr inbounds i16, i16* %7, i64 %23
  %25 = load i16, i16* %24, align 2
  store i16 %25, i16* %20, align 2
  %26 = add nsw i64 %21, %11
  %27 = ashr i64 %26, 16
  %28 = getelementptr inbounds i16, i16* %7, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds i16, i16* %20, i64 1
  store i16 %29, i16* %30, align 2
  %31 = add nsw i64 %26, %11
  %32 = getelementptr inbounds i16, i16* %20, i64 2
  %33 = ashr i64 %31, 16
  %34 = getelementptr inbounds i16, i16* %7, i64 %33
  %35 = load i16, i16* %34, align 2
  store i16 %35, i16* %32, align 2
  %36 = add nsw i64 %31, %11
  %37 = ashr i64 %36, 16
  %38 = getelementptr inbounds i16, i16* %7, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = getelementptr inbounds i16, i16* %20, i64 3
  store i16 %39, i16* %40, align 2
  %41 = add nsw i64 %36, %11
  %42 = getelementptr inbounds i16, i16* %20, i64 4
  %43 = add i32 %22, -2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %19

45:                                               ; preds = %19, %10
  %46 = phi i64 [ undef, %10 ], [ %41, %19 ]
  %47 = phi i16* [ undef, %10 ], [ %42, %19 ]
  %48 = phi i16* [ %8, %10 ], [ %42, %19 ]
  %49 = phi i64 [ %6, %10 ], [ %41, %19 ]
  %50 = icmp eq i32 %15, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %45
  %52 = ashr i64 %49, 16
  %53 = getelementptr inbounds i16, i16* %7, i64 %52
  %54 = load i16, i16* %53, align 2
  store i16 %54, i16* %48, align 2
  %55 = add nsw i64 %49, %11
  %56 = ashr i64 %55, 16
  %57 = getelementptr inbounds i16, i16* %7, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = getelementptr inbounds i16, i16* %48, i64 1
  store i16 %58, i16* %59, align 2
  %60 = getelementptr inbounds i16, i16* %48, i64 2
  %61 = add nsw i64 %55, %11
  br label %62

62:                                               ; preds = %51, %45, %5
  %63 = phi i64 [ %6, %5 ], [ %46, %45 ], [ %61, %51 ]
  %64 = phi i16* [ %8, %5 ], [ %47, %45 ], [ %60, %51 ]
  %65 = and i32 %2, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = ashr i64 %63, 16
  %69 = getelementptr inbounds i16, i16* %7, i64 %68
  %70 = load i16, i16* %69, align 2
  store i16 %70, i16* %64, align 2
  br label %71

71:                                               ; preds = %62, %67
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVColsUp2_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = bitcast i8* %1 to i16*
  %7 = bitcast i8* %0 to i16*
  %8 = add nsw i32 %2, -1
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %124

10:                                               ; preds = %5
  %11 = add i32 %2, -2
  %12 = lshr i32 %11, 1
  %13 = add nuw i32 %12, 1
  %14 = zext i32 %13 to i64
  %15 = icmp ult i32 %13, 8
  br i1 %15, label %110, label %16

16:                                               ; preds = %10
  %17 = add i32 %2, -2
  %18 = lshr i32 %17, 1
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 2
  %21 = add nuw nsw i64 %20, 4
  %22 = getelementptr i8, i8* %0, i64 %21
  %23 = and i32 %17, -2
  %24 = zext i32 %23 to i64
  %25 = add nuw nsw i64 %24, 2
  %26 = getelementptr i8, i8* %1, i64 %25
  %27 = icmp ugt i8* %26, %0
  %28 = icmp ugt i8* %22, %1
  %29 = and i1 %27, %28
  br i1 %29, label %110, label %30

30:                                               ; preds = %16
  %31 = and i64 %14, 4294967288
  %32 = trunc i64 %31 to i32
  %33 = shl i32 %32, 1
  %34 = shl nuw nsw i64 %31, 1
  %35 = getelementptr i16, i16* %7, i64 %34
  %36 = getelementptr i16, i16* %6, i64 %31
  %37 = add nsw i64 %31, -8
  %38 = lshr exact i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 3
  %41 = icmp ult i64 %37, 24
  br i1 %41, label %89, label %42

42:                                               ; preds = %30
  %43 = sub nsw i64 %39, %40
  %44 = bitcast i8* %0 to i16*
  %45 = bitcast i8* %0 to i16*
  %46 = bitcast i8* %0 to i16*
  %47 = bitcast i8* %0 to i16*
  br label %48

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %86, %48 ]
  %50 = phi i64 [ %43, %42 ], [ %87, %48 ]
  %51 = shl i64 %49, 1
  %52 = getelementptr i16, i16* %6, i64 %49
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !41
  %55 = getelementptr inbounds i16, i16* %44, i64 %51
  %56 = bitcast i16* %55 to <16 x i16>*
  %57 = shufflevector <8 x i16> %54, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %58 = shufflevector <16 x i16> %57, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %58, <16 x i16>* %56, align 2
  %59 = or i64 %49, 8
  %60 = shl i64 %59, 1
  %61 = getelementptr i16, i16* %6, i64 %59
  %62 = bitcast i16* %61 to <8 x i16>*
  %63 = load <8 x i16>, <8 x i16>* %62, align 2, !alias.scope !41
  %64 = getelementptr inbounds i16, i16* %45, i64 %60
  %65 = bitcast i16* %64 to <16 x i16>*
  %66 = shufflevector <8 x i16> %63, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %67 = shufflevector <16 x i16> %66, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %67, <16 x i16>* %65, align 2
  %68 = or i64 %49, 16
  %69 = shl i64 %68, 1
  %70 = getelementptr i16, i16* %6, i64 %68
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !41
  %73 = getelementptr inbounds i16, i16* %46, i64 %69
  %74 = bitcast i16* %73 to <16 x i16>*
  %75 = shufflevector <8 x i16> %72, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %76 = shufflevector <16 x i16> %75, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %76, <16 x i16>* %74, align 2
  %77 = or i64 %49, 24
  %78 = shl i64 %77, 1
  %79 = getelementptr i16, i16* %6, i64 %77
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !41
  %82 = getelementptr inbounds i16, i16* %47, i64 %78
  %83 = bitcast i16* %82 to <16 x i16>*
  %84 = shufflevector <8 x i16> %81, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %85 = shufflevector <16 x i16> %84, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %85, <16 x i16>* %83, align 2
  %86 = add i64 %49, 32
  %87 = add i64 %50, -4
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %48, !llvm.loop !44

89:                                               ; preds = %48, %30
  %90 = phi i64 [ 0, %30 ], [ %86, %48 ]
  %91 = icmp eq i64 %40, 0
  br i1 %91, label %108, label %92

92:                                               ; preds = %89
  %93 = bitcast i8* %0 to i16*
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ %90, %92 ], [ %105, %94 ]
  %96 = phi i64 [ %40, %92 ], [ %106, %94 ]
  %97 = shl i64 %95, 1
  %98 = getelementptr i16, i16* %6, i64 %95
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !41
  %101 = getelementptr inbounds i16, i16* %93, i64 %97
  %102 = bitcast i16* %101 to <16 x i16>*
  %103 = shufflevector <8 x i16> %100, <8 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %104 = shufflevector <16 x i16> %103, <16 x i16> undef, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %104, <16 x i16>* %102, align 2
  %105 = add i64 %95, 8
  %106 = add i64 %96, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %94, !llvm.loop !45

108:                                              ; preds = %94, %89
  %109 = icmp eq i64 %31, %14
  br i1 %109, label %124, label %110

110:                                              ; preds = %108, %16, %10
  %111 = phi i32 [ 0, %16 ], [ 0, %10 ], [ %33, %108 ]
  %112 = phi i16* [ %7, %16 ], [ %7, %10 ], [ %35, %108 ]
  %113 = phi i16* [ %6, %16 ], [ %6, %10 ], [ %36, %108 ]
  br label %114

114:                                              ; preds = %110, %114
  %115 = phi i32 [ %122, %114 ], [ %111, %110 ]
  %116 = phi i16* [ %121, %114 ], [ %112, %110 ]
  %117 = phi i16* [ %120, %114 ], [ %113, %110 ]
  %118 = load i16, i16* %117, align 2
  store i16 %118, i16* %116, align 2
  %119 = getelementptr inbounds i16, i16* %116, i64 1
  store i16 %118, i16* %119, align 2
  %120 = getelementptr inbounds i16, i16* %117, i64 1
  %121 = getelementptr inbounds i16, i16* %116, i64 2
  %122 = add nuw nsw i32 %115, 2
  %123 = icmp slt i32 %122, %8
  br i1 %123, label %114, label %124, !llvm.loop !46

124:                                              ; preds = %114, %108, %5
  %125 = phi i16* [ %6, %5 ], [ %36, %108 ], [ %120, %114 ]
  %126 = phi i16* [ %7, %5 ], [ %35, %108 ], [ %121, %114 ]
  %127 = and i32 %2, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %124
  %130 = load i16, i16* %125, align 2
  store i16 %130, i16* %126, align 2
  br label %131

131:                                              ; preds = %124, %129
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVFilterCols_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = bitcast i8* %1 to i16*
  %7 = bitcast i8* %0 to i16*
  %8 = add nsw i32 %2, -1
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %76

10:                                               ; preds = %5, %10
  %11 = phi i32 [ %72, %10 ], [ %3, %5 ]
  %12 = phi i16* [ %73, %10 ], [ %7, %5 ]
  %13 = phi i32 [ %74, %10 ], [ 0, %5 ]
  %14 = ashr i32 %11, 16
  %15 = lshr i32 %11, 9
  %16 = and i32 %15, 127
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds i16, i16* %6, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = add nsw i32 %14, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %6, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %19 to i32
  %25 = lshr i32 %24, 8
  %26 = xor i32 %16, 127
  %27 = mul nuw nsw i32 %25, %26
  %28 = zext i16 %23 to i32
  %29 = lshr i32 %28, 8
  %30 = mul nuw nsw i32 %29, %16
  %31 = add nuw nsw i32 %30, %27
  %32 = shl nuw nsw i32 %31, 1
  %33 = and i32 %32, 65280
  %34 = and i32 %24, 255
  %35 = mul nuw nsw i32 %34, %26
  %36 = and i32 %28, 255
  %37 = mul nuw nsw i32 %36, %16
  %38 = add nuw nsw i32 %37, %35
  %39 = lshr i32 %38, 7
  %40 = or i32 %33, %39
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %12, align 2
  %42 = add nsw i32 %11, %4
  %43 = ashr i32 %42, 16
  %44 = lshr i32 %42, 9
  %45 = and i32 %44, 127
  %46 = sext i32 %43 to i64
  %47 = getelementptr inbounds i16, i16* %6, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = add nsw i32 %43, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i16, i16* %6, i64 %50
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %48 to i32
  %54 = lshr i32 %53, 8
  %55 = xor i32 %45, 127
  %56 = mul nuw nsw i32 %54, %55
  %57 = zext i16 %52 to i32
  %58 = lshr i32 %57, 8
  %59 = mul nuw nsw i32 %58, %45
  %60 = add nuw nsw i32 %59, %56
  %61 = shl nuw nsw i32 %60, 1
  %62 = and i32 %61, 65280
  %63 = and i32 %53, 255
  %64 = mul nuw nsw i32 %63, %55
  %65 = and i32 %57, 255
  %66 = mul nuw nsw i32 %65, %45
  %67 = add nuw nsw i32 %66, %64
  %68 = lshr i32 %67, 7
  %69 = or i32 %62, %68
  %70 = trunc i32 %69 to i16
  %71 = getelementptr inbounds i16, i16* %12, i64 1
  store i16 %70, i16* %71, align 2
  %72 = add nsw i32 %42, %4
  %73 = getelementptr inbounds i16, i16* %12, i64 2
  %74 = add nuw nsw i32 %13, 2
  %75 = icmp slt i32 %74, %8
  br i1 %75, label %10, label %76

76:                                               ; preds = %10, %5
  %77 = phi i16* [ %7, %5 ], [ %73, %10 ]
  %78 = phi i32 [ %3, %5 ], [ %72, %10 ]
  %79 = and i32 %2, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %110, label %81

81:                                               ; preds = %76
  %82 = ashr i32 %78, 16
  %83 = lshr i32 %78, 9
  %84 = and i32 %83, 127
  %85 = sext i32 %82 to i64
  %86 = getelementptr inbounds i16, i16* %6, i64 %85
  %87 = load i16, i16* %86, align 2
  %88 = add nsw i32 %82, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i16, i16* %6, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %87 to i32
  %93 = lshr i32 %92, 8
  %94 = xor i32 %84, 127
  %95 = mul nuw nsw i32 %93, %94
  %96 = zext i16 %91 to i32
  %97 = lshr i32 %96, 8
  %98 = mul nuw nsw i32 %97, %84
  %99 = add nuw nsw i32 %98, %95
  %100 = shl nuw nsw i32 %99, 1
  %101 = and i32 %100, 65280
  %102 = and i32 %92, 255
  %103 = mul nuw nsw i32 %102, %94
  %104 = and i32 %96, 255
  %105 = mul nuw nsw i32 %104, %84
  %106 = add nuw nsw i32 %105, %103
  %107 = lshr i32 %106, 7
  %108 = or i32 %101, %107
  %109 = trunc i32 %108 to i16
  store i16 %109, i16* %77, align 2
  br label %110

110:                                              ; preds = %76, %81
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleUVFilterCols64_C(i8* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %1 to i16*
  %8 = bitcast i8* %0 to i16*
  %9 = add nsw i32 %2, -1
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %77

11:                                               ; preds = %5
  %12 = sext i32 %4 to i64
  br label %13

13:                                               ; preds = %11, %13
  %14 = phi i64 [ %6, %11 ], [ %73, %13 ]
  %15 = phi i16* [ %8, %11 ], [ %74, %13 ]
  %16 = phi i32 [ 0, %11 ], [ %75, %13 ]
  %17 = ashr i64 %14, 16
  %18 = lshr i64 %14, 9
  %19 = trunc i64 %18 to i32
  %20 = and i32 %19, 127
  %21 = getelementptr inbounds i16, i16* %7, i64 %17
  %22 = load i16, i16* %21, align 2
  %23 = add nsw i64 %17, 1
  %24 = getelementptr inbounds i16, i16* %7, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %22 to i32
  %27 = lshr i32 %26, 8
  %28 = xor i32 %20, 127
  %29 = mul nuw nsw i32 %27, %28
  %30 = zext i16 %25 to i32
  %31 = lshr i32 %30, 8
  %32 = mul nuw nsw i32 %31, %20
  %33 = add nuw nsw i32 %32, %29
  %34 = shl nuw nsw i32 %33, 1
  %35 = and i32 %34, 65280
  %36 = and i32 %26, 255
  %37 = mul nuw nsw i32 %36, %28
  %38 = and i32 %30, 255
  %39 = mul nuw nsw i32 %38, %20
  %40 = add nuw nsw i32 %39, %37
  %41 = lshr i32 %40, 7
  %42 = or i32 %35, %41
  %43 = trunc i32 %42 to i16
  store i16 %43, i16* %15, align 2
  %44 = add nsw i64 %14, %12
  %45 = ashr i64 %44, 16
  %46 = lshr i64 %44, 9
  %47 = trunc i64 %46 to i32
  %48 = and i32 %47, 127
  %49 = getelementptr inbounds i16, i16* %7, i64 %45
  %50 = load i16, i16* %49, align 2
  %51 = add nsw i64 %45, 1
  %52 = getelementptr inbounds i16, i16* %7, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %50 to i32
  %55 = lshr i32 %54, 8
  %56 = xor i32 %48, 127
  %57 = mul nuw nsw i32 %55, %56
  %58 = zext i16 %53 to i32
  %59 = lshr i32 %58, 8
  %60 = mul nuw nsw i32 %59, %48
  %61 = add nuw nsw i32 %60, %57
  %62 = shl nuw nsw i32 %61, 1
  %63 = and i32 %62, 65280
  %64 = and i32 %54, 255
  %65 = mul nuw nsw i32 %64, %56
  %66 = and i32 %58, 255
  %67 = mul nuw nsw i32 %66, %48
  %68 = add nuw nsw i32 %67, %65
  %69 = lshr i32 %68, 7
  %70 = or i32 %63, %69
  %71 = trunc i32 %70 to i16
  %72 = getelementptr inbounds i16, i16* %15, i64 1
  store i16 %71, i16* %72, align 2
  %73 = add nsw i64 %44, %12
  %74 = getelementptr inbounds i16, i16* %15, i64 2
  %75 = add nuw nsw i32 %16, 2
  %76 = icmp slt i32 %75, %9
  br i1 %76, label %13, label %77

77:                                               ; preds = %13, %5
  %78 = phi i16* [ %8, %5 ], [ %74, %13 ]
  %79 = phi i64 [ %6, %5 ], [ %73, %13 ]
  %80 = and i32 %2, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %110, label %82

82:                                               ; preds = %77
  %83 = ashr i64 %79, 16
  %84 = lshr i64 %79, 9
  %85 = trunc i64 %84 to i32
  %86 = and i32 %85, 127
  %87 = getelementptr inbounds i16, i16* %7, i64 %83
  %88 = load i16, i16* %87, align 2
  %89 = add nsw i64 %83, 1
  %90 = getelementptr inbounds i16, i16* %7, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %88 to i32
  %93 = lshr i32 %92, 8
  %94 = xor i32 %86, 127
  %95 = mul nuw nsw i32 %93, %94
  %96 = zext i16 %91 to i32
  %97 = lshr i32 %96, 8
  %98 = mul nuw nsw i32 %97, %86
  %99 = add nuw nsw i32 %98, %95
  %100 = shl nuw nsw i32 %99, 1
  %101 = and i32 %100, 65280
  %102 = and i32 %92, 255
  %103 = mul nuw nsw i32 %102, %94
  %104 = and i32 %96, 255
  %105 = mul nuw nsw i32 %104, %86
  %106 = add nuw nsw i32 %105, %103
  %107 = lshr i32 %106, 7
  %108 = or i32 %101, %107
  %109 = trunc i32 %108 to i16
  store i16 %109, i16* %78, align 2
  br label %110

110:                                              ; preds = %77, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ScalePlaneVertical(i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32) local_unnamed_addr #1 {
  %13 = mul nsw i32 %10, %1
  %14 = icmp sgt i32 %0, 1
  %15 = shl i32 %0, 16
  %16 = add i32 %15, -65537
  %17 = select i1 %14, i32 %16, i32 0
  %18 = ashr i32 %7, 16
  %19 = mul nsw i32 %18, %10
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %5, i64 %20
  %22 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %12
  %25 = tail call i32 @InitCpuFlags() #4
  br label %26

26:                                               ; preds = %12, %24
  %27 = phi i32 [ %25, %24 ], [ %22, %12 ]
  %28 = and i32 %27, 64
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = and i32 %13, 15
  %32 = icmp eq i32 %31, 0
  %33 = select i1 %32, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_SSSE3, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_Any_SSSE3
  br label %34

34:                                               ; preds = %26, %30
  %35 = phi void (i8*, i8*, i64, i32, i32)* [ %33, %30 ], [ @InterpolateRow_C, %26 ]
  %36 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = tail call i32 @InitCpuFlags() #4
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi i32 [ %39, %38 ], [ %36, %34 ]
  %42 = and i32 %41, 1024
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = and i32 %13, 31
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_AVX2, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_Any_AVX2
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi void (i8*, i8*, i64, i32, i32)* [ %47, %44 ], [ %35, %40 ]
  %50 = icmp sgt i32 %2, 0
  br i1 %50, label %51, label %72

51:                                               ; preds = %48
  %52 = icmp eq i32 %11, 0
  %53 = sext i32 %3 to i64
  %54 = sext i32 %4 to i64
  br label %55

55:                                               ; preds = %55, %51
  %56 = phi i32 [ 0, %51 ], [ %70, %55 ]
  %57 = phi i8* [ %6, %51 ], [ %68, %55 ]
  %58 = phi i32 [ %8, %51 ], [ %69, %55 ]
  %59 = icmp sgt i32 %58, %17
  %60 = select i1 %59, i32 %17, i32 %58
  %61 = ashr i32 %60, 16
  %62 = lshr i32 %60, 8
  %63 = and i32 %62, 255
  %64 = select i1 %52, i32 0, i32 %63
  %65 = mul nsw i32 %61, %3
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %21, i64 %66
  tail call void %49(i8* %57, i8* %67, i64 %53, i32 %13, i32 %64) #4
  %68 = getelementptr inbounds i8, i8* %57, i64 %54
  %69 = add nsw i32 %60, %9
  %70 = add nuw nsw i32 %56, 1
  %71 = icmp eq i32 %70, %2
  br i1 %71, label %72, label %55

72:                                               ; preds = %55, %48
  ret void
}

declare void @InterpolateRow_C(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_Any_SSSE3(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_SSSE3(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_Any_AVX2(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_AVX2(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ScalePlaneVertical_16(i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32) local_unnamed_addr #1 {
  %13 = mul nsw i32 %10, %1
  %14 = icmp sgt i32 %0, 1
  %15 = shl i32 %0, 16
  %16 = add i32 %15, -65537
  %17 = select i1 %14, i32 %16, i32 0
  %18 = ashr i32 %7, 16
  %19 = mul nsw i32 %18, %10
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %5, i64 %20
  %22 = icmp sgt i32 %2, 0
  br i1 %22, label %23, label %44

23:                                               ; preds = %12
  %24 = icmp eq i32 %11, 0
  %25 = sext i32 %3 to i64
  %26 = sext i32 %4 to i64
  br label %27

27:                                               ; preds = %27, %23
  %28 = phi i32 [ 0, %23 ], [ %42, %27 ]
  %29 = phi i16* [ %6, %23 ], [ %40, %27 ]
  %30 = phi i32 [ %8, %23 ], [ %41, %27 ]
  %31 = icmp sgt i32 %30, %17
  %32 = select i1 %31, i32 %17, i32 %30
  %33 = ashr i32 %32, 16
  %34 = lshr i32 %32, 8
  %35 = and i32 %34, 255
  %36 = select i1 %24, i32 0, i32 %35
  %37 = mul nsw i32 %33, %3
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %21, i64 %38
  tail call void @InterpolateRow_16_C(i16* %29, i16* %39, i64 %25, i32 %13, i32 %36) #4
  %40 = getelementptr inbounds i16, i16* %29, i64 %26
  %41 = add nsw i32 %32, %9
  %42 = add nuw nsw i32 %28, 1
  %43 = icmp eq i32 %42, %2
  br i1 %43, label %44, label %27

44:                                               ; preds = %27, %12
  ret void
}

declare void @InterpolateRow_16_C(i16*, i16*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @ScaleFilterReduce(i32, i32, i32, i32, i32) local_unnamed_addr #3 {
  %6 = icmp slt i32 %0, 0
  %7 = sub nsw i32 0, %0
  %8 = select i1 %6, i32 %7, i32 %0
  %9 = icmp slt i32 %1, 0
  %10 = sub nsw i32 0, %1
  %11 = select i1 %9, i32 %10, i32 %1
  switch i32 %4, label %27 [
    i32 3, label %12
    i32 2, label %18
  ]

12:                                               ; preds = %5
  %13 = shl nsw i32 %2, 1
  %14 = icmp slt i32 %13, %8
  %15 = shl nsw i32 %3, 1
  %16 = icmp slt i32 %15, %11
  %17 = and i1 %14, %16
  br i1 %17, label %38, label %18

18:                                               ; preds = %5, %12
  %19 = icmp eq i32 %11, 1
  %20 = icmp eq i32 %11, %3
  %21 = mul nsw i32 %3, 3
  %22 = icmp eq i32 %21, %11
  %23 = or i1 %20, %22
  %24 = or i1 %19, %23
  %25 = select i1 %24, i32 1, i32 2
  %26 = icmp eq i32 %8, 1
  br i1 %26, label %38, label %27

27:                                               ; preds = %5, %18
  %28 = phi i32 [ %25, %18 ], [ %4, %5 ]
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %38

30:                                               ; preds = %27
  %31 = icmp ne i32 %8, 1
  %32 = icmp ne i32 %8, %2
  %33 = mul nsw i32 %2, 3
  %34 = icmp ne i32 %33, %8
  %35 = and i1 %32, %34
  %36 = and i1 %31, %35
  %37 = zext i1 %36 to i32
  ret i32 %37

38:                                               ; preds = %18, %12, %27
  %39 = phi i32 [ %28, %27 ], [ 3, %12 ], [ 0, %18 ]
  ret i32 %39
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @FixedDiv_C(i32, i32) local_unnamed_addr #3 {
  %3 = sext i32 %0 to i64
  %4 = shl nsw i64 %3, 16
  %5 = sext i32 %1 to i64
  %6 = sdiv i64 %4, %5
  %7 = trunc i64 %6 to i32
  ret i32 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @FixedDiv1_C(i32, i32) local_unnamed_addr #3 {
  %3 = sext i32 %0 to i64
  %4 = shl nsw i64 %3, 16
  %5 = add nsw i64 %4, -65537
  %6 = add nsw i32 %1, -1
  %7 = sext i32 %6 to i64
  %8 = sdiv i64 %5, %7
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ScaleSlope(i32, i32, i32, i32, i32, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #1 {
  %10 = icmp eq i32 %2, 1
  %11 = icmp sgt i32 %0, 32767
  %12 = and i1 %11, %10
  %13 = select i1 %12, i32 %0, i32 %2
  %14 = icmp eq i32 %3, 1
  %15 = icmp sgt i32 %1, 32767
  %16 = and i1 %15, %14
  %17 = select i1 %16, i32 %1, i32 %3
  switch i32 %4, label %85 [
    i32 3, label %18
    i32 2, label %24
    i32 1, label %61
  ]

18:                                               ; preds = %9
  %19 = icmp slt i32 %0, 0
  %20 = sub nsw i32 0, %0
  %21 = select i1 %19, i32 %20, i32 %0
  %22 = tail call i32 @FixedDiv_X86(i32 %21, i32 %13) #4
  store i32 %22, i32* %7, align 4
  %23 = tail call i32 @FixedDiv_X86(i32 %1, i32 %17) #4
  store i32 %23, i32* %8, align 4
  store i32 0, i32* %5, align 4
  br label %109

24:                                               ; preds = %9
  %25 = icmp slt i32 %0, 0
  %26 = sub nsw i32 0, %0
  %27 = select i1 %25, i32 %26, i32 %0
  %28 = icmp sgt i32 %13, %27
  br i1 %28, label %39, label %29

29:                                               ; preds = %24
  %30 = tail call i32 @FixedDiv_X86(i32 %27, i32 %13) #4
  store i32 %30, i32* %7, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = sub nsw i32 0, %30
  %34 = ashr i32 %33, 1
  %35 = sub nsw i32 32768, %34
  br label %43

36:                                               ; preds = %29
  %37 = lshr i32 %30, 1
  %38 = add nsw i32 %37, -32768
  br label %43

39:                                               ; preds = %24
  %40 = icmp sgt i32 %13, 1
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = tail call i32 @FixedDiv1_X86(i32 %27, i32 %13) #4
  store i32 %42, i32* %7, align 4
  br label %43

43:                                               ; preds = %32, %36, %41
  %44 = phi i32 [ 0, %41 ], [ %35, %32 ], [ %38, %36 ]
  store i32 %44, i32* %5, align 4
  br label %45

45:                                               ; preds = %43, %39
  %46 = icmp sgt i32 %17, %1
  br i1 %46, label %57, label %47

47:                                               ; preds = %45
  %48 = tail call i32 @FixedDiv_X86(i32 %1, i32 %17) #4
  store i32 %48, i32* %8, align 4
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %47
  %51 = sub nsw i32 0, %48
  %52 = ashr i32 %51, 1
  %53 = sub nsw i32 32768, %52
  br label %109

54:                                               ; preds = %47
  %55 = lshr i32 %48, 1
  %56 = add nsw i32 %55, -32768
  br label %109

57:                                               ; preds = %45
  %58 = icmp sgt i32 %17, 1
  br i1 %58, label %59, label %111

59:                                               ; preds = %57
  %60 = tail call i32 @FixedDiv1_X86(i32 %1, i32 %17) #4
  store i32 %60, i32* %8, align 4
  br label %109

61:                                               ; preds = %9
  %62 = icmp slt i32 %0, 0
  %63 = sub nsw i32 0, %0
  %64 = select i1 %62, i32 %63, i32 %0
  %65 = icmp sgt i32 %13, %64
  br i1 %65, label %76, label %66

66:                                               ; preds = %61
  %67 = tail call i32 @FixedDiv_X86(i32 %64, i32 %13) #4
  store i32 %67, i32* %7, align 4
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %66
  %70 = sub nsw i32 0, %67
  %71 = ashr i32 %70, 1
  %72 = sub nsw i32 32768, %71
  br label %80

73:                                               ; preds = %66
  %74 = lshr i32 %67, 1
  %75 = add nsw i32 %74, -32768
  br label %80

76:                                               ; preds = %61
  %77 = icmp sgt i32 %13, 1
  br i1 %77, label %78, label %82

78:                                               ; preds = %76
  %79 = tail call i32 @FixedDiv1_X86(i32 %64, i32 %13) #4
  store i32 %79, i32* %7, align 4
  br label %80

80:                                               ; preds = %69, %73, %78
  %81 = phi i32 [ 0, %78 ], [ %72, %69 ], [ %75, %73 ]
  store i32 %81, i32* %5, align 4
  br label %82

82:                                               ; preds = %80, %76
  %83 = tail call i32 @FixedDiv_X86(i32 %1, i32 %17) #4
  store i32 %83, i32* %8, align 4
  %84 = ashr i32 %83, 1
  br label %109

85:                                               ; preds = %9
  %86 = icmp slt i32 %0, 0
  %87 = sub nsw i32 0, %0
  %88 = select i1 %86, i32 %87, i32 %0
  %89 = tail call i32 @FixedDiv_X86(i32 %88, i32 %13) #4
  store i32 %89, i32* %7, align 4
  %90 = tail call i32 @FixedDiv_X86(i32 %1, i32 %17) #4
  store i32 %90, i32* %8, align 4
  %91 = load i32, i32* %7, align 4
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %85
  %94 = sub nsw i32 0, %91
  %95 = ashr i32 %94, 1
  %96 = sub nsw i32 0, %95
  br label %99

97:                                               ; preds = %85
  %98 = lshr i32 %91, 1
  br label %99

99:                                               ; preds = %97, %93
  %100 = phi i32 [ %96, %93 ], [ %98, %97 ]
  store i32 %100, i32* %5, align 4
  %101 = load i32, i32* %8, align 4
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = sub nsw i32 0, %101
  %105 = ashr i32 %104, 1
  %106 = sub nsw i32 0, %105
  br label %109

107:                                              ; preds = %99
  %108 = lshr i32 %101, 1
  br label %109

109:                                              ; preds = %103, %107, %50, %54, %18, %82, %59
  %110 = phi i32 [ 0, %59 ], [ %84, %82 ], [ 0, %18 ], [ %53, %50 ], [ %56, %54 ], [ %106, %103 ], [ %108, %107 ]
  store i32 %110, i32* %6, align 4
  br label %111

111:                                              ; preds = %109, %57
  %112 = icmp slt i32 %0, 0
  br i1 %112, label %113, label %121

113:                                              ; preds = %111
  %114 = add nsw i32 %13, -1
  %115 = load i32, i32* %7, align 4
  %116 = mul nsw i32 %115, %114
  %117 = load i32, i32* %5, align 4
  %118 = add nsw i32 %117, %116
  store i32 %118, i32* %5, align 4
  %119 = load i32, i32* %7, align 4
  %120 = sub nsw i32 0, %119
  store i32 %120, i32* %7, align 4
  br label %121

121:                                              ; preds = %113, %111
  ret void
}

declare i32 @FixedDiv_X86(i32, i32) local_unnamed_addr #2

declare i32 @FixedDiv1_X86(i32, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ScaleRowUp2_16_C(i16* nocapture readonly, i64, i16* nocapture, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds i16, i16* %0, i64 %1
  %6 = add nsw i32 %3, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %124

8:                                                ; preds = %4
  %9 = add i32 %3, -2
  %10 = lshr i32 %9, 1
  %11 = add nuw i32 %10, 1
  %12 = zext i32 %11 to i64
  %13 = icmp ult i32 %11, 8
  br i1 %13, label %84, label %14

14:                                               ; preds = %8
  %15 = add i32 %3, -2
  %16 = lshr i32 %15, 1
  %17 = zext i32 %16 to i64
  %18 = and i32 %15, -2
  %19 = zext i32 %18 to i64
  %20 = add nuw nsw i64 %19, 2
  %21 = getelementptr i16, i16* %2, i64 %20
  %22 = add i64 %17, %1
  %23 = add i64 %22, 2
  %24 = getelementptr i16, i16* %0, i64 %23
  %25 = add nuw nsw i64 %17, 2
  %26 = getelementptr i16, i16* %0, i64 %25
  %27 = icmp ugt i16* %24, %2
  %28 = icmp ult i16* %5, %21
  %29 = and i1 %27, %28
  %30 = icmp ugt i16* %26, %2
  %31 = icmp ugt i16* %21, %0
  %32 = and i1 %30, %31
  %33 = or i1 %29, %32
  br i1 %33, label %84, label %34

34:                                               ; preds = %14
  %35 = and i64 %12, 4294967288
  %36 = getelementptr i16, i16* %0, i64 %35
  %37 = shl nuw nsw i64 %35, 1
  %38 = getelementptr i16, i16* %2, i64 %37
  %39 = getelementptr i16, i16* %5, i64 %35
  %40 = trunc i64 %35 to i32
  %41 = shl i32 %40, 1
  br label %42

42:                                               ; preds = %42, %34
  %43 = phi i64 [ 0, %34 ], [ %80, %42 ]
  %44 = getelementptr i16, i16* %0, i64 %43
  %45 = shl i64 %43, 1
  %46 = getelementptr i16, i16* %5, i64 %43
  %47 = bitcast i16* %44 to <8 x i16>*
  %48 = load <8 x i16>, <8 x i16>* %47, align 2, !alias.scope !47
  %49 = getelementptr inbounds i16, i16* %44, i64 1
  %50 = bitcast i16* %49 to <8 x i16>*
  %51 = load <8 x i16>, <8 x i16>* %50, align 2, !alias.scope !47
  %52 = bitcast i16* %46 to <8 x i16>*
  %53 = load <8 x i16>, <8 x i16>* %52, align 2, !alias.scope !50
  %54 = getelementptr inbounds i16, i16* %46, i64 1
  %55 = bitcast i16* %54 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !50
  %57 = zext <8 x i16> %48 to <8 x i32>
  %58 = mul nuw nsw <8 x i32> %57, <i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9>
  %59 = zext <8 x i16> %51 to <8 x i32>
  %60 = zext <8 x i16> %53 to <8 x i32>
  %61 = zext <8 x i16> %56 to <8 x i32>
  %62 = add nuw nsw <8 x i32> %60, %59
  %63 = mul nuw nsw <8 x i32> %62, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %64 = add nuw nsw <8 x i32> %58, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %65 = add nuw nsw <8 x i32> %64, %61
  %66 = add nuw nsw <8 x i32> %65, %63
  %67 = lshr <8 x i32> %66, <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>
  %68 = trunc <8 x i32> %67 to <8 x i16>
  %69 = mul nuw nsw <8 x i32> %59, <i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9>
  %70 = add nuw nsw <8 x i32> %61, %57
  %71 = mul nuw nsw <8 x i32> %70, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %72 = add nuw nsw <8 x i32> %69, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %73 = add nuw nsw <8 x i32> %72, %60
  %74 = add nuw nsw <8 x i32> %73, %71
  %75 = lshr <8 x i32> %74, <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>
  %76 = trunc <8 x i32> %75 to <8 x i16>
  %77 = getelementptr inbounds i16, i16* %2, i64 %45
  %78 = bitcast i16* %77 to <16 x i16>*
  %79 = shufflevector <8 x i16> %68, <8 x i16> %76, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %79, <16 x i16>* %78, align 2
  %80 = add i64 %43, 8
  %81 = icmp eq i64 %80, %35
  br i1 %81, label %82, label %42, !llvm.loop !52

82:                                               ; preds = %42
  %83 = icmp eq i64 %35, %12
  br i1 %83, label %124, label %84

84:                                               ; preds = %82, %14, %8
  %85 = phi i16* [ %0, %14 ], [ %0, %8 ], [ %36, %82 ]
  %86 = phi i16* [ %2, %14 ], [ %2, %8 ], [ %38, %82 ]
  %87 = phi i16* [ %5, %14 ], [ %5, %8 ], [ %39, %82 ]
  %88 = phi i32 [ 0, %14 ], [ 0, %8 ], [ %41, %82 ]
  br label %89

89:                                               ; preds = %84, %89
  %90 = phi i16* [ %95, %89 ], [ %85, %84 ]
  %91 = phi i16* [ %121, %89 ], [ %86, %84 ]
  %92 = phi i16* [ %98, %89 ], [ %87, %84 ]
  %93 = phi i32 [ %122, %89 ], [ %88, %84 ]
  %94 = load i16, i16* %90, align 2
  %95 = getelementptr inbounds i16, i16* %90, i64 1
  %96 = load i16, i16* %95, align 2
  %97 = load i16, i16* %92, align 2
  %98 = getelementptr inbounds i16, i16* %92, i64 1
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %94 to i32
  %101 = mul nuw nsw i32 %100, 9
  %102 = zext i16 %96 to i32
  %103 = zext i16 %97 to i32
  %104 = zext i16 %99 to i32
  %105 = add nuw nsw i32 %103, %102
  %106 = mul nuw nsw i32 %105, 3
  %107 = add nuw nsw i32 %101, 8
  %108 = add nuw nsw i32 %107, %104
  %109 = add nuw nsw i32 %108, %106
  %110 = lshr i32 %109, 4
  %111 = trunc i32 %110 to i16
  store i16 %111, i16* %91, align 2
  %112 = mul nuw nsw i32 %102, 9
  %113 = add nuw nsw i32 %104, %100
  %114 = mul nuw nsw i32 %113, 3
  %115 = add nuw nsw i32 %112, 8
  %116 = add nuw nsw i32 %115, %103
  %117 = add nuw nsw i32 %116, %114
  %118 = lshr i32 %117, 4
  %119 = trunc i32 %118 to i16
  %120 = getelementptr inbounds i16, i16* %91, i64 1
  store i16 %119, i16* %120, align 2
  %121 = getelementptr inbounds i16, i16* %91, i64 2
  %122 = add nuw nsw i32 %93, 2
  %123 = icmp slt i32 %122, %6
  br i1 %123, label %89, label %124, !llvm.loop !53

124:                                              ; preds = %89, %82, %4
  %125 = phi i16* [ %5, %4 ], [ %39, %82 ], [ %98, %89 ]
  %126 = phi i16* [ %2, %4 ], [ %38, %82 ], [ %121, %89 ]
  %127 = phi i16* [ %0, %4 ], [ %36, %82 ], [ %95, %89 ]
  %128 = and i32 %3, 1
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %149, label %130

130:                                              ; preds = %124
  %131 = load i16, i16* %127, align 2
  %132 = getelementptr inbounds i16, i16* %127, i64 1
  %133 = load i16, i16* %132, align 2
  %134 = load i16, i16* %125, align 2
  %135 = getelementptr inbounds i16, i16* %125, i64 1
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %131 to i32
  %138 = mul nuw nsw i32 %137, 9
  %139 = zext i16 %133 to i32
  %140 = zext i16 %134 to i32
  %141 = zext i16 %136 to i32
  %142 = add nuw nsw i32 %140, %139
  %143 = mul nuw nsw i32 %142, 3
  %144 = add nuw nsw i32 %138, 8
  %145 = add nuw nsw i32 %144, %141
  %146 = add nuw nsw i32 %145, %143
  %147 = lshr i32 %146, 4
  %148 = trunc i32 %147 to i16
  store i16 %148, i16* %126, align 2
  br label %149

149:                                              ; preds = %124, %130
  ret void
}

declare i32 @InitCpuFlags() local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !8}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !8}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = distinct !{!22, !8}
!23 = distinct !{!23, !8}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !8}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = distinct !{!33, !8}
!34 = distinct !{!34, !3}
!35 = distinct !{!35, !8}
!36 = distinct !{!36, !3}
!37 = distinct !{!37, !3}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !3}
!40 = distinct !{!40, !3}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = distinct !{!44, !8}
!45 = distinct !{!45, !3}
!46 = distinct !{!46, !8}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !8}
!53 = distinct !{!53, !8}
