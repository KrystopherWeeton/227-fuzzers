; ModuleID = '../../third_party/libxml/src/HTMLparser.c'
source_filename = "../../third_party/libxml/src/HTMLparser.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct._htmlElemDesc = type { i8*, i8, i8, i8, i8, i8, i8, i8, i8*, i8**, i8*, i8**, i8**, i8** }
%struct._htmlEntityDesc = type { i32, i8*, i8* }
%struct._xmlSAXLocator = type { i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*)* }
%struct._xmlSAXHandlerV1 = type { void (i8*, i8*, i8*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (i8*)*, %struct._xmlParserInput* (i8*, i8*, i8*)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)*, void (i8*, i8*, i32, %struct._xmlElementContent*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlSAXLocator*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*)*, i32 }
%struct._xmlParserInput = type { %struct._xmlParserInputBuffer*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i64, void (i8*)*, i8*, i8*, i32, i32 }
%struct._xmlParserInputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32, i64 }
%struct._xmlCharEncodingHandler = type { i8*, i32 (i8*, i32*, i8*, i32*)*, i32 (i8*, i32*, i8*, i32*)*, %struct._uconv_t*, %struct._uconv_t* }
%struct._uconv_t = type { %struct.UConverter*, %struct.UConverter*, [1024 x i16], i16*, i16* }
%struct.UConverter = type opaque
%struct._xmlBuf = type opaque
%struct._xmlEnumeration = type { %struct._xmlEnumeration*, i8* }
%struct._xmlElementContent = type { i32, i32, i8*, %struct._xmlElementContent*, %struct._xmlElementContent*, %struct._xmlElementContent*, i8* }
%struct._xmlEntity = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDtd*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i32, i32, i8*, i8*, %struct._xmlEntity*, i8*, i32, i32, i32 }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlDict = type opaque
%struct.htmlStartCloseEntry = type { i8*, i8* }
%struct._xmlChRangeGroup = type { i32, i32, %struct._xmlChSRange*, %struct._xmlChLRange* }
%struct._xmlChSRange = type { i16, i16 }
%struct._xmlChLRange = type { i32, i32 }
%struct.elementPriority = type { i8*, i32 }
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%struct._xmlParserCtxt = type { %struct._xmlSAXHandler*, i8*, %struct._xmlDoc*, i32, i32, i8*, i8*, i32, i32, %struct._xmlParserInput*, i32, i32, %struct._xmlParserInput**, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlParserNodeInfoSeq, i32, i32, i32, i32, i32, i32, %struct._xmlValidCtxt, i32, i32, i8*, i8*, i32, i32, i8**, i64, i64, i32, i32, i32, i8*, i8*, i8*, i32*, i32, i32, i32*, i32, %struct._xmlParserInput*, i32, i32, i32, i32, i8*, i32, i32, i8*, i32, i32, %struct._xmlDict*, i8**, i32, i32, i8*, i8*, i8*, i32, i32, i32, i8**, i32*, %struct._xmlStartTag*, %struct._xmlHashTable*, %struct._xmlHashTable*, i32, i32, i32, i32, %struct._xmlNode*, i32, %struct._xmlAttr*, %struct._xmlError, i32, i64, i64, %struct._xmlParserNodeInfo*, i32, i32, %struct._xmlParserNodeInfo*, i32, i64 }
%struct._xmlSAXHandler = type { void (i8*, i8*, i8*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (i8*)*, %struct._xmlParserInput* (i8*, i8*, i8*)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)*, void (i8*, i8*, i32, %struct._xmlElementContent*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlSAXLocator*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*)*, i32, i8*, void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)*, void (i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlError*)* }
%struct._xmlParserNodeInfoSeq = type { i64, i64, %struct._xmlParserNodeInfo* }
%struct._xmlValidCtxt = type { i8*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlDoc*, i32, %struct._xmlValidState*, i32, i32, %struct._xmlValidState*, i8*, i8* }
%struct._xmlValidState = type opaque
%struct._xmlStartTag = type opaque
%struct._xmlHashTable = type opaque
%struct._xmlParserNodeInfo = type { %struct._xmlNode*, i64, i64, i64, i64 }

@html40ElementTable = internal constant [92 x %struct._htmlElemDesc] [%struct._htmlElemDesc { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([29 x i8*], [29 x i8*]* @a_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @target_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i32 0, i32 0), i8** getelementptr inbounds ([41 x i8*], [41 x i8*]* @inline_p, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 1, i8 1, i8 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), i8** getelementptr inbounds ([65 x i8*], [65 x i8*]* @flow_param, i32 0, i32 0), i8* null, i8** null, i8** getelementptr inbounds ([14 x i8*], [14 x i8*]* @applet_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @area_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @target_attr, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @alt_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i32 0, i32 0), i8** null, i8* null, i8** null, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @target_attr, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @href_attrs, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 1, i8 1, i8 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0), i8** null, i8* null, i8** null, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @basefont_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @core_i18n_attrs, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @dir_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @quote_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8 1, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i8** getelementptr inbounds ([66 x i8*], [66 x i8*]* @body_contents, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8** getelementptr inbounds ([18 x i8*], [18 x i8*]* @body_attrs, i32 0, i32 0), i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @body_depr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @core_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @clear_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([24 x i8*], [24 x i8*]* @button_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 1, i8 1, i8 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.56, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.60, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([22 x i8*], [22 x i8*]* @col_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.64, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @col_elt, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8** getelementptr inbounds ([22 x i8*], [22 x i8*]* @col_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([18 x i8*], [18 x i8*]* @edit_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 1, i8 1, i8 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0), i8** getelementptr inbounds ([26 x i8*], [26 x i8*]* @blockli_elt, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @compact_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.74, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @dl_contents, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @compact_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.78, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 1, i8 1, i8 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.82, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([23 x i8*], [23 x i8*]* @embed_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.84, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @fieldset_contents, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 1, i8 1, i8 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.86, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** null, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @font_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.88, i32 0, i32 0), i8** getelementptr inbounds ([62 x i8*], [62 x i8*]* @form_contents, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8** getelementptr inbounds ([23 x i8*], [23 x i8*]* @form_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @target_attr, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @action_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 2, i8 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i32 0, i32 0), i8** null, i8* null, i8** null, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @frame_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 2, i8 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.92, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @frameset_contents, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @frameset_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8 1, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.102, i32 0, i32 0), i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @head_contents, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @head_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @hr_depr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8 1, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.105, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @html_content, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @i18n_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @version_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.107, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.109, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** null, i8** getelementptr inbounds ([15 x i8*], [15 x i8*]* @iframe_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.111, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([22 x i8*], [22 x i8*]* @img_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @src_alt_attrs, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.113, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([35 x i8*], [35 x i8*]* @input_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([18 x i8*], [18 x i8*]* @edit_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 1, i8 1, i8 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.117, i32 0, i32 0), i8** null, i8* null, i8** null, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @prompt_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.119, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.121, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([20 x i8*], [20 x i8*]* @label_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.123, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @legend_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8 0, i8 1, i8 1, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.126, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([23 x i8*], [23 x i8*]* @link_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @target_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.128, i32 0, i32 0), i8** getelementptr inbounds ([26 x i8*], [26 x i8*]* @map_contents, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @name_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 1, i8 1, i8 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i32 0, i32 0), i8** getelementptr inbounds ([26 x i8*], [26 x i8*]* @blockli_elt, i32 0, i32 0), i8* null, i8** null, i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @compact_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.132, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @meta_attrs, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @content_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 2, i8 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.133, i32 0, i32 0), i8** getelementptr inbounds ([65 x i8*], [65 x i8*]* @noframes_content, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.135, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.82, i32 0, i32 0), i8** getelementptr inbounds ([65 x i8*], [65 x i8*]* @object_contents, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8** getelementptr inbounds ([29 x i8*], [29 x i8*]* @object_attrs, i32 0, i32 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @object_depr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @li_elt, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @ol_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @option_elt, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @optgroup_attrs, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @label_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.142, i32 0, i32 0), i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @html_pcdata, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([20 x i8*], [20 x i8*]* @option_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.144, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @align_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i8 0, i8 2, i8 2, i8 1, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.146, i32 0, i32 0), i8** null, i8* null, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @param_attrs, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @name_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.148, i32 0, i32 0), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @pre_content, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @width_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.150, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @quote_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 1, i8 1, i8 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.152, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.154, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.156, i32 0, i32 0), i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @html_pcdata, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @script_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @language_attr, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @type_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.158, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @select_content, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([24 x i8*], [24 x i8*]* @select_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.160, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.162, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 1, i8 1, i8 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.164, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.166, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.168, i32 0, i32 0), i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @html_pcdata, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @style_attrs, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @type_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.172, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i32 0, i32 0), i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @table_contents, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8** getelementptr inbounds ([24 x i8*], [24 x i8*]* @table_attrs, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @table_depr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.176, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @tr_elt, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8** getelementptr inbounds ([20 x i8*], [20 x i8*]* @talign_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.178, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([26 x i8*], [26 x i8*]* @th_td_attr, i32 0, i32 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @th_td_depr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.180, i32 0, i32 0), i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @html_pcdata, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @textarea_attrs, i32 0, i32 0), i8** null, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @rows_cols_attr, i32 0, i32 0) }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.182, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @tr_elt, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8** getelementptr inbounds ([20 x i8*], [20 x i8*]* @talign_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.184, i32 0, i32 0), i8** getelementptr inbounds ([64 x i8*], [64 x i8*]* @html_flow, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([26 x i8*], [26 x i8*]* @th_td_attr, i32 0, i32 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @th_td_depr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0), i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.186, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @tr_elt, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8** getelementptr inbounds ([20 x i8*], [20 x i8*]* @talign_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.188, i32 0, i32 0), i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @html_pcdata, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @i18n_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.189, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @tr_contents, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8** getelementptr inbounds ([20 x i8*], [20 x i8*]* @talign_attrs, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @bgcolor_attr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.191, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8 0, i8 3, i8 0, i8 0, i8 1, i8 1, i8 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.193, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.195, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @li_elt, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @ul_depr, i32 0, i32 0), i8** null }, %struct._htmlElemDesc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.197, i32 0, i32 0), i8** getelementptr inbounds ([40 x i8*], [40 x i8*]* @html_inline, i32 0, i32 0), i8* null, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @html_attrs, i32 0, i32 0), i8** null, i8** null }], align 16
@html40EntitiesTable = internal constant [253 x %struct._htmlEntityDesc] [%struct._htmlEntityDesc { i32 34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.316, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.318, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.320, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.322, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.324, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 160, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.326, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 161, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.328, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.330, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 163, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.331, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.332, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 164, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.333, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 165, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.335, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.336, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 166, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.338, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.340, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 168, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.342, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 169, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.344, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 170, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.345, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.346, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 171, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.348, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 172, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.350, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 173, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.352, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 174, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.354, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.356, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 176, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.357, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.358, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 177, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.359, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.360, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.362, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 179, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.364, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 180, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.366, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 181, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.368, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 182, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.370, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 183, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.371, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.372, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 184, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.374, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 185, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.376, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 186, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.377, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.378, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 187, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.379, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.380, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 188, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.382, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 189, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.384, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.386, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 191, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.387, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.388, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 192, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.390, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 193, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.391, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.392, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 194, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.394, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 195, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.396, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 196, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.397, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.398, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 197, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.399, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.400, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 198, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.401, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.402, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 199, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.404, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 200, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.406, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 201, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.408, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 202, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.409, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.410, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 203, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.412, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 204, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.413, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.414, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 205, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.416, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 206, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.417, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.418, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 207, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.419, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.420, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 208, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.421, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.422, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 209, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.424, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 210, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.425, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.426, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 211, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.427, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.428, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 212, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.429, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.430, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 213, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.431, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.432, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 214, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.433, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.434, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 215, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.436, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.437, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.438, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 217, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.439, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.440, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 218, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.441, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.442, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 219, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.443, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.444, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 220, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.445, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.446, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 221, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.447, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.448, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 222, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.449, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.450, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 223, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.451, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.452, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 224, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.453, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.454, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 225, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.455, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.456, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 226, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.457, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.458, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 227, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.459, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.460, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 228, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.461, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.462, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 229, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.463, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.464, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 230, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.465, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.466, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 231, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.467, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.468, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 232, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.469, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.470, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 233, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.471, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.472, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 234, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.473, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.474, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 235, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.476, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 236, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.478, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 237, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.480, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 238, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.482, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 239, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.483, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.484, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 240, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.485, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.486, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 241, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.487, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.488, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 242, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.489, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.490, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 243, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.492, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 244, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.493, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.494, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 245, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.495, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.496, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 246, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.497, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.498, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 247, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.499, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.500, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 248, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.501, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.502, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 249, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.503, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.504, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 250, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.505, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.506, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 251, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.507, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.508, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 252, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.510, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 253, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.512, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 254, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.514, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 255, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.516, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 338, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.518, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 339, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.520, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 352, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.522, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 353, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.524, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 376, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.526, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 402, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.528, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 710, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.530, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 732, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.532, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 913, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.534, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 914, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.536, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 915, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.538, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 916, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.540, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 917, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.541, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.542, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 918, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.544, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 919, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.545, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.546, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 920, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.548, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 921, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.550, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 922, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.552, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 923, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.554, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 924, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.556, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 925, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.558, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 926, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.560, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 927, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.562, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 928, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.564, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 929, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.566, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 931, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.568, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 932, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.570, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 933, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.572, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 934, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.574, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 935, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.576, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 936, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.577, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.578, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 937, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.579, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.580, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 945, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.581, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.582, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 946, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.584, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 947, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.586, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 948, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.588, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 949, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.590, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 950, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.592, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 951, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.593, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.594, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 952, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.596, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 953, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.597, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.598, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 954, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.600, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 955, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.602, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 956, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.604, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 957, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.606, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 958, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.608, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 959, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.610, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 960, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.612, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 961, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.614, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 962, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.616, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 963, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.618, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 964, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.620, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 965, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.622, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 966, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.623, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.624, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 967, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.626, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 968, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.627, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.628, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 969, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.629, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.630, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 977, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.632, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 978, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.634, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 982, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.636, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8194, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.638, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.639, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.640, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8201, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.642, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8204, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.644, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8205, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.646, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8206, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.648, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8207, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.650, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8211, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.652, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8212, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.654, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8216, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.656, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8217, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.658, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8218, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.659, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.660, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8220, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.662, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8221, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.664, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8222, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.666, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8224, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.668, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8225, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.670, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8226, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.672, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8230, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.674, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8240, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.676, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8242, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.678, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8243, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.680, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8249, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.682, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8250, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.683, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.684, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8254, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.686, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8260, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.687, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.688, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8364, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.689, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.690, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8465, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.691, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.692, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8472, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.693, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.694, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8476, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.695, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.696, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8482, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.697, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.698, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8501, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.699, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.700, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8592, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.701, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.702, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8593, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.703, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.704, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8594, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.705, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.706, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8595, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.707, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.708, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8596, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.709, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.710, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8629, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.711, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.712, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8656, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.713, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.714, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8657, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.715, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.716, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8658, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.717, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.718, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8659, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.719, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.720, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8660, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.721, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.722, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8704, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.723, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.724, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8706, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.725, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.726, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8707, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.728, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8709, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.729, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.730, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8711, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.731, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.732, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8712, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.733, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.734, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8713, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.735, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.736, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8715, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.737, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.738, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8719, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.739, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.740, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8721, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.741, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.742, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8722, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.743, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.744, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8727, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.745, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.746, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8730, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.747, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.748, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8733, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.749, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.750, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8734, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.751, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.752, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8736, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.753, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.754, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8743, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.755, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.756, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8744, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.757, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.758, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8745, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.759, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.760, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8746, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.761, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.762, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8747, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.763, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.764, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8756, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.765, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.766, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8764, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.767, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.768, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8773, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.769, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.770, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8776, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.771, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.772, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8800, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.773, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.774, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8801, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.775, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.776, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8804, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.777, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.778, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8805, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.779, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.780, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8834, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.781, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8835, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.782, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8836, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.783, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.784, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8838, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.785, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.786, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8839, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.787, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.788, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8853, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.789, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.790, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8855, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.791, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.792, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8869, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.793, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.794, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8901, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.795, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.796, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8968, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.797, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.798, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8969, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.799, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.800, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8970, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.801, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.802, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 8971, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.803, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.804, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 9001, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.805, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 9002, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.806, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.807, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 9674, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.808, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.809, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 9824, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.810, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.811, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 9827, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.812, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.813, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 9829, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.814, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.815, i32 0, i32 0) }, %struct._htmlEntityDesc { i32 9830, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.816, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.817, i32 0, i32 0) }], align 16
@.str = private unnamed_addr constant [4 x i8] c"#%u\00", align 1
@xmlMalloc = external local_unnamed_addr global i8* (i64)*, align 8
@.str.1 = private unnamed_addr constant [31 x i8] c"HTML document creation failed\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"html\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"http://www.w3.org/TR/REC-html40/loose.dtd\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"-//W3C//DTD HTML 4.0 Transitional//EN\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"htmlParseEntityRef: no name\0A\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"htmlParseEntityRef: expecting ';'\0A\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"htmlParseCharRef: context error\0A\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"htmlParseCharRef: missing semicolon\0A\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"htmlParseCharRef: invalid value\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"htmlParseCharRef: value too large\0A\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"htmlParseCharRef: invalid xmlChar value %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"htmlParseElement: context error\0A\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"Tag %s invalid\0A\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"Couldn't find end of Start Tag %s\0A\00", align 1
@xmlFree = external local_unnamed_addr global void (i8*)*, align 8
@.str.15 = private unnamed_addr constant [34 x i8] c"htmlParseDocument: context error\0A\00", align 1
@xmlDefaultSAXLocator = external global %struct._xmlSAXLocator, align 8
@.str.16 = private unnamed_addr constant [19 x i8] c"Document is empty\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"NewParserCtxt: out of memory\0A\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"htmlParseChunk: context error\0A\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"encoder error\0A\00", align 1
@htmlDefaultSAXHandler = external global %struct._xmlSAXHandlerV1, align 8
@.str.20 = private unnamed_addr constant [9 x i8] c"charset=\00", align 1
@xmlDefaultSAXHandler = external local_unnamed_addr global %struct._xmlSAXHandlerV1, align 8
@.str.21 = private unnamed_addr constant [15 x i8] c"out of memory\0A\00", align 1
@xmlMallocAtomic = external local_unnamed_addr global i8* (i64)*, align 8
@htmlOmittedDefaultValue = internal unnamed_addr global i32 1, align 4
@.str.22 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"anchor \00", align 1
@html_inline = internal constant [40 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* null], align 16
@a_attrs = internal constant [29 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* null], align 16
@target_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.223, i32 0, i32 0), i8* null], align 16
@.str.24 = private unnamed_addr constant [5 x i8] c"abbr\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"abbreviated form\00", align 1
@html_attrs = internal constant [16 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* null], align 16
@.str.26 = private unnamed_addr constant [8 x i8] c"acronym\00", align 1
@.str.27 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"information on author \00", align 1
@inline_p = internal constant [41 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* null], align 16
@.str.30 = private unnamed_addr constant [7 x i8] c"applet\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"java applet \00", align 1
@flow_param = internal constant [65 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i8* null], align 16
@applet_attrs = internal constant [14 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.231, i32 0, i32 0), i8* null], align 16
@.str.32 = private unnamed_addr constant [5 x i8] c"area\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"client-side image map area \00", align 1
@area_attrs = internal constant [9 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* null], align 16
@alt_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.226, i32 0, i32 0), i8* null], align 16
@.str.34 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"bold text style\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"document base uri \00", align 1
@href_attrs = internal constant [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.213, i32 0, i32 0), i8* null], align 16
@.str.38 = private unnamed_addr constant [9 x i8] c"basefont\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"base font size \00", align 1
@basefont_attrs = internal constant [5 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i32 0, i32 0), i8* null], align 16
@.str.40 = private unnamed_addr constant [4 x i8] c"bdo\00", align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"i18n bidi over-ride \00", align 1
@core_i18n_attrs = internal constant [7 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* null], align 16
@dir_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* null], align 16
@.str.42 = private unnamed_addr constant [4 x i8] c"big\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"large text style\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"blockquote\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"long quotation \00", align 1
@html_flow = internal constant [64 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* null], align 16
@quote_attrs = internal constant [17 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* null], align 16
@.str.46 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"document body \00", align 1
@body_contents = internal constant [66 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0), i8* null], align 16
@.str.48 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@body_attrs = internal constant [18 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.237, i32 0, i32 0), i8* null], align 16
@body_depr = internal constant [7 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.242, i32 0, i32 0), i8* null], align 16
@.str.49 = private unnamed_addr constant [3 x i8] c"br\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"forced line break \00", align 1
@core_attrs = internal constant [5 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* null], align 16
@clear_attrs = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.243, i32 0, i32 0), i8* null], align 16
@.str.51 = private unnamed_addr constant [7 x i8] c"button\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"push button \00", align 1
@button_attrs = internal constant [24 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* null], align 16
@.str.53 = private unnamed_addr constant [8 x i8] c"caption\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"table caption \00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@.str.56 = private unnamed_addr constant [32 x i8] c"shorthand for div align=center \00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"cite\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"citation\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.60 = private unnamed_addr constant [23 x i8] c"computer code fragment\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"col\00", align 1
@.str.62 = private unnamed_addr constant [14 x i8] c"table column \00", align 1
@col_attrs = internal constant [22 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0), i8* null], align 16
@.str.63 = private unnamed_addr constant [9 x i8] c"colgroup\00", align 1
@.str.64 = private unnamed_addr constant [20 x i8] c"table column group \00", align 1
@col_elt = internal constant [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* null], align 16
@.str.65 = private unnamed_addr constant [3 x i8] c"dd\00", align 1
@.str.66 = private unnamed_addr constant [24 x i8] c"definition description \00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"deleted text \00", align 1
@edit_attrs = internal constant [18 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* null], align 16
@.str.69 = private unnamed_addr constant [4 x i8] c"dfn\00", align 1
@.str.70 = private unnamed_addr constant [20 x i8] c"instance definition\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"directory list\00", align 1
@blockli_elt = internal constant [26 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8* null], align 16
@.str.73 = private unnamed_addr constant [3 x i8] c"li\00", align 1
@compact_attrs = internal constant [17 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.250, i32 0, i32 0), i8* null], align 16
@.str.74 = private unnamed_addr constant [33 x i8] c"generic language/style container\00", align 1
@align_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* null], align 16
@.str.75 = private unnamed_addr constant [3 x i8] c"dl\00", align 1
@.str.76 = private unnamed_addr constant [17 x i8] c"definition list \00", align 1
@dl_contents = internal constant [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0), i8* null], align 16
@compact_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.250, i32 0, i32 0), i8* null], align 16
@.str.77 = private unnamed_addr constant [3 x i8] c"dt\00", align 1
@.str.78 = private unnamed_addr constant [17 x i8] c"definition term \00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"em\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"emphasis\00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"embed\00", align 1
@.str.82 = private unnamed_addr constant [25 x i8] c"generic embedded object \00", align 1
@embed_attrs = internal constant [23 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.253, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.254, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* null], align 16
@.str.83 = private unnamed_addr constant [9 x i8] c"fieldset\00", align 1
@.str.84 = private unnamed_addr constant [20 x i8] c"form control group \00", align 1
@fieldset_contents = internal constant [64 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i32 0, i32 0)], align 16
@.str.85 = private unnamed_addr constant [5 x i8] c"font\00", align 1
@.str.86 = private unnamed_addr constant [22 x i8] c"local change to font \00", align 1
@font_attrs = internal constant [10 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i32 0, i32 0), i8* null], align 16
@.str.87 = private unnamed_addr constant [5 x i8] c"form\00", align 1
@.str.88 = private unnamed_addr constant [18 x i8] c"interactive form \00", align 1
@form_contents = internal constant [62 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* null], align 16
@form_attrs = internal constant [23 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.264, i32 0, i32 0), i8* null], align 16
@action_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.265, i32 0, i32 0), i8* null], align 16
@.str.89 = private unnamed_addr constant [6 x i8] c"frame\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"subwindow \00", align 1
@frame_attrs = internal constant [13 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i32 0, i32 0), i8* null], align 16
@.str.91 = private unnamed_addr constant [9 x i8] c"frameset\00", align 1
@.str.92 = private unnamed_addr constant [19 x i8] c"window subdivision\00", align 1
@frameset_contents = internal constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* null], align 16
@.str.93 = private unnamed_addr constant [9 x i8] c"noframes\00", align 1
@frameset_attrs = internal constant [9 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.237, i32 0, i32 0), i8* null], align 16
@.str.94 = private unnamed_addr constant [3 x i8] c"h1\00", align 1
@.str.95 = private unnamed_addr constant [9 x i8] c"heading \00", align 1
@.str.96 = private unnamed_addr constant [3 x i8] c"h2\00", align 1
@.str.97 = private unnamed_addr constant [3 x i8] c"h3\00", align 1
@.str.98 = private unnamed_addr constant [3 x i8] c"h4\00", align 1
@.str.99 = private unnamed_addr constant [3 x i8] c"h5\00", align 1
@.str.100 = private unnamed_addr constant [3 x i8] c"h6\00", align 1
@.str.101 = private unnamed_addr constant [5 x i8] c"head\00", align 1
@.str.102 = private unnamed_addr constant [15 x i8] c"document head \00", align 1
@head_contents = internal constant [9 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* null], align 16
@head_attrs = internal constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.273, i32 0, i32 0), i8* null], align 16
@.str.103 = private unnamed_addr constant [3 x i8] c"hr\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"horizontal rule \00", align 1
@hr_depr = internal constant [5 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.274, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* null], align 16
@.str.105 = private unnamed_addr constant [23 x i8] c"document root element \00", align 1
@html_content = internal constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0), i8* null], align 16
@i18n_attrs = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* null], align 16
@version_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.275, i32 0, i32 0), i8* null], align 16
@.str.106 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.107 = private unnamed_addr constant [18 x i8] c"italic text style\00", align 1
@.str.108 = private unnamed_addr constant [7 x i8] c"iframe\00", align 1
@.str.109 = private unnamed_addr constant [18 x i8] c"inline subwindow \00", align 1
@iframe_attrs = internal constant [15 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* null], align 16
@.str.110 = private unnamed_addr constant [4 x i8] c"img\00", align 1
@.str.111 = private unnamed_addr constant [16 x i8] c"embedded image \00", align 1
@img_attrs = internal constant [22 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.276, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.277, i32 0, i32 0), i8* null], align 16
@src_alt_attrs = internal constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.226, i32 0, i32 0), i8* null], align 16
@.str.112 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.113 = private unnamed_addr constant [14 x i8] c"form control \00", align 1
@input_attrs = internal constant [35 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.280, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.276, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.261, i32 0, i32 0), i8* null], align 16
@.str.114 = private unnamed_addr constant [4 x i8] c"ins\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c"inserted text\00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c"isindex\00", align 1
@.str.117 = private unnamed_addr constant [20 x i8] c"single line prompt \00", align 1
@prompt_attrs = internal constant [8 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.283, i32 0, i32 0), i8* null], align 16
@.str.118 = private unnamed_addr constant [4 x i8] c"kbd\00", align 1
@.str.119 = private unnamed_addr constant [31 x i8] c"text to be entered by the user\00", align 1
@.str.120 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@.str.121 = private unnamed_addr constant [23 x i8] c"form field label text \00", align 1
@label_attrs = internal constant [20 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* null], align 16
@.str.122 = private unnamed_addr constant [7 x i8] c"legend\00", align 1
@.str.123 = private unnamed_addr constant [17 x i8] c"fieldset legend \00", align 1
@legend_attrs = internal constant [17 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i8* null], align 16
@.str.124 = private unnamed_addr constant [11 x i8] c"list item \00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.126 = private unnamed_addr constant [26 x i8] c"a media-independent link \00", align 1
@link_attrs = internal constant [23 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i32 0, i32 0), i8* null], align 16
@.str.127 = private unnamed_addr constant [4 x i8] c"map\00", align 1
@.str.128 = private unnamed_addr constant [23 x i8] c"client-side image map \00", align 1
@map_contents = internal constant [26 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* null], align 16
@name_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* null], align 16
@.str.129 = private unnamed_addr constant [5 x i8] c"menu\00", align 1
@.str.130 = private unnamed_addr constant [11 x i8] c"menu list \00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"meta\00", align 1
@.str.132 = private unnamed_addr constant [25 x i8] c"generic metainformation \00", align 1
@meta_attrs = internal constant [7 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.210, i32 0, i32 0), i8* null], align 16
@content_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.288, i32 0, i32 0), i8* null], align 16
@.str.133 = private unnamed_addr constant [59 x i8] c"alternate content container for non frame-based rendering \00", align 1
@noframes_content = internal constant [65 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* null], align 16
@.str.134 = private unnamed_addr constant [9 x i8] c"noscript\00", align 1
@.str.135 = private unnamed_addr constant [60 x i8] c"alternate content container for non script-based rendering \00", align 1
@.str.136 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@object_contents = internal constant [65 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i8* null], align 16
@object_attrs = internal constant [29 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.220, i32 0, i32 0), i8* null], align 16
@object_depr = internal constant [5 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.231, i32 0, i32 0), i8* null], align 16
@.str.137 = private unnamed_addr constant [3 x i8] c"ol\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"ordered list \00", align 1
@li_elt = internal constant [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8* null], align 16
@ol_attrs = internal constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i8* null], align 16
@.str.139 = private unnamed_addr constant [9 x i8] c"optgroup\00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"option group \00", align 1
@option_elt = internal constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), i8* null], align 16
@.str.141 = private unnamed_addr constant [7 x i8] c"option\00", align 1
@optgroup_attrs = internal constant [17 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), i8* null], align 16
@label_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* null], align 16
@.str.142 = private unnamed_addr constant [19 x i8] c"selectable choice \00", align 1
@html_pcdata = internal constant [1 x i8*] zeroinitializer, align 8
@option_attrs = internal constant [20 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i8* null], align 16
@.str.143 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.144 = private unnamed_addr constant [11 x i8] c"paragraph \00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"param\00", align 1
@.str.146 = private unnamed_addr constant [22 x i8] c"named property value \00", align 1
@param_attrs = internal constant [5 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* null], align 16
@.str.147 = private unnamed_addr constant [4 x i8] c"pre\00", align 1
@.str.148 = private unnamed_addr constant [19 x i8] c"preformatted text \00", align 1
@pre_content = internal constant [25 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* null], align 16
@width_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* null], align 16
@.str.149 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.150 = private unnamed_addr constant [24 x i8] c"short inline quotation \00", align 1
@.str.151 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.152 = private unnamed_addr constant [26 x i8] c"strike-through text style\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"samp\00", align 1
@.str.154 = private unnamed_addr constant [37 x i8] c"sample program output, scripts, etc.\00", align 1
@.str.155 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str.156 = private unnamed_addr constant [19 x i8] c"script statements \00", align 1
@script_attrs = internal constant [6 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.284, i32 0, i32 0), i8* null], align 16
@language_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.299, i32 0, i32 0), i8* null], align 16
@type_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* null], align 16
@.str.157 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.158 = private unnamed_addr constant [17 x i8] c"option selector \00", align 1
@select_content = internal constant [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), i8* null], align 16
@select_attrs = internal constant [24 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.282, i32 0, i32 0), i8* null], align 16
@.str.159 = private unnamed_addr constant [6 x i8] c"small\00", align 1
@.str.160 = private unnamed_addr constant [17 x i8] c"small text style\00", align 1
@.str.161 = private unnamed_addr constant [5 x i8] c"span\00", align 1
@.str.162 = private unnamed_addr constant [34 x i8] c"generic language/style container \00", align 1
@.str.163 = private unnamed_addr constant [7 x i8] c"strike\00", align 1
@.str.164 = private unnamed_addr constant [20 x i8] c"strike-through text\00", align 1
@.str.165 = private unnamed_addr constant [7 x i8] c"strong\00", align 1
@.str.166 = private unnamed_addr constant [16 x i8] c"strong emphasis\00", align 1
@.str.167 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.168 = private unnamed_addr constant [12 x i8] c"style info \00", align 1
@style_attrs = internal constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* null], align 16
@.str.169 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"subscript\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c"sup\00", align 1
@.str.172 = private unnamed_addr constant [13 x i8] c"superscript \00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@table_contents = internal constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8* null], align 16
@.str.174 = private unnamed_addr constant [3 x i8] c"tr\00", align 1
@table_attrs = internal constant [24 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.305, i32 0, i32 0), i8* null], align 16
@table_depr = internal constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.239, i32 0, i32 0), i8* null], align 16
@.str.175 = private unnamed_addr constant [6 x i8] c"tbody\00", align 1
@.str.176 = private unnamed_addr constant [12 x i8] c"table body \00", align 1
@tr_elt = internal constant [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8* null], align 16
@talign_attrs = internal constant [20 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0), i8* null], align 16
@.str.177 = private unnamed_addr constant [3 x i8] c"td\00", align 1
@.str.178 = private unnamed_addr constant [16 x i8] c"table data cell\00", align 1
@th_td_attr = internal constant [26 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0), i8* null], align 16
@th_td_depr = internal constant [5 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i8* null], align 16
@.str.179 = private unnamed_addr constant [9 x i8] c"textarea\00", align 1
@.str.180 = private unnamed_addr constant [23 x i8] c"multi-line text field \00", align 1
@textarea_attrs = internal constant [25 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.279, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.282, i32 0, i32 0), i8* null], align 16
@rows_cols_attr = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i32 0, i32 0), i8* null], align 16
@.str.181 = private unnamed_addr constant [6 x i8] c"tfoot\00", align 1
@.str.182 = private unnamed_addr constant [14 x i8] c"table footer \00", align 1
@.str.183 = private unnamed_addr constant [3 x i8] c"th\00", align 1
@.str.184 = private unnamed_addr constant [18 x i8] c"table header cell\00", align 1
@.str.185 = private unnamed_addr constant [6 x i8] c"thead\00", align 1
@.str.186 = private unnamed_addr constant [14 x i8] c"table header \00", align 1
@.str.187 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.188 = private unnamed_addr constant [16 x i8] c"document title \00", align 1
@.str.189 = private unnamed_addr constant [11 x i8] c"table row \00", align 1
@tr_contents = internal constant [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8* null], align 16
@bgcolor_attr = internal constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.239, i32 0, i32 0), i8* null], align 16
@.str.190 = private unnamed_addr constant [3 x i8] c"tt\00", align 1
@.str.191 = private unnamed_addr constant [34 x i8] c"teletype or monospaced text style\00", align 1
@.str.192 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.193 = private unnamed_addr constant [22 x i8] c"underlined text style\00", align 1
@.str.194 = private unnamed_addr constant [3 x i8] c"ul\00", align 1
@.str.195 = private unnamed_addr constant [16 x i8] c"unordered list \00", align 1
@ul_depr = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.250, i32 0, i32 0), i8* null], align 16
@.str.196 = private unnamed_addr constant [4 x i8] c"var\00", align 1
@.str.197 = private unnamed_addr constant [43 x i8] c"instance of a variable or program argument\00", align 1
@.str.198 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.200 = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.201 = private unnamed_addr constant [8 x i8] c"onclick\00", align 1
@.str.202 = private unnamed_addr constant [11 x i8] c"ondblclick\00", align 1
@.str.203 = private unnamed_addr constant [12 x i8] c"onmousedown\00", align 1
@.str.204 = private unnamed_addr constant [10 x i8] c"onmouseup\00", align 1
@.str.205 = private unnamed_addr constant [12 x i8] c"onmouseover\00", align 1
@.str.206 = private unnamed_addr constant [11 x i8] c"onmouseout\00", align 1
@.str.207 = private unnamed_addr constant [11 x i8] c"onkeypress\00", align 1
@.str.208 = private unnamed_addr constant [10 x i8] c"onkeydown\00", align 1
@.str.209 = private unnamed_addr constant [8 x i8] c"onkeyup\00", align 1
@.str.210 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@.str.211 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.212 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.213 = private unnamed_addr constant [5 x i8] c"href\00", align 1
@.str.214 = private unnamed_addr constant [9 x i8] c"hreflang\00", align 1
@.str.215 = private unnamed_addr constant [4 x i8] c"rel\00", align 1
@.str.216 = private unnamed_addr constant [4 x i8] c"rev\00", align 1
@.str.217 = private unnamed_addr constant [10 x i8] c"accesskey\00", align 1
@.str.218 = private unnamed_addr constant [6 x i8] c"shape\00", align 1
@.str.219 = private unnamed_addr constant [7 x i8] c"coords\00", align 1
@.str.220 = private unnamed_addr constant [9 x i8] c"tabindex\00", align 1
@.str.221 = private unnamed_addr constant [8 x i8] c"onfocus\00", align 1
@.str.222 = private unnamed_addr constant [7 x i8] c"onblur\00", align 1
@.str.223 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.224 = private unnamed_addr constant [9 x i8] c"codebase\00", align 1
@.str.225 = private unnamed_addr constant [8 x i8] c"archive\00", align 1
@.str.226 = private unnamed_addr constant [4 x i8] c"alt\00", align 1
@.str.227 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.228 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.229 = private unnamed_addr constant [6 x i8] c"align\00", align 1
@.str.230 = private unnamed_addr constant [7 x i8] c"hspace\00", align 1
@.str.231 = private unnamed_addr constant [7 x i8] c"vspace\00", align 1
@.str.232 = private unnamed_addr constant [7 x i8] c"nohref\00", align 1
@.str.233 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.234 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.235 = private unnamed_addr constant [5 x i8] c"face\00", align 1
@.str.236 = private unnamed_addr constant [7 x i8] c"onload\00", align 1
@.str.237 = private unnamed_addr constant [9 x i8] c"onunload\00", align 1
@.str.238 = private unnamed_addr constant [11 x i8] c"background\00", align 1
@.str.239 = private unnamed_addr constant [8 x i8] c"bgcolor\00", align 1
@.str.240 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.241 = private unnamed_addr constant [6 x i8] c"vlink\00", align 1
@.str.242 = private unnamed_addr constant [6 x i8] c"alink\00", align 1
@.str.243 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.244 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.245 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.246 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.247 = private unnamed_addr constant [8 x i8] c"charoff\00", align 1
@.str.248 = private unnamed_addr constant [7 x i8] c"valign\00", align 1
@.str.249 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.250 = private unnamed_addr constant [8 x i8] c"compact\00", align 1
@.str.251 = private unnamed_addr constant [7 x i8] c"border\00", align 1
@.str.252 = private unnamed_addr constant [12 x i8] c"frameborder\00", align 1
@.str.253 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.254 = private unnamed_addr constant [8 x i8] c"palette\00", align 1
@.str.255 = private unnamed_addr constant [12 x i8] c"pluginspace\00", align 1
@.str.256 = private unnamed_addr constant [10 x i8] c"pluginurl\00", align 1
@.str.257 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.258 = private unnamed_addr constant [6 x i8] c"units\00", align 1
@.str.259 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str.260 = private unnamed_addr constant [8 x i8] c"enctype\00", align 1
@.str.261 = private unnamed_addr constant [7 x i8] c"accept\00", align 1
@.str.262 = private unnamed_addr constant [9 x i8] c"onsubmit\00", align 1
@.str.263 = private unnamed_addr constant [8 x i8] c"onreset\00", align 1
@.str.264 = private unnamed_addr constant [15 x i8] c"accept-charset\00", align 1
@.str.265 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.266 = private unnamed_addr constant [9 x i8] c"longdesc\00", align 1
@.str.267 = private unnamed_addr constant [12 x i8] c"marginwidth\00", align 1
@.str.268 = private unnamed_addr constant [13 x i8] c"marginheight\00", align 1
@.str.269 = private unnamed_addr constant [9 x i8] c"noresize\00", align 1
@.str.270 = private unnamed_addr constant [10 x i8] c"scrolling\00", align 1
@.str.271 = private unnamed_addr constant [5 x i8] c"rows\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c"cols\00", align 1
@.str.273 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@.str.274 = private unnamed_addr constant [8 x i8] c"noshade\00", align 1
@.str.275 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.276 = private unnamed_addr constant [7 x i8] c"usemap\00", align 1
@.str.277 = private unnamed_addr constant [6 x i8] c"ismap\00", align 1
@.str.278 = private unnamed_addr constant [8 x i8] c"checked\00", align 1
@.str.279 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.280 = private unnamed_addr constant [10 x i8] c"maxlength\00", align 1
@.str.281 = private unnamed_addr constant [9 x i8] c"onselect\00", align 1
@.str.282 = private unnamed_addr constant [9 x i8] c"onchange\00", align 1
@.str.283 = private unnamed_addr constant [7 x i8] c"prompt\00", align 1
@.str.284 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.285 = private unnamed_addr constant [6 x i8] c"media\00", align 1
@.str.286 = private unnamed_addr constant [11 x i8] c"http-equiv\00", align 1
@.str.287 = private unnamed_addr constant [7 x i8] c"scheme\00", align 1
@.str.288 = private unnamed_addr constant [8 x i8] c"content\00", align 1
@.str.289 = private unnamed_addr constant [8 x i8] c"declare\00", align 1
@.str.290 = private unnamed_addr constant [8 x i8] c"classid\00", align 1
@.str.291 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.292 = private unnamed_addr constant [9 x i8] c"codetype\00", align 1
@.str.293 = private unnamed_addr constant [8 x i8] c"standby\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.295 = private unnamed_addr constant [9 x i8] c"selected\00", align 1
@.str.296 = private unnamed_addr constant [10 x i8] c"valuetype\00", align 1
@.str.297 = private unnamed_addr constant [6 x i8] c"defer\00", align 1
@.str.298 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@.str.299 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.300 = private unnamed_addr constant [9 x i8] c"multiple\00", align 1
@.str.301 = private unnamed_addr constant [8 x i8] c"summary\00", align 1
@.str.302 = private unnamed_addr constant [6 x i8] c"rules\00", align 1
@.str.303 = private unnamed_addr constant [12 x i8] c"cellspacing\00", align 1
@.str.304 = private unnamed_addr constant [12 x i8] c"cellpadding\00", align 1
@.str.305 = private unnamed_addr constant [13 x i8] c"datapagesize\00", align 1
@.str.306 = private unnamed_addr constant [5 x i8] c"axis\00", align 1
@.str.307 = private unnamed_addr constant [8 x i8] c"headers\00", align 1
@.str.308 = private unnamed_addr constant [6 x i8] c"scope\00", align 1
@.str.309 = private unnamed_addr constant [8 x i8] c"rowspan\00", align 1
@.str.310 = private unnamed_addr constant [8 x i8] c"colspan\00", align 1
@.str.311 = private unnamed_addr constant [7 x i8] c"nowrap\00", align 1
@htmlStartClose = internal constant [251 x %struct.htmlStartCloseEntry] [%struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, %struct.htmlStartCloseEntry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0) }], align 16
@.str.312 = private unnamed_addr constant [8 x i8] c"listing\00", align 1
@.str.313 = private unnamed_addr constant [4 x i8] c"xmp\00", align 1
@.str.314 = private unnamed_addr constant [12 x i8] c"onmousemove\00", align 1
@.str.315 = private unnamed_addr constant [5 x i8] c"quot\00", align 1
@.str.316 = private unnamed_addr constant [42 x i8] c"quotation mark = APL quote, U+0022 ISOnum\00", align 1
@.str.317 = private unnamed_addr constant [4 x i8] c"amp\00", align 1
@.str.318 = private unnamed_addr constant [25 x i8] c"ampersand, U+0026 ISOnum\00", align 1
@.str.319 = private unnamed_addr constant [5 x i8] c"apos\00", align 1
@.str.320 = private unnamed_addr constant [13 x i8] c"single quote\00", align 1
@.str.321 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.322 = private unnamed_addr constant [30 x i8] c"less-than sign, U+003C ISOnum\00", align 1
@.str.323 = private unnamed_addr constant [3 x i8] c"gt\00", align 1
@.str.324 = private unnamed_addr constant [33 x i8] c"greater-than sign, U+003E ISOnum\00", align 1
@.str.325 = private unnamed_addr constant [5 x i8] c"nbsp\00", align 1
@.str.326 = private unnamed_addr constant [51 x i8] c"no-break space = non-breaking space, U+00A0 ISOnum\00", align 1
@.str.327 = private unnamed_addr constant [6 x i8] c"iexcl\00", align 1
@.str.328 = private unnamed_addr constant [41 x i8] c"inverted exclamation mark, U+00A1 ISOnum\00", align 1
@.str.329 = private unnamed_addr constant [5 x i8] c"cent\00", align 1
@.str.330 = private unnamed_addr constant [25 x i8] c"cent sign, U+00A2 ISOnum\00", align 1
@.str.331 = private unnamed_addr constant [6 x i8] c"pound\00", align 1
@.str.332 = private unnamed_addr constant [26 x i8] c"pound sign, U+00A3 ISOnum\00", align 1
@.str.333 = private unnamed_addr constant [7 x i8] c"curren\00", align 1
@.str.334 = private unnamed_addr constant [29 x i8] c"currency sign, U+00A4 ISOnum\00", align 1
@.str.335 = private unnamed_addr constant [4 x i8] c"yen\00", align 1
@.str.336 = private unnamed_addr constant [36 x i8] c"yen sign = yuan sign, U+00A5 ISOnum\00", align 1
@.str.337 = private unnamed_addr constant [7 x i8] c"brvbar\00", align 1
@.str.338 = private unnamed_addr constant [48 x i8] c"broken bar = broken vertical bar, U+00A6 ISOnum\00", align 1
@.str.339 = private unnamed_addr constant [5 x i8] c"sect\00", align 1
@.str.340 = private unnamed_addr constant [28 x i8] c"section sign, U+00A7 ISOnum\00", align 1
@.str.341 = private unnamed_addr constant [4 x i8] c"uml\00", align 1
@.str.342 = private unnamed_addr constant [45 x i8] c"diaeresis = spacing diaeresis, U+00A8 ISOdia\00", align 1
@.str.343 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.344 = private unnamed_addr constant [30 x i8] c"copyright sign, U+00A9 ISOnum\00", align 1
@.str.345 = private unnamed_addr constant [5 x i8] c"ordf\00", align 1
@.str.346 = private unnamed_addr constant [42 x i8] c"feminine ordinal indicator, U+00AA ISOnum\00", align 1
@.str.347 = private unnamed_addr constant [6 x i8] c"laquo\00", align 1
@.str.348 = private unnamed_addr constant [83 x i8] c"left-pointing double angle quotation mark = left pointing guillemet, U+00AB ISOnum\00", align 1
@.str.349 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.350 = private unnamed_addr constant [24 x i8] c"not sign, U+00AC ISOnum\00", align 1
@.str.351 = private unnamed_addr constant [4 x i8] c"shy\00", align 1
@.str.352 = private unnamed_addr constant [50 x i8] c"soft hyphen = discretionary hyphen, U+00AD ISOnum\00", align 1
@.str.353 = private unnamed_addr constant [4 x i8] c"reg\00", align 1
@.str.354 = private unnamed_addr constant [60 x i8] c"registered sign = registered trade mark sign, U+00AE ISOnum\00", align 1
@.str.355 = private unnamed_addr constant [5 x i8] c"macr\00", align 1
@.str.356 = private unnamed_addr constant [64 x i8] c"macron = spacing macron = overline = APL overbar, U+00AF ISOdia\00", align 1
@.str.357 = private unnamed_addr constant [4 x i8] c"deg\00", align 1
@.str.358 = private unnamed_addr constant [27 x i8] c"degree sign, U+00B0 ISOnum\00", align 1
@.str.359 = private unnamed_addr constant [7 x i8] c"plusmn\00", align 1
@.str.360 = private unnamed_addr constant [52 x i8] c"plus-minus sign = plus-or-minus sign, U+00B1 ISOnum\00", align 1
@.str.361 = private unnamed_addr constant [5 x i8] c"sup2\00", align 1
@.str.362 = private unnamed_addr constant [65 x i8] c"superscript two = superscript digit two = squared, U+00B2 ISOnum\00", align 1
@.str.363 = private unnamed_addr constant [5 x i8] c"sup3\00", align 1
@.str.364 = private unnamed_addr constant [67 x i8] c"superscript three = superscript digit three = cubed, U+00B3 ISOnum\00", align 1
@.str.365 = private unnamed_addr constant [6 x i8] c"acute\00", align 1
@.str.366 = private unnamed_addr constant [44 x i8] c"acute accent = spacing acute, U+00B4 ISOdia\00", align 1
@.str.367 = private unnamed_addr constant [6 x i8] c"micro\00", align 1
@.str.368 = private unnamed_addr constant [26 x i8] c"micro sign, U+00B5 ISOnum\00", align 1
@.str.369 = private unnamed_addr constant [5 x i8] c"para\00", align 1
@.str.370 = private unnamed_addr constant [45 x i8] c"pilcrow sign = paragraph sign, U+00B6 ISOnum\00", align 1
@.str.371 = private unnamed_addr constant [7 x i8] c"middot\00", align 1
@.str.372 = private unnamed_addr constant [60 x i8] c"middle dot = Georgian comma Greek middle dot, U+00B7 ISOnum\00", align 1
@.str.373 = private unnamed_addr constant [6 x i8] c"cedil\00", align 1
@.str.374 = private unnamed_addr constant [41 x i8] c"cedilla = spacing cedilla, U+00B8 ISOdia\00", align 1
@.str.375 = private unnamed_addr constant [5 x i8] c"sup1\00", align 1
@.str.376 = private unnamed_addr constant [55 x i8] c"superscript one = superscript digit one, U+00B9 ISOnum\00", align 1
@.str.377 = private unnamed_addr constant [5 x i8] c"ordm\00", align 1
@.str.378 = private unnamed_addr constant [43 x i8] c"masculine ordinal indicator, U+00BA ISOnum\00", align 1
@.str.379 = private unnamed_addr constant [6 x i8] c"raquo\00", align 1
@.str.380 = private unnamed_addr constant [83 x i8] c"right-pointing double angle quotation mark right pointing guillemet, U+00BB ISOnum\00", align 1
@.str.381 = private unnamed_addr constant [7 x i8] c"frac14\00", align 1
@.str.382 = private unnamed_addr constant [66 x i8] c"vulgar fraction one quarter = fraction one quarter, U+00BC ISOnum\00", align 1
@.str.383 = private unnamed_addr constant [7 x i8] c"frac12\00", align 1
@.str.384 = private unnamed_addr constant [60 x i8] c"vulgar fraction one half = fraction one half, U+00BD ISOnum\00", align 1
@.str.385 = private unnamed_addr constant [7 x i8] c"frac34\00", align 1
@.str.386 = private unnamed_addr constant [72 x i8] c"vulgar fraction three quarters = fraction three quarters, U+00BE ISOnum\00", align 1
@.str.387 = private unnamed_addr constant [7 x i8] c"iquest\00", align 1
@.str.388 = private unnamed_addr constant [61 x i8] c"inverted question mark = turned question mark, U+00BF ISOnum\00", align 1
@.str.389 = private unnamed_addr constant [7 x i8] c"Agrave\00", align 1
@.str.390 = private unnamed_addr constant [81 x i8] c"latin capital letter A with grave = latin capital letter A grave, U+00C0 ISOlat1\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"Aacute\00", align 1
@.str.392 = private unnamed_addr constant [50 x i8] c"latin capital letter A with acute, U+00C1 ISOlat1\00", align 1
@.str.393 = private unnamed_addr constant [6 x i8] c"Acirc\00", align 1
@.str.394 = private unnamed_addr constant [55 x i8] c"latin capital letter A with circumflex, U+00C2 ISOlat1\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"Atilde\00", align 1
@.str.396 = private unnamed_addr constant [50 x i8] c"latin capital letter A with tilde, U+00C3 ISOlat1\00", align 1
@.str.397 = private unnamed_addr constant [5 x i8] c"Auml\00", align 1
@.str.398 = private unnamed_addr constant [54 x i8] c"latin capital letter A with diaeresis, U+00C4 ISOlat1\00", align 1
@.str.399 = private unnamed_addr constant [6 x i8] c"Aring\00", align 1
@.str.400 = private unnamed_addr constant [85 x i8] c"latin capital letter A with ring above = latin capital letter A ring, U+00C5 ISOlat1\00", align 1
@.str.401 = private unnamed_addr constant [6 x i8] c"AElig\00", align 1
@.str.402 = private unnamed_addr constant [68 x i8] c"latin capital letter AE = latin capital ligature AE, U+00C6 ISOlat1\00", align 1
@.str.403 = private unnamed_addr constant [7 x i8] c"Ccedil\00", align 1
@.str.404 = private unnamed_addr constant [52 x i8] c"latin capital letter C with cedilla, U+00C7 ISOlat1\00", align 1
@.str.405 = private unnamed_addr constant [7 x i8] c"Egrave\00", align 1
@.str.406 = private unnamed_addr constant [50 x i8] c"latin capital letter E with grave, U+00C8 ISOlat1\00", align 1
@.str.407 = private unnamed_addr constant [7 x i8] c"Eacute\00", align 1
@.str.408 = private unnamed_addr constant [50 x i8] c"latin capital letter E with acute, U+00C9 ISOlat1\00", align 1
@.str.409 = private unnamed_addr constant [6 x i8] c"Ecirc\00", align 1
@.str.410 = private unnamed_addr constant [55 x i8] c"latin capital letter E with circumflex, U+00CA ISOlat1\00", align 1
@.str.411 = private unnamed_addr constant [5 x i8] c"Euml\00", align 1
@.str.412 = private unnamed_addr constant [54 x i8] c"latin capital letter E with diaeresis, U+00CB ISOlat1\00", align 1
@.str.413 = private unnamed_addr constant [7 x i8] c"Igrave\00", align 1
@.str.414 = private unnamed_addr constant [50 x i8] c"latin capital letter I with grave, U+00CC ISOlat1\00", align 1
@.str.415 = private unnamed_addr constant [7 x i8] c"Iacute\00", align 1
@.str.416 = private unnamed_addr constant [50 x i8] c"latin capital letter I with acute, U+00CD ISOlat1\00", align 1
@.str.417 = private unnamed_addr constant [6 x i8] c"Icirc\00", align 1
@.str.418 = private unnamed_addr constant [55 x i8] c"latin capital letter I with circumflex, U+00CE ISOlat1\00", align 1
@.str.419 = private unnamed_addr constant [5 x i8] c"Iuml\00", align 1
@.str.420 = private unnamed_addr constant [54 x i8] c"latin capital letter I with diaeresis, U+00CF ISOlat1\00", align 1
@.str.421 = private unnamed_addr constant [4 x i8] c"ETH\00", align 1
@.str.422 = private unnamed_addr constant [41 x i8] c"latin capital letter ETH, U+00D0 ISOlat1\00", align 1
@.str.423 = private unnamed_addr constant [7 x i8] c"Ntilde\00", align 1
@.str.424 = private unnamed_addr constant [50 x i8] c"latin capital letter N with tilde, U+00D1 ISOlat1\00", align 1
@.str.425 = private unnamed_addr constant [7 x i8] c"Ograve\00", align 1
@.str.426 = private unnamed_addr constant [50 x i8] c"latin capital letter O with grave, U+00D2 ISOlat1\00", align 1
@.str.427 = private unnamed_addr constant [7 x i8] c"Oacute\00", align 1
@.str.428 = private unnamed_addr constant [50 x i8] c"latin capital letter O with acute, U+00D3 ISOlat1\00", align 1
@.str.429 = private unnamed_addr constant [6 x i8] c"Ocirc\00", align 1
@.str.430 = private unnamed_addr constant [55 x i8] c"latin capital letter O with circumflex, U+00D4 ISOlat1\00", align 1
@.str.431 = private unnamed_addr constant [7 x i8] c"Otilde\00", align 1
@.str.432 = private unnamed_addr constant [50 x i8] c"latin capital letter O with tilde, U+00D5 ISOlat1\00", align 1
@.str.433 = private unnamed_addr constant [5 x i8] c"Ouml\00", align 1
@.str.434 = private unnamed_addr constant [54 x i8] c"latin capital letter O with diaeresis, U+00D6 ISOlat1\00", align 1
@.str.435 = private unnamed_addr constant [6 x i8] c"times\00", align 1
@.str.436 = private unnamed_addr constant [35 x i8] c"multiplication sign, U+00D7 ISOnum\00", align 1
@.str.437 = private unnamed_addr constant [7 x i8] c"Oslash\00", align 1
@.str.438 = private unnamed_addr constant [80 x i8] c"latin capital letter O with stroke latin capital letter O slash, U+00D8 ISOlat1\00", align 1
@.str.439 = private unnamed_addr constant [7 x i8] c"Ugrave\00", align 1
@.str.440 = private unnamed_addr constant [50 x i8] c"latin capital letter U with grave, U+00D9 ISOlat1\00", align 1
@.str.441 = private unnamed_addr constant [7 x i8] c"Uacute\00", align 1
@.str.442 = private unnamed_addr constant [50 x i8] c"latin capital letter U with acute, U+00DA ISOlat1\00", align 1
@.str.443 = private unnamed_addr constant [6 x i8] c"Ucirc\00", align 1
@.str.444 = private unnamed_addr constant [55 x i8] c"latin capital letter U with circumflex, U+00DB ISOlat1\00", align 1
@.str.445 = private unnamed_addr constant [5 x i8] c"Uuml\00", align 1
@.str.446 = private unnamed_addr constant [54 x i8] c"latin capital letter U with diaeresis, U+00DC ISOlat1\00", align 1
@.str.447 = private unnamed_addr constant [7 x i8] c"Yacute\00", align 1
@.str.448 = private unnamed_addr constant [50 x i8] c"latin capital letter Y with acute, U+00DD ISOlat1\00", align 1
@.str.449 = private unnamed_addr constant [6 x i8] c"THORN\00", align 1
@.str.450 = private unnamed_addr constant [43 x i8] c"latin capital letter THORN, U+00DE ISOlat1\00", align 1
@.str.451 = private unnamed_addr constant [6 x i8] c"szlig\00", align 1
@.str.452 = private unnamed_addr constant [53 x i8] c"latin small letter sharp s = ess-zed, U+00DF ISOlat1\00", align 1
@.str.453 = private unnamed_addr constant [7 x i8] c"agrave\00", align 1
@.str.454 = private unnamed_addr constant [77 x i8] c"latin small letter a with grave = latin small letter a grave, U+00E0 ISOlat1\00", align 1
@.str.455 = private unnamed_addr constant [7 x i8] c"aacute\00", align 1
@.str.456 = private unnamed_addr constant [48 x i8] c"latin small letter a with acute, U+00E1 ISOlat1\00", align 1
@.str.457 = private unnamed_addr constant [6 x i8] c"acirc\00", align 1
@.str.458 = private unnamed_addr constant [53 x i8] c"latin small letter a with circumflex, U+00E2 ISOlat1\00", align 1
@.str.459 = private unnamed_addr constant [7 x i8] c"atilde\00", align 1
@.str.460 = private unnamed_addr constant [48 x i8] c"latin small letter a with tilde, U+00E3 ISOlat1\00", align 1
@.str.461 = private unnamed_addr constant [5 x i8] c"auml\00", align 1
@.str.462 = private unnamed_addr constant [52 x i8] c"latin small letter a with diaeresis, U+00E4 ISOlat1\00", align 1
@.str.463 = private unnamed_addr constant [6 x i8] c"aring\00", align 1
@.str.464 = private unnamed_addr constant [81 x i8] c"latin small letter a with ring above = latin small letter a ring, U+00E5 ISOlat1\00", align 1
@.str.465 = private unnamed_addr constant [6 x i8] c"aelig\00", align 1
@.str.466 = private unnamed_addr constant [64 x i8] c"latin small letter ae = latin small ligature ae, U+00E6 ISOlat1\00", align 1
@.str.467 = private unnamed_addr constant [7 x i8] c"ccedil\00", align 1
@.str.468 = private unnamed_addr constant [50 x i8] c"latin small letter c with cedilla, U+00E7 ISOlat1\00", align 1
@.str.469 = private unnamed_addr constant [7 x i8] c"egrave\00", align 1
@.str.470 = private unnamed_addr constant [48 x i8] c"latin small letter e with grave, U+00E8 ISOlat1\00", align 1
@.str.471 = private unnamed_addr constant [7 x i8] c"eacute\00", align 1
@.str.472 = private unnamed_addr constant [48 x i8] c"latin small letter e with acute, U+00E9 ISOlat1\00", align 1
@.str.473 = private unnamed_addr constant [6 x i8] c"ecirc\00", align 1
@.str.474 = private unnamed_addr constant [53 x i8] c"latin small letter e with circumflex, U+00EA ISOlat1\00", align 1
@.str.475 = private unnamed_addr constant [5 x i8] c"euml\00", align 1
@.str.476 = private unnamed_addr constant [52 x i8] c"latin small letter e with diaeresis, U+00EB ISOlat1\00", align 1
@.str.477 = private unnamed_addr constant [7 x i8] c"igrave\00", align 1
@.str.478 = private unnamed_addr constant [48 x i8] c"latin small letter i with grave, U+00EC ISOlat1\00", align 1
@.str.479 = private unnamed_addr constant [7 x i8] c"iacute\00", align 1
@.str.480 = private unnamed_addr constant [48 x i8] c"latin small letter i with acute, U+00ED ISOlat1\00", align 1
@.str.481 = private unnamed_addr constant [6 x i8] c"icirc\00", align 1
@.str.482 = private unnamed_addr constant [53 x i8] c"latin small letter i with circumflex, U+00EE ISOlat1\00", align 1
@.str.483 = private unnamed_addr constant [5 x i8] c"iuml\00", align 1
@.str.484 = private unnamed_addr constant [52 x i8] c"latin small letter i with diaeresis, U+00EF ISOlat1\00", align 1
@.str.485 = private unnamed_addr constant [4 x i8] c"eth\00", align 1
@.str.486 = private unnamed_addr constant [39 x i8] c"latin small letter eth, U+00F0 ISOlat1\00", align 1
@.str.487 = private unnamed_addr constant [7 x i8] c"ntilde\00", align 1
@.str.488 = private unnamed_addr constant [48 x i8] c"latin small letter n with tilde, U+00F1 ISOlat1\00", align 1
@.str.489 = private unnamed_addr constant [7 x i8] c"ograve\00", align 1
@.str.490 = private unnamed_addr constant [48 x i8] c"latin small letter o with grave, U+00F2 ISOlat1\00", align 1
@.str.491 = private unnamed_addr constant [7 x i8] c"oacute\00", align 1
@.str.492 = private unnamed_addr constant [48 x i8] c"latin small letter o with acute, U+00F3 ISOlat1\00", align 1
@.str.493 = private unnamed_addr constant [6 x i8] c"ocirc\00", align 1
@.str.494 = private unnamed_addr constant [53 x i8] c"latin small letter o with circumflex, U+00F4 ISOlat1\00", align 1
@.str.495 = private unnamed_addr constant [7 x i8] c"otilde\00", align 1
@.str.496 = private unnamed_addr constant [48 x i8] c"latin small letter o with tilde, U+00F5 ISOlat1\00", align 1
@.str.497 = private unnamed_addr constant [5 x i8] c"ouml\00", align 1
@.str.498 = private unnamed_addr constant [52 x i8] c"latin small letter o with diaeresis, U+00F6 ISOlat1\00", align 1
@.str.499 = private unnamed_addr constant [7 x i8] c"divide\00", align 1
@.str.500 = private unnamed_addr constant [29 x i8] c"division sign, U+00F7 ISOnum\00", align 1
@.str.501 = private unnamed_addr constant [7 x i8] c"oslash\00", align 1
@.str.502 = private unnamed_addr constant [79 x i8] c"latin small letter o with stroke, = latin small letter o slash, U+00F8 ISOlat1\00", align 1
@.str.503 = private unnamed_addr constant [7 x i8] c"ugrave\00", align 1
@.str.504 = private unnamed_addr constant [48 x i8] c"latin small letter u with grave, U+00F9 ISOlat1\00", align 1
@.str.505 = private unnamed_addr constant [7 x i8] c"uacute\00", align 1
@.str.506 = private unnamed_addr constant [48 x i8] c"latin small letter u with acute, U+00FA ISOlat1\00", align 1
@.str.507 = private unnamed_addr constant [6 x i8] c"ucirc\00", align 1
@.str.508 = private unnamed_addr constant [53 x i8] c"latin small letter u with circumflex, U+00FB ISOlat1\00", align 1
@.str.509 = private unnamed_addr constant [5 x i8] c"uuml\00", align 1
@.str.510 = private unnamed_addr constant [52 x i8] c"latin small letter u with diaeresis, U+00FC ISOlat1\00", align 1
@.str.511 = private unnamed_addr constant [7 x i8] c"yacute\00", align 1
@.str.512 = private unnamed_addr constant [48 x i8] c"latin small letter y with acute, U+00FD ISOlat1\00", align 1
@.str.513 = private unnamed_addr constant [6 x i8] c"thorn\00", align 1
@.str.514 = private unnamed_addr constant [46 x i8] c"latin small letter thorn with, U+00FE ISOlat1\00", align 1
@.str.515 = private unnamed_addr constant [5 x i8] c"yuml\00", align 1
@.str.516 = private unnamed_addr constant [52 x i8] c"latin small letter y with diaeresis, U+00FF ISOlat1\00", align 1
@.str.517 = private unnamed_addr constant [6 x i8] c"OElig\00", align 1
@.str.518 = private unnamed_addr constant [42 x i8] c"latin capital ligature OE, U+0152 ISOlat2\00", align 1
@.str.519 = private unnamed_addr constant [6 x i8] c"oelig\00", align 1
@.str.520 = private unnamed_addr constant [40 x i8] c"latin small ligature oe, U+0153 ISOlat2\00", align 1
@.str.521 = private unnamed_addr constant [7 x i8] c"Scaron\00", align 1
@.str.522 = private unnamed_addr constant [50 x i8] c"latin capital letter S with caron, U+0160 ISOlat2\00", align 1
@.str.523 = private unnamed_addr constant [7 x i8] c"scaron\00", align 1
@.str.524 = private unnamed_addr constant [48 x i8] c"latin small letter s with caron, U+0161 ISOlat2\00", align 1
@.str.525 = private unnamed_addr constant [5 x i8] c"Yuml\00", align 1
@.str.526 = private unnamed_addr constant [54 x i8] c"latin capital letter Y with diaeresis, U+0178 ISOlat2\00", align 1
@.str.527 = private unnamed_addr constant [5 x i8] c"fnof\00", align 1
@.str.528 = private unnamed_addr constant [60 x i8] c"latin small f with hook = function = florin, U+0192 ISOtech\00", align 1
@.str.529 = private unnamed_addr constant [5 x i8] c"circ\00", align 1
@.str.530 = private unnamed_addr constant [49 x i8] c"modifier letter circumflex accent, U+02C6 ISOpub\00", align 1
@.str.531 = private unnamed_addr constant [6 x i8] c"tilde\00", align 1
@.str.532 = private unnamed_addr constant [27 x i8] c"small tilde, U+02DC ISOdia\00", align 1
@.str.533 = private unnamed_addr constant [6 x i8] c"Alpha\00", align 1
@.str.534 = private unnamed_addr constant [35 x i8] c"greek capital letter alpha, U+0391\00", align 1
@.str.535 = private unnamed_addr constant [5 x i8] c"Beta\00", align 1
@.str.536 = private unnamed_addr constant [34 x i8] c"greek capital letter beta, U+0392\00", align 1
@.str.537 = private unnamed_addr constant [6 x i8] c"Gamma\00", align 1
@.str.538 = private unnamed_addr constant [43 x i8] c"greek capital letter gamma, U+0393 ISOgrk3\00", align 1
@.str.539 = private unnamed_addr constant [6 x i8] c"Delta\00", align 1
@.str.540 = private unnamed_addr constant [43 x i8] c"greek capital letter delta, U+0394 ISOgrk3\00", align 1
@.str.541 = private unnamed_addr constant [8 x i8] c"Epsilon\00", align 1
@.str.542 = private unnamed_addr constant [37 x i8] c"greek capital letter epsilon, U+0395\00", align 1
@.str.543 = private unnamed_addr constant [5 x i8] c"Zeta\00", align 1
@.str.544 = private unnamed_addr constant [34 x i8] c"greek capital letter zeta, U+0396\00", align 1
@.str.545 = private unnamed_addr constant [4 x i8] c"Eta\00", align 1
@.str.546 = private unnamed_addr constant [33 x i8] c"greek capital letter eta, U+0397\00", align 1
@.str.547 = private unnamed_addr constant [6 x i8] c"Theta\00", align 1
@.str.548 = private unnamed_addr constant [43 x i8] c"greek capital letter theta, U+0398 ISOgrk3\00", align 1
@.str.549 = private unnamed_addr constant [5 x i8] c"Iota\00", align 1
@.str.550 = private unnamed_addr constant [34 x i8] c"greek capital letter iota, U+0399\00", align 1
@.str.551 = private unnamed_addr constant [6 x i8] c"Kappa\00", align 1
@.str.552 = private unnamed_addr constant [35 x i8] c"greek capital letter kappa, U+039A\00", align 1
@.str.553 = private unnamed_addr constant [7 x i8] c"Lambda\00", align 1
@.str.554 = private unnamed_addr constant [44 x i8] c"greek capital letter lambda, U+039B ISOgrk3\00", align 1
@.str.555 = private unnamed_addr constant [3 x i8] c"Mu\00", align 1
@.str.556 = private unnamed_addr constant [32 x i8] c"greek capital letter mu, U+039C\00", align 1
@.str.557 = private unnamed_addr constant [3 x i8] c"Nu\00", align 1
@.str.558 = private unnamed_addr constant [32 x i8] c"greek capital letter nu, U+039D\00", align 1
@.str.559 = private unnamed_addr constant [3 x i8] c"Xi\00", align 1
@.str.560 = private unnamed_addr constant [40 x i8] c"greek capital letter xi, U+039E ISOgrk3\00", align 1
@.str.561 = private unnamed_addr constant [8 x i8] c"Omicron\00", align 1
@.str.562 = private unnamed_addr constant [37 x i8] c"greek capital letter omicron, U+039F\00", align 1
@.str.563 = private unnamed_addr constant [3 x i8] c"Pi\00", align 1
@.str.564 = private unnamed_addr constant [40 x i8] c"greek capital letter pi, U+03A0 ISOgrk3\00", align 1
@.str.565 = private unnamed_addr constant [4 x i8] c"Rho\00", align 1
@.str.566 = private unnamed_addr constant [33 x i8] c"greek capital letter rho, U+03A1\00", align 1
@.str.567 = private unnamed_addr constant [6 x i8] c"Sigma\00", align 1
@.str.568 = private unnamed_addr constant [43 x i8] c"greek capital letter sigma, U+03A3 ISOgrk3\00", align 1
@.str.569 = private unnamed_addr constant [4 x i8] c"Tau\00", align 1
@.str.570 = private unnamed_addr constant [33 x i8] c"greek capital letter tau, U+03A4\00", align 1
@.str.571 = private unnamed_addr constant [8 x i8] c"Upsilon\00", align 1
@.str.572 = private unnamed_addr constant [45 x i8] c"greek capital letter upsilon, U+03A5 ISOgrk3\00", align 1
@.str.573 = private unnamed_addr constant [4 x i8] c"Phi\00", align 1
@.str.574 = private unnamed_addr constant [41 x i8] c"greek capital letter phi, U+03A6 ISOgrk3\00", align 1
@.str.575 = private unnamed_addr constant [4 x i8] c"Chi\00", align 1
@.str.576 = private unnamed_addr constant [33 x i8] c"greek capital letter chi, U+03A7\00", align 1
@.str.577 = private unnamed_addr constant [4 x i8] c"Psi\00", align 1
@.str.578 = private unnamed_addr constant [41 x i8] c"greek capital letter psi, U+03A8 ISOgrk3\00", align 1
@.str.579 = private unnamed_addr constant [6 x i8] c"Omega\00", align 1
@.str.580 = private unnamed_addr constant [43 x i8] c"greek capital letter omega, U+03A9 ISOgrk3\00", align 1
@.str.581 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.582 = private unnamed_addr constant [41 x i8] c"greek small letter alpha, U+03B1 ISOgrk3\00", align 1
@.str.583 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str.584 = private unnamed_addr constant [40 x i8] c"greek small letter beta, U+03B2 ISOgrk3\00", align 1
@.str.585 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.586 = private unnamed_addr constant [41 x i8] c"greek small letter gamma, U+03B3 ISOgrk3\00", align 1
@.str.587 = private unnamed_addr constant [6 x i8] c"delta\00", align 1
@.str.588 = private unnamed_addr constant [41 x i8] c"greek small letter delta, U+03B4 ISOgrk3\00", align 1
@.str.589 = private unnamed_addr constant [8 x i8] c"epsilon\00", align 1
@.str.590 = private unnamed_addr constant [43 x i8] c"greek small letter epsilon, U+03B5 ISOgrk3\00", align 1
@.str.591 = private unnamed_addr constant [5 x i8] c"zeta\00", align 1
@.str.592 = private unnamed_addr constant [40 x i8] c"greek small letter zeta, U+03B6 ISOgrk3\00", align 1
@.str.593 = private unnamed_addr constant [4 x i8] c"eta\00", align 1
@.str.594 = private unnamed_addr constant [39 x i8] c"greek small letter eta, U+03B7 ISOgrk3\00", align 1
@.str.595 = private unnamed_addr constant [6 x i8] c"theta\00", align 1
@.str.596 = private unnamed_addr constant [41 x i8] c"greek small letter theta, U+03B8 ISOgrk3\00", align 1
@.str.597 = private unnamed_addr constant [5 x i8] c"iota\00", align 1
@.str.598 = private unnamed_addr constant [40 x i8] c"greek small letter iota, U+03B9 ISOgrk3\00", align 1
@.str.599 = private unnamed_addr constant [6 x i8] c"kappa\00", align 1
@.str.600 = private unnamed_addr constant [41 x i8] c"greek small letter kappa, U+03BA ISOgrk3\00", align 1
@.str.601 = private unnamed_addr constant [7 x i8] c"lambda\00", align 1
@.str.602 = private unnamed_addr constant [42 x i8] c"greek small letter lambda, U+03BB ISOgrk3\00", align 1
@.str.603 = private unnamed_addr constant [3 x i8] c"mu\00", align 1
@.str.604 = private unnamed_addr constant [38 x i8] c"greek small letter mu, U+03BC ISOgrk3\00", align 1
@.str.605 = private unnamed_addr constant [3 x i8] c"nu\00", align 1
@.str.606 = private unnamed_addr constant [38 x i8] c"greek small letter nu, U+03BD ISOgrk3\00", align 1
@.str.607 = private unnamed_addr constant [3 x i8] c"xi\00", align 1
@.str.608 = private unnamed_addr constant [38 x i8] c"greek small letter xi, U+03BE ISOgrk3\00", align 1
@.str.609 = private unnamed_addr constant [8 x i8] c"omicron\00", align 1
@.str.610 = private unnamed_addr constant [39 x i8] c"greek small letter omicron, U+03BF NEW\00", align 1
@.str.611 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.612 = private unnamed_addr constant [38 x i8] c"greek small letter pi, U+03C0 ISOgrk3\00", align 1
@.str.613 = private unnamed_addr constant [4 x i8] c"rho\00", align 1
@.str.614 = private unnamed_addr constant [39 x i8] c"greek small letter rho, U+03C1 ISOgrk3\00", align 1
@.str.615 = private unnamed_addr constant [7 x i8] c"sigmaf\00", align 1
@.str.616 = private unnamed_addr constant [47 x i8] c"greek small letter final sigma, U+03C2 ISOgrk3\00", align 1
@.str.617 = private unnamed_addr constant [6 x i8] c"sigma\00", align 1
@.str.618 = private unnamed_addr constant [41 x i8] c"greek small letter sigma, U+03C3 ISOgrk3\00", align 1
@.str.619 = private unnamed_addr constant [4 x i8] c"tau\00", align 1
@.str.620 = private unnamed_addr constant [39 x i8] c"greek small letter tau, U+03C4 ISOgrk3\00", align 1
@.str.621 = private unnamed_addr constant [8 x i8] c"upsilon\00", align 1
@.str.622 = private unnamed_addr constant [43 x i8] c"greek small letter upsilon, U+03C5 ISOgrk3\00", align 1
@.str.623 = private unnamed_addr constant [4 x i8] c"phi\00", align 1
@.str.624 = private unnamed_addr constant [39 x i8] c"greek small letter phi, U+03C6 ISOgrk3\00", align 1
@.str.625 = private unnamed_addr constant [4 x i8] c"chi\00", align 1
@.str.626 = private unnamed_addr constant [39 x i8] c"greek small letter chi, U+03C7 ISOgrk3\00", align 1
@.str.627 = private unnamed_addr constant [4 x i8] c"psi\00", align 1
@.str.628 = private unnamed_addr constant [39 x i8] c"greek small letter psi, U+03C8 ISOgrk3\00", align 1
@.str.629 = private unnamed_addr constant [6 x i8] c"omega\00", align 1
@.str.630 = private unnamed_addr constant [41 x i8] c"greek small letter omega, U+03C9 ISOgrk3\00", align 1
@.str.631 = private unnamed_addr constant [9 x i8] c"thetasym\00", align 1
@.str.632 = private unnamed_addr constant [44 x i8] c"greek small letter theta symbol, U+03D1 NEW\00", align 1
@.str.633 = private unnamed_addr constant [6 x i8] c"upsih\00", align 1
@.str.634 = private unnamed_addr constant [43 x i8] c"greek upsilon with hook symbol, U+03D2 NEW\00", align 1
@.str.635 = private unnamed_addr constant [4 x i8] c"piv\00", align 1
@.str.636 = private unnamed_addr constant [32 x i8] c"greek pi symbol, U+03D6 ISOgrk3\00", align 1
@.str.637 = private unnamed_addr constant [5 x i8] c"ensp\00", align 1
@.str.638 = private unnamed_addr constant [24 x i8] c"en space, U+2002 ISOpub\00", align 1
@.str.639 = private unnamed_addr constant [5 x i8] c"emsp\00", align 1
@.str.640 = private unnamed_addr constant [24 x i8] c"em space, U+2003 ISOpub\00", align 1
@.str.641 = private unnamed_addr constant [7 x i8] c"thinsp\00", align 1
@.str.642 = private unnamed_addr constant [26 x i8] c"thin space, U+2009 ISOpub\00", align 1
@.str.643 = private unnamed_addr constant [5 x i8] c"zwnj\00", align 1
@.str.644 = private unnamed_addr constant [43 x i8] c"zero width non-joiner, U+200C NEW RFC 2070\00", align 1
@.str.645 = private unnamed_addr constant [4 x i8] c"zwj\00", align 1
@.str.646 = private unnamed_addr constant [39 x i8] c"zero width joiner, U+200D NEW RFC 2070\00", align 1
@.str.647 = private unnamed_addr constant [4 x i8] c"lrm\00", align 1
@.str.648 = private unnamed_addr constant [40 x i8] c"left-to-right mark, U+200E NEW RFC 2070\00", align 1
@.str.649 = private unnamed_addr constant [4 x i8] c"rlm\00", align 1
@.str.650 = private unnamed_addr constant [40 x i8] c"right-to-left mark, U+200F NEW RFC 2070\00", align 1
@.str.651 = private unnamed_addr constant [6 x i8] c"ndash\00", align 1
@.str.652 = private unnamed_addr constant [23 x i8] c"en dash, U+2013 ISOpub\00", align 1
@.str.653 = private unnamed_addr constant [6 x i8] c"mdash\00", align 1
@.str.654 = private unnamed_addr constant [23 x i8] c"em dash, U+2014 ISOpub\00", align 1
@.str.655 = private unnamed_addr constant [6 x i8] c"lsquo\00", align 1
@.str.656 = private unnamed_addr constant [42 x i8] c"left single quotation mark, U+2018 ISOnum\00", align 1
@.str.657 = private unnamed_addr constant [6 x i8] c"rsquo\00", align 1
@.str.658 = private unnamed_addr constant [43 x i8] c"right single quotation mark, U+2019 ISOnum\00", align 1
@.str.659 = private unnamed_addr constant [6 x i8] c"sbquo\00", align 1
@.str.660 = private unnamed_addr constant [40 x i8] c"single low-9 quotation mark, U+201A NEW\00", align 1
@.str.661 = private unnamed_addr constant [6 x i8] c"ldquo\00", align 1
@.str.662 = private unnamed_addr constant [42 x i8] c"left double quotation mark, U+201C ISOnum\00", align 1
@.str.663 = private unnamed_addr constant [6 x i8] c"rdquo\00", align 1
@.str.664 = private unnamed_addr constant [43 x i8] c"right double quotation mark, U+201D ISOnum\00", align 1
@.str.665 = private unnamed_addr constant [6 x i8] c"bdquo\00", align 1
@.str.666 = private unnamed_addr constant [40 x i8] c"double low-9 quotation mark, U+201E NEW\00", align 1
@.str.667 = private unnamed_addr constant [7 x i8] c"dagger\00", align 1
@.str.668 = private unnamed_addr constant [22 x i8] c"dagger, U+2020 ISOpub\00", align 1
@.str.669 = private unnamed_addr constant [7 x i8] c"Dagger\00", align 1
@.str.670 = private unnamed_addr constant [29 x i8] c"double dagger, U+2021 ISOpub\00", align 1
@.str.671 = private unnamed_addr constant [5 x i8] c"bull\00", align 1
@.str.672 = private unnamed_addr constant [43 x i8] c"bullet = black small circle, U+2022 ISOpub\00", align 1
@.str.673 = private unnamed_addr constant [7 x i8] c"hellip\00", align 1
@.str.674 = private unnamed_addr constant [54 x i8] c"horizontal ellipsis = three dot leader, U+2026 ISOpub\00", align 1
@.str.675 = private unnamed_addr constant [7 x i8] c"permil\00", align 1
@.str.676 = private unnamed_addr constant [31 x i8] c"per mille sign, U+2030 ISOtech\00", align 1
@.str.677 = private unnamed_addr constant [6 x i8] c"prime\00", align 1
@.str.678 = private unnamed_addr constant [39 x i8] c"prime = minutes = feet, U+2032 ISOtech\00", align 1
@.str.679 = private unnamed_addr constant [6 x i8] c"Prime\00", align 1
@.str.680 = private unnamed_addr constant [48 x i8] c"double prime = seconds = inches, U+2033 ISOtech\00", align 1
@.str.681 = private unnamed_addr constant [7 x i8] c"lsaquo\00", align 1
@.str.682 = private unnamed_addr constant [63 x i8] c"single left-pointing angle quotation mark, U+2039 ISO proposed\00", align 1
@.str.683 = private unnamed_addr constant [7 x i8] c"rsaquo\00", align 1
@.str.684 = private unnamed_addr constant [64 x i8] c"single right-pointing angle quotation mark, U+203A ISO proposed\00", align 1
@.str.685 = private unnamed_addr constant [6 x i8] c"oline\00", align 1
@.str.686 = private unnamed_addr constant [41 x i8] c"overline = spacing overscore, U+203E NEW\00", align 1
@.str.687 = private unnamed_addr constant [6 x i8] c"frasl\00", align 1
@.str.688 = private unnamed_addr constant [27 x i8] c"fraction slash, U+2044 NEW\00", align 1
@.str.689 = private unnamed_addr constant [5 x i8] c"euro\00", align 1
@.str.690 = private unnamed_addr constant [22 x i8] c"euro sign, U+20AC NEW\00", align 1
@.str.691 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.692 = private unnamed_addr constant [55 x i8] c"blackletter capital I = imaginary part, U+2111 ISOamso\00", align 1
@.str.693 = private unnamed_addr constant [7 x i8] c"weierp\00", align 1
@.str.694 = private unnamed_addr constant [61 x i8] c"script capital P = power set = Weierstrass p, U+2118 ISOamso\00", align 1
@.str.695 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.696 = private unnamed_addr constant [57 x i8] c"blackletter capital R = real part symbol, U+211C ISOamso\00", align 1
@.str.697 = private unnamed_addr constant [6 x i8] c"trade\00", align 1
@.str.698 = private unnamed_addr constant [31 x i8] c"trade mark sign, U+2122 ISOnum\00", align 1
@.str.699 = private unnamed_addr constant [8 x i8] c"alefsym\00", align 1
@.str.700 = private unnamed_addr constant [53 x i8] c"alef symbol = first transfinite cardinal, U+2135 NEW\00", align 1
@.str.701 = private unnamed_addr constant [5 x i8] c"larr\00", align 1
@.str.702 = private unnamed_addr constant [31 x i8] c"leftwards arrow, U+2190 ISOnum\00", align 1
@.str.703 = private unnamed_addr constant [5 x i8] c"uarr\00", align 1
@.str.704 = private unnamed_addr constant [29 x i8] c"upwards arrow, U+2191 ISOnum\00", align 1
@.str.705 = private unnamed_addr constant [5 x i8] c"rarr\00", align 1
@.str.706 = private unnamed_addr constant [32 x i8] c"rightwards arrow, U+2192 ISOnum\00", align 1
@.str.707 = private unnamed_addr constant [5 x i8] c"darr\00", align 1
@.str.708 = private unnamed_addr constant [31 x i8] c"downwards arrow, U+2193 ISOnum\00", align 1
@.str.709 = private unnamed_addr constant [5 x i8] c"harr\00", align 1
@.str.710 = private unnamed_addr constant [33 x i8] c"left right arrow, U+2194 ISOamsa\00", align 1
@.str.711 = private unnamed_addr constant [6 x i8] c"crarr\00", align 1
@.str.712 = private unnamed_addr constant [68 x i8] c"downwards arrow with corner leftwards = carriage return, U+21B5 NEW\00", align 1
@.str.713 = private unnamed_addr constant [5 x i8] c"lArr\00", align 1
@.str.714 = private unnamed_addr constant [39 x i8] c"leftwards double arrow, U+21D0 ISOtech\00", align 1
@.str.715 = private unnamed_addr constant [5 x i8] c"uArr\00", align 1
@.str.716 = private unnamed_addr constant [37 x i8] c"upwards double arrow, U+21D1 ISOamsa\00", align 1
@.str.717 = private unnamed_addr constant [5 x i8] c"rArr\00", align 1
@.str.718 = private unnamed_addr constant [40 x i8] c"rightwards double arrow, U+21D2 ISOtech\00", align 1
@.str.719 = private unnamed_addr constant [5 x i8] c"dArr\00", align 1
@.str.720 = private unnamed_addr constant [39 x i8] c"downwards double arrow, U+21D3 ISOamsa\00", align 1
@.str.721 = private unnamed_addr constant [5 x i8] c"hArr\00", align 1
@.str.722 = private unnamed_addr constant [40 x i8] c"left right double arrow, U+21D4 ISOamsa\00", align 1
@.str.723 = private unnamed_addr constant [7 x i8] c"forall\00", align 1
@.str.724 = private unnamed_addr constant [24 x i8] c"for all, U+2200 ISOtech\00", align 1
@.str.725 = private unnamed_addr constant [5 x i8] c"part\00", align 1
@.str.726 = private unnamed_addr constant [37 x i8] c"partial differential, U+2202 ISOtech\00", align 1
@.str.727 = private unnamed_addr constant [6 x i8] c"exist\00", align 1
@.str.728 = private unnamed_addr constant [29 x i8] c"there exists, U+2203 ISOtech\00", align 1
@.str.729 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.730 = private unnamed_addr constant [48 x i8] c"empty set = null set = diameter, U+2205 ISOamso\00", align 1
@.str.731 = private unnamed_addr constant [6 x i8] c"nabla\00", align 1
@.str.732 = private unnamed_addr constant [44 x i8] c"nabla = backward difference, U+2207 ISOtech\00", align 1
@.str.733 = private unnamed_addr constant [5 x i8] c"isin\00", align 1
@.str.734 = private unnamed_addr constant [27 x i8] c"element of, U+2208 ISOtech\00", align 1
@.str.735 = private unnamed_addr constant [6 x i8] c"notin\00", align 1
@.str.736 = private unnamed_addr constant [34 x i8] c"not an element of, U+2209 ISOtech\00", align 1
@.str.737 = private unnamed_addr constant [3 x i8] c"ni\00", align 1
@.str.738 = private unnamed_addr constant [35 x i8] c"contains as member, U+220B ISOtech\00", align 1
@.str.739 = private unnamed_addr constant [5 x i8] c"prod\00", align 1
@.str.740 = private unnamed_addr constant [45 x i8] c"n-ary product = product sign, U+220F ISOamsb\00", align 1
@.str.741 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.742 = private unnamed_addr constant [32 x i8] c"n-ary summation, U+2211 ISOamsb\00", align 1
@.str.743 = private unnamed_addr constant [6 x i8] c"minus\00", align 1
@.str.744 = private unnamed_addr constant [27 x i8] c"minus sign, U+2212 ISOtech\00", align 1
@.str.745 = private unnamed_addr constant [7 x i8] c"lowast\00", align 1
@.str.746 = private unnamed_addr constant [34 x i8] c"asterisk operator, U+2217 ISOtech\00", align 1
@.str.747 = private unnamed_addr constant [6 x i8] c"radic\00", align 1
@.str.748 = private unnamed_addr constant [43 x i8] c"square root = radical sign, U+221A ISOtech\00", align 1
@.str.749 = private unnamed_addr constant [5 x i8] c"prop\00", align 1
@.str.750 = private unnamed_addr constant [32 x i8] c"proportional to, U+221D ISOtech\00", align 1
@.str.751 = private unnamed_addr constant [6 x i8] c"infin\00", align 1
@.str.752 = private unnamed_addr constant [25 x i8] c"infinity, U+221E ISOtech\00", align 1
@.str.753 = private unnamed_addr constant [4 x i8] c"ang\00", align 1
@.str.754 = private unnamed_addr constant [22 x i8] c"angle, U+2220 ISOamso\00", align 1
@.str.755 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.756 = private unnamed_addr constant [36 x i8] c"logical and = wedge, U+2227 ISOtech\00", align 1
@.str.757 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.758 = private unnamed_addr constant [33 x i8] c"logical or = vee, U+2228 ISOtech\00", align 1
@.str.759 = private unnamed_addr constant [4 x i8] c"cap\00", align 1
@.str.760 = private unnamed_addr constant [35 x i8] c"intersection = cap, U+2229 ISOtech\00", align 1
@.str.761 = private unnamed_addr constant [4 x i8] c"cup\00", align 1
@.str.762 = private unnamed_addr constant [28 x i8] c"union = cup, U+222A ISOtech\00", align 1
@.str.763 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.764 = private unnamed_addr constant [25 x i8] c"integral, U+222B ISOtech\00", align 1
@.str.765 = private unnamed_addr constant [7 x i8] c"there4\00", align 1
@.str.766 = private unnamed_addr constant [26 x i8] c"therefore, U+2234 ISOtech\00", align 1
@.str.767 = private unnamed_addr constant [4 x i8] c"sim\00", align 1
@.str.768 = private unnamed_addr constant [58 x i8] c"tilde operator = varies with = similar to, U+223C ISOtech\00", align 1
@.str.769 = private unnamed_addr constant [5 x i8] c"cong\00", align 1
@.str.770 = private unnamed_addr constant [39 x i8] c"approximately equal to, U+2245 ISOtech\00", align 1
@.str.771 = private unnamed_addr constant [6 x i8] c"asymp\00", align 1
@.str.772 = private unnamed_addr constant [48 x i8] c"almost equal to = asymptotic to, U+2248 ISOamsr\00", align 1
@.str.773 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str.774 = private unnamed_addr constant [29 x i8] c"not equal to, U+2260 ISOtech\00", align 1
@.str.775 = private unnamed_addr constant [6 x i8] c"equiv\00", align 1
@.str.776 = private unnamed_addr constant [29 x i8] c"identical to, U+2261 ISOtech\00", align 1
@.str.777 = private unnamed_addr constant [3 x i8] c"le\00", align 1
@.str.778 = private unnamed_addr constant [38 x i8] c"less-than or equal to, U+2264 ISOtech\00", align 1
@.str.779 = private unnamed_addr constant [3 x i8] c"ge\00", align 1
@.str.780 = private unnamed_addr constant [41 x i8] c"greater-than or equal to, U+2265 ISOtech\00", align 1
@.str.781 = private unnamed_addr constant [26 x i8] c"subset of, U+2282 ISOtech\00", align 1
@.str.782 = private unnamed_addr constant [28 x i8] c"superset of, U+2283 ISOtech\00", align 1
@.str.783 = private unnamed_addr constant [5 x i8] c"nsub\00", align 1
@.str.784 = private unnamed_addr constant [32 x i8] c"not a subset of, U+2284 ISOamsn\00", align 1
@.str.785 = private unnamed_addr constant [5 x i8] c"sube\00", align 1
@.str.786 = private unnamed_addr constant [38 x i8] c"subset of or equal to, U+2286 ISOtech\00", align 1
@.str.787 = private unnamed_addr constant [5 x i8] c"supe\00", align 1
@.str.788 = private unnamed_addr constant [40 x i8] c"superset of or equal to, U+2287 ISOtech\00", align 1
@.str.789 = private unnamed_addr constant [6 x i8] c"oplus\00", align 1
@.str.790 = private unnamed_addr constant [42 x i8] c"circled plus = direct sum, U+2295 ISOamsb\00", align 1
@.str.791 = private unnamed_addr constant [7 x i8] c"otimes\00", align 1
@.str.792 = private unnamed_addr constant [47 x i8] c"circled times = vector product, U+2297 ISOamsb\00", align 1
@.str.793 = private unnamed_addr constant [5 x i8] c"perp\00", align 1
@.str.794 = private unnamed_addr constant [56 x i8] c"up tack = orthogonal to = perpendicular, U+22A5 ISOtech\00", align 1
@.str.795 = private unnamed_addr constant [5 x i8] c"sdot\00", align 1
@.str.796 = private unnamed_addr constant [29 x i8] c"dot operator, U+22C5 ISOamsb\00", align 1
@.str.797 = private unnamed_addr constant [6 x i8] c"lceil\00", align 1
@.str.798 = private unnamed_addr constant [43 x i8] c"left ceiling = apl upstile, U+2308 ISOamsc\00", align 1
@.str.799 = private unnamed_addr constant [6 x i8] c"rceil\00", align 1
@.str.800 = private unnamed_addr constant [30 x i8] c"right ceiling, U+2309 ISOamsc\00", align 1
@.str.801 = private unnamed_addr constant [7 x i8] c"lfloor\00", align 1
@.str.802 = private unnamed_addr constant [43 x i8] c"left floor = apl downstile, U+230A ISOamsc\00", align 1
@.str.803 = private unnamed_addr constant [7 x i8] c"rfloor\00", align 1
@.str.804 = private unnamed_addr constant [28 x i8] c"right floor, U+230B ISOamsc\00", align 1
@.str.805 = private unnamed_addr constant [50 x i8] c"left-pointing angle bracket = bra, U+2329 ISOtech\00", align 1
@.str.806 = private unnamed_addr constant [5 x i8] c"rang\00", align 1
@.str.807 = private unnamed_addr constant [51 x i8] c"right-pointing angle bracket = ket, U+232A ISOtech\00", align 1
@.str.808 = private unnamed_addr constant [4 x i8] c"loz\00", align 1
@.str.809 = private unnamed_addr constant [23 x i8] c"lozenge, U+25CA ISOpub\00", align 1
@.str.810 = private unnamed_addr constant [7 x i8] c"spades\00", align 1
@.str.811 = private unnamed_addr constant [32 x i8] c"black spade suit, U+2660 ISOpub\00", align 1
@.str.812 = private unnamed_addr constant [6 x i8] c"clubs\00", align 1
@.str.813 = private unnamed_addr constant [42 x i8] c"black club suit = shamrock, U+2663 ISOpub\00", align 1
@.str.814 = private unnamed_addr constant [7 x i8] c"hearts\00", align 1
@.str.815 = private unnamed_addr constant [44 x i8] c"black heart suit = valentine, U+2665 ISOpub\00", align 1
@.str.816 = private unnamed_addr constant [6 x i8] c"diams\00", align 1
@.str.817 = private unnamed_addr constant [34 x i8] c"black diamond suit, U+2666 ISOpub\00", align 1
@.str.818 = private unnamed_addr constant [31 x i8] c"Memory allocation failed : %s\0A\00", align 1
@.str.819 = private unnamed_addr constant [26 x i8] c"Memory allocation failed\0A\00", align 1
@xmlIsBaseCharGroup = external constant %struct._xmlChRangeGroup, align 8
@xmlIsDigitGroup = external constant %struct._xmlChRangeGroup, align 8
@xmlIsCombiningGroup = external constant %struct._xmlChRangeGroup, align 8
@xmlIsExtenderGroup = external constant %struct._xmlChRangeGroup, align 8
@.str.820 = private unnamed_addr constant [34 x i8] c"unexpected change of input buffer\00", align 1
@.str.821 = private unnamed_addr constant [32 x i8] c"Char 0x%X out of allowed range\0A\00", align 1
@.str.822 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.823 = private unnamed_addr constant [24 x i8] c"Unsupported encoding %s\00", align 1
@.str.824 = private unnamed_addr constant [36 x i8] c"Bytes: 0x%02X 0x%02X 0x%02X 0x%02X\0A\00", align 1
@.str.825 = private unnamed_addr constant [15 x i8] c"Bytes: 0x%02X\0A\00", align 1
@.str.826 = private unnamed_addr constant [48 x i8] c"Input is not proper UTF-8, indicate encoding !\0A\00", align 1
@.str.827 = private unnamed_addr constant [11 x i8] c"HTTP-EQUIV\00", align 1
@.str.828 = private unnamed_addr constant [8 x i8] c"CONTENT\00", align 1
@.str.829 = private unnamed_addr constant [9 x i8] c"CHARSET=\00", align 1
@.str.830 = private unnamed_addr constant [34 x i8] c"htmlParseStartTag: context error\0A\00", align 1
@.str.831 = private unnamed_addr constant [41 x i8] c"htmlParseStartTag: invalid element name\0A\00", align 1
@.str.832 = private unnamed_addr constant [41 x i8] c"htmlParseStartTag: misplaced <html> tag\0A\00", align 1
@.str.833 = private unnamed_addr constant [41 x i8] c"htmlParseStartTag: misplaced <head> tag\0A\00", align 1
@.str.834 = private unnamed_addr constant [41 x i8] c"htmlParseStartTag: misplaced <body> tag\0A\00", align 1
@.str.835 = private unnamed_addr constant [24 x i8] c"Attribute %s redefined\0A\00", align 1
@xmlRealloc = external local_unnamed_addr global i8* (i8*, i64)*, align 8
@.str.836 = private unnamed_addr constant [28 x i8] c"Invalid char in CDATA 0x%X\0A\00", align 1
@.str.837 = private unnamed_addr constant [26 x i8] c"-//W3C//DTD HTML 4.01//EN\00", align 1
@.str.838 = private unnamed_addr constant [23 x i8] c"-//W3C//DTD HTML 4//EN\00", align 1
@allowPCData = internal unnamed_addr constant [53 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0)], align 16
@.str.839 = private unnamed_addr constant [30 x i8] c"error parsing attribute name\0A\00", align 1
@.str.840 = private unnamed_addr constant [22 x i8] c"AttValue: \22 expected\0A\00", align 1
@.str.841 = private unnamed_addr constant [22 x i8] c"AttValue: ' expected\0A\00", align 1
@.str.842 = private unnamed_addr constant [26 x i8] c"AttValue: no value found\0A\00", align 1
@.str.843 = private unnamed_addr constant [26 x i8] c"buffer allocation failed\0A\00", align 1
@.str.844 = private unnamed_addr constant [16 x i8] c"growing buffer\0A\00", align 1
@.str.845 = private unnamed_addr constant [13 x i8] c"Content-Type\00", align 1
@.str.846 = private unnamed_addr constant [40 x i8] c"htmlCheckEncoding: wrong encoding meta\0A\00", align 1
@.str.847 = private unnamed_addr constant [40 x i8] c"htmlCheckEncoding: unknown encoding %s\0A\00", align 1
@.str.848 = private unnamed_addr constant [34 x i8] c"htmlCheckEncoding: encoder error\0A\00", align 1
@.str.849 = private unnamed_addr constant [31 x i8] c"Misplaced DOCTYPE declaration\0A\00", align 1
@.str.850 = private unnamed_addr constant [8 x i8] c"DOCTYPE\00", align 1
@.str.851 = private unnamed_addr constant [33 x i8] c"htmlParseEndTag: '</' not found\0A\00", align 1
@.str.852 = private unnamed_addr constant [24 x i8] c"End tag : expected '>'\0A\00", align 1
@.str.853 = private unnamed_addr constant [25 x i8] c"Unexpected end tag : %s\0A\00", align 1
@.str.854 = private unnamed_addr constant [44 x i8] c"Opening and ending tag mismatch: %s and %s\0A\00", align 1
@htmlEndPriority = internal unnamed_addr constant [12 x %struct.elementPriority] [%struct.elementPriority { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i32 150 }, %struct.elementPriority { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i32 160 }, %struct.elementPriority { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i32 160 }, %struct.elementPriority { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i32 170 }, %struct.elementPriority { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0), i32 180 }, %struct.elementPriority { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), i32 180 }, %struct.elementPriority { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i32 180 }, %struct.elementPriority { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i32 190 }, %struct.elementPriority { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i32 200 }, %struct.elementPriority { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i32 200 }, %struct.elementPriority { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 220 }, %struct.elementPriority { i8* null, i32 100 }], align 16
@.str.855 = private unnamed_addr constant [29 x i8] c"Element %s embeds close tag\0A\00", align 1
@.str.856 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.857 = private unnamed_addr constant [41 x i8] c"htmlParseElementInternal: context error\0A\00", align 1
@.str.858 = private unnamed_addr constant [37 x i8] c"Comment incorrectly closed by '--!>'\00", align 1
@.str.859 = private unnamed_addr constant [23 x i8] c"growing buffer failed\0A\00", align 1
@.str.860 = private unnamed_addr constant [30 x i8] c"Invalid char in comment 0x%X\0A\00", align 1
@.str.861 = private unnamed_addr constant [35 x i8] c"Comment not terminated \0A<!--%.50s\0A\00", align 1
@.str.862 = private unnamed_addr constant [31 x i8] c"ParsePI: PI %s space expected\0A\00", align 1
@.str.863 = private unnamed_addr constant [45 x i8] c"Invalid char in processing instruction 0x%X\0A\00", align 1
@.str.864 = private unnamed_addr constant [30 x i8] c"ParsePI: PI %s never end ...\0A\00", align 1
@.str.865 = private unnamed_addr constant [28 x i8] c"PI is not started correctly\00", align 1
@.str.866 = private unnamed_addr constant [42 x i8] c"htmlParseDocTypeDecl : no DOCTYPE name !\0A\00", align 1
@.str.867 = private unnamed_addr constant [31 x i8] c"DOCTYPE improperly terminated\0A\00", align 1
@.str.868 = private unnamed_addr constant [31 x i8] c"Space required after 'SYSTEM'\0A\00", align 1
@.str.869 = private unnamed_addr constant [37 x i8] c"htmlParseExternalID: SYSTEM, no URI\0A\00", align 1
@.str.870 = private unnamed_addr constant [31 x i8] c"Space required after 'PUBLIC'\0A\00", align 1
@.str.871 = private unnamed_addr constant [51 x i8] c"htmlParseExternalID: PUBLIC, no Public Identifier\0A\00", align 1
@.str.872 = private unnamed_addr constant [31 x i8] c"SystemLiteral \22 or ' expected\0A\00", align 1
@.str.873 = private unnamed_addr constant [36 x i8] c"Invalid char in SystemLiteral 0x%X\0A\00", align 1
@.str.874 = private unnamed_addr constant [26 x i8] c"Unfinished SystemLiteral\0A\00", align 1
@.str.875 = private unnamed_addr constant [30 x i8] c"PubidLiteral \22 or ' expected\0A\00", align 1
@xmlIsPubidChar_tab = external local_unnamed_addr constant [256 x i8], align 16
@.str.876 = private unnamed_addr constant [35 x i8] c"Invalid char in PubidLiteral 0x%X\0A\00", align 1
@.str.877 = private unnamed_addr constant [25 x i8] c"Unfinished PubidLiteral\0A\00", align 1
@.str.878 = private unnamed_addr constant [35 x i8] c"htmlInitParserCtxt: out of memory\0A\00", align 1
@xmlLineNumbersDefaultValue = external local_unnamed_addr global i32, align 4
@xmlKeepBlanksDefaultValue = external local_unnamed_addr global i32, align 4
@.str.879 = private unnamed_addr constant [44 x i8] c"htmlParseTryOrFinish: invalid element name\0A\00", align 1
@.str.880 = private unnamed_addr constant [37 x i8] c"HPP: internal error, state == CDATA\0A\00", align 1
@.str.881 = private unnamed_addr constant [35 x i8] c"HPP: internal error, state == DTD\0A\00", align 1
@.str.882 = private unnamed_addr constant [39 x i8] c"HPP: internal error, state == COMMENT\0A\00", align 1
@.str.883 = private unnamed_addr constant [34 x i8] c"HPP: internal error, state == PI\0A\00", align 1
@.str.884 = private unnamed_addr constant [43 x i8] c"HPP: internal error, state == ENTITY_DECL\0A\00", align 1
@.str.885 = private unnamed_addr constant [44 x i8] c"HPP: internal error, state == ENTITY_VALUE\0A\00", align 1
@.str.886 = private unnamed_addr constant [47 x i8] c"HPP: internal error, state == ATTRIBUTE_VALUE\0A\00", align 1
@.str.887 = private unnamed_addr constant [57 x i8] c"HPP: internal error, state == XML_PARSER_SYSTEM_LITERAL\0A\00", align 1
@.str.888 = private unnamed_addr constant [49 x i8] c"HPP: internal error, state == XML_PARSER_IGNORE\0A\00", align 1
@.str.889 = private unnamed_addr constant [50 x i8] c"HPP: internal error, state == XML_PARSER_LITERAL\0A\00", align 1
@.str.890 = private unnamed_addr constant [38 x i8] c"couldn't allocate a new input stream\0A\00", align 1
@.str.891 = private unnamed_addr constant [25 x i8] c"Unsupported encoding %s\0A\00", align 1
@.str.892 = private unnamed_addr constant [2 x i8] c"=\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @htmlInitAutoClose() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._htmlElemDesc* @htmlTagLookup(i8*) local_unnamed_addr #1 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1, %17
  %4 = phi i64 [ %19, %17 ], [ 92, %1 ]
  %5 = phi i64 [ %18, %17 ], [ 0, %1 ]
  %6 = add i64 %5, %4
  %7 = lshr i64 %6, 1
  %8 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %7
  %9 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 16
  %11 = tail call i32 @xmlStrcasecmp(i8* nonnull %0, i8* %10) #9
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %7, 1
  br label %17

17:                                               ; preds = %15, %3
  %18 = phi i64 [ %16, %15 ], [ %5, %3 ]
  %19 = phi i64 [ %4, %15 ], [ %7, %3 ]
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %3, label %21

21:                                               ; preds = %17, %13, %1
  %22 = phi %struct._htmlElemDesc* [ null, %1 ], [ %8, %13 ], [ null, %17 ]
  ret %struct._htmlElemDesc* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlAutoCloseTag(%struct._xmlDoc* nocapture readnone, i8*, %struct._xmlNode* readonly) local_unnamed_addr #1 {
  %4 = icmp eq %struct._xmlNode* %2, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %2, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i32 @xmlStrEqual(i8* %1, i8* %7) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %51

10:                                               ; preds = %5
  %11 = load i8*, i8** %6, align 8
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ %35, %33 ], [ 251, %10 ]
  %14 = phi i64 [ %34, %33 ], [ 0, %10 ]
  %15 = add i64 %14, %13
  %16 = lshr i64 %15, 1
  %17 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %16
  %18 = getelementptr inbounds %struct.htmlStartCloseEntry, %struct.htmlStartCloseEntry* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 16
  %20 = tail call i32 @strcmp(i8* %1, i8* %19) #10
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %12
  %23 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %16, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = tail call i32 @strcmp(i8* %11, i8* %24) #10
  br label %26

26:                                               ; preds = %22, %12
  %27 = phi i32 [ %25, %22 ], [ %20, %12 ]
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %16, 1
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi i64 [ %32, %31 ], [ %14, %26 ]
  %35 = phi i64 [ %13, %31 ], [ %16, %26 ]
  %36 = icmp ult i64 %34, %35
  br i1 %36, label %12, label %39

37:                                               ; preds = %29
  %38 = icmp eq %struct.htmlStartCloseEntry* %17, null
  br i1 %38, label %39, label %51

39:                                               ; preds = %33, %37
  %40 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %2, i64 0, i32 3
  %41 = load %struct._xmlNode*, %struct._xmlNode** %40, align 8
  %42 = icmp eq %struct._xmlNode* %41, null
  br i1 %42, label %51, label %47

43:                                               ; preds = %47
  %44 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %48, i64 0, i32 6
  %45 = load %struct._xmlNode*, %struct._xmlNode** %44, align 8
  %46 = icmp eq %struct._xmlNode* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %39, %43
  %48 = phi %struct._xmlNode* [ %45, %43 ], [ %41, %39 ]
  %49 = tail call i32 @htmlAutoCloseTag(%struct._xmlDoc* %0, i8* %1, %struct._xmlNode* nonnull %48)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %43, label %51

51:                                               ; preds = %47, %43, %39, %37, %5, %3
  %52 = phi i32 [ 1, %3 ], [ 0, %5 ], [ 1, %37 ], [ 0, %39 ], [ 1, %47 ], [ 0, %43 ]
  ret i32 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @xmlStrEqual(i8*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlIsAutoClosed(%struct._xmlDoc* nocapture readnone, %struct._xmlNode* readonly) local_unnamed_addr #1 {
  %3 = icmp eq %struct._xmlNode* %1, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %1, i64 0, i32 3
  %6 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %1, i64 0, i32 2
  %7 = load %struct._xmlNode*, %struct._xmlNode** %5, align 8
  %8 = icmp eq %struct._xmlNode* %7, null
  br i1 %8, label %18, label %13

9:                                                ; preds = %13
  %10 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %14, i64 0, i32 6
  %11 = load %struct._xmlNode*, %struct._xmlNode** %10, align 8
  %12 = icmp eq %struct._xmlNode* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4, %9
  %14 = phi %struct._xmlNode* [ %11, %9 ], [ %7, %4 ]
  %15 = load i8*, i8** %6, align 8
  %16 = tail call i32 @htmlAutoCloseTag(%struct._xmlDoc* %0, i8* %15, %struct._xmlNode* nonnull %14)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %9, label %18

18:                                               ; preds = %13, %9, %4, %2
  %19 = phi i32 [ 1, %2 ], [ 0, %4 ], [ 1, %13 ], [ 0, %9 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlIsScriptAttribute(i8*) local_unnamed_addr #1 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 111
  br i1 %5, label %6, label %16

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 110
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201, i64 0, i64 0)) #9
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i64 0, i64 0)) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %13, %18, %21, %24, %27, %30, %33, %36, %39, %42, %45, %48, %51, %54, %57, %60, %3, %6, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 0, %3 ], [ 1, %10 ], [ 1, %13 ], [ 1, %18 ], [ 1, %21 ], [ 1, %24 ], [ 1, %27 ], [ 1, %30 ], [ 1, %33 ], [ 1, %36 ], [ 1, %39 ], [ 1, %42 ], [ 1, %45 ], [ 1, %48 ], [ 1, %51 ], [ 1, %54 ], [ 1, %57 ], [ 1, %60 ]
  ret i32 %17

18:                                               ; preds = %13
  %19 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i64 0, i64 0)) #9
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %16

21:                                               ; preds = %18
  %22 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i64 0, i64 0)) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %16

24:                                               ; preds = %21
  %25 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i64 0, i64 0)) #9
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %16

27:                                               ; preds = %24
  %28 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.314, i64 0, i64 0)) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %27
  %31 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i64 0, i64 0)) #9
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %16

33:                                               ; preds = %30
  %34 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i64 0, i64 0)) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %16

36:                                               ; preds = %33
  %37 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i64 0, i64 0)) #9
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %16

39:                                               ; preds = %36
  %40 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i64 0, i64 0)) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %16

42:                                               ; preds = %39
  %43 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.236, i64 0, i64 0)) #9
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %16

45:                                               ; preds = %42
  %46 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.237, i64 0, i64 0)) #9
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %16

48:                                               ; preds = %45
  %49 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i64 0, i64 0)) #9
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %16

51:                                               ; preds = %48
  %52 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i64 0, i64 0)) #9
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %16

54:                                               ; preds = %51
  %55 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.262, i64 0, i64 0)) #9
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %16

57:                                               ; preds = %54
  %58 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.263, i64 0, i64 0)) #9
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %16

60:                                               ; preds = %57
  %61 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.282, i64 0, i64 0)) #9
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %16

63:                                               ; preds = %60
  %64 = tail call i32 @xmlStrEqual(i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.281, i64 0, i64 0)) #9
  %65 = icmp ne i32 %64, 0
  %66 = zext i1 %65 to i32
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._htmlEntityDesc* @htmlEntityLookup(i8*) local_unnamed_addr #1 {
  br label %4

2:                                                ; preds = %4
  %3 = icmp eq i64 %10, 253
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %1
  %5 = phi i64 [ 0, %1 ], [ %10, %2 ]
  %6 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %5, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i32 @xmlStrEqual(i8* %0, i8* %7) #9
  %9 = icmp eq i32 %8, 0
  %10 = add nuw nsw i64 %5, 1
  br i1 %9, label %2, label %11

11:                                               ; preds = %4
  %12 = and i64 %5, 4294967295
  %13 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %12
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi %struct._htmlEntityDesc* [ %13, %11 ], [ null, %2 ]
  ret %struct._htmlEntityDesc* %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct._htmlEntityDesc* @htmlEntityValueLookup(i32) local_unnamed_addr #0 {
  br label %4

2:                                                ; preds = %4
  %3 = icmp eq i64 %10, 253
  br i1 %3, label %15, label %18

4:                                                ; preds = %35, %1
  %5 = phi i64 [ 0, %1 ], [ %36, %35 ]
  %6 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %5
  %7 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 16
  %9 = icmp ult i32 %8, %0
  %10 = or i64 %5, 1
  br i1 %9, label %2, label %11

11:                                               ; preds = %29, %23, %18, %4
  %12 = phi %struct._htmlEntityDesc* [ %6, %4 ], [ %19, %18 ], [ %25, %23 ], [ %31, %29 ]
  %13 = phi i32 [ %8, %4 ], [ %21, %18 ], [ %27, %23 ], [ %33, %29 ]
  %14 = icmp ugt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %2, %11
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi %struct._htmlEntityDesc* [ null, %15 ], [ %12, %11 ]
  ret %struct._htmlEntityDesc* %17

18:                                               ; preds = %2
  %19 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %10
  %20 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %0
  br i1 %22, label %23, label %11

23:                                               ; preds = %18
  %24 = or i64 %5, 2
  %25 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %24
  %26 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 16
  %28 = icmp ult i32 %27, %0
  br i1 %28, label %29, label %11

29:                                               ; preds = %23
  %30 = or i64 %5, 3
  %31 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %30
  %32 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp ult i32 %33, %0
  br i1 %34, label %35, label %11

35:                                               ; preds = %29
  %36 = add nuw nsw i64 %5, 4
  br label %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @UTF8ToHtml(i8*, i32*, i8*, i32*) local_unnamed_addr #1 {
  %5 = alloca [16 x i8], align 16
  %6 = icmp eq i8* %0, null
  %7 = icmp eq i32* %1, null
  %8 = or i1 %6, %7
  %9 = icmp eq i32* %3, null
  %10 = or i1 %8, %9
  br i1 %10, label %149, label %11

11:                                               ; preds = %4
  %12 = icmp eq i8* %2, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i32 0, i32* %1, align 4
  br label %146

14:                                               ; preds = %11
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %2, i64 %16
  %18 = load i32, i32* %1, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %0, i64 %19
  %21 = icmp sgt i32 %15, 0
  br i1 %21, label %22, label %135

22:                                               ; preds = %14
  %23 = ptrtoint i8* %17 to i64
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  br label %25

25:                                               ; preds = %22, %132
  %26 = phi i8* [ %2, %22 ], [ %90, %132 ]
  %27 = phi i8* [ %0, %22 ], [ %133, %132 ]
  %28 = getelementptr inbounds i8, i8* %26, i64 1
  %29 = load i8, i8* %26, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp sgt i8 %29, -1
  br i1 %31, label %64, label %32

32:                                               ; preds = %25
  %33 = icmp ult i8 %29, -64
  br i1 %33, label %34, label %43

34:                                               ; preds = %32
  %35 = ptrtoint i8* %27 to i64
  %36 = ptrtoint i8* %0 to i64
  %37 = sub i64 %35, %36
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %1, align 4
  %39 = ptrtoint i8* %26 to i64
  %40 = ptrtoint i8* %2 to i64
  %41 = sub i64 %39, %40
  %42 = trunc i64 %41 to i32
  br label %146

43:                                               ; preds = %32
  %44 = icmp ult i8 %29, -32
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = and i32 %30, 31
  br label %64

47:                                               ; preds = %43
  %48 = icmp ult i8 %29, -16
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = and i32 %30, 15
  br label %64

51:                                               ; preds = %47
  %52 = icmp ult i8 %29, -8
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = and i32 %30, 7
  br label %64

55:                                               ; preds = %51
  %56 = ptrtoint i8* %27 to i64
  %57 = ptrtoint i8* %0 to i64
  %58 = sub i64 %56, %57
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %1, align 4
  %60 = ptrtoint i8* %26 to i64
  %61 = ptrtoint i8* %2 to i64
  %62 = sub i64 %60, %61
  %63 = trunc i64 %62 to i32
  br label %146

64:                                               ; preds = %25, %49, %53, %45
  %65 = phi i32 [ %46, %45 ], [ %50, %49 ], [ %54, %53 ], [ %30, %25 ]
  %66 = phi i32 [ 1, %45 ], [ 2, %49 ], [ 3, %53 ], [ 0, %25 ]
  %67 = ptrtoint i8* %28 to i64
  %68 = sub i64 %23, %67
  %69 = zext i32 %66 to i64
  %70 = icmp slt i64 %68, %69
  br i1 %70, label %135, label %71

71:                                               ; preds = %64
  %72 = icmp ne i32 %66, 0
  %73 = icmp ult i8* %28, %17
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %88

75:                                               ; preds = %71
  %76 = getelementptr inbounds i8, i8* %26, i64 2
  %77 = load i8, i8* %28, align 1
  %78 = zext i8 %77 to i32
  %79 = and i32 %78, 192
  %80 = icmp eq i32 %79, 128
  br i1 %80, label %81, label %88

81:                                               ; preds = %75
  %82 = shl nuw nsw i32 %65, 6
  %83 = and i32 %78, 63
  %84 = or i32 %83, %82
  %85 = icmp ne i32 %66, 1
  %86 = icmp ult i8* %76, %17
  %87 = and i1 %86, %85
  br i1 %87, label %151, label %88

88:                                               ; preds = %75, %81, %151, %157, %164, %170, %71
  %89 = phi i32 [ %65, %71 ], [ %84, %81 ], [ %65, %75 ], [ %84, %151 ], [ %160, %157 ], [ %160, %164 ], [ %173, %170 ]
  %90 = phi i8* [ %28, %71 ], [ %76, %81 ], [ %76, %75 ], [ %152, %151 ], [ %152, %157 ], [ %165, %164 ], [ %165, %170 ]
  %91 = icmp ult i32 %89, 128
  br i1 %91, label %92, label %97

92:                                               ; preds = %88
  %93 = getelementptr inbounds i8, i8* %27, i64 1
  %94 = icmp ult i8* %93, %20
  br i1 %94, label %95, label %135

95:                                               ; preds = %92
  %96 = trunc i32 %89 to i8
  store i8 %96, i8* %27, align 1
  br label %132

97:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 16, i1 false)
  br label %100

98:                                               ; preds = %100
  %99 = icmp eq i64 %106, 253
  br i1 %99, label %114, label %174

100:                                              ; preds = %191, %97
  %101 = phi i64 [ 0, %97 ], [ %192, %191 ]
  %102 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %101
  %103 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %102, i64 0, i32 0
  %104 = load i32, i32* %103, align 16
  %105 = icmp ult i32 %104, %89
  %106 = or i64 %101, 1
  br i1 %105, label %98, label %107

107:                                              ; preds = %186, %180, %174, %100
  %108 = phi i64 [ %101, %100 ], [ %106, %174 ], [ %179, %180 ], [ %185, %186 ]
  %109 = phi %struct._htmlEntityDesc* [ %102, %100 ], [ %175, %174 ], [ %181, %180 ], [ %187, %186 ]
  %110 = phi i32 [ %104, %100 ], [ %177, %174 ], [ %183, %180 ], [ %189, %186 ]
  %111 = icmp ugt i32 %110, %89
  %112 = icmp eq %struct._htmlEntityDesc* %109, null
  %113 = or i1 %111, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %98, %107
  %115 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %24, i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %89) #9
  br label %119

116:                                              ; preds = %107
  %117 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %108, i32 1
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %114
  %120 = phi i8* [ %24, %114 ], [ %118, %116 ]
  %121 = call i64 @strlen(i8* %120) #10
  %122 = getelementptr inbounds i8, i8* %27, i64 2
  %123 = shl i64 %121, 32
  %124 = ashr exact i64 %123, 32
  %125 = getelementptr inbounds i8, i8* %122, i64 %124
  %126 = icmp ult i8* %125, %20
  br i1 %126, label %127, label %131

127:                                              ; preds = %119
  %128 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 38, i8* %27, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %128, i8* align 1 %120, i64 %124, i1 false)
  %129 = getelementptr inbounds i8, i8* %128, i64 %124
  %130 = getelementptr inbounds i8, i8* %129, i64 1
  store i8 59, i8* %129, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  br label %132

131:                                              ; preds = %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  br label %135

132:                                              ; preds = %127, %95
  %133 = phi i8* [ %93, %95 ], [ %130, %127 ]
  %134 = icmp ult i8* %90, %17
  br i1 %134, label %25, label %135

135:                                              ; preds = %132, %64, %92, %14, %131
  %136 = phi i8* [ %27, %131 ], [ %0, %14 ], [ %133, %132 ], [ %27, %64 ], [ %27, %92 ]
  %137 = phi i8* [ %26, %131 ], [ %2, %14 ], [ %90, %132 ], [ %26, %64 ], [ %26, %92 ]
  %138 = ptrtoint i8* %136 to i64
  %139 = ptrtoint i8* %0 to i64
  %140 = sub i64 %138, %139
  %141 = trunc i64 %140 to i32
  store i32 %141, i32* %1, align 4
  %142 = ptrtoint i8* %137 to i64
  %143 = ptrtoint i8* %2 to i64
  %144 = sub i64 %142, %143
  %145 = trunc i64 %144 to i32
  br label %146

146:                                              ; preds = %13, %34, %55, %135
  %147 = phi i32 [ %145, %135 ], [ %63, %55 ], [ %42, %34 ], [ 0, %13 ]
  %148 = phi i32 [ 0, %135 ], [ -2, %55 ], [ -2, %34 ], [ 0, %13 ]
  store i32 %147, i32* %3, align 4
  br label %149

149:                                              ; preds = %146, %4
  %150 = phi i32 [ -1, %4 ], [ %148, %146 ]
  ret i32 %150

151:                                              ; preds = %81
  %152 = getelementptr inbounds i8, i8* %26, i64 3
  %153 = load i8, i8* %76, align 1
  %154 = zext i8 %153 to i32
  %155 = and i32 %154, 192
  %156 = icmp eq i32 %155, 128
  br i1 %156, label %157, label %88

157:                                              ; preds = %151
  %158 = shl nuw nsw i32 %84, 6
  %159 = and i32 %154, 63
  %160 = or i32 %159, %158
  %161 = icmp ne i32 %66, 2
  %162 = icmp ult i8* %152, %17
  %163 = and i1 %162, %161
  br i1 %163, label %164, label %88

164:                                              ; preds = %157
  %165 = getelementptr inbounds i8, i8* %26, i64 4
  %166 = load i8, i8* %152, align 1
  %167 = zext i8 %166 to i32
  %168 = and i32 %167, 192
  %169 = icmp eq i32 %168, 128
  br i1 %169, label %170, label %88

170:                                              ; preds = %164
  %171 = shl nuw nsw i32 %160, 6
  %172 = and i32 %167, 63
  %173 = or i32 %172, %171
  br label %88

174:                                              ; preds = %98
  %175 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %106
  %176 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %175, i64 0, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = icmp ult i32 %177, %89
  %179 = or i64 %101, 2
  br i1 %178, label %180, label %107

180:                                              ; preds = %174
  %181 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %179
  %182 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %181, i64 0, i32 0
  %183 = load i32, i32* %182, align 16
  %184 = icmp ult i32 %183, %89
  %185 = or i64 %101, 3
  br i1 %184, label %186, label %107

186:                                              ; preds = %180
  %187 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %185
  %188 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %187, i64 0, i32 0
  %189 = load i32, i32* %188, align 8
  %190 = icmp ult i32 %189, %89
  br i1 %190, label %191, label %107

191:                                              ; preds = %186
  %192 = add nuw nsw i64 %101, 4
  br label %100
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlEncodeEntities(i8*, i32*, i8*, i32*, i32) local_unnamed_addr #1 {
  %6 = alloca [16 x i8], align 16
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i32* %1, null
  %9 = or i1 %7, %8
  %10 = icmp eq i32* %3, null
  %11 = or i1 %9, %10
  %12 = icmp eq i8* %2, null
  %13 = or i1 %12, %11
  br i1 %13, label %127, label %14

14:                                               ; preds = %5
  %15 = load i32, i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %0, i64 %16
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %2, i64 %19
  %21 = icmp sgt i32 %18, 0
  br i1 %21, label %22, label %115

22:                                               ; preds = %14
  %23 = ptrtoint i8* %20 to i64
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 0
  br label %25

25:                                               ; preds = %22, %111
  %26 = phi i8* [ %0, %22 ], [ %113, %111 ]
  %27 = phi i8* [ %2, %22 ], [ %67, %111 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp sgt i8 %29, -1
  br i1 %31, label %46, label %32

32:                                               ; preds = %25
  %33 = icmp ult i8 %29, -64
  br i1 %33, label %115, label %34

34:                                               ; preds = %32
  %35 = icmp ult i8 %29, -32
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = and i32 %30, 31
  br label %46

38:                                               ; preds = %34
  %39 = icmp ult i8 %29, -16
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = and i32 %30, 15
  br label %46

42:                                               ; preds = %38
  %43 = icmp ult i8 %29, -8
  br i1 %43, label %44, label %115

44:                                               ; preds = %42
  %45 = and i32 %30, 7
  br label %46

46:                                               ; preds = %25, %40, %44, %36
  %47 = phi i32 [ %37, %36 ], [ %41, %40 ], [ %45, %44 ], [ %30, %25 ]
  %48 = phi i32 [ 1, %36 ], [ 2, %40 ], [ 3, %44 ], [ 0, %25 ]
  %49 = ptrtoint i8* %28 to i64
  %50 = sub i64 %23, %49
  %51 = zext i32 %48 to i64
  %52 = icmp slt i64 %50, %51
  br i1 %52, label %115, label %53

53:                                               ; preds = %46
  %54 = icmp eq i32 %48, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %53
  %56 = load i8, i8* %28, align 1
  %57 = zext i8 %56 to i32
  %58 = and i32 %57, 192
  %59 = icmp eq i32 %58, 128
  br i1 %59, label %60, label %115

60:                                               ; preds = %55
  %61 = getelementptr inbounds i8, i8* %27, i64 2
  %62 = shl nuw nsw i32 %47, 6
  %63 = and i32 %57, 63
  %64 = or i32 %63, %62
  %65 = icmp eq i32 %48, 1
  br i1 %65, label %66, label %129

66:                                               ; preds = %60, %134, %145, %53
  %67 = phi i8* [ %28, %53 ], [ %61, %60 ], [ %135, %134 ], [ %146, %145 ]
  %68 = phi i32 [ %47, %53 ], [ %64, %60 ], [ %138, %134 ], [ %149, %145 ]
  %69 = icmp ult i32 %68, 128
  %70 = icmp ne i32 %68, %4
  %71 = and i1 %69, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %66
  switch i32 %68, label %73 [
    i32 62, label %77
    i32 60, label %77
    i32 38, label %77
  ]

73:                                               ; preds = %72
  %74 = icmp ult i8* %26, %17
  br i1 %74, label %75, label %115

75:                                               ; preds = %73
  %76 = trunc i32 %68 to i8
  store i8 %76, i8* %26, align 1
  br label %111

77:                                               ; preds = %72, %72, %72, %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 16, i1 false)
  br label %80

78:                                               ; preds = %80
  %79 = icmp eq i64 %86, 253
  br i1 %79, label %94, label %150

80:                                               ; preds = %167, %77
  %81 = phi i64 [ 0, %77 ], [ %168, %167 ]
  %82 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %81
  %83 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 16
  %85 = icmp ult i32 %84, %68
  %86 = or i64 %81, 1
  br i1 %85, label %78, label %87

87:                                               ; preds = %162, %156, %150, %80
  %88 = phi i64 [ %81, %80 ], [ %86, %150 ], [ %155, %156 ], [ %161, %162 ]
  %89 = phi %struct._htmlEntityDesc* [ %82, %80 ], [ %151, %150 ], [ %157, %156 ], [ %163, %162 ]
  %90 = phi i32 [ %84, %80 ], [ %153, %150 ], [ %159, %156 ], [ %165, %162 ]
  %91 = icmp ugt i32 %90, %68
  %92 = icmp eq %struct._htmlEntityDesc* %89, null
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %96

94:                                               ; preds = %78, %87
  %95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %24, i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %68) #9
  br label %99

96:                                               ; preds = %87
  %97 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %88, i32 1
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %94
  %100 = phi i8* [ %24, %94 ], [ %98, %96 ]
  %101 = call i64 @strlen(i8* %100) #10
  %102 = getelementptr inbounds i8, i8* %26, i64 2
  %103 = shl i64 %101, 32
  %104 = ashr exact i64 %103, 32
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  %106 = icmp ugt i8* %105, %17
  br i1 %106, label %110, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds i8, i8* %26, i64 1
  store i8 38, i8* %26, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* align 1 %100, i64 %104, i1 false)
  %109 = getelementptr inbounds i8, i8* %108, i64 %104
  store i8 59, i8* %109, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  br label %111

110:                                              ; preds = %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  br label %115

111:                                              ; preds = %107, %75
  %112 = phi i8* [ %26, %75 ], [ %109, %107 ]
  %113 = getelementptr inbounds i8, i8* %112, i64 1
  %114 = icmp ult i8* %67, %20
  br i1 %114, label %25, label %115

115:                                              ; preds = %73, %46, %111, %42, %32, %55, %129, %140, %110, %14
  %116 = phi i8* [ %26, %110 ], [ %0, %14 ], [ %26, %140 ], [ %26, %129 ], [ %26, %55 ], [ %113, %111 ], [ %26, %46 ], [ %26, %73 ], [ %26, %42 ], [ %26, %32 ]
  %117 = phi i8* [ %27, %110 ], [ %2, %14 ], [ %27, %140 ], [ %27, %129 ], [ %27, %55 ], [ %67, %111 ], [ %27, %46 ], [ %27, %73 ], [ %27, %42 ], [ %27, %32 ]
  %118 = phi i32 [ 0, %110 ], [ 0, %14 ], [ -2, %140 ], [ -2, %129 ], [ -2, %55 ], [ 0, %111 ], [ 0, %46 ], [ 0, %73 ], [ -2, %42 ], [ -2, %32 ]
  %119 = ptrtoint i8* %116 to i64
  %120 = ptrtoint i8* %0 to i64
  %121 = sub i64 %119, %120
  %122 = trunc i64 %121 to i32
  store i32 %122, i32* %1, align 4
  %123 = ptrtoint i8* %117 to i64
  %124 = ptrtoint i8* %2 to i64
  %125 = sub i64 %123, %124
  %126 = trunc i64 %125 to i32
  store i32 %126, i32* %3, align 4
  br label %127

127:                                              ; preds = %115, %5
  %128 = phi i32 [ -1, %5 ], [ %118, %115 ]
  ret i32 %128

129:                                              ; preds = %60
  %130 = load i8, i8* %61, align 1
  %131 = zext i8 %130 to i32
  %132 = and i32 %131, 192
  %133 = icmp eq i32 %132, 128
  br i1 %133, label %134, label %115

134:                                              ; preds = %129
  %135 = getelementptr inbounds i8, i8* %27, i64 3
  %136 = shl nuw nsw i32 %64, 6
  %137 = and i32 %131, 63
  %138 = or i32 %137, %136
  %139 = icmp eq i32 %48, 2
  br i1 %139, label %66, label %140

140:                                              ; preds = %134
  %141 = load i8, i8* %135, align 1
  %142 = zext i8 %141 to i32
  %143 = and i32 %142, 192
  %144 = icmp eq i32 %143, 128
  br i1 %144, label %145, label %115

145:                                              ; preds = %140
  %146 = getelementptr inbounds i8, i8* %27, i64 4
  %147 = shl nuw nsw i32 %138, 6
  %148 = and i32 %142, 63
  %149 = or i32 %148, %147
  br label %66

150:                                              ; preds = %78
  %151 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %86
  %152 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %151, i64 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = icmp ult i32 %153, %68
  %155 = or i64 %81, 2
  br i1 %154, label %156, label %87

156:                                              ; preds = %150
  %157 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %155
  %158 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %157, i64 0, i32 0
  %159 = load i32, i32* %158, align 16
  %160 = icmp ult i32 %159, %68
  %161 = or i64 %81, 3
  br i1 %160, label %162, label %87

162:                                              ; preds = %156
  %163 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %161
  %164 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 8
  %166 = icmp ult i32 %165, %68
  br i1 %166, label %167, label %87

167:                                              ; preds = %162
  %168 = add nuw nsw i64 %81, 4
  br label %80
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlNewDocNoDtD(i8*, i8*) local_unnamed_addr #1 {
  %3 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %4 = tail call i8* %3(i64 176) #9
  %5 = bitcast i8* %4 to %struct._xmlDoc*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %34

8:                                                ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 176, i1 false)
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 13, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 104
  %12 = getelementptr inbounds i8, i8* %4, i64 80
  %13 = bitcast i8* %12 to %struct._xmlDtd**
  store %struct._xmlDtd* null, %struct._xmlDtd** %13, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 64
  %15 = bitcast i8* %14 to i8**
  store i8* %4, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 16
  %17 = getelementptr inbounds i8, i8* %4, i64 88
  %18 = bitcast i8* %11 to <2 x i8*>*
  store <2 x i8*> zeroinitializer, <2 x i8*>* %18, align 8
  %19 = getelementptr inbounds i8, i8* %4, i64 76
  %20 = bitcast i8* %19 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %4, i64 72
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %4, i64 120
  %24 = bitcast i8* %4 to i8**
  store i8* null, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 144
  %26 = bitcast i8* %25 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false)
  store i32 1, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %4, i64 172
  %28 = bitcast i8* %27 to i32*
  store i32 160, i32* %28, align 4
  %29 = icmp ne i8* %1, null
  %30 = icmp ne i8* %0, null
  %31 = or i1 %30, %29
  br i1 %31, label %32, label %34

32:                                               ; preds = %8
  %33 = tail call %struct._xmlDtd* @xmlCreateIntSubset(%struct._xmlDoc* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* %1, i8* %0) #9
  br label %34

34:                                               ; preds = %32, %8, %7
  %35 = phi %struct._xmlDoc* [ null, %7 ], [ %5, %8 ], [ %5, %32 ]
  ret %struct._xmlDoc* %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %struct._xmlDtd* @xmlCreateIntSubset(%struct._xmlDoc*, i8*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlNewDoc(i8*, i8*) local_unnamed_addr #1 {
  %3 = icmp eq i8* %0, null
  %4 = icmp eq i8* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %34

6:                                                ; preds = %2
  %7 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %8 = tail call i8* %7(i64 176) #9
  %9 = bitcast i8* %8 to %struct._xmlDoc*
  %10 = icmp eq i8* %8, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %36

12:                                               ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 176, i1 false) #9
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 13, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 104
  %16 = getelementptr inbounds i8, i8* %8, i64 80
  %17 = bitcast i8* %16 to %struct._xmlDtd**
  store %struct._xmlDtd* null, %struct._xmlDtd** %17, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 64
  %19 = bitcast i8* %18 to i8**
  store i8* %8, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %8, i64 16
  %21 = getelementptr inbounds i8, i8* %8, i64 88
  %22 = bitcast i8* %15 to <2 x i8*>*
  store <2 x i8*> zeroinitializer, <2 x i8*>* %22, align 8
  %23 = getelementptr inbounds i8, i8* %8, i64 76
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %8, i64 72
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %8, i64 120
  %28 = bitcast i8* %8 to i8**
  store i8* null, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %8, i64 144
  %30 = bitcast i8* %29 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #9
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %8, i64 172
  %32 = bitcast i8* %31 to i32*
  store i32 160, i32* %32, align 4
  %33 = tail call %struct._xmlDtd* @xmlCreateIntSubset(%struct._xmlDoc* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %36

34:                                               ; preds = %2
  %35 = tail call %struct._xmlDoc* @htmlNewDocNoDtD(i8* %0, i8* %1)
  br label %36

36:                                               ; preds = %12, %11, %34
  %37 = phi %struct._xmlDoc* [ %35, %34 ], [ null, %11 ], [ %9, %12 ]
  ret %struct._xmlDoc* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._htmlEntityDesc* @htmlParseEntityRef(%struct._xmlParserCtxt*, i8**) local_unnamed_addr #1 {
  %3 = icmp ne i8** %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i8* null, i8** %1, align 8
  br label %5

5:                                                ; preds = %4, %2
  %6 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %9 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %10 = icmp eq %struct._xmlParserInput* %9, null
  br i1 %10, label %84, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %9, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 38
  br i1 %15, label %16, label %84

16:                                               ; preds = %11
  tail call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  %17 = tail call fastcc i8* @htmlParseName(%struct._xmlParserCtxt* nonnull %0)
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %84, label %27

27:                                               ; preds = %23, %19
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 68, i32* %28, align 8
  %29 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %29, i8* null, i32 5, i32 68, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8* null, i8* null) #9
  %30 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %30, align 8
  br label %84

31:                                               ; preds = %16
  %32 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %37 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %36, i64 0, i32 5
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %36, i64 0, i32 4
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %39, %42
  %44 = icmp slt i64 %43, 250
  br i1 %44, label %45, label %47

45:                                               ; preds = %35
  %46 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %36, i32 250) #9
  br label %47

47:                                               ; preds = %45, %35, %31
  %48 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %49 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %48, i64 0, i32 4
  %50 = load i8*, i8** %49, align 8
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 59
  br i1 %52, label %53, label %70

53:                                               ; preds = %47
  br i1 %3, label %54, label %55

54:                                               ; preds = %53
  store i8* %17, i8** %1, align 8
  br label %55

55:                                               ; preds = %54, %53
  br label %58

56:                                               ; preds = %58
  %57 = icmp eq i64 %64, 253
  br i1 %57, label %84, label %58

58:                                               ; preds = %55, %56
  %59 = phi i64 [ %64, %56 ], [ 0, %55 ]
  %60 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %59, i32 1
  %61 = load i8*, i8** %60, align 8
  %62 = tail call i32 @xmlStrEqual(i8* nonnull %17, i8* %61) #9
  %63 = icmp eq i32 %62, 0
  %64 = add nuw nsw i64 %59, 1
  br i1 %63, label %56, label %65

65:                                               ; preds = %58
  %66 = and i64 %59, 4294967295
  %67 = getelementptr inbounds [253 x %struct._htmlEntityDesc], [253 x %struct._htmlEntityDesc]* @html40EntitiesTable, i64 0, i64 %66
  %68 = icmp eq %struct._htmlEntityDesc* %67, null
  br i1 %68, label %84, label %69

69:                                               ; preds = %65
  tail call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  br label %84

70:                                               ; preds = %47
  %71 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %82, label %78

78:                                               ; preds = %74, %70
  %79 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 23, i32* %79, align 8
  %80 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %80, i8* null, i32 5, i32 23, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i8* null, i8* null) #9
  %81 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %81, align 8
  br label %82

82:                                               ; preds = %74, %78
  br i1 %3, label %83, label %84

83:                                               ; preds = %82
  store i8* %17, i8** %1, align 8
  br label %84

84:                                               ; preds = %56, %27, %23, %11, %69, %83, %82, %65, %5, %7
  %85 = phi %struct._htmlEntityDesc* [ null, %7 ], [ null, %5 ], [ %67, %69 ], [ null, %65 ], [ null, %83 ], [ null, %82 ], [ null, %11 ], [ null, %23 ], [ null, %27 ], [ null, %56 ]
  ret %struct._htmlEntityDesc* %85
}

declare void @xmlNextChar(%struct._xmlParserCtxt*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @htmlParseName(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %7 = load %struct._xmlParserInput*, %struct._xmlParserInput** %6, align 8
  %8 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %7, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %7, i64 0, i32 4
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = icmp slt i64 %14, 250
  br i1 %15, label %16, label %18

16:                                               ; preds = %5
  %17 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %7, i32 250) #9
  br label %18

18:                                               ; preds = %16, %5, %1
  %19 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %20 = load %struct._xmlParserInput*, %struct._xmlParserInput** %19, align 8
  %21 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %20, i64 0, i32 4
  %22 = load i8*, i8** %21, align 8
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, -33
  %25 = add i8 %24, -65
  %26 = icmp ult i8 %25, 26
  br i1 %26, label %28, label %27

27:                                               ; preds = %18
  switch i8 %23, label %61 [
    i8 95, label %28
    i8 58, label %28
  ]

28:                                               ; preds = %27, %27, %18
  br label %29

29:                                               ; preds = %40, %28
  %30 = phi i8* [ %22, %28 ], [ %31, %40 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, -33
  %34 = add i8 %33, -65
  %35 = icmp ult i8 %34, 26
  %36 = add i8 %32, -48
  %37 = icmp ult i8 %36, 10
  %38 = or i1 %37, %35
  br i1 %38, label %40, label %39

39:                                               ; preds = %29
  switch i8 %32, label %41 [
    i8 95, label %40
    i8 45, label %40
    i8 58, label %40
    i8 46, label %40
  ]

40:                                               ; preds = %39, %39, %39, %39, %29
  br label %29

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %20, i64 0, i32 5
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %31, %43
  br i1 %44, label %63, label %45

45:                                               ; preds = %41
  %46 = icmp sgt i8 %32, 0
  br i1 %46, label %47, label %61

47:                                               ; preds = %45
  %48 = ptrtoint i8* %31 to i64
  %49 = ptrtoint i8* %22 to i64
  %50 = sub i64 %48, %49
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 57
  %53 = load %struct._xmlDict*, %struct._xmlDict** %52, align 8
  %54 = tail call i8* @xmlDictLookup(%struct._xmlDict* %53, i8* %22, i32 %51) #9
  %55 = load %struct._xmlParserInput*, %struct._xmlParserInput** %19, align 8
  %56 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %55, i64 0, i32 4
  store i8* %31, i8** %56, align 8
  %57 = load %struct._xmlParserInput*, %struct._xmlParserInput** %19, align 8
  %58 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %57, i64 0, i32 8
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, %51
  store i32 %60, i32* %58, align 8
  br label %63

61:                                               ; preds = %45, %27
  %62 = tail call fastcc i8* @htmlParseNameComplex(%struct._xmlParserCtxt* %0)
  br label %63

63:                                               ; preds = %41, %61, %47
  %64 = phi i8* [ %54, %47 ], [ %62, %61 ], [ null, %41 ]
  ret i8* %64
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParseErr(%struct._xmlParserCtxt*, i32, i8*, i8*, i8*) unnamed_addr #1 {
  %6 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %20, label %15

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 %1, i32* %16, align 8
  %17 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %17, i8* null, i32 5, i32 %1, i32 2, i8* null, i32 0, i8* %3, i8* %4, i8* null, i32 0, i32 0, i8* %2, i8* %3, i8* %4) #9
  %18 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %18, align 8
  br label %20

19:                                               ; preds = %5
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 5, i32 %1, i32 2, i8* null, i32 0, i8* %3, i8* %4, i8* null, i32 0, i32 0, i8* %2, i8* %3, i8* %4) #9
  br label %20

20:                                               ; preds = %19, %11, %15
  ret void
}

declare i32 @xmlParserInputGrow(%struct._xmlParserInput*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlParseCharRef(%struct._xmlParserCtxt*) local_unnamed_addr #1 {
  %2 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %5 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %6 = icmp eq %struct._xmlParserInput* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3, %1
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* null, i8* null)
  br label %199

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %5, i64 0, i32 4
  %10 = load i8*, i8** %9, align 8
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 38
  br i1 %12, label %13, label %146

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, i8* %10, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 35
  br i1 %16, label %17, label %146

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %10, i64 2
  %19 = load i8, i8* %18, align 1
  switch i8 %19, label %90 [
    i8 120, label %20
    i8 88, label %20
  ]

20:                                               ; preds = %17, %17
  %21 = getelementptr inbounds i8, i8* %10, i64 3
  store i8* %21, i8** %9, align 8
  %22 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %23 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %22, i64 0, i32 8
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 3
  store i32 %25, i32* %23, align 8
  %26 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %27 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %26, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 59
  br i1 %30, label %82, label %31

31:                                               ; preds = %20, %75
  %32 = phi %struct._xmlParserInput* [ %77, %75 ], [ %26, %20 ]
  %33 = phi i8 [ %80, %75 ], [ %29, %20 ]
  %34 = phi i32 [ %76, %75 ], [ 0, %20 ]
  %35 = zext i8 %33 to i32
  %36 = add i8 %33, -48
  %37 = icmp ult i8 %36, 10
  br i1 %37, label %38, label %44

38:                                               ; preds = %31
  %39 = icmp slt i32 %34, 1114112
  br i1 %39, label %40, label %75

40:                                               ; preds = %38
  %41 = shl i32 %34, 4
  %42 = add i32 %41, -48
  %43 = add i32 %42, %35
  br label %75

44:                                               ; preds = %31
  %45 = add i8 %33, -97
  %46 = icmp ult i8 %45, 6
  br i1 %46, label %47, label %53

47:                                               ; preds = %44
  %48 = icmp slt i32 %34, 1114112
  br i1 %48, label %49, label %75

49:                                               ; preds = %47
  %50 = shl i32 %34, 4
  %51 = add i32 %50, -87
  %52 = add i32 %51, %35
  br label %75

53:                                               ; preds = %44
  %54 = add i8 %33, -65
  %55 = icmp ult i8 %54, 6
  br i1 %55, label %56, label %62

56:                                               ; preds = %53
  %57 = icmp slt i32 %34, 1114112
  br i1 %57, label %58, label %75

58:                                               ; preds = %56
  %59 = shl i32 %34, 4
  %60 = add i32 %59, -55
  %61 = add i32 %60, %35
  br label %75

62:                                               ; preds = %53
  %63 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %82, label %70

70:                                               ; preds = %66, %62
  %71 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 6, i32* %71, align 8
  %72 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %72, i8* null, i32 5, i32 6, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i8* null, i8* null) #9
  %73 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %73, align 8
  %74 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  br label %82

75:                                               ; preds = %49, %47, %56, %58, %38, %40
  %76 = phi i32 [ %43, %40 ], [ %34, %38 ], [ %52, %49 ], [ %34, %47 ], [ %61, %58 ], [ %34, %56 ]
  tail call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  %77 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %78 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %77, i64 0, i32 4
  %79 = load i8*, i8** %78, align 8
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 59
  br i1 %81, label %82, label %31

82:                                               ; preds = %75, %20, %70, %66
  %83 = phi %struct._xmlParserInput* [ %74, %70 ], [ %32, %66 ], [ %26, %20 ], [ %77, %75 ]
  %84 = phi i32 [ %34, %70 ], [ %34, %66 ], [ 0, %20 ], [ %76, %75 ]
  %85 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %83, i64 0, i32 4
  %86 = load i8*, i8** %85, align 8
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 59
  br i1 %88, label %89, label %158

89:                                               ; preds = %82
  tail call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  br label %158

90:                                               ; preds = %17
  %91 = getelementptr inbounds i8, i8* %10, i64 2
  store i8* %91, i8** %9, align 8
  %92 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %93 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %92, i64 0, i32 8
  %94 = load i32, i32* %93, align 8
  %95 = add nsw i32 %94, 2
  store i32 %95, i32* %93, align 8
  %96 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %97 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %96, i64 0, i32 4
  %98 = load i8*, i8** %97, align 8
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 59
  br i1 %100, label %138, label %101

101:                                              ; preds = %90
  %102 = add i8 %99, -48
  %103 = icmp ult i8 %102, 10
  br i1 %103, label %107, label %116

104:                                              ; preds = %131
  %105 = add i8 %136, -48
  %106 = icmp ult i8 %105, 10
  br i1 %106, label %107, label %116

107:                                              ; preds = %101, %104
  %108 = phi i8 [ %136, %104 ], [ %99, %101 ]
  %109 = phi i32 [ %132, %104 ], [ 0, %101 ]
  %110 = icmp slt i32 %109, 1114112
  br i1 %110, label %111, label %131

111:                                              ; preds = %107
  %112 = zext i8 %108 to i32
  %113 = mul nsw i32 %109, 10
  %114 = add i32 %113, -48
  %115 = add i32 %114, %112
  br label %131

116:                                              ; preds = %104, %101
  %117 = phi %struct._xmlParserInput* [ %96, %101 ], [ %133, %104 ]
  %118 = phi i32 [ 0, %101 ], [ %132, %104 ]
  %119 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %138, label %126

126:                                              ; preds = %122, %116
  %127 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 7, i32* %127, align 8
  %128 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %128, i8* null, i32 5, i32 7, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i8* null, i8* null) #9
  %129 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %129, align 8
  %130 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  br label %138

131:                                              ; preds = %107, %111
  %132 = phi i32 [ %115, %111 ], [ %109, %107 ]
  tail call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  %133 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %134 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %133, i64 0, i32 4
  %135 = load i8*, i8** %134, align 8
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 59
  br i1 %137, label %138, label %104

138:                                              ; preds = %131, %90, %126, %122
  %139 = phi %struct._xmlParserInput* [ %130, %126 ], [ %117, %122 ], [ %96, %90 ], [ %133, %131 ]
  %140 = phi i32 [ %118, %126 ], [ %118, %122 ], [ 0, %90 ], [ %132, %131 ]
  %141 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %139, i64 0, i32 4
  %142 = load i8*, i8** %141, align 8
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 59
  br i1 %144, label %145, label %158

145:                                              ; preds = %138
  tail call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  br label %158

146:                                              ; preds = %13, %8
  %147 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %186, label %154

154:                                              ; preds = %150, %146
  %155 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 8, i32* %155, align 8
  %156 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %156, i8* null, i32 5, i32 8, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* null, i8* null) #9
  %157 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %157, align 8
  br label %186

158:                                              ; preds = %145, %138, %82, %89
  %159 = phi i32 [ %84, %89 ], [ %84, %82 ], [ %140, %145 ], [ %140, %138 ]
  %160 = icmp slt i32 %159, 256
  br i1 %160, label %161, label %164

161:                                              ; preds = %158
  %162 = icmp sgt i32 %159, 31
  br i1 %162, label %199, label %163

163:                                              ; preds = %161
  switch i32 %159, label %186 [
    i32 13, label %199
    i32 10, label %199
    i32 9, label %199
  ]

164:                                              ; preds = %158
  %165 = icmp slt i32 %159, 55296
  %166 = add nsw i32 %159, -57344
  %167 = icmp ult i32 %166, 8190
  %168 = or i1 %165, %167
  %169 = add nsw i32 %159, -65536
  %170 = icmp ult i32 %169, 1048576
  %171 = or i1 %170, %168
  br i1 %171, label %199, label %172

172:                                              ; preds = %164
  %173 = icmp sgt i32 %159, 1114111
  br i1 %173, label %174, label %186

174:                                              ; preds = %172
  %175 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %180, -1
  br i1 %181, label %199, label %182

182:                                              ; preds = %178, %174
  %183 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 9, i32* %183, align 8
  %184 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %184, i8* null, i32 5, i32 9, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), i8* null, i8* null) #9
  %185 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %185, align 8
  br label %199

186:                                              ; preds = %154, %150, %163, %172
  %187 = phi i32 [ %159, %172 ], [ %159, %163 ], [ 0, %150 ], [ 0, %154 ]
  %188 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, -1
  br i1 %194, label %199, label %195

195:                                              ; preds = %191, %186
  %196 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 9, i32* %196, align 8
  %197 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %197, i8* null, i32 5, i32 9, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 %187, i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i32 %187) #9
  %198 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %198, align 8
  br label %199

199:                                              ; preds = %195, %191, %182, %178, %164, %161, %163, %163, %163, %7
  %200 = phi i32 [ 0, %7 ], [ %159, %163 ], [ %159, %163 ], [ %159, %163 ], [ %159, %161 ], [ %159, %164 ], [ 0, %178 ], [ 0, %182 ], [ 0, %191 ], [ 0, %195 ]
  ret i32 %200
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParseErrInt(%struct._xmlParserCtxt*, i8*, i32) unnamed_addr #1 {
  %4 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %18, label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 9, i32* %14, align 8
  %15 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %15, i8* null, i32 5, i32 9, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 %2, i32 0, i8* %1, i32 %2) #9
  %16 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %16, align 8
  br label %18

17:                                               ; preds = %3
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 5, i32 9, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 %2, i32 0, i8* %1, i32 %2) #9
  br label %18

18:                                               ; preds = %17, %9, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlParseElement(%struct._xmlParserCtxt*) local_unnamed_addr #1 {
  %2 = alloca [100 x i8], align 16
  %3 = alloca %struct._xmlParserNodeInfo, align 8
  %4 = bitcast %struct._xmlParserNodeInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %3, i64 0, i32 1
  %6 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %3, i64 0, i32 2
  %7 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %3, i64 0, i32 3
  %8 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %3, i64 0, i32 4
  %9 = icmp eq %struct._xmlParserCtxt* %0, null
  %10 = bitcast %struct._xmlParserNodeInfo* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  br i1 %9, label %15, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %13 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %14 = icmp eq %struct._xmlParserInput* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %1
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* null, i8* null)
  br label %667

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %667, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 17
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 9
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 4
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 3
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %29, %26
  %34 = sub i64 %33, %32
  store i64 %34, i64* %5, align 8
  %35 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 7
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  store i64 %37, i64* %6, align 8
  br label %38

38:                                               ; preds = %20, %24
  %39 = tail call fastcc i32 @htmlParseStartTag(%struct._xmlParserCtxt* nonnull %0)
  %40 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i32 %39, -1
  %43 = icmp eq i8* %41, null
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %38
  %46 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %47 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %46, i64 0, i32 4
  %48 = load i8*, i8** %47, align 8
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 62
  br i1 %50, label %51, label %667

51:                                               ; preds = %45
  tail call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  br label %667

52:                                               ; preds = %38, %66
  %53 = phi i64 [ %68, %66 ], [ 92, %38 ]
  %54 = phi i64 [ %67, %66 ], [ 0, %38 ]
  %55 = add i64 %54, %53
  %56 = lshr i64 %55, 1
  %57 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %56
  %58 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %57, i64 0, i32 0
  %59 = load i8*, i8** %58, align 16
  %60 = tail call i32 @xmlStrcasecmp(i8* nonnull %41, i8* %59) #9
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %52
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %62
  %65 = add nuw i64 %56, 1
  br label %66

66:                                               ; preds = %64, %52
  %67 = phi i64 [ %65, %64 ], [ %54, %52 ]
  %68 = phi i64 [ %53, %64 ], [ %56, %52 ]
  %69 = icmp ult i64 %67, %68
  br i1 %69, label %52, label %72

70:                                               ; preds = %62
  %71 = icmp eq %struct._htmlElemDesc* %57, null
  br i1 %71, label %72, label %73

72:                                               ; preds = %66, %70
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 801, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* %41, i8* null)
  br label %73

73:                                               ; preds = %72, %70
  %74 = phi i1 [ true, %72 ], [ false, %70 ]
  %75 = phi %struct._htmlElemDesc* [ null, %72 ], [ %57, %70 ]
  %76 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %77 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %76, i64 0, i32 4
  %78 = load i8*, i8** %77, align 8
  %79 = load i8, i8* %78, align 1
  switch i8 %79, label %124 [
    i8 47, label %80
    i8 62, label %123
  ]

80:                                               ; preds = %73
  %81 = getelementptr inbounds i8, i8* %78, i64 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 62
  br i1 %83, label %84, label %124

84:                                               ; preds = %80
  %85 = getelementptr inbounds i8, i8* %78, i64 2
  store i8* %85, i8** %77, align 8
  %86 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %87 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %86, i64 0, i32 8
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, 2
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %91 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %90, align 8
  %92 = icmp eq %struct._xmlSAXHandler* %91, null
  br i1 %92, label %100, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %91, i64 0, i32 15
  %95 = load void (i8*, i8*)*, void (i8*, i8*)** %94, align 8
  %96 = icmp eq void (i8*, i8*)* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %99 = load i8*, i8** %98, align 8
  tail call void %95(i8* %99, i8* %41) #9
  br label %100

100:                                              ; preds = %93, %84, %97
  %101 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %102 = load i32, i32* %101, align 8
  %103 = icmp slt i32 %102, 1
  br i1 %103, label %667, label %104

104:                                              ; preds = %100
  %105 = add nsw i32 %102, -1
  store i32 %105, i32* %101, align 8
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %116

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %109 = load i8**, i8*** %108, align 8
  %110 = add nsw i32 %102, -2
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8*, i8** %109, i64 %111
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i8** %40 to i64*
  store i64 %114, i64* %115, align 8
  br label %119

116:                                              ; preds = %104
  store i8* null, i8** %40, align 8
  %117 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %118 = load i8**, i8*** %117, align 8
  br label %119

119:                                              ; preds = %116, %107
  %120 = phi i8** [ %118, %116 ], [ %109, %107 ]
  %121 = sext i32 %105 to i64
  %122 = getelementptr inbounds i8*, i8** %120, i64 %121
  store i8* null, i8** %122, align 8
  br label %667

123:                                              ; preds = %73
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br i1 %74, label %212, label %174

124:                                              ; preds = %73, %80
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 73, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i8* %41, i8* null)
  %125 = load i8*, i8** %40, align 8
  %126 = tail call i32 @xmlStrEqual(i8* %41, i8* %125) #9
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %152, label %128

128:                                              ; preds = %124
  %129 = tail call %struct._xmlNode* @nodePop(%struct._xmlParserCtxt* %0) #9
  %130 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %131 = load i32, i32* %130, align 8
  %132 = icmp slt i32 %131, 1
  br i1 %132, label %152, label %133

133:                                              ; preds = %128
  %134 = add nsw i32 %131, -1
  store i32 %134, i32* %130, align 8
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %145

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %138 = load i8**, i8*** %137, align 8
  %139 = add nsw i32 %131, -2
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8*, i8** %138, i64 %140
  %142 = bitcast i8** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast i8** %40 to i64*
  store i64 %143, i64* %144, align 8
  br label %148

145:                                              ; preds = %133
  store i8* null, i8** %40, align 8
  %146 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %147 = load i8**, i8*** %146, align 8
  br label %148

148:                                              ; preds = %145, %136
  %149 = phi i8** [ %147, %145 ], [ %138, %136 ]
  %150 = sext i32 %134 to i64
  %151 = getelementptr inbounds i8*, i8** %149, i64 %150
  store i8* null, i8** %151, align 8
  br label %152

152:                                              ; preds = %148, %128, %124
  %153 = load i32, i32* %21, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %667, label %155

155:                                              ; preds = %152
  %156 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %157 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %156, i64 0, i32 9
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %156, i64 0, i32 4
  %160 = bitcast i8** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %156, i64 0, i32 3
  %163 = bitcast i8** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %161, %158
  %166 = sub i64 %165, %164
  store i64 %166, i64* %7, align 8
  %167 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %156, i64 0, i32 7
  %168 = load i32, i32* %167, align 4
  %169 = sext i32 %168 to i64
  store i64 %169, i64* %8, align 8
  %170 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 13
  %171 = bitcast %struct._xmlNode** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %struct._xmlParserNodeInfo* %3 to i64*
  store i64 %172, i64* %173, align 8
  call void @xmlParserAddNodeInfo(%struct._xmlParserCtxt* %0, %struct._xmlParserNodeInfo* nonnull %3) #9
  br label %667

174:                                              ; preds = %123
  %175 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %75, i64 0, i32 4
  %176 = load i8, i8* %175, align 1
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %212, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %180 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %179, align 8
  %181 = icmp eq %struct._xmlSAXHandler* %180, null
  br i1 %181, label %189, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %180, i64 0, i32 15
  %184 = load void (i8*, i8*)*, void (i8*, i8*)** %183, align 8
  %185 = icmp eq void (i8*, i8*)* %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %188 = load i8*, i8** %187, align 8
  tail call void %184(i8* %188, i8* %41) #9
  br label %189

189:                                              ; preds = %182, %178, %186
  %190 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %191 = load i32, i32* %190, align 8
  %192 = icmp slt i32 %191, 1
  br i1 %192, label %667, label %193

193:                                              ; preds = %189
  %194 = add nsw i32 %191, -1
  store i32 %194, i32* %190, align 8
  %195 = icmp sgt i32 %194, 0
  br i1 %195, label %196, label %205

196:                                              ; preds = %193
  %197 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %198 = load i8**, i8*** %197, align 8
  %199 = add nsw i32 %191, -2
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8*, i8** %198, i64 %200
  %202 = bitcast i8** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast i8** %40 to i64*
  store i64 %203, i64* %204, align 8
  br label %208

205:                                              ; preds = %193
  store i8* null, i8** %40, align 8
  %206 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %207 = load i8**, i8*** %206, align 8
  br label %208

208:                                              ; preds = %205, %196
  %209 = phi i8** [ %207, %205 ], [ %198, %196 ]
  %210 = sext i32 %194 to i64
  %211 = getelementptr inbounds i8*, i8** %209, i64 %210
  store i8* null, i8** %211, align 8
  br label %667

212:                                              ; preds = %174, %123
  %213 = load i8*, i8** %40, align 8
  %214 = tail call i8* @xmlStrdup(i8* %213) #9
  %215 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %216 = load i32, i32* %215, align 8
  %217 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  %218 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 0
  %219 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 57
  %220 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %221 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %222 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %223 = bitcast i8** %40 to i64*
  %224 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %225 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %224, i64 0, i32 4
  %226 = load i8*, i8** %225, align 8
  %227 = load i8, i8* %226, align 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %596, label %232

229:                                              ; preds = %593
  %230 = load i8, i8* %591, align 1
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %596, label %232

232:                                              ; preds = %212, %229
  %233 = phi i8* [ %591, %229 ], [ %226, %212 ]
  %234 = load i8*, i8** %40, align 8
  %235 = call i8* @xmlStrdup(i8* %234) #9
  %236 = load i32, i32* %215, align 8
  %237 = icmp eq i8* %235, null
  br label %238

238:                                              ; preds = %572, %232
  %239 = load i32, i32* %217, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %253

241:                                              ; preds = %238
  %242 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %243 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %242, i64 0, i32 5
  %244 = bitcast i8** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %242, i64 0, i32 4
  %247 = bitcast i8** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = sub i64 %245, %248
  %250 = icmp slt i64 %249, 250
  br i1 %250, label %251, label %253

251:                                              ; preds = %241
  %252 = call i32 @xmlParserInputGrow(%struct._xmlParserInput* %242, i32 250) #9
  br label %253

253:                                              ; preds = %251, %241, %238
  %254 = load i32, i32* %17, align 8
  %255 = icmp eq i32 %254, -1
  br i1 %255, label %585, label %256

256:                                              ; preds = %253
  %257 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %258 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %257, i64 0, i32 4
  %259 = load i8*, i8** %258, align 8
  %260 = load i8, i8* %259, align 1
  %261 = icmp eq i8 %260, 60
  br i1 %261, label %262, label %422

262:                                              ; preds = %256
  %263 = getelementptr inbounds i8, i8* %259, i64 1
  %264 = load i8, i8* %263, align 1
  %265 = icmp eq i8 %264, 47
  br i1 %265, label %266, label %275

266:                                              ; preds = %262
  %267 = call fastcc i32 @htmlParseEndTag(%struct._xmlParserCtxt* %0) #9
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %572, label %269

269:                                              ; preds = %266
  br i1 %237, label %270, label %273

270:                                              ; preds = %269
  %271 = load i32, i32* %215, align 8
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %588, label %572

273:                                              ; preds = %269
  %274 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %274(i8* nonnull %235) #9
  br label %588

275:                                              ; preds = %262
  %276 = and i8 %264, -33
  %277 = add i8 %276, -65
  %278 = icmp ult i8 %277, 26
  br i1 %278, label %280, label %279

279:                                              ; preds = %275
  switch i8 %264, label %422 [
    i8 95, label %280
    i8 58, label %280
  ]

280:                                              ; preds = %279, %279, %275
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %218) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %218, i8 -86, i64 100, i1 false) #9
  %281 = load i8*, i8** %258, align 8
  %282 = getelementptr inbounds i8, i8* %281, i64 1
  %283 = load i8, i8* %282, align 1
  %284 = and i8 %283, -33
  %285 = add i8 %284, -65
  %286 = icmp ult i8 %285, 26
  br i1 %286, label %287, label %288

287:                                              ; preds = %288, %288, %280
  br label %290

288:                                              ; preds = %280
  switch i8 %283, label %289 [
    i8 95, label %287
    i8 58, label %287
  ]

289:                                              ; preds = %288
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %218) #9
  br label %322

290:                                              ; preds = %287, %313
  %291 = phi i8* [ %314, %313 ], [ %281, %287 ]
  %292 = phi i64 [ %294, %313 ], [ 0, %287 ]
  %293 = phi i32 [ %295, %313 ], [ 0, %287 ]
  %294 = add nuw nsw i64 %292, 1
  %295 = add nuw nsw i32 %293, 1
  %296 = getelementptr inbounds i8, i8* %291, i64 %294
  %297 = load i8, i8* %296, align 1
  %298 = add i8 %297, -65
  %299 = icmp ult i8 %298, 26
  br i1 %299, label %307, label %300

300:                                              ; preds = %290
  %301 = add i8 %297, -97
  %302 = icmp ult i8 %301, 26
  %303 = add i8 %297, -48
  %304 = icmp ult i8 %303, 10
  %305 = or i1 %302, %304
  br i1 %305, label %309, label %306

306:                                              ; preds = %300
  switch i8 %297, label %315 [
    i8 58, label %309
    i8 45, label %309
    i8 95, label %309
  ]

307:                                              ; preds = %290
  %308 = add nuw nsw i8 %297, 32
  br label %309

309:                                              ; preds = %300, %306, %306, %306, %307
  %310 = phi i8 [ %308, %307 ], [ %297, %306 ], [ %297, %306 ], [ %297, %306 ], [ %297, %300 ]
  %311 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 %292
  store i8 %310, i8* %311, align 1
  %312 = icmp eq i64 %294, 100
  br i1 %312, label %317, label %313

313:                                              ; preds = %309
  %314 = load i8*, i8** %258, align 8
  br label %290

315:                                              ; preds = %306
  %316 = trunc i64 %292 to i32
  br label %317

317:                                              ; preds = %309, %315
  %318 = phi i32 [ %316, %315 ], [ %295, %309 ]
  %319 = load %struct._xmlDict*, %struct._xmlDict** %219, align 8
  %320 = call i8* @xmlDictLookup(%struct._xmlDict* %319, i8* nonnull %218, i32 %318) #9
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %218) #9
  %321 = icmp eq i8* %320, null
  br i1 %321, label %322, label %332

322:                                              ; preds = %317, %289
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 68, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.831, i64 0, i64 0), i8* null, i8* null) #9
  br label %323

323:                                              ; preds = %328, %322
  %324 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %325 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %324, i64 0, i32 4
  %326 = load i8*, i8** %325, align 8
  %327 = load i8, i8* %326, align 1
  switch i8 %327, label %328 [
    i8 0, label %329
    i8 62, label %329
  ]

328:                                              ; preds = %323
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %323

329:                                              ; preds = %323, %323
  br i1 %237, label %588, label %330

330:                                              ; preds = %329
  %331 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %331(i8* nonnull %235) #9
  br label %588

332:                                              ; preds = %317
  %333 = load i8*, i8** %40, align 8
  %334 = icmp eq i8* %333, null
  br i1 %334, label %422, label %335

335:                                              ; preds = %332, %356
  %336 = phi i64 [ %358, %356 ], [ 251, %332 ]
  %337 = phi i64 [ %357, %356 ], [ 0, %332 ]
  %338 = add i64 %337, %336
  %339 = lshr i64 %338, 1
  %340 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %339
  %341 = getelementptr inbounds %struct.htmlStartCloseEntry, %struct.htmlStartCloseEntry* %340, i64 0, i32 0
  %342 = load i8*, i8** %341, align 16
  %343 = call i32 @strcmp(i8* nonnull %333, i8* %342) #10
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %349

345:                                              ; preds = %335
  %346 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %339, i32 1
  %347 = load i8*, i8** %346, align 8
  %348 = call i32 @strcmp(i8* nonnull %320, i8* %347) #10
  br label %349

349:                                              ; preds = %345, %335
  %350 = phi i32 [ %348, %345 ], [ %343, %335 ]
  %351 = icmp slt i32 %350, 0
  br i1 %351, label %356, label %352

352:                                              ; preds = %349
  %353 = icmp eq i32 %350, 0
  br i1 %353, label %360, label %354

354:                                              ; preds = %352
  %355 = add nuw i64 %339, 1
  br label %356

356:                                              ; preds = %354, %349
  %357 = phi i64 [ %355, %354 ], [ %337, %349 ]
  %358 = phi i64 [ %336, %354 ], [ %339, %349 ]
  %359 = icmp ult i64 %357, %358
  br i1 %359, label %335, label %422

360:                                              ; preds = %352
  %361 = icmp eq %struct.htmlStartCloseEntry* %340, null
  br i1 %361, label %422, label %362

362:                                              ; preds = %360, %419
  %363 = phi i8* [ %420, %419 ], [ %333, %360 ]
  br label %364

364:                                              ; preds = %362, %385
  %365 = phi i64 [ %387, %385 ], [ 251, %362 ]
  %366 = phi i64 [ %386, %385 ], [ 0, %362 ]
  %367 = add i64 %366, %365
  %368 = lshr i64 %367, 1
  %369 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %368
  %370 = getelementptr inbounds %struct.htmlStartCloseEntry, %struct.htmlStartCloseEntry* %369, i64 0, i32 0
  %371 = load i8*, i8** %370, align 16
  %372 = call i32 @strcmp(i8* nonnull %363, i8* %371) #10
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %378

374:                                              ; preds = %364
  %375 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %368, i32 1
  %376 = load i8*, i8** %375, align 8
  %377 = call i32 @strcmp(i8* nonnull %320, i8* %376) #10
  br label %378

378:                                              ; preds = %374, %364
  %379 = phi i32 [ %377, %374 ], [ %372, %364 ]
  %380 = icmp slt i32 %379, 0
  br i1 %380, label %385, label %381

381:                                              ; preds = %378
  %382 = icmp eq i32 %379, 0
  br i1 %382, label %389, label %383

383:                                              ; preds = %381
  %384 = add nuw i64 %368, 1
  br label %385

385:                                              ; preds = %383, %378
  %386 = phi i64 [ %384, %383 ], [ %366, %378 ]
  %387 = phi i64 [ %365, %383 ], [ %368, %378 ]
  %388 = icmp ult i64 %386, %387
  br i1 %388, label %364, label %572

389:                                              ; preds = %381
  %390 = icmp eq %struct.htmlStartCloseEntry* %369, null
  br i1 %390, label %572, label %391

391:                                              ; preds = %389
  %392 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %220, align 8
  %393 = icmp eq %struct._xmlSAXHandler* %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %391
  %395 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %392, i64 0, i32 15
  %396 = load void (i8*, i8*)*, void (i8*, i8*)** %395, align 8
  %397 = icmp eq void (i8*, i8*)* %396, null
  br i1 %397, label %400, label %398

398:                                              ; preds = %394
  %399 = load i8*, i8** %221, align 8
  call void %396(i8* %399, i8* nonnull %363) #9
  br label %400

400:                                              ; preds = %398, %394, %391
  %401 = load i32, i32* %215, align 8
  %402 = icmp slt i32 %401, 1
  br i1 %402, label %419, label %403

403:                                              ; preds = %400
  %404 = add nsw i32 %401, -1
  store i32 %404, i32* %215, align 8
  %405 = icmp sgt i32 %404, 0
  br i1 %405, label %406, label %413

406:                                              ; preds = %403
  %407 = load i8**, i8*** %222, align 8
  %408 = add nsw i32 %401, -2
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8*, i8** %407, i64 %409
  %411 = bitcast i8** %410 to i64*
  %412 = load i64, i64* %411, align 8
  store i64 %412, i64* %223, align 8
  br label %415

413:                                              ; preds = %403
  store i8* null, i8** %40, align 8
  %414 = load i8**, i8*** %222, align 8
  br label %415

415:                                              ; preds = %413, %406
  %416 = phi i8** [ %414, %413 ], [ %407, %406 ]
  %417 = sext i32 %404 to i64
  %418 = getelementptr inbounds i8*, i8** %416, i64 %417
  store i8* null, i8** %418, align 8
  br label %419

419:                                              ; preds = %415, %400
  %420 = load i8*, i8** %40, align 8
  %421 = icmp eq i8* %420, null
  br i1 %421, label %572, label %362

422:                                              ; preds = %356, %360, %256, %332, %279
  %423 = load i32, i32* %215, align 8
  %424 = icmp slt i32 %423, 1
  %425 = icmp slt i32 %236, %423
  %426 = or i1 %424, %425
  br i1 %426, label %434, label %427

427:                                              ; preds = %422
  %428 = load i8*, i8** %40, align 8
  %429 = call i32 @xmlStrEqual(i8* %235, i8* %428) #9
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %434

431:                                              ; preds = %427
  br i1 %237, label %588, label %432

432:                                              ; preds = %431
  %433 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %433(i8* nonnull %235) #9
  br label %588

434:                                              ; preds = %427, %422
  %435 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %436 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %435, i64 0, i32 4
  %437 = load i8*, i8** %436, align 8
  %438 = load i8, i8* %437, align 1
  %439 = icmp eq i8 %438, 0
  br i1 %439, label %532, label %440

440:                                              ; preds = %434
  %441 = call i32 @xmlStrEqual(i8* %235, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i64 0, i64 0)) #9
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %446

443:                                              ; preds = %440
  %444 = call i32 @xmlStrEqual(i8* %235, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i64 0, i64 0)) #9
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %447, label %446

446:                                              ; preds = %443, %440
  call fastcc void @htmlParseScript(%struct._xmlParserCtxt* %0) #9
  br label %569

447:                                              ; preds = %443
  %448 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %449 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %448, i64 0, i32 4
  %450 = load i8*, i8** %449, align 8
  %451 = load i8, i8* %450, align 1
  %452 = icmp eq i8 %451, 60
  br i1 %452, label %453, label %513

453:                                              ; preds = %447
  %454 = getelementptr inbounds i8, i8* %450, i64 1
  %455 = load i8, i8* %454, align 1
  %456 = icmp eq i8 %455, 33
  br i1 %456, label %457, label %516

457:                                              ; preds = %453
  %458 = tail call i32** @__ctype_toupper_loc() #11
  %459 = load i32*, i32** %458, align 8
  %460 = getelementptr inbounds i8, i8* %450, i64 2
  %461 = load i8, i8* %460, align 1
  %462 = zext i8 %461 to i64
  %463 = getelementptr inbounds i32, i32* %459, i64 %462
  %464 = load i32, i32* %463, align 4
  %465 = icmp eq i32 %464, 68
  br i1 %465, label %466, label %516

466:                                              ; preds = %457
  %467 = getelementptr inbounds i8, i8* %450, i64 3
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i64
  %470 = getelementptr inbounds i32, i32* %459, i64 %469
  %471 = load i32, i32* %470, align 4
  %472 = icmp eq i32 %471, 79
  br i1 %472, label %473, label %516

473:                                              ; preds = %466
  %474 = getelementptr inbounds i8, i8* %450, i64 4
  %475 = load i8, i8* %474, align 1
  %476 = zext i8 %475 to i64
  %477 = getelementptr inbounds i32, i32* %459, i64 %476
  %478 = load i32, i32* %477, align 4
  %479 = icmp eq i32 %478, 67
  br i1 %479, label %480, label %516

480:                                              ; preds = %473
  %481 = getelementptr inbounds i8, i8* %450, i64 5
  %482 = load i8, i8* %481, align 1
  %483 = zext i8 %482 to i64
  %484 = getelementptr inbounds i32, i32* %459, i64 %483
  %485 = load i32, i32* %484, align 4
  %486 = icmp eq i32 %485, 84
  br i1 %486, label %487, label %516

487:                                              ; preds = %480
  %488 = getelementptr inbounds i8, i8* %450, i64 6
  %489 = load i8, i8* %488, align 1
  %490 = zext i8 %489 to i64
  %491 = getelementptr inbounds i32, i32* %459, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = icmp eq i32 %492, 89
  br i1 %493, label %494, label %516

494:                                              ; preds = %487
  %495 = getelementptr inbounds i8, i8* %450, i64 7
  %496 = load i8, i8* %495, align 1
  %497 = zext i8 %496 to i64
  %498 = getelementptr inbounds i32, i32* %459, i64 %497
  %499 = load i32, i32* %498, align 4
  %500 = icmp eq i32 %499, 80
  br i1 %500, label %501, label %516

501:                                              ; preds = %494
  %502 = getelementptr inbounds i8, i8* %450, i64 8
  %503 = load i8, i8* %502, align 1
  %504 = zext i8 %503 to i64
  %505 = getelementptr inbounds i32, i32* %459, i64 %504
  %506 = load i32, i32* %505, align 4
  %507 = icmp eq i32 %506, 69
  br i1 %507, label %508, label %516

508:                                              ; preds = %501
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 800, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.849, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.850, i64 0, i64 0), i8* null) #9
  call fastcc void @htmlParseDocTypeDecl(%struct._xmlParserCtxt* %0) #9
  %509 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %510 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %509, i64 0, i32 4
  %511 = load i8*, i8** %510, align 8
  %512 = load i8, i8* %511, align 1
  br label %513

513:                                              ; preds = %508, %447
  %514 = phi i8 [ %512, %508 ], [ %451, %447 ]
  %515 = phi i8* [ %511, %508 ], [ %450, %447 ]
  switch i8 %514, label %568 [
    i8 60, label %516
    i8 0, label %532
    i8 38, label %531
  ]

516:                                              ; preds = %453, %457, %466, %473, %480, %487, %494, %501, %513
  %517 = phi i8* [ %515, %513 ], [ %450, %501 ], [ %450, %494 ], [ %450, %487 ], [ %450, %480 ], [ %450, %473 ], [ %450, %466 ], [ %450, %457 ], [ %450, %453 ]
  %518 = getelementptr inbounds i8, i8* %517, i64 1
  %519 = load i8, i8* %518, align 1
  switch i8 %519, label %530 [
    i8 33, label %520
    i8 63, label %529
  ]

520:                                              ; preds = %516
  %521 = getelementptr inbounds i8, i8* %517, i64 2
  %522 = load i8, i8* %521, align 1
  %523 = icmp eq i8 %522, 45
  br i1 %523, label %524, label %530

524:                                              ; preds = %520
  %525 = getelementptr inbounds i8, i8* %517, i64 3
  %526 = load i8, i8* %525, align 1
  %527 = icmp eq i8 %526, 45
  br i1 %527, label %528, label %530

528:                                              ; preds = %524
  call fastcc void @htmlParseComment(%struct._xmlParserCtxt* %0) #9
  br label %569

529:                                              ; preds = %516
  call fastcc void @htmlParsePI(%struct._xmlParserCtxt* %0) #9
  br label %569

530:                                              ; preds = %516, %520, %524
  call void @htmlParseElement(%struct._xmlParserCtxt* %0) #9
  br label %569

531:                                              ; preds = %513
  call fastcc void @htmlParseReference(%struct._xmlParserCtxt* %0) #9
  br label %569

532:                                              ; preds = %434, %513
  %533 = load i32, i32* %215, align 8
  %534 = icmp sgt i32 %533, 0
  br i1 %534, label %535, label %585

535:                                              ; preds = %532, %566
  %536 = phi i32 [ %537, %566 ], [ %533, %532 ]
  %537 = add nsw i32 %536, -1
  %538 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %220, align 8
  %539 = icmp eq %struct._xmlSAXHandler* %538, null
  br i1 %539, label %547, label %540

540:                                              ; preds = %535
  %541 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %538, i64 0, i32 15
  %542 = load void (i8*, i8*)*, void (i8*, i8*)** %541, align 8
  %543 = icmp eq void (i8*, i8*)* %542, null
  br i1 %543, label %547, label %544

544:                                              ; preds = %540
  %545 = load i8*, i8** %221, align 8
  %546 = load i8*, i8** %40, align 8
  call void %542(i8* %545, i8* %546) #9
  br label %547

547:                                              ; preds = %544, %540, %535
  %548 = load i32, i32* %215, align 8
  %549 = icmp slt i32 %548, 1
  br i1 %549, label %566, label %550

550:                                              ; preds = %547
  %551 = add nsw i32 %548, -1
  store i32 %551, i32* %215, align 8
  %552 = icmp sgt i32 %551, 0
  br i1 %552, label %553, label %560

553:                                              ; preds = %550
  %554 = load i8**, i8*** %222, align 8
  %555 = add nsw i32 %548, -2
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds i8*, i8** %554, i64 %556
  %558 = bitcast i8** %557 to i64*
  %559 = load i64, i64* %558, align 8
  store i64 %559, i64* %223, align 8
  br label %562

560:                                              ; preds = %550
  store i8* null, i8** %40, align 8
  %561 = load i8**, i8*** %222, align 8
  br label %562

562:                                              ; preds = %560, %553
  %563 = phi i8** [ %561, %560 ], [ %554, %553 ]
  %564 = sext i32 %551 to i64
  %565 = getelementptr inbounds i8*, i8** %563, i64 %564
  store i8* null, i8** %565, align 8
  br label %566

566:                                              ; preds = %562, %547
  %567 = icmp sgt i32 %537, 0
  br i1 %567, label %535, label %585

568:                                              ; preds = %513
  call fastcc void @htmlParseCharDataInternal(%struct._xmlParserCtxt* %0, i32 0) #9
  br label %569

569:                                              ; preds = %568, %531, %530, %529, %528, %446
  %570 = load i32, i32* %217, align 4
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %573, label %572

572:                                              ; preds = %419, %389, %385, %569, %573, %583, %266, %270
  br label %238

573:                                              ; preds = %569
  %574 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %575 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %574, i64 0, i32 5
  %576 = bitcast i8** %575 to i64*
  %577 = load i64, i64* %576, align 8
  %578 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %574, i64 0, i32 4
  %579 = bitcast i8** %578 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = sub i64 %577, %580
  %582 = icmp slt i64 %581, 250
  br i1 %582, label %583, label %572

583:                                              ; preds = %573
  %584 = call i32 @xmlParserInputGrow(%struct._xmlParserInput* %574, i32 250) #9
  br label %572

585:                                              ; preds = %253, %566, %532
  br i1 %237, label %588, label %586

586:                                              ; preds = %585
  %587 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %587(i8* nonnull %235) #9
  br label %588

588:                                              ; preds = %270, %273, %329, %330, %431, %432, %585, %586
  %589 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %590 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %589, i64 0, i32 4
  %591 = load i8*, i8** %590, align 8
  %592 = icmp eq i8* %233, %591
  br i1 %592, label %596, label %593

593:                                              ; preds = %588
  %594 = load i32, i32* %215, align 8
  %595 = icmp slt i32 %594, %216
  br i1 %595, label %596, label %229

596:                                              ; preds = %588, %593, %229, %212
  %597 = phi i8* [ %226, %212 ], [ %233, %588 ], [ %591, %593 ], [ %591, %229 ]
  %598 = phi %struct._xmlParserInput* [ %224, %212 ], [ %589, %229 ], [ %589, %593 ], [ %589, %588 ]
  %599 = icmp ne i8* %214, null
  br i1 %599, label %600, label %624

600:                                              ; preds = %596
  %601 = load i32, i32* %21, align 8
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %624, label %603

603:                                              ; preds = %600
  %604 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %598, i64 0, i32 9
  %605 = load i64, i64* %604, align 8
  %606 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %598, i64 0, i32 4
  %607 = bitcast i8** %606 to i64*
  %608 = load i64, i64* %607, align 8
  %609 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %598, i64 0, i32 3
  %610 = bitcast i8** %609 to i64*
  %611 = load i64, i64* %610, align 8
  %612 = add i64 %608, %605
  %613 = sub i64 %612, %611
  store i64 %613, i64* %7, align 8
  %614 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %598, i64 0, i32 7
  %615 = load i32, i32* %614, align 4
  %616 = sext i32 %615 to i64
  store i64 %616, i64* %8, align 8
  %617 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 13
  %618 = bitcast %struct._xmlNode** %617 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = bitcast %struct._xmlParserNodeInfo* %3 to i64*
  store i64 %619, i64* %620, align 8
  call void @xmlParserAddNodeInfo(%struct._xmlParserCtxt* %0, %struct._xmlParserNodeInfo* nonnull %3) #9
  %621 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %622 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %621, i64 0, i32 4
  %623 = load i8*, i8** %622, align 8
  br label %624

624:                                              ; preds = %600, %603, %596
  %625 = phi i8* [ %597, %600 ], [ %623, %603 ], [ %597, %596 ]
  %626 = load i8, i8* %625, align 1
  %627 = icmp eq i8 %626, 0
  br i1 %627, label %628, label %664

628:                                              ; preds = %624
  %629 = load i32, i32* %215, align 8
  %630 = icmp sgt i32 %629, 0
  br i1 %630, label %631, label %664

631:                                              ; preds = %628, %662
  %632 = phi i32 [ %633, %662 ], [ %629, %628 ]
  %633 = add nsw i32 %632, -1
  %634 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %220, align 8
  %635 = icmp eq %struct._xmlSAXHandler* %634, null
  br i1 %635, label %643, label %636

636:                                              ; preds = %631
  %637 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %634, i64 0, i32 15
  %638 = load void (i8*, i8*)*, void (i8*, i8*)** %637, align 8
  %639 = icmp eq void (i8*, i8*)* %638, null
  br i1 %639, label %643, label %640

640:                                              ; preds = %636
  %641 = load i8*, i8** %221, align 8
  %642 = load i8*, i8** %40, align 8
  call void %638(i8* %641, i8* %642) #9
  br label %643

643:                                              ; preds = %640, %636, %631
  %644 = load i32, i32* %215, align 8
  %645 = icmp slt i32 %644, 1
  br i1 %645, label %662, label %646

646:                                              ; preds = %643
  %647 = add nsw i32 %644, -1
  store i32 %647, i32* %215, align 8
  %648 = icmp sgt i32 %647, 0
  br i1 %648, label %649, label %656

649:                                              ; preds = %646
  %650 = load i8**, i8*** %222, align 8
  %651 = add nsw i32 %644, -2
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds i8*, i8** %650, i64 %652
  %654 = bitcast i8** %653 to i64*
  %655 = load i64, i64* %654, align 8
  store i64 %655, i64* %223, align 8
  br label %658

656:                                              ; preds = %646
  store i8* null, i8** %40, align 8
  %657 = load i8**, i8*** %222, align 8
  br label %658

658:                                              ; preds = %656, %649
  %659 = phi i8** [ %657, %656 ], [ %650, %649 ]
  %660 = sext i32 %647 to i64
  %661 = getelementptr inbounds i8*, i8** %659, i64 %660
  store i8* null, i8** %661, align 8
  br label %662

662:                                              ; preds = %658, %643
  %663 = icmp sgt i32 %633, 0
  br i1 %663, label %631, label %664

664:                                              ; preds = %662, %628, %624
  br i1 %599, label %665, label %667

665:                                              ; preds = %664
  %666 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %666(i8* nonnull %214) #9
  br label %667

667:                                              ; preds = %208, %189, %119, %100, %664, %665, %155, %152, %45, %51, %16, %15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @htmlParseStartTag(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = alloca [100 x i8], align 16
  %3 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %6 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %7 = icmp eq %struct._xmlParserInput* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4, %1
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.830, i64 0, i64 0), i8* null, i8* null)
  br label %520

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %520, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %6, i64 0, i32 4
  %15 = load i8*, i8** %14, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 60
  br i1 %17, label %18, label %520

18:                                               ; preds = %13
  tail call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  %19 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 58
  %20 = load i8**, i8*** %19, align 8
  %21 = bitcast i8** %20 to i8*
  %22 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 59
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %29 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %28, i64 0, i32 5
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %28, i64 0, i32 4
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = icmp slt i64 %35, 250
  br i1 %36, label %37, label %39

37:                                               ; preds = %27
  %38 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %28, i32 250) #9
  br label %39

39:                                               ; preds = %37, %27, %18
  %40 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %40) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 100, i1 false) #9
  %41 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %42 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %41, i64 0, i32 4
  %43 = load i8*, i8** %42, align 8
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, -33
  %46 = add i8 %45, -65
  %47 = icmp ult i8 %46, 26
  br i1 %47, label %48, label %49

48:                                               ; preds = %49, %49, %49, %39
  br label %51

49:                                               ; preds = %39
  switch i8 %44, label %50 [
    i8 95, label %48
    i8 58, label %48
    i8 46, label %48
  ]

50:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %40) #9
  br label %85

51:                                               ; preds = %48, %72
  %52 = phi i8 [ %76, %72 ], [ %44, %48 ]
  %53 = phi i64 [ %69, %72 ], [ 0, %48 ]
  %54 = phi i32 [ %70, %72 ], [ 0, %48 ]
  %55 = add i8 %52, -65
  %56 = icmp ult i8 %55, 26
  br i1 %56, label %64, label %57

57:                                               ; preds = %51
  %58 = add i8 %52, -97
  %59 = icmp ult i8 %58, 26
  %60 = add i8 %52, -48
  %61 = icmp ult i8 %60, 10
  %62 = or i1 %59, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  switch i8 %52, label %77 [
    i8 58, label %66
    i8 45, label %66
    i8 95, label %66
    i8 46, label %66
  ]

64:                                               ; preds = %51
  %65 = add nuw nsw i8 %52, 32
  br label %66

66:                                               ; preds = %57, %63, %63, %63, %63, %64
  %67 = phi i8 [ %65, %64 ], [ %52, %63 ], [ %52, %63 ], [ %52, %63 ], [ %52, %63 ], [ %52, %57 ]
  %68 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 %53
  store i8 %67, i8* %68, align 1
  %69 = add nuw nsw i64 %53, 1
  %70 = add nuw nsw i32 %54, 1
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %71 = icmp eq i64 %69, 100
  br i1 %71, label %79, label %72

72:                                               ; preds = %66
  %73 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %74 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %73, i64 0, i32 4
  %75 = load i8*, i8** %74, align 8
  %76 = load i8, i8* %75, align 1
  br label %51

77:                                               ; preds = %63
  %78 = trunc i64 %53 to i32
  br label %79

79:                                               ; preds = %66, %77
  %80 = phi i32 [ %78, %77 ], [ %70, %66 ]
  %81 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 57
  %82 = load %struct._xmlDict*, %struct._xmlDict** %81, align 8
  %83 = call i8* @xmlDictLookup(%struct._xmlDict* %82, i8* nonnull %40, i32 %80) #9
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %40) #9
  %84 = icmp eq i8* %83, null
  br i1 %84, label %85, label %108

85:                                               ; preds = %50, %79
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 68, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.831, i64 0, i64 0), i8* null, i8* null)
  %86 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 55
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %85
  %90 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %91 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %90, i64 0, i32 4
  %92 = load i8*, i8** %91, align 8
  %93 = load i8, i8* %92, align 1
  switch i8 %93, label %94 [
    i8 32, label %98
    i8 10, label %98
    i8 9, label %98
    i8 13, label %98
    i8 60, label %98
    i8 61, label %98
    i8 62, label %98
  ]

94:                                               ; preds = %89
  %95 = add i8 %93, -48
  %96 = icmp ult i8 %95, 10
  br i1 %96, label %98, label %97

97:                                               ; preds = %85, %94
  br label %99

98:                                               ; preds = %89, %89, %89, %89, %89, %89, %89, %94
  call fastcc void @htmlParseCharDataInternal(%struct._xmlParserCtxt* %0, i32 60)
  br label %520

99:                                               ; preds = %97, %107
  %100 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %101 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %100, i64 0, i32 4
  %102 = load i8*, i8** %101, align 8
  %103 = load i8, i8* %102, align 1
  switch i8 %103, label %104 [
    i8 0, label %520
    i8 62, label %520
  ]

104:                                              ; preds = %99
  %105 = load i32, i32* %10, align 8
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %520, label %107

107:                                              ; preds = %104
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %99

108:                                              ; preds = %79
  %109 = call i32 @xmlStrEqual(i8* nonnull %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i64 0, i64 0)) #9
  %110 = icmp ne i32 %109, 0
  %111 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %112 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %113 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %114 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %115 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %116 = bitcast i8** %111 to i64*
  %117 = load i8*, i8** %111, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %179, label %119

119:                                              ; preds = %108, %176
  %120 = phi i8* [ %177, %176 ], [ %117, %108 ]
  br label %121

121:                                              ; preds = %119, %142
  %122 = phi i64 [ %144, %142 ], [ 251, %119 ]
  %123 = phi i64 [ %143, %142 ], [ 0, %119 ]
  %124 = add i64 %123, %122
  %125 = lshr i64 %124, 1
  %126 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %125
  %127 = getelementptr inbounds %struct.htmlStartCloseEntry, %struct.htmlStartCloseEntry* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 16
  %129 = call i32 @strcmp(i8* nonnull %120, i8* %128) #10
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %121
  %132 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %125, i32 1
  %133 = load i8*, i8** %132, align 8
  %134 = call i32 @strcmp(i8* nonnull %83, i8* %133) #10
  br label %135

135:                                              ; preds = %131, %121
  %136 = phi i32 [ %134, %131 ], [ %129, %121 ]
  %137 = icmp slt i32 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %135
  %139 = icmp eq i32 %136, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %138
  %141 = add nuw i64 %125, 1
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i64 [ %141, %140 ], [ %123, %135 ]
  %144 = phi i64 [ %122, %140 ], [ %125, %135 ]
  %145 = icmp ult i64 %143, %144
  br i1 %145, label %121, label %179

146:                                              ; preds = %138
  %147 = icmp eq %struct.htmlStartCloseEntry* %126, null
  br i1 %147, label %179, label %148

148:                                              ; preds = %146
  %149 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %112, align 8
  %150 = icmp eq %struct._xmlSAXHandler* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %149, i64 0, i32 15
  %153 = load void (i8*, i8*)*, void (i8*, i8*)** %152, align 8
  %154 = icmp eq void (i8*, i8*)* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = load i8*, i8** %113, align 8
  call void %153(i8* %156, i8* nonnull %120) #9
  br label %157

157:                                              ; preds = %155, %151, %148
  %158 = load i32, i32* %114, align 8
  %159 = icmp slt i32 %158, 1
  br i1 %159, label %176, label %160

160:                                              ; preds = %157
  %161 = add nsw i32 %158, -1
  store i32 %161, i32* %114, align 8
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %163, label %170

163:                                              ; preds = %160
  %164 = load i8**, i8*** %115, align 8
  %165 = add nsw i32 %158, -2
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8*, i8** %164, i64 %166
  %168 = bitcast i8** %167 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %116, align 8
  br label %172

170:                                              ; preds = %160
  store i8* null, i8** %111, align 8
  %171 = load i8**, i8*** %115, align 8
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i8** [ %171, %170 ], [ %164, %163 ]
  %174 = sext i32 %161 to i64
  %175 = getelementptr inbounds i8*, i8** %173, i64 %174
  store i8* null, i8** %175, align 8
  br label %176

176:                                              ; preds = %172, %157
  %177 = load i8*, i8** %111, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %179, label %119

179:                                              ; preds = %146, %176, %142, %108
  call fastcc void @htmlCheckImplied(%struct._xmlParserCtxt* %0, i8* nonnull %83)
  %180 = load i32, i32* %114, align 8
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %182, label %193

182:                                              ; preds = %179
  %183 = call i32 @xmlStrEqual(i8* nonnull %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %182
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 800, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.832, i64 0, i64 0), i8* nonnull %83, i8* null)
  %186 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 45
  %187 = load i32, i32* %186, align 8
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %186, align 8
  br label %189

189:                                              ; preds = %182, %185
  %190 = phi i32 [ 0, %182 ], [ 1, %185 ]
  %191 = load i32, i32* %114, align 8
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %201, label %193

193:                                              ; preds = %179, %189
  %194 = phi i32 [ %190, %189 ], [ 0, %179 ]
  %195 = call i32 @xmlStrEqual(i8* nonnull %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0)) #9
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %201, label %197

197:                                              ; preds = %193
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 800, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.833, i64 0, i64 0), i8* nonnull %83, i8* null)
  %198 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 45
  %199 = load i32, i32* %198, align 8
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %198, align 8
  br label %201

201:                                              ; preds = %193, %189, %197
  %202 = phi i32 [ 1, %197 ], [ %194, %193 ], [ %190, %189 ]
  %203 = call i32 @xmlStrEqual(i8* nonnull %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #9
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %227, label %205

205:                                              ; preds = %201
  %206 = load i32, i32* %114, align 8
  %207 = icmp sgt i32 %206, 0
  br i1 %207, label %208, label %227

208:                                              ; preds = %205
  %209 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 45
  br label %210

210:                                              ; preds = %208, %221
  %211 = phi i64 [ 0, %208 ], [ %223, %221 ]
  %212 = phi i32 [ %202, %208 ], [ %222, %221 ]
  %213 = load i8**, i8*** %115, align 8
  %214 = getelementptr inbounds i8*, i8** %213, i64 %211
  %215 = load i8*, i8** %214, align 8
  %216 = call i32 @xmlStrEqual(i8* %215, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #9
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %221, label %218

218:                                              ; preds = %210
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 800, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.834, i64 0, i64 0), i8* nonnull %83, i8* null)
  %219 = load i32, i32* %209, align 8
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %209, align 8
  br label %221

221:                                              ; preds = %210, %218
  %222 = phi i32 [ 1, %218 ], [ %212, %210 ]
  %223 = add nuw nsw i64 %211, 1
  %224 = load i32, i32* %114, align 8
  %225 = sext i32 %224 to i64
  %226 = icmp slt i64 %223, %225
  br i1 %226, label %210, label %227

227:                                              ; preds = %221, %205, %201
  %228 = phi i32 [ %202, %201 ], [ %202, %205 ], [ %222, %221 ]
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %229 = bitcast i8*** %19 to i8**
  %230 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %231 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  %232 = bitcast %struct._xmlParserCtxt* %0 to i8*
  br label %233

233:                                              ; preds = %427, %227
  %234 = phi i8* [ %21, %227 ], [ %428, %427 ]
  %235 = phi i8** [ %20, %227 ], [ %429, %427 ]
  %236 = phi i32 [ 0, %227 ], [ %430, %427 ]
  %237 = phi i32 [ %23, %227 ], [ %431, %427 ]
  %238 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %239 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %238, i64 0, i32 4
  %240 = load i8*, i8** %239, align 8
  %241 = load i8, i8* %240, align 1
  %242 = ptrtoint i8* %240 to i64
  switch i8 %241, label %247 [
    i8 0, label %432
    i8 62, label %432
    i8 47, label %243
  ]

243:                                              ; preds = %233
  %244 = getelementptr inbounds i8, i8* %240, i64 1
  %245 = load i8, i8* %244, align 1
  %246 = icmp eq i8 %245, 62
  br i1 %246, label %432, label %247

247:                                              ; preds = %233, %243
  %248 = load i32, i32* %24, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %259

250:                                              ; preds = %247
  %251 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %238, i64 0, i32 5
  %252 = bitcast i8** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 %253, %242
  %255 = icmp slt i64 %254, 250
  br i1 %255, label %256, label %259

256:                                              ; preds = %250
  %257 = call i32 @xmlParserInputGrow(%struct._xmlParserInput* %238, i32 250) #9
  %258 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  br label %259

259:                                              ; preds = %256, %250, %247
  %260 = phi %struct._xmlParserInput* [ %258, %256 ], [ %238, %250 ], [ %238, %247 ]
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %40) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 100, i1 false) #9
  %261 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %260, i64 0, i32 4
  %262 = load i8*, i8** %261, align 8
  %263 = load i8, i8* %262, align 1
  %264 = and i8 %263, -33
  %265 = add i8 %264, -65
  %266 = icmp ult i8 %265, 26
  br i1 %266, label %267, label %268

267:                                              ; preds = %268, %268, %268, %259
  br label %270

268:                                              ; preds = %259
  switch i8 %263, label %269 [
    i8 95, label %267
    i8 58, label %267
    i8 46, label %267
  ]

269:                                              ; preds = %268
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %40) #9
  br label %412

270:                                              ; preds = %267, %291
  %271 = phi i8 [ %295, %291 ], [ %263, %267 ]
  %272 = phi i64 [ %288, %291 ], [ 0, %267 ]
  %273 = phi i32 [ %289, %291 ], [ 0, %267 ]
  %274 = add i8 %271, -65
  %275 = icmp ult i8 %274, 26
  br i1 %275, label %283, label %276

276:                                              ; preds = %270
  %277 = add i8 %271, -97
  %278 = icmp ult i8 %277, 26
  %279 = add i8 %271, -48
  %280 = icmp ult i8 %279, 10
  %281 = or i1 %278, %280
  br i1 %281, label %285, label %282

282:                                              ; preds = %276
  switch i8 %271, label %296 [
    i8 58, label %285
    i8 45, label %285
    i8 95, label %285
    i8 46, label %285
  ]

283:                                              ; preds = %270
  %284 = add nuw nsw i8 %271, 32
  br label %285

285:                                              ; preds = %276, %282, %282, %282, %282, %283
  %286 = phi i8 [ %284, %283 ], [ %271, %282 ], [ %271, %282 ], [ %271, %282 ], [ %271, %282 ], [ %271, %276 ]
  %287 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 %272
  store i8 %286, i8* %287, align 1
  %288 = add nuw nsw i64 %272, 1
  %289 = add nuw nsw i32 %273, 1
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %290 = icmp eq i64 %288, 100
  br i1 %290, label %298, label %291

291:                                              ; preds = %285
  %292 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %293 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %292, i64 0, i32 4
  %294 = load i8*, i8** %293, align 8
  %295 = load i8, i8* %294, align 1
  br label %270

296:                                              ; preds = %282
  %297 = trunc i64 %272 to i32
  br label %298

298:                                              ; preds = %285, %296
  %299 = phi i32 [ %297, %296 ], [ %289, %285 ]
  %300 = load %struct._xmlDict*, %struct._xmlDict** %81, align 8
  %301 = call i8* @xmlDictLookup(%struct._xmlDict* %300, i8* nonnull %40, i32 %299) #9
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %40) #9
  %302 = icmp eq i8* %301, null
  br i1 %302, label %412, label %303

303:                                              ; preds = %298
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0) #9
  %304 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %305 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %304, i64 0, i32 4
  %306 = load i8*, i8** %305, align 8
  %307 = load i8, i8* %306, align 1
  %308 = icmp eq i8 %307, 61
  br i1 %308, label %309, label %336

309:                                              ; preds = %303
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0) #9
  %310 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %311 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %310, i64 0, i32 4
  %312 = load i8*, i8** %311, align 8
  %313 = load i8, i8* %312, align 1
  switch i8 %313, label %332 [
    i8 34, label %314
    i8 39, label %323
  ]

314:                                              ; preds = %309
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %315 = call fastcc i8* @htmlParseHTMLAttribute(%struct._xmlParserCtxt* %0, i8 zeroext 34) #9
  %316 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %317 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %316, i64 0, i32 4
  %318 = load i8*, i8** %317, align 8
  %319 = load i8, i8* %318, align 1
  %320 = icmp eq i8 %319, 34
  br i1 %320, label %322, label %321

321:                                              ; preds = %314
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 40, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.840, i64 0, i64 0), i8* null, i8* null) #9
  br label %336

322:                                              ; preds = %314
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %336

323:                                              ; preds = %309
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %324 = call fastcc i8* @htmlParseHTMLAttribute(%struct._xmlParserCtxt* %0, i8 zeroext 39) #9
  %325 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %326 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %325, i64 0, i32 4
  %327 = load i8*, i8** %326, align 8
  %328 = load i8, i8* %327, align 1
  %329 = icmp eq i8 %328, 39
  br i1 %329, label %331, label %330

330:                                              ; preds = %323
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 40, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.841, i64 0, i64 0), i8* null, i8* null) #9
  br label %336

331:                                              ; preds = %323
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %336

332:                                              ; preds = %309
  %333 = call fastcc i8* @htmlParseHTMLAttribute(%struct._xmlParserCtxt* %0, i8 zeroext 0) #9
  %334 = icmp eq i8* %333, null
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 41, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.842, i64 0, i64 0), i8* null, i8* null) #9
  br label %336

336:                                              ; preds = %303, %321, %322, %330, %331, %332, %335
  %337 = phi i8* [ null, %303 ], [ %315, %321 ], [ %315, %322 ], [ %324, %330 ], [ %324, %331 ], [ null, %335 ], [ %333, %332 ]
  %338 = ptrtoint i8* %337 to i64
  %339 = icmp sgt i32 %236, 0
  br i1 %339, label %343, label %354

340:                                              ; preds = %343
  %341 = trunc i64 %349 to i32
  %342 = icmp sgt i32 %236, %341
  br i1 %342, label %343, label %354

343:                                              ; preds = %336, %340
  %344 = phi i64 [ %349, %340 ], [ 0, %336 ]
  %345 = getelementptr inbounds i8*, i8** %235, i64 %344
  %346 = load i8*, i8** %345, align 8
  %347 = call i32 @xmlStrEqual(i8* %346, i8* nonnull %301) #9
  %348 = icmp eq i32 %347, 0
  %349 = add nuw i64 %344, 2
  br i1 %348, label %340, label %350

350:                                              ; preds = %343
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 42, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.835, i64 0, i64 0), i8* nonnull %301, i8* null)
  %351 = icmp eq i8* %337, null
  br i1 %351, label %427, label %352

352:                                              ; preds = %350
  %353 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %353(i8* nonnull %337) #9
  br label %427

354:                                              ; preds = %340, %336
  %355 = icmp eq i8** %235, null
  br i1 %355, label %356, label %371

356:                                              ; preds = %354
  %357 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %358 = call i8* %357(i64 176) #9
  %359 = icmp eq i8* %358, null
  br i1 %359, label %360, label %392

360:                                              ; preds = %356
  %361 = load i32, i32* %230, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %366, label %363

363:                                              ; preds = %360
  %364 = load i32, i32* %10, align 8
  %365 = icmp eq i32 %364, -1
  br i1 %365, label %367, label %366

366:                                              ; preds = %360, %363
  store i32 2, i32* %231, align 8
  store i32 -1, i32* %10, align 8
  store i32 1, i32* %230, align 4
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %232, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %367

367:                                              ; preds = %363, %366
  %368 = icmp eq i8* %337, null
  br i1 %368, label %427, label %369

369:                                              ; preds = %367
  %370 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %370(i8* nonnull %337) #9
  br label %427

371:                                              ; preds = %354
  %372 = add nsw i32 %236, 4
  %373 = icmp sgt i32 %372, %237
  br i1 %373, label %374, label %396

374:                                              ; preds = %371
  %375 = shl nsw i32 %237, 1
  %376 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %377 = sext i32 %375 to i64
  %378 = shl nsw i64 %377, 3
  %379 = call i8* %376(i8* %234, i64 %378) #9
  %380 = icmp eq i8* %379, null
  br i1 %380, label %381, label %392

381:                                              ; preds = %374
  %382 = load i32, i32* %230, align 4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %387, label %384

384:                                              ; preds = %381
  %385 = load i32, i32* %10, align 8
  %386 = icmp eq i32 %385, -1
  br i1 %386, label %388, label %387

387:                                              ; preds = %381, %384
  store i32 2, i32* %231, align 8
  store i32 -1, i32* %10, align 8
  store i32 1, i32* %230, align 4
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %232, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %388

388:                                              ; preds = %384, %387
  %389 = icmp eq i8* %337, null
  br i1 %389, label %427, label %390

390:                                              ; preds = %388
  %391 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %391(i8* nonnull %337) #9
  br label %427

392:                                              ; preds = %374, %356
  %393 = phi i8* [ %358, %356 ], [ %379, %374 ]
  %394 = phi i32 [ 22, %356 ], [ %375, %374 ]
  %395 = bitcast i8* %393 to i8**
  store i8* %393, i8** %229, align 8
  store i32 %394, i32* %22, align 8
  br label %396

396:                                              ; preds = %392, %371
  %397 = phi i8* [ %234, %371 ], [ %393, %392 ]
  %398 = phi i8** [ %235, %371 ], [ %395, %392 ]
  %399 = phi i32 [ %237, %371 ], [ %394, %392 ]
  %400 = add nsw i32 %236, 1
  %401 = sext i32 %236 to i64
  %402 = getelementptr inbounds i8*, i8** %398, i64 %401
  store i8* %301, i8** %402, align 8
  %403 = add nsw i32 %236, 2
  %404 = sext i32 %400 to i64
  %405 = getelementptr inbounds i8*, i8** %398, i64 %404
  %406 = bitcast i8** %405 to i64*
  store i64 %338, i64* %406, align 8
  %407 = sext i32 %403 to i64
  %408 = getelementptr inbounds i8*, i8** %398, i64 %407
  store i8* null, i8** %408, align 8
  %409 = add nsw i32 %236, 3
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i8*, i8** %398, i64 %410
  store i8* null, i8** %411, align 8
  br label %427

412:                                              ; preds = %269, %298
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 68, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.839, i64 0, i64 0), i8* null, i8* null) #9
  br label %413

413:                                              ; preds = %426, %412
  %414 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %415 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %414, i64 0, i32 4
  %416 = load i8*, i8** %415, align 8
  %417 = load i8, i8* %416, align 1
  switch i8 %417, label %418 [
    i8 0, label %427
    i8 32, label %427
  ]

418:                                              ; preds = %413
  %419 = add i8 %417, -9
  %420 = icmp ult i8 %419, 2
  br i1 %420, label %427, label %421

421:                                              ; preds = %418
  switch i8 %417, label %426 [
    i8 13, label %427
    i8 62, label %427
    i8 47, label %422
  ]

422:                                              ; preds = %421
  %423 = getelementptr inbounds i8, i8* %416, i64 1
  %424 = load i8, i8* %423, align 1
  %425 = icmp eq i8 %424, 62
  br i1 %425, label %427, label %426

426:                                              ; preds = %421, %422
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %413

427:                                              ; preds = %421, %421, %418, %413, %413, %422, %390, %388, %350, %367, %396, %369, %352
  %428 = phi i8* [ %234, %352 ], [ %234, %350 ], [ null, %369 ], [ null, %367 ], [ %397, %396 ], [ %234, %388 ], [ %234, %390 ], [ %234, %422 ], [ %234, %413 ], [ %234, %413 ], [ %234, %418 ], [ %234, %421 ], [ %234, %421 ]
  %429 = phi i8** [ %235, %352 ], [ %235, %350 ], [ null, %369 ], [ null, %367 ], [ %398, %396 ], [ %235, %388 ], [ %235, %390 ], [ %235, %422 ], [ %235, %413 ], [ %235, %413 ], [ %235, %418 ], [ %235, %421 ], [ %235, %421 ]
  %430 = phi i32 [ %236, %352 ], [ %236, %350 ], [ %236, %369 ], [ %236, %367 ], [ %403, %396 ], [ %236, %388 ], [ %236, %390 ], [ %236, %422 ], [ %236, %413 ], [ %236, %413 ], [ %236, %418 ], [ %236, %421 ], [ %236, %421 ]
  %431 = phi i32 [ %237, %352 ], [ %237, %350 ], [ 22, %369 ], [ 22, %367 ], [ %399, %396 ], [ %375, %388 ], [ %375, %390 ], [ %237, %422 ], [ %237, %413 ], [ %237, %413 ], [ %237, %418 ], [ %237, %421 ], [ %237, %421 ]
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  br label %233

432:                                              ; preds = %233, %233, %243
  %433 = icmp ne i32 %236, 0
  %434 = and i1 %110, %433
  %435 = xor i1 %434, true
  %436 = icmp eq i8** %235, null
  %437 = or i1 %436, %435
  br i1 %437, label %492, label %438

438:                                              ; preds = %432
  %439 = load i8*, i8** %235, align 8
  %440 = icmp eq i8* %439, null
  br i1 %440, label %492, label %441

441:                                              ; preds = %438, %464
  %442 = phi i64 [ %467, %464 ], [ 1, %438 ]
  %443 = phi i8* [ %469, %464 ], [ %439, %438 ]
  %444 = phi i8* [ %466, %464 ], [ null, %438 ]
  %445 = phi i32 [ %465, %464 ], [ 0, %438 ]
  %446 = add nuw nsw i64 %442, 1
  %447 = getelementptr inbounds i8*, i8** %235, i64 %442
  %448 = load i8*, i8** %447, align 8
  %449 = icmp eq i8* %448, null
  br i1 %449, label %464, label %450

450:                                              ; preds = %441
  %451 = call i32 @xmlStrcasecmp(i8* nonnull %443, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.286, i64 0, i64 0)) #9
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %456

453:                                              ; preds = %450
  %454 = call i32 @xmlStrcasecmp(i8* nonnull %448, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.845, i64 0, i64 0)) #9
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %464, label %456

456:                                              ; preds = %453, %450
  %457 = call i32 @xmlStrcasecmp(i8* nonnull %443, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.210, i64 0, i64 0)) #9
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %460

459:                                              ; preds = %456
  call fastcc void @htmlCheckEncodingDirect(%struct._xmlParserCtxt* %0, i8* nonnull %448) #9
  br label %464

460:                                              ; preds = %456
  %461 = call i32 @xmlStrcasecmp(i8* nonnull %443, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.288, i64 0, i64 0)) #9
  %462 = icmp eq i32 %461, 0
  %463 = select i1 %462, i8* %448, i8* %444
  br label %464

464:                                              ; preds = %460, %459, %453, %441
  %465 = phi i32 [ %445, %459 ], [ 1, %453 ], [ %445, %460 ], [ %445, %441 ]
  %466 = phi i8* [ %444, %459 ], [ %444, %453 ], [ %463, %460 ], [ %444, %441 ]
  %467 = add nuw i64 %442, 2
  %468 = getelementptr inbounds i8*, i8** %235, i64 %446
  %469 = load i8*, i8** %468, align 8
  %470 = icmp eq i8* %469, null
  br i1 %470, label %471, label %441

471:                                              ; preds = %464
  %472 = icmp ne i32 %465, 0
  %473 = icmp ne i8* %466, null
  %474 = and i1 %472, %473
  br i1 %474, label %475, label %492

475:                                              ; preds = %471
  %476 = call i8* @xmlStrcasestr(i8* nonnull %466, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.210, i64 0, i64 0)) #9
  %477 = icmp eq i8* %476, null
  %478 = getelementptr inbounds i8, i8* %476, i64 7
  br i1 %477, label %492, label %479

479:                                              ; preds = %475
  %480 = load i8, i8* %478, align 1
  switch i8 %480, label %486 [
    i8 32, label %481
    i8 13, label %481
    i8 10, label %481
    i8 9, label %481
  ]

481:                                              ; preds = %479, %479, %479, %479
  %482 = call i8* @xmlStrcasestr(i8* nonnull %466, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.892, i64 0, i64 0)) #9
  %483 = icmp eq i8* %482, null
  br i1 %483, label %492, label %484

484:                                              ; preds = %481
  %485 = load i8, i8* %482, align 1
  br label %486

486:                                              ; preds = %484, %479
  %487 = phi i8 [ %485, %484 ], [ %480, %479 ]
  %488 = phi i8* [ %482, %484 ], [ %478, %479 ]
  %489 = icmp eq i8 %487, 61
  br i1 %489, label %490, label %492

490:                                              ; preds = %486
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  call fastcc void @htmlCheckEncodingDirect(%struct._xmlParserCtxt* %0, i8* %491) #9
  br label %492

492:                                              ; preds = %432, %490, %486, %481, %475, %471, %438
  %493 = icmp eq i32 %228, 0
  br i1 %493, label %494, label %505

494:                                              ; preds = %492
  call fastcc void @htmlnamePush(%struct._xmlParserCtxt* %0, i8* nonnull %83)
  %495 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %112, align 8
  %496 = icmp eq %struct._xmlSAXHandler* %495, null
  br i1 %496, label %505, label %497

497:                                              ; preds = %494
  %498 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %495, i64 0, i32 14
  %499 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %498, align 8
  %500 = icmp eq void (i8*, i8*, i8**)* %499, null
  br i1 %500, label %505, label %501

501:                                              ; preds = %497
  %502 = load i8*, i8** %113, align 8
  br i1 %433, label %503, label %504

503:                                              ; preds = %501
  call void %499(i8* %502, i8* nonnull %83, i8** %235) #9
  br label %505

504:                                              ; preds = %501
  call void %499(i8* %502, i8* nonnull %83, i8** null) #9
  br label %520

505:                                              ; preds = %497, %494, %492, %503
  %506 = icmp ne i8** %235, null
  %507 = icmp sgt i32 %236, 1
  %508 = and i1 %506, %507
  br i1 %508, label %509, label %520

509:                                              ; preds = %505, %516
  %510 = phi i64 [ %517, %516 ], [ 1, %505 ]
  %511 = getelementptr inbounds i8*, i8** %235, i64 %510
  %512 = load i8*, i8** %511, align 8
  %513 = icmp eq i8* %512, null
  br i1 %513, label %516, label %514

514:                                              ; preds = %509
  %515 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %515(i8* nonnull %512) #9
  br label %516

516:                                              ; preds = %509, %514
  %517 = add nuw i64 %510, 2
  %518 = trunc i64 %517 to i32
  %519 = icmp sgt i32 %236, %518
  br i1 %519, label %509, label %520

520:                                              ; preds = %516, %104, %99, %99, %504, %505, %13, %9, %98, %8
  %521 = phi i32 [ -1, %8 ], [ -1, %98 ], [ -1, %9 ], [ -1, %13 ], [ %228, %505 ], [ 0, %504 ], [ -1, %99 ], [ -1, %99 ], [ -1, %104 ], [ %228, %516 ]
  ret i32 %521
}

declare %struct._xmlNode* @nodePop(%struct._xmlParserCtxt*) local_unnamed_addr #3

declare void @xmlParserAddNodeInfo(%struct._xmlParserCtxt*, %struct._xmlParserNodeInfo*) local_unnamed_addr #3

declare i8* @xmlStrdup(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @__htmlParseContent(i8*) local_unnamed_addr #1 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %struct._xmlParserCtxt*
  tail call fastcc void @htmlParseContentInternal(%struct._xmlParserCtxt* nonnull %4)
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParseContentInternal(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca [100 x i8], align 16
  %4 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i8* @xmlStrdup(i8* %5) #9
  %7 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  %10 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %11 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %12 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i64 0, i64 0
  %13 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 57
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %15 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %16 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %17 = bitcast i8** %4 to i64*
  %18 = bitcast { i64, i64 }* %2 to i8*
  %19 = icmp eq %struct._xmlParserCtxt* %0, null
  %20 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 17
  %21 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 84
  %22 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 85
  %23 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 86
  %24 = bitcast %struct._xmlParserNodeInfo** %23 to i8**
  %25 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %26 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  %27 = bitcast %struct._xmlParserCtxt* %0 to i8*
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 83
  br label %29

29:                                               ; preds = %650, %1
  %30 = phi i32 [ %8, %1 ], [ %651, %650 ]
  %31 = phi i8* [ %6, %1 ], [ %652, %650 ]
  br label %33

32:                                               ; preds = %229, %199, %195
  br label %33

33:                                               ; preds = %32, %29
  %34 = load i32, i32* %9, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %33
  %37 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %38 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %37, i64 0, i32 5
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %37, i64 0, i32 4
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %40, %43
  %45 = icmp slt i64 %44, 250
  br i1 %45, label %46, label %48

46:                                               ; preds = %36
  %47 = call i32 @xmlParserInputGrow(%struct._xmlParserInput* %37, i32 250) #9
  br label %48

48:                                               ; preds = %46, %36, %33
  %49 = load i32, i32* %11, align 8
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %665, label %51

51:                                               ; preds = %48
  %52 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %53 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %52, i64 0, i32 4
  %54 = load i8*, i8** %53, align 8
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 60
  br i1 %56, label %57, label %232

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 47
  br i1 %60, label %61, label %75

61:                                               ; preds = %57
  %62 = call fastcc i32 @htmlParseEndTag(%struct._xmlParserCtxt* %0)
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %650, label %64

64:                                               ; preds = %61
  %65 = icmp eq i8* %31, null
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = load i32, i32* %7, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %650

69:                                               ; preds = %64
  %70 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %70(i8* nonnull %31) #9
  br label %71

71:                                               ; preds = %66, %69
  %72 = load i8*, i8** %4, align 8
  %73 = call i8* @xmlStrdup(i8* %72) #9
  %74 = load i32, i32* %7, align 8
  br label %650

75:                                               ; preds = %57
  %76 = and i8 %59, -33
  %77 = add i8 %76, -65
  %78 = icmp ult i8 %77, 26
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  switch i8 %59, label %232 [
    i8 95, label %80
    i8 58, label %80
  ]

80:                                               ; preds = %79, %79, %75
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 100, i1 false) #9
  %81 = load i8*, i8** %53, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = and i8 %83, -33
  %85 = add i8 %84, -65
  %86 = icmp ult i8 %85, 26
  br i1 %86, label %87, label %88

87:                                               ; preds = %88, %88, %80
  br label %90

88:                                               ; preds = %80
  switch i8 %83, label %89 [
    i8 95, label %87
    i8 58, label %87
  ]

89:                                               ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %12) #9
  br label %122

90:                                               ; preds = %87, %113
  %91 = phi i8* [ %114, %113 ], [ %81, %87 ]
  %92 = phi i64 [ %94, %113 ], [ 0, %87 ]
  %93 = phi i32 [ %95, %113 ], [ 0, %87 ]
  %94 = add nuw nsw i64 %92, 1
  %95 = add nuw nsw i32 %93, 1
  %96 = getelementptr inbounds i8, i8* %91, i64 %94
  %97 = load i8, i8* %96, align 1
  %98 = add i8 %97, -65
  %99 = icmp ult i8 %98, 26
  br i1 %99, label %107, label %100

100:                                              ; preds = %90
  %101 = add i8 %97, -97
  %102 = icmp ult i8 %101, 26
  %103 = add i8 %97, -48
  %104 = icmp ult i8 %103, 10
  %105 = or i1 %102, %104
  br i1 %105, label %109, label %106

106:                                              ; preds = %100
  switch i8 %97, label %115 [
    i8 58, label %109
    i8 45, label %109
    i8 95, label %109
  ]

107:                                              ; preds = %90
  %108 = add nuw nsw i8 %97, 32
  br label %109

109:                                              ; preds = %100, %106, %106, %106, %107
  %110 = phi i8 [ %108, %107 ], [ %97, %106 ], [ %97, %106 ], [ %97, %106 ], [ %97, %100 ]
  %111 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i64 0, i64 %92
  store i8 %110, i8* %111, align 1
  %112 = icmp eq i64 %94, 100
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8*, i8** %53, align 8
  br label %90

115:                                              ; preds = %106
  %116 = trunc i64 %92 to i32
  br label %117

117:                                              ; preds = %109, %115
  %118 = phi i32 [ %116, %115 ], [ %95, %109 ]
  %119 = load %struct._xmlDict*, %struct._xmlDict** %13, align 8
  %120 = call i8* @xmlDictLookup(%struct._xmlDict* %119, i8* nonnull %12, i32 %118) #9
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %12) #9
  %121 = icmp eq i8* %120, null
  br i1 %121, label %122, label %142

122:                                              ; preds = %117, %89
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 68, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.831, i64 0, i64 0), i8* null, i8* null)
  %123 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %124 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %123, i64 0, i32 4
  %125 = load i8*, i8** %124, align 8
  %126 = load i8, i8* %125, align 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %122, %128
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %129 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %130 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %129, i64 0, i32 4
  %131 = load i8*, i8** %130, align 8
  %132 = load i8, i8* %131, align 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %128, label %134

134:                                              ; preds = %128, %122
  call fastcc void @htmlParserFinishElementParsing(%struct._xmlParserCtxt* %0)
  %135 = icmp eq i8* %31, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %137(i8* nonnull %31) #9
  br label %138

138:                                              ; preds = %134, %136
  %139 = load i8*, i8** %4, align 8
  %140 = call i8* @xmlStrdup(i8* %139) #9
  %141 = load i32, i32* %7, align 8
  br label %650

142:                                              ; preds = %117
  %143 = load i8*, i8** %4, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %232, label %145

145:                                              ; preds = %142, %166
  %146 = phi i64 [ %168, %166 ], [ 251, %142 ]
  %147 = phi i64 [ %167, %166 ], [ 0, %142 ]
  %148 = add i64 %147, %146
  %149 = lshr i64 %148, 1
  %150 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %149
  %151 = getelementptr inbounds %struct.htmlStartCloseEntry, %struct.htmlStartCloseEntry* %150, i64 0, i32 0
  %152 = load i8*, i8** %151, align 16
  %153 = call i32 @strcmp(i8* nonnull %143, i8* %152) #10
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %159

155:                                              ; preds = %145
  %156 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %149, i32 1
  %157 = load i8*, i8** %156, align 8
  %158 = call i32 @strcmp(i8* nonnull %120, i8* %157) #10
  br label %159

159:                                              ; preds = %155, %145
  %160 = phi i32 [ %158, %155 ], [ %153, %145 ]
  %161 = icmp slt i32 %160, 0
  br i1 %161, label %166, label %162

162:                                              ; preds = %159
  %163 = icmp eq i32 %160, 0
  br i1 %163, label %170, label %164

164:                                              ; preds = %162
  %165 = add nuw i64 %149, 1
  br label %166

166:                                              ; preds = %164, %159
  %167 = phi i64 [ %165, %164 ], [ %147, %159 ]
  %168 = phi i64 [ %146, %164 ], [ %149, %159 ]
  %169 = icmp ult i64 %167, %168
  br i1 %169, label %145, label %232

170:                                              ; preds = %162
  %171 = icmp eq %struct.htmlStartCloseEntry* %150, null
  br i1 %171, label %232, label %172

172:                                              ; preds = %170, %229
  %173 = phi i8* [ %230, %229 ], [ %143, %170 ]
  br label %174

174:                                              ; preds = %172, %195
  %175 = phi i64 [ %197, %195 ], [ 251, %172 ]
  %176 = phi i64 [ %196, %195 ], [ 0, %172 ]
  %177 = add i64 %176, %175
  %178 = lshr i64 %177, 1
  %179 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %178
  %180 = getelementptr inbounds %struct.htmlStartCloseEntry, %struct.htmlStartCloseEntry* %179, i64 0, i32 0
  %181 = load i8*, i8** %180, align 16
  %182 = call i32 @strcmp(i8* nonnull %173, i8* %181) #10
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %188

184:                                              ; preds = %174
  %185 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %178, i32 1
  %186 = load i8*, i8** %185, align 8
  %187 = call i32 @strcmp(i8* nonnull %120, i8* %186) #10
  br label %188

188:                                              ; preds = %184, %174
  %189 = phi i32 [ %187, %184 ], [ %182, %174 ]
  %190 = icmp slt i32 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %188
  %192 = icmp eq i32 %189, 0
  br i1 %192, label %199, label %193

193:                                              ; preds = %191
  %194 = add nuw i64 %178, 1
  br label %195

195:                                              ; preds = %193, %188
  %196 = phi i64 [ %194, %193 ], [ %176, %188 ]
  %197 = phi i64 [ %175, %193 ], [ %178, %188 ]
  %198 = icmp ult i64 %196, %197
  br i1 %198, label %174, label %32

199:                                              ; preds = %191
  %200 = icmp eq %struct.htmlStartCloseEntry* %179, null
  br i1 %200, label %32, label %201

201:                                              ; preds = %199
  %202 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %14, align 8
  %203 = icmp eq %struct._xmlSAXHandler* %202, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %202, i64 0, i32 15
  %206 = load void (i8*, i8*)*, void (i8*, i8*)** %205, align 8
  %207 = icmp eq void (i8*, i8*)* %206, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %204
  %209 = load i8*, i8** %15, align 8
  call void %206(i8* %209, i8* nonnull %173) #9
  br label %210

210:                                              ; preds = %208, %204, %201
  %211 = load i32, i32* %7, align 8
  %212 = icmp slt i32 %211, 1
  br i1 %212, label %229, label %213

213:                                              ; preds = %210
  %214 = add nsw i32 %211, -1
  store i32 %214, i32* %7, align 8
  %215 = icmp sgt i32 %214, 0
  br i1 %215, label %216, label %223

216:                                              ; preds = %213
  %217 = load i8**, i8*** %16, align 8
  %218 = add nsw i32 %211, -2
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8*, i8** %217, i64 %219
  %221 = bitcast i8** %220 to i64*
  %222 = load i64, i64* %221, align 8
  store i64 %222, i64* %17, align 8
  br label %225

223:                                              ; preds = %213
  store i8* null, i8** %4, align 8
  %224 = load i8**, i8*** %16, align 8
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i8** [ %224, %223 ], [ %217, %216 ]
  %227 = sext i32 %214 to i64
  %228 = getelementptr inbounds i8*, i8** %226, i64 %227
  store i8* null, i8** %228, align 8
  br label %229

229:                                              ; preds = %225, %210
  %230 = load i8*, i8** %4, align 8
  %231 = icmp eq i8* %230, null
  br i1 %231, label %32, label %172

232:                                              ; preds = %170, %51, %79, %142, %166
  %233 = load i32, i32* %7, align 8
  %234 = icmp slt i32 %233, 1
  %235 = icmp slt i32 %30, %233
  %236 = or i1 %234, %235
  br i1 %236, label %249, label %237

237:                                              ; preds = %232
  %238 = load i8*, i8** %4, align 8
  %239 = call i32 @xmlStrEqual(i8* %31, i8* %238) #9
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %249

241:                                              ; preds = %237
  call fastcc void @htmlParserFinishElementParsing(%struct._xmlParserCtxt* %0)
  %242 = icmp eq i8* %31, null
  br i1 %242, label %245, label %243

243:                                              ; preds = %241
  %244 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %244(i8* nonnull %31) #9
  br label %245

245:                                              ; preds = %241, %243
  %246 = load i8*, i8** %4, align 8
  %247 = call i8* @xmlStrdup(i8* %246) #9
  %248 = load i32, i32* %7, align 8
  br label %650

249:                                              ; preds = %232, %237
  %250 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %251 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %250, i64 0, i32 4
  %252 = load i8*, i8** %251, align 8
  %253 = load i8, i8* %252, align 1
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %608, label %255

255:                                              ; preds = %249
  %256 = call i32 @xmlStrEqual(i8* %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i64 0, i64 0)) #9
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %255
  %259 = call i32 @xmlStrEqual(i8* %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i64 0, i64 0)) #9
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %262, label %261

261:                                              ; preds = %258, %255
  call fastcc void @htmlParseScript(%struct._xmlParserCtxt* %0)
  br label %645

262:                                              ; preds = %258
  %263 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %264 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %263, i64 0, i32 4
  %265 = load i8*, i8** %264, align 8
  %266 = load i8, i8* %265, align 1
  %267 = icmp eq i8 %266, 60
  br i1 %267, label %268, label %328

268:                                              ; preds = %262
  %269 = getelementptr inbounds i8, i8* %265, i64 1
  %270 = load i8, i8* %269, align 1
  %271 = icmp eq i8 %270, 33
  br i1 %271, label %272, label %332

272:                                              ; preds = %268
  %273 = tail call i32** @__ctype_toupper_loc() #11
  %274 = load i32*, i32** %273, align 8
  %275 = getelementptr inbounds i8, i8* %265, i64 2
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i64
  %278 = getelementptr inbounds i32, i32* %274, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 68
  br i1 %280, label %281, label %332

281:                                              ; preds = %272
  %282 = getelementptr inbounds i8, i8* %265, i64 3
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds i32, i32* %274, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, 79
  br i1 %287, label %288, label %332

288:                                              ; preds = %281
  %289 = getelementptr inbounds i8, i8* %265, i64 4
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i64
  %292 = getelementptr inbounds i32, i32* %274, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = icmp eq i32 %293, 67
  br i1 %294, label %295, label %332

295:                                              ; preds = %288
  %296 = getelementptr inbounds i8, i8* %265, i64 5
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds i32, i32* %274, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %300, 84
  br i1 %301, label %302, label %332

302:                                              ; preds = %295
  %303 = getelementptr inbounds i8, i8* %265, i64 6
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i64
  %306 = getelementptr inbounds i32, i32* %274, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = icmp eq i32 %307, 89
  br i1 %308, label %309, label %332

309:                                              ; preds = %302
  %310 = getelementptr inbounds i8, i8* %265, i64 7
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds i32, i32* %274, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, 80
  br i1 %315, label %316, label %332

316:                                              ; preds = %309
  %317 = getelementptr inbounds i8, i8* %265, i64 8
  %318 = load i8, i8* %317, align 1
  %319 = zext i8 %318 to i64
  %320 = getelementptr inbounds i32, i32* %274, i64 %319
  %321 = load i32, i32* %320, align 4
  %322 = icmp eq i32 %321, 69
  br i1 %322, label %323, label %332

323:                                              ; preds = %316
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 800, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.849, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.850, i64 0, i64 0), i8* null)
  call fastcc void @htmlParseDocTypeDecl(%struct._xmlParserCtxt* %0)
  %324 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %325 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %324, i64 0, i32 4
  %326 = load i8*, i8** %325, align 8
  %327 = load i8, i8* %326, align 1
  br label %328

328:                                              ; preds = %323, %262
  %329 = phi i8 [ %266, %262 ], [ %327, %323 ]
  %330 = phi i8* [ %265, %262 ], [ %326, %323 ]
  %331 = phi %struct._xmlParserInput* [ %263, %262 ], [ %324, %323 ]
  switch i8 %329, label %644 [
    i8 60, label %332
    i8 0, label %608
    i8 38, label %607
  ]

332:                                              ; preds = %316, %309, %302, %295, %288, %281, %272, %268, %328
  %333 = phi %struct._xmlParserInput* [ %331, %328 ], [ %263, %268 ], [ %263, %272 ], [ %263, %281 ], [ %263, %288 ], [ %263, %295 ], [ %263, %302 ], [ %263, %309 ], [ %263, %316 ]
  %334 = phi i8* [ %330, %328 ], [ %265, %268 ], [ %265, %272 ], [ %265, %281 ], [ %265, %288 ], [ %265, %295 ], [ %265, %302 ], [ %265, %309 ], [ %265, %316 ]
  %335 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %333, i64 0, i32 4
  %336 = getelementptr inbounds i8, i8* %334, i64 1
  %337 = load i8, i8* %336, align 1
  switch i8 %337, label %348 [
    i8 33, label %338
    i8 63, label %347
  ]

338:                                              ; preds = %332
  %339 = getelementptr inbounds i8, i8* %334, i64 2
  %340 = load i8, i8* %339, align 1
  %341 = icmp eq i8 %340, 45
  br i1 %341, label %342, label %348

342:                                              ; preds = %338
  %343 = getelementptr inbounds i8, i8* %334, i64 3
  %344 = load i8, i8* %343, align 1
  %345 = icmp eq i8 %344, 45
  br i1 %345, label %346, label %348

346:                                              ; preds = %342
  call fastcc void @htmlParseComment(%struct._xmlParserCtxt* %0)
  br label %645

347:                                              ; preds = %332
  call fastcc void @htmlParsePI(%struct._xmlParserCtxt* %0)
  br label %645

348:                                              ; preds = %332, %338, %342
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false)
  %349 = icmp eq %struct._xmlParserInput* %333, null
  %350 = or i1 %19, %349
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.857, i64 0, i64 0), i8* null, i8* null) #9
  br label %599

352:                                              ; preds = %348
  %353 = load i32, i32* %11, align 8
  %354 = icmp eq i32 %353, -1
  br i1 %354, label %599, label %355

355:                                              ; preds = %352
  %356 = load i32, i32* %20, align 8
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %371, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %333, i64 0, i32 9
  %360 = load i64, i64* %359, align 8
  %361 = bitcast i8** %335 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %333, i64 0, i32 3
  %364 = bitcast i8** %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = add i64 %362, %360
  %367 = sub i64 %366, %365
  %368 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %333, i64 0, i32 7
  %369 = load i32, i32* %368, align 4
  %370 = sext i32 %369 to i64
  br label %371

371:                                              ; preds = %358, %355
  %372 = phi i64 [ 0, %355 ], [ %367, %358 ]
  %373 = phi i64 [ 0, %355 ], [ %370, %358 ]
  %374 = call fastcc i32 @htmlParseStartTag(%struct._xmlParserCtxt* nonnull %0) #9
  %375 = load i8*, i8** %4, align 8
  %376 = icmp eq i32 %374, -1
  %377 = icmp eq i8* %375, null
  %378 = or i1 %376, %377
  br i1 %378, label %379, label %386

379:                                              ; preds = %371
  %380 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %381 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %380, i64 0, i32 4
  %382 = load i8*, i8** %381, align 8
  %383 = load i8, i8* %382, align 1
  %384 = icmp eq i8 %383, 62
  br i1 %384, label %385, label %599

385:                                              ; preds = %379
  call void @xmlNextChar(%struct._xmlParserCtxt* nonnull %0) #9
  br label %599

386:                                              ; preds = %371, %400
  %387 = phi i64 [ %402, %400 ], [ 92, %371 ]
  %388 = phi i64 [ %401, %400 ], [ 0, %371 ]
  %389 = add i64 %388, %387
  %390 = lshr i64 %389, 1
  %391 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %390
  %392 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %391, i64 0, i32 0
  %393 = load i8*, i8** %392, align 16
  %394 = call i32 @xmlStrcasecmp(i8* nonnull %375, i8* %393) #9
  %395 = icmp slt i32 %394, 0
  br i1 %395, label %400, label %396

396:                                              ; preds = %386
  %397 = icmp eq i32 %394, 0
  br i1 %397, label %404, label %398

398:                                              ; preds = %396
  %399 = add nuw i64 %390, 1
  br label %400

400:                                              ; preds = %398, %386
  %401 = phi i64 [ %399, %398 ], [ %388, %386 ]
  %402 = phi i64 [ %387, %398 ], [ %390, %386 ]
  %403 = icmp ult i64 %401, %402
  br i1 %403, label %386, label %406

404:                                              ; preds = %396
  %405 = icmp eq %struct._htmlElemDesc* %391, null
  br i1 %405, label %406, label %407

406:                                              ; preds = %400, %404
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 801, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* %375, i8* null) #9
  br label %407

407:                                              ; preds = %406, %404
  %408 = phi i1 [ true, %406 ], [ false, %404 ]
  %409 = phi %struct._htmlElemDesc* [ null, %406 ], [ %391, %404 ]
  %410 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %411 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %410, i64 0, i32 4
  %412 = load i8*, i8** %411, align 8
  %413 = load i8, i8* %412, align 1
  switch i8 %413, label %452 [
    i8 47, label %414
    i8 62, label %451
  ]

414:                                              ; preds = %407
  %415 = getelementptr inbounds i8, i8* %412, i64 1
  %416 = load i8, i8* %415, align 1
  %417 = icmp eq i8 %416, 62
  br i1 %417, label %418, label %452

418:                                              ; preds = %414
  %419 = getelementptr inbounds i8, i8* %412, i64 2
  store i8* %419, i8** %411, align 8
  %420 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %421 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %420, i64 0, i32 8
  %422 = load i32, i32* %421, align 8
  %423 = add nsw i32 %422, 2
  store i32 %423, i32* %421, align 8
  %424 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %14, align 8
  %425 = icmp eq %struct._xmlSAXHandler* %424, null
  br i1 %425, label %432, label %426

426:                                              ; preds = %418
  %427 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %424, i64 0, i32 15
  %428 = load void (i8*, i8*)*, void (i8*, i8*)** %427, align 8
  %429 = icmp eq void (i8*, i8*)* %428, null
  br i1 %429, label %432, label %430

430:                                              ; preds = %426
  %431 = load i8*, i8** %15, align 8
  call void %428(i8* %431, i8* %375) #9
  br label %432

432:                                              ; preds = %430, %426, %418
  %433 = load i32, i32* %7, align 8
  %434 = icmp slt i32 %433, 1
  br i1 %434, label %599, label %435

435:                                              ; preds = %432
  %436 = add nsw i32 %433, -1
  store i32 %436, i32* %7, align 8
  %437 = icmp sgt i32 %436, 0
  br i1 %437, label %438, label %445

438:                                              ; preds = %435
  %439 = load i8**, i8*** %16, align 8
  %440 = add nsw i32 %433, -2
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i8*, i8** %439, i64 %441
  %443 = bitcast i8** %442 to i64*
  %444 = load i64, i64* %443, align 8
  store i64 %444, i64* %17, align 8
  br label %447

445:                                              ; preds = %435
  store i8* null, i8** %4, align 8
  %446 = load i8**, i8*** %16, align 8
  br label %447

447:                                              ; preds = %445, %438
  %448 = phi i8** [ %446, %445 ], [ %439, %438 ]
  %449 = sext i32 %436 to i64
  %450 = getelementptr inbounds i8*, i8** %448, i64 %449
  store i8* null, i8** %450, align 8
  br label %599

451:                                              ; preds = %407
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br i1 %408, label %554, label %522

452:                                              ; preds = %414, %407
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 73, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i8* %375, i8* null) #9
  %453 = load i8*, i8** %4, align 8
  %454 = call i32 @xmlStrEqual(i8* %375, i8* %453) #9
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %476, label %456

456:                                              ; preds = %452
  %457 = call %struct._xmlNode* @nodePop(%struct._xmlParserCtxt* %0) #9
  %458 = load i32, i32* %7, align 8
  %459 = icmp slt i32 %458, 1
  br i1 %459, label %476, label %460

460:                                              ; preds = %456
  %461 = add nsw i32 %458, -1
  store i32 %461, i32* %7, align 8
  %462 = icmp sgt i32 %461, 0
  br i1 %462, label %463, label %470

463:                                              ; preds = %460
  %464 = load i8**, i8*** %16, align 8
  %465 = add nsw i32 %458, -2
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i8*, i8** %464, i64 %466
  %468 = bitcast i8** %467 to i64*
  %469 = load i64, i64* %468, align 8
  store i64 %469, i64* %17, align 8
  br label %472

470:                                              ; preds = %460
  store i8* null, i8** %4, align 8
  %471 = load i8**, i8*** %16, align 8
  br label %472

472:                                              ; preds = %470, %463
  %473 = phi i8** [ %471, %470 ], [ %464, %463 ]
  %474 = sext i32 %461 to i64
  %475 = getelementptr inbounds i8*, i8** %473, i64 %474
  store i8* null, i8** %475, align 8
  br label %476

476:                                              ; preds = %472, %456, %452
  %477 = load i32, i32* %20, align 8
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %521, label %479

479:                                              ; preds = %476
  %480 = load i32, i32* %21, align 8
  %481 = load i32, i32* %22, align 4
  %482 = icmp slt i32 %480, %481
  br i1 %482, label %483, label %485

483:                                              ; preds = %479
  %484 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %23, align 8
  br label %507

485:                                              ; preds = %479
  %486 = icmp eq i32 %481, 0
  br i1 %486, label %487, label %488

487:                                              ; preds = %485
  store i32 5, i32* %22, align 4
  br label %488

488:                                              ; preds = %487, %485
  %489 = phi i32 [ 5, %487 ], [ %481, %485 ]
  %490 = shl nsw i32 %489, 1
  store i32 %490, i32* %22, align 4
  %491 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %492 = load i8*, i8** %24, align 8
  %493 = sext i32 %490 to i64
  %494 = mul nsw i64 %493, 40
  %495 = call i8* %491(i8* %492, i64 %494) #9
  store i8* %495, i8** %24, align 8
  %496 = icmp eq i8* %495, null
  br i1 %496, label %500, label %497

497:                                              ; preds = %488
  %498 = bitcast i8* %495 to %struct._xmlParserNodeInfo*
  %499 = load i32, i32* %21, align 8
  br label %507

500:                                              ; preds = %488
  %501 = load i32, i32* %25, align 4
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %506, label %503

503:                                              ; preds = %500
  %504 = load i32, i32* %11, align 8
  %505 = icmp eq i32 %504, -1
  br i1 %505, label %521, label %506

506:                                              ; preds = %503, %500
  store i32 2, i32* %26, align 8
  store i32 -1, i32* %11, align 8
  store i32 1, i32* %25, align 4
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %27, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %521

507:                                              ; preds = %497, %483
  %508 = phi i32 [ %480, %483 ], [ %499, %497 ]
  %509 = phi %struct._xmlParserNodeInfo* [ %484, %483 ], [ %498, %497 ]
  %510 = sext i32 %508 to i64
  %511 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %509, i64 %510, i32 0
  store %struct._xmlNode* null, %struct._xmlNode** %511, align 8
  %512 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %509, i64 %510, i32 1
  store i64 %372, i64* %512, align 8
  %513 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %509, i64 %510, i32 2
  store i64 %373, i64* %513, align 8
  %514 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %509, i64 %510, i32 3
  %515 = bitcast i64* %514 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %515, i8* nonnull align 8 %18, i64 16, i1 false) #9
  %516 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %23, align 8
  %517 = load i32, i32* %21, align 8
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %516, i64 %518
  store %struct._xmlParserNodeInfo* %519, %struct._xmlParserNodeInfo** %28, align 8
  %520 = add nsw i32 %517, 1
  store i32 %520, i32* %21, align 8
  br label %521

521:                                              ; preds = %507, %506, %503, %476
  call fastcc void @htmlParserFinishElementParsing(%struct._xmlParserCtxt* %0) #9
  br label %599

522:                                              ; preds = %451
  %523 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %409, i64 0, i32 4
  %524 = load i8, i8* %523, align 1
  %525 = icmp eq i8 %524, 0
  br i1 %525, label %554, label %526

526:                                              ; preds = %522
  %527 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %14, align 8
  %528 = icmp eq %struct._xmlSAXHandler* %527, null
  br i1 %528, label %535, label %529

529:                                              ; preds = %526
  %530 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %527, i64 0, i32 15
  %531 = load void (i8*, i8*)*, void (i8*, i8*)** %530, align 8
  %532 = icmp eq void (i8*, i8*)* %531, null
  br i1 %532, label %535, label %533

533:                                              ; preds = %529
  %534 = load i8*, i8** %15, align 8
  call void %531(i8* %534, i8* %375) #9
  br label %535

535:                                              ; preds = %533, %529, %526
  %536 = load i32, i32* %7, align 8
  %537 = icmp slt i32 %536, 1
  br i1 %537, label %599, label %538

538:                                              ; preds = %535
  %539 = add nsw i32 %536, -1
  store i32 %539, i32* %7, align 8
  %540 = icmp sgt i32 %539, 0
  br i1 %540, label %541, label %548

541:                                              ; preds = %538
  %542 = load i8**, i8*** %16, align 8
  %543 = add nsw i32 %536, -2
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds i8*, i8** %542, i64 %544
  %546 = bitcast i8** %545 to i64*
  %547 = load i64, i64* %546, align 8
  store i64 %547, i64* %17, align 8
  br label %550

548:                                              ; preds = %538
  store i8* null, i8** %4, align 8
  %549 = load i8**, i8*** %16, align 8
  br label %550

550:                                              ; preds = %548, %541
  %551 = phi i8** [ %549, %548 ], [ %542, %541 ]
  %552 = sext i32 %539 to i64
  %553 = getelementptr inbounds i8*, i8** %551, i64 %552
  store i8* null, i8** %553, align 8
  br label %599

554:                                              ; preds = %522, %451
  %555 = load i32, i32* %20, align 8
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %599, label %557

557:                                              ; preds = %554
  %558 = load i32, i32* %21, align 8
  %559 = load i32, i32* %22, align 4
  %560 = icmp slt i32 %558, %559
  br i1 %560, label %561, label %563

561:                                              ; preds = %557
  %562 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %23, align 8
  br label %585

563:                                              ; preds = %557
  %564 = icmp eq i32 %559, 0
  br i1 %564, label %565, label %566

565:                                              ; preds = %563
  store i32 5, i32* %22, align 4
  br label %566

566:                                              ; preds = %565, %563
  %567 = phi i32 [ 5, %565 ], [ %559, %563 ]
  %568 = shl nsw i32 %567, 1
  store i32 %568, i32* %22, align 4
  %569 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %570 = load i8*, i8** %24, align 8
  %571 = sext i32 %568 to i64
  %572 = mul nsw i64 %571, 40
  %573 = call i8* %569(i8* %570, i64 %572) #9
  store i8* %573, i8** %24, align 8
  %574 = icmp eq i8* %573, null
  br i1 %574, label %578, label %575

575:                                              ; preds = %566
  %576 = bitcast i8* %573 to %struct._xmlParserNodeInfo*
  %577 = load i32, i32* %21, align 8
  br label %585

578:                                              ; preds = %566
  %579 = load i32, i32* %25, align 4
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %584, label %581

581:                                              ; preds = %578
  %582 = load i32, i32* %11, align 8
  %583 = icmp eq i32 %582, -1
  br i1 %583, label %599, label %584

584:                                              ; preds = %581, %578
  store i32 2, i32* %26, align 8
  store i32 -1, i32* %11, align 8
  store i32 1, i32* %25, align 4
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %27, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %599

585:                                              ; preds = %575, %561
  %586 = phi i32 [ %558, %561 ], [ %577, %575 ]
  %587 = phi %struct._xmlParserNodeInfo* [ %562, %561 ], [ %576, %575 ]
  %588 = sext i32 %586 to i64
  %589 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %587, i64 %588, i32 0
  store %struct._xmlNode* null, %struct._xmlNode** %589, align 8
  %590 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %587, i64 %588, i32 1
  store i64 %372, i64* %590, align 8
  %591 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %587, i64 %588, i32 2
  store i64 %373, i64* %591, align 8
  %592 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %587, i64 %588, i32 3
  %593 = bitcast i64* %592 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %593, i8* nonnull align 8 %18, i64 16, i1 false) #9
  %594 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %23, align 8
  %595 = load i32, i32* %21, align 8
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %594, i64 %596
  store %struct._xmlParserNodeInfo* %597, %struct._xmlParserNodeInfo** %28, align 8
  %598 = add nsw i32 %595, 1
  store i32 %598, i32* %21, align 8
  br label %599

599:                                              ; preds = %351, %352, %379, %385, %432, %447, %521, %535, %550, %554, %581, %584, %585
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18)
  %600 = icmp eq i8* %31, null
  br i1 %600, label %603, label %601

601:                                              ; preds = %599
  %602 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %602(i8* nonnull %31) #9
  br label %603

603:                                              ; preds = %599, %601
  %604 = load i8*, i8** %4, align 8
  %605 = call i8* @xmlStrdup(i8* %604) #9
  %606 = load i32, i32* %7, align 8
  br label %645

607:                                              ; preds = %328
  call fastcc void @htmlParseReference(%struct._xmlParserCtxt* %0)
  br label %645

608:                                              ; preds = %249, %328
  %609 = load i32, i32* %7, align 8
  %610 = icmp sgt i32 %609, 0
  br i1 %610, label %611, label %665

611:                                              ; preds = %608, %642
  %612 = phi i32 [ %613, %642 ], [ %609, %608 ]
  %613 = add nsw i32 %612, -1
  %614 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %14, align 8
  %615 = icmp eq %struct._xmlSAXHandler* %614, null
  br i1 %615, label %623, label %616

616:                                              ; preds = %611
  %617 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %614, i64 0, i32 15
  %618 = load void (i8*, i8*)*, void (i8*, i8*)** %617, align 8
  %619 = icmp eq void (i8*, i8*)* %618, null
  br i1 %619, label %623, label %620

620:                                              ; preds = %616
  %621 = load i8*, i8** %15, align 8
  %622 = load i8*, i8** %4, align 8
  call void %618(i8* %621, i8* %622) #9
  br label %623

623:                                              ; preds = %620, %616, %611
  %624 = load i32, i32* %7, align 8
  %625 = icmp slt i32 %624, 1
  br i1 %625, label %642, label %626

626:                                              ; preds = %623
  %627 = add nsw i32 %624, -1
  store i32 %627, i32* %7, align 8
  %628 = icmp sgt i32 %627, 0
  br i1 %628, label %629, label %636

629:                                              ; preds = %626
  %630 = load i8**, i8*** %16, align 8
  %631 = add nsw i32 %624, -2
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds i8*, i8** %630, i64 %632
  %634 = bitcast i8** %633 to i64*
  %635 = load i64, i64* %634, align 8
  store i64 %635, i64* %17, align 8
  br label %638

636:                                              ; preds = %626
  store i8* null, i8** %4, align 8
  %637 = load i8**, i8*** %16, align 8
  br label %638

638:                                              ; preds = %636, %629
  %639 = phi i8** [ %637, %636 ], [ %630, %629 ]
  %640 = sext i32 %627 to i64
  %641 = getelementptr inbounds i8*, i8** %639, i64 %640
  store i8* null, i8** %641, align 8
  br label %642

642:                                              ; preds = %638, %623
  %643 = icmp sgt i32 %613, 0
  br i1 %643, label %611, label %665

644:                                              ; preds = %328
  call fastcc void @htmlParseCharDataInternal(%struct._xmlParserCtxt* %0, i32 0) #9
  br label %645

645:                                              ; preds = %346, %603, %644, %607, %347, %261
  %646 = phi i32 [ %30, %261 ], [ %30, %346 ], [ %30, %347 ], [ %606, %603 ], [ %30, %607 ], [ %30, %644 ]
  %647 = phi i8* [ %31, %261 ], [ %31, %346 ], [ %31, %347 ], [ %605, %603 ], [ %31, %607 ], [ %31, %644 ]
  %648 = load i32, i32* %9, align 4
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %653, label %650

650:                                              ; preds = %645, %653, %663, %66, %71, %61, %138, %245
  %651 = phi i32 [ %248, %245 ], [ %141, %138 ], [ %74, %71 ], [ %30, %66 ], [ %30, %61 ], [ %646, %663 ], [ %646, %653 ], [ %646, %645 ]
  %652 = phi i8* [ %247, %245 ], [ %140, %138 ], [ %73, %71 ], [ null, %66 ], [ %31, %61 ], [ %647, %663 ], [ %647, %653 ], [ %647, %645 ]
  br label %29

653:                                              ; preds = %645
  %654 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %655 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %654, i64 0, i32 5
  %656 = bitcast i8** %655 to i64*
  %657 = load i64, i64* %656, align 8
  %658 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %654, i64 0, i32 4
  %659 = bitcast i8** %658 to i64*
  %660 = load i64, i64* %659, align 8
  %661 = sub i64 %657, %660
  %662 = icmp slt i64 %661, 250
  br i1 %662, label %663, label %650

663:                                              ; preds = %653
  %664 = call i32 @xmlParserInputGrow(%struct._xmlParserInput* %654, i32 250) #9
  br label %650

665:                                              ; preds = %48, %642, %608
  %666 = icmp eq i8* %31, null
  br i1 %666, label %669, label %667

667:                                              ; preds = %665
  %668 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %668(i8* nonnull %31) #9
  br label %669

669:                                              ; preds = %665, %667
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlParseDocument(%struct._xmlParserCtxt*) local_unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to [4 x i8]*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 1
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 2
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 3
  store i32 -1431655766, i32* %2, align 4
  tail call void @xmlInitParser() #9
  tail call void @htmlDefaultSAXHandlerInit() #9
  %8 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %11 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %12 = icmp eq %struct._xmlParserInput* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %9, %1
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0), i8* null, i8* null)
  br label %275

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 8
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 53
  store i32 1, i32* %16, align 4
  %17 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %31

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %11, i64 0, i32 5
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %11, i64 0, i32 4
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = icmp slt i64 %27, 250
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* nonnull %11, i32 250) #9
  br label %31

31:                                               ; preds = %29, %20, %14
  %32 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %33 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  %34 = icmp eq %struct._xmlSAXHandler* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %33, i64 0, i32 11
  %37 = load void (i8*, %struct._xmlSAXLocator*)*, void (i8*, %struct._xmlSAXLocator*)** %36, align 8
  %38 = icmp eq void (i8*, %struct._xmlSAXLocator*)* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  tail call void %37(i8* %41, %struct._xmlSAXLocator* nonnull @xmlDefaultSAXLocator) #9
  br label %42

42:                                               ; preds = %35, %31, %39
  %43 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 6
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %74

46:                                               ; preds = %42
  %47 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %48 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %47, i64 0, i32 5
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %47, i64 0, i32 4
  %52 = load i8*, i8** %51, align 8
  %53 = ptrtoint i8* %52 to i64
  %54 = sub i64 %50, %53
  %55 = icmp sgt i64 %54, 3
  br i1 %55, label %56, label %74

56:                                               ; preds = %46
  %57 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = load i8, i8* %52, align 1
  br label %62

62:                                               ; preds = %56, %60
  %63 = phi i8 [ %61, %60 ], [ -1, %56 ]
  store i8 %63, i8* %4, align 4
  %64 = getelementptr inbounds i8, i8* %52, i64 1
  %65 = load i8, i8* %64, align 1
  store i8 %65, i8* %5, align 1
  %66 = getelementptr inbounds i8, i8* %52, i64 2
  %67 = load i8, i8* %66, align 1
  store i8 %67, i8* %6, align 2
  %68 = getelementptr inbounds i8, i8* %52, i64 3
  %69 = load i8, i8* %68, align 1
  store i8 %69, i8* %7, align 1
  %70 = call i32 @xmlDetectCharEncoding(i8* nonnull %4, i32 4) #9
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %62
  %73 = call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* nonnull %0, i32 %70) #9
  br label %74

74:                                               ; preds = %62, %72, %46, %42
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* nonnull %0)
  %75 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %76 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %75, i64 0, i32 4
  %77 = load i8*, i8** %76, align 8
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %74
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* nonnull %0, i32 4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8* null, i8* null)
  br label %81

81:                                               ; preds = %80, %74
  %82 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  %83 = icmp eq %struct._xmlSAXHandler* %82, null
  br i1 %83, label %95, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %82, i64 0, i32 12
  %86 = load void (i8*)*, void (i8*)** %85, align 8
  %87 = icmp eq void (i8*)* %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %94 = load i8*, i8** %93, align 8
  call void %86(i8* %94) #9
  br label %95

95:                                               ; preds = %88, %84, %81, %92
  %96 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %97 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %96, i64 0, i32 4
  %98 = load i8*, i8** %97, align 8
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 60
  br i1 %100, label %101, label %171

101:                                              ; preds = %95, %113
  %102 = phi i8* [ %116, %113 ], [ %98, %95 ]
  %103 = getelementptr inbounds i8, i8* %102, i64 1
  %104 = load i8, i8* %103, align 1
  switch i8 %104, label %171 [
    i8 33, label %105
    i8 63, label %113
  ]

105:                                              ; preds = %101
  %106 = getelementptr inbounds i8, i8* %102, i64 2
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 45
  br i1 %108, label %109, label %119

109:                                              ; preds = %105
  %110 = getelementptr inbounds i8, i8* %102, i64 3
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 45
  br i1 %112, label %113, label %119

113:                                              ; preds = %101, %109
  call fastcc void @htmlParseComment(%struct._xmlParserCtxt* %0)
  call fastcc void @htmlParsePI(%struct._xmlParserCtxt* %0)
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %114 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %115 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %114, i64 0, i32 4
  %116 = load i8*, i8** %115, align 8
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 60
  br i1 %118, label %101, label %171

119:                                              ; preds = %109, %105
  %120 = tail call i32** @__ctype_toupper_loc() #11
  %121 = load i32*, i32** %120, align 8
  %122 = getelementptr inbounds i8, i8* %102, i64 2
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = getelementptr inbounds i32, i32* %121, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 68
  br i1 %127, label %128, label %171

128:                                              ; preds = %119
  %129 = getelementptr inbounds i8, i8* %102, i64 3
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i64
  %132 = getelementptr inbounds i32, i32* %121, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 79
  br i1 %134, label %135, label %171

135:                                              ; preds = %128
  %136 = getelementptr inbounds i8, i8* %102, i64 4
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i64
  %139 = getelementptr inbounds i32, i32* %121, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 67
  br i1 %141, label %142, label %171

142:                                              ; preds = %135
  %143 = getelementptr inbounds i8, i8* %102, i64 5
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = getelementptr inbounds i32, i32* %121, i64 %145
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 84
  br i1 %148, label %149, label %171

149:                                              ; preds = %142
  %150 = getelementptr inbounds i8, i8* %102, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds i32, i32* %121, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 89
  br i1 %155, label %156, label %171

156:                                              ; preds = %149
  %157 = getelementptr inbounds i8, i8* %102, i64 7
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i64
  %160 = getelementptr inbounds i32, i32* %121, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 80
  br i1 %162, label %163, label %171

163:                                              ; preds = %156
  %164 = getelementptr inbounds i8, i8* %102, i64 8
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds i32, i32* %121, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 69
  br i1 %169, label %170, label %171

170:                                              ; preds = %163
  call fastcc void @htmlParseDocTypeDecl(%struct._xmlParserCtxt* %0)
  br label %171

171:                                              ; preds = %113, %101, %95, %170, %163, %156, %149, %142, %135, %128, %119
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %172 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %173 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %172, i64 0, i32 4
  %174 = load i8*, i8** %173, align 8
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 60
  br i1 %176, label %177, label %195

177:                                              ; preds = %171, %189
  %178 = phi i8* [ %192, %189 ], [ %174, %171 ]
  %179 = getelementptr inbounds i8, i8* %178, i64 1
  %180 = load i8, i8* %179, align 1
  switch i8 %180, label %195 [
    i8 33, label %181
    i8 63, label %189
  ]

181:                                              ; preds = %177
  %182 = getelementptr inbounds i8, i8* %178, i64 2
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i8 %183, 45
  br i1 %184, label %185, label %195

185:                                              ; preds = %181
  %186 = getelementptr inbounds i8, i8* %178, i64 3
  %187 = load i8, i8* %186, align 1
  %188 = icmp eq i8 %187, 45
  br i1 %188, label %189, label %195

189:                                              ; preds = %177, %185
  call fastcc void @htmlParseComment(%struct._xmlParserCtxt* %0)
  call fastcc void @htmlParsePI(%struct._xmlParserCtxt* %0)
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %190 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %191 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %190, i64 0, i32 4
  %192 = load i8*, i8** %191, align 8
  %193 = load i8, i8* %192, align 1
  %194 = icmp eq i8 %193, 60
  br i1 %194, label %177, label %195

195:                                              ; preds = %181, %185, %189, %177, %171
  call fastcc void @htmlParseContentInternal(%struct._xmlParserCtxt* %0)
  %196 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %197 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %196, i64 0, i32 4
  %198 = load i8*, i8** %197, align 8
  %199 = load i8, i8* %198, align 1
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %243

201:                                              ; preds = %195
  %202 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %203 = load i32, i32* %202, align 8
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %205, label %243

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %207 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %208 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %209 = bitcast i8** %207 to i64*
  br label %210

210:                                              ; preds = %241, %205
  %211 = phi i32 [ %203, %205 ], [ %212, %241 ]
  %212 = add nsw i32 %211, -1
  %213 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  %214 = icmp eq %struct._xmlSAXHandler* %213, null
  br i1 %214, label %222, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %213, i64 0, i32 15
  %217 = load void (i8*, i8*)*, void (i8*, i8*)** %216, align 8
  %218 = icmp eq void (i8*, i8*)* %217, null
  br i1 %218, label %222, label %219

219:                                              ; preds = %215
  %220 = load i8*, i8** %206, align 8
  %221 = load i8*, i8** %207, align 8
  call void %217(i8* %220, i8* %221) #9
  br label %222

222:                                              ; preds = %219, %215, %210
  %223 = load i32, i32* %202, align 8
  %224 = icmp slt i32 %223, 1
  br i1 %224, label %241, label %225

225:                                              ; preds = %222
  %226 = add nsw i32 %223, -1
  store i32 %226, i32* %202, align 8
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %228, label %235

228:                                              ; preds = %225
  %229 = load i8**, i8*** %208, align 8
  %230 = add nsw i32 %223, -2
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8*, i8** %229, i64 %231
  %233 = bitcast i8** %232 to i64*
  %234 = load i64, i64* %233, align 8
  store i64 %234, i64* %209, align 8
  br label %237

235:                                              ; preds = %225
  store i8* null, i8** %207, align 8
  %236 = load i8**, i8*** %208, align 8
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i8** [ %236, %235 ], [ %229, %228 ]
  %239 = sext i32 %226 to i64
  %240 = getelementptr inbounds i8*, i8** %238, i64 %239
  store i8* null, i8** %240, align 8
  br label %241

241:                                              ; preds = %237, %222
  %242 = icmp sgt i32 %212, 0
  br i1 %242, label %210, label %243

243:                                              ; preds = %241, %201, %195
  %244 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  %245 = icmp eq %struct._xmlSAXHandler* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %244, i64 0, i32 13
  %248 = load void (i8*)*, void (i8*)** %247, align 8
  %249 = icmp eq void (i8*)* %248, null
  br i1 %249, label %253, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %252 = load i8*, i8** %251, align 8
  call void %248(i8* %252) #9
  br label %253

253:                                              ; preds = %246, %243, %250
  %254 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %255 = load i32, i32* %254, align 4
  %256 = and i32 %255, 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %270

258:                                              ; preds = %253
  %259 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 2
  %260 = load %struct._xmlDoc*, %struct._xmlDoc** %259, align 8
  %261 = icmp eq %struct._xmlDoc* %260, null
  br i1 %261, label %270, label %262

262:                                              ; preds = %258
  %263 = call %struct._xmlDtd* @xmlGetIntSubset(%struct._xmlDoc* nonnull %260) #9
  %264 = icmp eq %struct._xmlDtd* %263, null
  br i1 %264, label %265, label %270

265:                                              ; preds = %262
  %266 = load %struct._xmlDoc*, %struct._xmlDoc** %259, align 8
  %267 = call %struct._xmlDtd* @xmlCreateIntSubset(%struct._xmlDoc* %266, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0)) #9
  %268 = load %struct._xmlDoc*, %struct._xmlDoc** %259, align 8
  %269 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %268, i64 0, i32 11
  store %struct._xmlDtd* %267, %struct._xmlDtd** %269, align 8
  br label %270

270:                                              ; preds = %258, %253, %262, %265
  %271 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  %272 = load i32, i32* %271, align 8
  %273 = icmp eq i32 %272, 0
  %274 = sext i1 %273 to i32
  br label %275

275:                                              ; preds = %270, %13
  %276 = phi i32 [ 1, %13 ], [ %274, %270 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9
  ret i32 %276
}

declare void @xmlInitParser() local_unnamed_addr #3

declare void @htmlDefaultSAXHandlerInit() local_unnamed_addr #3

declare i32 @xmlDetectCharEncoding(i8*, i32) local_unnamed_addr #3

declare i32 @xmlSwitchEncoding(%struct._xmlParserCtxt*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  br label %3

3:                                                ; preds = %28, %1
  %4 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %5 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %4, i64 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = load i8, i8* %6, align 1
  switch i8 %7, label %31 [
    i8 10, label %8
    i8 9, label %14
    i8 13, label %14
    i8 32, label %14
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %4, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %13 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %12, i64 0, i32 8
  store i32 1, i32* %13, align 8
  br label %18

14:                                               ; preds = %3, %3, %3
  %15 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %4, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  br label %18

18:                                               ; preds = %14, %8
  %19 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %20 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %19, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %20, align 8
  %23 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %24 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %23, i64 0, i32 4
  %25 = load i8*, i8** %24, align 8
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %18, %29
  br label %3

29:                                               ; preds = %18
  %30 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %23, i32 250) #9
  br label %28

31:                                               ; preds = %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParseComment(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  store i32 -1431655766, i32* %2, align 4
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9
  store i32 -1431655766, i32* %3, align 4
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  store i32 -1431655766, i32* %4, align 4
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  store i32 -1431655766, i32* %5, align 4
  %10 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %300

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %15 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %16 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %15, i64 0, i32 4
  %17 = load i8*, i8** %16, align 8
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 60
  br i1 %19, label %20, label %300

20:                                               ; preds = %13
  %21 = getelementptr inbounds i8, i8* %17, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 33
  br i1 %23, label %24, label %300

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %17, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 45
  br i1 %27, label %28, label %300

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %17, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 45
  br i1 %31, label %32, label %300

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %34 = load i32, i32* %33, align 8
  store i32 5, i32* %33, align 8
  %35 = bitcast i8** %16 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %15, i64 0, i32 3
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %36, %39
  %41 = icmp sgt i64 %40, 500
  %42 = inttoptr i64 %36 to i8*
  br i1 %41, label %43, label %53

43:                                               ; preds = %32
  %44 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %15, i64 0, i32 5
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %36
  %48 = icmp slt i64 %47, 500
  br i1 %48, label %49, label %53

49:                                               ; preds = %43
  tail call void @xmlParserInputShrink(%struct._xmlParserInput* %15) #9
  %50 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %51 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %50, i64 0, i32 4
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %49, %43, %32
  %54 = phi i8* [ %52, %49 ], [ %42, %43 ], [ %42, %32 ]
  %55 = phi %struct._xmlParserInput* [ %50, %49 ], [ %15, %43 ], [ %15, %32 ]
  %56 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %55, i64 0, i32 4
  %57 = getelementptr inbounds i8, i8* %54, i64 4
  store i8* %57, i8** %56, align 8
  %58 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %59 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %58, i64 0, i32 8
  %60 = load i32, i32* %59, align 8
  %61 = add nsw i32 %60, 4
  store i32 %61, i32* %59, align 8
  %62 = load i8* (i64)*, i8* (i64)** @xmlMallocAtomic, align 8
  %63 = tail call i8* %62(i64 100) #9
  %64 = icmp eq i8* %63, null
  br i1 %64, label %65, label %79

65:                                               ; preds = %53
  %66 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %66, label %76, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = load i32, i32* %33, align 8
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %78, label %74

74:                                               ; preds = %71, %67
  %75 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %75, align 8
  store i32 -1, i32* %33, align 8
  store i32 1, i32* %68, align 4
  br label %76

76:                                               ; preds = %74, %65
  %77 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %77, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([26 x i8], [26 x i8]* @.str.843, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([26 x i8], [26 x i8]* @.str.843, i64 0, i64 0)) #9
  br label %78

78:                                               ; preds = %71, %76
  store i32 %34, i32* %33, align 8
  br label %300

79:                                               ; preds = %53
  store i8 0, i8* %63, align 1
  %80 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %2)
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %297, label %82

82:                                               ; preds = %79
  %83 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %84 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %83, i64 0, i32 4
  %85 = load i8*, i8** %84, align 8
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 10
  br i1 %87, label %88, label %94

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %83, i64 0, i32 7
  %90 = load i32, i32* %89, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %89, align 4
  %92 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %93 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %92, i64 0, i32 8
  store i32 1, i32* %93, align 8
  br label %98

94:                                               ; preds = %82
  %95 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %83, i64 0, i32 8
  %96 = load i32, i32* %95, align 8
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %95, align 8
  br label %98

98:                                               ; preds = %94, %88
  store i32 0, i32* %10, align 4
  %99 = load i32, i32* %2, align 4
  %100 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %101 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %100, i64 0, i32 4
  %102 = load i8*, i8** %101, align 8
  %103 = sext i32 %99 to i64
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  store i8* %104, i8** %101, align 8
  %105 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %3)
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %297, label %107

107:                                              ; preds = %98
  %108 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %109 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %108, i64 0, i32 4
  %110 = load i8*, i8** %109, align 8
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 10
  br i1 %112, label %113, label %119

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %108, i64 0, i32 7
  %115 = load i32, i32* %114, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %118 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %117, i64 0, i32 8
  store i32 1, i32* %118, align 8
  br label %123

119:                                              ; preds = %107
  %120 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %108, i64 0, i32 8
  %121 = load i32, i32* %120, align 8
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %120, align 8
  br label %123

123:                                              ; preds = %119, %113
  store i32 0, i32* %10, align 4
  %124 = load i32, i32* %3, align 4
  %125 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %126 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %125, i64 0, i32 4
  %127 = load i8*, i8** %126, align 8
  %128 = sext i32 %124 to i64
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  store i8* %129, i8** %126, align 8
  %130 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %4)
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %273, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  br label %134

134:                                              ; preds = %132, %269
  %135 = phi i32 [ %124, %132 ], [ %165, %269 ]
  %136 = phi i32 [ %99, %132 ], [ %135, %269 ]
  %137 = phi i32 [ %130, %132 ], [ %208, %269 ]
  %138 = phi i32 [ %105, %132 ], [ %137, %269 ]
  %139 = phi i32 [ %80, %132 ], [ %138, %269 ]
  %140 = phi i32 [ 100, %132 ], [ %243, %269 ]
  %141 = phi i32 [ 0, %132 ], [ %270, %269 ]
  %142 = phi i8* [ %63, %132 ], [ %242, %269 ]
  %143 = icmp ne i32 %137, 62
  %144 = icmp ne i32 %138, 45
  %145 = or i1 %144, %143
  %146 = icmp ne i32 %139, 45
  %147 = or i1 %146, %145
  br i1 %147, label %148, label %278

148:                                              ; preds = %134
  %149 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %150 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %149, i64 0, i32 4
  %151 = load i8*, i8** %150, align 8
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 10
  br i1 %153, label %154, label %160

154:                                              ; preds = %148
  %155 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %149, i64 0, i32 7
  %156 = load i32, i32* %155, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %155, align 4
  %158 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %159 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %158, i64 0, i32 8
  store i32 1, i32* %159, align 8
  br label %164

160:                                              ; preds = %148
  %161 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %149, i64 0, i32 8
  %162 = load i32, i32* %161, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %161, align 8
  br label %164

164:                                              ; preds = %160, %154
  store i32 0, i32* %10, align 4
  %165 = load i32, i32* %4, align 4
  %166 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %167 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %166, i64 0, i32 4
  %168 = load i8*, i8** %167, align 8
  %169 = sext i32 %165 to i64
  %170 = getelementptr inbounds i8, i8* %168, i64 %169
  store i8* %170, i8** %167, align 8
  %171 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %5)
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %207

173:                                              ; preds = %164
  %174 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %175 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %174, i64 0, i32 4
  %176 = bitcast i8** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %174, i64 0, i32 3
  %179 = bitcast i8** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %177, %180
  %182 = icmp sgt i64 %181, 500
  br i1 %182, label %183, label %190

183:                                              ; preds = %173
  %184 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %174, i64 0, i32 5
  %185 = bitcast i8** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %186, %177
  %188 = icmp slt i64 %187, 500
  br i1 %188, label %189, label %190

189:                                              ; preds = %183
  tail call void @xmlParserInputShrink(%struct._xmlParserInput* %174) #9
  br label %190

190:                                              ; preds = %189, %183, %173
  %191 = load i32, i32* %133, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %190
  %194 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %195 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %194, i64 0, i32 5
  %196 = bitcast i8** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %194, i64 0, i32 4
  %199 = bitcast i8** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %197, %200
  %202 = icmp slt i64 %201, 250
  br i1 %202, label %203, label %205

203:                                              ; preds = %193
  %204 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %194, i32 250) #9
  br label %205

205:                                              ; preds = %203, %193, %190
  %206 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %5)
  br label %207

207:                                              ; preds = %205, %164
  %208 = phi i32 [ %206, %205 ], [ %171, %164 ]
  %209 = icmp eq i32 %139, 45
  %210 = icmp eq i32 %138, 45
  %211 = and i1 %209, %210
  %212 = icmp eq i32 %137, 33
  %213 = and i1 %211, %212
  %214 = icmp eq i32 %208, 62
  %215 = and i1 %213, %214
  br i1 %215, label %216, label %217

216:                                              ; preds = %207
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.858, i64 0, i64 0), i8* null, i8* null)
  br label %278

217:                                              ; preds = %207
  %218 = add nsw i32 %141, 5
  %219 = icmp slt i32 %218, %140
  br i1 %219, label %241, label %220

220:                                              ; preds = %217
  %221 = shl nsw i32 %140, 1
  %222 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %223 = sext i32 %221 to i64
  %224 = tail call i8* %222(i8* %142, i64 %223) #9
  %225 = icmp eq i8* %224, null
  br i1 %225, label %226, label %241

226:                                              ; preds = %220
  %227 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %227(i8* %142) #9
  %228 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %228, label %238, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %229
  %234 = load i32, i32* %33, align 8
  %235 = icmp eq i32 %234, -1
  br i1 %235, label %240, label %236

236:                                              ; preds = %233, %229
  %237 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %237, align 8
  store i32 -1, i32* %33, align 8
  store i32 1, i32* %230, align 4
  br label %238

238:                                              ; preds = %236, %226
  %239 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %239, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.859, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.859, i64 0, i64 0)) #9
  br label %240

240:                                              ; preds = %238, %233
  store i32 %34, i32* %33, align 8
  br label %300

241:                                              ; preds = %220, %217
  %242 = phi i8* [ %142, %217 ], [ %224, %220 ]
  %243 = phi i32 [ %140, %217 ], [ %221, %220 ]
  %244 = icmp slt i32 %139, 256
  br i1 %244, label %245, label %248

245:                                              ; preds = %241
  %246 = icmp sgt i32 %139, 31
  br i1 %246, label %256, label %247

247:                                              ; preds = %245
  switch i32 %139, label %268 [
    i32 13, label %256
    i32 10, label %256
    i32 9, label %256
  ]

248:                                              ; preds = %241
  %249 = icmp slt i32 %139, 55296
  %250 = add nsw i32 %139, -57344
  %251 = icmp ult i32 %250, 8190
  %252 = or i1 %249, %251
  %253 = add nsw i32 %139, -65536
  %254 = icmp ult i32 %253, 1048576
  %255 = or i1 %254, %252
  br i1 %255, label %256, label %268

256:                                              ; preds = %247, %247, %247, %245, %248
  %257 = icmp eq i32 %136, 1
  br i1 %257, label %258, label %263

258:                                              ; preds = %256
  %259 = trunc i32 %139 to i8
  %260 = add nsw i32 %141, 1
  %261 = sext i32 %141 to i64
  %262 = getelementptr inbounds i8, i8* %242, i64 %261
  store i8 %259, i8* %262, align 1
  br label %269

263:                                              ; preds = %256
  %264 = sext i32 %141 to i64
  %265 = getelementptr inbounds i8, i8* %242, i64 %264
  %266 = tail call i32 @xmlCopyChar(i32 %136, i8* %265, i32 %139) #9
  %267 = add nsw i32 %266, %141
  br label %269

268:                                              ; preds = %248, %247
  tail call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.860, i64 0, i64 0), i32 %139)
  br label %269

269:                                              ; preds = %258, %263, %268
  %270 = phi i32 [ %260, %258 ], [ %267, %263 ], [ %141, %268 ]
  store i32 %135, i32* %2, align 4
  store i32 %165, i32* %3, align 4
  %271 = load i32, i32* %5, align 4
  store i32 %271, i32* %4, align 4
  %272 = icmp eq i32 %208, 0
  br i1 %272, label %273, label %134

273:                                              ; preds = %269, %123
  %274 = phi i8* [ %63, %123 ], [ %242, %269 ]
  %275 = phi i32 [ 0, %123 ], [ %270, %269 ]
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds i8, i8* %274, i64 %276
  store i8 0, i8* %277, align 1
  br label %297

278:                                              ; preds = %134, %216
  %279 = sext i32 %141 to i64
  %280 = getelementptr inbounds i8, i8* %142, i64 %279
  store i8 0, i8* %280, align 1
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %281 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %282 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %281, align 8
  %283 = icmp eq %struct._xmlSAXHandler* %282, null
  br i1 %283, label %295, label %284

284:                                              ; preds = %278
  %285 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %282, i64 0, i32 20
  %286 = load void (i8*, i8*)*, void (i8*, i8*)** %285, align 8
  %287 = icmp eq void (i8*, i8*)* %286, null
  br i1 %287, label %295, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %288
  %293 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %294 = load i8*, i8** %293, align 8
  tail call void %286(i8* %294, i8* %142) #9
  br label %295

295:                                              ; preds = %288, %284, %278, %292
  %296 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %296(i8* %142) #9
  store i32 %34, i32* %33, align 8
  br label %300

297:                                              ; preds = %273, %98, %79
  %298 = phi i8* [ %63, %79 ], [ %63, %98 ], [ %274, %273 ]
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.861, i64 0, i64 0), i8* %298, i8* null)
  %299 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %299(i8* %298) #9
  br label %300

300:                                              ; preds = %13, %240, %20, %24, %28, %1, %297, %295, %78
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParsePI(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #9
  store i32 -1431655766, i32* %2, align 4
  %4 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %275

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %9 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %10 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %9, i64 0, i32 4
  %11 = load i8*, i8** %10, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 60
  br i1 %13, label %14, label %275

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %11, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 63
  br i1 %17, label %18, label %275

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %20 = load i32, i32* %19, align 8
  store i32 2, i32* %19, align 8
  %21 = load i8*, i8** %10, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 2
  store i8* %22, i8** %10, align 8
  %23 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %24 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %23, i64 0, i32 8
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 2
  store i32 %26, i32* %24, align 8
  %27 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %28 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %27, i64 0, i32 4
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %27, i64 0, i32 3
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 500
  br i1 %35, label %36, label %43

36:                                               ; preds = %18
  %37 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %27, i64 0, i32 5
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %30
  %41 = icmp slt i64 %40, 500
  br i1 %41, label %42, label %43

42:                                               ; preds = %36
  tail call void @xmlParserInputShrink(%struct._xmlParserInput* %27) #9
  br label %43

43:                                               ; preds = %42, %36, %18
  %44 = tail call fastcc i8* @htmlParseName(%struct._xmlParserCtxt* %0)
  %45 = icmp eq i8* %44, null
  br i1 %45, label %273, label %46

46:                                               ; preds = %43
  %47 = load i32, i32* %4, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %76

49:                                               ; preds = %46
  %50 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %51 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %50, i64 0, i32 4
  %52 = load i8*, i8** %51, align 8
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 62
  br i1 %54, label %55, label %76

55:                                               ; preds = %49
  %56 = getelementptr inbounds i8, i8* %52, i64 1
  store i8* %56, i8** %51, align 8
  %57 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %58 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %57, i64 0, i32 8
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 8
  %61 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %62 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %61, align 8
  %63 = icmp eq %struct._xmlSAXHandler* %62, null
  br i1 %63, label %75, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %62, i64 0, i32 19
  %70 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %69, align 8
  %71 = icmp eq void (i8*, i8*, i8*)* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %74 = load i8*, i8** %73, align 8
  tail call void %70(i8* %74, i8* nonnull %44, i8* null) #9
  br label %75

75:                                               ; preds = %68, %64, %55, %72
  store i32 %20, i32* %19, align 8
  br label %275

76:                                               ; preds = %46, %49
  %77 = load i8* (i64)*, i8* (i64)** @xmlMallocAtomic, align 8
  %78 = tail call i8* %77(i64 100) #9
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %94

80:                                               ; preds = %76
  %81 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %81, label %91, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = load i32, i32* %19, align 8
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %93, label %89

89:                                               ; preds = %86, %82
  %90 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %90, align 8
  store i32 -1, i32* %19, align 8
  store i32 1, i32* %83, align 4
  br label %91

91:                                               ; preds = %89, %80
  %92 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %92, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %93

93:                                               ; preds = %86, %91
  store i32 %20, i32* %19, align 8
  br label %275

94:                                               ; preds = %76
  %95 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %96 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %95, i64 0, i32 4
  %97 = load i8*, i8** %96, align 8
  %98 = load i8, i8* %97, align 1
  switch i8 %98, label %99 [
    i8 32, label %100
    i8 13, label %100
    i8 10, label %100
    i8 9, label %100
  ]

99:                                               ; preds = %94
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 65, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.862, i64 0, i64 0), i8* nonnull %44, i8* null)
  br label %100

100:                                              ; preds = %94, %94, %94, %94, %99
  tail call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %101 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %2)
  %102 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  br label %103

103:                                              ; preds = %241, %100
  %104 = phi i8* [ %78, %100 ], [ %134, %241 ]
  %105 = phi i32 [ 0, %100 ], [ %182, %241 ]
  %106 = phi i32 [ 100, %100 ], [ %135, %241 ]
  %107 = phi i32 [ %101, %100 ], [ %242, %241 ]
  %108 = phi i32 [ 0, %100 ], [ %154, %241 ]
  switch i32 %107, label %109 [
    i32 62, label %243
    i32 0, label %243
  ]

109:                                              ; preds = %103
  %110 = add nsw i32 %105, 5
  %111 = icmp slt i32 %110, %106
  br i1 %111, label %133, label %112

112:                                              ; preds = %109
  %113 = shl nsw i32 %106, 1
  %114 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %115 = sext i32 %113 to i64
  %116 = tail call i8* %114(i8* %104, i64 %115) #9
  %117 = icmp eq i8* %116, null
  br i1 %117, label %118, label %133

118:                                              ; preds = %112
  %119 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %119, label %129, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %120
  %125 = load i32, i32* %19, align 8
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %131, label %127

127:                                              ; preds = %124, %120
  %128 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %128, align 8
  store i32 -1, i32* %19, align 8
  store i32 1, i32* %121, align 4
  br label %129

129:                                              ; preds = %127, %118
  %130 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %130, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %131

131:                                              ; preds = %129, %124
  %132 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %132(i8* %104) #9
  store i32 %20, i32* %19, align 8
  br label %275

133:                                              ; preds = %112, %109
  %134 = phi i8* [ %104, %109 ], [ %116, %112 ]
  %135 = phi i32 [ %106, %109 ], [ %113, %112 ]
  %136 = add nsw i32 %108, 1
  %137 = icmp sgt i32 %108, 49
  br i1 %137, label %138, label %153

138:                                              ; preds = %133
  %139 = load i32, i32* %102, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %138
  %142 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %143 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %142, i64 0, i32 5
  %144 = bitcast i8** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %142, i64 0, i32 4
  %147 = bitcast i8** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 %145, %148
  %150 = icmp slt i64 %149, 250
  br i1 %150, label %151, label %153

151:                                              ; preds = %141
  %152 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %142, i32 250) #9
  br label %153

153:                                              ; preds = %138, %141, %151, %133
  %154 = phi i32 [ %136, %133 ], [ 0, %151 ], [ 0, %141 ], [ 0, %138 ]
  %155 = icmp slt i32 %107, 256
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  %157 = icmp sgt i32 %107, 31
  br i1 %157, label %167, label %158

158:                                              ; preds = %156
  switch i32 %107, label %180 [
    i32 13, label %167
    i32 10, label %167
    i32 9, label %167
  ]

159:                                              ; preds = %153
  %160 = icmp slt i32 %107, 55296
  %161 = add nsw i32 %107, -57344
  %162 = icmp ult i32 %161, 8190
  %163 = or i1 %160, %162
  %164 = add nsw i32 %107, -65536
  %165 = icmp ult i32 %164, 1048576
  %166 = or i1 %165, %163
  br i1 %166, label %167, label %180

167:                                              ; preds = %158, %158, %158, %156, %159
  %168 = load i32, i32* %2, align 4
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %175

170:                                              ; preds = %167
  %171 = trunc i32 %107 to i8
  %172 = add nsw i32 %105, 1
  %173 = sext i32 %105 to i64
  %174 = getelementptr inbounds i8, i8* %134, i64 %173
  store i8 %171, i8* %174, align 1
  br label %181

175:                                              ; preds = %167
  %176 = sext i32 %105 to i64
  %177 = getelementptr inbounds i8, i8* %134, i64 %176
  %178 = tail call i32 @xmlCopyChar(i32 %168, i8* %177, i32 %107) #9
  %179 = add nsw i32 %178, %105
  br label %181

180:                                              ; preds = %159, %158
  tail call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.863, i64 0, i64 0), i32 %107)
  br label %181

181:                                              ; preds = %180, %175, %170
  %182 = phi i32 [ %172, %170 ], [ %179, %175 ], [ %105, %180 ]
  %183 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %184 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %183, i64 0, i32 4
  %185 = load i8*, i8** %184, align 8
  %186 = load i8, i8* %185, align 1
  %187 = icmp eq i8 %186, 10
  br i1 %187, label %188, label %194

188:                                              ; preds = %181
  %189 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %183, i64 0, i32 7
  %190 = load i32, i32* %189, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %189, align 4
  %192 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %193 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %192, i64 0, i32 8
  store i32 1, i32* %193, align 8
  br label %198

194:                                              ; preds = %181
  %195 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %183, i64 0, i32 8
  %196 = load i32, i32* %195, align 8
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %195, align 8
  br label %198

198:                                              ; preds = %194, %188
  store i32 0, i32* %4, align 4
  %199 = load i32, i32* %2, align 4
  %200 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %201 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %200, i64 0, i32 4
  %202 = load i8*, i8** %201, align 8
  %203 = sext i32 %199 to i64
  %204 = getelementptr inbounds i8, i8* %202, i64 %203
  store i8* %204, i8** %201, align 8
  %205 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %2)
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %241

207:                                              ; preds = %198
  %208 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %209 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %208, i64 0, i32 4
  %210 = bitcast i8** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %208, i64 0, i32 3
  %213 = bitcast i8** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = sub i64 %211, %214
  %216 = icmp sgt i64 %215, 500
  br i1 %216, label %217, label %224

217:                                              ; preds = %207
  %218 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %208, i64 0, i32 5
  %219 = bitcast i8** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 %220, %211
  %222 = icmp slt i64 %221, 500
  br i1 %222, label %223, label %224

223:                                              ; preds = %217
  tail call void @xmlParserInputShrink(%struct._xmlParserInput* %208) #9
  br label %224

224:                                              ; preds = %223, %217, %207
  %225 = load i32, i32* %102, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %239

227:                                              ; preds = %224
  %228 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %229 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %228, i64 0, i32 5
  %230 = bitcast i8** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %228, i64 0, i32 4
  %233 = bitcast i8** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %231, %234
  %236 = icmp slt i64 %235, 250
  br i1 %236, label %237, label %239

237:                                              ; preds = %227
  %238 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %228, i32 250) #9
  br label %239

239:                                              ; preds = %237, %227, %224
  %240 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %2)
  br label %241

241:                                              ; preds = %239, %198
  %242 = phi i32 [ %240, %239 ], [ %205, %198 ]
  br label %103

243:                                              ; preds = %103, %103
  %244 = icmp eq i32 %107, 62
  %245 = sext i32 %105 to i64
  %246 = getelementptr inbounds i8, i8* %104, i64 %245
  store i8 0, i8* %246, align 1
  br i1 %244, label %248, label %247

247:                                              ; preds = %243
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 47, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.864, i64 0, i64 0), i8* nonnull %44, i8* null)
  br label %271

248:                                              ; preds = %243
  %249 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %250 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %249, i64 0, i32 4
  %251 = load i8*, i8** %250, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 1
  store i8* %252, i8** %250, align 8
  %253 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %254 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %253, i64 0, i32 8
  %255 = load i32, i32* %254, align 8
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %254, align 8
  %257 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %258 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %257, align 8
  %259 = icmp eq %struct._xmlSAXHandler* %258, null
  br i1 %259, label %271, label %260

260:                                              ; preds = %248
  %261 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %271

264:                                              ; preds = %260
  %265 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %258, i64 0, i32 19
  %266 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %265, align 8
  %267 = icmp eq void (i8*, i8*, i8*)* %266, null
  br i1 %267, label %271, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %270 = load i8*, i8** %269, align 8
  tail call void %266(i8* %270, i8* nonnull %44, i8* %104) #9
  br label %271

271:                                              ; preds = %264, %260, %248, %268, %247
  %272 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %272(i8* %104) #9
  br label %274

273:                                              ; preds = %43
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 46, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.865, i64 0, i64 0), i8* null, i8* null)
  br label %274

274:                                              ; preds = %273, %271
  store i32 %20, i32* %19, align 8
  br label %275

275:                                              ; preds = %1, %131, %7, %14, %274, %93, %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind readnone
declare i32** @__ctype_toupper_loc() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParseDocTypeDecl(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %3 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %4 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %3, i64 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 9
  store i8* %6, i8** %4, align 8
  %7 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %8 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %7, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 9
  store i32 %10, i32* %8, align 8
  tail call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %11 = tail call fastcc i8* @htmlParseName(%struct._xmlParserCtxt* %0)
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %1
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 68, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.866, i64 0, i64 0), i8* null, i8* null)
  br label %14

14:                                               ; preds = %13, %1
  tail call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %15 = tail call i32** @__ctype_toupper_loc() #11
  %16 = load i32*, i32** %15, align 8
  %17 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %18 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %17, i64 0, i32 4
  %19 = load i8*, i8** %18, align 8
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = getelementptr inbounds i32, i32* %16, i64 %21
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %187 [
    i32 83, label %24
    i32 80, label %74
  ]

24:                                               ; preds = %14
  %25 = getelementptr inbounds i8, i8* %19, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds i32, i32* %16, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 89
  br i1 %30, label %31, label %187

31:                                               ; preds = %24
  %32 = getelementptr inbounds i8, i8* %19, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds i32, i32* %16, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 83
  br i1 %37, label %38, label %187

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %19, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds i32, i32* %16, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 84
  br i1 %44, label %45, label %187

45:                                               ; preds = %38
  %46 = getelementptr inbounds i8, i8* %19, i64 4
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds i32, i32* %16, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 69
  br i1 %51, label %52, label %187

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %19, i64 5
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds i32, i32* %16, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 77
  br i1 %58, label %59, label %187

59:                                               ; preds = %52
  %60 = getelementptr inbounds i8, i8* %19, i64 6
  store i8* %60, i8** %18, align 8
  %61 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %62 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %61, i64 0, i32 8
  %63 = load i32, i32* %62, align 8
  %64 = add nsw i32 %63, 6
  store i32 %64, i32* %62, align 8
  %65 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %66 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %65, i64 0, i32 4
  %67 = load i8*, i8** %66, align 8
  %68 = load i8, i8* %67, align 1
  switch i8 %68, label %69 [
    i8 32, label %70
    i8 13, label %70
    i8 10, label %70
    i8 9, label %70
  ]

69:                                               ; preds = %59
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 65, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.868, i64 0, i64 0), i8* null, i8* null) #9
  br label %70

70:                                               ; preds = %69, %59, %59, %59, %59
  tail call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0) #9
  %71 = tail call fastcc i8* @htmlParseSystemLiteral(%struct._xmlParserCtxt* %0) #9
  %72 = icmp eq i8* %71, null
  br i1 %72, label %73, label %187

73:                                               ; preds = %70
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 70, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.869, i64 0, i64 0), i8* null, i8* null) #9
  br label %187

74:                                               ; preds = %14
  %75 = getelementptr inbounds i8, i8* %19, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds i32, i32* %16, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 85
  br i1 %80, label %81, label %187

81:                                               ; preds = %74
  %82 = getelementptr inbounds i8, i8* %19, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds i32, i32* %16, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 66
  br i1 %87, label %88, label %187

88:                                               ; preds = %81
  %89 = getelementptr inbounds i8, i8* %19, i64 3
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds i32, i32* %16, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 76
  br i1 %94, label %95, label %187

95:                                               ; preds = %88
  %96 = getelementptr inbounds i8, i8* %19, i64 4
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds i32, i32* %16, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 73
  br i1 %101, label %102, label %187

102:                                              ; preds = %95
  %103 = getelementptr inbounds i8, i8* %19, i64 5
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds i32, i32* %16, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 67
  br i1 %108, label %109, label %187

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %19, i64 6
  store i8* %110, i8** %18, align 8
  %111 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %112 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %111, i64 0, i32 8
  %113 = load i32, i32* %112, align 8
  %114 = add nsw i32 %113, 6
  store i32 %114, i32* %112, align 8
  %115 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %116 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %115, i64 0, i32 4
  %117 = load i8*, i8** %116, align 8
  %118 = load i8, i8* %117, align 1
  switch i8 %118, label %119 [
    i8 32, label %120
    i8 13, label %120
    i8 10, label %120
    i8 9, label %120
  ]

119:                                              ; preds = %109
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 65, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.870, i64 0, i64 0), i8* null, i8* null) #9
  br label %120

120:                                              ; preds = %119, %109, %109, %109, %109
  tail call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0) #9
  %121 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %122 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %121, i64 0, i32 4
  %123 = load i8*, i8** %122, align 8
  %124 = load i8, i8* %123, align 1
  switch i8 %124, label %125 [
    i8 34, label %126
    i8 39, label %126
  ]

125:                                              ; preds = %120
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 43, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.875, i64 0, i64 0), i8* null, i8* null) #9
  br label %178

126:                                              ; preds = %120, %120
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %127 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %128 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %127, i64 0, i32 4
  %129 = load i8*, i8** %128, align 8
  %130 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %127, i64 0, i32 3
  %131 = load i8*, i8** %130, align 8
  %132 = icmp ult i8* %129, %131
  br i1 %132, label %178, label %133

133:                                              ; preds = %126
  %134 = ptrtoint i8* %129 to i64
  %135 = ptrtoint i8* %131 to i64
  %136 = sub i64 %134, %135
  %137 = load i8, i8* %129, align 1
  %138 = icmp ne i8 %137, 0
  %139 = icmp ne i8 %137, %124
  %140 = and i1 %139, %138
  br i1 %140, label %141, label %163

141:                                              ; preds = %133, %151
  %142 = phi i8 [ %157, %151 ], [ %137, %133 ]
  %143 = phi i32 [ %152, %151 ], [ 0, %133 ]
  %144 = phi i64 [ %153, %151 ], [ 0, %133 ]
  %145 = zext i8 %142 to i64
  %146 = getelementptr inbounds [256 x i8], [256 x i8]* @xmlIsPubidChar_tab, i64 0, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %141
  %150 = zext i8 %142 to i32
  tail call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.876, i64 0, i64 0), i32 %150) #9
  br label %151

151:                                              ; preds = %149, %141
  %152 = phi i32 [ %143, %141 ], [ 1, %149 ]
  %153 = add i64 %144, 1
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %154 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %155 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %154, i64 0, i32 4
  %156 = load i8*, i8** %155, align 8
  %157 = load i8, i8* %156, align 1
  %158 = icmp ne i8 %157, 0
  %159 = icmp ne i8 %157, %124
  %160 = and i1 %159, %158
  br i1 %160, label %141, label %161

161:                                              ; preds = %151
  %162 = trunc i64 %153 to i32
  br label %163

163:                                              ; preds = %161, %133
  %164 = phi i32 [ 0, %133 ], [ %162, %161 ]
  %165 = phi i32 [ 0, %133 ], [ %152, %161 ]
  %166 = phi i8 [ %137, %133 ], [ %157, %161 ]
  %167 = icmp eq i8 %166, 34
  br i1 %167, label %169, label %168

168:                                              ; preds = %163
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 44, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.877, i64 0, i64 0), i8* null, i8* null) #9
  br label %178

169:                                              ; preds = %163
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %170 = icmp eq i32 %165, 0
  br i1 %170, label %171, label %178

171:                                              ; preds = %169
  %172 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %173 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %172, i64 0, i32 3
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 %136
  %176 = tail call i8* @xmlStrndup(i8* %175, i32 %164) #9
  %177 = icmp eq i8* %176, null
  br i1 %177, label %178, label %179

178:                                              ; preds = %125, %126, %168, %169, %171
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 71, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.871, i64 0, i64 0), i8* null, i8* null) #9
  br label %179

179:                                              ; preds = %178, %171
  %180 = phi i8* [ null, %178 ], [ %176, %171 ]
  tail call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0) #9
  %181 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %182 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %181, i64 0, i32 4
  %183 = load i8*, i8** %182, align 8
  %184 = load i8, i8* %183, align 1
  switch i8 %184, label %187 [
    i8 34, label %185
    i8 39, label %185
  ]

185:                                              ; preds = %179, %179
  %186 = tail call fastcc i8* @htmlParseSystemLiteral(%struct._xmlParserCtxt* %0) #9
  br label %187

187:                                              ; preds = %14, %24, %31, %38, %45, %52, %70, %73, %74, %81, %88, %95, %102, %179, %185
  %188 = phi i8* [ null, %14 ], [ %180, %179 ], [ %180, %185 ], [ null, %102 ], [ null, %95 ], [ null, %88 ], [ null, %81 ], [ null, %74 ], [ null, %73 ], [ null, %70 ], [ null, %52 ], [ null, %45 ], [ null, %38 ], [ null, %31 ], [ null, %24 ]
  %189 = phi i8* [ null, %14 ], [ null, %179 ], [ %186, %185 ], [ null, %102 ], [ null, %95 ], [ null, %88 ], [ null, %81 ], [ null, %74 ], [ null, %73 ], [ %71, %70 ], [ null, %52 ], [ null, %45 ], [ null, %38 ], [ null, %31 ], [ null, %24 ]
  tail call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %190 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %191 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %190, i64 0, i32 4
  %192 = load i8*, i8** %191, align 8
  %193 = load i8, i8* %192, align 1
  %194 = icmp eq i8 %193, 62
  br i1 %194, label %202, label %195

195:                                              ; preds = %187
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 61, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.867, i64 0, i64 0), i8* null, i8* null)
  br label %196

196:                                              ; preds = %201, %195
  %197 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %198 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %197, i64 0, i32 4
  %199 = load i8*, i8** %198, align 8
  %200 = load i8, i8* %199, align 1
  switch i8 %200, label %201 [
    i8 62, label %202
    i8 0, label %203
  ]

201:                                              ; preds = %196
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %196

202:                                              ; preds = %196, %187
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %203

203:                                              ; preds = %196, %202
  %204 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %205 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %204, align 8
  %206 = icmp eq %struct._xmlSAXHandler* %205, null
  br i1 %206, label %218, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %205, i64 0, i32 0
  %209 = load void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)** %208, align 8
  %210 = icmp eq void (i8*, i8*, i8*, i8*)* %209, null
  br i1 %210, label %218, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %211
  %216 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %217 = load i8*, i8** %216, align 8
  tail call void %209(i8* %217, i8* %11, i8* %188, i8* %189) #9
  br label %218

218:                                              ; preds = %211, %207, %203, %215
  %219 = icmp eq i8* %189, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %218
  %221 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %221(i8* nonnull %189) #9
  br label %222

222:                                              ; preds = %218, %220
  %223 = icmp eq i8* %188, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %222
  %225 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %225(i8* nonnull %188) #9
  br label %226

226:                                              ; preds = %222, %224
  ret void
}

declare %struct._xmlDtd* @xmlGetIntSubset(%struct._xmlDoc*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlFreeParserCtxt(%struct._xmlParserCtxt*) local_unnamed_addr #1 {
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %0) #9
  ret void
}

declare void @xmlFreeParserCtxt(%struct._xmlParserCtxt*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserCtxt* @htmlNewParserCtxt() local_unnamed_addr #1 {
  %1 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %2 = tail call i8* %1(i64 752) #9
  %3 = bitcast i8* %2 to %struct._xmlParserCtxt*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %100

6:                                                ; preds = %0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 752, i1 false)
  %7 = tail call %struct._xmlDict* @xmlDictCreate() #9
  %8 = getelementptr inbounds i8, i8* %2, i64 456
  %9 = bitcast i8* %8 to %struct._xmlDict**
  store %struct._xmlDict* %7, %struct._xmlDict** %9, align 8
  %10 = icmp eq %struct._xmlDict* %7, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0)) #9
  br label %99

12:                                               ; preds = %6
  %13 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %14 = tail call i8* %13(i64 256) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0)) #9
  br label %99

17:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 256, i1 false) #9
  %18 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %19 = tail call i8* %18(i64 40) #9
  %20 = getelementptr inbounds i8, i8* %2, i64 72
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0)) #9
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #9
  br label %99

25:                                               ; preds = %17
  %26 = getelementptr inbounds i8, i8* %2, i64 64
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %2, i64 68
  %29 = bitcast i8* %28 to i32*
  store i32 5, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %2, i64 56
  %31 = bitcast i8* %30 to %struct._xmlParserInput**
  store %struct._xmlParserInput* null, %struct._xmlParserInput** %31, align 8
  %32 = getelementptr inbounds i8, i8* %2, i64 32
  %33 = getelementptr inbounds i8, i8* %2, i64 48
  %34 = bitcast i8* %33 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #9
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %2, i64 272
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 8
  %37 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %38 = tail call i8* %37(i64 80) #9
  %39 = getelementptr inbounds i8, i8* %2, i64 96
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = icmp eq i8* %38, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %25
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0)) #9
  %43 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #9
  br label %99

44:                                               ; preds = %25
  %45 = getelementptr inbounds i8, i8* %2, i64 88
  %46 = bitcast i8* %45 to i32*
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %2, i64 92
  %48 = bitcast i8* %47 to i32*
  store i32 10, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %2, i64 80
  %50 = bitcast i8* %49 to %struct._xmlNode**
  store %struct._xmlNode* null, %struct._xmlNode** %50, align 8
  %51 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %52 = tail call i8* %51(i64 80) #9
  %53 = getelementptr inbounds i8, i8* %2, i64 304
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8
  %55 = icmp eq i8* %52, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* null, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.878, i64 0, i64 0)) #9
  %57 = getelementptr inbounds i8, i8* %2, i64 288
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #9
  br label %99

58:                                               ; preds = %44
  %59 = getelementptr inbounds i8, i8* %2, i64 296
  %60 = bitcast i8* %59 to i32*
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds i8, i8* %2, i64 300
  %62 = bitcast i8* %61 to i32*
  store i32 10, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %2, i64 288
  %64 = bitcast i8* %63 to i8**
  store i8* null, i8** %64, align 8
  %65 = getelementptr inbounds i8, i8* %2, i64 720
  %66 = bitcast i8* %2 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #9
  store i8* %14, i8** %66, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (%struct._xmlSAXHandlerV1* @htmlDefaultSAXHandler to i8*), i64 224, i1 false) #9
  %67 = getelementptr inbounds i8, i8* %2, i64 8
  %68 = bitcast i8* %67 to i8**
  store i8* %2, i8** %68, align 8
  %69 = getelementptr inbounds i8, i8* %2, i64 16
  %70 = bitcast i8* %69 to %struct._xmlDoc**
  store %struct._xmlDoc* null, %struct._xmlDoc** %70, align 8
  %71 = getelementptr inbounds i8, i8* %2, i64 24
  %72 = bitcast i8* %71 to i32*
  store i32 1, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %2, i64 28
  %74 = bitcast i8* %73 to i32*
  store i32 0, i32* %74, align 4
  %75 = load i32, i32* @xmlLineNumbersDefaultValue, align 4
  %76 = getelementptr inbounds i8, i8* %2, i64 436
  %77 = bitcast i8* %76 to i32*
  store i32 %75, i32* %77, align 4
  %78 = load i32, i32* @xmlKeepBlanksDefaultValue, align 4
  %79 = getelementptr inbounds i8, i8* %2, i64 328
  %80 = bitcast i8* %79 to i32*
  store i32 %78, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %2, i64 52
  %82 = bitcast i8* %81 to i32*
  store i32 1, i32* %82, align 4
  %83 = getelementptr inbounds i8, i8* %2, i64 160
  %84 = getelementptr inbounds i8, i8* %2, i64 208
  %85 = bitcast i8* %84 to i32*
  store i32 -1412623820, i32* %85, align 8
  %86 = bitcast i8* %83 to i8**
  store i8* %2, i8** %86, align 8
  %87 = getelementptr inbounds i8, i8* %2, i64 168
  %88 = bitcast i8* %87 to <2 x void (i8*, i8*, ...)*>*
  store <2 x void (i8*, i8*, ...)*> <void (i8*, i8*, ...)* @xmlParserValidityError, void (i8*, i8*, ...)* @xmlParserValidityWarning>, <2 x void (i8*, i8*, ...)*>* %88, align 8
  %89 = getelementptr inbounds i8, i8* %2, i64 104
  %90 = bitcast i8* %89 to i32*
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %2, i64 156
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %2, i64 320
  %94 = bitcast i8* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %2, i64 440
  %96 = bitcast i8* %95 to i8**
  store i8* null, i8** %96, align 8
  %97 = getelementptr inbounds i8, i8* %2, i64 112
  %98 = bitcast i8* %97 to %struct._xmlParserNodeInfoSeq*
  tail call void @xmlInitNodeInfoSeq(%struct._xmlParserNodeInfoSeq* %98) #9
  br label %100

99:                                               ; preds = %11, %16, %23, %42, %56
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %3) #9
  br label %100

100:                                              ; preds = %58, %99, %5
  %101 = phi %struct._xmlParserCtxt* [ null, %5 ], [ null, %99 ], [ %3, %58 ]
  ret %struct._xmlParserCtxt* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserCtxt* @htmlCreateMemoryParserCtxt(i8*, i32) local_unnamed_addr #1 {
  %3 = icmp eq i8* %0, null
  %4 = icmp slt i32 %1, 1
  %5 = or i1 %3, %4
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = tail call %struct._xmlParserCtxt* @htmlNewParserCtxt()
  %8 = icmp eq %struct._xmlParserCtxt* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %6
  %10 = tail call %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateMem(i8* nonnull %0, i32 %1, i32 0) #9
  %11 = icmp eq %struct._xmlParserInputBuffer* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %9
  %13 = tail call %struct._xmlParserInput* @xmlNewInputStream(%struct._xmlParserCtxt* nonnull %7) #9
  %14 = icmp eq %struct._xmlParserInput* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %7) #9
  br label %23

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 0
  store %struct._xmlParserInputBuffer* %10, %struct._xmlParserInputBuffer** %18, align 8
  %19 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %10, i64 0, i32 4
  %20 = load %struct._xmlBuf*, %struct._xmlBuf** %19, align 8
  %21 = tail call i32 @xmlBufResetInput(%struct._xmlBuf* %20, %struct._xmlParserInput* nonnull %13) #9
  %22 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %7, %struct._xmlParserInput* nonnull %13) #9
  br label %23

23:                                               ; preds = %9, %6, %2, %16, %15
  %24 = phi %struct._xmlParserCtxt* [ null, %15 ], [ %7, %16 ], [ null, %2 ], [ null, %6 ], [ null, %9 ]
  ret %struct._xmlParserCtxt* %24
}

declare %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateMem(i8*, i32, i32) local_unnamed_addr #3

declare %struct._xmlParserInput* @xmlNewInputStream(%struct._xmlParserCtxt*) local_unnamed_addr #3

declare i32 @xmlBufResetInput(%struct._xmlBuf*, %struct._xmlParserInput*) local_unnamed_addr #3

declare i32 @inputPush(%struct._xmlParserCtxt*, %struct._xmlParserInput*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlParseChunk(%struct._xmlParserCtxt*, i8*, i32, i32) local_unnamed_addr #1 {
  %5 = alloca i16, align 2
  %6 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %9 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %10 = icmp eq %struct._xmlParserInput* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %4
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0), i8* null, i8* null)
  br label %1344

12:                                               ; preds = %7
  %13 = icmp sgt i32 %2, 0
  %14 = icmp ne i8* %1, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %49

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %9, i64 0, i32 0
  %18 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %17, align 8
  %19 = icmp eq %struct._xmlParserInputBuffer* %18, null
  br i1 %19, label %49, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %49, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %18, i64 0, i32 4
  %26 = load %struct._xmlBuf*, %struct._xmlBuf** %25, align 8
  %27 = tail call i64 @xmlBufGetInputBase(%struct._xmlBuf* %26, %struct._xmlParserInput* nonnull %9) #9
  %28 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %29 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %28, i64 0, i32 4
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %28, i64 0, i32 3
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %28, i64 0, i32 0
  %37 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %36, align 8
  %38 = tail call i32 @xmlParserInputBufferPush(%struct._xmlParserInputBuffer* %37, i32 %2, i8* nonnull %1) #9
  %39 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %40 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %39, i64 0, i32 0
  %41 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %40, align 8
  %42 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %41, i64 0, i32 4
  %43 = load %struct._xmlBuf*, %struct._xmlBuf** %42, align 8
  %44 = tail call i32 @xmlBufSetInputBaseCur(%struct._xmlBuf* %43, %struct._xmlParserInput* %39, i64 %27, i64 %35) #9
  %45 = icmp slt i32 %38, 0
  br i1 %45, label %46, label %95

46:                                               ; preds = %24
  %47 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 -1, i32* %47, align 8
  %48 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  store i32 1, i32* %48, align 4
  br label %1344

49:                                               ; preds = %20, %16, %12
  %50 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %95, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %9, i64 0, i32 0
  %55 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %54, align 8
  %56 = icmp eq %struct._xmlParserInputBuffer* %55, null
  br i1 %56, label %95, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %55, i64 0, i32 3
  %59 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %58, align 8
  %60 = icmp eq %struct._xmlCharEncodingHandler* %59, null
  br i1 %60, label %95, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %55, i64 0, i32 4
  %63 = load %struct._xmlBuf*, %struct._xmlBuf** %62, align 8
  %64 = icmp eq %struct._xmlBuf* %63, null
  br i1 %64, label %95, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %55, i64 0, i32 5
  %67 = load %struct._xmlBuf*, %struct._xmlBuf** %66, align 8
  %68 = icmp eq %struct._xmlBuf* %67, null
  br i1 %68, label %95, label %69

69:                                               ; preds = %65
  %70 = tail call i64 @xmlBufGetInputBase(%struct._xmlBuf* nonnull %63, %struct._xmlParserInput* nonnull %9) #9
  %71 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %72 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %71, i64 0, i32 4
  %73 = bitcast i8** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %71, i64 0, i32 3
  %76 = bitcast i8** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %74, %77
  %79 = tail call i32 @xmlCharEncInput(%struct._xmlParserInputBuffer* nonnull %55, i32 %3) #9
  %80 = load %struct._xmlBuf*, %struct._xmlBuf** %62, align 8
  %81 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %82 = tail call i32 @xmlBufSetInputBaseCur(%struct._xmlBuf* %80, %struct._xmlParserInput* %81, i64 %70, i64 %78) #9
  %83 = icmp slt i32 %79, 0
  br i1 %83, label %84, label %95

84:                                               ; preds = %69
  %85 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  %89 = load i32, i32* %50, align 8
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %1344, label %91

91:                                               ; preds = %88, %84
  %92 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 81, i32* %92, align 8
  %93 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %93, i8* null, i32 5, i32 81, i32 2, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* null, i8* null) #9
  %94 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %94, align 8
  br label %1344

95:                                               ; preds = %57, %61, %65, %69, %24, %53, %49
  %96 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %97 = icmp eq %struct._xmlParserInput* %96, null
  br i1 %97, label %1231, label %98

98:                                               ; preds = %95
  %99 = icmp ne i32 %3, 0
  %100 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %101 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %102 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %103 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %104 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %105 = bitcast i8** %103 to i64*
  %106 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %107 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 34
  %108 = bitcast i16* %5 to i8*
  %109 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  %110 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 35
  %111 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 17
  %112 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 84
  %113 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 85
  %114 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 86
  %115 = bitcast %struct._xmlParserNodeInfo** %114 to i8**
  %116 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %117 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  %118 = bitcast %struct._xmlParserCtxt* %0 to i8*
  %119 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 83
  %120 = xor i1 %99, true
  br label %121

121:                                              ; preds = %1225, %98
  %122 = phi %struct._xmlParserInput* [ %96, %98 ], [ %1226, %1225 ]
  %123 = phi i64 [ -6148914691236517206, %98 ], [ %1228, %1225 ]
  %124 = phi i64 [ -6148914691236517206, %98 ], [ %1227, %1225 ]
  br label %125

125:                                              ; preds = %210, %121
  %126 = phi %struct._xmlParserInput* [ %122, %121 ], [ %219, %210 ]
  %127 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 0
  %128 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %127, align 8
  %129 = icmp eq %struct._xmlParserInputBuffer* %128, null
  br i1 %129, label %130, label %134

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 6
  %132 = load i32, i32* %131, align 8
  %133 = sext i32 %132 to i64
  br label %138

134:                                              ; preds = %125
  %135 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %128, i64 0, i32 4
  %136 = load %struct._xmlBuf*, %struct._xmlBuf** %135, align 8
  %137 = call i64 @xmlBufUse(%struct._xmlBuf* %136) #9
  br label %138

138:                                              ; preds = %134, %130
  %139 = phi i64 [ %137, %134 ], [ %133, %130 ]
  %140 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 4
  %141 = bitcast i8** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 3
  %144 = bitcast i8** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %139, %142
  %147 = add i64 %146, %145
  %148 = icmp eq i64 %147, 0
  %149 = and i1 %99, %148
  br i1 %149, label %150, label %203

150:                                              ; preds = %138
  %151 = load i32, i32* %100, align 8
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %153, label %188

153:                                              ; preds = %150, %184
  %154 = phi i32 [ %155, %184 ], [ %151, %150 ]
  %155 = add nsw i32 %154, -1
  %156 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %157 = icmp eq %struct._xmlSAXHandler* %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %156, i64 0, i32 15
  %160 = load void (i8*, i8*)*, void (i8*, i8*)** %159, align 8
  %161 = icmp eq void (i8*, i8*)* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %158
  %163 = load i8*, i8** %102, align 8
  %164 = load i8*, i8** %103, align 8
  call void %160(i8* %163, i8* %164) #9
  br label %165

165:                                              ; preds = %162, %158, %153
  %166 = load i32, i32* %100, align 8
  %167 = icmp slt i32 %166, 1
  br i1 %167, label %184, label %168

168:                                              ; preds = %165
  %169 = add nsw i32 %166, -1
  store i32 %169, i32* %100, align 8
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %178

171:                                              ; preds = %168
  %172 = load i8**, i8*** %104, align 8
  %173 = add nsw i32 %166, -2
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8*, i8** %172, i64 %174
  %176 = bitcast i8** %175 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %105, align 8
  br label %180

178:                                              ; preds = %168
  store i8* null, i8** %103, align 8
  %179 = load i8**, i8*** %104, align 8
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i8** [ %179, %178 ], [ %172, %171 ]
  %182 = sext i32 %169 to i64
  %183 = getelementptr inbounds i8*, i8** %181, i64 %182
  store i8* null, i8** %183, align 8
  br label %184

184:                                              ; preds = %180, %165
  %185 = icmp sgt i32 %155, 0
  br i1 %185, label %153, label %186

186:                                              ; preds = %184
  %187 = load i32, i32* %100, align 8
  br label %188

188:                                              ; preds = %186, %150
  %189 = phi i32 [ %187, %186 ], [ %151, %150 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %203

191:                                              ; preds = %188
  %192 = load i32, i32* %106, align 8
  %193 = icmp eq i32 %192, -1
  br i1 %193, label %203, label %194

194:                                              ; preds = %191
  store i32 -1, i32* %106, align 8
  %195 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %196 = icmp eq %struct._xmlSAXHandler* %195, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %195, i64 0, i32 13
  %199 = load void (i8*)*, void (i8*)** %198, align 8
  %200 = icmp eq void (i8*)* %199, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  %202 = load i8*, i8** %102, align 8
  call void %199(i8* %202) #9
  br label %203

203:                                              ; preds = %201, %197, %194, %191, %188, %138
  %204 = icmp slt i64 %147, 1
  br i1 %204, label %1231, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 4
  %207 = load i8*, i8** %206, align 8
  %208 = load i8, i8* %207, align 1
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %221

210:                                              ; preds = %205
  %211 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %212 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %211, i64 0, i32 4
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 1
  store i8* %214, i8** %212, align 8
  %215 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %216 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %215, i64 0, i32 8
  %217 = load i32, i32* %216, align 8
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %216, align 8
  %219 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %220 = icmp eq %struct._xmlParserInput* %219, null
  br i1 %220, label %1299, label %125

221:                                              ; preds = %205
  %222 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 0
  %223 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 4
  %224 = load i32, i32* %106, align 8
  switch i32 %224, label %1220 [
    i32 -1, label %1299
    i32 0, label %225
    i32 1, label %336
    i32 4, label %488
    i32 14, label %578
    i32 6, label %686
    i32 7, label %951
    i32 9, label %1199
    i32 8, label %1210
    i32 3, label %1211
    i32 5, label %1212
    i32 2, label %1213
    i32 10, label %1214
    i32 11, label %1215
    i32 12, label %1216
    i32 13, label %1217
    i32 15, label %1218
    i32 16, label %1219
  ]

225:                                              ; preds = %221
  switch i8 %208, label %246 [
    i8 32, label %226
    i8 13, label %226
    i8 10, label %226
    i8 9, label %226
  ]

226:                                              ; preds = %225, %225, %225, %225
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0) #9
  %227 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %222, align 8
  %228 = icmp eq %struct._xmlParserInputBuffer* %227, null
  br i1 %228, label %229, label %233

229:                                              ; preds = %226
  %230 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 6
  %231 = load i32, i32* %230, align 8
  %232 = sext i32 %231 to i64
  br label %237

233:                                              ; preds = %226
  %234 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %227, i64 0, i32 4
  %235 = load %struct._xmlBuf*, %struct._xmlBuf** %234, align 8
  %236 = call i64 @xmlBufUse(%struct._xmlBuf* %235) #9
  br label %237

237:                                              ; preds = %229, %233
  %238 = phi i64 [ %236, %233 ], [ %232, %229 ]
  %239 = bitcast i8** %223 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 3
  %242 = bitcast i8** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = sub i64 %238, %240
  %245 = add i64 %244, %243
  br label %246

246:                                              ; preds = %237, %225
  %247 = phi i64 [ %147, %225 ], [ %245, %237 ]
  %248 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %249 = icmp eq %struct._xmlSAXHandler* %248, null
  br i1 %249, label %268, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %248, i64 0, i32 11
  %252 = load void (i8*, %struct._xmlSAXLocator*)*, void (i8*, %struct._xmlSAXLocator*)** %251, align 8
  %253 = icmp eq void (i8*, %struct._xmlSAXLocator*)* %252, null
  br i1 %253, label %258, label %254

254:                                              ; preds = %250
  %255 = load i8*, i8** %102, align 8
  call void %252(i8* %255, %struct._xmlSAXLocator* nonnull @xmlDefaultSAXLocator) #9
  %256 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %257 = icmp eq %struct._xmlSAXHandler* %256, null
  br i1 %257, label %268, label %258

258:                                              ; preds = %254, %250
  %259 = phi %struct._xmlSAXHandler* [ %256, %254 ], [ %248, %250 ]
  %260 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %259, i64 0, i32 12
  %261 = load void (i8*)*, void (i8*)** %260, align 8
  %262 = icmp eq void (i8*)* %261, null
  br i1 %262, label %268, label %263

263:                                              ; preds = %258
  %264 = load i32, i32* %116, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %263
  %267 = load i8*, i8** %102, align 8
  call void %261(i8* %267) #9
  br label %268

268:                                              ; preds = %266, %263, %258, %254, %246
  %269 = load i8*, i8** %223, align 8
  %270 = load i8, i8* %269, align 1
  %271 = icmp eq i8 %270, 60
  br i1 %271, label %272, label %335

272:                                              ; preds = %268
  %273 = getelementptr inbounds i8, i8* %269, i64 1
  %274 = load i8, i8* %273, align 1
  %275 = icmp eq i8 %274, 33
  br i1 %275, label %276, label %335

276:                                              ; preds = %272
  %277 = tail call i32** @__ctype_toupper_loc() #11
  %278 = load i32*, i32** %277, align 8
  %279 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %280 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %279, i64 0, i32 4
  %281 = load i8*, i8** %280, align 8
  %282 = getelementptr inbounds i8, i8* %281, i64 2
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds i32, i32* %278, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, 68
  br i1 %287, label %288, label %335

288:                                              ; preds = %276
  %289 = getelementptr inbounds i8, i8* %281, i64 3
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i64
  %292 = getelementptr inbounds i32, i32* %278, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = icmp eq i32 %293, 79
  br i1 %294, label %295, label %335

295:                                              ; preds = %288
  %296 = getelementptr inbounds i8, i8* %281, i64 4
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds i32, i32* %278, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %300, 67
  br i1 %301, label %302, label %335

302:                                              ; preds = %295
  %303 = getelementptr inbounds i8, i8* %281, i64 5
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i64
  %306 = getelementptr inbounds i32, i32* %278, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = icmp eq i32 %307, 84
  br i1 %308, label %309, label %335

309:                                              ; preds = %302
  %310 = getelementptr inbounds i8, i8* %281, i64 6
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds i32, i32* %278, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, 89
  br i1 %315, label %316, label %335

316:                                              ; preds = %309
  %317 = getelementptr inbounds i8, i8* %281, i64 7
  %318 = load i8, i8* %317, align 1
  %319 = zext i8 %318 to i64
  %320 = getelementptr inbounds i32, i32* %278, i64 %319
  %321 = load i32, i32* %320, align 4
  %322 = icmp eq i32 %321, 80
  br i1 %322, label %323, label %335

323:                                              ; preds = %316
  %324 = getelementptr inbounds i8, i8* %281, i64 8
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %325 to i64
  %327 = getelementptr inbounds i32, i32* %278, i64 %326
  %328 = load i32, i32* %327, align 4
  %329 = icmp eq i32 %328, 69
  br i1 %329, label %330, label %335

330:                                              ; preds = %323
  br i1 %99, label %334, label %331

331:                                              ; preds = %330
  %332 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 1) #9
  %333 = icmp slt i32 %332, 0
  br i1 %333, label %1299, label %334

334:                                              ; preds = %331, %330
  call fastcc void @htmlParseDocTypeDecl(%struct._xmlParserCtxt* %0) #9
  store i32 4, i32* %106, align 8
  br label %1220

335:                                              ; preds = %323, %316, %309, %302, %295, %288, %276, %272, %268
  store i32 1, i32* %106, align 8
  br label %1220

336:                                              ; preds = %221
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0) #9
  %337 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %222, align 8
  %338 = icmp eq %struct._xmlParserInputBuffer* %337, null
  br i1 %338, label %339, label %346

339:                                              ; preds = %336
  %340 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 6
  %341 = load i32, i32* %340, align 8
  %342 = sext i32 %341 to i64
  %343 = bitcast i8** %223 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = sub i64 %342, %344
  br label %353

346:                                              ; preds = %336
  %347 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %337, i64 0, i32 4
  %348 = load %struct._xmlBuf*, %struct._xmlBuf** %347, align 8
  %349 = call i64 @xmlBufUse(%struct._xmlBuf* %348) #9
  %350 = bitcast i8** %223 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = sub i64 %349, %351
  br label %353

353:                                              ; preds = %346, %339
  %354 = phi i64 [ %352, %346 ], [ %345, %339 ]
  %355 = phi i64 [ %351, %346 ], [ %344, %339 ]
  %356 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 3
  %357 = bitcast i8** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = add i64 %354, %358
  %360 = inttoptr i64 %355 to i8*
  %361 = icmp slt i64 %359, 1
  br i1 %361, label %1231, label %362

362:                                              ; preds = %353
  %363 = icmp eq i64 %359, 1
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  br i1 %99, label %487, label %1299

365:                                              ; preds = %362
  %366 = getelementptr inbounds i8, i8* %360, i64 1
  %367 = load i8, i8* %366, align 1
  %368 = load i8, i8* %360, align 1
  %369 = icmp eq i8 %368, 60
  %370 = icmp eq i8 %367, 33
  %371 = and i1 %370, %369
  br i1 %371, label %372, label %416

372:                                              ; preds = %365
  %373 = getelementptr inbounds i8, i8* %360, i64 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 45
  br i1 %375, label %376, label %425

376:                                              ; preds = %372
  %377 = getelementptr inbounds i8, i8* %360, i64 3
  %378 = load i8, i8* %377, align 1
  %379 = icmp eq i8 %378, 45
  br i1 %379, label %380, label %425

380:                                              ; preds = %376
  br i1 %99, label %415, label %381

381:                                              ; preds = %380
  %382 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %383 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %382, i64 0, i32 4
  %384 = bitcast i8** %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %382, i64 0, i32 3
  %387 = bitcast i8** %386 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 45, i8 zeroext 45, i32 0) #9
  %390 = icmp slt i32 %389, 0
  br i1 %390, label %1299, label %391

391:                                              ; preds = %381
  %392 = sub i64 %385, %388
  %393 = trunc i64 %392 to i32
  %394 = add i32 %393, 1
  br label %395

395:                                              ; preds = %410, %391
  %396 = phi i32 [ %389, %391 ], [ %413, %410 ]
  %397 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %398 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %397, i64 0, i32 4
  %399 = load i8*, i8** %398, align 8
  %400 = add nuw nsw i32 %396, 2
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds i8, i8* %399, i64 %401
  %403 = load i8, i8* %402, align 1
  switch i8 %403, label %410 [
    i8 62, label %415
    i8 33, label %404
  ]

404:                                              ; preds = %395
  %405 = add nuw nsw i32 %396, 3
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds i8, i8* %399, i64 %406
  %408 = load i8, i8* %407, align 1
  %409 = icmp eq i8 %408, 62
  br i1 %409, label %415, label %410

410:                                              ; preds = %404, %395
  %411 = add i32 %394, %396
  %412 = sext i32 %411 to i64
  store i64 %412, i64* %107, align 8
  %413 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 45, i8 zeroext 45, i32 0) #9
  %414 = icmp slt i32 %413, 0
  br i1 %414, label %1231, label %395

415:                                              ; preds = %404, %395, %380
  call fastcc void @htmlParseComment(%struct._xmlParserCtxt* %0) #9
  store i32 1, i32* %106, align 8
  br label %1220

416:                                              ; preds = %365
  %417 = icmp eq i8 %367, 63
  %418 = and i1 %417, %369
  br i1 %418, label %420, label %419

419:                                              ; preds = %416
  br i1 %369, label %484, label %487

420:                                              ; preds = %416
  br i1 %99, label %424, label %421

421:                                              ; preds = %420
  %422 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 0) #9
  %423 = icmp slt i32 %422, 0
  br i1 %423, label %1299, label %424

424:                                              ; preds = %421, %420
  call fastcc void @htmlParsePI(%struct._xmlParserCtxt* %0) #9
  store i32 1, i32* %106, align 8
  br label %1220

425:                                              ; preds = %376, %372
  %426 = tail call i32** @__ctype_toupper_loc() #11
  %427 = load i32*, i32** %426, align 8
  %428 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %429 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %428, i64 0, i32 4
  %430 = load i8*, i8** %429, align 8
  %431 = getelementptr inbounds i8, i8* %430, i64 2
  %432 = load i8, i8* %431, align 1
  %433 = zext i8 %432 to i64
  %434 = getelementptr inbounds i32, i32* %427, i64 %433
  %435 = load i32, i32* %434, align 4
  %436 = icmp eq i32 %435, 68
  br i1 %436, label %437, label %484

437:                                              ; preds = %425
  %438 = getelementptr inbounds i8, i8* %430, i64 3
  %439 = load i8, i8* %438, align 1
  %440 = zext i8 %439 to i64
  %441 = getelementptr inbounds i32, i32* %427, i64 %440
  %442 = load i32, i32* %441, align 4
  %443 = icmp eq i32 %442, 79
  br i1 %443, label %444, label %484

444:                                              ; preds = %437
  %445 = getelementptr inbounds i8, i8* %430, i64 4
  %446 = load i8, i8* %445, align 1
  %447 = zext i8 %446 to i64
  %448 = getelementptr inbounds i32, i32* %427, i64 %447
  %449 = load i32, i32* %448, align 4
  %450 = icmp eq i32 %449, 67
  br i1 %450, label %451, label %484

451:                                              ; preds = %444
  %452 = getelementptr inbounds i8, i8* %430, i64 5
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i64
  %455 = getelementptr inbounds i32, i32* %427, i64 %454
  %456 = load i32, i32* %455, align 4
  %457 = icmp eq i32 %456, 84
  br i1 %457, label %458, label %484

458:                                              ; preds = %451
  %459 = getelementptr inbounds i8, i8* %430, i64 6
  %460 = load i8, i8* %459, align 1
  %461 = zext i8 %460 to i64
  %462 = getelementptr inbounds i32, i32* %427, i64 %461
  %463 = load i32, i32* %462, align 4
  %464 = icmp eq i32 %463, 89
  br i1 %464, label %465, label %484

465:                                              ; preds = %458
  %466 = getelementptr inbounds i8, i8* %430, i64 7
  %467 = load i8, i8* %466, align 1
  %468 = zext i8 %467 to i64
  %469 = getelementptr inbounds i32, i32* %427, i64 %468
  %470 = load i32, i32* %469, align 4
  %471 = icmp eq i32 %470, 80
  br i1 %471, label %472, label %484

472:                                              ; preds = %465
  %473 = getelementptr inbounds i8, i8* %430, i64 8
  %474 = load i8, i8* %473, align 1
  %475 = zext i8 %474 to i64
  %476 = getelementptr inbounds i32, i32* %427, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = icmp eq i32 %477, 69
  br i1 %478, label %479, label %484

479:                                              ; preds = %472
  br i1 %99, label %483, label %480

480:                                              ; preds = %479
  %481 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 1) #9
  %482 = icmp slt i32 %481, 0
  br i1 %482, label %1299, label %483

483:                                              ; preds = %480, %479
  call fastcc void @htmlParseDocTypeDecl(%struct._xmlParserCtxt* %0) #9
  store i32 4, i32* %106, align 8
  br label %1220

484:                                              ; preds = %472, %465, %458, %451, %444, %437, %425, %419
  %485 = icmp slt i64 %359, 9
  %486 = and i1 %485, %370
  br i1 %486, label %1299, label %487

487:                                              ; preds = %484, %419, %364
  store i32 7, i32* %106, align 8
  br label %1220

488:                                              ; preds = %221
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0) #9
  %489 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %222, align 8
  %490 = icmp eq %struct._xmlParserInputBuffer* %489, null
  br i1 %490, label %491, label %498

491:                                              ; preds = %488
  %492 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 6
  %493 = load i32, i32* %492, align 8
  %494 = sext i32 %493 to i64
  %495 = bitcast i8** %223 to i64*
  %496 = load i64, i64* %495, align 8
  %497 = sub i64 %494, %496
  br label %505

498:                                              ; preds = %488
  %499 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %489, i64 0, i32 4
  %500 = load %struct._xmlBuf*, %struct._xmlBuf** %499, align 8
  %501 = call i64 @xmlBufUse(%struct._xmlBuf* %500) #9
  %502 = bitcast i8** %223 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = sub i64 %501, %503
  br label %505

505:                                              ; preds = %498, %491
  %506 = phi i64 [ %504, %498 ], [ %497, %491 ]
  %507 = phi i64 [ %503, %498 ], [ %496, %491 ]
  %508 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 3
  %509 = bitcast i8** %508 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = add i64 %506, %510
  %512 = inttoptr i64 %507 to i8*
  %513 = icmp slt i64 %511, 2
  br i1 %513, label %1231, label %514

514:                                              ; preds = %505
  %515 = load i8, i8* %512, align 1
  %516 = getelementptr inbounds i8, i8* %512, i64 1
  %517 = load i8, i8* %516, align 1
  %518 = icmp eq i8 %515, 60
  %519 = icmp eq i8 %517, 33
  %520 = and i1 %518, %519
  br i1 %520, label %521, label %565

521:                                              ; preds = %514
  %522 = getelementptr inbounds i8, i8* %512, i64 2
  %523 = load i8, i8* %522, align 1
  %524 = icmp eq i8 %523, 45
  br i1 %524, label %525, label %573

525:                                              ; preds = %521
  %526 = getelementptr inbounds i8, i8* %512, i64 3
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 45
  br i1 %528, label %529, label %573

529:                                              ; preds = %525
  br i1 %99, label %564, label %530

530:                                              ; preds = %529
  %531 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %532 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %531, i64 0, i32 4
  %533 = bitcast i8** %532 to i64*
  %534 = load i64, i64* %533, align 8
  %535 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %531, i64 0, i32 3
  %536 = bitcast i8** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 45, i8 zeroext 45, i32 0) #9
  %539 = icmp slt i32 %538, 0
  br i1 %539, label %1299, label %540

540:                                              ; preds = %530
  %541 = sub i64 %534, %537
  %542 = trunc i64 %541 to i32
  %543 = add i32 %542, 1
  br label %544

544:                                              ; preds = %559, %540
  %545 = phi i32 [ %538, %540 ], [ %562, %559 ]
  %546 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %547 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %546, i64 0, i32 4
  %548 = load i8*, i8** %547, align 8
  %549 = add nuw nsw i32 %545, 2
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds i8, i8* %548, i64 %550
  %552 = load i8, i8* %551, align 1
  switch i8 %552, label %559 [
    i8 62, label %564
    i8 33, label %553
  ]

553:                                              ; preds = %544
  %554 = add nuw nsw i32 %545, 3
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds i8, i8* %548, i64 %555
  %557 = load i8, i8* %556, align 1
  %558 = icmp eq i8 %557, 62
  br i1 %558, label %564, label %559

559:                                              ; preds = %553, %544
  %560 = add i32 %543, %545
  %561 = sext i32 %560 to i64
  store i64 %561, i64* %107, align 8
  %562 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 45, i8 zeroext 45, i32 0) #9
  %563 = icmp slt i32 %562, 0
  br i1 %563, label %1231, label %544

564:                                              ; preds = %553, %544, %529
  call fastcc void @htmlParseComment(%struct._xmlParserCtxt* %0) #9
  store i32 4, i32* %106, align 8
  br label %1220

565:                                              ; preds = %514
  %566 = icmp eq i8 %517, 63
  %567 = and i1 %518, %566
  br i1 %567, label %568, label %573

568:                                              ; preds = %565
  br i1 %99, label %572, label %569

569:                                              ; preds = %568
  %570 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 0) #9
  %571 = icmp slt i32 %570, 0
  br i1 %571, label %1299, label %572

572:                                              ; preds = %569, %568
  call fastcc void @htmlParsePI(%struct._xmlParserCtxt* %0) #9
  store i32 4, i32* %106, align 8
  br label %1220

573:                                              ; preds = %565, %525, %521
  %574 = icmp slt i64 %511, 4
  %575 = and i1 %574, %519
  %576 = and i1 %518, %575
  br i1 %576, label %1299, label %577

577:                                              ; preds = %573
  store i32 7, i32* %106, align 8
  br label %1220

578:                                              ; preds = %221
  %579 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %222, align 8
  %580 = icmp eq %struct._xmlParserInputBuffer* %579, null
  br i1 %580, label %581, label %591

581:                                              ; preds = %578
  %582 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 6
  %583 = load i32, i32* %582, align 8
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 3
  %586 = bitcast i8** %585 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = ptrtoint i8* %207 to i64
  %589 = sub i64 %587, %588
  %590 = add i64 %589, %584
  br label %603

591:                                              ; preds = %578
  %592 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %579, i64 0, i32 4
  %593 = load %struct._xmlBuf*, %struct._xmlBuf** %592, align 8
  %594 = call i64 @xmlBufUse(%struct._xmlBuf* %593) #9
  %595 = bitcast i8** %223 to i64*
  %596 = load i64, i64* %595, align 8
  %597 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 3
  %598 = bitcast i8** %597 to i64*
  %599 = load i64, i64* %598, align 8
  %600 = sub i64 %594, %596
  %601 = add i64 %600, %599
  %602 = inttoptr i64 %596 to i8*
  br label %603

603:                                              ; preds = %591, %581
  %604 = phi i8* [ %207, %581 ], [ %602, %591 ]
  %605 = phi i64 [ %590, %581 ], [ %601, %591 ]
  %606 = icmp slt i64 %605, 1
  br i1 %606, label %1231, label %607

607:                                              ; preds = %603
  %608 = load i8, i8* %604, align 1
  switch i8 %608, label %610 [
    i8 32, label %609
    i8 13, label %609
    i8 10, label %609
    i8 9, label %609
  ]

609:                                              ; preds = %607, %607, %607, %607
  call fastcc void @htmlParseCharDataInternal(%struct._xmlParserCtxt* %0, i32 0) #9
  br label %1299

610:                                              ; preds = %607
  %611 = icmp slt i64 %605, 2
  br i1 %611, label %1299, label %612

612:                                              ; preds = %610
  %613 = getelementptr inbounds i8, i8* %604, i64 1
  %614 = load i8, i8* %613, align 1
  %615 = icmp eq i8 %608, 60
  %616 = icmp eq i8 %614, 33
  %617 = and i1 %615, %616
  br i1 %617, label %618, label %662

618:                                              ; preds = %612
  %619 = getelementptr inbounds i8, i8* %604, i64 2
  %620 = load i8, i8* %619, align 1
  %621 = icmp eq i8 %620, 45
  br i1 %621, label %622, label %670

622:                                              ; preds = %618
  %623 = getelementptr inbounds i8, i8* %604, i64 3
  %624 = load i8, i8* %623, align 1
  %625 = icmp eq i8 %624, 45
  br i1 %625, label %626, label %670

626:                                              ; preds = %622
  br i1 %99, label %661, label %627

627:                                              ; preds = %626
  %628 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %629 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %628, i64 0, i32 4
  %630 = bitcast i8** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %628, i64 0, i32 3
  %633 = bitcast i8** %632 to i64*
  %634 = load i64, i64* %633, align 8
  %635 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 45, i8 zeroext 45, i32 0) #9
  %636 = icmp slt i32 %635, 0
  br i1 %636, label %1299, label %637

637:                                              ; preds = %627
  %638 = sub i64 %631, %634
  %639 = trunc i64 %638 to i32
  %640 = add i32 %639, 1
  br label %641

641:                                              ; preds = %656, %637
  %642 = phi i32 [ %635, %637 ], [ %659, %656 ]
  %643 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %644 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %643, i64 0, i32 4
  %645 = load i8*, i8** %644, align 8
  %646 = add nuw nsw i32 %642, 2
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds i8, i8* %645, i64 %647
  %649 = load i8, i8* %648, align 1
  switch i8 %649, label %656 [
    i8 62, label %661
    i8 33, label %650
  ]

650:                                              ; preds = %641
  %651 = add nuw nsw i32 %642, 3
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds i8, i8* %645, i64 %652
  %654 = load i8, i8* %653, align 1
  %655 = icmp eq i8 %654, 62
  br i1 %655, label %661, label %656

656:                                              ; preds = %650, %641
  %657 = add i32 %640, %642
  %658 = sext i32 %657 to i64
  store i64 %658, i64* %107, align 8
  %659 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 45, i8 zeroext 45, i32 0) #9
  %660 = icmp slt i32 %659, 0
  br i1 %660, label %1231, label %641

661:                                              ; preds = %650, %641, %626
  call fastcc void @htmlParseComment(%struct._xmlParserCtxt* %0) #9
  store i32 14, i32* %106, align 8
  br label %1220

662:                                              ; preds = %612
  %663 = icmp eq i8 %614, 63
  %664 = and i1 %615, %663
  br i1 %664, label %665, label %670

665:                                              ; preds = %662
  br i1 %99, label %669, label %666

666:                                              ; preds = %665
  %667 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 0) #9
  %668 = icmp slt i32 %667, 0
  br i1 %668, label %1299, label %669

669:                                              ; preds = %666, %665
  call fastcc void @htmlParsePI(%struct._xmlParserCtxt* %0) #9
  store i32 14, i32* %106, align 8
  br label %1220

670:                                              ; preds = %662, %622, %618
  %671 = phi i1 [ true, %618 ], [ true, %622 ], [ %615, %662 ]
  %672 = phi i1 [ true, %618 ], [ true, %622 ], [ %616, %662 ]
  %673 = icmp slt i64 %605, 4
  %674 = and i1 %673, %672
  %675 = and i1 %671, %674
  br i1 %675, label %1299, label %676

676:                                              ; preds = %670
  store i32 5, i32* %117, align 8
  %677 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %677, align 8
  store i32 -1, i32* %106, align 8
  %678 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %679 = icmp eq %struct._xmlSAXHandler* %678, null
  br i1 %679, label %1299, label %680

680:                                              ; preds = %676
  %681 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %678, i64 0, i32 13
  %682 = load void (i8*)*, void (i8*)** %681, align 8
  %683 = icmp eq void (i8*)* %682, null
  br i1 %683, label %1299, label %684

684:                                              ; preds = %680
  %685 = load i8*, i8** %102, align 8
  call void %682(i8* %685) #9
  br label %1299

686:                                              ; preds = %221
  %687 = icmp slt i64 %147, 2
  br i1 %687, label %688, label %689

688:                                              ; preds = %686
  br i1 %99, label %692, label %1299

689:                                              ; preds = %686
  %690 = getelementptr inbounds i8, i8* %207, i64 1
  %691 = load i8, i8* %690, align 1
  br label %692

692:                                              ; preds = %689, %688
  %693 = phi i8 [ %691, %689 ], [ 32, %688 ]
  %694 = icmp eq i8 %208, 60
  br i1 %694, label %696, label %695

695:                                              ; preds = %692
  store i32 7, i32* %106, align 8
  br label %1220

696:                                              ; preds = %692
  %697 = icmp eq i8 %693, 47
  br i1 %697, label %698, label %699

698:                                              ; preds = %696
  store i32 9, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

699:                                              ; preds = %696
  br i1 %99, label %703, label %700

700:                                              ; preds = %699
  %701 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 1) #9
  %702 = icmp slt i32 %701, 0
  br i1 %702, label %1299, label %703

703:                                              ; preds = %700, %699
  %704 = load i32, i32* %111, align 8
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %721, label %706

706:                                              ; preds = %703
  %707 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %708 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %707, i64 0, i32 9
  %709 = load i64, i64* %708, align 8
  %710 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %707, i64 0, i32 4
  %711 = bitcast i8** %710 to i64*
  %712 = load i64, i64* %711, align 8
  %713 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %707, i64 0, i32 3
  %714 = bitcast i8** %713 to i64*
  %715 = load i64, i64* %714, align 8
  %716 = add i64 %712, %709
  %717 = sub i64 %716, %715
  %718 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %707, i64 0, i32 7
  %719 = load i32, i32* %718, align 4
  %720 = sext i32 %719 to i64
  br label %721

721:                                              ; preds = %706, %703
  %722 = phi i64 [ %124, %703 ], [ %717, %706 ]
  %723 = phi i64 [ %123, %703 ], [ %720, %706 ]
  %724 = call fastcc i32 @htmlParseStartTag(%struct._xmlParserCtxt* %0) #9
  %725 = load i8*, i8** %103, align 8
  %726 = icmp eq i32 %724, -1
  %727 = icmp eq i8* %725, null
  %728 = or i1 %726, %727
  br i1 %728, label %729, label %736

729:                                              ; preds = %721
  %730 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %731 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %730, i64 0, i32 4
  %732 = load i8*, i8** %731, align 8
  %733 = load i8, i8* %732, align 1
  %734 = icmp eq i8 %733, 62
  br i1 %734, label %735, label %1225

735:                                              ; preds = %729
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %1220

736:                                              ; preds = %721, %750
  %737 = phi i64 [ %752, %750 ], [ 92, %721 ]
  %738 = phi i64 [ %751, %750 ], [ 0, %721 ]
  %739 = add i64 %738, %737
  %740 = lshr i64 %739, 1
  %741 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %740
  %742 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %741, i64 0, i32 0
  %743 = load i8*, i8** %742, align 16
  %744 = call i32 @xmlStrcasecmp(i8* nonnull %725, i8* %743) #9
  %745 = icmp slt i32 %744, 0
  br i1 %745, label %750, label %746

746:                                              ; preds = %736
  %747 = icmp eq i32 %744, 0
  br i1 %747, label %754, label %748

748:                                              ; preds = %746
  %749 = add nuw i64 %740, 1
  br label %750

750:                                              ; preds = %748, %736
  %751 = phi i64 [ %749, %748 ], [ %738, %736 ]
  %752 = phi i64 [ %737, %748 ], [ %740, %736 ]
  %753 = icmp ult i64 %751, %752
  br i1 %753, label %736, label %756

754:                                              ; preds = %746
  %755 = icmp eq %struct._htmlElemDesc* %741, null
  br i1 %755, label %756, label %757

756:                                              ; preds = %750, %754
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 801, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* %725, i8* null) #9
  br label %757

757:                                              ; preds = %756, %754
  %758 = phi i1 [ true, %756 ], [ false, %754 ]
  %759 = phi %struct._htmlElemDesc* [ null, %756 ], [ %741, %754 ]
  %760 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %761 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %760, i64 0, i32 4
  %762 = load i8*, i8** %761, align 8
  %763 = load i8, i8* %762, align 1
  switch i8 %763, label %803 [
    i8 47, label %764
    i8 62, label %802
  ]

764:                                              ; preds = %757
  %765 = getelementptr inbounds i8, i8* %762, i64 1
  %766 = load i8, i8* %765, align 1
  %767 = icmp eq i8 %766, 62
  br i1 %767, label %768, label %803

768:                                              ; preds = %764
  %769 = getelementptr inbounds i8, i8* %762, i64 2
  store i8* %769, i8** %761, align 8
  %770 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %771 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %770, i64 0, i32 8
  %772 = load i32, i32* %771, align 8
  %773 = add nsw i32 %772, 2
  store i32 %773, i32* %771, align 8
  %774 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %775 = icmp eq %struct._xmlSAXHandler* %774, null
  br i1 %775, label %782, label %776

776:                                              ; preds = %768
  %777 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %774, i64 0, i32 15
  %778 = load void (i8*, i8*)*, void (i8*, i8*)** %777, align 8
  %779 = icmp eq void (i8*, i8*)* %778, null
  br i1 %779, label %782, label %780

780:                                              ; preds = %776
  %781 = load i8*, i8** %102, align 8
  call void %778(i8* %781, i8* %725) #9
  br label %782

782:                                              ; preds = %780, %776, %768
  %783 = load i32, i32* %100, align 8
  %784 = icmp slt i32 %783, 1
  br i1 %784, label %801, label %785

785:                                              ; preds = %782
  %786 = add nsw i32 %783, -1
  store i32 %786, i32* %100, align 8
  %787 = icmp sgt i32 %786, 0
  br i1 %787, label %788, label %795

788:                                              ; preds = %785
  %789 = load i8**, i8*** %104, align 8
  %790 = add nsw i32 %783, -2
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds i8*, i8** %789, i64 %791
  %793 = bitcast i8** %792 to i64*
  %794 = load i64, i64* %793, align 8
  store i64 %794, i64* %105, align 8
  br label %797

795:                                              ; preds = %785
  store i8* null, i8** %103, align 8
  %796 = load i8**, i8*** %104, align 8
  br label %797

797:                                              ; preds = %795, %788
  %798 = phi i8** [ %796, %795 ], [ %789, %788 ]
  %799 = sext i32 %786 to i64
  %800 = getelementptr inbounds i8*, i8** %798, i64 %799
  store i8* null, i8** %800, align 8
  br label %801

801:                                              ; preds = %797, %782
  store i32 7, i32* %106, align 8
  br label %1220

802:                                              ; preds = %757
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br i1 %758, label %905, label %873

803:                                              ; preds = %764, %757
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 73, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i8* %725, i8* null) #9
  %804 = load i8*, i8** %103, align 8
  %805 = call i32 @xmlStrEqual(i8* %725, i8* %804) #9
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %827, label %807

807:                                              ; preds = %803
  %808 = call %struct._xmlNode* @nodePop(%struct._xmlParserCtxt* %0) #9
  %809 = load i32, i32* %100, align 8
  %810 = icmp slt i32 %809, 1
  br i1 %810, label %827, label %811

811:                                              ; preds = %807
  %812 = add nsw i32 %809, -1
  store i32 %812, i32* %100, align 8
  %813 = icmp sgt i32 %812, 0
  br i1 %813, label %814, label %821

814:                                              ; preds = %811
  %815 = load i8**, i8*** %104, align 8
  %816 = add nsw i32 %809, -2
  %817 = sext i32 %816 to i64
  %818 = getelementptr inbounds i8*, i8** %815, i64 %817
  %819 = bitcast i8** %818 to i64*
  %820 = load i64, i64* %819, align 8
  store i64 %820, i64* %105, align 8
  br label %823

821:                                              ; preds = %811
  store i8* null, i8** %103, align 8
  %822 = load i8**, i8*** %104, align 8
  br label %823

823:                                              ; preds = %821, %814
  %824 = phi i8** [ %822, %821 ], [ %815, %814 ]
  %825 = sext i32 %812 to i64
  %826 = getelementptr inbounds i8*, i8** %824, i64 %825
  store i8* null, i8** %826, align 8
  br label %827

827:                                              ; preds = %823, %807, %803
  %828 = load i32, i32* %111, align 8
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %872, label %830

830:                                              ; preds = %827
  %831 = load i32, i32* %112, align 8
  %832 = load i32, i32* %113, align 4
  %833 = icmp slt i32 %831, %832
  br i1 %833, label %834, label %836

834:                                              ; preds = %830
  %835 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %114, align 8
  br label %858

836:                                              ; preds = %830
  %837 = icmp eq i32 %832, 0
  br i1 %837, label %838, label %839

838:                                              ; preds = %836
  store i32 5, i32* %113, align 4
  br label %839

839:                                              ; preds = %838, %836
  %840 = phi i32 [ 5, %838 ], [ %832, %836 ]
  %841 = shl nsw i32 %840, 1
  store i32 %841, i32* %113, align 4
  %842 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %843 = load i8*, i8** %115, align 8
  %844 = sext i32 %841 to i64
  %845 = mul nsw i64 %844, 40
  %846 = call i8* %842(i8* %843, i64 %845) #9
  store i8* %846, i8** %115, align 8
  %847 = icmp eq i8* %846, null
  br i1 %847, label %851, label %848

848:                                              ; preds = %839
  %849 = bitcast i8* %846 to %struct._xmlParserNodeInfo*
  %850 = load i32, i32* %112, align 8
  br label %858

851:                                              ; preds = %839
  %852 = load i32, i32* %116, align 4
  %853 = icmp eq i32 %852, 0
  br i1 %853, label %857, label %854

854:                                              ; preds = %851
  %855 = load i32, i32* %106, align 8
  %856 = icmp eq i32 %855, -1
  br i1 %856, label %872, label %857

857:                                              ; preds = %851, %854
  store i32 2, i32* %117, align 8
  store i32 -1, i32* %106, align 8
  store i32 1, i32* %116, align 4
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %118, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %872

858:                                              ; preds = %848, %834
  %859 = phi i32 [ %831, %834 ], [ %850, %848 ]
  %860 = phi %struct._xmlParserNodeInfo* [ %835, %834 ], [ %849, %848 ]
  %861 = sext i32 %859 to i64
  %862 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %860, i64 %861, i32 0
  store %struct._xmlNode* inttoptr (i64 -6148914691236517206 to %struct._xmlNode*), %struct._xmlNode** %862, align 8
  %863 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %860, i64 %861, i32 1
  store i64 %722, i64* %863, align 8
  %864 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %860, i64 %861, i32 2
  store i64 %723, i64* %864, align 8
  %865 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %860, i64 %861, i32 3
  %866 = bitcast i64* %865 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %866, i8 -86, i64 16, i1 false) #9
  %867 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %114, align 8
  %868 = load i32, i32* %112, align 8
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %867, i64 %869
  store %struct._xmlParserNodeInfo* %870, %struct._xmlParserNodeInfo** %119, align 8
  %871 = add nsw i32 %868, 1
  store i32 %871, i32* %112, align 8
  br label %872

872:                                              ; preds = %858, %857, %854, %827
  store i32 7, i32* %106, align 8
  br label %1220

873:                                              ; preds = %802
  %874 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %759, i64 0, i32 4
  %875 = load i8, i8* %874, align 1
  %876 = icmp eq i8 %875, 0
  br i1 %876, label %905, label %877

877:                                              ; preds = %873
  %878 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %879 = icmp eq %struct._xmlSAXHandler* %878, null
  br i1 %879, label %886, label %880

880:                                              ; preds = %877
  %881 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %878, i64 0, i32 15
  %882 = load void (i8*, i8*)*, void (i8*, i8*)** %881, align 8
  %883 = icmp eq void (i8*, i8*)* %882, null
  br i1 %883, label %886, label %884

884:                                              ; preds = %880
  %885 = load i8*, i8** %102, align 8
  call void %882(i8* %885, i8* %725) #9
  br label %886

886:                                              ; preds = %884, %880, %877
  %887 = load i32, i32* %100, align 8
  %888 = icmp slt i32 %887, 1
  br i1 %888, label %905, label %889

889:                                              ; preds = %886
  %890 = add nsw i32 %887, -1
  store i32 %890, i32* %100, align 8
  %891 = icmp sgt i32 %890, 0
  br i1 %891, label %892, label %899

892:                                              ; preds = %889
  %893 = load i8**, i8*** %104, align 8
  %894 = add nsw i32 %887, -2
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds i8*, i8** %893, i64 %895
  %897 = bitcast i8** %896 to i64*
  %898 = load i64, i64* %897, align 8
  store i64 %898, i64* %105, align 8
  br label %901

899:                                              ; preds = %889
  store i8* null, i8** %103, align 8
  %900 = load i8**, i8*** %104, align 8
  br label %901

901:                                              ; preds = %899, %892
  %902 = phi i8** [ %900, %899 ], [ %893, %892 ]
  %903 = sext i32 %890 to i64
  %904 = getelementptr inbounds i8*, i8** %902, i64 %903
  store i8* null, i8** %904, align 8
  br label %905

905:                                              ; preds = %901, %886, %873, %802
  %906 = load i32, i32* %111, align 8
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %950, label %908

908:                                              ; preds = %905
  %909 = load i32, i32* %112, align 8
  %910 = load i32, i32* %113, align 4
  %911 = icmp slt i32 %909, %910
  br i1 %911, label %912, label %914

912:                                              ; preds = %908
  %913 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %114, align 8
  br label %936

914:                                              ; preds = %908
  %915 = icmp eq i32 %910, 0
  br i1 %915, label %916, label %917

916:                                              ; preds = %914
  store i32 5, i32* %113, align 4
  br label %917

917:                                              ; preds = %916, %914
  %918 = phi i32 [ 5, %916 ], [ %910, %914 ]
  %919 = shl nsw i32 %918, 1
  store i32 %919, i32* %113, align 4
  %920 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %921 = load i8*, i8** %115, align 8
  %922 = sext i32 %919 to i64
  %923 = mul nsw i64 %922, 40
  %924 = call i8* %920(i8* %921, i64 %923) #9
  store i8* %924, i8** %115, align 8
  %925 = icmp eq i8* %924, null
  br i1 %925, label %929, label %926

926:                                              ; preds = %917
  %927 = bitcast i8* %924 to %struct._xmlParserNodeInfo*
  %928 = load i32, i32* %112, align 8
  br label %936

929:                                              ; preds = %917
  %930 = load i32, i32* %116, align 4
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %935, label %932

932:                                              ; preds = %929
  %933 = load i32, i32* %106, align 8
  %934 = icmp eq i32 %933, -1
  br i1 %934, label %950, label %935

935:                                              ; preds = %929, %932
  store i32 2, i32* %117, align 8
  store i32 -1, i32* %106, align 8
  store i32 1, i32* %116, align 4
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %118, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %950

936:                                              ; preds = %926, %912
  %937 = phi i32 [ %909, %912 ], [ %928, %926 ]
  %938 = phi %struct._xmlParserNodeInfo* [ %913, %912 ], [ %927, %926 ]
  %939 = sext i32 %937 to i64
  %940 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %938, i64 %939, i32 0
  store %struct._xmlNode* inttoptr (i64 -6148914691236517206 to %struct._xmlNode*), %struct._xmlNode** %940, align 8
  %941 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %938, i64 %939, i32 1
  store i64 %722, i64* %941, align 8
  %942 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %938, i64 %939, i32 2
  store i64 %723, i64* %942, align 8
  %943 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %938, i64 %939, i32 3
  %944 = bitcast i64* %943 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %944, i8 -86, i64 16, i1 false) #9
  %945 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %114, align 8
  %946 = load i32, i32* %112, align 8
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %945, i64 %947
  store %struct._xmlParserNodeInfo* %948, %struct._xmlParserNodeInfo** %119, align 8
  %949 = add nsw i32 %946, 1
  store i32 %949, i32* %112, align 8
  br label %950

950:                                              ; preds = %936, %935, %932, %905
  store i32 7, i32* %106, align 8
  br label %1220

951:                                              ; preds = %221
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %108) #9
  store i16 0, i16* %5, align 2
  %952 = load i32, i32* %109, align 4
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %965, label %954

954:                                              ; preds = %951
  %955 = trunc i32 %952 to i8
  store i8 %955, i8* %108, align 2
  call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0) #9
  %956 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %957 = icmp eq %struct._xmlSAXHandler* %956, null
  br i1 %957, label %964, label %958

958:                                              ; preds = %954
  %959 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %956, i64 0, i32 17
  %960 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %959, align 8
  %961 = icmp eq void (i8*, i8*, i32)* %960, null
  br i1 %961, label %964, label %962

962:                                              ; preds = %958
  %963 = load i8*, i8** %102, align 8
  call void %960(i8* %963, i8* nonnull %108, i32 1) #9
  br label %964

964:                                              ; preds = %962, %958, %954
  store i32 0, i32* %109, align 4
  store i64 0, i64* %107, align 8
  br label %965

965:                                              ; preds = %964, %951
  %966 = icmp eq i64 %147, 1
  %967 = and i1 %99, %966
  br i1 %967, label %968, label %1000

968:                                              ; preds = %965
  %969 = load i8*, i8** %223, align 8
  %970 = load i8, i8* %969, align 1
  switch i8 %970, label %971 [
    i8 60, label %1197
    i8 38, label %1197
  ]

971:                                              ; preds = %968
  %972 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %973 = icmp eq %struct._xmlSAXHandler* %972, null
  br i1 %973, label %997, label %974

974:                                              ; preds = %971
  store i8 %970, i8* %108, align 2
  switch i8 %970, label %990 [
    i8 32, label %975
    i8 13, label %975
    i8 10, label %975
    i8 9, label %975
  ]

975:                                              ; preds = %974, %974, %974, %974
  %976 = load i32, i32* %110, align 8
  %977 = icmp eq i32 %976, 0
  br i1 %977, label %984, label %978

978:                                              ; preds = %975
  %979 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %972, i64 0, i32 17
  %980 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %979, align 8
  %981 = icmp eq void (i8*, i8*, i32)* %980, null
  br i1 %981, label %997, label %982

982:                                              ; preds = %978
  %983 = load i8*, i8** %102, align 8
  call void %980(i8* %983, i8* nonnull %108, i32 1) #9
  br label %997

984:                                              ; preds = %975
  %985 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %972, i64 0, i32 18
  %986 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %985, align 8
  %987 = icmp eq void (i8*, i8*, i32)* %986, null
  br i1 %987, label %997, label %988

988:                                              ; preds = %984
  %989 = load i8*, i8** %102, align 8
  call void %986(i8* %989, i8* nonnull %108, i32 1) #9
  br label %997

990:                                              ; preds = %974
  call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0) #9
  %991 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %992 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %991, i64 0, i32 17
  %993 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %992, align 8
  %994 = icmp eq void (i8*, i8*, i32)* %993, null
  br i1 %994, label %997, label %995

995:                                              ; preds = %990
  %996 = load i8*, i8** %102, align 8
  call void %993(i8* %996, i8* nonnull %108, i32 1) #9
  br label %997

997:                                              ; preds = %995, %990, %988, %984, %982, %978, %971
  store i32 0, i32* %109, align 4
  store i64 0, i64* %107, align 8
  %998 = load i8*, i8** %223, align 8
  %999 = getelementptr inbounds i8, i8* %998, i64 1
  store i8* %999, i8** %223, align 8
  br label %1196

1000:                                             ; preds = %965
  %1001 = icmp slt i64 %147, 2
  br i1 %1001, label %1197, label %1002

1002:                                             ; preds = %1000
  %1003 = load i8*, i8** %223, align 8
  %1004 = load i8, i8* %1003, align 1
  %1005 = getelementptr inbounds i8, i8* %1003, i64 1
  %1006 = load i8, i8* %1005, align 1
  %1007 = load i8*, i8** %103, align 8
  %1008 = call i32 @xmlStrEqual(i8* %1007, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i64 0, i64 0)) #9
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1010, label %1014

1010:                                             ; preds = %1002
  %1011 = load i8*, i8** %103, align 8
  %1012 = call i32 @xmlStrEqual(i8* %1011, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i64 0, i64 0)) #9
  %1013 = icmp eq i32 %1012, 0
  br i1 %1013, label %1030, label %1014

1014:                                             ; preds = %1010, %1002
  br i1 %99, label %1025, label %1015

1015:                                             ; preds = %1014
  %1016 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 60, i8 zeroext 47, i32 0) #9
  %1017 = icmp slt i32 %1016, 0
  br i1 %1017, label %1197, label %1018

1018:                                             ; preds = %1015
  %1019 = load i8*, i8** %223, align 8
  %1020 = add nuw nsw i32 %1016, 2
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds i8, i8* %1019, i64 %1021
  %1023 = load i8, i8* %1022, align 1
  %1024 = icmp eq i8 %1023, 0
  br i1 %1024, label %1197, label %1025

1025:                                             ; preds = %1018, %1014
  call fastcc void @htmlParseScript(%struct._xmlParserCtxt* %0) #9
  %1026 = icmp eq i8 %1004, 60
  %1027 = icmp eq i8 %1006, 47
  %1028 = and i1 %1026, %1027
  br i1 %1028, label %1029, label %1196

1029:                                             ; preds = %1025
  store i32 9, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1196

1030:                                             ; preds = %1010
  %1031 = icmp eq i8 %1004, 60
  %1032 = icmp eq i8 %1006, 33
  %1033 = and i1 %1031, %1032
  br i1 %1033, label %1034, label %1135

1034:                                             ; preds = %1030
  %1035 = tail call i32** @__ctype_toupper_loc() #11
  %1036 = load i32*, i32** %1035, align 8
  %1037 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %1038 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %1037, i64 0, i32 4
  %1039 = load i8*, i8** %1038, align 8
  %1040 = getelementptr inbounds i8, i8* %1039, i64 2
  %1041 = load i8, i8* %1040, align 1
  %1042 = zext i8 %1041 to i64
  %1043 = getelementptr inbounds i32, i32* %1036, i64 %1042
  %1044 = load i32, i32* %1043, align 4
  %1045 = icmp eq i32 %1044, 68
  %1046 = ptrtoint i8* %1039 to i64
  br i1 %1045, label %1047, label %1094

1047:                                             ; preds = %1034
  %1048 = getelementptr inbounds i8, i8* %1039, i64 3
  %1049 = load i8, i8* %1048, align 1
  %1050 = zext i8 %1049 to i64
  %1051 = getelementptr inbounds i32, i32* %1036, i64 %1050
  %1052 = load i32, i32* %1051, align 4
  %1053 = icmp eq i32 %1052, 79
  br i1 %1053, label %1054, label %1094

1054:                                             ; preds = %1047
  %1055 = getelementptr inbounds i8, i8* %1039, i64 4
  %1056 = load i8, i8* %1055, align 1
  %1057 = zext i8 %1056 to i64
  %1058 = getelementptr inbounds i32, i32* %1036, i64 %1057
  %1059 = load i32, i32* %1058, align 4
  %1060 = icmp eq i32 %1059, 67
  br i1 %1060, label %1061, label %1094

1061:                                             ; preds = %1054
  %1062 = getelementptr inbounds i8, i8* %1039, i64 5
  %1063 = load i8, i8* %1062, align 1
  %1064 = zext i8 %1063 to i64
  %1065 = getelementptr inbounds i32, i32* %1036, i64 %1064
  %1066 = load i32, i32* %1065, align 4
  %1067 = icmp eq i32 %1066, 84
  br i1 %1067, label %1068, label %1094

1068:                                             ; preds = %1061
  %1069 = getelementptr inbounds i8, i8* %1039, i64 6
  %1070 = load i8, i8* %1069, align 1
  %1071 = zext i8 %1070 to i64
  %1072 = getelementptr inbounds i32, i32* %1036, i64 %1071
  %1073 = load i32, i32* %1072, align 4
  %1074 = icmp eq i32 %1073, 89
  br i1 %1074, label %1075, label %1094

1075:                                             ; preds = %1068
  %1076 = getelementptr inbounds i8, i8* %1039, i64 7
  %1077 = load i8, i8* %1076, align 1
  %1078 = zext i8 %1077 to i64
  %1079 = getelementptr inbounds i32, i32* %1036, i64 %1078
  %1080 = load i32, i32* %1079, align 4
  %1081 = icmp eq i32 %1080, 80
  br i1 %1081, label %1082, label %1094

1082:                                             ; preds = %1075
  %1083 = getelementptr inbounds i8, i8* %1039, i64 8
  %1084 = load i8, i8* %1083, align 1
  %1085 = zext i8 %1084 to i64
  %1086 = getelementptr inbounds i32, i32* %1036, i64 %1085
  %1087 = load i32, i32* %1086, align 4
  %1088 = icmp eq i32 %1087, 69
  br i1 %1088, label %1089, label %1094

1089:                                             ; preds = %1082
  br i1 %99, label %1093, label %1090

1090:                                             ; preds = %1089
  %1091 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 1) #9
  %1092 = icmp slt i32 %1091, 0
  br i1 %1092, label %1197, label %1093

1093:                                             ; preds = %1090, %1089
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 800, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.849, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.850, i64 0, i64 0), i8* null) #9
  call fastcc void @htmlParseDocTypeDecl(%struct._xmlParserCtxt* %0) #9
  br label %1196

1094:                                             ; preds = %1082, %1075, %1068, %1061, %1054, %1047, %1034
  %1095 = load i8*, i8** %223, align 8
  %1096 = getelementptr inbounds i8, i8* %1095, i64 2
  %1097 = load i8, i8* %1096, align 1
  %1098 = icmp eq i8 %1097, 45
  br i1 %1098, label %1099, label %1143

1099:                                             ; preds = %1094
  %1100 = getelementptr inbounds i8, i8* %1095, i64 3
  %1101 = load i8, i8* %1100, align 1
  %1102 = icmp eq i8 %1101, 45
  br i1 %1102, label %1103, label %1143

1103:                                             ; preds = %1099
  br i1 %99, label %1134, label %1104

1104:                                             ; preds = %1103
  %1105 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %1037, i64 0, i32 3
  %1106 = bitcast i8** %1105 to i64*
  %1107 = load i64, i64* %1106, align 8
  %1108 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 45, i8 zeroext 45, i32 0) #9
  %1109 = icmp slt i32 %1108, 0
  br i1 %1109, label %1197, label %1110

1110:                                             ; preds = %1104
  %1111 = sub i64 %1046, %1107
  %1112 = trunc i64 %1111 to i32
  %1113 = add i32 %1112, 1
  br label %1114

1114:                                             ; preds = %1129, %1110
  %1115 = phi i32 [ %1108, %1110 ], [ %1132, %1129 ]
  %1116 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  %1117 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %1116, i64 0, i32 4
  %1118 = load i8*, i8** %1117, align 8
  %1119 = add nuw nsw i32 %1115, 2
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds i8, i8* %1118, i64 %1120
  %1122 = load i8, i8* %1121, align 1
  switch i8 %1122, label %1129 [
    i8 62, label %1134
    i8 33, label %1123
  ]

1123:                                             ; preds = %1114
  %1124 = add nuw nsw i32 %1115, 3
  %1125 = sext i32 %1124 to i64
  %1126 = getelementptr inbounds i8, i8* %1118, i64 %1125
  %1127 = load i8, i8* %1126, align 1
  %1128 = icmp eq i8 %1127, 62
  br i1 %1128, label %1134, label %1129

1129:                                             ; preds = %1123, %1114
  %1130 = add i32 %1113, %1115
  %1131 = sext i32 %1130 to i64
  store i64 %1131, i64* %107, align 8
  %1132 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 45, i8 zeroext 45, i32 0) #9
  %1133 = icmp slt i32 %1132, 0
  br i1 %1133, label %1197, label %1114

1134:                                             ; preds = %1123, %1114, %1103
  call fastcc void @htmlParseComment(%struct._xmlParserCtxt* %0) #9
  store i32 7, i32* %106, align 8
  br label %1196

1135:                                             ; preds = %1030
  %1136 = icmp eq i8 %1006, 63
  %1137 = and i1 %1031, %1136
  br i1 %1137, label %1138, label %1143

1138:                                             ; preds = %1135
  br i1 %99, label %1142, label %1139

1139:                                             ; preds = %1138
  %1140 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 0) #9
  %1141 = icmp slt i32 %1140, 0
  br i1 %1141, label %1197, label %1142

1142:                                             ; preds = %1139, %1138
  call fastcc void @htmlParsePI(%struct._xmlParserCtxt* %0) #9
  store i32 7, i32* %106, align 8
  br label %1196

1143:                                             ; preds = %1135, %1099, %1094
  br i1 %1031, label %1144, label %1170

1144:                                             ; preds = %1143
  %1145 = icmp slt i64 %147, 4
  %1146 = and i1 %1145, %1032
  br i1 %1146, label %1197, label %1147

1147:                                             ; preds = %1144
  %1148 = icmp eq i8 %1006, 47
  br i1 %1148, label %1149, label %1150

1149:                                             ; preds = %1147
  store i32 9, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1196

1150:                                             ; preds = %1147
  %1151 = icmp eq i8 %1006, 0
  %1152 = and i1 %1151, %120
  br i1 %1152, label %1197, label %1153

1153:                                             ; preds = %1150
  %1154 = and i8 %1006, -33
  %1155 = add i8 %1154, -65
  %1156 = icmp ult i8 %1155, 26
  br i1 %1156, label %1158, label %1157

1157:                                             ; preds = %1153
  switch i8 %1006, label %1159 [
    i8 95, label %1158
    i8 58, label %1158
    i8 46, label %1158
  ]

1158:                                             ; preds = %1157, %1157, %1157, %1153
  store i32 6, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1196

1159:                                             ; preds = %1157
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 68, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.879, i64 0, i64 0), i8* null, i8* null) #9
  call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0) #9
  %1160 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %101, align 8
  %1161 = icmp eq %struct._xmlSAXHandler* %1160, null
  br i1 %1161, label %1169, label %1162

1162:                                             ; preds = %1159
  %1163 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %1160, i64 0, i32 17
  %1164 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %1163, align 8
  %1165 = icmp eq void (i8*, i8*, i32)* %1164, null
  br i1 %1165, label %1169, label %1166

1166:                                             ; preds = %1162
  %1167 = load i8*, i8** %102, align 8
  %1168 = load i8*, i8** %223, align 8
  call void %1164(i8* %1167, i8* %1168, i32 1) #9
  br label %1169

1169:                                             ; preds = %1166, %1162, %1159
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %1196

1170:                                             ; preds = %1143
  br i1 %99, label %1174, label %1171

1171:                                             ; preds = %1170
  %1172 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 60, i8 zeroext 0, i32 0) #9
  %1173 = icmp slt i32 %1172, 0
  br i1 %1173, label %1197, label %1174

1174:                                             ; preds = %1171, %1170
  store i64 0, i64* %107, align 8
  %1175 = load i32, i32* %106, align 8
  %1176 = icmp eq i32 %1175, -1
  br i1 %1176, label %1196, label %1177

1177:                                             ; preds = %1174
  %1178 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %126, i64 0, i32 5
  %1179 = load i8*, i8** %223, align 8
  br label %1180

1180:                                             ; preds = %1189, %1177
  %1181 = phi i8* [ %1179, %1177 ], [ %1190, %1189 ]
  %1182 = phi i8 [ %1004, %1177 ], [ %1191, %1189 ]
  %1183 = load i8*, i8** %1178, align 8
  %1184 = icmp ult i8* %1181, %1183
  br i1 %1184, label %1185, label %1196

1185:                                             ; preds = %1180
  %1186 = icmp eq i8 %1182, 38
  br i1 %1186, label %1187, label %1188

1187:                                             ; preds = %1185
  call fastcc void @htmlParseReference(%struct._xmlParserCtxt* %0) #9
  br label %1189

1188:                                             ; preds = %1185
  call fastcc void @htmlParseCharDataInternal(%struct._xmlParserCtxt* %0, i32 0) #9
  br label %1189

1189:                                             ; preds = %1188, %1187
  %1190 = load i8*, i8** %223, align 8
  %1191 = load i8, i8* %1190, align 1
  %1192 = load i32, i32* %106, align 8
  %1193 = icmp eq i32 %1192, -1
  %1194 = icmp eq i8 %1191, 60
  %1195 = or i1 %1194, %1193
  br i1 %1195, label %1196, label %1180

1196:                                             ; preds = %1189, %1180, %1174, %1169, %1158, %1149, %1142, %1134, %1093, %1029, %1025, %997
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %108) #9
  br label %1220

1197:                                             ; preds = %1171, %1150, %1144, %1139, %1104, %1090, %1018, %1015, %1000, %968, %968, %1129
  %1198 = phi i64 [ %147, %1129 ], [ %147, %1171 ], [ %147, %1150 ], [ %147, %1144 ], [ %147, %1139 ], [ %147, %1104 ], [ %147, %1090 ], [ %147, %1018 ], [ %147, %1015 ], [ 1, %1000 ], [ 1, %968 ], [ 1, %968 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %108) #9
  br label %1231

1199:                                             ; preds = %221
  %1200 = icmp slt i64 %147, 2
  br i1 %1200, label %1299, label %1201

1201:                                             ; preds = %1199
  br i1 %99, label %1205, label %1202

1202:                                             ; preds = %1201
  %1203 = call fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* %0, i8 zeroext 62, i8 zeroext 0, i32 0) #9
  %1204 = icmp slt i32 %1203, 0
  br i1 %1204, label %1299, label %1205

1205:                                             ; preds = %1202, %1201
  %1206 = call fastcc i32 @htmlParseEndTag(%struct._xmlParserCtxt* %0) #9
  %1207 = load i32, i32* %100, align 8
  %1208 = icmp eq i32 %1207, 0
  %1209 = select i1 %1208, i32 14, i32 7
  store i32 %1209, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1210:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.880, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1211:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.881, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1212:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.882, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1213:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.883, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1214:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.884, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1215:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.885, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1216:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.886, i64 0, i64 0), i8* null, i8* null) #9
  store i32 6, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1217:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.887, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1218:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.888, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1219:                                             ; preds = %221
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.889, i64 0, i64 0), i8* null, i8* null) #9
  store i32 7, i32* %106, align 8
  store i64 0, i64* %107, align 8
  br label %1220

1220:                                             ; preds = %1219, %1218, %1217, %1216, %1215, %1214, %1213, %1212, %1211, %1210, %1205, %1196, %950, %872, %801, %735, %698, %695, %669, %661, %577, %572, %564, %487, %483, %424, %415, %335, %334, %221
  %1221 = phi i64 [ %124, %698 ], [ %722, %735 ], [ %722, %801 ], [ %722, %950 ], [ %722, %872 ], [ %124, %695 ], [ %124, %1196 ], [ %124, %335 ], [ %124, %334 ], [ %124, %487 ], [ %124, %483 ], [ %124, %424 ], [ %124, %415 ], [ %124, %577 ], [ %124, %572 ], [ %124, %564 ], [ %124, %669 ], [ %124, %661 ], [ %124, %1205 ], [ %124, %1210 ], [ %124, %1211 ], [ %124, %1212 ], [ %124, %1213 ], [ %124, %1214 ], [ %124, %1215 ], [ %124, %1216 ], [ %124, %1217 ], [ %124, %1218 ], [ %124, %1219 ], [ %124, %221 ]
  %1222 = phi i64 [ %123, %698 ], [ %723, %735 ], [ %723, %801 ], [ %723, %950 ], [ %723, %872 ], [ %123, %695 ], [ %123, %1196 ], [ %123, %335 ], [ %123, %334 ], [ %123, %487 ], [ %123, %483 ], [ %123, %424 ], [ %123, %415 ], [ %123, %577 ], [ %123, %572 ], [ %123, %564 ], [ %123, %669 ], [ %123, %661 ], [ %123, %1205 ], [ %123, %1210 ], [ %123, %1211 ], [ %123, %1212 ], [ %123, %1213 ], [ %123, %1214 ], [ %123, %1215 ], [ %123, %1216 ], [ %123, %1217 ], [ %123, %1218 ], [ %123, %1219 ], [ %123, %221 ]
  %1223 = phi i64 [ %147, %698 ], [ %147, %735 ], [ %147, %801 ], [ %147, %950 ], [ %147, %872 ], [ %147, %695 ], [ %147, %1196 ], [ %247, %335 ], [ %247, %334 ], [ %359, %487 ], [ %359, %483 ], [ %359, %424 ], [ %359, %415 ], [ %511, %577 ], [ %511, %572 ], [ %511, %564 ], [ %605, %669 ], [ %605, %661 ], [ %147, %1205 ], [ %147, %1210 ], [ %147, %1211 ], [ %147, %1212 ], [ %147, %1213 ], [ %147, %1214 ], [ %147, %1215 ], [ %147, %1216 ], [ %147, %1217 ], [ %147, %1218 ], [ %147, %1219 ], [ %147, %221 ]
  %1224 = load %struct._xmlParserInput*, %struct._xmlParserInput** %8, align 8
  br label %1225

1225:                                             ; preds = %1220, %729
  %1226 = phi %struct._xmlParserInput* [ %1224, %1220 ], [ %730, %729 ]
  %1227 = phi i64 [ %1221, %1220 ], [ %722, %729 ]
  %1228 = phi i64 [ %1222, %1220 ], [ %723, %729 ]
  %1229 = phi i64 [ %1223, %1220 ], [ %147, %729 ]
  %1230 = icmp eq %struct._xmlParserInput* %1226, null
  br i1 %1230, label %1231, label %121

1231:                                             ; preds = %1225, %603, %505, %353, %203, %656, %559, %410, %1197, %95
  %1232 = phi i64 [ %1198, %1197 ], [ 0, %95 ], [ %359, %410 ], [ %511, %559 ], [ %605, %656 ], [ %147, %203 ], [ %359, %353 ], [ %511, %505 ], [ %605, %603 ], [ %1229, %1225 ]
  %1233 = icmp eq i64 %1232, 0
  %1234 = icmp ne i32 %3, 0
  %1235 = and i1 %1234, %1233
  br i1 %1235, label %1236, label %1299

1236:                                             ; preds = %1231
  %1237 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %1238 = load i32, i32* %1237, align 8
  %1239 = icmp sgt i32 %1238, 0
  br i1 %1239, label %1240, label %1281

1240:                                             ; preds = %1236
  %1241 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %1242 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %1243 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %1244 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %1245 = bitcast i8** %1243 to i64*
  br label %1246

1246:                                             ; preds = %1277, %1240
  %1247 = phi i32 [ %1238, %1240 ], [ %1248, %1277 ]
  %1248 = add nsw i32 %1247, -1
  %1249 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %1241, align 8
  %1250 = icmp eq %struct._xmlSAXHandler* %1249, null
  br i1 %1250, label %1258, label %1251

1251:                                             ; preds = %1246
  %1252 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %1249, i64 0, i32 15
  %1253 = load void (i8*, i8*)*, void (i8*, i8*)** %1252, align 8
  %1254 = icmp eq void (i8*, i8*)* %1253, null
  br i1 %1254, label %1258, label %1255

1255:                                             ; preds = %1251
  %1256 = load i8*, i8** %1242, align 8
  %1257 = load i8*, i8** %1243, align 8
  call void %1253(i8* %1256, i8* %1257) #9
  br label %1258

1258:                                             ; preds = %1255, %1251, %1246
  %1259 = load i32, i32* %1237, align 8
  %1260 = icmp slt i32 %1259, 1
  br i1 %1260, label %1277, label %1261

1261:                                             ; preds = %1258
  %1262 = add nsw i32 %1259, -1
  store i32 %1262, i32* %1237, align 8
  %1263 = icmp sgt i32 %1262, 0
  br i1 %1263, label %1264, label %1271

1264:                                             ; preds = %1261
  %1265 = load i8**, i8*** %1244, align 8
  %1266 = add nsw i32 %1259, -2
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds i8*, i8** %1265, i64 %1267
  %1269 = bitcast i8** %1268 to i64*
  %1270 = load i64, i64* %1269, align 8
  store i64 %1270, i64* %1245, align 8
  br label %1273

1271:                                             ; preds = %1261
  store i8* null, i8** %1243, align 8
  %1272 = load i8**, i8*** %1244, align 8
  br label %1273

1273:                                             ; preds = %1271, %1264
  %1274 = phi i8** [ %1272, %1271 ], [ %1265, %1264 ]
  %1275 = sext i32 %1262 to i64
  %1276 = getelementptr inbounds i8*, i8** %1274, i64 %1275
  store i8* null, i8** %1276, align 8
  br label %1277

1277:                                             ; preds = %1273, %1258
  %1278 = icmp sgt i32 %1248, 0
  br i1 %1278, label %1246, label %1279

1279:                                             ; preds = %1277
  %1280 = load i32, i32* %1237, align 8
  br label %1281

1281:                                             ; preds = %1279, %1236
  %1282 = phi i32 [ %1280, %1279 ], [ %1238, %1236 ]
  %1283 = icmp eq i32 %1282, 0
  br i1 %1283, label %1284, label %1299

1284:                                             ; preds = %1281
  %1285 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %1286 = load i32, i32* %1285, align 8
  %1287 = icmp eq i32 %1286, -1
  br i1 %1287, label %1299, label %1288

1288:                                             ; preds = %1284
  store i32 -1, i32* %1285, align 8
  %1289 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %1290 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %1289, align 8
  %1291 = icmp eq %struct._xmlSAXHandler* %1290, null
  br i1 %1291, label %1299, label %1292

1292:                                             ; preds = %1288
  %1293 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %1290, i64 0, i32 13
  %1294 = load void (i8*)*, void (i8*)** %1293, align 8
  %1295 = icmp eq void (i8*)* %1294, null
  br i1 %1295, label %1299, label %1296

1296:                                             ; preds = %1292
  %1297 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %1298 = load i8*, i8** %1297, align 8
  call void %1294(i8* %1298) #9
  br label %1299

1299:                                             ; preds = %1202, %1199, %700, %688, %666, %627, %610, %573, %569, %530, %484, %480, %421, %381, %364, %331, %221, %210, %1296, %1292, %1288, %1284, %1281, %1231, %684, %680, %676, %670, %609
  %1300 = phi i1 [ true, %1292 ], [ true, %1288 ], [ true, %1284 ], [ true, %1281 ], [ true, %1296 ], [ %1234, %1231 ], [ %99, %670 ], [ %99, %609 ], [ %99, %684 ], [ %99, %680 ], [ %99, %676 ], [ %99, %210 ], [ false, %688 ], [ false, %700 ], [ %99, %573 ], [ %99, %1199 ], [ false, %1202 ], [ %99, %610 ], [ false, %666 ], [ false, %569 ], [ false, %421 ], [ false, %480 ], [ %99, %484 ], [ false, %364 ], [ %99, %221 ], [ false, %331 ], [ false, %381 ], [ false, %530 ], [ false, %627 ]
  %1301 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %1302 = load i32, i32* %1301, align 4
  %1303 = and i32 %1302, 4
  %1304 = icmp eq i32 %1303, 0
  br i1 %1304, label %1305, label %1321

1305:                                             ; preds = %1299
  %1306 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 2
  %1307 = load %struct._xmlDoc*, %struct._xmlDoc** %1306, align 8
  %1308 = icmp eq %struct._xmlDoc* %1307, null
  br i1 %1308, label %1321, label %1309

1309:                                             ; preds = %1305
  br i1 %1300, label %1313, label %1310

1310:                                             ; preds = %1309
  %1311 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %1312 = load i32, i32* %1311, align 8
  switch i32 %1312, label %1321 [
    i32 -1, label %1313
    i32 14, label %1313
  ]

1313:                                             ; preds = %1310, %1310, %1309
  %1314 = call %struct._xmlDtd* @xmlGetIntSubset(%struct._xmlDoc* nonnull %1307) #9
  %1315 = icmp eq %struct._xmlDtd* %1314, null
  br i1 %1315, label %1316, label %1321

1316:                                             ; preds = %1313
  %1317 = load %struct._xmlDoc*, %struct._xmlDoc** %1306, align 8
  %1318 = call %struct._xmlDtd* @xmlCreateIntSubset(%struct._xmlDoc* %1317, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0)) #9
  %1319 = load %struct._xmlDoc*, %struct._xmlDoc** %1306, align 8
  %1320 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %1319, i64 0, i32 11
  store %struct._xmlDtd* %1318, %struct._xmlDtd** %1320, align 8
  br label %1321

1321:                                             ; preds = %1299, %1305, %1310, %1313, %1316
  %1322 = icmp eq i32 %3, 0
  br i1 %1322, label %1341, label %1323

1323:                                             ; preds = %1321
  %1324 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %1325 = load i32, i32* %1324, align 8
  switch i32 %1325, label %1326 [
    i32 -1, label %1340
    i32 1, label %1329
    i32 14, label %1329
  ]

1326:                                             ; preds = %1323
  %1327 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 5, i32* %1327, align 8
  %1328 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 0, i32* %1328, align 8
  br label %1329

1329:                                             ; preds = %1323, %1323, %1326
  %1330 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %1331 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %1330, align 8
  %1332 = icmp eq %struct._xmlSAXHandler* %1331, null
  br i1 %1332, label %1340, label %1333

1333:                                             ; preds = %1329
  %1334 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %1331, i64 0, i32 13
  %1335 = load void (i8*)*, void (i8*)** %1334, align 8
  %1336 = icmp eq void (i8*)* %1335, null
  br i1 %1336, label %1340, label %1337

1337:                                             ; preds = %1333
  %1338 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %1339 = load i8*, i8** %1338, align 8
  call void %1335(i8* %1339) #9
  br label %1340

1340:                                             ; preds = %1323, %1333, %1329, %1337
  store i32 -1, i32* %1324, align 8
  br label %1341

1341:                                             ; preds = %1321, %1340
  %1342 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  %1343 = load i32, i32* %1342, align 8
  br label %1344

1344:                                             ; preds = %91, %88, %46, %1341, %11
  %1345 = phi i32 [ 1, %11 ], [ %1343, %1341 ], [ -1, %46 ], [ 81, %88 ], [ 81, %91 ]
  ret i32 %1345
}

declare i64 @xmlBufGetInputBase(%struct._xmlBuf*, %struct._xmlParserInput*) local_unnamed_addr #3

declare i32 @xmlParserInputBufferPush(%struct._xmlParserInputBuffer*, i32, i8*) local_unnamed_addr #3

declare i32 @xmlBufSetInputBaseCur(%struct._xmlBuf*, %struct._xmlParserInput*, i64, i64) local_unnamed_addr #3

declare i32 @xmlCharEncInput(%struct._xmlParserInputBuffer*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserCtxt* @htmlCreatePushParserCtxt(%struct._xmlSAXHandler* readonly, i8*, i8*, i32, i8*, i32) local_unnamed_addr #1 {
  tail call void @xmlInitParser() #9
  %7 = tail call %struct._xmlParserInputBuffer* @xmlAllocParserInputBuffer(i32 %5) #9
  %8 = icmp eq %struct._xmlParserInputBuffer* %7, null
  br i1 %8, label %126, label %9

9:                                                ; preds = %6
  %10 = tail call %struct._xmlParserCtxt* @htmlNewParserCtxt()
  %11 = icmp eq %struct._xmlParserCtxt* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  tail call void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer* nonnull %7) #9
  br label %126

13:                                               ; preds = %9
  %14 = icmp eq i32 %5, 1
  br i1 %14, label %19, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %7, i64 0, i32 3
  %17 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %16, align 8
  %18 = icmp eq %struct._xmlCharEncodingHandler* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15, %13
  %20 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 47
  store i32 1, i32* %20, align 8
  br label %21

21:                                               ; preds = %15, %19
  %22 = icmp eq %struct._xmlSAXHandler* %0, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 0
  %25 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %24, align 8
  %26 = icmp eq %struct._xmlSAXHandler* %25, bitcast (%struct._xmlSAXHandlerV1* @htmlDefaultSAXHandler to %struct._xmlSAXHandler*)
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %29 = bitcast %struct._xmlSAXHandler* %25 to i8*
  tail call void %28(i8* %29) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %32 = tail call i8* %31(i64 256) #9
  %33 = bitcast %struct._xmlParserCtxt* %10 to i8**
  store i8* %32, i8** %33, align 8
  %34 = icmp eq i8* %32, null
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %37 = bitcast %struct._xmlParserInputBuffer* %7 to i8*
  tail call void %36(i8* nonnull %37) #9
  %38 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %39 = bitcast %struct._xmlParserCtxt* %10 to i8*
  tail call void %38(i8* nonnull %39) #9
  br label %126

40:                                               ; preds = %30
  %41 = bitcast %struct._xmlSAXHandler* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %41, i64 256, i1 false)
  %42 = icmp eq i8* %1, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 1
  store i8* %1, i8** %44, align 8
  br label %45

45:                                               ; preds = %40, %21, %43
  %46 = icmp eq i8* %4, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = tail call i8* @xmlParserGetDirectory(i8* nonnull %4) #9
  br label %49

49:                                               ; preds = %45, %47
  %50 = phi i8* [ %48, %47 ], [ null, %45 ]
  %51 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 28
  store i8* %50, i8** %51, align 8
  %52 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %53 = tail call i8* %52(i64 104) #9
  %54 = icmp eq i8* %53, null
  br i1 %54, label %55, label %67

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 36
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 26
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %80, label %63

63:                                               ; preds = %55, %59
  %64 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 19
  store i32 2, i32* %64, align 8
  %65 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 26
  store i32 -1, i32* %65, align 8
  store i32 1, i32* %56, align 4
  %66 = bitcast %struct._xmlParserCtxt* %10 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %66, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([38 x i8], [38 x i8]* @.str.890, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([38 x i8], [38 x i8]* @.str.890, i64 0, i64 0)) #9
  br label %80

67:                                               ; preds = %49
  %68 = bitcast i8* %53 to %struct._xmlParserInput*
  %69 = bitcast i8* %53 to %struct._xmlParserInputBuffer**
  %70 = getelementptr inbounds i8, i8* %53, i64 52
  %71 = bitcast i8* %70 to i32*
  %72 = getelementptr inbounds i8, i8* %53, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 96, i1 false) #9
  store i32 1, i32* %71, align 4
  %73 = getelementptr inbounds i8, i8* %53, i64 56
  %74 = bitcast i8* %73 to i32*
  store i32 1, i32* %74, align 8
  store %struct._xmlParserInputBuffer* null, %struct._xmlParserInputBuffer** %69, align 8
  %75 = getelementptr inbounds i8, i8* %53, i64 88
  %76 = bitcast i8* %75 to i8**
  store i8* null, i8** %76, align 8
  %77 = getelementptr inbounds i8, i8* %53, i64 64
  %78 = getelementptr inbounds i8, i8* %53, i64 48
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #9
  br i1 %46, label %85, label %83

80:                                               ; preds = %63, %59
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %10) #9
  %81 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %82 = bitcast %struct._xmlParserInputBuffer* %7 to i8*
  tail call void %81(i8* nonnull %82) #9
  br label %126

83:                                               ; preds = %67
  %84 = tail call i8* @xmlCanonicPath(i8* nonnull %4) #9
  br label %85

85:                                               ; preds = %67, %83
  %86 = phi i8* [ %84, %83 ], [ null, %67 ]
  %87 = bitcast i8* %72 to i8**
  store i8* %86, i8** %87, align 8
  store %struct._xmlParserInputBuffer* %7, %struct._xmlParserInputBuffer** %69, align 8
  %88 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %7, i64 0, i32 4
  %89 = load %struct._xmlBuf*, %struct._xmlBuf** %88, align 8
  %90 = tail call i32 @xmlBufResetInput(%struct._xmlBuf* %89, %struct._xmlParserInput* nonnull %68) #9
  %91 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %10, %struct._xmlParserInput* nonnull %68) #9
  %92 = icmp sgt i32 %3, 0
  %93 = icmp ne i8* %2, null
  %94 = and i1 %93, %92
  br i1 %94, label %95, label %124

95:                                               ; preds = %85
  %96 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 9
  %97 = load %struct._xmlParserInput*, %struct._xmlParserInput** %96, align 8
  %98 = icmp eq %struct._xmlParserInput* %97, null
  br i1 %98, label %124, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %97, i64 0, i32 0
  %101 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %100, align 8
  %102 = icmp eq %struct._xmlParserInputBuffer* %101, null
  br i1 %102, label %124, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %101, i64 0, i32 4
  %105 = load %struct._xmlBuf*, %struct._xmlBuf** %104, align 8
  %106 = tail call i64 @xmlBufGetInputBase(%struct._xmlBuf* %105, %struct._xmlParserInput* nonnull %97) #9
  %107 = load %struct._xmlParserInput*, %struct._xmlParserInput** %96, align 8
  %108 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %107, i64 0, i32 4
  %109 = bitcast i8** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %107, i64 0, i32 3
  %112 = bitcast i8** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %110, %113
  %115 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %107, i64 0, i32 0
  %116 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %115, align 8
  %117 = tail call i32 @xmlParserInputBufferPush(%struct._xmlParserInputBuffer* %116, i32 %3, i8* nonnull %2) #9
  %118 = load %struct._xmlParserInput*, %struct._xmlParserInput** %96, align 8
  %119 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %118, i64 0, i32 0
  %120 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %119, align 8
  %121 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %120, i64 0, i32 4
  %122 = load %struct._xmlBuf*, %struct._xmlBuf** %121, align 8
  %123 = tail call i32 @xmlBufSetInputBaseCur(%struct._xmlBuf* %122, %struct._xmlParserInput* %118, i64 %106, i64 %114) #9
  br label %124

124:                                              ; preds = %99, %95, %103, %85
  %125 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %10, i64 0, i32 56
  store i32 1, i32* %125, align 4
  br label %126

126:                                              ; preds = %6, %124, %80, %35, %12
  %127 = phi %struct._xmlParserCtxt* [ null, %12 ], [ null, %35 ], [ null, %80 ], [ %10, %124 ], [ null, %6 ]
  ret %struct._xmlParserCtxt* %127
}

declare %struct._xmlParserInputBuffer* @xmlAllocParserInputBuffer(i32) local_unnamed_addr #3

declare void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer*) local_unnamed_addr #3

declare i8* @xmlParserGetDirectory(i8*) local_unnamed_addr #3

declare i8* @xmlCanonicPath(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlSAXParseDoc(i8*, i8*, %struct._xmlSAXHandler*, i8*) local_unnamed_addr #1 {
  tail call void @xmlInitParser() #9
  %5 = icmp eq i8* %0, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %4
  %7 = tail call fastcc %struct._xmlParserCtxt* @htmlCreateDocParserCtxt(i8* nonnull %0, i8* %1)
  %8 = icmp eq %struct._xmlParserCtxt* %7, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %6
  %10 = icmp eq %struct._xmlSAXHandler* %2, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %7, i64 0, i32 0
  %13 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %12, align 8
  %14 = icmp eq %struct._xmlSAXHandler* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %17 = bitcast %struct._xmlSAXHandler* %13 to i8*
  tail call void %16(i8* nonnull %17) #9
  br label %22

18:                                               ; preds = %9
  %19 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* nonnull %7)
  %20 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %7, i64 0, i32 2
  %21 = load %struct._xmlDoc*, %struct._xmlDoc** %20, align 8
  br label %28

22:                                               ; preds = %15, %11
  store %struct._xmlSAXHandler* %2, %struct._xmlSAXHandler** %12, align 8
  %23 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %7, i64 0, i32 1
  store i8* %3, i8** %23, align 8
  %24 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* nonnull %7)
  %25 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %7, i64 0, i32 2
  %26 = load %struct._xmlDoc*, %struct._xmlDoc** %25, align 8
  %27 = bitcast %struct._xmlParserCtxt* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false)
  br label %28

28:                                               ; preds = %18, %22
  %29 = phi %struct._xmlDoc* [ %26, %22 ], [ %21, %18 ]
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %7) #9
  br label %30

30:                                               ; preds = %6, %4, %28
  %31 = phi %struct._xmlDoc* [ %29, %28 ], [ null, %4 ], [ null, %6 ]
  ret %struct._xmlDoc* %31
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._xmlParserCtxt* @htmlCreateDocParserCtxt(i8*, i8*) unnamed_addr #1 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @xmlStrlen(i8* nonnull %0) #9
  %6 = tail call %struct._xmlParserCtxt* @htmlCreateMemoryParserCtxt(i8* nonnull %0, i32 %5)
  %7 = icmp eq %struct._xmlParserCtxt* %6, null
  br i1 %7, label %57, label %8

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null
  br i1 %9, label %57, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 9
  %12 = load %struct._xmlParserInput*, %struct._xmlParserInput** %11, align 8
  %13 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %12, i64 0, i32 11
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %17(i8* nonnull %14) #9
  br label %18

18:                                               ; preds = %10, %16
  %19 = tail call i8* @xmlStrdup(i8* nonnull %1) #9
  %20 = load %struct._xmlParserInput*, %struct._xmlParserInput** %11, align 8
  %21 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %20, i64 0, i32 11
  store i8* %19, i8** %21, align 8
  %22 = tail call i32 @xmlParseCharEncoding(i8* nonnull %1) #9
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %40, label %24

24:                                               ; preds = %18
  %25 = tail call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* nonnull %6, i32 %22) #9
  %26 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 19
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 32
  br i1 %28, label %29, label %57

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 36
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 26
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %57, label %37

37:                                               ; preds = %33, %29
  store i32 32, i32* %26, align 8
  %38 = bitcast %struct._xmlParserCtxt* %6 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %38, i8* null, i32 5, i32 32, i32 2, i8* null, i32 0, i8* nonnull %1, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.891, i64 0, i64 0), i8* nonnull %1, i8* null) #9
  %39 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 3
  store i32 0, i32* %39, align 8
  br label %57

40:                                               ; preds = %18
  %41 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %1) #9
  %42 = icmp eq %struct._xmlCharEncodingHandler* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = tail call i32 @xmlSwitchToEncoding(%struct._xmlParserCtxt* nonnull %6, %struct._xmlCharEncodingHandler* nonnull %41) #9
  br label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 36
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 26
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %49, %45
  %54 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 19
  store i32 32, i32* %54, align 8
  %55 = bitcast %struct._xmlParserCtxt* %6 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* nonnull %55, i8* null, i32 5, i32 32, i32 2, i8* null, i32 0, i8* nonnull %1, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.891, i64 0, i64 0), i8* nonnull %1, i8* null) #9
  %56 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 3
  store i32 0, i32* %56, align 8
  br label %57

57:                                               ; preds = %53, %49, %37, %33, %8, %43, %24, %4, %2
  %58 = phi %struct._xmlParserCtxt* [ null, %2 ], [ null, %4 ], [ %6, %24 ], [ %6, %43 ], [ %6, %8 ], [ %6, %33 ], [ %6, %37 ], [ %6, %49 ], [ %6, %53 ]
  ret %struct._xmlParserCtxt* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlParseDoc(i8*, i8*) local_unnamed_addr #1 {
  tail call void @xmlInitParser() #9
  %3 = icmp eq i8* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._xmlParserCtxt* @htmlCreateDocParserCtxt(i8* nonnull %0, i8* %1) #9
  %6 = icmp eq %struct._xmlParserCtxt* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* nonnull %5) #9
  %9 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %5, i64 0, i32 2
  %10 = load %struct._xmlDoc*, %struct._xmlDoc** %9, align 8
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %5) #9
  br label %11

11:                                               ; preds = %2, %4, %7
  %12 = phi %struct._xmlDoc* [ %10, %7 ], [ null, %2 ], [ null, %4 ]
  ret %struct._xmlDoc* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserCtxt* @htmlCreateFileParserCtxt(i8*, i8* readonly) local_unnamed_addr #1 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %54, label %4

4:                                                ; preds = %2
  %5 = tail call %struct._xmlParserCtxt* @htmlNewParserCtxt()
  %6 = icmp eq %struct._xmlParserCtxt* %5, null
  br i1 %6, label %54, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @xmlCanonicPath(i8* nonnull %0) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** getelementptr inbounds (%struct._xmlSAXHandlerV1, %struct._xmlSAXHandlerV1* @xmlDefaultSAXHandler, i64 0, i32 22), align 8
  %12 = icmp eq void (i8*, i8*, ...)* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void (i8*, i8*, ...) %11(i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #9
  br label %14

14:                                               ; preds = %10, %13
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %5) #9
  br label %54

15:                                               ; preds = %7
  %16 = tail call %struct._xmlParserInput* @xmlLoadExternalEntity(i8* nonnull %8, i8* null, %struct._xmlParserCtxt* nonnull %5) #9
  %17 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %17(i8* nonnull %8) #9
  %18 = icmp eq %struct._xmlParserInput* %16, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %5) #9
  br label %54

20:                                               ; preds = %15
  %21 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %5, %struct._xmlParserInput* nonnull %16) #9
  %22 = icmp eq i8* %1, null
  br i1 %22, label %54, label %23

23:                                               ; preds = %20
  %24 = tail call i64 @strlen(i8* nonnull %1) #10
  %25 = icmp ult i64 %24, 1000
  br i1 %25, label %26, label %54

26:                                               ; preds = %23
  %27 = load i8* (i64)*, i8* (i64)** @xmlMallocAtomic, align 8
  %28 = tail call i32 @xmlStrlen(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0)) #9
  %29 = sext i32 %28 to i64
  %30 = add nuw nsw i64 %24, 1
  %31 = add nsw i64 %30, %29
  %32 = tail call i8* %27(i64 %31) #9
  %33 = icmp eq i8* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %26
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i64 9, i1 false)
  %35 = tail call i8* @strcat(i8* nonnull %32, i8* nonnull %1) #9
  %36 = tail call i8* @xmlStrcasestr(i8* nonnull %32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.210, i64 0, i64 0)) #9
  %37 = icmp eq i8* %36, null
  %38 = getelementptr inbounds i8, i8* %36, i64 7
  br i1 %37, label %52, label %39

39:                                               ; preds = %34
  %40 = load i8, i8* %38, align 1
  switch i8 %40, label %46 [
    i8 32, label %41
    i8 13, label %41
    i8 10, label %41
    i8 9, label %41
  ]

41:                                               ; preds = %39, %39, %39, %39
  %42 = tail call i8* @xmlStrcasestr(i8* nonnull %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.892, i64 0, i64 0)) #9
  %43 = icmp eq i8* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %41
  %45 = load i8, i8* %42, align 1
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8 [ %45, %44 ], [ %40, %39 ]
  %48 = phi i8* [ %42, %44 ], [ %38, %39 ]
  %49 = icmp eq i8 %47, 61
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, i8* %48, i64 1
  tail call fastcc void @htmlCheckEncodingDirect(%struct._xmlParserCtxt* nonnull %5, i8* %51) #9
  br label %52

52:                                               ; preds = %34, %41, %46, %50
  %53 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %53(i8* nonnull %32) #9
  br label %54

54:                                               ; preds = %20, %26, %52, %23, %4, %2, %19, %14
  %55 = phi %struct._xmlParserCtxt* [ null, %14 ], [ null, %19 ], [ null, %2 ], [ null, %4 ], [ %5, %23 ], [ %5, %52 ], [ %5, %26 ], [ %5, %20 ]
  ret %struct._xmlParserCtxt* %55
}

declare %struct._xmlParserInput* @xmlLoadExternalEntity(i8*, i8*, %struct._xmlParserCtxt*) local_unnamed_addr #3

declare i32 @xmlStrlen(i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i8* @strcat(i8* returned, i8* nocapture readonly) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlSAXParseFile(i8*, i8*, %struct._xmlSAXHandler*, i8*) local_unnamed_addr #1 {
  tail call void @xmlInitParser() #9
  %5 = tail call %struct._xmlParserCtxt* @htmlCreateFileParserCtxt(i8* %0, i8* %1)
  %6 = icmp eq %struct._xmlParserCtxt* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %4
  %8 = icmp eq %struct._xmlSAXHandler* %2, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %7
  %10 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* nonnull %5)
  %11 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %5, i64 0, i32 2
  %12 = load %struct._xmlDoc*, %struct._xmlDoc** %11, align 8
  br label %21

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %5, i64 0, i32 0
  %15 = bitcast %struct._xmlParserCtxt* %5 to i64*
  %16 = load i64, i64* %15, align 8
  store %struct._xmlSAXHandler* %2, %struct._xmlSAXHandler** %14, align 8
  %17 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %5, i64 0, i32 1
  store i8* %3, i8** %17, align 8
  %18 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* nonnull %5)
  %19 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %5, i64 0, i32 2
  %20 = load %struct._xmlDoc*, %struct._xmlDoc** %19, align 8
  store i64 %16, i64* %15, align 8
  store i8* null, i8** %17, align 8
  br label %21

21:                                               ; preds = %9, %13
  %22 = phi %struct._xmlDoc* [ %20, %13 ], [ %12, %9 ]
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %5) #9
  br label %23

23:                                               ; preds = %4, %21
  %24 = phi %struct._xmlDoc* [ %22, %21 ], [ null, %4 ]
  ret %struct._xmlDoc* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlParseFile(i8*, i8*) local_unnamed_addr #1 {
  tail call void @xmlInitParser() #9
  %3 = tail call %struct._xmlParserCtxt* @htmlCreateFileParserCtxt(i8* %0, i8* %1) #9
  %4 = icmp eq %struct._xmlParserCtxt* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* nonnull %3) #9
  %7 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %3, i64 0, i32 2
  %8 = load %struct._xmlDoc*, %struct._xmlDoc** %7, align 8
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %3) #9
  br label %9

9:                                                ; preds = %2, %5
  %10 = phi %struct._xmlDoc* [ %8, %5 ], [ null, %2 ]
  ret %struct._xmlDoc* %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @htmlHandleOmittedElem(i32) local_unnamed_addr #7 {
  %2 = load i32, i32* @htmlOmittedDefaultValue, align 4
  store i32 %0, i32* @htmlOmittedDefaultValue, align 4
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlElementAllowedHere(%struct._htmlElemDesc* readonly, i8*) local_unnamed_addr #1 {
  %3 = icmp ne i8* %1, null
  %4 = icmp ne %struct._htmlElemDesc* %0, null
  %5 = and i1 %4, %3
  br i1 %5, label %6, label %22

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %0, i64 0, i32 9
  %8 = load i8**, i8*** %7, align 8
  %9 = icmp eq i8** %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %22, label %16

13:                                               ; preds = %16
  %14 = load i8*, i8** %21, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %10, %13
  %17 = phi i8* [ %14, %13 ], [ %11, %10 ]
  %18 = phi i8** [ %21, %13 ], [ %8, %10 ]
  %19 = tail call i32 @xmlStrcmp(i8* nonnull %17, i8* nonnull %1) #9
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds i8*, i8** %18, i64 1
  br i1 %20, label %22, label %13

22:                                               ; preds = %16, %13, %10, %2, %6
  %23 = phi i32 [ 0, %6 ], [ 0, %2 ], [ 0, %10 ], [ 1, %16 ], [ 0, %13 ]
  ret i32 %23
}

declare i32 @xmlStrcmp(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlElementStatusHere(%struct._htmlElemDesc* readonly, %struct._htmlElemDesc* readonly) local_unnamed_addr #1 {
  %3 = icmp ne %struct._htmlElemDesc* %0, null
  %4 = icmp ne %struct._htmlElemDesc* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %31

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %0, i64 0, i32 9
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp eq i8** %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %10
  %15 = load i8*, i8** %12, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %31, label %20

17:                                               ; preds = %20
  %18 = load i8*, i8** %25, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %14, %17
  %21 = phi i8* [ %18, %17 ], [ %15, %14 ]
  %22 = phi i8** [ %25, %17 ], [ %12, %14 ]
  %23 = tail call i32 @xmlStrcmp(i8* nonnull %21, i8* nonnull %8) #9
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds i8*, i8** %22, i64 1
  br i1 %24, label %26, label %17

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  %30 = select i1 %29, i32 4, i32 2
  br label %31

31:                                               ; preds = %17, %6, %14, %10, %2, %26
  %32 = phi i32 [ %30, %26 ], [ 1, %2 ], [ 1, %10 ], [ 1, %6 ], [ 1, %14 ], [ 1, %17 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlAttrAllowed(%struct._htmlElemDesc* readonly, i8*, i32) local_unnamed_addr #1 {
  %4 = icmp ne %struct._htmlElemDesc* %0, null
  %5 = icmp ne i8* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %57

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %0, i64 0, i32 13
  %9 = load i8**, i8*** %8, align 8
  %10 = icmp eq i8** %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = load i8*, i8** %9, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %23, label %17

14:                                               ; preds = %17
  %15 = load i8*, i8** %22, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %11, %14
  %18 = phi i8* [ %15, %14 ], [ %12, %11 ]
  %19 = phi i8** [ %22, %14 ], [ %9, %11 ]
  %20 = tail call i32 @xmlStrcmp(i8* nonnull %18, i8* nonnull %1) #9
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds i8*, i8** %19, i64 1
  br i1 %21, label %57, label %14

23:                                               ; preds = %14, %11, %7
  %24 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %0, i64 0, i32 11
  %25 = load i8**, i8*** %24, align 8
  %26 = icmp eq i8** %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = load i8*, i8** %25, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %39, label %33

30:                                               ; preds = %33
  %31 = load i8*, i8** %38, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %27, %30
  %34 = phi i8* [ %31, %30 ], [ %28, %27 ]
  %35 = phi i8** [ %38, %30 ], [ %25, %27 ]
  %36 = tail call i32 @xmlStrcmp(i8* nonnull %34, i8* nonnull %1) #9
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds i8*, i8** %35, i64 1
  br i1 %37, label %57, label %30

39:                                               ; preds = %30, %27, %23
  %40 = icmp eq i32 %2, 0
  br i1 %40, label %57, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %0, i64 0, i32 12
  %43 = load i8**, i8*** %42, align 8
  %44 = icmp eq i8** %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %41
  %46 = load i8*, i8** %43, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %57, label %51

48:                                               ; preds = %51
  %49 = load i8*, i8** %56, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %45, %48
  %52 = phi i8* [ %49, %48 ], [ %46, %45 ]
  %53 = phi i8** [ %56, %48 ], [ %43, %45 ]
  %54 = tail call i32 @xmlStrcmp(i8* nonnull %52, i8* nonnull %1) #9
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds i8*, i8** %53, i64 1
  br i1 %55, label %57, label %48

57:                                               ; preds = %17, %33, %51, %48, %45, %39, %41, %3
  %58 = phi i32 [ 1, %3 ], [ 1, %41 ], [ 1, %39 ], [ 1, %45 ], [ 2, %51 ], [ 1, %48 ], [ 4, %33 ], [ 12, %17 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlNodeStatus(%struct._xmlNode* readonly, i32) local_unnamed_addr #1 {
  %3 = icmp eq %struct._xmlNode* %0, null
  br i1 %3, label %132, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %132 [
    i32 1, label %7
    i32 2, label %103
  ]

7:                                                ; preds = %4
  %8 = icmp eq i32 %1, 0
  %9 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %0, i64 0, i32 5
  %10 = load %struct._xmlNode*, %struct._xmlNode** %9, align 8
  %11 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %10, i64 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %7, %28
  %15 = phi i64 [ %30, %28 ], [ 92, %7 ]
  %16 = phi i64 [ %29, %28 ], [ 0, %7 ]
  %17 = add i64 %16, %15
  %18 = lshr i64 %17, 1
  %19 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %18
  %20 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 16
  %22 = tail call i32 @xmlStrcasecmp(i8* nonnull %12, i8* %21) #9
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %14
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nuw i64 %18, 1
  br label %28

28:                                               ; preds = %26, %14
  %29 = phi i64 [ %27, %26 ], [ %16, %14 ]
  %30 = phi i64 [ %15, %26 ], [ %18, %14 ]
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %14, label %32

32:                                               ; preds = %24, %28, %7
  %33 = phi %struct._htmlElemDesc* [ null, %7 ], [ null, %28 ], [ %19, %24 ]
  %34 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %0, i64 0, i32 2
  %35 = load i8*, i8** %34, align 8
  br i1 %8, label %56, label %36

36:                                               ; preds = %32
  %37 = icmp ne i8* %35, null
  %38 = icmp ne %struct._htmlElemDesc* %33, null
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %132

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %33, i64 0, i32 9
  %42 = load i8**, i8*** %41, align 8
  %43 = icmp eq i8** %42, null
  br i1 %43, label %132, label %44

44:                                               ; preds = %40
  %45 = load i8*, i8** %42, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %132, label %50

47:                                               ; preds = %50
  %48 = load i8*, i8** %55, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %132, label %50

50:                                               ; preds = %44, %47
  %51 = phi i8* [ %48, %47 ], [ %45, %44 ]
  %52 = phi i8** [ %55, %47 ], [ %42, %44 ]
  %53 = tail call i32 @xmlStrcmp(i8* nonnull %51, i8* nonnull %35) #9
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds i8*, i8** %52, i64 1
  br i1 %54, label %132, label %47

56:                                               ; preds = %32
  %57 = icmp eq i8* %35, null
  br i1 %57, label %132, label %58

58:                                               ; preds = %56, %72
  %59 = phi i64 [ %74, %72 ], [ 92, %56 ]
  %60 = phi i64 [ %73, %72 ], [ 0, %56 ]
  %61 = add i64 %60, %59
  %62 = lshr i64 %61, 1
  %63 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %62
  %64 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %63, i64 0, i32 0
  %65 = load i8*, i8** %64, align 16
  %66 = tail call i32 @xmlStrcasecmp(i8* nonnull %35, i8* %65) #9
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %58
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %68
  %71 = add nuw i64 %62, 1
  br label %72

72:                                               ; preds = %70, %58
  %73 = phi i64 [ %71, %70 ], [ %60, %58 ]
  %74 = phi i64 [ %59, %70 ], [ %62, %58 ]
  %75 = icmp ult i64 %73, %74
  br i1 %75, label %58, label %132

76:                                               ; preds = %68
  %77 = icmp eq %struct._htmlElemDesc* %33, null
  %78 = icmp eq %struct._htmlElemDesc* %63, null
  %79 = or i1 %78, %77
  %80 = icmp eq i8* %65, null
  %81 = or i1 %79, %80
  br i1 %81, label %132, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %33, i64 0, i32 9
  %84 = load i8**, i8*** %83, align 8
  %85 = icmp eq i8** %84, null
  br i1 %85, label %132, label %86

86:                                               ; preds = %82
  %87 = load i8*, i8** %84, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %132, label %92

89:                                               ; preds = %92
  %90 = load i8*, i8** %97, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %132, label %92

92:                                               ; preds = %86, %89
  %93 = phi i8* [ %90, %89 ], [ %87, %86 ]
  %94 = phi i8** [ %97, %89 ], [ %84, %86 ]
  %95 = tail call i32 @xmlStrcmp(i8* nonnull %93, i8* nonnull %65) #9
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds i8*, i8** %94, i64 1
  br i1 %96, label %98, label %89

98:                                               ; preds = %92
  %99 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %62, i32 6
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %101, i32 4, i32 2
  br label %132

103:                                              ; preds = %4
  %104 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %0, i64 0, i32 5
  %105 = load %struct._xmlNode*, %struct._xmlNode** %104, align 8
  %106 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %105, i64 0, i32 2
  %107 = load i8*, i8** %106, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %127, label %109

109:                                              ; preds = %103, %123
  %110 = phi i64 [ %125, %123 ], [ 92, %103 ]
  %111 = phi i64 [ %124, %123 ], [ 0, %103 ]
  %112 = add i64 %111, %110
  %113 = lshr i64 %112, 1
  %114 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %113
  %115 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %114, i64 0, i32 0
  %116 = load i8*, i8** %115, align 16
  %117 = tail call i32 @xmlStrcasecmp(i8* nonnull %107, i8* %116) #9
  %118 = icmp slt i32 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %109
  %120 = icmp eq i32 %117, 0
  br i1 %120, label %127, label %121

121:                                              ; preds = %119
  %122 = add nuw i64 %113, 1
  br label %123

123:                                              ; preds = %121, %109
  %124 = phi i64 [ %122, %121 ], [ %111, %109 ]
  %125 = phi i64 [ %110, %121 ], [ %113, %109 ]
  %126 = icmp ult i64 %124, %125
  br i1 %126, label %109, label %127

127:                                              ; preds = %119, %123, %103
  %128 = phi %struct._htmlElemDesc* [ null, %103 ], [ null, %123 ], [ %114, %119 ]
  %129 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %0, i64 0, i32 2
  %130 = load i8*, i8** %129, align 8
  %131 = tail call i32 @htmlAttrAllowed(%struct._htmlElemDesc* %128, i8* %130, i32 %1)
  br label %132

132:                                              ; preds = %50, %47, %72, %89, %76, %56, %98, %86, %82, %40, %36, %44, %4, %2, %127
  %133 = phi i32 [ %131, %127 ], [ 1, %2 ], [ 0, %4 ], [ 1, %40 ], [ 1, %36 ], [ 1, %44 ], [ %102, %98 ], [ 1, %76 ], [ 1, %82 ], [ 1, %86 ], [ 1, %56 ], [ 1, %89 ], [ 1, %72 ], [ 1, %47 ], [ 4, %50 ]
  ret i32 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlCtxtReset(%struct._xmlParserCtxt*) local_unnamed_addr #1 {
  %2 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %2, label %136, label %3

3:                                                ; preds = %1
  tail call void @xmlInitParser() #9
  %4 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 57
  %5 = load %struct._xmlDict*, %struct._xmlDict** %4, align 8
  %6 = tail call %struct._xmlParserInput* @inputPop(%struct._xmlParserCtxt* nonnull %0) #9
  %7 = icmp eq %struct._xmlParserInput* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3, %8
  %9 = phi %struct._xmlParserInput* [ %10, %8 ], [ %6, %3 ]
  tail call void @xmlFreeInputStream(%struct._xmlParserInput* nonnull %9) #9
  %10 = tail call %struct._xmlParserInput* @inputPop(%struct._xmlParserCtxt* %0) #9
  %11 = icmp eq %struct._xmlParserInput* %10, null
  br i1 %11, label %12, label %8

12:                                               ; preds = %8, %3
  %13 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 10
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  store %struct._xmlParserInput* null, %struct._xmlParserInput** %14, align 8
  %15 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 42
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 44
  %17 = load i32*, i32** %16, align 8
  %18 = icmp eq i32* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  store i32 -1, i32* %17, align 4
  %20 = bitcast i32** %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 41
  %23 = bitcast i32** %22 to i64*
  store i64 %21, i64* %23, align 8
  br label %26

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 41
  store i32* null, i32** %25, align 8
  br label %26

26:                                               ; preds = %24, %19
  %27 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 14
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 13
  store %struct._xmlNode* null, %struct._xmlNode** %28, align 8
  %29 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  store i8* null, i8** %30, align 8
  %31 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 5
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %26
  %35 = icmp eq %struct._xmlDict* %5, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = tail call i32 @xmlDictOwns(%struct._xmlDict* nonnull %5, i8* nonnull %32) #9
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %36
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %39, %34
  %42 = phi i8* [ %40, %39 ], [ %32, %34 ]
  %43 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %43(i8* %42) #9
  br label %44

44:                                               ; preds = %26, %41, %36
  store i8* null, i8** %31, align 8
  %45 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 6
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = icmp eq %struct._xmlDict* %5, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = tail call i32 @xmlDictOwns(%struct._xmlDict* nonnull %5, i8* nonnull %46) #9
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  %54 = load i8*, i8** %45, align 8
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %46, %48 ]
  %57 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %57(i8* %56) #9
  br label %58

58:                                               ; preds = %44, %55, %50
  store i8* null, i8** %45, align 8
  %59 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 28
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = icmp eq %struct._xmlDict* %5, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  %65 = tail call i32 @xmlDictOwns(%struct._xmlDict* nonnull %5, i8* nonnull %60) #9
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %64
  %68 = load i8*, i8** %59, align 8
  br label %69

69:                                               ; preds = %67, %62
  %70 = phi i8* [ %68, %67 ], [ %60, %62 ]
  %71 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %71(i8* %70) #9
  br label %72

72:                                               ; preds = %58, %69, %64
  store i8* null, i8** %59, align 8
  %73 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 39
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %72
  %77 = icmp eq %struct._xmlDict* %5, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %76
  %79 = tail call i32 @xmlDictOwns(%struct._xmlDict* nonnull %5, i8* nonnull %74) #9
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %78
  %82 = load i8*, i8** %73, align 8
  br label %83

83:                                               ; preds = %81, %76
  %84 = phi i8* [ %82, %81 ], [ %74, %76 ]
  %85 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %85(i8* %84) #9
  br label %86

86:                                               ; preds = %72, %83, %78
  store i8* null, i8** %73, align 8
  %87 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 40
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %86
  %91 = icmp eq %struct._xmlDict* %5, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %90
  %93 = tail call i32 @xmlDictOwns(%struct._xmlDict* nonnull %5, i8* nonnull %88) #9
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %100

95:                                               ; preds = %92
  %96 = load i8*, i8** %87, align 8
  br label %97

97:                                               ; preds = %95, %90
  %98 = phi i8* [ %96, %95 ], [ %88, %90 ]
  %99 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %99(i8* %98) #9
  br label %100

100:                                              ; preds = %86, %97, %92
  store i8* null, i8** %87, align 8
  %101 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 2
  %102 = load %struct._xmlDoc*, %struct._xmlDoc** %101, align 8
  %103 = icmp eq %struct._xmlDoc* %102, null
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  tail call void @xmlFreeDoc(%struct._xmlDoc* nonnull %102) #9
  br label %105

105:                                              ; preds = %100, %104
  store %struct._xmlDoc* null, %struct._xmlDoc** %101, align 8
  %106 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 7
  store i32 -1, i32* %106, align 8
  %107 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 20
  %108 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 8
  store i32 1, i32* %108, align 4
  %109 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 0, i32* %109, align 8
  %110 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  store i32 0, i32* %110, align 4
  %111 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 3
  store i32 1, i32* %111, align 8
  %112 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 72
  store i32 1, i32* %112, align 8
  %113 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  store i32 0, i32* %113, align 4
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 25
  %116 = bitcast %struct._xmlValidCtxt* %115 to %struct._xmlParserCtxt**
  store %struct._xmlParserCtxt* %0, %struct._xmlParserCtxt** %116, align 8
  %117 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 25, i32 1
  %118 = bitcast void (i8*, i8*, ...)** %117 to <2 x void (i8*, i8*, ...)*>*
  store <2 x void (i8*, i8*, ...)*> <void (i8*, i8*, ...)* @xmlParserValidityError, void (i8*, i8*, ...)* @xmlParserValidityWarning>, <2 x void (i8*, i8*, ...)*>* %118, align 8
  %119 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 17
  store i32 0, i32* %119, align 8
  %120 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 34
  store i64 0, i64* %120, align 8
  %121 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 37
  store i32 0, i32* %121, align 8
  %122 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 45
  store i32 0, i32* %123, align 8
  %124 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 47
  store i32 0, i32* %124, align 8
  %125 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 54
  store i8* null, i8** %125, align 8
  %126 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 18
  tail call void @xmlInitNodeInfoSeq(%struct._xmlParserNodeInfoSeq* %126) #9
  %127 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 70
  %128 = load %struct._xmlHashTable*, %struct._xmlHashTable** %127, align 8
  %129 = icmp eq %struct._xmlHashTable* %128, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %105
  tail call void @xmlHashFree(%struct._xmlHashTable* nonnull %128, void (i8*, i8*)* nonnull @xmlHashDefaultDeallocator) #9
  store %struct._xmlHashTable* null, %struct._xmlHashTable** %127, align 8
  br label %131

131:                                              ; preds = %105, %130
  %132 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 71
  %133 = load %struct._xmlHashTable*, %struct._xmlHashTable** %132, align 8
  %134 = icmp eq %struct._xmlHashTable* %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %131
  tail call void @xmlHashFree(%struct._xmlHashTable* nonnull %133, void (i8*, i8*)* null) #9
  store %struct._xmlHashTable* null, %struct._xmlHashTable** %132, align 8
  br label %136

136:                                              ; preds = %135, %131, %1
  ret void
}

declare %struct._xmlParserInput* @inputPop(%struct._xmlParserCtxt*) local_unnamed_addr #3

declare void @xmlFreeInputStream(%struct._xmlParserInput*) local_unnamed_addr #3

declare i32 @xmlDictOwns(%struct._xmlDict*, i8*) local_unnamed_addr #3

declare void @xmlFreeDoc(%struct._xmlDoc*) local_unnamed_addr #3

declare void @xmlParserValidityError(i8*, i8*, ...) #3

declare void @xmlParserValidityWarning(i8*, i8*, ...) #3

declare void @xmlInitNodeInfoSeq(%struct._xmlParserNodeInfoSeq*) local_unnamed_addr #3

declare void @xmlHashFree(%struct._xmlHashTable*, void (i8*, i8*)*) local_unnamed_addr #3

declare void @xmlHashDefaultDeallocator(i8*, i8*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @htmlCtxtUseOptions(%struct._xmlParserCtxt*, i32) local_unnamed_addr #7 {
  %3 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %3, label %112, label %4

4:                                                ; preds = %2
  %5 = and i32 %1, 64
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %9 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %8, align 8
  %10 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %9, i64 0, i32 21
  store void (i8*, i8*, ...)* null, void (i8*, i8*, ...)** %10, align 8
  %11 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 25, i32 2
  store void (i8*, i8*, ...)* null, void (i8*, i8*, ...)** %11, align 8
  %12 = add nsw i32 %1, -64
  %13 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %14 = load i32, i32* %13, align 4
  %15 = or i32 %14, 64
  store i32 %15, i32* %13, align 4
  br label %16

16:                                               ; preds = %4, %7
  %17 = phi i32 [ %12, %7 ], [ %1, %4 ]
  %18 = and i32 %17, 32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %22 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %21, align 8
  %23 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %22, i64 0, i32 22
  store void (i8*, i8*, ...)* null, void (i8*, i8*, ...)** %23, align 8
  %24 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 25, i32 1
  store void (i8*, i8*, ...)* null, void (i8*, i8*, ...)** %24, align 8
  %25 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %21, align 8
  %26 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %25, i64 0, i32 23
  store void (i8*, i8*, ...)* null, void (i8*, i8*, ...)** %26, align 8
  %27 = add nsw i32 %17, -32
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %29 = load i32, i32* %28, align 4
  %30 = or i32 %29, 32
  store i32 %30, i32* %28, align 4
  br label %31

31:                                               ; preds = %16, %20
  %32 = phi i32 [ %27, %20 ], [ %17, %16 ]
  %33 = trunc i32 %32 to i8
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 50
  br i1 %34, label %36, label %41

36:                                               ; preds = %31
  store i32 1, i32* %35, align 4
  %37 = add nsw i32 %32, -128
  %38 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %39 = load i32, i32* %38, align 4
  %40 = or i32 %39, 128
  store i32 %40, i32* %38, align 4
  br label %42

41:                                               ; preds = %31
  store i32 0, i32* %35, align 4
  br label %42

42:                                               ; preds = %41, %36
  %43 = phi i32 [ %37, %36 ], [ %32, %41 ]
  %44 = and i32 %43, 256
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 35
  br i1 %45, label %55, label %47

47:                                               ; preds = %42
  store i32 0, i32* %46, align 8
  %48 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %49 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %48, align 8
  %50 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %49, i64 0, i32 18
  store void (i8*, i8*, i32)* @xmlSAX2IgnorableWhitespace, void (i8*, i8*, i32)** %50, align 8
  %51 = add nsw i32 %43, -256
  %52 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %53 = load i32, i32* %52, align 4
  %54 = or i32 %53, 256
  store i32 %54, i32* %52, align 4
  br label %56

55:                                               ; preds = %42
  store i32 1, i32* %46, align 8
  br label %56

56:                                               ; preds = %55, %47
  %57 = phi i32 [ %51, %47 ], [ %43, %55 ]
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 55
  br i1 %59, label %63, label %61

61:                                               ; preds = %56
  store i32 1, i32* %60, align 8
  %62 = add nsw i32 %57, -1
  br label %64

63:                                               ; preds = %56
  store i32 0, i32* %60, align 8
  br label %64

64:                                               ; preds = %63, %61
  %65 = phi i32 [ %62, %61 ], [ %57, %63 ]
  %66 = and i32 %65, 65536
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %70, 65536
  store i32 %71, i32* %69, align 4
  %72 = add nsw i32 %65, -65536
  br label %73

73:                                               ; preds = %64, %68
  %74 = phi i32 [ %72, %68 ], [ %65, %64 ]
  %75 = and i32 %74, 524288
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %79 = load i32, i32* %78, align 4
  %80 = or i32 %79, 524288
  store i32 %80, i32* %78, align 4
  %81 = add nsw i32 %74, -524288
  br label %82

82:                                               ; preds = %73, %77
  %83 = phi i32 [ %81, %77 ], [ %74, %73 ]
  %84 = and i32 %83, 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %88 = load i32, i32* %87, align 4
  %89 = or i32 %88, 4
  store i32 %89, i32* %87, align 4
  %90 = add nsw i32 %83, -4
  br label %91

91:                                               ; preds = %82, %86
  %92 = phi i32 [ %90, %86 ], [ %83, %82 ]
  %93 = and i32 %92, 2097152
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %97 = load i32, i32* %96, align 4
  %98 = or i32 %97, 2097152
  store i32 %98, i32* %96, align 4
  %99 = add nsw i32 %92, -2097152
  br label %100

100:                                              ; preds = %91, %95
  %101 = phi i32 [ %99, %95 ], [ %92, %91 ]
  %102 = and i32 %101, 8192
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %106 = load i32, i32* %105, align 4
  %107 = or i32 %106, 8192
  store i32 %107, i32* %105, align 4
  %108 = add nsw i32 %101, -8192
  br label %109

109:                                              ; preds = %100, %104
  %110 = phi i32 [ %108, %104 ], [ %101, %100 ]
  %111 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 74
  store i32 0, i32* %111, align 8
  br label %112

112:                                              ; preds = %2, %109
  %113 = phi i32 [ %110, %109 ], [ -1, %2 ]
  ret i32 %113
}

declare void @xmlSAX2IgnorableWhitespace(i8*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlReadDoc(i8*, i8*, i8*, i32) local_unnamed_addr #1 {
  %5 = icmp eq i8* %0, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %4
  tail call void @xmlInitParser() #9
  %7 = tail call i32 @xmlStrlen(i8* nonnull %0) #9
  %8 = tail call %struct._xmlParserCtxt* @htmlCreateMemoryParserCtxt(i8* nonnull %0, i32 %7) #9
  %9 = icmp eq %struct._xmlParserCtxt* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt* nonnull %8, i8* %1, i8* %2, i32 %3, i32 0)
  br label %12

12:                                               ; preds = %6, %4, %10
  %13 = phi %struct._xmlDoc* [ %11, %10 ], [ null, %4 ], [ null, %6 ]
  ret %struct._xmlDoc* %13
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt*, i8*, i8*, i32, i32) unnamed_addr #1 {
  %6 = tail call i32 @htmlCtxtUseOptions(%struct._xmlParserCtxt* %0, i32 %3)
  %7 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 8
  store i32 1, i32* %7, align 4
  %8 = icmp eq i8* %2, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %2) #9
  %11 = icmp eq %struct._xmlCharEncodingHandler* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @xmlSwitchToEncoding(%struct._xmlParserCtxt* %0, %struct._xmlCharEncodingHandler* nonnull %10) #9
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %15 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %16 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %15, i64 0, i32 11
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  %20 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %20(i8* nonnull %17) #9
  br label %21

21:                                               ; preds = %12, %19
  %22 = tail call i8* @xmlStrdup(i8* nonnull %2) #9
  %23 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %24 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %23, i64 0, i32 11
  store i8* %22, i8** %24, align 8
  br label %25

25:                                               ; preds = %21, %9, %5
  %26 = icmp eq i8* %1, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %29 = load %struct._xmlParserInput*, %struct._xmlParserInput** %28, align 8
  %30 = icmp eq %struct._xmlParserInput* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %29, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = tail call i8* @xmlStrdup(i8* nonnull %1) #9
  %37 = load %struct._xmlParserInput*, %struct._xmlParserInput** %28, align 8
  %38 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %37, i64 0, i32 1
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %27, %25, %35, %31
  %40 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* %0)
  %41 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 2
  %42 = load %struct._xmlDoc*, %struct._xmlDoc** %41, align 8
  store %struct._xmlDoc* null, %struct._xmlDoc** %41, align 8
  %43 = icmp eq i32 %4, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 74
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 0
  %48 = icmp ne %struct._xmlDoc* %42, null
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %57

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %42, i64 0, i32 20
  %52 = load %struct._xmlDict*, %struct._xmlDict** %51, align 8
  %53 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 57
  %54 = load %struct._xmlDict*, %struct._xmlDict** %53, align 8
  %55 = icmp eq %struct._xmlDict* %52, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %50
  store %struct._xmlDict* null, %struct._xmlDict** %53, align 8
  br label %57

57:                                               ; preds = %56, %50, %44
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %0) #9
  br label %58

58:                                               ; preds = %39, %57
  ret %struct._xmlDoc* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlReadFile(i8*, i8*, i32) local_unnamed_addr #1 {
  tail call void @xmlInitParser() #9
  %4 = tail call %struct._xmlParserCtxt* @htmlCreateFileParserCtxt(i8* %0, i8* %1)
  %5 = icmp eq %struct._xmlParserCtxt* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  %7 = tail call i32 @htmlCtxtUseOptions(%struct._xmlParserCtxt* nonnull %4, i32 %2) #9
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %4, i64 0, i32 8
  store i32 1, i32* %8, align 4
  %9 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* nonnull %4) #9
  %10 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %4, i64 0, i32 2
  %11 = load %struct._xmlDoc*, %struct._xmlDoc** %10, align 8
  store %struct._xmlDoc* null, %struct._xmlDoc** %10, align 8
  %12 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %4, i64 0, i32 74
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 0
  %15 = icmp ne %struct._xmlDoc* %11, null
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %24

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %11, i64 0, i32 20
  %19 = load %struct._xmlDict*, %struct._xmlDict** %18, align 8
  %20 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %4, i64 0, i32 57
  %21 = load %struct._xmlDict*, %struct._xmlDict** %20, align 8
  %22 = icmp eq %struct._xmlDict* %19, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store %struct._xmlDict* null, %struct._xmlDict** %20, align 8
  br label %24

24:                                               ; preds = %6, %17, %23
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %4) #9
  br label %25

25:                                               ; preds = %3, %24
  %26 = phi %struct._xmlDoc* [ %11, %24 ], [ null, %3 ]
  ret %struct._xmlDoc* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlReadMemory(i8*, i32, i8*, i8*, i32) local_unnamed_addr #1 {
  tail call void @xmlInitParser() #9
  %6 = tail call %struct._xmlParserCtxt* @xmlCreateMemoryParserCtxt(i8* %0, i32 %1) #9
  %7 = icmp eq %struct._xmlParserCtxt* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %5
  tail call void @htmlDefaultSAXHandlerInit() #9
  %9 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %6, i64 0, i32 0
  %10 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %9, align 8
  %11 = icmp eq %struct._xmlSAXHandler* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast %struct._xmlSAXHandler* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%struct._xmlSAXHandlerV1* @htmlDefaultSAXHandler to i8*), i64 224, i1 false)
  br label %14

14:                                               ; preds = %8, %12
  %15 = tail call fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt* nonnull %6, i8* %2, i8* %3, i32 %4, i32 0)
  br label %16

16:                                               ; preds = %5, %14
  %17 = phi %struct._xmlDoc* [ %15, %14 ], [ null, %5 ]
  ret %struct._xmlDoc* %17
}

declare %struct._xmlParserCtxt* @xmlCreateMemoryParserCtxt(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlReadFd(i32, i8*, i8*, i32) local_unnamed_addr #1 {
  %5 = icmp slt i32 %0, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %4
  tail call void @xmlInitParser() #9
  tail call void @xmlInitParser() #9
  %7 = tail call %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateFd(i32 %0, i32 0) #9
  %8 = icmp eq %struct._xmlParserInputBuffer* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %6
  %10 = tail call %struct._xmlParserCtxt* @xmlNewParserCtxt() #9
  %11 = icmp eq %struct._xmlParserCtxt* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  tail call void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer* nonnull %7) #9
  br label %20

13:                                               ; preds = %9
  %14 = tail call %struct._xmlParserInput* @xmlNewIOInputStream(%struct._xmlParserCtxt* nonnull %10, %struct._xmlParserInputBuffer* nonnull %7, i32 0) #9
  %15 = icmp eq %struct._xmlParserInput* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer* nonnull %7) #9
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %10) #9
  br label %20

17:                                               ; preds = %13
  %18 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %10, %struct._xmlParserInput* nonnull %14) #9
  %19 = tail call fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt* nonnull %10, i8* %1, i8* %2, i32 %3, i32 0)
  br label %20

20:                                               ; preds = %6, %4, %17, %16, %12
  %21 = phi %struct._xmlDoc* [ null, %12 ], [ null, %16 ], [ %19, %17 ], [ null, %4 ], [ null, %6 ]
  ret %struct._xmlDoc* %21
}

declare %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateFd(i32, i32) local_unnamed_addr #3

declare %struct._xmlParserCtxt* @xmlNewParserCtxt() local_unnamed_addr #3

declare %struct._xmlParserInput* @xmlNewIOInputStream(%struct._xmlParserCtxt*, %struct._xmlParserInputBuffer*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlReadIO(i32 (i8*, i8*, i32)*, i32 (i8*)*, i8*, i8*, i8*, i32) local_unnamed_addr #1 {
  %7 = icmp eq i32 (i8*, i8*, i32)* %0, null
  br i1 %7, label %26, label %8

8:                                                ; preds = %6
  tail call void @xmlInitParser() #9
  %9 = tail call %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateIO(i32 (i8*, i8*, i32)* nonnull %0, i32 (i8*)* %1, i8* %2, i32 0) #9
  %10 = icmp eq %struct._xmlParserInputBuffer* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = icmp eq i32 (i8*)* %1, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %11
  %14 = tail call i32 %1(i8* %2) #9
  br label %26

15:                                               ; preds = %8
  %16 = tail call %struct._xmlParserCtxt* @htmlNewParserCtxt()
  %17 = icmp eq %struct._xmlParserCtxt* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer* nonnull %9) #9
  br label %26

19:                                               ; preds = %15
  %20 = tail call %struct._xmlParserInput* @xmlNewIOInputStream(%struct._xmlParserCtxt* nonnull %16, %struct._xmlParserInputBuffer* nonnull %9, i32 0) #9
  %21 = icmp eq %struct._xmlParserInput* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer* nonnull %9) #9
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %16) #9
  br label %26

23:                                               ; preds = %19
  %24 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %16, %struct._xmlParserInput* nonnull %20) #9
  %25 = tail call fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt* nonnull %16, i8* %3, i8* %4, i32 %5, i32 0)
  br label %26

26:                                               ; preds = %13, %11, %6, %23, %22, %18
  %27 = phi %struct._xmlDoc* [ null, %18 ], [ null, %22 ], [ %25, %23 ], [ null, %6 ], [ null, %11 ], [ null, %13 ]
  ret %struct._xmlDoc* %27
}

declare %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateIO(i32 (i8*, i8*, i32)*, i32 (i8*)*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlCtxtReadDoc(%struct._xmlParserCtxt*, i8*, i8*, i8*, i32) local_unnamed_addr #1 {
  %6 = icmp eq i8* %1, null
  %7 = icmp eq %struct._xmlParserCtxt* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  tail call void @xmlInitParser() #9
  tail call void @htmlCtxtReset(%struct._xmlParserCtxt* nonnull %0)
  %10 = tail call %struct._xmlParserInput* @xmlNewStringInputStream(%struct._xmlParserCtxt* nonnull %0, i8* nonnull %1) #9
  %11 = icmp eq %struct._xmlParserInput* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %0, %struct._xmlParserInput* nonnull %10) #9
  %14 = tail call fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt* nonnull %0, i8* %2, i8* %3, i32 %4, i32 1)
  br label %15

15:                                               ; preds = %9, %5, %12
  %16 = phi %struct._xmlDoc* [ %14, %12 ], [ null, %5 ], [ null, %9 ]
  ret %struct._xmlDoc* %16
}

declare %struct._xmlParserInput* @xmlNewStringInputStream(%struct._xmlParserCtxt*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlCtxtReadFile(%struct._xmlParserCtxt*, i8*, i8*, i32) local_unnamed_addr #1 {
  %5 = icmp eq i8* %1, null
  %6 = icmp eq %struct._xmlParserCtxt* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %36, label %8

8:                                                ; preds = %4
  tail call void @xmlInitParser() #9
  tail call void @htmlCtxtReset(%struct._xmlParserCtxt* nonnull %0)
  %9 = tail call %struct._xmlParserInput* @xmlLoadExternalEntity(i8* nonnull %1, i8* null, %struct._xmlParserCtxt* nonnull %0) #9
  %10 = icmp eq %struct._xmlParserInput* %9, null
  br i1 %10, label %36, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %0, %struct._xmlParserInput* nonnull %9) #9
  %13 = tail call i32 @htmlCtxtUseOptions(%struct._xmlParserCtxt* nonnull %0, i32 %3) #9
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 8
  store i32 1, i32* %14, align 4
  %15 = icmp eq i8* %2, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %11
  %17 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %2) #9
  %18 = icmp eq %struct._xmlCharEncodingHandler* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @xmlSwitchToEncoding(%struct._xmlParserCtxt* nonnull %0, %struct._xmlCharEncodingHandler* nonnull %17) #9
  %21 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %22 = load %struct._xmlParserInput*, %struct._xmlParserInput** %21, align 8
  %23 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %22, i64 0, i32 11
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %19
  %27 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %27(i8* nonnull %24) #9
  br label %28

28:                                               ; preds = %26, %19
  %29 = tail call i8* @xmlStrdup(i8* nonnull %2) #9
  %30 = load %struct._xmlParserInput*, %struct._xmlParserInput** %21, align 8
  %31 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %30, i64 0, i32 11
  store i8* %29, i8** %31, align 8
  br label %32

32:                                               ; preds = %11, %16, %28
  %33 = tail call i32 @htmlParseDocument(%struct._xmlParserCtxt* nonnull %0) #9
  %34 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 2
  %35 = load %struct._xmlDoc*, %struct._xmlDoc** %34, align 8
  store %struct._xmlDoc* null, %struct._xmlDoc** %34, align 8
  br label %36

36:                                               ; preds = %8, %4, %32
  %37 = phi %struct._xmlDoc* [ %35, %32 ], [ null, %4 ], [ null, %8 ]
  ret %struct._xmlDoc* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlCtxtReadMemory(%struct._xmlParserCtxt*, i8*, i32, i8*, i8*, i32) local_unnamed_addr #1 {
  %7 = icmp eq %struct._xmlParserCtxt* %0, null
  %8 = icmp eq i8* %1, null
  %9 = or i1 %7, %8
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  tail call void @xmlInitParser() #9
  tail call void @htmlCtxtReset(%struct._xmlParserCtxt* nonnull %0)
  %11 = tail call %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateMem(i8* nonnull %1, i32 %2, i32 0) #9
  %12 = icmp eq %struct._xmlParserInputBuffer* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = tail call %struct._xmlParserInput* @xmlNewIOInputStream(%struct._xmlParserCtxt* nonnull %0, %struct._xmlParserInputBuffer* nonnull %11, i32 0) #9
  %15 = icmp eq %struct._xmlParserInput* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer* nonnull %11) #9
  br label %20

17:                                               ; preds = %13
  %18 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %0, %struct._xmlParserInput* nonnull %14) #9
  %19 = tail call fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt* nonnull %0, i8* %3, i8* %4, i32 %5, i32 1)
  br label %20

20:                                               ; preds = %10, %6, %17, %16
  %21 = phi %struct._xmlDoc* [ null, %16 ], [ %19, %17 ], [ null, %6 ], [ null, %10 ]
  ret %struct._xmlDoc* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlCtxtReadFd(%struct._xmlParserCtxt*, i32, i8*, i8*, i32) local_unnamed_addr #1 {
  %6 = icmp slt i32 %1, 0
  %7 = icmp eq %struct._xmlParserCtxt* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  tail call void @xmlInitParser() #9
  tail call void @htmlCtxtReset(%struct._xmlParserCtxt* nonnull %0)
  %10 = tail call %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateFd(i32 %1, i32 0) #9
  %11 = icmp eq %struct._xmlParserInputBuffer* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %9
  %13 = tail call %struct._xmlParserInput* @xmlNewIOInputStream(%struct._xmlParserCtxt* nonnull %0, %struct._xmlParserInputBuffer* nonnull %10, i32 0) #9
  %14 = icmp eq %struct._xmlParserInput* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer* nonnull %10) #9
  br label %19

16:                                               ; preds = %12
  %17 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %0, %struct._xmlParserInput* nonnull %13) #9
  %18 = tail call fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt* nonnull %0, i8* %2, i8* %3, i32 %4, i32 1)
  br label %19

19:                                               ; preds = %9, %5, %16, %15
  %20 = phi %struct._xmlDoc* [ null, %15 ], [ %18, %16 ], [ null, %5 ], [ null, %9 ]
  ret %struct._xmlDoc* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @htmlCtxtReadIO(%struct._xmlParserCtxt*, i32 (i8*, i8*, i32)*, i32 (i8*)*, i8*, i8*, i8*, i32) local_unnamed_addr #1 {
  %8 = icmp eq i32 (i8*, i8*, i32)* %1, null
  %9 = icmp eq %struct._xmlParserCtxt* %0, null
  %10 = or i1 %9, %8
  br i1 %10, label %25, label %11

11:                                               ; preds = %7
  tail call void @xmlInitParser() #9
  tail call void @htmlCtxtReset(%struct._xmlParserCtxt* nonnull %0)
  %12 = tail call %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateIO(i32 (i8*, i8*, i32)* nonnull %1, i32 (i8*)* %2, i8* %3, i32 0) #9
  %13 = icmp eq %struct._xmlParserInputBuffer* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = icmp eq i32 (i8*)* %2, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %14
  %17 = tail call i32 %2(i8* %3) #9
  br label %25

18:                                               ; preds = %11
  %19 = tail call %struct._xmlParserInput* @xmlNewIOInputStream(%struct._xmlParserCtxt* nonnull %0, %struct._xmlParserInputBuffer* nonnull %12, i32 0) #9
  %20 = icmp eq %struct._xmlParserInput* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer* nonnull %12) #9
  br label %25

22:                                               ; preds = %18
  %23 = tail call i32 @inputPush(%struct._xmlParserCtxt* nonnull %0, %struct._xmlParserInput* nonnull %19) #9
  %24 = tail call fastcc %struct._xmlDoc* @htmlDoRead(%struct._xmlParserCtxt* nonnull %0, i8* %4, i8* %5, i32 %6, i32 1)
  br label %25

25:                                               ; preds = %16, %14, %7, %22, %21
  %26 = phi %struct._xmlDoc* [ null, %21 ], [ %24, %22 ], [ null, %7 ], [ null, %14 ], [ null, %16 ]
  ret %struct._xmlDoc* %26
}

declare i32 @xmlStrcasecmp(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

declare void @__xmlRaiseError(void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) local_unnamed_addr #3

declare i8* @xmlDictLookup(%struct._xmlDict*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @htmlParseNameComplex(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #9
  store i32 -1431655766, i32* %2, align 4
  %4 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %5 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %6 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %5, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %5, i64 0, i32 5
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %5, i64 0, i32 4
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %14, %17
  %19 = icmp slt i64 %18, 250
  br i1 %19, label %20, label %22

20:                                               ; preds = %11
  %21 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %5, i32 250) #9
  br label %22

22:                                               ; preds = %20, %11, %1
  %23 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %2)
  switch i32 %23, label %24 [
    i32 62, label %168
    i32 47, label %168
    i32 32, label %168
  ]

24:                                               ; preds = %22
  %25 = icmp slt i32 %23, 256
  br i1 %25, label %26, label %38

26:                                               ; preds = %24
  %27 = and i32 %23, -33
  %28 = add i32 %27, -65
  %29 = icmp ult i32 %28, 26
  %30 = add i32 %23, -192
  %31 = icmp ult i32 %30, 23
  %32 = or i1 %31, %29
  br i1 %32, label %50, label %33

33:                                               ; preds = %26
  %34 = add i32 %23, -216
  %35 = icmp ult i32 %34, 31
  %36 = icmp sgt i32 %23, 247
  %37 = or i1 %36, %35
  br i1 %37, label %50, label %49

38:                                               ; preds = %24
  %39 = tail call i32 @xmlCharInRange(i32 %23, %struct._xmlChRangeGroup* nonnull @xmlIsBaseCharGroup) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %38
  %42 = add nsw i32 %23, -19968
  %43 = icmp ult i32 %42, 20902
  %44 = icmp eq i32 %23, 12295
  %45 = or i1 %44, %43
  %46 = add nsw i32 %23, -12321
  %47 = icmp ult i32 %46, 9
  %48 = or i1 %47, %45
  br i1 %48, label %50, label %49

49:                                               ; preds = %33, %41
  switch i32 %23, label %168 [
    i32 95, label %50
    i32 58, label %50
  ]

50:                                               ; preds = %49, %49, %38, %41, %33, %26
  %51 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  br label %52

52:                                               ; preds = %137, %50
  %53 = phi i32 [ 0, %50 ], [ %121, %137 ]
  %54 = phi i32 [ %23, %50 ], [ %143, %137 ]
  %55 = phi i32 [ 0, %50 ], [ %119, %137 ]
  switch i32 %54, label %56 [
    i32 62, label %150
    i32 47, label %150
    i32 32, label %150
  ]

56:                                               ; preds = %52
  %57 = icmp slt i32 %54, 256
  br i1 %57, label %58, label %73

58:                                               ; preds = %56
  %59 = and i32 %54, -33
  %60 = add i32 %59, -65
  %61 = icmp ult i32 %60, 26
  %62 = add i32 %54, -192
  %63 = icmp ult i32 %62, 23
  %64 = or i1 %63, %61
  br i1 %64, label %100, label %65

65:                                               ; preds = %58
  %66 = add i32 %54, -216
  %67 = icmp ult i32 %66, 31
  %68 = icmp sgt i32 %54, 247
  %69 = or i1 %68, %67
  %70 = add i32 %54, -48
  %71 = icmp ult i32 %70, 10
  %72 = or i1 %71, %69
  br i1 %72, label %100, label %87

73:                                               ; preds = %56
  %74 = tail call i32 @xmlCharInRange(i32 %54, %struct._xmlChRangeGroup* nonnull @xmlIsBaseCharGroup) #9
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %100

76:                                               ; preds = %73
  %77 = add nsw i32 %54, -19968
  %78 = icmp ult i32 %77, 20902
  %79 = icmp eq i32 %54, 12295
  %80 = or i1 %79, %78
  %81 = add nsw i32 %54, -12321
  %82 = icmp ult i32 %81, 9
  %83 = or i1 %82, %80
  br i1 %83, label %100, label %84

84:                                               ; preds = %76
  %85 = tail call i32 @xmlCharInRange(i32 %54, %struct._xmlChRangeGroup* nonnull @xmlIsDigitGroup) #9
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %100

87:                                               ; preds = %65, %84
  switch i32 %54, label %88 [
    i32 95, label %100
    i32 58, label %100
    i32 46, label %100
    i32 45, label %100
  ]

88:                                               ; preds = %87
  br i1 %57, label %92, label %89

89:                                               ; preds = %88
  %90 = tail call i32 @xmlCharInRange(i32 %54, %struct._xmlChRangeGroup* nonnull @xmlIsCombiningGroup) #9
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %100

92:                                               ; preds = %88
  %93 = icmp eq i32 %54, 183
  %94 = zext i1 %93 to i32
  br label %97

95:                                               ; preds = %89
  %96 = tail call i32 @xmlCharInRange(i32 %54, %struct._xmlChRangeGroup* nonnull @xmlIsExtenderGroup) #9
  br label %97

97:                                               ; preds = %95, %92
  %98 = phi i32 [ %94, %92 ], [ %96, %95 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %150, label %100

100:                                              ; preds = %87, %87, %87, %87, %97, %89, %84, %73, %76, %65, %58
  %101 = add nsw i32 %55, 1
  %102 = icmp sgt i32 %55, 100
  br i1 %102, label %103, label %118

103:                                              ; preds = %100
  %104 = load i32, i32* %8, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %103
  %107 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %108 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %107, i64 0, i32 5
  %109 = bitcast i8** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %107, i64 0, i32 4
  %112 = bitcast i8** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %110, %113
  %115 = icmp slt i64 %114, 250
  br i1 %115, label %116, label %118

116:                                              ; preds = %106
  %117 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %107, i32 250) #9
  br label %118

118:                                              ; preds = %103, %106, %116, %100
  %119 = phi i32 [ 0, %116 ], [ 0, %106 ], [ 0, %103 ], [ %101, %100 ]
  %120 = load i32, i32* %2, align 4
  %121 = add nsw i32 %120, %53
  %122 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %123 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %122, i64 0, i32 4
  %124 = load i8*, i8** %123, align 8
  %125 = load i8, i8* %124, align 1
  %126 = icmp eq i8 %125, 10
  br i1 %126, label %127, label %133

127:                                              ; preds = %118
  %128 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %122, i64 0, i32 7
  %129 = load i32, i32* %128, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %132 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %131, i64 0, i32 8
  store i32 1, i32* %132, align 8
  br label %137

133:                                              ; preds = %118
  %134 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %122, i64 0, i32 8
  %135 = load i32, i32* %134, align 8
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %134, align 8
  br label %137

137:                                              ; preds = %133, %127
  store i32 0, i32* %51, align 4
  %138 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %139 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %138, i64 0, i32 4
  %140 = load i8*, i8** %139, align 8
  %141 = sext i32 %120 to i64
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  store i8* %142, i8** %139, align 8
  %143 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %2)
  %144 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %145 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %144, i64 0, i32 3
  %146 = load i8*, i8** %145, align 8
  %147 = icmp eq i8* %146, %7
  br i1 %147, label %52, label %148

148:                                              ; preds = %137
  %149 = tail call fastcc i8* @htmlParseNameComplex(%struct._xmlParserCtxt* %0)
  br label %168

150:                                              ; preds = %52, %52, %52, %97
  %151 = load %struct._xmlParserInput*, %struct._xmlParserInput** %4, align 8
  %152 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %151, i64 0, i32 4
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %151, i64 0, i32 3
  %155 = bitcast i8** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = ptrtoint i8* %153 to i64
  %158 = sub i64 %157, %156
  %159 = sext i32 %53 to i64
  %160 = icmp slt i64 %158, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %150
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.820, i64 0, i64 0), i8* null, i8* null)
  br label %168

162:                                              ; preds = %150
  %163 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 57
  %164 = load %struct._xmlDict*, %struct._xmlDict** %163, align 8
  %165 = sub nsw i64 0, %159
  %166 = getelementptr inbounds i8, i8* %153, i64 %165
  %167 = tail call i8* @xmlDictLookup(%struct._xmlDict* %164, i8* %166, i32 %53) #9
  br label %168

168:                                              ; preds = %22, %22, %22, %49, %162, %161, %148
  %169 = phi i8* [ %149, %148 ], [ null, %161 ], [ %167, %162 ], [ null, %49 ], [ null, %22 ], [ null, %22 ], [ null, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #9
  ret i8* %169
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt*, i32* nocapture) unnamed_addr #1 {
  %3 = alloca [150 x i8], align 16
  %4 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %303, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  store i32 0, i32* %1, align 4
  %12 = load i32, i32* %8, align 4
  br label %303

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 47
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %116, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %19 = load %struct._xmlParserInput*, %struct._xmlParserInput** %18, align 8
  %20 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %19, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8
  %22 = load i8, i8* %21, align 1
  %23 = icmp sgt i8 %22, -1
  br i1 %23, label %24, label %37

24:                                               ; preds = %17
  store i32 1, i32* %1, align 4
  %25 = load %struct._xmlParserInput*, %struct._xmlParserInput** %18, align 8
  %26 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %25, i64 0, i32 4
  %27 = load i8*, i8** %26, align 8
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %25, i64 0, i32 5
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ult i8* %27, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.821, i64 0, i64 0), i32 0)
  br label %303

35:                                               ; preds = %30, %24
  %36 = zext i8 %28 to i32
  br label %303

37:                                               ; preds = %17
  %38 = icmp eq %struct._xmlParserCtxt* %0, null
  %39 = icmp eq %struct._xmlParserInput* %19, null
  %40 = or i1 %38, %39
  br i1 %40, label %92, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %19, i64 0, i32 11
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %92

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %19, i64 0, i32 0
  %47 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %46, align 8
  %48 = icmp eq %struct._xmlParserInputBuffer* %47, null
  br i1 %48, label %92, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %47, i64 0, i32 3
  %51 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %50, align 8
  %52 = icmp ne %struct._xmlCharEncodingHandler* %51, null
  %53 = icmp eq i8* %21, null
  %54 = or i1 %53, %52
  br i1 %54, label %92, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %19, i64 0, i32 5
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %92, label %59

59:                                               ; preds = %55
  %60 = load i8, i8* %57, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %92

62:                                               ; preds = %59
  %63 = tail call i8* @xmlStrcasestr(i8* nonnull %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.827, i64 0, i64 0)) #9
  %64 = icmp eq i8* %63, null
  br i1 %64, label %92, label %65

65:                                               ; preds = %62
  %66 = tail call i8* @xmlStrcasestr(i8* nonnull %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.828, i64 0, i64 0)) #9
  %67 = icmp eq i8* %66, null
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = tail call i8* @xmlStrcasestr(i8* nonnull %66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.829, i64 0, i64 0)) #9
  %70 = icmp eq i8* %69, null
  br i1 %70, label %92, label %71

71:                                               ; preds = %68, %84
  %72 = phi i64 [ %85, %84 ], [ 8, %68 ]
  %73 = getelementptr inbounds i8, i8* %69, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = and i8 %74, -33
  %76 = add i8 %75, -65
  %77 = icmp ult i8 %76, 26
  %78 = add i8 %74, -48
  %79 = icmp ult i8 %78, 10
  %80 = or i1 %79, %77
  br i1 %80, label %84, label %81

81:                                               ; preds = %71
  switch i8 %74, label %82 [
    i8 45, label %84
    i8 95, label %84
    i8 58, label %84
    i8 47, label %84
  ]

82:                                               ; preds = %81
  %83 = icmp eq i64 %72, 8
  br i1 %83, label %92, label %86

84:                                               ; preds = %81, %81, %81, %81, %71
  %85 = add nuw nsw i64 %72, 1
  br label %71

86:                                               ; preds = %82
  %87 = getelementptr inbounds i8, i8* %69, i64 8
  %88 = trunc i64 %72 to i32
  %89 = add i32 %88, -8
  %90 = tail call i8* @xmlStrndup(i8* %87, i32 %89) #9
  %91 = icmp eq i8* %90, null
  br i1 %91, label %92, label %94

92:                                               ; preds = %49, %82, %68, %65, %62, %59, %55, %37, %45, %41, %86
  %93 = tail call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* %0, i32 10) #9
  br label %115

94:                                               ; preds = %86
  %95 = load %struct._xmlParserInput*, %struct._xmlParserInput** %18, align 8
  %96 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %95, i64 0, i32 11
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %100(i8* nonnull %97) #9
  %101 = load %struct._xmlParserInput*, %struct._xmlParserInput** %18, align 8
  br label %102

102:                                              ; preds = %94, %99
  %103 = phi %struct._xmlParserInput* [ %95, %94 ], [ %101, %99 ]
  %104 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %103, i64 0, i32 11
  store i8* %90, i8** %104, align 8
  %105 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %90) #9
  %106 = icmp eq %struct._xmlCharEncodingHandler* %105, null
  br i1 %106, label %114, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct._xmlCharEncodingHandler, %struct._xmlCharEncodingHandler* %105, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = tail call i32 @xmlStrEqual(i8* %109, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.822, i64 0, i64 0)) #9
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = tail call i32 @xmlSwitchToEncoding(%struct._xmlParserCtxt* %0, %struct._xmlCharEncodingHandler* nonnull %105) #9
  br label %115

114:                                              ; preds = %102
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 81, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.823, i64 0, i64 0), i8* nonnull %90, i8* null)
  br label %115

115:                                              ; preds = %92, %112, %114, %107
  store i32 1, i32* %14, align 8
  br label %116

116:                                              ; preds = %115, %13
  %117 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %118 = load %struct._xmlParserInput*, %struct._xmlParserInput** %117, align 8
  %119 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %118, i64 0, i32 4
  %120 = load i8*, i8** %119, align 8
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp slt i8 %121, 0
  br i1 %123, label %124, label %247

124:                                              ; preds = %116
  %125 = and i32 %122, 64
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %260, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds i8, i8* %120, i64 1
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %138

131:                                              ; preds = %127
  %132 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %118, i32 250) #9
  %133 = load %struct._xmlParserInput*, %struct._xmlParserInput** %117, align 8
  %134 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %133, i64 0, i32 4
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 1
  %137 = load i8, i8* %136, align 1
  br label %138

138:                                              ; preds = %131, %127
  %139 = phi %struct._xmlParserInput* [ %133, %131 ], [ %118, %127 ]
  %140 = phi i8 [ %137, %131 ], [ %129, %127 ]
  %141 = phi i8* [ %135, %131 ], [ %120, %127 ]
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = and i8 %140, -64
  %144 = icmp eq i8 %143, -128
  br i1 %144, label %145, label %260

145:                                              ; preds = %138
  %146 = and i32 %122, 224
  %147 = icmp eq i32 %146, 224
  br i1 %147, label %148, label %225

148:                                              ; preds = %145
  %149 = getelementptr inbounds i8, i8* %141, i64 2
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %159

152:                                              ; preds = %148
  %153 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %139, i32 250) #9
  %154 = load %struct._xmlParserInput*, %struct._xmlParserInput** %117, align 8
  %155 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %154, i64 0, i32 4
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 2
  %158 = load i8, i8* %157, align 1
  br label %159

159:                                              ; preds = %152, %148
  %160 = phi %struct._xmlParserInput* [ %154, %152 ], [ %139, %148 ]
  %161 = phi i8 [ %158, %152 ], [ %150, %148 ]
  %162 = phi i8* [ %156, %152 ], [ %141, %148 ]
  %163 = getelementptr inbounds i8, i8* %162, i64 2
  %164 = and i8 %161, -64
  %165 = icmp eq i8 %164, -128
  br i1 %165, label %166, label %260

166:                                              ; preds = %159
  %167 = and i32 %122, 240
  %168 = icmp eq i32 %167, 240
  br i1 %168, label %169, label %209

169:                                              ; preds = %166
  %170 = getelementptr inbounds i8, i8* %162, i64 3
  %171 = load i8, i8* %170, align 1
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %178

173:                                              ; preds = %169
  %174 = tail call i32 @xmlParserInputGrow(%struct._xmlParserInput* %160, i32 250) #9
  %175 = load %struct._xmlParserInput*, %struct._xmlParserInput** %117, align 8
  %176 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %175, i64 0, i32 4
  %177 = load i8*, i8** %176, align 8
  br label %178

178:                                              ; preds = %173, %169
  %179 = phi i8* [ %177, %173 ], [ %162, %169 ]
  %180 = and i32 %122, 248
  %181 = icmp eq i32 %180, 240
  br i1 %181, label %182, label %260

182:                                              ; preds = %178
  %183 = getelementptr inbounds i8, i8* %179, i64 3
  %184 = load i8, i8* %183, align 1
  %185 = and i8 %184, -64
  %186 = icmp eq i8 %185, -128
  br i1 %186, label %187, label %260

187:                                              ; preds = %182
  store i32 4, i32* %1, align 4
  %188 = load i8, i8* %179, align 1
  %189 = and i8 %188, 7
  %190 = zext i8 %189 to i32
  %191 = shl nuw nsw i32 %190, 18
  %192 = getelementptr inbounds i8, i8* %179, i64 1
  %193 = load i8, i8* %192, align 1
  %194 = and i8 %193, 63
  %195 = zext i8 %194 to i32
  %196 = shl nuw nsw i32 %195, 12
  %197 = or i32 %196, %191
  %198 = getelementptr inbounds i8, i8* %179, i64 2
  %199 = load i8, i8* %198, align 1
  %200 = and i8 %199, 63
  %201 = zext i8 %200 to i32
  %202 = shl nuw nsw i32 %201, 6
  %203 = or i32 %197, %202
  %204 = load i8, i8* %183, align 1
  %205 = and i8 %204, 63
  %206 = zext i8 %205 to i32
  %207 = or i32 %203, %206
  %208 = icmp ult i32 %207, 65536
  br i1 %208, label %260, label %237

209:                                              ; preds = %166
  store i32 3, i32* %1, align 4
  %210 = load i8, i8* %162, align 1
  %211 = and i8 %210, 15
  %212 = zext i8 %211 to i32
  %213 = shl nuw nsw i32 %212, 12
  %214 = getelementptr inbounds i8, i8* %162, i64 1
  %215 = load i8, i8* %214, align 1
  %216 = and i8 %215, 63
  %217 = zext i8 %216 to i32
  %218 = shl nuw nsw i32 %217, 6
  %219 = or i32 %218, %213
  %220 = load i8, i8* %163, align 1
  %221 = and i8 %220, 63
  %222 = zext i8 %221 to i32
  %223 = or i32 %219, %222
  %224 = icmp ult i32 %223, 2048
  br i1 %224, label %260, label %237

225:                                              ; preds = %145
  store i32 2, i32* %1, align 4
  %226 = load i8, i8* %141, align 1
  %227 = and i8 %226, 31
  %228 = zext i8 %227 to i32
  %229 = shl nuw nsw i32 %228, 6
  %230 = load i8, i8* %142, align 1
  %231 = and i8 %230, 63
  %232 = zext i8 %231 to i32
  %233 = or i32 %229, %232
  %234 = icmp ult i32 %233, 128
  br i1 %234, label %260, label %235

235:                                              ; preds = %225
  %236 = icmp ult i32 %233, 256
  br i1 %236, label %303, label %237

237:                                              ; preds = %209, %187, %235
  %238 = phi i32 [ %233, %235 ], [ %223, %209 ], [ %207, %187 ]
  %239 = icmp ult i32 %238, 55296
  %240 = add nsw i32 %238, -57344
  %241 = icmp ult i32 %240, 8190
  %242 = or i1 %239, %241
  %243 = add nsw i32 %238, -65536
  %244 = icmp ult i32 %243, 1048576
  %245 = or i1 %244, %242
  br i1 %245, label %303, label %246

246:                                              ; preds = %237
  tail call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.821, i64 0, i64 0), i32 %238)
  br label %303

247:                                              ; preds = %116
  %248 = icmp eq i8 %121, 0
  br i1 %248, label %249, label %254

249:                                              ; preds = %247
  %250 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %118, i64 0, i32 5
  %251 = load i8*, i8** %250, align 8
  %252 = icmp ult i8* %120, %251
  br i1 %252, label %253, label %254

253:                                              ; preds = %249
  tail call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.821, i64 0, i64 0), i32 0)
  store i32 1, i32* %1, align 4
  br label %303

254:                                              ; preds = %249, %247
  store i32 1, i32* %1, align 4
  %255 = load %struct._xmlParserInput*, %struct._xmlParserInput** %117, align 8
  %256 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %255, i64 0, i32 4
  %257 = load i8*, i8** %256, align 8
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  br label %303

260:                                              ; preds = %182, %178, %159, %138, %225, %209, %187, %124
  %261 = getelementptr inbounds [150 x i8], [150 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 150, i8* nonnull %261) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %261, i8 -86, i64 150, i1 false)
  %262 = load %struct._xmlParserInput*, %struct._xmlParserInput** %117, align 8
  %263 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %262, i64 0, i32 5
  %264 = bitcast i8** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %262, i64 0, i32 4
  %267 = load i8*, i8** %266, align 8
  %268 = ptrtoint i8* %267 to i64
  %269 = sub i64 %265, %268
  %270 = icmp sgt i64 %269, 3
  %271 = load i8, i8* %267, align 1
  %272 = zext i8 %271 to i32
  br i1 %270, label %273, label %284

273:                                              ; preds = %260
  %274 = getelementptr inbounds i8, i8* %267, i64 1
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i32
  %277 = getelementptr inbounds i8, i8* %267, i64 2
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds i8, i8* %267, i64 3
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i32
  %283 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %261, i64 149, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.824, i64 0, i64 0), i32 %272, i32 %276, i32 %279, i32 %282) #9
  br label %286

284:                                              ; preds = %260
  %285 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %261, i64 149, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.825, i64 0, i64 0), i32 %272) #9
  br label %286

286:                                              ; preds = %284, %273
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 81, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.826, i64 0, i64 0), i8* nonnull %261, i8* null)
  call void @llvm.lifetime.end.p0i8(i64 150, i8* nonnull %261) #9
  %287 = load %struct._xmlParserInput*, %struct._xmlParserInput** %117, align 8
  %288 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %287, i64 0, i32 0
  %289 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %288, align 8
  %290 = icmp eq %struct._xmlParserInputBuffer* %289, null
  br i1 %290, label %297, label %291

291:                                              ; preds = %286
  %292 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %289, i64 0, i32 3
  %293 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %292, align 8
  %294 = icmp eq %struct._xmlCharEncodingHandler* %293, null
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  %296 = call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* %0, i32 10) #9
  br label %297

297:                                              ; preds = %286, %295, %291
  store i32 1, i32* %1, align 4
  %298 = load %struct._xmlParserInput*, %struct._xmlParserInput** %117, align 8
  %299 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %298, i64 0, i32 4
  %300 = load i8*, i8** %299, align 8
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  br label %303

303:                                              ; preds = %35, %34, %235, %246, %237, %2, %297, %254, %253, %11
  %304 = phi i32 [ %12, %11 ], [ %302, %297 ], [ 32, %253 ], [ %259, %254 ], [ 0, %2 ], [ %238, %237 ], [ %238, %246 ], [ %233, %235 ], [ %36, %35 ], [ 32, %34 ]
  ret i32 %304
}

declare i32 @xmlCharInRange(i32, %struct._xmlChRangeGroup*) local_unnamed_addr #3

declare %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8*) local_unnamed_addr #3

declare i32 @xmlSwitchToEncoding(%struct._xmlParserCtxt*, %struct._xmlCharEncodingHandler*) local_unnamed_addr #3

declare i8* @xmlStrcasestr(i8*, i8*) local_unnamed_addr #3

declare i8* @xmlStrndup(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParseCharDataInternal(%struct._xmlParserCtxt*, i32) unnamed_addr #1 {
  %3 = alloca [1006 x i8], align 16
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds [1006 x i8], [1006 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1006, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 1006, i1 false)
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  store i32 -1431655766, i32* %4, align 4
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = trunc i32 %1 to i8
  store i8 %9, i8* %5, align 16
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i32 [ 1, %8 ], [ 0, %2 ]
  %12 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %13 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %14 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 4
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 3
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = icmp sgt i64 %20, 500
  br i1 %21, label %22, label %29

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 5
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %16
  %27 = icmp slt i64 %26, 500
  br i1 %27, label %28, label %29

28:                                               ; preds = %22
  tail call void @xmlParserInputShrink(%struct._xmlParserInput* %13) #9
  br label %29

29:                                               ; preds = %28, %22, %10
  %30 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %4)
  %31 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  %32 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %33 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %34 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 35
  %35 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %36 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  br label %37

37:                                               ; preds = %207, %29
  %38 = phi i32 [ %11, %29 ], [ %112, %207 ]
  %39 = phi i32 [ %30, %29 ], [ %208, %207 ]
  %40 = phi i32 [ 0, %29 ], [ %170, %207 ]
  switch i32 %39, label %47 [
    i32 60, label %41
    i32 38, label %44
    i32 0, label %209
  ]

41:                                               ; preds = %37
  %42 = load i32, i32* %31, align 4
  %43 = icmp eq i32 %42, 60
  br i1 %43, label %61, label %209

44:                                               ; preds = %37
  %45 = load i32, i32* %31, align 4
  %46 = icmp eq i32 %45, 38
  br i1 %46, label %61, label %209

47:                                               ; preds = %37
  %48 = icmp slt i32 %39, 256
  br i1 %48, label %49, label %52

49:                                               ; preds = %47
  %50 = icmp sgt i32 %39, 31
  br i1 %50, label %61, label %51

51:                                               ; preds = %49
  switch i32 %39, label %60 [
    i32 13, label %61
    i32 10, label %61
    i32 9, label %61
  ]

52:                                               ; preds = %47
  %53 = icmp slt i32 %39, 55296
  %54 = add nsw i32 %39, -57344
  %55 = icmp ult i32 %54, 8190
  %56 = or i1 %53, %55
  %57 = add nsw i32 %39, -65536
  %58 = icmp ult i32 %57, 1048576
  %59 = or i1 %58, %56
  br i1 %59, label %61, label %60

60:                                               ; preds = %51, %52
  call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.836, i64 0, i64 0), i32 %39)
  br label %111

61:                                               ; preds = %44, %41, %51, %51, %51, %49, %52
  %62 = load i32, i32* %4, align 4
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %69

64:                                               ; preds = %61
  %65 = trunc i32 %39 to i8
  %66 = add nsw i32 %38, 1
  %67 = sext i32 %38 to i64
  %68 = getelementptr inbounds [1006 x i8], [1006 x i8]* %3, i64 0, i64 %67
  store i8 %65, i8* %68, align 1
  br label %74

69:                                               ; preds = %61
  %70 = sext i32 %38 to i64
  %71 = getelementptr inbounds [1006 x i8], [1006 x i8]* %3, i64 0, i64 %70
  %72 = call i32 @xmlCopyChar(i32 %62, i8* %71, i32 %39) #9
  %73 = add nsw i32 %72, %38
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i32 [ %66, %64 ], [ %73, %69 ]
  %76 = icmp sgt i32 %75, 999
  br i1 %76, label %77, label %111

77:                                               ; preds = %74
  %78 = sext i32 %75 to i64
  %79 = getelementptr inbounds [1006 x i8], [1006 x i8]* %3, i64 0, i64 %78
  store i8 0, i8* %79, align 1
  %80 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  %81 = icmp eq %struct._xmlSAXHandler* %80, null
  br i1 %81, label %111, label %82

82:                                               ; preds = %77
  %83 = load i32, i32* %33, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %111

85:                                               ; preds = %82
  %86 = call fastcc i32 @areBlanks(%struct._xmlParserCtxt* %0, i8* nonnull %5, i32 %75)
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %104, label %88

88:                                               ; preds = %85
  %89 = load i32, i32* %34, align 8
  %90 = icmp eq i32 %89, 0
  %91 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  br i1 %90, label %98, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %91, i64 0, i32 17
  %94 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %93, align 8
  %95 = icmp eq void (i8*, i8*, i32)* %94, null
  br i1 %95, label %111, label %96

96:                                               ; preds = %92
  %97 = load i8*, i8** %35, align 8
  call void %94(i8* %97, i8* nonnull %5, i32 %75) #9
  br label %111

98:                                               ; preds = %88
  %99 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %91, i64 0, i32 18
  %100 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %99, align 8
  %101 = icmp eq void (i8*, i8*, i32)* %100, null
  br i1 %101, label %111, label %102

102:                                              ; preds = %98
  %103 = load i8*, i8** %35, align 8
  call void %100(i8* %103, i8* nonnull %5, i32 %75) #9
  br label %111

104:                                              ; preds = %85
  call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0)
  %105 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  %106 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %105, i64 0, i32 17
  %107 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %106, align 8
  %108 = icmp eq void (i8*, i8*, i32)* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %104
  %110 = load i8*, i8** %35, align 8
  call void %107(i8* %110, i8* nonnull %5, i32 %75) #9
  br label %111

111:                                              ; preds = %60, %109, %96, %102, %77, %82, %104, %98, %92, %74
  %112 = phi i32 [ %75, %74 ], [ 0, %92 ], [ 0, %98 ], [ 0, %104 ], [ 0, %82 ], [ 0, %77 ], [ 0, %102 ], [ 0, %96 ], [ 0, %109 ], [ %38, %60 ]
  %113 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %114 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %113, i64 0, i32 4
  %115 = load i8*, i8** %114, align 8
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 10
  br i1 %117, label %118, label %124

118:                                              ; preds = %111
  %119 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %113, i64 0, i32 7
  %120 = load i32, i32* %119, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %119, align 4
  %122 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %123 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %122, i64 0, i32 8
  store i32 1, i32* %123, align 8
  br label %128

124:                                              ; preds = %111
  %125 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %113, i64 0, i32 8
  %126 = load i32, i32* %125, align 8
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %125, align 8
  br label %128

128:                                              ; preds = %124, %118
  store i32 0, i32* %31, align 4
  %129 = load i32, i32* %4, align 4
  %130 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %131 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %130, i64 0, i32 4
  %132 = load i8*, i8** %131, align 8
  %133 = sext i32 %129 to i64
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  store i8* %134, i8** %131, align 8
  %135 = add nsw i32 %40, 1
  %136 = icmp sgt i32 %40, 99
  br i1 %136, label %137, label %169

137:                                              ; preds = %128
  %138 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %139 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %138, i64 0, i32 4
  %140 = bitcast i8** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %138, i64 0, i32 3
  %143 = bitcast i8** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %141, %144
  %146 = icmp sgt i64 %145, 500
  br i1 %146, label %147, label %154

147:                                              ; preds = %137
  %148 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %138, i64 0, i32 5
  %149 = bitcast i8** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %150, %141
  %152 = icmp slt i64 %151, 500
  br i1 %152, label %153, label %154

153:                                              ; preds = %147
  call void @xmlParserInputShrink(%struct._xmlParserInput* %138) #9
  br label %154

154:                                              ; preds = %153, %147, %137
  %155 = load i32, i32* %36, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %169

157:                                              ; preds = %154
  %158 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %159 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %158, i64 0, i32 5
  %160 = bitcast i8** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %158, i64 0, i32 4
  %163 = bitcast i8** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = sub i64 %161, %164
  %166 = icmp slt i64 %165, 250
  br i1 %166, label %167, label %169

167:                                              ; preds = %157
  %168 = call i32 @xmlParserInputGrow(%struct._xmlParserInput* %158, i32 250) #9
  br label %169

169:                                              ; preds = %154, %157, %167, %128
  %170 = phi i32 [ 0, %167 ], [ 0, %157 ], [ 0, %154 ], [ %135, %128 ]
  %171 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %4)
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %207

173:                                              ; preds = %169
  %174 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %175 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %174, i64 0, i32 4
  %176 = bitcast i8** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %174, i64 0, i32 3
  %179 = bitcast i8** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %177, %180
  %182 = icmp sgt i64 %181, 500
  br i1 %182, label %183, label %190

183:                                              ; preds = %173
  %184 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %174, i64 0, i32 5
  %185 = bitcast i8** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %186, %177
  %188 = icmp slt i64 %187, 500
  br i1 %188, label %189, label %190

189:                                              ; preds = %183
  call void @xmlParserInputShrink(%struct._xmlParserInput* %174) #9
  br label %190

190:                                              ; preds = %189, %183, %173
  %191 = load i32, i32* %36, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %190
  %194 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %195 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %194, i64 0, i32 5
  %196 = bitcast i8** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %194, i64 0, i32 4
  %199 = bitcast i8** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %197, %200
  %202 = icmp slt i64 %201, 250
  br i1 %202, label %203, label %205

203:                                              ; preds = %193
  %204 = call i32 @xmlParserInputGrow(%struct._xmlParserInput* %194, i32 250) #9
  br label %205

205:                                              ; preds = %203, %193, %190
  %206 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %4)
  br label %207

207:                                              ; preds = %205, %169
  %208 = phi i32 [ %206, %205 ], [ %171, %169 ]
  br label %37

209:                                              ; preds = %44, %37, %41
  %210 = phi i32 [ 38, %44 ], [ %39, %37 ], [ 38, %41 ]
  %211 = icmp eq i32 %38, 0
  br i1 %211, label %246, label %212

212:                                              ; preds = %209
  %213 = sext i32 %38 to i64
  %214 = getelementptr inbounds [1006 x i8], [1006 x i8]* %3, i64 0, i64 %213
  store i8 0, i8* %214, align 1
  %215 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  %216 = icmp eq %struct._xmlSAXHandler* %215, null
  br i1 %216, label %250, label %217

217:                                              ; preds = %212
  %218 = load i32, i32* %33, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %250

220:                                              ; preds = %217
  %221 = call fastcc i32 @areBlanks(%struct._xmlParserCtxt* %0, i8* nonnull %5, i32 %38)
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %239, label %223

223:                                              ; preds = %220
  %224 = load i32, i32* %34, align 8
  %225 = icmp eq i32 %224, 0
  %226 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  br i1 %225, label %233, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %226, i64 0, i32 17
  %229 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %228, align 8
  %230 = icmp eq void (i8*, i8*, i32)* %229, null
  br i1 %230, label %250, label %231

231:                                              ; preds = %227
  %232 = load i8*, i8** %35, align 8
  call void %229(i8* %232, i8* nonnull %5, i32 %38) #9
  br label %250

233:                                              ; preds = %223
  %234 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %226, i64 0, i32 18
  %235 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %234, align 8
  %236 = icmp eq void (i8*, i8*, i32)* %235, null
  br i1 %236, label %250, label %237

237:                                              ; preds = %233
  %238 = load i8*, i8** %35, align 8
  call void %235(i8* %238, i8* nonnull %5, i32 %38) #9
  br label %250

239:                                              ; preds = %220
  call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0)
  %240 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %32, align 8
  %241 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %240, i64 0, i32 17
  %242 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %241, align 8
  %243 = icmp eq void (i8*, i8*, i32)* %242, null
  br i1 %243, label %250, label %244

244:                                              ; preds = %239
  %245 = load i8*, i8** %35, align 8
  call void %242(i8* %245, i8* nonnull %5, i32 %38) #9
  br label %250

246:                                              ; preds = %209
  %247 = icmp eq i32 %210, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %246
  %249 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 -1, i32* %249, align 8
  br label %250

250:                                              ; preds = %227, %233, %239, %217, %212, %246, %248, %244, %231, %237
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 1006, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlCheckImplied(%struct._xmlParserCtxt*, i8*) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 8192
  %6 = icmp ne i32 %5, 0
  %7 = load i32, i32* @htmlOmittedDefaultValue, align 4
  %8 = icmp eq i32 %7, 0
  %9 = or i1 %6, %8
  br i1 %9, label %117, label %10

10:                                               ; preds = %2
  %11 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %117

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  tail call fastcc void @htmlnamePush(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %18 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %19 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %18, align 8
  %20 = icmp eq %struct._xmlSAXHandler* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %19, i64 0, i32 14
  %23 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %22, align 8
  %24 = icmp eq void (i8*, i8*, i8**)* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %27 = load i8*, i8** %26, align 8
  tail call void %23(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** null) #9
  br label %28

28:                                               ; preds = %21, %17, %25, %13
  %29 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %117

31:                                               ; preds = %28
  %32 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0)) #9
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %117

34:                                               ; preds = %31
  %35 = load i32, i32* %14, align 8
  %36 = icmp slt i32 %35, 2
  br i1 %36, label %37, label %70

37:                                               ; preds = %34
  %38 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i64 0, i64 0)) #9
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %37
  %41 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i64 0, i64 0)) #9
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %40
  %44 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i64 0, i64 0)) #9
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %43
  %47 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i64 0, i64 0)) #9
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %46
  %50 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i64 0, i64 0)) #9
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %49
  %53 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0)) #9
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %70, label %55

55:                                               ; preds = %52, %49, %46, %43, %40, %37
  %56 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 8
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, 2
  br i1 %58, label %117, label %59

59:                                               ; preds = %55
  tail call fastcc void @htmlnamePush(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0))
  %60 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %61 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %60, align 8
  %62 = icmp eq %struct._xmlSAXHandler* %61, null
  br i1 %62, label %117, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %61, i64 0, i32 14
  %65 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %64, align 8
  %66 = icmp eq void (i8*, i8*, i8**)* %65, null
  br i1 %66, label %117, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8
  tail call void %65(i8* %69, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0), i8** null) #9
  br label %117

70:                                               ; preds = %52, %34
  %71 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i64 0, i64 0)) #9
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %117

73:                                               ; preds = %70
  %74 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0)) #9
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %117

76:                                               ; preds = %73
  %77 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i64 0, i64 0)) #9
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %117

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 8
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %81, 9
  br i1 %82, label %117, label %83

83:                                               ; preds = %79
  %84 = load i32, i32* %14, align 8
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %106

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  br label %92

88:                                               ; preds = %99
  %89 = load i32, i32* %14, align 8
  %90 = sext i32 %89 to i64
  %91 = icmp slt i64 %105, %90
  br i1 %91, label %92, label %106

92:                                               ; preds = %86, %88
  %93 = phi i64 [ 0, %86 ], [ %105, %88 ]
  %94 = load i8**, i8*** %87, align 8
  %95 = getelementptr inbounds i8*, i8** %94, i64 %93
  %96 = load i8*, i8** %95, align 8
  %97 = tail call i32 @xmlStrEqual(i8* %96, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #9
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %117

99:                                               ; preds = %92
  %100 = load i8**, i8*** %87, align 8
  %101 = getelementptr inbounds i8*, i8** %100, i64 %93
  %102 = load i8*, i8** %101, align 8
  %103 = tail call i32 @xmlStrEqual(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0)) #9
  %104 = icmp eq i32 %103, 0
  %105 = add nuw nsw i64 %93, 1
  br i1 %104, label %88, label %117

106:                                              ; preds = %88, %83
  tail call fastcc void @htmlnamePush(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0))
  %107 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %108 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %107, align 8
  %109 = icmp eq %struct._xmlSAXHandler* %108, null
  br i1 %109, label %117, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %108, i64 0, i32 14
  %112 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %111, align 8
  %113 = icmp eq void (i8*, i8*, i8**)* %112, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %116 = load i8*, i8** %115, align 8
  tail call void %112(i8* %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8** null) #9
  br label %117

117:                                              ; preds = %99, %92, %2, %67, %114, %70, %73, %76, %106, %110, %59, %63, %79, %55, %28, %31, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlnamePush(%struct._xmlParserCtxt*, i8*) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 3
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0)) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  store i32 3, i32* %3, align 4
  br label %15

10:                                               ; preds = %6
  %11 = load i32, i32* %3, align 4
  br label %12

12:                                               ; preds = %10, %2
  %13 = phi i32 [ %11, %10 ], [ %4, %2 ]
  %14 = icmp slt i32 %13, 10
  br i1 %14, label %15, label %19

15:                                               ; preds = %9, %12
  %16 = tail call i32 @xmlStrEqual(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #9
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store i32 10, i32* %3, align 4
  br label %19

19:                                               ; preds = %15, %18, %12
  %20 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 31
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %21, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %27 = load i8**, i8*** %26, align 8
  br label %56

28:                                               ; preds = %19
  %29 = shl nsw i32 %23, 1
  store i32 %29, i32* %22, align 4
  %30 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %31 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %32 = bitcast i8*** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = sext i32 %29 to i64
  %35 = shl nsw i64 %34, 3
  %36 = tail call i8* %30(i8* %33, i64 %35) #9
  store i8* %36, i8** %32, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %28
  %39 = bitcast i8* %36 to i8**
  %40 = load i32, i32* %20, align 8
  br label %56

41:                                               ; preds = %28
  %42 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %42, label %54, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %64, label %51

51:                                               ; preds = %47, %43
  %52 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %52, align 8
  %53 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 -1, i32* %53, align 8
  store i32 1, i32* %44, align 4
  br label %54

54:                                               ; preds = %51, %41
  %55 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %55, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* null, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.819, i64 0, i64 0)) #9
  br label %64

56:                                               ; preds = %38, %25
  %57 = phi i32 [ %21, %25 ], [ %40, %38 ]
  %58 = phi i8** [ %27, %25 ], [ %39, %38 ]
  %59 = sext i32 %57 to i64
  %60 = getelementptr inbounds i8*, i8** %58, i64 %59
  store i8* %1, i8** %60, align 8
  %61 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  store i8* %1, i8** %61, align 8
  %62 = load i32, i32* %20, align 8
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %20, align 8
  br label %64

64:                                               ; preds = %54, %47, %56
  ret void
}

declare void @xmlParserInputShrink(%struct._xmlParserInput*) local_unnamed_addr #3

declare i32 @xmlCopyChar(i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @areBlanks(%struct._xmlParserCtxt* nocapture readonly, i8* nocapture readonly, i32) unnamed_addr #1 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %3
  %6 = zext i32 %2 to i64
  br label %7

7:                                                ; preds = %11, %5
  %8 = phi i64 [ 0, %5 ], [ %12, %11 ]
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = load i8, i8* %9, align 1
  switch i8 %10, label %105 [
    i8 32, label %11
    i8 13, label %11
    i8 10, label %11
    i8 9, label %11
  ]

11:                                               ; preds = %7, %7, %7, %7
  %12 = add nuw nsw i64 %8, 1
  %13 = icmp eq i64 %12, %6
  br i1 %13, label %14, label %7

14:                                               ; preds = %11, %3
  %15 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %16 = load %struct._xmlParserInput*, %struct._xmlParserInput** %15, align 8
  %17 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %16, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8
  %19 = load i8, i8* %18, align 1
  switch i8 %19, label %20 [
    i8 0, label %105
    i8 60, label %21
  ]

20:                                               ; preds = %14
  br label %105

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %105, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @xmlStrEqual(i8* nonnull %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %105

28:                                               ; preds = %25
  %29 = load i8*, i8** %22, align 8
  %30 = tail call i32 @xmlStrEqual(i8* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0)) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %105

32:                                               ; preds = %28
  %33 = load i8*, i8** %22, align 8
  %34 = tail call i32 @xmlStrEqual(i8* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 2
  %38 = load %struct._xmlDoc*, %struct._xmlDoc** %37, align 8
  %39 = icmp eq %struct._xmlDoc* %38, null
  br i1 %39, label %54, label %40

40:                                               ; preds = %36
  %41 = tail call %struct._xmlDtd* @xmlGetIntSubset(%struct._xmlDoc* nonnull %38) #9
  %42 = icmp eq %struct._xmlDtd* %41, null
  br i1 %42, label %54, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct._xmlDtd, %struct._xmlDtd* %41, i64 0, i32 13
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = tail call i32 @xmlStrcasecmp(i8* nonnull %45, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.837, i64 0, i64 0)) #9
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %105, label %50

50:                                               ; preds = %47
  %51 = load i8*, i8** %44, align 8
  %52 = tail call i32 @xmlStrcasecmp(i8* %51, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.838, i64 0, i64 0)) #9
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %105, label %54

54:                                               ; preds = %50, %43, %40, %36, %32
  %55 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 13
  %56 = load %struct._xmlNode*, %struct._xmlNode** %55, align 8
  %57 = icmp eq %struct._xmlNode* %56, null
  br i1 %57, label %105, label %58

58:                                               ; preds = %54
  %59 = tail call %struct._xmlNode* @xmlGetLastChild(%struct._xmlNode* nonnull %56) #9
  %60 = icmp eq %struct._xmlNode* %59, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %58, %66
  %62 = phi %struct._xmlNode* [ %68, %66 ], [ %59, %58 ]
  %63 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %62, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 8
  br i1 %65, label %66, label %90

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %62, i64 0, i32 7
  %68 = load %struct._xmlNode*, %struct._xmlNode** %67, align 8
  %69 = icmp eq %struct._xmlNode* %68, null
  br i1 %69, label %70, label %61

70:                                               ; preds = %66, %58
  %71 = load %struct._xmlNode*, %struct._xmlNode** %55, align 8
  %72 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %71, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %71, i64 0, i32 10
  %77 = load i8*, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %79, label %105

79:                                               ; preds = %75, %70
  br label %82

80:                                               ; preds = %82
  %81 = icmp eq i64 %89, 53
  br i1 %81, label %105, label %82

82:                                               ; preds = %79, %80
  %83 = phi i64 [ %89, %80 ], [ 0, %79 ]
  %84 = load i8*, i8** %22, align 8
  %85 = getelementptr inbounds [53 x i8*], [53 x i8*]* @allowPCData, i64 0, i64 %83
  %86 = load i8*, i8** %85, align 8
  %87 = tail call i32 @xmlStrEqual(i8* %84, i8* %86) #9
  %88 = icmp eq i32 %87, 0
  %89 = add nuw nsw i64 %83, 1
  br i1 %88, label %80, label %105

90:                                               ; preds = %61
  %91 = tail call i32 @xmlNodeIsText(%struct._xmlNode* nonnull %62) #9
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %62, i64 0, i32 2
  br label %97

95:                                               ; preds = %97
  %96 = icmp eq i64 %104, 53
  br i1 %96, label %105, label %97

97:                                               ; preds = %95, %93
  %98 = phi i64 [ 0, %93 ], [ %104, %95 ]
  %99 = load i8*, i8** %94, align 8
  %100 = getelementptr inbounds [53 x i8*], [53 x i8*]* @allowPCData, i64 0, i64 %98
  %101 = load i8*, i8** %100, align 8
  %102 = tail call i32 @xmlStrEqual(i8* %99, i8* %101) #9
  %103 = icmp eq i32 %102, 0
  %104 = add nuw nsw i64 %98, 1
  br i1 %103, label %95, label %105

105:                                              ; preds = %7, %97, %95, %82, %80, %90, %75, %54, %47, %50, %28, %25, %21, %14, %20
  %106 = phi i32 [ 0, %20 ], [ 1, %14 ], [ 1, %21 ], [ 1, %25 ], [ 1, %28 ], [ 1, %50 ], [ 1, %47 ], [ 0, %54 ], [ 0, %75 ], [ 0, %90 ], [ 1, %80 ], [ 0, %82 ], [ 1, %95 ], [ 0, %97 ], [ 0, %7 ]
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %2, label %104, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  tail call fastcc void @htmlCheckImplied(%struct._xmlParserCtxt* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i64 0, i64 0))
  tail call fastcc void @htmlnamePush(%struct._xmlParserCtxt* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i64 0, i64 0))
  %10 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %8, align 8
  %11 = icmp eq %struct._xmlSAXHandler* %10, null
  br i1 %11, label %104, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %10, i64 0, i32 14
  %14 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %13, align 8
  %15 = icmp eq void (i8*, i8*, i8**)* %14, null
  br i1 %15, label %104, label %16

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 8
  tail call void %14(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i64 0, i64 0), i8** null) #9
  br label %104

18:                                               ; preds = %3
  %19 = load i32, i32* @htmlOmittedDefaultValue, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %104, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @xmlStrEqual(i8* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = tail call i32 @xmlStrEqual(i8* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0)) #9
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %104, label %27

27:                                               ; preds = %24, %21
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %29 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %30 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %31 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %32 = bitcast i8** %4 to i64*
  %33 = load i8*, i8** %4, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %95, label %35

35:                                               ; preds = %27, %92
  %36 = phi i8* [ %93, %92 ], [ %33, %27 ]
  br label %37

37:                                               ; preds = %35, %58
  %38 = phi i64 [ %60, %58 ], [ 251, %35 ]
  %39 = phi i64 [ %59, %58 ], [ 0, %35 ]
  %40 = add i64 %39, %38
  %41 = lshr i64 %40, 1
  %42 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %41
  %43 = getelementptr inbounds %struct.htmlStartCloseEntry, %struct.htmlStartCloseEntry* %42, i64 0, i32 0
  %44 = load i8*, i8** %43, align 16
  %45 = tail call i32 @strcmp(i8* nonnull %36, i8* %44) #10
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %37
  %48 = getelementptr [251 x %struct.htmlStartCloseEntry], [251 x %struct.htmlStartCloseEntry]* @htmlStartClose, i64 0, i64 %41, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = tail call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i64 0, i64 0), i8* %49) #10
  br label %51

51:                                               ; preds = %47, %37
  %52 = phi i32 [ %50, %47 ], [ %45, %37 ]
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %51
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %54
  %57 = add nuw i64 %41, 1
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i64 [ %57, %56 ], [ %39, %51 ]
  %60 = phi i64 [ %38, %56 ], [ %41, %51 ]
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %37, label %95

62:                                               ; preds = %54
  %63 = icmp eq %struct.htmlStartCloseEntry* %42, null
  br i1 %63, label %95, label %64

64:                                               ; preds = %62
  %65 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %28, align 8
  %66 = icmp eq %struct._xmlSAXHandler* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %65, i64 0, i32 15
  %69 = load void (i8*, i8*)*, void (i8*, i8*)** %68, align 8
  %70 = icmp eq void (i8*, i8*)* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = load i8*, i8** %29, align 8
  tail call void %69(i8* %72, i8* nonnull %36) #9
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = load i32, i32* %30, align 8
  %75 = icmp slt i32 %74, 1
  br i1 %75, label %92, label %76

76:                                               ; preds = %73
  %77 = add nsw i32 %74, -1
  store i32 %77, i32* %30, align 8
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %76
  %80 = load i8**, i8*** %31, align 8
  %81 = add nsw i32 %74, -2
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8*, i8** %80, i64 %82
  %84 = bitcast i8** %83 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %32, align 8
  br label %88

86:                                               ; preds = %76
  store i8* null, i8** %4, align 8
  %87 = load i8**, i8*** %31, align 8
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i8** [ %87, %86 ], [ %80, %79 ]
  %90 = sext i32 %77 to i64
  %91 = getelementptr inbounds i8*, i8** %89, i64 %90
  store i8* null, i8** %91, align 8
  br label %92

92:                                               ; preds = %88, %73
  %93 = load i8*, i8** %4, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %95, label %35

95:                                               ; preds = %62, %92, %58, %27
  tail call fastcc void @htmlCheckImplied(%struct._xmlParserCtxt* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i64 0, i64 0))
  tail call fastcc void @htmlnamePush(%struct._xmlParserCtxt* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i64 0, i64 0))
  %96 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %28, align 8
  %97 = icmp eq %struct._xmlSAXHandler* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %96, i64 0, i32 14
  %100 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %99, align 8
  %101 = icmp eq void (i8*, i8*, i8**)* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = load i8*, i8** %29, align 8
  tail call void %100(i8* %103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i64 0, i64 0), i8** null) #9
  br label %104

104:                                              ; preds = %24, %102, %95, %98, %18, %16, %7, %12, %1
  ret void
}

declare %struct._xmlNode* @xmlGetLastChild(%struct._xmlNode*) local_unnamed_addr #3

declare i32 @xmlNodeIsText(%struct._xmlNode*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @htmlParseHTMLAttribute(%struct._xmlParserCtxt*, i8 zeroext) unnamed_addr #1 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  store i8* null, i8** %3, align 8
  %6 = load i8* (i64)*, i8* (i64)** @xmlMallocAtomic, align 8
  %7 = tail call i8* %6(i64 100) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %11 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %12 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %11, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  %16 = icmp eq i8 %14, %1
  %17 = or i1 %15, %16
  br i1 %17, label %363, label %18

18:                                               ; preds = %9
  %19 = icmp eq i8 %1, 0
  %20 = bitcast i32* %4 to i8*
  br label %36

21:                                               ; preds = %2
  %22 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %366, label %31

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %32, align 8
  %33 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 -1, i32* %33, align 8
  store i32 1, i32* %24, align 4
  br label %34

34:                                               ; preds = %31, %21
  %35 = bitcast %struct._xmlParserCtxt* %0 to i8*
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %35, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([26 x i8], [26 x i8]* @.str.843, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([26 x i8], [26 x i8]* @.str.843, i64 0, i64 0)) #9
  br label %366

36:                                               ; preds = %18, %352
  %37 = phi i8 [ %14, %18 ], [ %359, %352 ]
  %38 = phi i8* [ %13, %18 ], [ %358, %352 ]
  %39 = phi i8* [ %7, %18 ], [ %355, %352 ]
  %40 = phi i32 [ 100, %18 ], [ %354, %352 ]
  %41 = phi i8* [ %7, %18 ], [ %353, %352 ]
  %42 = icmp eq i8 %37, 62
  %43 = and i1 %19, %42
  br i1 %43, label %363, label %44

44:                                               ; preds = %36
  br i1 %19, label %45, label %46

45:                                               ; preds = %44
  switch i8 %37, label %282 [
    i8 32, label %363
    i8 13, label %363
    i8 10, label %363
    i8 9, label %363
    i8 38, label %48
  ]

46:                                               ; preds = %44
  %47 = icmp eq i8 %37, 38
  br i1 %47, label %48, label %282

48:                                               ; preds = %45, %46
  %49 = getelementptr inbounds i8, i8* %38, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 35
  br i1 %51, label %52, label %118

52:                                               ; preds = %48
  %53 = call i32 @htmlParseCharRef(%struct._xmlParserCtxt* %0)
  %54 = icmp ult i32 %53, 128
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  %56 = icmp ult i32 %53, 2048
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  %58 = icmp ult i32 %53, 65536
  %59 = select i1 %58, i32 12, i32 18
  %60 = select i1 %58, i8 15, i8 7
  %61 = select i1 %58, i8 -32, i8 -16
  %62 = select i1 %58, i32 6, i32 12
  br label %66

63:                                               ; preds = %52
  %64 = trunc i32 %53 to i8
  store i8 %64, i8* %39, align 1
  %65 = getelementptr inbounds i8, i8* %39, i64 1
  br label %83

66:                                               ; preds = %57, %55
  %67 = phi i32 [ 6, %55 ], [ %59, %57 ]
  %68 = phi i8 [ 31, %55 ], [ %60, %57 ]
  %69 = phi i8 [ -64, %55 ], [ %61, %57 ]
  %70 = phi i32 [ 0, %55 ], [ %62, %57 ]
  %71 = lshr i32 %53, %67
  %72 = trunc i32 %71 to i8
  %73 = and i8 %68, %72
  %74 = or i8 %73, %69
  store i8 %74, i8* %39, align 1
  %75 = getelementptr inbounds i8, i8* %39, i64 1
  %76 = lshr i32 %53, %70
  %77 = trunc i32 %76 to i8
  %78 = and i8 %77, 63
  %79 = or i8 %78, -128
  store i8 %79, i8* %75, align 1
  %80 = add nsw i32 %70, -6
  %81 = getelementptr inbounds i8, i8* %39, i64 2
  %82 = icmp sgt i32 %80, -1
  br i1 %82, label %382, label %83

83:                                               ; preds = %66, %382, %390, %63
  %84 = phi i8* [ %65, %63 ], [ %81, %66 ], [ %388, %382 ], [ %395, %390 ]
  %85 = ptrtoint i8* %84 to i64
  %86 = ptrtoint i8* %41 to i64
  %87 = sub i64 %85, %86
  %88 = add nsw i32 %40, -100
  %89 = sext i32 %88 to i64
  %90 = icmp sgt i64 %87, %89
  br i1 %90, label %91, label %352

91:                                               ; preds = %83
  %92 = shl nsw i32 %40, 1
  %93 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %94 = sext i32 %92 to i64
  %95 = call i8* %93(i8* %41, i64 %94) #9
  %96 = icmp eq i8* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %91
  %98 = shl i64 %87, 32
  %99 = ashr exact i64 %98, 32
  %100 = getelementptr inbounds i8, i8* %95, i64 %99
  br label %352

101:                                              ; preds = %91
  %102 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, -1
  br i1 %110, label %116, label %111

111:                                              ; preds = %107, %103
  %112 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %112, align 8
  %113 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 -1, i32* %113, align 8
  store i32 1, i32* %104, align 4
  br label %114

114:                                              ; preds = %111, %101
  %115 = bitcast %struct._xmlParserCtxt* %0 to i8*
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %115, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0)) #9
  br label %116

116:                                              ; preds = %107, %114
  %117 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %117(i8* %41) #9
  br label %366

118:                                              ; preds = %48
  %119 = call %struct._htmlEntityDesc* @htmlParseEntityRef(%struct._xmlParserCtxt* %0, i8** nonnull %3)
  %120 = load i8*, i8** %3, align 8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %122, label %157

122:                                              ; preds = %118
  %123 = getelementptr inbounds i8, i8* %39, i64 1
  store i8 38, i8* %39, align 1
  %124 = ptrtoint i8* %123 to i64
  %125 = ptrtoint i8* %41 to i64
  %126 = sub i64 %124, %125
  %127 = add nsw i32 %40, -100
  %128 = sext i32 %127 to i64
  %129 = icmp sgt i64 %126, %128
  br i1 %129, label %130, label %352

130:                                              ; preds = %122
  %131 = shl nsw i32 %40, 1
  %132 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %133 = sext i32 %131 to i64
  %134 = call i8* %132(i8* %41, i64 %133) #9
  %135 = icmp eq i8* %134, null
  br i1 %135, label %140, label %136

136:                                              ; preds = %130
  %137 = shl i64 %126, 32
  %138 = ashr exact i64 %137, 32
  %139 = getelementptr inbounds i8, i8* %134, i64 %138
  br label %352

140:                                              ; preds = %130
  %141 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %141, label %153, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, -1
  br i1 %149, label %155, label %150

150:                                              ; preds = %146, %142
  %151 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %151, align 8
  %152 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 -1, i32* %152, align 8
  store i32 1, i32* %143, align 4
  br label %153

153:                                              ; preds = %150, %140
  %154 = bitcast %struct._xmlParserCtxt* %0 to i8*
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %154, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0)) #9
  br label %155

155:                                              ; preds = %153, %146
  %156 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %156(i8* %41) #9
  br label %366

157:                                              ; preds = %118
  %158 = icmp eq %struct._htmlEntityDesc* %119, null
  br i1 %158, label %159, label %213

159:                                              ; preds = %157
  store i8 38, i8* %39, align 1
  %160 = load i8*, i8** %3, align 8
  %161 = getelementptr inbounds i8, i8* %39, i64 1
  %162 = load i8, i8* %160, align 1
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %352, label %164

164:                                              ; preds = %159, %204
  %165 = phi i8 [ %211, %204 ], [ %162, %159 ]
  %166 = phi i8* [ %210, %204 ], [ %161, %159 ]
  %167 = phi i8* [ %209, %204 ], [ %160, %159 ]
  %168 = phi i32 [ %207, %204 ], [ %40, %159 ]
  %169 = phi i8* [ %206, %204 ], [ %41, %159 ]
  %170 = ptrtoint i8* %166 to i64
  %171 = ptrtoint i8* %169 to i64
  %172 = sub i64 %170, %171
  %173 = add nsw i32 %168, -100
  %174 = sext i32 %173 to i64
  %175 = icmp sgt i64 %172, %174
  br i1 %175, label %176, label %204

176:                                              ; preds = %164
  %177 = shl nsw i32 %168, 1
  %178 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %179 = sext i32 %177 to i64
  %180 = call i8* %178(i8* %169, i64 %179) #9
  %181 = icmp eq i8* %180, null
  br i1 %181, label %187, label %182

182:                                              ; preds = %176
  %183 = shl i64 %172, 32
  %184 = ashr exact i64 %183, 32
  %185 = getelementptr inbounds i8, i8* %180, i64 %184
  %186 = load i8, i8* %167, align 1
  br label %204

187:                                              ; preds = %176
  %188 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %188, label %200, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %197, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, -1
  br i1 %196, label %202, label %197

197:                                              ; preds = %193, %189
  %198 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %198, align 8
  %199 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 -1, i32* %199, align 8
  store i32 1, i32* %190, align 4
  br label %200

200:                                              ; preds = %197, %187
  %201 = bitcast %struct._xmlParserCtxt* %0 to i8*
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %201, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0)) #9
  br label %202

202:                                              ; preds = %200, %193
  %203 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %203(i8* %169) #9
  br label %366

204:                                              ; preds = %182, %164
  %205 = phi i8 [ %165, %164 ], [ %186, %182 ]
  %206 = phi i8* [ %169, %164 ], [ %180, %182 ]
  %207 = phi i32 [ %168, %164 ], [ %177, %182 ]
  %208 = phi i8* [ %166, %164 ], [ %185, %182 ]
  %209 = getelementptr inbounds i8, i8* %167, i64 1
  store i8 %205, i8* %208, align 1
  %210 = getelementptr inbounds i8, i8* %208, i64 1
  %211 = load i8, i8* %209, align 1
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %352, label %164

213:                                              ; preds = %157
  %214 = ptrtoint i8* %39 to i64
  %215 = ptrtoint i8* %41 to i64
  %216 = sub i64 %214, %215
  %217 = add nsw i32 %40, -100
  %218 = sext i32 %217 to i64
  %219 = icmp sgt i64 %216, %218
  br i1 %219, label %220, label %245

220:                                              ; preds = %213
  %221 = shl nsw i32 %40, 1
  %222 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %223 = sext i32 %221 to i64
  %224 = call i8* %222(i8* %41, i64 %223) #9
  %225 = icmp eq i8* %224, null
  br i1 %225, label %230, label %226

226:                                              ; preds = %220
  %227 = shl i64 %216, 32
  %228 = ashr exact i64 %227, 32
  %229 = getelementptr inbounds i8, i8* %224, i64 %228
  br label %245

230:                                              ; preds = %220
  %231 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %231, label %243, label %232

232:                                              ; preds = %230
  %233 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %240, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %238 = load i32, i32* %237, align 8
  %239 = icmp eq i32 %238, -1
  br i1 %239, label %280, label %240

240:                                              ; preds = %236, %232
  %241 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %241, align 8
  %242 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 -1, i32* %242, align 8
  store i32 1, i32* %233, align 4
  br label %243

243:                                              ; preds = %240, %230
  %244 = bitcast %struct._xmlParserCtxt* %0 to i8*
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %244, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0)) #9
  br label %280

245:                                              ; preds = %226, %213
  %246 = phi i8* [ %41, %213 ], [ %224, %226 ]
  %247 = phi i32 [ %40, %213 ], [ %221, %226 ]
  %248 = phi i8* [ %39, %213 ], [ %229, %226 ]
  %249 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %119, i64 0, i32 0
  %250 = load i32, i32* %249, align 8
  %251 = icmp ult i32 %250, 128
  br i1 %251, label %260, label %252

252:                                              ; preds = %245
  %253 = icmp ult i32 %250, 2048
  br i1 %253, label %263, label %254

254:                                              ; preds = %252
  %255 = icmp ult i32 %250, 65536
  %256 = select i1 %255, i32 12, i32 18
  %257 = select i1 %255, i8 15, i8 7
  %258 = select i1 %255, i8 -32, i8 -16
  %259 = select i1 %255, i32 6, i32 12
  br label %263

260:                                              ; preds = %245
  %261 = trunc i32 %250 to i8
  store i8 %261, i8* %248, align 1
  %262 = getelementptr inbounds i8, i8* %248, i64 1
  br label %352

263:                                              ; preds = %254, %252
  %264 = phi i32 [ 6, %252 ], [ %256, %254 ]
  %265 = phi i8 [ 31, %252 ], [ %257, %254 ]
  %266 = phi i8 [ -64, %252 ], [ %258, %254 ]
  %267 = phi i32 [ 0, %252 ], [ %259, %254 ]
  %268 = lshr i32 %250, %264
  %269 = trunc i32 %268 to i8
  %270 = and i8 %265, %269
  %271 = or i8 %270, %266
  store i8 %271, i8* %248, align 1
  %272 = getelementptr inbounds i8, i8* %248, i64 1
  %273 = lshr i32 %250, %267
  %274 = trunc i32 %273 to i8
  %275 = and i8 %274, 63
  %276 = or i8 %275, -128
  store i8 %276, i8* %272, align 1
  %277 = add nsw i32 %267, -6
  %278 = getelementptr inbounds i8, i8* %248, i64 2
  %279 = icmp sgt i32 %277, -1
  br i1 %279, label %368, label %352

280:                                              ; preds = %236, %243
  %281 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %281(i8* %41) #9
  br label %366

282:                                              ; preds = %45, %46
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  store i32 -1431655766, i32* %4, align 4
  %283 = ptrtoint i8* %39 to i64
  %284 = ptrtoint i8* %41 to i64
  %285 = sub i64 %283, %284
  %286 = add nsw i32 %40, -100
  %287 = sext i32 %286 to i64
  %288 = icmp sgt i64 %285, %287
  br i1 %288, label %289, label %314

289:                                              ; preds = %282
  %290 = shl nsw i32 %40, 1
  %291 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %292 = sext i32 %290 to i64
  %293 = call i8* %291(i8* %41, i64 %292) #9
  %294 = icmp eq i8* %293, null
  br i1 %294, label %299, label %295

295:                                              ; preds = %289
  %296 = shl i64 %285, 32
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i8, i8* %293, i64 %297
  br label %314

299:                                              ; preds = %289
  %300 = icmp eq %struct._xmlParserCtxt* %0, null
  br i1 %300, label %312, label %301

301:                                              ; preds = %299
  %302 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %303 = load i32, i32* %302, align 4
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %309, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  %307 = load i32, i32* %306, align 8
  %308 = icmp eq i32 %307, -1
  br i1 %308, label %350, label %309

309:                                              ; preds = %305, %301
  %310 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 19
  store i32 2, i32* %310, align 8
  %311 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 26
  store i32 -1, i32* %311, align 8
  store i32 1, i32* %302, align 4
  br label %312

312:                                              ; preds = %309, %299
  %313 = bitcast %struct._xmlParserCtxt* %0 to i8*
  call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* null, void (i8*, i8*, ...)* null, i8* null, i8* %313, i8* null, i32 1, i32 2, i32 3, i8* null, i32 0, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0), i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.818, i64 0, i64 0), i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.844, i64 0, i64 0)) #9
  br label %350

314:                                              ; preds = %295, %282
  %315 = phi i8* [ %41, %282 ], [ %293, %295 ]
  %316 = phi i32 [ %40, %282 ], [ %290, %295 ]
  %317 = phi i8* [ %39, %282 ], [ %298, %295 ]
  %318 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %4)
  %319 = icmp ult i32 %318, 128
  br i1 %319, label %328, label %320

320:                                              ; preds = %314
  %321 = icmp ult i32 %318, 2048
  br i1 %321, label %331, label %322

322:                                              ; preds = %320
  %323 = icmp ult i32 %318, 65536
  %324 = select i1 %323, i32 12, i32 18
  %325 = select i1 %323, i8 15, i8 7
  %326 = select i1 %323, i8 -32, i8 -16
  %327 = select i1 %323, i32 6, i32 12
  br label %331

328:                                              ; preds = %314
  %329 = trunc i32 %318 to i8
  store i8 %329, i8* %317, align 1
  %330 = getelementptr inbounds i8, i8* %317, i64 1
  br label %348

331:                                              ; preds = %322, %320
  %332 = phi i32 [ 6, %320 ], [ %324, %322 ]
  %333 = phi i8 [ 31, %320 ], [ %325, %322 ]
  %334 = phi i8 [ -64, %320 ], [ %326, %322 ]
  %335 = phi i32 [ 0, %320 ], [ %327, %322 ]
  %336 = lshr i32 %318, %332
  %337 = trunc i32 %336 to i8
  %338 = and i8 %333, %337
  %339 = or i8 %338, %334
  store i8 %339, i8* %317, align 1
  %340 = getelementptr inbounds i8, i8* %317, i64 1
  %341 = lshr i32 %318, %335
  %342 = trunc i32 %341 to i8
  %343 = and i8 %342, 63
  %344 = or i8 %343, -128
  store i8 %344, i8* %340, align 1
  %345 = add nsw i32 %335, -6
  %346 = getelementptr inbounds i8, i8* %317, i64 2
  %347 = icmp sgt i32 %345, -1
  br i1 %347, label %396, label %348

348:                                              ; preds = %331, %396, %404, %328
  %349 = phi i8* [ %330, %328 ], [ %346, %331 ], [ %402, %396 ], [ %409, %404 ]
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  br label %352

350:                                              ; preds = %305, %312
  %351 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %351(i8* %41) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  br label %366

352:                                              ; preds = %263, %368, %376, %204, %260, %159, %83, %97, %348, %136, %122
  %353 = phi i8* [ %41, %122 ], [ %134, %136 ], [ %315, %348 ], [ %95, %97 ], [ %41, %83 ], [ %41, %159 ], [ %246, %260 ], [ %206, %204 ], [ %246, %376 ], [ %246, %368 ], [ %246, %263 ]
  %354 = phi i32 [ %40, %122 ], [ %131, %136 ], [ %316, %348 ], [ %92, %97 ], [ %40, %83 ], [ %40, %159 ], [ %247, %260 ], [ %207, %204 ], [ %247, %376 ], [ %247, %368 ], [ %247, %263 ]
  %355 = phi i8* [ %123, %122 ], [ %139, %136 ], [ %349, %348 ], [ %100, %97 ], [ %84, %83 ], [ %161, %159 ], [ %262, %260 ], [ %210, %204 ], [ %278, %263 ], [ %374, %368 ], [ %381, %376 ]
  %356 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %357 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %356, i64 0, i32 4
  %358 = load i8*, i8** %357, align 8
  %359 = load i8, i8* %358, align 1
  %360 = icmp eq i8 %359, 0
  %361 = icmp eq i8 %359, %1
  %362 = or i1 %360, %361
  br i1 %362, label %363, label %36

363:                                              ; preds = %352, %36, %45, %45, %45, %45, %9
  %364 = phi i8* [ %7, %9 ], [ %41, %45 ], [ %41, %45 ], [ %41, %45 ], [ %41, %45 ], [ %41, %36 ], [ %353, %352 ]
  %365 = phi i8* [ %7, %9 ], [ %39, %45 ], [ %39, %45 ], [ %39, %45 ], [ %39, %45 ], [ %39, %36 ], [ %355, %352 ]
  store i8 0, i8* %365, align 1
  br label %366

366:                                              ; preds = %350, %280, %202, %155, %116, %34, %27, %363
  %367 = phi i8* [ %364, %363 ], [ null, %116 ], [ null, %155 ], [ null, %202 ], [ null, %280 ], [ null, %350 ], [ null, %27 ], [ null, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i8* %367

368:                                              ; preds = %263
  %369 = lshr i32 %250, %277
  %370 = trunc i32 %369 to i8
  %371 = and i8 %370, 63
  %372 = or i8 %371, -128
  store i8 %372, i8* %278, align 1
  %373 = add nsw i32 %267, -12
  %374 = getelementptr inbounds i8, i8* %248, i64 3
  %375 = icmp sgt i32 %373, -1
  br i1 %375, label %376, label %352

376:                                              ; preds = %368
  %377 = lshr i32 %250, %373
  %378 = trunc i32 %377 to i8
  %379 = and i8 %378, 63
  %380 = or i8 %379, -128
  store i8 %380, i8* %374, align 1
  %381 = getelementptr inbounds i8, i8* %248, i64 4
  br label %352

382:                                              ; preds = %66
  %383 = lshr i32 %53, %80
  %384 = trunc i32 %383 to i8
  %385 = and i8 %384, 63
  %386 = or i8 %385, -128
  store i8 %386, i8* %81, align 1
  %387 = add nsw i32 %70, -12
  %388 = getelementptr inbounds i8, i8* %39, i64 3
  %389 = icmp sgt i32 %387, -1
  br i1 %389, label %390, label %83

390:                                              ; preds = %382
  %391 = lshr i32 %53, %387
  %392 = trunc i32 %391 to i8
  %393 = and i8 %392, 63
  %394 = or i8 %393, -128
  store i8 %394, i8* %388, align 1
  %395 = getelementptr inbounds i8, i8* %39, i64 4
  br label %83

396:                                              ; preds = %331
  %397 = lshr i32 %318, %345
  %398 = trunc i32 %397 to i8
  %399 = and i8 %398, 63
  %400 = or i8 %399, -128
  store i8 %400, i8* %346, align 1
  %401 = add nsw i32 %335, -12
  %402 = getelementptr inbounds i8, i8* %317, i64 3
  %403 = icmp sgt i32 %401, -1
  br i1 %403, label %404, label %348

404:                                              ; preds = %396
  %405 = lshr i32 %318, %401
  %406 = trunc i32 %405 to i8
  %407 = and i8 %406, 63
  %408 = or i8 %407, -128
  store i8 %408, i8* %402, align 1
  %409 = getelementptr inbounds i8, i8* %317, i64 4
  br label %348
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlCheckEncodingDirect(%struct._xmlParserCtxt*, i8*) unnamed_addr #1 {
  %3 = icmp eq %struct._xmlParserCtxt* %0, null
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %88, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 73
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 2097152
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %88

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %13 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %14 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %13, i64 0, i32 11
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %88

17:                                               ; preds = %11, %20
  %18 = phi i8* [ %21, %20 ], [ %1, %11 ]
  %19 = load i8, i8* %18, align 1
  switch i8 %19, label %22 [
    i8 32, label %20
    i8 9, label %20
  ]

20:                                               ; preds = %17, %17
  %21 = getelementptr inbounds i8, i8* %18, i64 1
  br label %17

22:                                               ; preds = %17
  %23 = tail call i8* @xmlStrdup(i8* %18) #9
  %24 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %25 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %24, i64 0, i32 11
  store i8* %23, i8** %25, align 8
  %26 = tail call i32 @xmlParseCharEncoding(i8* %18) #9
  switch i32 %26, label %37 [
    i32 -1, label %41
    i32 5, label %27
    i32 4, label %27
    i32 3, label %27
    i32 2, label %27
  ]

27:                                               ; preds = %22, %22, %22, %22
  %28 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %29 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %28, i64 0, i32 0
  %30 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %29, align 8
  %31 = icmp eq %struct._xmlParserInputBuffer* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %30, i64 0, i32 3
  %34 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %33, align 8
  %35 = icmp eq %struct._xmlCharEncodingHandler* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 81, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.846, i64 0, i64 0), i8* null, i8* null)
  br label %39

37:                                               ; preds = %22, %27, %32
  %38 = tail call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* %0, i32 %26) #9
  br label %39

39:                                               ; preds = %37, %36
  %40 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 47
  store i32 1, i32* %40, align 8
  br label %48

41:                                               ; preds = %22
  %42 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* %18) #9
  %43 = icmp eq %struct._xmlCharEncodingHandler* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = tail call i32 @xmlSwitchToEncoding(%struct._xmlParserCtxt* %0, %struct._xmlCharEncodingHandler* nonnull %42) #9
  %46 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 47
  store i32 1, i32* %46, align 8
  br label %48

47:                                               ; preds = %41
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.847, i64 0, i64 0), i8* %18, i8* null)
  br label %48

48:                                               ; preds = %44, %47, %39
  %49 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %50 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %49, i64 0, i32 0
  %51 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %50, align 8
  %52 = icmp eq %struct._xmlParserInputBuffer* %51, null
  br i1 %52, label %88, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %51, i64 0, i32 3
  %55 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %54, align 8
  %56 = icmp eq %struct._xmlCharEncodingHandler* %55, null
  br i1 %56, label %88, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %51, i64 0, i32 5
  %59 = load %struct._xmlBuf*, %struct._xmlBuf** %58, align 8
  %60 = icmp eq %struct._xmlBuf* %59, null
  br i1 %60, label %88, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %51, i64 0, i32 4
  %63 = load %struct._xmlBuf*, %struct._xmlBuf** %62, align 8
  %64 = icmp eq %struct._xmlBuf* %63, null
  br i1 %64, label %88, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %49, i64 0, i32 4
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %49, i64 0, i32 3
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %68, %71
  %73 = shl i64 %72, 32
  %74 = ashr exact i64 %73, 32
  %75 = tail call i64 @xmlBufShrink(%struct._xmlBuf* nonnull %63, i64 %74) #9
  %76 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %77 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %76, i64 0, i32 0
  %78 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %77, align 8
  %79 = tail call i32 @xmlCharEncInput(%struct._xmlParserInputBuffer* %78, i32 1) #9
  %80 = load %struct._xmlParserInput*, %struct._xmlParserInput** %12, align 8
  %81 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %80, i64 0, i32 0
  %82 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %81, align 8
  %83 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %82, i64 0, i32 4
  %84 = load %struct._xmlBuf*, %struct._xmlBuf** %83, align 8
  %85 = tail call i32 @xmlBufResetInput(%struct._xmlBuf* %84, %struct._xmlParserInput* %80) #9
  %86 = icmp slt i32 %79, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %65
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 81, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.848, i64 0, i64 0), i8* null, i8* null)
  br label %88

88:                                               ; preds = %48, %53, %57, %61, %87, %65, %6, %11, %2
  ret void
}

declare i32 @xmlParseCharEncoding(i8*) local_unnamed_addr #3

declare i64 @xmlBufShrink(%struct._xmlBuf*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @htmlParseEndTag(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = alloca [100 x i8], align 16
  %3 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %4 = load %struct._xmlParserInput*, %struct._xmlParserInput** %3, align 8
  %5 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %4, i64 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 60
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, i8* %6, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 47
  br i1 %12, label %14, label %13

13:                                               ; preds = %9, %1
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 74, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.851, i64 0, i64 0), i8* null, i8* null)
  br label %264

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %15, i8** %5, align 8
  %16 = load %struct._xmlParserInput*, %struct._xmlParserInput** %3, align 8
  %17 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %16, i64 0, i32 8
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 2
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %20) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 100, i1 false) #9
  %21 = load %struct._xmlParserInput*, %struct._xmlParserInput** %3, align 8
  %22 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %21, i64 0, i32 4
  %23 = load i8*, i8** %22, align 8
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, -33
  %26 = add i8 %25, -65
  %27 = icmp ult i8 %26, 26
  br i1 %27, label %28, label %29

28:                                               ; preds = %29, %29, %29, %14
  br label %31

29:                                               ; preds = %14
  switch i8 %24, label %30 [
    i8 95, label %28
    i8 58, label %28
    i8 46, label %28
  ]

30:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %20) #9
  br label %264

31:                                               ; preds = %28, %52
  %32 = phi i8 [ %56, %52 ], [ %24, %28 ]
  %33 = phi i64 [ %49, %52 ], [ 0, %28 ]
  %34 = phi i32 [ %50, %52 ], [ 0, %28 ]
  %35 = add i8 %32, -65
  %36 = icmp ult i8 %35, 26
  br i1 %36, label %44, label %37

37:                                               ; preds = %31
  %38 = add i8 %32, -97
  %39 = icmp ult i8 %38, 26
  %40 = add i8 %32, -48
  %41 = icmp ult i8 %40, 10
  %42 = or i1 %39, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  switch i8 %32, label %57 [
    i8 58, label %46
    i8 45, label %46
    i8 95, label %46
    i8 46, label %46
  ]

44:                                               ; preds = %31
  %45 = add nuw nsw i8 %32, 32
  br label %46

46:                                               ; preds = %37, %43, %43, %43, %43, %44
  %47 = phi i8 [ %45, %44 ], [ %32, %43 ], [ %32, %43 ], [ %32, %43 ], [ %32, %43 ], [ %32, %37 ]
  %48 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 %33
  store i8 %47, i8* %48, align 1
  %49 = add nuw nsw i64 %33, 1
  %50 = add nuw nsw i32 %34, 1
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %51 = icmp eq i64 %49, 100
  br i1 %51, label %59, label %52

52:                                               ; preds = %46
  %53 = load %struct._xmlParserInput*, %struct._xmlParserInput** %3, align 8
  %54 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %53, i64 0, i32 4
  %55 = load i8*, i8** %54, align 8
  %56 = load i8, i8* %55, align 1
  br label %31

57:                                               ; preds = %43
  %58 = trunc i64 %33 to i32
  br label %59

59:                                               ; preds = %46, %57
  %60 = phi i32 [ %58, %57 ], [ %50, %46 ]
  %61 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 57
  %62 = load %struct._xmlDict*, %struct._xmlDict** %61, align 8
  %63 = call i8* @xmlDictLookup(%struct._xmlDict* %62, i8* nonnull %20, i32 %60) #9
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %20) #9
  %64 = icmp eq i8* %63, null
  br i1 %64, label %264, label %65

65:                                               ; preds = %59
  call fastcc void @htmlSkipBlankChars(%struct._xmlParserCtxt* %0)
  %66 = load %struct._xmlParserInput*, %struct._xmlParserInput** %3, align 8
  %67 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %66, i64 0, i32 4
  %68 = load i8*, i8** %67, align 8
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 62
  br i1 %70, label %78, label %71

71:                                               ; preds = %65
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 73, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.852, i64 0, i64 0), i8* null, i8* null)
  br label %72

72:                                               ; preds = %77, %71
  %73 = load %struct._xmlParserInput*, %struct._xmlParserInput** %3, align 8
  %74 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %73, i64 0, i32 4
  %75 = load i8*, i8** %74, align 8
  %76 = load i8, i8* %75, align 1
  switch i8 %76, label %77 [
    i8 62, label %78
    i8 0, label %79
  ]

77:                                               ; preds = %72
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %72

78:                                               ; preds = %72, %65
  call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  br label %79

79:                                               ; preds = %72, %78
  %80 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 45
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = call i32 @xmlStrEqual(i8* nonnull %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %83
  %87 = call i32 @xmlStrEqual(i8* nonnull %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #9
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = call i32 @xmlStrEqual(i8* nonnull %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0)) #9
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %89, %86, %83
  %93 = load i32, i32* %80, align 8
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* %80, align 8
  br label %264

95:                                               ; preds = %89, %79
  %96 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %99 = sext i32 %97 to i64
  br label %100

100:                                              ; preds = %104, %95
  %101 = phi i64 [ %102, %104 ], [ %99, %95 ]
  %102 = add nsw i64 %101, -1
  %103 = icmp sgt i64 %101, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = load i8**, i8*** %98, align 8
  %106 = getelementptr inbounds i8*, i8** %105, i64 %102
  %107 = load i8*, i8** %106, align 8
  %108 = call i32 @xmlStrEqual(i8* nonnull %63, i8* %107) #9
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %100, label %111

110:                                              ; preds = %100
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 76, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.853, i64 0, i64 0), i8* nonnull %63, i8* null)
  br label %264

111:                                              ; preds = %104
  %112 = call fastcc i32 @htmlGetEndPriority(i8* nonnull %63) #9
  %113 = load i32, i32* %96, align 8
  %114 = sext i32 %113 to i64
  br label %115

115:                                              ; preds = %134, %111
  %116 = phi i64 [ %117, %134 ], [ %114, %111 ]
  %117 = add nsw i64 %116, -1
  %118 = icmp sgt i64 %116, 0
  br i1 %118, label %119, label %202

119:                                              ; preds = %115
  %120 = load i8**, i8*** %98, align 8
  %121 = getelementptr inbounds i8*, i8** %120, i64 %117
  %122 = load i8*, i8** %121, align 8
  %123 = call i32 @xmlStrEqual(i8* nonnull %63, i8* %122) #9
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %134, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %127 = load i8*, i8** %126, align 8
  %128 = call i32 @xmlStrEqual(i8* nonnull %63, i8* %127) #9
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %202

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %132 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %133 = bitcast i8** %126 to i64*
  br label %140

134:                                              ; preds = %119
  %135 = load i8**, i8*** %98, align 8
  %136 = getelementptr inbounds i8*, i8** %135, i64 %117
  %137 = load i8*, i8** %136, align 8
  %138 = call fastcc i32 @htmlGetEndPriority(i8* %137) #9
  %139 = icmp sgt i32 %138, %112
  br i1 %139, label %202, label %115

140:                                              ; preds = %198, %130
  %141 = load i8*, i8** %126, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %169, label %143

143:                                              ; preds = %140, %157
  %144 = phi i64 [ %159, %157 ], [ 92, %140 ]
  %145 = phi i64 [ %158, %157 ], [ 0, %140 ]
  %146 = add i64 %145, %144
  %147 = lshr i64 %146, 1
  %148 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %147
  %149 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %148, i64 0, i32 0
  %150 = load i8*, i8** %149, align 16
  %151 = call i32 @xmlStrcasecmp(i8* nonnull %141, i8* %150) #9
  %152 = icmp slt i32 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %143
  %154 = icmp eq i32 %151, 0
  br i1 %154, label %161, label %155

155:                                              ; preds = %153
  %156 = add nuw i64 %147, 1
  br label %157

157:                                              ; preds = %155, %143
  %158 = phi i64 [ %156, %155 ], [ %145, %143 ]
  %159 = phi i64 [ %144, %155 ], [ %147, %143 ]
  %160 = icmp ult i64 %158, %159
  br i1 %160, label %143, label %169

161:                                              ; preds = %153
  %162 = icmp eq %struct._htmlElemDesc* %148, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %161
  %164 = getelementptr [92 x %struct._htmlElemDesc], [92 x %struct._htmlElemDesc]* @html40ElementTable, i64 0, i64 %147, i32 2
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 3
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  %168 = load i8*, i8** %126, align 8
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 76, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.854, i64 0, i64 0), i8* nonnull %63, i8* %168) #9
  br label %169

169:                                              ; preds = %157, %167, %163, %161, %140
  %170 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %131, align 8
  %171 = icmp eq %struct._xmlSAXHandler* %170, null
  br i1 %171, label %179, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %170, i64 0, i32 15
  %174 = load void (i8*, i8*)*, void (i8*, i8*)** %173, align 8
  %175 = icmp eq void (i8*, i8*)* %174, null
  br i1 %175, label %179, label %176

176:                                              ; preds = %172
  %177 = load i8*, i8** %132, align 8
  %178 = load i8*, i8** %126, align 8
  call void %174(i8* %177, i8* %178) #9
  br label %179

179:                                              ; preds = %176, %172, %169
  %180 = load i32, i32* %96, align 8
  %181 = icmp slt i32 %180, 1
  br i1 %181, label %198, label %182

182:                                              ; preds = %179
  %183 = add nsw i32 %180, -1
  store i32 %183, i32* %96, align 8
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = load i8**, i8*** %98, align 8
  %187 = add nsw i32 %180, -2
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i8*, i8** %186, i64 %188
  %190 = bitcast i8** %189 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %133, align 8
  br label %194

192:                                              ; preds = %182
  store i8* null, i8** %126, align 8
  %193 = load i8**, i8*** %98, align 8
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i8** [ %193, %192 ], [ %186, %185 ]
  %196 = sext i32 %183 to i64
  %197 = getelementptr inbounds i8*, i8** %195, i64 %196
  store i8* null, i8** %197, align 8
  br label %198

198:                                              ; preds = %194, %179
  %199 = load i8*, i8** %126, align 8
  %200 = call i32 @xmlStrEqual(i8* nonnull %63, i8* %199) #9
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %140, label %202

202:                                              ; preds = %115, %134, %198, %125
  %203 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %204 = load i8*, i8** %203, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %264, label %206

206:                                              ; preds = %202
  %207 = call i32 @xmlStrEqual(i8* nonnull %204, i8* nonnull %63) #9
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  %210 = load i8*, i8** %203, align 8
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 76, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.854, i64 0, i64 0), i8* nonnull %63, i8* %210)
  br label %211

211:                                              ; preds = %206, %209
  %212 = load i8*, i8** %203, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %264, label %214

214:                                              ; preds = %211
  %215 = call i32 @xmlStrEqual(i8* nonnull %212, i8* nonnull %63) #9
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %264, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %219 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %218, align 8
  %220 = icmp eq %struct._xmlSAXHandler* %219, null
  br i1 %220, label %228, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %219, i64 0, i32 15
  %223 = load void (i8*, i8*)*, void (i8*, i8*)** %222, align 8
  %224 = icmp eq void (i8*, i8*)* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %227 = load i8*, i8** %226, align 8
  call void %223(i8* %227, i8* nonnull %63) #9
  br label %228

228:                                              ; preds = %221, %217, %225
  %229 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 84
  %230 = load i32, i32* %229, align 8
  %231 = icmp slt i32 %230, 1
  br i1 %231, label %244, label %232

232:                                              ; preds = %228
  %233 = add nsw i32 %230, -1
  store i32 %233, i32* %229, align 8
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %235, label %241

235:                                              ; preds = %232
  %236 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 86
  %237 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %236, align 8
  %238 = add nsw i32 %230, -2
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %237, i64 %239
  br label %241

241:                                              ; preds = %232, %235
  %242 = phi %struct._xmlParserNodeInfo* [ %240, %235 ], [ null, %232 ]
  %243 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 83
  store %struct._xmlParserNodeInfo* %242, %struct._xmlParserNodeInfo** %243, align 8
  br label %244

244:                                              ; preds = %241, %228
  %245 = load i32, i32* %96, align 8
  %246 = icmp slt i32 %245, 1
  br i1 %246, label %264, label %247

247:                                              ; preds = %244
  %248 = add nsw i32 %245, -1
  store i32 %248, i32* %96, align 8
  %249 = icmp sgt i32 %248, 0
  br i1 %249, label %250, label %258

250:                                              ; preds = %247
  %251 = load i8**, i8*** %98, align 8
  %252 = add nsw i32 %245, -2
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8*, i8** %251, i64 %253
  %255 = bitcast i8** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast i8** %203 to i64*
  store i64 %256, i64* %257, align 8
  br label %260

258:                                              ; preds = %247
  store i8* null, i8** %203, align 8
  %259 = load i8**, i8*** %98, align 8
  br label %260

260:                                              ; preds = %258, %250
  %261 = phi i8** [ %259, %258 ], [ %251, %250 ]
  %262 = sext i32 %248 to i64
  %263 = getelementptr inbounds i8*, i8** %261, i64 %262
  store i8* null, i8** %263, align 8
  br label %264

264:                                              ; preds = %202, %260, %244, %30, %214, %211, %59, %110, %92, %13
  %265 = phi i32 [ 0, %13 ], [ 0, %92 ], [ 0, %110 ], [ 0, %59 ], [ 0, %214 ], [ 0, %211 ], [ 0, %30 ], [ 1, %244 ], [ 1, %260 ], [ 0, %202 ]
  ret i32 %265
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParseScript(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = alloca [1005 x i8], align 16
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds [1005 x i8], [1005 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1005, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 1005, i1 false)
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9
  store i32 -1431655766, i32* %3, align 4
  %6 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %7 = load %struct._xmlParserInput*, %struct._xmlParserInput** %6, align 8
  %8 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %7, i64 0, i32 4
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %7, i64 0, i32 3
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = icmp sgt i64 %14, 500
  br i1 %15, label %16, label %23

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %7, i64 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp slt i64 %20, 500
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  tail call void @xmlParserInputShrink(%struct._xmlParserInput* %7) #9
  br label %23

23:                                               ; preds = %22, %16, %1
  %24 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %3)
  %25 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %26 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 55
  %27 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %29 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 56
  %30 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 27
  br label %31

31:                                               ; preds = %135, %23
  %32 = phi i32 [ 0, %23 ], [ %104, %135 ]
  %33 = phi i32 [ %24, %23 ], [ %142, %135 ]
  switch i32 %33, label %58 [
    i32 0, label %143
    i32 60, label %34
  ]

34:                                               ; preds = %31
  %35 = load %struct._xmlParserInput*, %struct._xmlParserInput** %6, align 8
  %36 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %35, i64 0, i32 4
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 47
  br i1 %40, label %41, label %71

41:                                               ; preds = %34
  %42 = load i32, i32* %26, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %41
  %45 = load i8*, i8** %25, align 8
  %46 = getelementptr inbounds i8, i8* %37, i64 2
  %47 = call i32 @xmlStrlen(i8* %45) #9
  %48 = call i32 @xmlStrncasecmp(i8* %45, i8* %46, i32 %47) #9
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %143, label %50

50:                                               ; preds = %44
  %51 = load i8*, i8** %25, align 8
  call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 76, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.855, i64 0, i64 0), i8* %51, i8* null)
  br label %71

52:                                               ; preds = %41
  %53 = getelementptr inbounds i8, i8* %37, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, -33
  %56 = add i8 %55, -65
  %57 = icmp ult i8 %56, 26
  br i1 %57, label %143, label %71

58:                                               ; preds = %31
  %59 = icmp slt i32 %33, 256
  br i1 %59, label %60, label %63

60:                                               ; preds = %58
  %61 = icmp sgt i32 %33, 31
  br i1 %61, label %71, label %62

62:                                               ; preds = %60
  switch i32 %33, label %84 [
    i32 13, label %71
    i32 10, label %71
    i32 9, label %71
  ]

63:                                               ; preds = %58
  %64 = icmp slt i32 %33, 55296
  %65 = add nsw i32 %33, -57344
  %66 = icmp ult i32 %65, 8190
  %67 = or i1 %64, %66
  %68 = add nsw i32 %33, -65536
  %69 = icmp ult i32 %68, 1048576
  %70 = or i1 %69, %67
  br i1 %70, label %71, label %84

71:                                               ; preds = %52, %50, %34, %62, %62, %62, %60, %63
  %72 = load i32, i32* %3, align 4
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %79

74:                                               ; preds = %71
  %75 = trunc i32 %33 to i8
  %76 = add nsw i32 %32, 1
  %77 = sext i32 %32 to i64
  %78 = getelementptr inbounds [1005 x i8], [1005 x i8]* %2, i64 0, i64 %77
  store i8 %75, i8* %78, align 1
  br label %85

79:                                               ; preds = %71
  %80 = sext i32 %32 to i64
  %81 = getelementptr inbounds [1005 x i8], [1005 x i8]* %2, i64 0, i64 %80
  %82 = call i32 @xmlCopyChar(i32 %72, i8* %81, i32 %33) #9
  %83 = add nsw i32 %82, %32
  br label %85

84:                                               ; preds = %62, %63
  call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.836, i64 0, i64 0), i32 %33)
  br label %103

85:                                               ; preds = %74, %79
  %86 = phi i32 [ %76, %74 ], [ %83, %79 ]
  %87 = icmp sgt i32 %86, 999
  br i1 %87, label %88, label %103

88:                                               ; preds = %85
  %89 = sext i32 %86 to i64
  %90 = getelementptr inbounds [1005 x i8], [1005 x i8]* %2, i64 0, i64 %89
  store i8 0, i8* %90, align 1
  %91 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %27, align 8
  %92 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %91, i64 0, i32 25
  %93 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %92, align 8
  %94 = icmp eq void (i8*, i8*, i32)* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %88
  %96 = load i8*, i8** %28, align 8
  call void %93(i8* %96, i8* nonnull %4, i32 %86) #9
  br label %103

97:                                               ; preds = %88
  %98 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %91, i64 0, i32 17
  %99 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %98, align 8
  %100 = icmp eq void (i8*, i8*, i32)* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = load i8*, i8** %28, align 8
  call void %99(i8* %102, i8* nonnull %4, i32 %86) #9
  br label %103

103:                                              ; preds = %84, %95, %101, %97, %85
  %104 = phi i32 [ %86, %85 ], [ 0, %97 ], [ 0, %101 ], [ 0, %95 ], [ %32, %84 ]
  %105 = load i32, i32* %29, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %103
  %108 = load %struct._xmlParserInput*, %struct._xmlParserInput** %6, align 8
  %109 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %108, i64 0, i32 5
  %110 = bitcast i8** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %108, i64 0, i32 4
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %111, %114
  %116 = icmp slt i64 %115, 250
  br i1 %116, label %117, label %119

117:                                              ; preds = %107
  %118 = call i32 @xmlParserInputGrow(%struct._xmlParserInput* %108, i32 250) #9
  br label %119

119:                                              ; preds = %103, %107, %117
  %120 = load %struct._xmlParserInput*, %struct._xmlParserInput** %6, align 8
  %121 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %120, i64 0, i32 4
  %122 = load i8*, i8** %121, align 8
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 10
  br i1 %124, label %125, label %131

125:                                              ; preds = %119
  %126 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %120, i64 0, i32 7
  %127 = load i32, i32* %126, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %126, align 4
  %129 = load %struct._xmlParserInput*, %struct._xmlParserInput** %6, align 8
  %130 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %129, i64 0, i32 8
  store i32 1, i32* %130, align 8
  br label %135

131:                                              ; preds = %119
  %132 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %120, i64 0, i32 8
  %133 = load i32, i32* %132, align 8
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %132, align 8
  br label %135

135:                                              ; preds = %131, %125
  store i32 0, i32* %30, align 4
  %136 = load i32, i32* %3, align 4
  %137 = load %struct._xmlParserInput*, %struct._xmlParserInput** %6, align 8
  %138 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %137, i64 0, i32 4
  %139 = load i8*, i8** %138, align 8
  %140 = sext i32 %136 to i64
  %141 = getelementptr inbounds i8, i8* %139, i64 %140
  store i8* %141, i8** %138, align 8
  %142 = call fastcc i32 @htmlCurrentChar(%struct._xmlParserCtxt* %0, i32* nonnull %3)
  br label %31

143:                                              ; preds = %52, %31, %44
  %144 = icmp eq i32 %32, 0
  br i1 %144, label %166, label %145

145:                                              ; preds = %143
  %146 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %27, align 8
  %147 = icmp eq %struct._xmlSAXHandler* %146, null
  br i1 %147, label %166, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 36
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %166

152:                                              ; preds = %148
  %153 = sext i32 %32 to i64
  %154 = getelementptr inbounds [1005 x i8], [1005 x i8]* %2, i64 0, i64 %153
  store i8 0, i8* %154, align 1
  %155 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %146, i64 0, i32 25
  %156 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %155, align 8
  %157 = icmp eq void (i8*, i8*, i32)* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %152
  %159 = load i8*, i8** %28, align 8
  call void %156(i8* %159, i8* nonnull %4, i32 %32) #9
  br label %166

160:                                              ; preds = %152
  %161 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %146, i64 0, i32 17
  %162 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %161, align 8
  %163 = icmp eq void (i8*, i8*, i32)* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  %165 = load i8*, i8** %28, align 8
  call void %162(i8* %165, i8* nonnull %4, i32 %32) #9
  br label %166

166:                                              ; preds = %160, %148, %145, %143, %158, %164
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 1005, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParseReference(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = alloca [6 x i8], align 1
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %4) #9
  %5 = bitcast i8** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 6, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %6 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %7 = load %struct._xmlParserInput*, %struct._xmlParserInput** %6, align 8
  %8 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %7, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 38
  br i1 %11, label %12, label %141

12:                                               ; preds = %1
  %13 = getelementptr inbounds i8, i8* %9, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 35
  br i1 %15, label %16, label %61

16:                                               ; preds = %12
  %17 = tail call i32 @htmlParseCharRef(%struct._xmlParserCtxt* %0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %141, label %19

19:                                               ; preds = %16
  %20 = icmp ult i32 %17, 128
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  %22 = icmp ult i32 %17, 2048
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = icmp ult i32 %17, 65536
  %25 = select i1 %24, i32 12, i32 18
  %26 = select i1 %24, i8 15, i8 7
  %27 = select i1 %24, i8 -32, i8 -16
  %28 = select i1 %24, i32 6, i32 12
  br label %31

29:                                               ; preds = %19
  %30 = trunc i32 %17 to i8
  store i8 %30, i8* %4, align 1
  br label %47

31:                                               ; preds = %23, %21
  %32 = phi i32 [ 6, %21 ], [ %25, %23 ]
  %33 = phi i8 [ 31, %21 ], [ %26, %23 ]
  %34 = phi i8 [ -64, %21 ], [ %27, %23 ]
  %35 = phi i32 [ 0, %21 ], [ %28, %23 ]
  %36 = lshr i32 %17, %32
  %37 = trunc i32 %36 to i8
  %38 = and i8 %33, %37
  %39 = or i8 %38, %34
  store i8 %39, i8* %4, align 1
  %40 = lshr i32 %17, %35
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 63
  %43 = or i8 %42, -128
  %44 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 1
  store i8 %43, i8* %44, align 1
  %45 = add nsw i32 %35, -6
  %46 = icmp sgt i32 %45, -1
  br i1 %46, label %142, label %47

47:                                               ; preds = %31, %142, %150, %29
  %48 = phi i32 [ 1, %29 ], [ 2, %31 ], [ 3, %142 ], [ 4, %150 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %49
  store i8 0, i8* %50, align 1
  tail call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0)
  %51 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %52 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %51, align 8
  %53 = icmp eq %struct._xmlSAXHandler* %52, null
  br i1 %53, label %141, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %52, i64 0, i32 17
  %56 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %55, align 8
  %57 = icmp eq void (i8*, i8*, i32)* %56, null
  br i1 %57, label %141, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  call void %56(i8* %60, i8* nonnull %4, i32 %48) #9
  br label %141

61:                                               ; preds = %12
  %62 = call %struct._htmlEntityDesc* @htmlParseEntityRef(%struct._xmlParserCtxt* %0, i8** nonnull %3)
  %63 = load i8*, i8** %3, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %65, label %76

65:                                               ; preds = %61
  call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0)
  %66 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %67 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %66, align 8
  %68 = icmp eq %struct._xmlSAXHandler* %67, null
  br i1 %68, label %141, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %67, i64 0, i32 17
  %71 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %70, align 8
  %72 = icmp eq void (i8*, i8*, i32)* %71, null
  br i1 %72, label %141, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %75 = load i8*, i8** %74, align 8
  call void %71(i8* %75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.856, i64 0, i64 0), i32 1) #9
  br label %141

76:                                               ; preds = %61
  %77 = icmp eq %struct._htmlEntityDesc* %62, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %struct._htmlEntityDesc, %struct._htmlEntityDesc* %62, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %99

82:                                               ; preds = %78, %76
  call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0)
  %83 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %84 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %83, align 8
  %85 = icmp eq %struct._xmlSAXHandler* %84, null
  br i1 %85, label %141, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %84, i64 0, i32 17
  %88 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %87, align 8
  %89 = icmp eq void (i8*, i8*, i32)* %88, null
  br i1 %89, label %141, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %92 = load i8*, i8** %91, align 8
  call void %88(i8* %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.856, i64 0, i64 0), i32 1) #9
  %93 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %83, align 8
  %94 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %93, i64 0, i32 17
  %95 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %94, align 8
  %96 = load i8*, i8** %91, align 8
  %97 = load i8*, i8** %3, align 8
  %98 = call i32 @xmlStrlen(i8* %97) #9
  call void %95(i8* %96, i8* %97, i32 %98) #9
  br label %141

99:                                               ; preds = %78
  %100 = icmp ult i32 %80, 128
  br i1 %100, label %109, label %101

101:                                              ; preds = %99
  %102 = icmp ult i32 %80, 2048
  br i1 %102, label %111, label %103

103:                                              ; preds = %101
  %104 = icmp ult i32 %80, 65536
  %105 = select i1 %104, i32 12, i32 18
  %106 = select i1 %104, i8 15, i8 7
  %107 = select i1 %104, i8 -32, i8 -16
  %108 = select i1 %104, i32 6, i32 12
  br label %111

109:                                              ; preds = %99
  %110 = trunc i32 %80 to i8
  store i8 %110, i8* %4, align 1
  br label %127

111:                                              ; preds = %103, %101
  %112 = phi i32 [ 6, %101 ], [ %105, %103 ]
  %113 = phi i8 [ 31, %101 ], [ %106, %103 ]
  %114 = phi i8 [ -64, %101 ], [ %107, %103 ]
  %115 = phi i32 [ 0, %101 ], [ %108, %103 ]
  %116 = lshr i32 %80, %112
  %117 = trunc i32 %116 to i8
  %118 = and i8 %113, %117
  %119 = or i8 %118, %114
  store i8 %119, i8* %4, align 1
  %120 = lshr i32 %80, %115
  %121 = trunc i32 %120 to i8
  %122 = and i8 %121, 63
  %123 = or i8 %122, -128
  %124 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 1
  store i8 %123, i8* %124, align 1
  %125 = add nsw i32 %115, -6
  %126 = icmp sgt i32 %125, -1
  br i1 %126, label %156, label %127

127:                                              ; preds = %111, %156, %164, %109
  %128 = phi i32 [ 1, %109 ], [ 2, %111 ], [ 3, %156 ], [ 4, %164 ]
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %129
  store i8 0, i8* %130, align 1
  call fastcc void @htmlCheckParagraph(%struct._xmlParserCtxt* %0)
  %131 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %132 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %131, align 8
  %133 = icmp eq %struct._xmlSAXHandler* %132, null
  br i1 %133, label %141, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %132, i64 0, i32 17
  %136 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %135, align 8
  %137 = icmp eq void (i8*, i8*, i32)* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %140 = load i8*, i8** %139, align 8
  call void %136(i8* %140, i8* nonnull %4, i32 %128) #9
  br label %141

141:                                              ; preds = %16, %90, %82, %86, %58, %47, %54, %134, %127, %138, %73, %65, %69, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %4) #9
  ret void

142:                                              ; preds = %31
  %143 = lshr i32 %17, %45
  %144 = trunc i32 %143 to i8
  %145 = and i8 %144, 63
  %146 = or i8 %145, -128
  %147 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 2
  store i8 %146, i8* %147, align 1
  %148 = add nsw i32 %35, -12
  %149 = icmp sgt i32 %148, -1
  br i1 %149, label %150, label %47

150:                                              ; preds = %142
  %151 = lshr i32 %17, %148
  %152 = trunc i32 %151 to i8
  %153 = and i8 %152, 63
  %154 = or i8 %153, -128
  %155 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 3
  store i8 %154, i8* %155, align 1
  br label %47

156:                                              ; preds = %111
  %157 = lshr i32 %80, %125
  %158 = trunc i32 %157 to i8
  %159 = and i8 %158, 63
  %160 = or i8 %159, -128
  %161 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 2
  store i8 %160, i8* %161, align 1
  %162 = add nsw i32 %115, -12
  %163 = icmp sgt i32 %162, -1
  br i1 %163, label %164, label %127

164:                                              ; preds = %156
  %165 = lshr i32 %80, %162
  %166 = trunc i32 %165 to i8
  %167 = and i8 %166, 63
  %168 = or i8 %167, -128
  %169 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 3
  store i8 %168, i8* %169, align 1
  br label %127
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @htmlGetEndPriority(i8*) unnamed_addr #1 {
  %2 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i8* %0) #9
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i64 0, i64 0), i8* %0) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %35, %1, %4, %11, %14, %17, %20, %23, %26, %29, %32
  %8 = phi i64 [ 0, %1 ], [ 1, %4 ], [ 2, %11 ], [ 3, %14 ], [ 4, %17 ], [ 5, %20 ], [ 6, %23 ], [ 7, %26 ], [ 8, %29 ], [ 9, %32 ], [ %38, %35 ]
  %9 = getelementptr inbounds [12 x %struct.elementPriority], [12 x %struct.elementPriority]* @htmlEndPriority, i64 0, i64 %8, i32 1
  %10 = load i32, i32* %9, align 8
  ret i32 %10

11:                                               ; preds = %4
  %12 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i64 0, i64 0), i8* %0) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %11
  %15 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0), i8* %0) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %7

17:                                               ; preds = %14
  %18 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i64 0, i64 0), i8* %0) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %7

20:                                               ; preds = %17
  %21 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i64 0, i64 0), i8* %0) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %7

23:                                               ; preds = %20
  %24 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i64 0, i64 0), i8* %0) #9
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %7

26:                                               ; preds = %23
  %27 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i64 0, i64 0), i8* %0) #9
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %7

29:                                               ; preds = %26
  %30 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0), i8* %0) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %7

32:                                               ; preds = %29
  %33 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8* %0) #9
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %7

35:                                               ; preds = %32
  %36 = tail call i32 @xmlStrEqual(i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* %0) #9
  %37 = icmp eq i32 %36, 0
  %38 = select i1 %37, i64 11, i64 10
  br label %7
}

declare i32 @xmlStrncasecmp(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlParserFinishElementParsing(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 13
  %3 = load %struct._xmlNode*, %struct._xmlNode** %2, align 8
  %4 = icmp eq %struct._xmlNode* %3, null
  br i1 %4, label %49, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %11 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %12 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %11, i64 0, i32 9
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %11, i64 0, i32 4
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %11, i64 0, i32 3
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %16, %13
  %21 = sub i64 %20, %19
  %22 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 83
  %23 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %22, align 8
  %24 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %23, i64 0, i32 3
  store i64 %21, i64* %24, align 8
  %25 = load %struct._xmlParserInput*, %struct._xmlParserInput** %10, align 8
  %26 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %25, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %22, align 8
  %30 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %29, i64 0, i32 4
  store i64 %28, i64* %30, align 8
  %31 = bitcast %struct._xmlNode** %2 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %struct._xmlParserNodeInfo** %22 to i64**
  %34 = load i64*, i64** %33, align 8
  store i64 %32, i64* %34, align 8
  %35 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %22, align 8
  tail call void @xmlParserAddNodeInfo(%struct._xmlParserCtxt* %0, %struct._xmlParserNodeInfo* %35) #9
  %36 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 84
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, 1
  br i1 %38, label %49, label %39

39:                                               ; preds = %9
  %40 = add nsw i32 %37, -1
  store i32 %40, i32* %36, align 8
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 86
  %44 = load %struct._xmlParserNodeInfo*, %struct._xmlParserNodeInfo** %43, align 8
  %45 = add nsw i32 %37, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct._xmlParserNodeInfo, %struct._xmlParserNodeInfo* %44, i64 %46
  store %struct._xmlParserNodeInfo* %47, %struct._xmlParserNodeInfo** %22, align 8
  br label %49

48:                                               ; preds = %39
  store %struct._xmlParserNodeInfo* null, %struct._xmlParserNodeInfo** %22, align 8
  br label %49

49:                                               ; preds = %48, %42, %9, %5, %1
  %50 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %51 = load %struct._xmlParserInput*, %struct._xmlParserInput** %50, align 8
  %52 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %51, i64 0, i32 4
  %53 = load i8*, i8** %52, align 8
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %99

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 30
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %99

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 0
  %62 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 1
  %63 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 29
  %64 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 32
  %65 = bitcast i8** %63 to i64*
  br label %66

66:                                               ; preds = %97, %60
  %67 = phi i32 [ %58, %60 ], [ %68, %97 ]
  %68 = add nsw i32 %67, -1
  %69 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %61, align 8
  %70 = icmp eq %struct._xmlSAXHandler* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %69, i64 0, i32 15
  %73 = load void (i8*, i8*)*, void (i8*, i8*)** %72, align 8
  %74 = icmp eq void (i8*, i8*)* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %71
  %76 = load i8*, i8** %62, align 8
  %77 = load i8*, i8** %63, align 8
  tail call void %73(i8* %76, i8* %77) #9
  br label %78

78:                                               ; preds = %75, %71, %66
  %79 = load i32, i32* %57, align 8
  %80 = icmp slt i32 %79, 1
  br i1 %80, label %97, label %81

81:                                               ; preds = %78
  %82 = add nsw i32 %79, -1
  store i32 %82, i32* %57, align 8
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %81
  %85 = load i8**, i8*** %64, align 8
  %86 = add nsw i32 %79, -2
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8*, i8** %85, i64 %87
  %89 = bitcast i8** %88 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %65, align 8
  br label %93

91:                                               ; preds = %81
  store i8* null, i8** %63, align 8
  %92 = load i8**, i8*** %64, align 8
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i8** [ %92, %91 ], [ %85, %84 ]
  %95 = sext i32 %82 to i64
  %96 = getelementptr inbounds i8*, i8** %94, i64 %95
  store i8* null, i8** %96, align 8
  br label %97

97:                                               ; preds = %93, %78
  %98 = icmp sgt i32 %68, 0
  br i1 %98, label %66, label %99

99:                                               ; preds = %97, %56, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @htmlParseSystemLiteral(%struct._xmlParserCtxt*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %3 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %4 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %3, i64 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  switch i8 %6, label %7 [
    i8 34, label %8
    i8 39, label %8
  ]

7:                                                ; preds = %1
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 43, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.872, i64 0, i64 0), i8* null, i8* null)
  br label %61

8:                                                ; preds = %1, %1
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %9 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %10 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %9, i64 0, i32 4
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %9, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ult i8* %11, %13
  br i1 %14, label %61, label %15

15:                                               ; preds = %8
  %16 = ptrtoint i8* %11 to i64
  %17 = ptrtoint i8* %13 to i64
  %18 = sub i64 %16, %17
  %19 = load i8, i8* %11, align 1
  %20 = icmp ne i8 %19, 0
  %21 = icmp ne i8 %19, %6
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %47

23:                                               ; preds = %15, %35
  %24 = phi i8 [ %41, %35 ], [ %19, %15 ]
  %25 = phi i32 [ %36, %35 ], [ 0, %15 ]
  %26 = phi i64 [ %37, %35 ], [ 0, %15 ]
  %27 = add i8 %24, -9
  %28 = icmp ult i8 %27, 2
  br i1 %28, label %35, label %29

29:                                               ; preds = %23
  %30 = icmp eq i8 %24, 13
  %31 = icmp ugt i8 %24, 31
  %32 = or i1 %30, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = zext i8 %24 to i32
  tail call fastcc void @htmlParseErrInt(%struct._xmlParserCtxt* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.873, i64 0, i64 0), i32 %34)
  br label %35

35:                                               ; preds = %23, %33, %29
  %36 = phi i32 [ %25, %29 ], [ 1, %33 ], [ %25, %23 ]
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %37 = add i64 %26, 1
  %38 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %39 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %38, i64 0, i32 4
  %40 = load i8*, i8** %39, align 8
  %41 = load i8, i8* %40, align 1
  %42 = icmp ne i8 %41, 0
  %43 = icmp ne i8 %41, %6
  %44 = and i1 %43, %42
  br i1 %44, label %23, label %45

45:                                               ; preds = %35
  %46 = trunc i64 %37 to i32
  br label %47

47:                                               ; preds = %45, %15
  %48 = phi i32 [ 0, %15 ], [ %46, %45 ]
  %49 = phi i32 [ 0, %15 ], [ %36, %45 ]
  %50 = phi i8 [ %19, %15 ], [ %41, %45 ]
  %51 = icmp eq i8 %50, %6
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call fastcc void @htmlParseErr(%struct._xmlParserCtxt* %0, i32 44, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.874, i64 0, i64 0), i8* null, i8* null)
  br label %61

53:                                               ; preds = %47
  tail call void @xmlNextChar(%struct._xmlParserCtxt* %0) #9
  %54 = icmp eq i32 %49, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %53
  %56 = load %struct._xmlParserInput*, %struct._xmlParserInput** %2, align 8
  %57 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %56, i64 0, i32 3
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %18
  %60 = tail call i8* @xmlStrndup(i8* %59, i32 %48) #9
  br label %61

61:                                               ; preds = %52, %55, %53, %8, %7
  %62 = phi i8* [ null, %7 ], [ null, %8 ], [ null, %52 ], [ %60, %55 ], [ null, %53 ]
  ret i8* %62
}

declare %struct._xmlDict* @xmlDictCreate() local_unnamed_addr #3

declare i64 @xmlBufUse(%struct._xmlBuf*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @htmlParseLookupSequence(%struct._xmlParserCtxt* nocapture, i8 zeroext, i8 zeroext, i32) unnamed_addr #1 {
  %5 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 9
  %6 = load %struct._xmlParserInput*, %struct._xmlParserInput** %5, align 8
  %7 = icmp eq %struct._xmlParserInput* %6, null
  br i1 %7, label %108, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %6, i64 0, i32 4
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %6, i64 0, i32 3
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %16, 0
  %18 = inttoptr i64 %14 to i8*
  br i1 %17, label %108, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 34
  %21 = load i64, i64* %20, align 8
  %22 = shl i64 %15, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp sgt i64 %21, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %19
  %26 = trunc i64 %21 to i32
  %27 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 21
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 1
  br label %30

30:                                               ; preds = %25, %19
  %31 = phi i32 [ %26, %25 ], [ %16, %19 ]
  %32 = phi i32 [ %29, %25 ], [ 0, %19 ]
  %33 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %6, i64 0, i32 0
  %34 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %33, align 8
  %35 = icmp eq %struct._xmlParserInputBuffer* %34, null
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %6, i64 0, i32 6
  %38 = load i32, i32* %37, align 8
  br label %48

39:                                               ; preds = %30
  %40 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %34, i64 0, i32 4
  %41 = load %struct._xmlBuf*, %struct._xmlBuf** %40, align 8
  %42 = tail call i8* @xmlBufContent(%struct._xmlBuf* %41) #9
  %43 = load %struct._xmlParserInputBuffer*, %struct._xmlParserInputBuffer** %33, align 8
  %44 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %43, i64 0, i32 4
  %45 = load %struct._xmlBuf*, %struct._xmlBuf** %44, align 8
  %46 = tail call i64 @xmlBufUse(%struct._xmlBuf* %45) #9
  %47 = trunc i64 %46 to i32
  br label %48

48:                                               ; preds = %36, %39
  %49 = phi i32 [ %38, %36 ], [ %47, %39 ]
  %50 = phi i8* [ %18, %36 ], [ %42, %39 ]
  %51 = icmp eq i8 %2, 0
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sub i32 %49, %53
  %55 = icmp slt i32 %31, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %48
  %57 = sext i32 %31 to i64
  br label %99

58:                                               ; preds = %48
  %59 = icmp eq i32 %3, 0
  %60 = sext i32 %31 to i64
  %61 = sext i32 %54 to i64
  br label %62

62:                                               ; preds = %94, %58
  %63 = phi i64 [ %60, %58 ], [ %97, %94 ]
  %64 = phi i8 [ 0, %58 ], [ %96, %94 ]
  %65 = phi i32 [ %32, %58 ], [ %95, %94 ]
  %66 = getelementptr inbounds i8, i8* %50, i64 %63
  %67 = load i8, i8* %66, align 1
  br i1 %59, label %79, label %68

68:                                               ; preds = %62
  switch i8 %67, label %75 [
    i8 34, label %69
    i8 39, label %69
  ]

69:                                               ; preds = %68, %68
  %70 = icmp eq i32 %65, 0
  br i1 %70, label %94, label %71

71:                                               ; preds = %69
  %72 = zext i8 %67 to i32
  %73 = sext i8 %64 to i32
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %94, label %79

75:                                               ; preds = %68
  %76 = icmp eq i32 %65, 0
  %77 = icmp eq i8 %67, %1
  %78 = and i1 %76, %77
  br i1 %78, label %81, label %94

79:                                               ; preds = %62, %71
  %80 = icmp eq i8 %67, %1
  br i1 %80, label %81, label %94

81:                                               ; preds = %75, %79
  br i1 %51, label %87, label %82

82:                                               ; preds = %81
  %83 = add nsw i64 %63, 1
  %84 = getelementptr inbounds i8, i8* %50, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, %2
  br i1 %86, label %87, label %94

87:                                               ; preds = %82, %81
  %88 = trunc i64 %63 to i32
  store i64 0, i64* %20, align 8
  %89 = load i64, i64* %10, align 8
  %90 = load i64, i64* %13, align 8
  %91 = sub i64 %90, %89
  %92 = trunc i64 %91 to i32
  %93 = add i32 %88, %92
  br label %108

94:                                               ; preds = %69, %71, %75, %82, %79
  %95 = phi i32 [ %65, %82 ], [ %65, %79 ], [ %65, %75 ], [ 0, %71 ], [ 1, %69 ]
  %96 = phi i8 [ %64, %82 ], [ %64, %79 ], [ %64, %75 ], [ %64, %71 ], [ %67, %69 ]
  %97 = add nsw i64 %63, 1
  %98 = icmp eq i64 %97, %61
  br i1 %98, label %99, label %62

99:                                               ; preds = %94, %56
  %100 = phi i64 [ %57, %56 ], [ %61, %94 ]
  %101 = phi i32 [ %32, %56 ], [ %95, %94 ]
  store i64 %100, i64* %20, align 8
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %0, i64 0, i32 21
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, -2
  %106 = or i32 %104, 1
  %107 = select i1 %102, i32 %105, i32 %106
  store i32 %107, i32* %103, align 8
  br label %108

108:                                              ; preds = %8, %4, %99, %87
  %109 = phi i32 [ %93, %87 ], [ -1, %99 ], [ -1, %4 ], [ -1, %8 ]
  ret i32 %109
}

declare i8* @xmlBufContent(%struct._xmlBuf*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
