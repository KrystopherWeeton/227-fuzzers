; ModuleID = '../../third_party/libwebp/src/dsp/upsampling.c'
source_filename = "../../third_party/libwebp/src/dsp/upsampling.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@WebPUpsamplers = common hidden local_unnamed_addr global [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*] zeroinitializer, align 16
@WebPInitYUV444Converters.WebPInitYUV444Converters_body_last_cpuinfo_used = internal global i32 (i32)* bitcast (i32 (i32)** @WebPInitYUV444Converters.WebPInitYUV444Converters_body_last_cpuinfo_used to i32 (i32)*), align 8
@VP8GetCPUInfo = external local_unnamed_addr global i32 (i32)*, align 8
@WebPInitUpsamplers.WebPInitUpsamplers_body_last_cpuinfo_used = internal global i32 (i32)* bitcast (i32 (i32)** @WebPInitUpsamplers.WebPInitUpsamplers_body_last_cpuinfo_used to i32 (i32)*), align 8
@WebPYUV444Converters = common hidden local_unnamed_addr global [13 x void (i8*, i8*, i8*, i8*, i32)*] zeroinitializer, align 16

; Function Attrs: nounwind ssp uwtable
define hidden void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @WebPGetLinePairConverter(i32) local_unnamed_addr #0 {
  %2 = load volatile i32 (i32)*, i32 (i32)** @WebPInitUpsamplers.WebPInitUpsamplers_body_last_cpuinfo_used, align 8
  %3 = load i32 (i32)*, i32 (i32)** @VP8GetCPUInfo, align 8
  %4 = icmp eq i32 (i32)* %2, %3
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @UpsampleRgbaLinePair_C>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @UpsampleBgraLinePair_C>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 2) to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 4) to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @UpsampleRgbaLinePair_C>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 6) to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @UpsampleBgraLinePair_C, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 8) to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 10), align 16
  %6 = icmp eq i32 (i32)* %3, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %5
  %8 = tail call i32 %3(i32 0) #4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @WebPInitUpsamplersSSE2() #4
  br label %11

11:                                               ; preds = %10, %7
  %12 = load i32 (i32)*, i32 (i32)** @VP8GetCPUInfo, align 8
  %13 = tail call i32 %12(i32 3) #4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @WebPInitUpsamplersSSE41() #4
  br label %16

16:                                               ; preds = %15, %11, %5
  %17 = load i64, i64* bitcast (i32 (i32)** @VP8GetCPUInfo to i64*), align 8
  store volatile i64 %17, i64* bitcast (i32 (i32)** @WebPInitUpsamplers.WebPInitUpsamplers_body_last_cpuinfo_used to i64*), align 8
  br label %18

18:                                               ; preds = %1, %16
  %19 = icmp eq i32 %0, 0
  %20 = select i1 %19, i64 4, i64 3
  %21 = getelementptr inbounds [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 %20
  %22 = load void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** %21, align 8
  ret void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPInitUpsamplers() local_unnamed_addr #0 {
  %1 = load volatile i32 (i32)*, i32 (i32)** @WebPInitUpsamplers.WebPInitUpsamplers_body_last_cpuinfo_used, align 8
  %2 = load i32 (i32)*, i32 (i32)** @VP8GetCPUInfo, align 8
  %3 = icmp eq i32 (i32)* %1, %2
  br i1 %3, label %17, label %4

4:                                                ; preds = %0
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @UpsampleRgbaLinePair_C>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @UpsampleBgraLinePair_C>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 2) to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 4) to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @UpsampleRgbaLinePair_C>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 6) to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @UpsampleBgraLinePair_C, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc>, <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 8) to <2 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*>*), align 16
  store void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)* @EmptyUpsampleFunc, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 10), align 16
  %5 = icmp eq i32 (i32)* %2, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %4
  %7 = tail call i32 %2(i32 0) #4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @WebPInitUpsamplersSSE2() #4
  br label %10

10:                                               ; preds = %9, %6
  %11 = load i32 (i32)*, i32 (i32)** @VP8GetCPUInfo, align 8
  %12 = tail call i32 %11(i32 3) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @WebPInitUpsamplersSSE41() #4
  br label %15

15:                                               ; preds = %4, %10, %14
  %16 = load i64, i64* bitcast (i32 (i32)** @VP8GetCPUInfo to i64*), align 8
  store volatile i64 %16, i64* bitcast (i32 (i32)** @WebPInitUpsamplers.WebPInitUpsamplers_body_last_cpuinfo_used to i64*), align 8
  br label %17

17:                                               ; preds = %0, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebPYuv444ToRgba_C(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i32) #1 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %63

7:                                                ; preds = %5
  %8 = zext i32 %4 to i64
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %61, %9 ]
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds i8, i8* %1, i64 %10
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 %10
  %16 = load i8, i8* %15, align 1
  %17 = shl i64 %10, 2
  %18 = and i64 %17, 4294967292
  %19 = getelementptr inbounds i8, i8* %3, i64 %18
  %20 = zext i8 %12 to i32
  %21 = zext i8 %14 to i32
  %22 = zext i8 %16 to i32
  %23 = mul nuw nsw i32 %20, 19077
  %24 = lshr i32 %23, 8
  %25 = mul nuw nsw i32 %22, 26149
  %26 = lshr i32 %25, 8
  %27 = add nsw i32 %24, -14234
  %28 = add nsw i32 %27, %26
  %29 = icmp ult i32 %28, 16384
  %30 = lshr i32 %28, 6
  %31 = icmp slt i32 %28, 0
  %32 = select i1 %31, i32 0, i32 255
  %33 = select i1 %29, i32 %30, i32 %32
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %19, align 1
  %35 = mul nuw nsw i32 %21, 6419
  %36 = lshr i32 %35, 8
  %37 = mul nuw nsw i32 %22, 13320
  %38 = lshr i32 %37, 8
  %39 = add nuw nsw i32 %24, 8708
  %40 = sub nuw nsw i32 %39, %36
  %41 = sub nsw i32 %40, %38
  %42 = icmp ult i32 %41, 16384
  %43 = lshr i32 %41, 6
  %44 = icmp slt i32 %41, 0
  %45 = select i1 %44, i32 0, i32 255
  %46 = select i1 %42, i32 %43, i32 %45
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %47, i8* %48, align 1
  %49 = mul nuw nsw i32 %21, 33050
  %50 = lshr i32 %49, 8
  %51 = add nsw i32 %24, -17685
  %52 = add nsw i32 %51, %50
  %53 = icmp ult i32 %52, 16384
  %54 = lshr i32 %52, 6
  %55 = icmp slt i32 %52, 0
  %56 = select i1 %55, i32 0, i32 255
  %57 = select i1 %53, i32 %54, i32 %56
  %58 = trunc i32 %57 to i8
  %59 = getelementptr inbounds i8, i8* %19, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i8, i8* %19, i64 3
  store i8 -1, i8* %60, align 1
  %61 = add nuw nsw i64 %10, 1
  %62 = icmp eq i64 %61, %8
  br i1 %62, label %63, label %9

63:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebPYuv444ToBgra_C(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i32) #1 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %63

7:                                                ; preds = %5
  %8 = zext i32 %4 to i64
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %61, %9 ]
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds i8, i8* %1, i64 %10
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 %10
  %16 = load i8, i8* %15, align 1
  %17 = shl i64 %10, 2
  %18 = and i64 %17, 4294967292
  %19 = getelementptr inbounds i8, i8* %3, i64 %18
  %20 = zext i8 %12 to i32
  %21 = zext i8 %14 to i32
  %22 = zext i8 %16 to i32
  %23 = mul nuw nsw i32 %20, 19077
  %24 = lshr i32 %23, 8
  %25 = mul nuw nsw i32 %21, 33050
  %26 = lshr i32 %25, 8
  %27 = add nsw i32 %24, -17685
  %28 = add nsw i32 %27, %26
  %29 = icmp ult i32 %28, 16384
  %30 = lshr i32 %28, 6
  %31 = icmp slt i32 %28, 0
  %32 = select i1 %31, i32 0, i32 255
  %33 = select i1 %29, i32 %30, i32 %32
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %19, align 1
  %35 = mul nuw nsw i32 %21, 6419
  %36 = lshr i32 %35, 8
  %37 = mul nuw nsw i32 %22, 13320
  %38 = lshr i32 %37, 8
  %39 = add nuw nsw i32 %24, 8708
  %40 = sub nuw nsw i32 %39, %36
  %41 = sub nsw i32 %40, %38
  %42 = icmp ult i32 %41, 16384
  %43 = lshr i32 %41, 6
  %44 = icmp slt i32 %41, 0
  %45 = select i1 %44, i32 0, i32 255
  %46 = select i1 %42, i32 %43, i32 %45
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %47, i8* %48, align 1
  %49 = mul nuw nsw i32 %22, 26149
  %50 = lshr i32 %49, 8
  %51 = add nsw i32 %24, -14234
  %52 = add nsw i32 %51, %50
  %53 = icmp ult i32 %52, 16384
  %54 = lshr i32 %52, 6
  %55 = icmp slt i32 %52, 0
  %56 = select i1 %55, i32 0, i32 255
  %57 = select i1 %53, i32 %54, i32 %56
  %58 = trunc i32 %57 to i8
  %59 = getelementptr inbounds i8, i8* %19, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i8, i8* %19, i64 3
  store i8 -1, i8* %60, align 1
  %61 = add nuw nsw i64 %10, 1
  %62 = icmp eq i64 %61, %8
  br i1 %62, label %63, label %9

63:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPInitYUV444Converters() local_unnamed_addr #0 {
  %1 = load volatile i32 (i32)*, i32 (i32)** @WebPInitYUV444Converters.WebPInitYUV444Converters_body_last_cpuinfo_used, align 8
  %2 = load i32 (i32)*, i32 (i32)** @VP8GetCPUInfo, align 8
  %3 = icmp eq i32 (i32)* %1, %2
  br i1 %3, label %17, label %4

4:                                                ; preds = %0
  store <2 x void (i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i32)* @EmptyYuv444Func, void (i8*, i8*, i8*, i8*, i32)* @WebPYuv444ToRgba_C>, <2 x void (i8*, i8*, i8*, i8*, i32)*>* bitcast ([13 x void (i8*, i8*, i8*, i8*, i32)*]* @WebPYUV444Converters to <2 x void (i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i32)* @EmptyYuv444Func, void (i8*, i8*, i8*, i8*, i32)* @WebPYuv444ToBgra_C>, <2 x void (i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i32)*]* @WebPYUV444Converters, i64 0, i64 2) to <2 x void (i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i32)* @EmptyYuv444Func, void (i8*, i8*, i8*, i8*, i32)* @EmptyYuv444Func>, <2 x void (i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i32)*]* @WebPYUV444Converters, i64 0, i64 4) to <2 x void (i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i32)* @EmptyYuv444Func, void (i8*, i8*, i8*, i8*, i32)* @WebPYuv444ToRgba_C>, <2 x void (i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i32)*]* @WebPYUV444Converters, i64 0, i64 6) to <2 x void (i8*, i8*, i8*, i8*, i32)*>*), align 16
  store <2 x void (i8*, i8*, i8*, i8*, i32)*> <void (i8*, i8*, i8*, i8*, i32)* @WebPYuv444ToBgra_C, void (i8*, i8*, i8*, i8*, i32)* @EmptyYuv444Func>, <2 x void (i8*, i8*, i8*, i8*, i32)*>* bitcast (void (i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i32)*]* @WebPYUV444Converters, i64 0, i64 8) to <2 x void (i8*, i8*, i8*, i8*, i32)*>*), align 16
  store void (i8*, i8*, i8*, i8*, i32)* @EmptyYuv444Func, void (i8*, i8*, i8*, i8*, i32)** getelementptr inbounds ([13 x void (i8*, i8*, i8*, i8*, i32)*], [13 x void (i8*, i8*, i8*, i8*, i32)*]* @WebPYUV444Converters, i64 0, i64 10), align 16
  %5 = icmp eq i32 (i32)* %2, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %4
  %7 = tail call i32 %2(i32 0) #4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @WebPInitYUV444ConvertersSSE2() #4
  br label %10

10:                                               ; preds = %9, %6
  %11 = load i32 (i32)*, i32 (i32)** @VP8GetCPUInfo, align 8
  %12 = tail call i32 %11(i32 3) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @WebPInitYUV444ConvertersSSE41() #4
  br label %15

15:                                               ; preds = %4, %10, %14
  %16 = load i64, i64* bitcast (i32 (i32)** @VP8GetCPUInfo to i64*), align 8
  store volatile i64 %16, i64* bitcast (i32 (i32)** @WebPInitYUV444Converters.WebPInitYUV444Converters_body_last_cpuinfo_used to i64*), align 8
  br label %17

17:                                               ; preds = %0, %15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @EmptyYuv444Func(i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture, i32) #2 {
  ret void
}

declare void @WebPInitYUV444ConvertersSSE2() local_unnamed_addr #3

declare void @WebPInitYUV444ConvertersSSE41() local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @UpsampleRgbaLinePair_C(i8* nocapture readonly, i8* readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i8* nocapture, i32) #1 {
  %10 = add nsw i32 %8, -1
  %11 = ashr i32 %10, 1
  %12 = load i8, i8* %2, align 1
  %13 = zext i8 %12 to i32
  %14 = load i8, i8* %3, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 16
  %17 = or i32 %16, %13
  %18 = load i8, i8* %4, align 1
  %19 = zext i8 %18 to i32
  %20 = load i8, i8* %5, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 16
  %23 = or i32 %22, %19
  %24 = mul nuw nsw i32 %17, 3
  %25 = add nuw nsw i32 %24, 131074
  %26 = add nuw nsw i32 %25, %23
  %27 = lshr i32 %26, 2
  %28 = load i8, i8* %0, align 1
  %29 = lshr i32 %26, 18
  %30 = zext i8 %28 to i32
  %31 = and i32 %27, 255
  %32 = and i32 %29, 255
  %33 = mul nuw nsw i32 %30, 19077
  %34 = lshr i32 %33, 8
  %35 = mul nuw nsw i32 %32, 26149
  %36 = lshr i32 %35, 8
  %37 = add nsw i32 %34, -14234
  %38 = add nsw i32 %37, %36
  %39 = icmp ult i32 %38, 16384
  %40 = lshr i32 %38, 6
  %41 = icmp slt i32 %38, 0
  %42 = select i1 %41, i32 0, i32 255
  %43 = select i1 %39, i32 %40, i32 %42
  %44 = trunc i32 %43 to i8
  store i8 %44, i8* %6, align 1
  %45 = mul nuw nsw i32 %31, 6419
  %46 = lshr i32 %45, 8
  %47 = mul nuw nsw i32 %32, 13320
  %48 = lshr i32 %47, 8
  %49 = add nuw nsw i32 %34, 8708
  %50 = sub nuw nsw i32 %49, %46
  %51 = sub nsw i32 %50, %48
  %52 = icmp ult i32 %51, 16384
  %53 = lshr i32 %51, 6
  %54 = icmp slt i32 %51, 0
  %55 = select i1 %54, i32 0, i32 255
  %56 = select i1 %52, i32 %53, i32 %55
  %57 = trunc i32 %56 to i8
  %58 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 %57, i8* %58, align 1
  %59 = mul nuw nsw i32 %31, 33050
  %60 = lshr i32 %59, 8
  %61 = add nsw i32 %34, -17685
  %62 = add nsw i32 %61, %60
  %63 = icmp ult i32 %62, 16384
  %64 = lshr i32 %62, 6
  %65 = icmp slt i32 %62, 0
  %66 = select i1 %65, i32 0, i32 255
  %67 = select i1 %63, i32 %64, i32 %66
  %68 = trunc i32 %67 to i8
  %69 = getelementptr inbounds i8, i8* %6, i64 2
  store i8 %68, i8* %69, align 1
  %70 = getelementptr inbounds i8, i8* %6, i64 3
  store i8 -1, i8* %70, align 1
  %71 = icmp ne i8* %1, null
  br i1 %71, label %72, label %120

72:                                               ; preds = %9
  %73 = mul nuw nsw i32 %23, 3
  %74 = add nuw nsw i32 %17, 131074
  %75 = add nuw nsw i32 %74, %73
  %76 = lshr i32 %75, 2
  %77 = load i8, i8* %1, align 1
  %78 = lshr i32 %75, 18
  %79 = zext i8 %77 to i32
  %80 = and i32 %76, 255
  %81 = and i32 %78, 255
  %82 = mul nuw nsw i32 %79, 19077
  %83 = lshr i32 %82, 8
  %84 = mul nuw nsw i32 %81, 26149
  %85 = lshr i32 %84, 8
  %86 = add nsw i32 %85, -14234
  %87 = add nsw i32 %86, %83
  %88 = icmp ult i32 %87, 16384
  %89 = lshr i32 %87, 6
  %90 = icmp slt i32 %87, 0
  %91 = select i1 %90, i32 0, i32 255
  %92 = select i1 %88, i32 %89, i32 %91
  %93 = trunc i32 %92 to i8
  store i8 %93, i8* %7, align 1
  %94 = mul nuw nsw i32 %80, 6419
  %95 = lshr i32 %94, 8
  %96 = mul nuw nsw i32 %81, 13320
  %97 = lshr i32 %96, 8
  %98 = sub nuw nsw i32 8708, %95
  %99 = sub nsw i32 %98, %97
  %100 = add nsw i32 %99, %83
  %101 = icmp ult i32 %100, 16384
  %102 = lshr i32 %100, 6
  %103 = icmp slt i32 %100, 0
  %104 = select i1 %103, i32 0, i32 255
  %105 = select i1 %101, i32 %102, i32 %104
  %106 = trunc i32 %105 to i8
  %107 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 %106, i8* %107, align 1
  %108 = mul nuw nsw i32 %80, 33050
  %109 = lshr i32 %108, 8
  %110 = add nsw i32 %109, -17685
  %111 = add nsw i32 %110, %83
  %112 = icmp ult i32 %111, 16384
  %113 = lshr i32 %111, 6
  %114 = icmp slt i32 %111, 0
  %115 = select i1 %114, i32 0, i32 255
  %116 = select i1 %112, i32 %113, i32 %115
  %117 = trunc i32 %116 to i8
  %118 = getelementptr inbounds i8, i8* %7, i64 2
  store i8 %117, i8* %118, align 1
  %119 = getelementptr inbounds i8, i8* %7, i64 3
  store i8 -1, i8* %119, align 1
  br label %120

120:                                              ; preds = %72, %9
  %121 = icmp slt i32 %8, 3
  br i1 %121, label %352, label %122

122:                                              ; preds = %120
  %123 = sext i32 %11 to i64
  br label %124

124:                                              ; preds = %122, %349
  %125 = phi i64 [ 1, %122 ], [ %350, %349 ]
  %126 = phi i32 [ %17, %122 ], [ %135, %349 ]
  %127 = phi i32 [ %23, %122 ], [ %143, %349 ]
  %128 = getelementptr inbounds i8, i8* %2, i64 %125
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds i8, i8* %3, i64 %125
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 16
  %135 = or i32 %134, %130
  %136 = getelementptr inbounds i8, i8* %4, i64 %125
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = getelementptr inbounds i8, i8* %5, i64 %125
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = shl nuw nsw i32 %141, 16
  %143 = or i32 %142, %138
  %144 = add nsw i32 %135, %127
  %145 = add nsw i32 %144, 524296
  %146 = add nsw i32 %145, %126
  %147 = add i32 %146, %143
  %148 = shl nsw i32 %144, 1
  %149 = add i32 %147, %148
  %150 = lshr i32 %149, 3
  %151 = add nsw i32 %143, %126
  %152 = shl nsw i32 %151, 1
  %153 = add i32 %147, %152
  %154 = lshr i32 %153, 3
  %155 = add nsw i32 %150, %126
  %156 = lshr i32 %155, 1
  %157 = add nuw nsw i32 %154, %135
  %158 = lshr i32 %157, 1
  %159 = shl nuw nsw i64 %125, 1
  %160 = add nsw i64 %159, -1
  %161 = getelementptr inbounds i8, i8* %0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = lshr i32 %155, 17
  %164 = shl nsw i64 %160, 2
  %165 = getelementptr inbounds i8, i8* %6, i64 %164
  %166 = zext i8 %162 to i32
  %167 = and i32 %156, 255
  %168 = and i32 %163, 255
  %169 = mul nuw nsw i32 %166, 19077
  %170 = lshr i32 %169, 8
  %171 = mul nuw nsw i32 %168, 26149
  %172 = lshr i32 %171, 8
  %173 = add nsw i32 %170, -14234
  %174 = add nsw i32 %173, %172
  %175 = icmp ult i32 %174, 16384
  %176 = lshr i32 %174, 6
  %177 = icmp slt i32 %174, 0
  %178 = select i1 %177, i32 0, i32 255
  %179 = select i1 %175, i32 %176, i32 %178
  %180 = trunc i32 %179 to i8
  store i8 %180, i8* %165, align 1
  %181 = mul nuw nsw i32 %167, 6419
  %182 = lshr i32 %181, 8
  %183 = mul nuw nsw i32 %168, 13320
  %184 = lshr i32 %183, 8
  %185 = add nuw nsw i32 %170, 8708
  %186 = sub nuw nsw i32 %185, %182
  %187 = sub nsw i32 %186, %184
  %188 = icmp ult i32 %187, 16384
  %189 = lshr i32 %187, 6
  %190 = icmp slt i32 %187, 0
  %191 = select i1 %190, i32 0, i32 255
  %192 = select i1 %188, i32 %189, i32 %191
  %193 = trunc i32 %192 to i8
  %194 = getelementptr inbounds i8, i8* %165, i64 1
  store i8 %193, i8* %194, align 1
  %195 = mul nuw nsw i32 %167, 33050
  %196 = lshr i32 %195, 8
  %197 = add nsw i32 %170, -17685
  %198 = add nsw i32 %197, %196
  %199 = icmp ult i32 %198, 16384
  %200 = lshr i32 %198, 6
  %201 = icmp slt i32 %198, 0
  %202 = select i1 %201, i32 0, i32 255
  %203 = select i1 %199, i32 %200, i32 %202
  %204 = trunc i32 %203 to i8
  %205 = getelementptr inbounds i8, i8* %165, i64 2
  store i8 %204, i8* %205, align 1
  %206 = getelementptr inbounds i8, i8* %165, i64 3
  store i8 -1, i8* %206, align 1
  %207 = getelementptr inbounds i8, i8* %0, i64 %159
  %208 = load i8, i8* %207, align 1
  %209 = lshr i32 %157, 17
  %210 = shl i64 %125, 3
  %211 = and i64 %210, 4294967288
  %212 = getelementptr inbounds i8, i8* %6, i64 %211
  %213 = zext i8 %208 to i32
  %214 = and i32 %158, 255
  %215 = and i32 %209, 255
  %216 = mul nuw nsw i32 %213, 19077
  %217 = lshr i32 %216, 8
  %218 = mul nuw nsw i32 %215, 26149
  %219 = lshr i32 %218, 8
  %220 = add nsw i32 %217, -14234
  %221 = add nsw i32 %220, %219
  %222 = icmp ult i32 %221, 16384
  %223 = lshr i32 %221, 6
  %224 = icmp slt i32 %221, 0
  %225 = select i1 %224, i32 0, i32 255
  %226 = select i1 %222, i32 %223, i32 %225
  %227 = trunc i32 %226 to i8
  store i8 %227, i8* %212, align 1
  %228 = mul nuw nsw i32 %214, 6419
  %229 = lshr i32 %228, 8
  %230 = mul nuw nsw i32 %215, 13320
  %231 = lshr i32 %230, 8
  %232 = add nuw nsw i32 %217, 8708
  %233 = sub nuw nsw i32 %232, %229
  %234 = sub nsw i32 %233, %231
  %235 = icmp ult i32 %234, 16384
  %236 = lshr i32 %234, 6
  %237 = icmp slt i32 %234, 0
  %238 = select i1 %237, i32 0, i32 255
  %239 = select i1 %235, i32 %236, i32 %238
  %240 = trunc i32 %239 to i8
  %241 = getelementptr inbounds i8, i8* %212, i64 1
  store i8 %240, i8* %241, align 1
  %242 = mul nuw nsw i32 %214, 33050
  %243 = lshr i32 %242, 8
  %244 = add nsw i32 %217, -17685
  %245 = add nsw i32 %244, %243
  %246 = icmp ult i32 %245, 16384
  %247 = lshr i32 %245, 6
  %248 = icmp slt i32 %245, 0
  %249 = select i1 %248, i32 0, i32 255
  %250 = select i1 %246, i32 %247, i32 %249
  %251 = trunc i32 %250 to i8
  %252 = getelementptr inbounds i8, i8* %212, i64 2
  store i8 %251, i8* %252, align 1
  %253 = getelementptr inbounds i8, i8* %212, i64 3
  store i8 -1, i8* %253, align 1
  br i1 %71, label %254, label %349

254:                                              ; preds = %124
  %255 = add nsw i32 %154, %127
  %256 = lshr i32 %255, 1
  %257 = add nuw nsw i32 %150, %143
  %258 = lshr i32 %257, 1
  %259 = getelementptr inbounds i8, i8* %1, i64 %160
  %260 = load i8, i8* %259, align 1
  %261 = lshr i32 %255, 17
  %262 = getelementptr inbounds i8, i8* %7, i64 %164
  %263 = zext i8 %260 to i32
  %264 = and i32 %256, 255
  %265 = and i32 %261, 255
  %266 = mul nuw nsw i32 %263, 19077
  %267 = lshr i32 %266, 8
  %268 = mul nuw nsw i32 %265, 26149
  %269 = lshr i32 %268, 8
  %270 = add nsw i32 %269, -14234
  %271 = add nsw i32 %270, %267
  %272 = icmp ult i32 %271, 16384
  %273 = lshr i32 %271, 6
  %274 = icmp slt i32 %271, 0
  %275 = select i1 %274, i32 0, i32 255
  %276 = select i1 %272, i32 %273, i32 %275
  %277 = trunc i32 %276 to i8
  store i8 %277, i8* %262, align 1
  %278 = mul nuw nsw i32 %264, 6419
  %279 = lshr i32 %278, 8
  %280 = mul nuw nsw i32 %265, 13320
  %281 = lshr i32 %280, 8
  %282 = sub nuw nsw i32 8708, %279
  %283 = sub nsw i32 %282, %281
  %284 = add nsw i32 %283, %267
  %285 = icmp ult i32 %284, 16384
  %286 = lshr i32 %284, 6
  %287 = icmp slt i32 %284, 0
  %288 = select i1 %287, i32 0, i32 255
  %289 = select i1 %285, i32 %286, i32 %288
  %290 = trunc i32 %289 to i8
  %291 = getelementptr inbounds i8, i8* %262, i64 1
  store i8 %290, i8* %291, align 1
  %292 = mul nuw nsw i32 %264, 33050
  %293 = lshr i32 %292, 8
  %294 = add nsw i32 %293, -17685
  %295 = add nsw i32 %294, %267
  %296 = icmp ult i32 %295, 16384
  %297 = lshr i32 %295, 6
  %298 = icmp slt i32 %295, 0
  %299 = select i1 %298, i32 0, i32 255
  %300 = select i1 %296, i32 %297, i32 %299
  %301 = trunc i32 %300 to i8
  %302 = getelementptr inbounds i8, i8* %262, i64 2
  store i8 %301, i8* %302, align 1
  %303 = getelementptr inbounds i8, i8* %262, i64 3
  store i8 -1, i8* %303, align 1
  %304 = getelementptr inbounds i8, i8* %1, i64 %159
  %305 = load i8, i8* %304, align 1
  %306 = lshr i32 %257, 17
  %307 = getelementptr inbounds i8, i8* %7, i64 %211
  %308 = zext i8 %305 to i32
  %309 = and i32 %258, 255
  %310 = and i32 %306, 255
  %311 = mul nuw nsw i32 %308, 19077
  %312 = lshr i32 %311, 8
  %313 = mul nuw nsw i32 %310, 26149
  %314 = lshr i32 %313, 8
  %315 = add nsw i32 %314, -14234
  %316 = add nsw i32 %315, %312
  %317 = icmp ult i32 %316, 16384
  %318 = lshr i32 %316, 6
  %319 = icmp slt i32 %316, 0
  %320 = select i1 %319, i32 0, i32 255
  %321 = select i1 %317, i32 %318, i32 %320
  %322 = trunc i32 %321 to i8
  store i8 %322, i8* %307, align 1
  %323 = mul nuw nsw i32 %309, 6419
  %324 = lshr i32 %323, 8
  %325 = mul nuw nsw i32 %310, 13320
  %326 = lshr i32 %325, 8
  %327 = sub nuw nsw i32 8708, %324
  %328 = sub nsw i32 %327, %326
  %329 = add nsw i32 %328, %312
  %330 = icmp ult i32 %329, 16384
  %331 = lshr i32 %329, 6
  %332 = icmp slt i32 %329, 0
  %333 = select i1 %332, i32 0, i32 255
  %334 = select i1 %330, i32 %331, i32 %333
  %335 = trunc i32 %334 to i8
  %336 = getelementptr inbounds i8, i8* %307, i64 1
  store i8 %335, i8* %336, align 1
  %337 = mul nuw nsw i32 %309, 33050
  %338 = lshr i32 %337, 8
  %339 = add nsw i32 %338, -17685
  %340 = add nsw i32 %339, %312
  %341 = icmp ult i32 %340, 16384
  %342 = lshr i32 %340, 6
  %343 = icmp slt i32 %340, 0
  %344 = select i1 %343, i32 0, i32 255
  %345 = select i1 %341, i32 %342, i32 %344
  %346 = trunc i32 %345 to i8
  %347 = getelementptr inbounds i8, i8* %307, i64 2
  store i8 %346, i8* %347, align 1
  %348 = getelementptr inbounds i8, i8* %307, i64 3
  store i8 -1, i8* %348, align 1
  br label %349

349:                                              ; preds = %254, %124
  %350 = add nuw nsw i64 %125, 1
  %351 = icmp slt i64 %125, %123
  br i1 %351, label %124, label %352

352:                                              ; preds = %349, %120
  %353 = phi i32 [ %23, %120 ], [ %143, %349 ]
  %354 = phi i32 [ %17, %120 ], [ %135, %349 ]
  %355 = and i32 %8, 1
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %460

357:                                              ; preds = %352
  %358 = mul nsw i32 %354, 3
  %359 = add nsw i32 %353, 131074
  %360 = add nsw i32 %359, %358
  %361 = lshr i32 %360, 2
  %362 = sext i32 %10 to i64
  %363 = getelementptr inbounds i8, i8* %0, i64 %362
  %364 = load i8, i8* %363, align 1
  %365 = lshr i32 %360, 18
  %366 = shl nsw i32 %10, 2
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds i8, i8* %6, i64 %367
  %369 = zext i8 %364 to i32
  %370 = and i32 %361, 255
  %371 = and i32 %365, 255
  %372 = mul nuw nsw i32 %369, 19077
  %373 = lshr i32 %372, 8
  %374 = mul nuw nsw i32 %371, 26149
  %375 = lshr i32 %374, 8
  %376 = add nsw i32 %375, -14234
  %377 = add nsw i32 %376, %373
  %378 = icmp ult i32 %377, 16384
  %379 = lshr i32 %377, 6
  %380 = icmp slt i32 %377, 0
  %381 = select i1 %380, i32 0, i32 255
  %382 = select i1 %378, i32 %379, i32 %381
  %383 = trunc i32 %382 to i8
  store i8 %383, i8* %368, align 1
  %384 = mul nuw nsw i32 %370, 6419
  %385 = lshr i32 %384, 8
  %386 = mul nuw nsw i32 %371, 13320
  %387 = lshr i32 %386, 8
  %388 = sub nuw nsw i32 8708, %385
  %389 = sub nsw i32 %388, %387
  %390 = add nsw i32 %389, %373
  %391 = icmp ult i32 %390, 16384
  %392 = lshr i32 %390, 6
  %393 = icmp slt i32 %390, 0
  %394 = select i1 %393, i32 0, i32 255
  %395 = select i1 %391, i32 %392, i32 %394
  %396 = trunc i32 %395 to i8
  %397 = getelementptr inbounds i8, i8* %368, i64 1
  store i8 %396, i8* %397, align 1
  %398 = mul nuw nsw i32 %370, 33050
  %399 = lshr i32 %398, 8
  %400 = add nsw i32 %399, -17685
  %401 = add nsw i32 %400, %373
  %402 = icmp ult i32 %401, 16384
  %403 = lshr i32 %401, 6
  %404 = icmp slt i32 %401, 0
  %405 = select i1 %404, i32 0, i32 255
  %406 = select i1 %402, i32 %403, i32 %405
  %407 = trunc i32 %406 to i8
  %408 = getelementptr inbounds i8, i8* %368, i64 2
  store i8 %407, i8* %408, align 1
  %409 = getelementptr inbounds i8, i8* %368, i64 3
  store i8 -1, i8* %409, align 1
  br i1 %71, label %410, label %460

410:                                              ; preds = %357
  %411 = mul nsw i32 %353, 3
  %412 = add nsw i32 %354, 131074
  %413 = add nsw i32 %412, %411
  %414 = lshr i32 %413, 2
  %415 = getelementptr inbounds i8, i8* %1, i64 %362
  %416 = load i8, i8* %415, align 1
  %417 = lshr i32 %413, 18
  %418 = getelementptr inbounds i8, i8* %7, i64 %367
  %419 = zext i8 %416 to i32
  %420 = and i32 %414, 255
  %421 = and i32 %417, 255
  %422 = mul nuw nsw i32 %419, 19077
  %423 = lshr i32 %422, 8
  %424 = mul nuw nsw i32 %421, 26149
  %425 = lshr i32 %424, 8
  %426 = add nsw i32 %425, -14234
  %427 = add nsw i32 %426, %423
  %428 = icmp ult i32 %427, 16384
  %429 = lshr i32 %427, 6
  %430 = icmp slt i32 %427, 0
  %431 = select i1 %430, i32 0, i32 255
  %432 = select i1 %428, i32 %429, i32 %431
  %433 = trunc i32 %432 to i8
  store i8 %433, i8* %418, align 1
  %434 = mul nuw nsw i32 %420, 6419
  %435 = lshr i32 %434, 8
  %436 = mul nuw nsw i32 %421, 13320
  %437 = lshr i32 %436, 8
  %438 = sub nuw nsw i32 8708, %435
  %439 = sub nsw i32 %438, %437
  %440 = add nsw i32 %439, %423
  %441 = icmp ult i32 %440, 16384
  %442 = lshr i32 %440, 6
  %443 = icmp slt i32 %440, 0
  %444 = select i1 %443, i32 0, i32 255
  %445 = select i1 %441, i32 %442, i32 %444
  %446 = trunc i32 %445 to i8
  %447 = getelementptr inbounds i8, i8* %418, i64 1
  store i8 %446, i8* %447, align 1
  %448 = mul nuw nsw i32 %420, 33050
  %449 = lshr i32 %448, 8
  %450 = add nsw i32 %449, -17685
  %451 = add nsw i32 %450, %423
  %452 = icmp ult i32 %451, 16384
  %453 = lshr i32 %451, 6
  %454 = icmp slt i32 %451, 0
  %455 = select i1 %454, i32 0, i32 255
  %456 = select i1 %452, i32 %453, i32 %455
  %457 = trunc i32 %456 to i8
  %458 = getelementptr inbounds i8, i8* %418, i64 2
  store i8 %457, i8* %458, align 1
  %459 = getelementptr inbounds i8, i8* %418, i64 3
  store i8 -1, i8* %459, align 1
  br label %460

460:                                              ; preds = %352, %357, %410
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @UpsampleBgraLinePair_C(i8* nocapture readonly, i8* readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i8* nocapture, i32) #1 {
  %10 = add nsw i32 %8, -1
  %11 = ashr i32 %10, 1
  %12 = load i8, i8* %2, align 1
  %13 = zext i8 %12 to i32
  %14 = load i8, i8* %3, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 16
  %17 = or i32 %16, %13
  %18 = load i8, i8* %4, align 1
  %19 = zext i8 %18 to i32
  %20 = load i8, i8* %5, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 16
  %23 = or i32 %22, %19
  %24 = mul nuw nsw i32 %17, 3
  %25 = add nuw nsw i32 %24, 131074
  %26 = add nuw nsw i32 %25, %23
  %27 = lshr i32 %26, 2
  %28 = load i8, i8* %0, align 1
  %29 = lshr i32 %26, 18
  %30 = zext i8 %28 to i32
  %31 = and i32 %27, 255
  %32 = and i32 %29, 255
  %33 = mul nuw nsw i32 %30, 19077
  %34 = lshr i32 %33, 8
  %35 = mul nuw nsw i32 %31, 33050
  %36 = lshr i32 %35, 8
  %37 = add nsw i32 %34, -17685
  %38 = add nsw i32 %37, %36
  %39 = icmp ult i32 %38, 16384
  %40 = lshr i32 %38, 6
  %41 = icmp slt i32 %38, 0
  %42 = select i1 %41, i32 0, i32 255
  %43 = select i1 %39, i32 %40, i32 %42
  %44 = trunc i32 %43 to i8
  store i8 %44, i8* %6, align 1
  %45 = mul nuw nsw i32 %31, 6419
  %46 = lshr i32 %45, 8
  %47 = mul nuw nsw i32 %32, 13320
  %48 = lshr i32 %47, 8
  %49 = add nuw nsw i32 %34, 8708
  %50 = sub nuw nsw i32 %49, %46
  %51 = sub nsw i32 %50, %48
  %52 = icmp ult i32 %51, 16384
  %53 = lshr i32 %51, 6
  %54 = icmp slt i32 %51, 0
  %55 = select i1 %54, i32 0, i32 255
  %56 = select i1 %52, i32 %53, i32 %55
  %57 = trunc i32 %56 to i8
  %58 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 %57, i8* %58, align 1
  %59 = mul nuw nsw i32 %32, 26149
  %60 = lshr i32 %59, 8
  %61 = add nsw i32 %34, -14234
  %62 = add nsw i32 %61, %60
  %63 = icmp ult i32 %62, 16384
  %64 = lshr i32 %62, 6
  %65 = icmp slt i32 %62, 0
  %66 = select i1 %65, i32 0, i32 255
  %67 = select i1 %63, i32 %64, i32 %66
  %68 = trunc i32 %67 to i8
  %69 = getelementptr inbounds i8, i8* %6, i64 2
  store i8 %68, i8* %69, align 1
  %70 = getelementptr inbounds i8, i8* %6, i64 3
  store i8 -1, i8* %70, align 1
  %71 = icmp ne i8* %1, null
  br i1 %71, label %72, label %120

72:                                               ; preds = %9
  %73 = mul nuw nsw i32 %23, 3
  %74 = add nuw nsw i32 %17, 131074
  %75 = add nuw nsw i32 %74, %73
  %76 = lshr i32 %75, 2
  %77 = load i8, i8* %1, align 1
  %78 = lshr i32 %75, 18
  %79 = zext i8 %77 to i32
  %80 = and i32 %76, 255
  %81 = and i32 %78, 255
  %82 = mul nuw nsw i32 %79, 19077
  %83 = lshr i32 %82, 8
  %84 = mul nuw nsw i32 %80, 33050
  %85 = lshr i32 %84, 8
  %86 = add nsw i32 %85, -17685
  %87 = add nsw i32 %86, %83
  %88 = icmp ult i32 %87, 16384
  %89 = lshr i32 %87, 6
  %90 = icmp slt i32 %87, 0
  %91 = select i1 %90, i32 0, i32 255
  %92 = select i1 %88, i32 %89, i32 %91
  %93 = trunc i32 %92 to i8
  store i8 %93, i8* %7, align 1
  %94 = mul nuw nsw i32 %80, 6419
  %95 = lshr i32 %94, 8
  %96 = mul nuw nsw i32 %81, 13320
  %97 = lshr i32 %96, 8
  %98 = sub nuw nsw i32 8708, %95
  %99 = sub nsw i32 %98, %97
  %100 = add nsw i32 %99, %83
  %101 = icmp ult i32 %100, 16384
  %102 = lshr i32 %100, 6
  %103 = icmp slt i32 %100, 0
  %104 = select i1 %103, i32 0, i32 255
  %105 = select i1 %101, i32 %102, i32 %104
  %106 = trunc i32 %105 to i8
  %107 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 %106, i8* %107, align 1
  %108 = mul nuw nsw i32 %81, 26149
  %109 = lshr i32 %108, 8
  %110 = add nsw i32 %109, -14234
  %111 = add nsw i32 %110, %83
  %112 = icmp ult i32 %111, 16384
  %113 = lshr i32 %111, 6
  %114 = icmp slt i32 %111, 0
  %115 = select i1 %114, i32 0, i32 255
  %116 = select i1 %112, i32 %113, i32 %115
  %117 = trunc i32 %116 to i8
  %118 = getelementptr inbounds i8, i8* %7, i64 2
  store i8 %117, i8* %118, align 1
  %119 = getelementptr inbounds i8, i8* %7, i64 3
  store i8 -1, i8* %119, align 1
  br label %120

120:                                              ; preds = %72, %9
  %121 = icmp slt i32 %8, 3
  br i1 %121, label %352, label %122

122:                                              ; preds = %120
  %123 = sext i32 %11 to i64
  br label %124

124:                                              ; preds = %122, %349
  %125 = phi i64 [ 1, %122 ], [ %350, %349 ]
  %126 = phi i32 [ %17, %122 ], [ %135, %349 ]
  %127 = phi i32 [ %23, %122 ], [ %143, %349 ]
  %128 = getelementptr inbounds i8, i8* %2, i64 %125
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds i8, i8* %3, i64 %125
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 16
  %135 = or i32 %134, %130
  %136 = getelementptr inbounds i8, i8* %4, i64 %125
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = getelementptr inbounds i8, i8* %5, i64 %125
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = shl nuw nsw i32 %141, 16
  %143 = or i32 %142, %138
  %144 = add nsw i32 %135, %127
  %145 = add nsw i32 %144, 524296
  %146 = add nsw i32 %145, %126
  %147 = add i32 %146, %143
  %148 = shl nsw i32 %144, 1
  %149 = add i32 %147, %148
  %150 = lshr i32 %149, 3
  %151 = add nsw i32 %143, %126
  %152 = shl nsw i32 %151, 1
  %153 = add i32 %147, %152
  %154 = lshr i32 %153, 3
  %155 = add nsw i32 %150, %126
  %156 = lshr i32 %155, 1
  %157 = add nuw nsw i32 %154, %135
  %158 = lshr i32 %157, 1
  %159 = shl nuw nsw i64 %125, 1
  %160 = add nsw i64 %159, -1
  %161 = getelementptr inbounds i8, i8* %0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = lshr i32 %155, 17
  %164 = shl nsw i64 %160, 2
  %165 = getelementptr inbounds i8, i8* %6, i64 %164
  %166 = zext i8 %162 to i32
  %167 = and i32 %156, 255
  %168 = and i32 %163, 255
  %169 = mul nuw nsw i32 %166, 19077
  %170 = lshr i32 %169, 8
  %171 = mul nuw nsw i32 %167, 33050
  %172 = lshr i32 %171, 8
  %173 = add nsw i32 %170, -17685
  %174 = add nsw i32 %173, %172
  %175 = icmp ult i32 %174, 16384
  %176 = lshr i32 %174, 6
  %177 = icmp slt i32 %174, 0
  %178 = select i1 %177, i32 0, i32 255
  %179 = select i1 %175, i32 %176, i32 %178
  %180 = trunc i32 %179 to i8
  store i8 %180, i8* %165, align 1
  %181 = mul nuw nsw i32 %167, 6419
  %182 = lshr i32 %181, 8
  %183 = mul nuw nsw i32 %168, 13320
  %184 = lshr i32 %183, 8
  %185 = add nuw nsw i32 %170, 8708
  %186 = sub nuw nsw i32 %185, %182
  %187 = sub nsw i32 %186, %184
  %188 = icmp ult i32 %187, 16384
  %189 = lshr i32 %187, 6
  %190 = icmp slt i32 %187, 0
  %191 = select i1 %190, i32 0, i32 255
  %192 = select i1 %188, i32 %189, i32 %191
  %193 = trunc i32 %192 to i8
  %194 = getelementptr inbounds i8, i8* %165, i64 1
  store i8 %193, i8* %194, align 1
  %195 = mul nuw nsw i32 %168, 26149
  %196 = lshr i32 %195, 8
  %197 = add nsw i32 %170, -14234
  %198 = add nsw i32 %197, %196
  %199 = icmp ult i32 %198, 16384
  %200 = lshr i32 %198, 6
  %201 = icmp slt i32 %198, 0
  %202 = select i1 %201, i32 0, i32 255
  %203 = select i1 %199, i32 %200, i32 %202
  %204 = trunc i32 %203 to i8
  %205 = getelementptr inbounds i8, i8* %165, i64 2
  store i8 %204, i8* %205, align 1
  %206 = getelementptr inbounds i8, i8* %165, i64 3
  store i8 -1, i8* %206, align 1
  %207 = getelementptr inbounds i8, i8* %0, i64 %159
  %208 = load i8, i8* %207, align 1
  %209 = lshr i32 %157, 17
  %210 = shl i64 %125, 3
  %211 = and i64 %210, 4294967288
  %212 = getelementptr inbounds i8, i8* %6, i64 %211
  %213 = zext i8 %208 to i32
  %214 = and i32 %158, 255
  %215 = and i32 %209, 255
  %216 = mul nuw nsw i32 %213, 19077
  %217 = lshr i32 %216, 8
  %218 = mul nuw nsw i32 %214, 33050
  %219 = lshr i32 %218, 8
  %220 = add nsw i32 %217, -17685
  %221 = add nsw i32 %220, %219
  %222 = icmp ult i32 %221, 16384
  %223 = lshr i32 %221, 6
  %224 = icmp slt i32 %221, 0
  %225 = select i1 %224, i32 0, i32 255
  %226 = select i1 %222, i32 %223, i32 %225
  %227 = trunc i32 %226 to i8
  store i8 %227, i8* %212, align 1
  %228 = mul nuw nsw i32 %214, 6419
  %229 = lshr i32 %228, 8
  %230 = mul nuw nsw i32 %215, 13320
  %231 = lshr i32 %230, 8
  %232 = add nuw nsw i32 %217, 8708
  %233 = sub nuw nsw i32 %232, %229
  %234 = sub nsw i32 %233, %231
  %235 = icmp ult i32 %234, 16384
  %236 = lshr i32 %234, 6
  %237 = icmp slt i32 %234, 0
  %238 = select i1 %237, i32 0, i32 255
  %239 = select i1 %235, i32 %236, i32 %238
  %240 = trunc i32 %239 to i8
  %241 = getelementptr inbounds i8, i8* %212, i64 1
  store i8 %240, i8* %241, align 1
  %242 = mul nuw nsw i32 %215, 26149
  %243 = lshr i32 %242, 8
  %244 = add nsw i32 %217, -14234
  %245 = add nsw i32 %244, %243
  %246 = icmp ult i32 %245, 16384
  %247 = lshr i32 %245, 6
  %248 = icmp slt i32 %245, 0
  %249 = select i1 %248, i32 0, i32 255
  %250 = select i1 %246, i32 %247, i32 %249
  %251 = trunc i32 %250 to i8
  %252 = getelementptr inbounds i8, i8* %212, i64 2
  store i8 %251, i8* %252, align 1
  %253 = getelementptr inbounds i8, i8* %212, i64 3
  store i8 -1, i8* %253, align 1
  br i1 %71, label %254, label %349

254:                                              ; preds = %124
  %255 = add nsw i32 %154, %127
  %256 = lshr i32 %255, 1
  %257 = add nuw nsw i32 %150, %143
  %258 = lshr i32 %257, 1
  %259 = getelementptr inbounds i8, i8* %1, i64 %160
  %260 = load i8, i8* %259, align 1
  %261 = lshr i32 %255, 17
  %262 = getelementptr inbounds i8, i8* %7, i64 %164
  %263 = zext i8 %260 to i32
  %264 = and i32 %256, 255
  %265 = and i32 %261, 255
  %266 = mul nuw nsw i32 %263, 19077
  %267 = lshr i32 %266, 8
  %268 = mul nuw nsw i32 %264, 33050
  %269 = lshr i32 %268, 8
  %270 = add nsw i32 %269, -17685
  %271 = add nsw i32 %270, %267
  %272 = icmp ult i32 %271, 16384
  %273 = lshr i32 %271, 6
  %274 = icmp slt i32 %271, 0
  %275 = select i1 %274, i32 0, i32 255
  %276 = select i1 %272, i32 %273, i32 %275
  %277 = trunc i32 %276 to i8
  store i8 %277, i8* %262, align 1
  %278 = mul nuw nsw i32 %264, 6419
  %279 = lshr i32 %278, 8
  %280 = mul nuw nsw i32 %265, 13320
  %281 = lshr i32 %280, 8
  %282 = sub nuw nsw i32 8708, %279
  %283 = sub nsw i32 %282, %281
  %284 = add nsw i32 %283, %267
  %285 = icmp ult i32 %284, 16384
  %286 = lshr i32 %284, 6
  %287 = icmp slt i32 %284, 0
  %288 = select i1 %287, i32 0, i32 255
  %289 = select i1 %285, i32 %286, i32 %288
  %290 = trunc i32 %289 to i8
  %291 = getelementptr inbounds i8, i8* %262, i64 1
  store i8 %290, i8* %291, align 1
  %292 = mul nuw nsw i32 %265, 26149
  %293 = lshr i32 %292, 8
  %294 = add nsw i32 %293, -14234
  %295 = add nsw i32 %294, %267
  %296 = icmp ult i32 %295, 16384
  %297 = lshr i32 %295, 6
  %298 = icmp slt i32 %295, 0
  %299 = select i1 %298, i32 0, i32 255
  %300 = select i1 %296, i32 %297, i32 %299
  %301 = trunc i32 %300 to i8
  %302 = getelementptr inbounds i8, i8* %262, i64 2
  store i8 %301, i8* %302, align 1
  %303 = getelementptr inbounds i8, i8* %262, i64 3
  store i8 -1, i8* %303, align 1
  %304 = getelementptr inbounds i8, i8* %1, i64 %159
  %305 = load i8, i8* %304, align 1
  %306 = lshr i32 %257, 17
  %307 = getelementptr inbounds i8, i8* %7, i64 %211
  %308 = zext i8 %305 to i32
  %309 = and i32 %258, 255
  %310 = and i32 %306, 255
  %311 = mul nuw nsw i32 %308, 19077
  %312 = lshr i32 %311, 8
  %313 = mul nuw nsw i32 %309, 33050
  %314 = lshr i32 %313, 8
  %315 = add nsw i32 %314, -17685
  %316 = add nsw i32 %315, %312
  %317 = icmp ult i32 %316, 16384
  %318 = lshr i32 %316, 6
  %319 = icmp slt i32 %316, 0
  %320 = select i1 %319, i32 0, i32 255
  %321 = select i1 %317, i32 %318, i32 %320
  %322 = trunc i32 %321 to i8
  store i8 %322, i8* %307, align 1
  %323 = mul nuw nsw i32 %309, 6419
  %324 = lshr i32 %323, 8
  %325 = mul nuw nsw i32 %310, 13320
  %326 = lshr i32 %325, 8
  %327 = sub nuw nsw i32 8708, %324
  %328 = sub nsw i32 %327, %326
  %329 = add nsw i32 %328, %312
  %330 = icmp ult i32 %329, 16384
  %331 = lshr i32 %329, 6
  %332 = icmp slt i32 %329, 0
  %333 = select i1 %332, i32 0, i32 255
  %334 = select i1 %330, i32 %331, i32 %333
  %335 = trunc i32 %334 to i8
  %336 = getelementptr inbounds i8, i8* %307, i64 1
  store i8 %335, i8* %336, align 1
  %337 = mul nuw nsw i32 %310, 26149
  %338 = lshr i32 %337, 8
  %339 = add nsw i32 %338, -14234
  %340 = add nsw i32 %339, %312
  %341 = icmp ult i32 %340, 16384
  %342 = lshr i32 %340, 6
  %343 = icmp slt i32 %340, 0
  %344 = select i1 %343, i32 0, i32 255
  %345 = select i1 %341, i32 %342, i32 %344
  %346 = trunc i32 %345 to i8
  %347 = getelementptr inbounds i8, i8* %307, i64 2
  store i8 %346, i8* %347, align 1
  %348 = getelementptr inbounds i8, i8* %307, i64 3
  store i8 -1, i8* %348, align 1
  br label %349

349:                                              ; preds = %254, %124
  %350 = add nuw nsw i64 %125, 1
  %351 = icmp slt i64 %125, %123
  br i1 %351, label %124, label %352

352:                                              ; preds = %349, %120
  %353 = phi i32 [ %23, %120 ], [ %143, %349 ]
  %354 = phi i32 [ %17, %120 ], [ %135, %349 ]
  %355 = and i32 %8, 1
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %460

357:                                              ; preds = %352
  %358 = mul nsw i32 %354, 3
  %359 = add nsw i32 %353, 131074
  %360 = add nsw i32 %359, %358
  %361 = lshr i32 %360, 2
  %362 = sext i32 %10 to i64
  %363 = getelementptr inbounds i8, i8* %0, i64 %362
  %364 = load i8, i8* %363, align 1
  %365 = lshr i32 %360, 18
  %366 = shl nsw i32 %10, 2
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds i8, i8* %6, i64 %367
  %369 = zext i8 %364 to i32
  %370 = and i32 %361, 255
  %371 = and i32 %365, 255
  %372 = mul nuw nsw i32 %369, 19077
  %373 = lshr i32 %372, 8
  %374 = mul nuw nsw i32 %370, 33050
  %375 = lshr i32 %374, 8
  %376 = add nsw i32 %375, -17685
  %377 = add nsw i32 %376, %373
  %378 = icmp ult i32 %377, 16384
  %379 = lshr i32 %377, 6
  %380 = icmp slt i32 %377, 0
  %381 = select i1 %380, i32 0, i32 255
  %382 = select i1 %378, i32 %379, i32 %381
  %383 = trunc i32 %382 to i8
  store i8 %383, i8* %368, align 1
  %384 = mul nuw nsw i32 %370, 6419
  %385 = lshr i32 %384, 8
  %386 = mul nuw nsw i32 %371, 13320
  %387 = lshr i32 %386, 8
  %388 = sub nuw nsw i32 8708, %385
  %389 = sub nsw i32 %388, %387
  %390 = add nsw i32 %389, %373
  %391 = icmp ult i32 %390, 16384
  %392 = lshr i32 %390, 6
  %393 = icmp slt i32 %390, 0
  %394 = select i1 %393, i32 0, i32 255
  %395 = select i1 %391, i32 %392, i32 %394
  %396 = trunc i32 %395 to i8
  %397 = getelementptr inbounds i8, i8* %368, i64 1
  store i8 %396, i8* %397, align 1
  %398 = mul nuw nsw i32 %371, 26149
  %399 = lshr i32 %398, 8
  %400 = add nsw i32 %399, -14234
  %401 = add nsw i32 %400, %373
  %402 = icmp ult i32 %401, 16384
  %403 = lshr i32 %401, 6
  %404 = icmp slt i32 %401, 0
  %405 = select i1 %404, i32 0, i32 255
  %406 = select i1 %402, i32 %403, i32 %405
  %407 = trunc i32 %406 to i8
  %408 = getelementptr inbounds i8, i8* %368, i64 2
  store i8 %407, i8* %408, align 1
  %409 = getelementptr inbounds i8, i8* %368, i64 3
  store i8 -1, i8* %409, align 1
  br i1 %71, label %410, label %460

410:                                              ; preds = %357
  %411 = mul nsw i32 %353, 3
  %412 = add nsw i32 %354, 131074
  %413 = add nsw i32 %412, %411
  %414 = lshr i32 %413, 2
  %415 = getelementptr inbounds i8, i8* %1, i64 %362
  %416 = load i8, i8* %415, align 1
  %417 = lshr i32 %413, 18
  %418 = getelementptr inbounds i8, i8* %7, i64 %367
  %419 = zext i8 %416 to i32
  %420 = and i32 %414, 255
  %421 = and i32 %417, 255
  %422 = mul nuw nsw i32 %419, 19077
  %423 = lshr i32 %422, 8
  %424 = mul nuw nsw i32 %420, 33050
  %425 = lshr i32 %424, 8
  %426 = add nsw i32 %425, -17685
  %427 = add nsw i32 %426, %423
  %428 = icmp ult i32 %427, 16384
  %429 = lshr i32 %427, 6
  %430 = icmp slt i32 %427, 0
  %431 = select i1 %430, i32 0, i32 255
  %432 = select i1 %428, i32 %429, i32 %431
  %433 = trunc i32 %432 to i8
  store i8 %433, i8* %418, align 1
  %434 = mul nuw nsw i32 %420, 6419
  %435 = lshr i32 %434, 8
  %436 = mul nuw nsw i32 %421, 13320
  %437 = lshr i32 %436, 8
  %438 = sub nuw nsw i32 8708, %435
  %439 = sub nsw i32 %438, %437
  %440 = add nsw i32 %439, %423
  %441 = icmp ult i32 %440, 16384
  %442 = lshr i32 %440, 6
  %443 = icmp slt i32 %440, 0
  %444 = select i1 %443, i32 0, i32 255
  %445 = select i1 %441, i32 %442, i32 %444
  %446 = trunc i32 %445 to i8
  %447 = getelementptr inbounds i8, i8* %418, i64 1
  store i8 %446, i8* %447, align 1
  %448 = mul nuw nsw i32 %421, 26149
  %449 = lshr i32 %448, 8
  %450 = add nsw i32 %449, -14234
  %451 = add nsw i32 %450, %423
  %452 = icmp ult i32 %451, 16384
  %453 = lshr i32 %451, 6
  %454 = icmp slt i32 %451, 0
  %455 = select i1 %454, i32 0, i32 255
  %456 = select i1 %452, i32 %453, i32 %455
  %457 = trunc i32 %456 to i8
  %458 = getelementptr inbounds i8, i8* %418, i64 2
  store i8 %457, i8* %458, align 1
  %459 = getelementptr inbounds i8, i8* %418, i64 3
  store i8 -1, i8* %459, align 1
  br label %460

460:                                              ; preds = %352, %357, %410
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @EmptyUpsampleFunc(i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture, i32) #2 {
  ret void
}

declare void @WebPInitUpsamplersSSE2() local_unnamed_addr #3

declare void @WebPInitUpsamplersSSE41() local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
