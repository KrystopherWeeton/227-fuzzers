; ModuleID = '../../third_party/blink/renderer/core/html/parser/html_construction_site.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/html_construction_site.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.167" }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i32 }
%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.781", i32, [4 x i8], %"class.std::__1::unique_ptr.919", %"class.std::__1::unique_ptr.919", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.925", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.931", %"class.std::__1::unique_ptr.937", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.949", %"class.std::__1::unique_ptr.955", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.240", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.784", %"class.std::__1::unique_ptr.790", %"class.std::__1::unique_ptr.796", %"class.std::__1::unique_ptr.802", %"class.std::__1::unique_ptr.808", %"class.std::__1::unique_ptr.814", %"class.std::__1::unique_ptr.825", %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.839", %"class.std::__1::unique_ptr.846", %"class.std::__1::unique_ptr.853", %"class.std::__1::unique_ptr.853", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.867", %"class.std::__1::unique_ptr.874", %"class.std::__1::unique_ptr.899", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.817" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.817" = type { %"struct.std::__1::__atomic_base.818" }
%"struct.std::__1::__atomic_base.818" = type { %"struct.std::__1::__atomic_base.819" }
%"struct.std::__1::__atomic_base.819" = type { %"struct.std::__1::__cxx_atomic_impl.820" }
%"struct.std::__1::__cxx_atomic_impl.820" = type { %"struct.std::__1::__cxx_atomic_base_impl.821" }
%"struct.std::__1::__cxx_atomic_base_impl.821" = type { i64 }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.blink::Worklist.828"* }
%"class.blink::Worklist.828" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.817" }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.blink::Worklist.835"* }
%"class.blink::Worklist.835" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.817" }
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.blink::Worklist.842"* }
%"class.blink::Worklist.842" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.817" }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"class.blink::Worklist.849"* }
%"class.blink::Worklist.849" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.817" }
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.blink::Worklist.856"* }
%"class.blink::Worklist.856" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.817" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::Worklist.863"* }
%"class.blink::Worklist.863" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.817" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.blink::Worklist.870"* }
%"class.blink::Worklist.870" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.817" }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.877", %"class.std::__1::__compressed_pair.885", %"class.std::__1::__compressed_pair.890", %"class.std::__1::__compressed_pair.892", [4 x i8] }>
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879", %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { i64 }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { float }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.902", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.911" }
%"class.WTF::Vector.911" = type { %"class.WTF::VectorBuffer.912" }
%"class.WTF::VectorBuffer.912" = type { %"class.WTF::VectorBufferBase.913" }
%"class.WTF::VectorBufferBase.913" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.925" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"struct.std::__1::pair.930"*, i32, i32 }
%"struct.std::__1::pair.930" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.943" }
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.828"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.835"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.842"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.849"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.856"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1200", i64 }
%"class.std::__1::vector.1200" = type { %"class.std::__1::__vector_base.1201" }
%"class.std::__1::__vector_base.1201" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1202" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1202" = type { %"struct.std::__1::__compressed_pair_elem.1203" }
%"struct.std::__1::__compressed_pair_elem.1203" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.961 }
%class.scoped_refptr.961 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__cxx_atomic_impl.242" }
%"struct.std::__1::__cxx_atomic_impl.242" = type { %"struct.std::__1::__cxx_atomic_base_impl.243" }
%"struct.std::__1::__cxx_atomic_base_impl.243" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLConstructionSite" = type <{ %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member.2", %"class.blink::Member.14", %"class.blink::Member.20", %"class.blink::HTMLElementStack", %"class.blink::HTMLFormattingElementList", %"class.blink::HeapVector.69", %"class.blink::HTMLConstructionSite::PendingText", i32, i8, i8, i8, i8 }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLParserReentryPermit"* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::Document"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.10" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2", %"class.blink::Member.0", %"class.blink::Member.8", %"class.blink::Member.89", %"class.blink::Member.89", %"class.blink::Member.108", %"class.blink::Member.110", %"class.blink::Member.112", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.114", %"class.blink::HeapVector.116" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.93" }
%"class.blink::HeapHashMap.93" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.97" }
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.60", i32, %"class.blink::HeapVector.101" }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.22" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.26", %"class.blink::Member.28", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.26" = type { %"class.WTF::SingleThreadedBitField.27" }
%"class.WTF::SingleThreadedBitField.27" = type { i32 }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.31", %"class.WTF::AtomicString", %"class.WTF::Vector.33" }
%"class.WTF::RefCounted.31" = type { %"class.base::RefCounted.32" }
%"class.base::RefCounted.32" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.33" = type { %"class.WTF::VectorBuffer.34" }
%"class.WTF::VectorBuffer.34" = type { %"class.WTF::VectorBufferBase.35", [32 x i8] }
%"class.WTF::VectorBufferBase.35" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector.101" = type { %"class.WTF::Vector.104" }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.blink::Member.60"*, i32, i32 }
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.40" }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::HeapHashMap.42"* }
%"class.blink::HeapHashMap.42" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.116" = type { %"class.WTF::Vector.119" }
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.blink::Member.122"*, i32, i32 }
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.124", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.126, %"class.WTF::Vector.127", %"class.WTF::Vector.127", %"class.blink::Member.6", %"class.blink::Member.132", %"class.blink::HeapHashSet", %"class.blink::Member.0", %"class.WTF::HashSet.140", %"class.WTF::TextPosition", %"class.blink::Member.144", %"class.blink::HeapVector.146", %"class.blink::Member.153" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.126 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.127" = type { %"class.WTF::VectorBuffer.128" }
%"class.WTF::VectorBuffer.128" = type { %"class.WTF::VectorBufferBase.129" }
%"class.WTF::VectorBufferBase.129" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.134" }
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.138" }
%"class.WTF::HashTable.138" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.9" }
%"class.WTF::HashSet.140" = type { %"class.WTF::HashTable.141" }
%"class.WTF::HashTable.141" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.146" = type { %"class.WTF::Vector.149" }
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"class.blink::Member.132"*, i32, i32 }
%"class.blink::Member.153" = type { %"class.blink::MemberBase.154" }
%"class.blink::MemberBase.154" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Node"* }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HTMLStackItem"* }
%"class.blink::HTMLStackItem" = type <{ %"class.blink::Member.2", %"class.WTF::AtomicString", %"class.WTF::Vector", %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.38", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.50", i32, i8, i8, i8, i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.45" }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { %"class.blink::Member.48"*, i32, i32 }
%"class.blink::Member.48" = type opaque
%"class.blink::HeapVector.50" = type { %"class.WTF::Vector.53" }
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { %"class.blink::Member.56"*, i32, i32 }
%"class.blink::Member.56" = type opaque
%"class.blink::HTMLElementStack" = type <{ %"class.blink::Member.58", %"class.blink::Member.2", %"class.blink::Member.60", %"class.blink::Member.60", i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HTMLElementStack::ElementRecord"* }
%"class.blink::HTMLElementStack::ElementRecord" = type { %"class.blink::Member.14", %"class.blink::Member.58" }
%"class.blink::HTMLFormattingElementList" = type { %"class.blink::HeapVector.62" }
%"class.blink::HeapVector.62" = type { %"class.WTF::Vector.65" }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67" }
%"class.WTF::VectorBufferBase.67" = type { %"class.blink::HTMLFormattingElementList::Entry"*, i32, i32 }
%"class.blink::HTMLFormattingElementList::Entry" = type { %"class.blink::Member.14" }
%"class.blink::HeapVector.69" = type { %"class.WTF::Vector.72" }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74", [40 x i8] }
%"class.WTF::VectorBufferBase.74" = type { %"struct.blink::HTMLConstructionSiteTask"*, i32, i32 }
%"struct.blink::HTMLConstructionSiteTask" = type <{ i32, [4 x i8], %"class.blink::Member.2", %"class.blink::Member.6", %"class.blink::Member.6", i8, [7 x i8] }>
%"class.blink::HTMLConstructionSite::PendingText" = type <{ %"class.blink::Member.2", %"class.blink::Member.6", %"class.WTF::StringBuilder", i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector.77" }
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79", [16 x i8] }
%"class.WTF::VectorBufferBase.79" = type { i8*, i32, i32 }
%"class.blink::HTMLParserReentryPermit" = type <{ i32, i8, [3 x i8] }>
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.163", %"class.WTF::Vector.163", i8, i32, %"class.blink::Member.174", %"class.blink::Member.450", %"class.blink::Member.739", %"class.blink::Member.741", %"class.blink::Member.743", %"class.blink::Member.745", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.753", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.759", %"class.blink::Member.761", %"class.blink::Member.122", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.764", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.101", %"class.blink::Member.60", %"class.blink::Member.715", %"class.blink::Member.60", %"class.blink::Member.60", %"class.blink::Member.60", %"class.blink::UserActionElementSet", %"class.blink::Member.974", double, double, i64, i64, %"class.blink::HeapHashSet.976", %"class.blink::HeapHashSet.983", i16, i8, %"class.blink::Member.990", %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.996", %"class.blink::TextLinkColors", %"class.blink::Member.998", i8, [7 x i8], %"class.blink::HeapHashMap.1000", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.60", %"class.WTF::Vector.1007", %"class.blink::Member.1012", %"class.blink::Member.1014", i8, %"class.blink::Member.60", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1016", %"class.blink::HeapVector.1041", %"class.std::__1::unique_ptr.1048", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1054", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1067", %"class.WTF::Vector.1069", i8, i8, %"class.std::__1::unique_ptr.1074", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.101", %"class.blink::HeapVector.1080", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1088", i8, i32, %"class.blink::Member.1090", %"class.blink::Member.1092", %"class.blink::Member.1094", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1096", %"class.WTF::HashMap.1098", %"class.blink::Member.1103", %"class.blink::Member.1105", %"class.blink::Member.1107", %"class.blink::Member.1109", %"class.blink::Member.0", %"class.blink::Member.0", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1111", i8, i32, %"class.blink::Member.1118", %"class.blink::Member.1120", i32, %"class.blink::Member.1122", %"class.blink::Member.1124", %"class.blink::Member.1126", %"class.std::__1::unique_ptr.1128", i64, %"class.std::__1::unique_ptr.1134", i32, i32, %"class.blink::Member.1140", %"class.blink::Member.1142", %"class.blink::Member.1144", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1146", %"class.WTF::Vector.726", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1148", %"class.blink::Member.1155", %"class.std::__1::unique_ptr.1157", %"class.blink::Member.1163", i8, i8, %"class.WTF::String", %"class.blink::Member.1165", i8, [7 x i8], %"class.blink::HeapHashMap.1167", %"class.blink::HeapObserverSet.1174", %"class.blink::Member.1182", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1184", i32, i8, i8, %"class.blink::WeakMember.1186", %"class.blink::Member.1187" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.156" }
%"class.blink::HeapHashMap.156" = type { %"class.WTF::HashMap.159" }
%"class.WTF::HashMap.159" = type { %"class.WTF::HashTable.160" }
%"class.WTF::HashTable.160" = type <{ %"struct.WTF::KeyValuePair.162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.162" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.163" = type { %"class.WTF::VectorBuffer.164" }
%"class.WTF::VectorBuffer.164" = type { %"class.WTF::VectorBufferBase.165" }
%"class.WTF::VectorBufferBase.165" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.167" }
%"class.blink::Member.174" = type { %"class.blink::MemberBase.175" }
%"class.blink::MemberBase.175" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.540", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.548", %"class.blink::Member.0", %"class.blink::Member.550", i8, %"class.blink::Member.552", %"class.blink::Member.554", %"class.blink::Member.556", %"class.blink::Member.556", %"class.blink::Member.556", %"class.blink::Member.556", %"class.blink::Member.556", %"class.blink::Member.556", %"class.blink::Member.558", %"class.blink::Member.560", %"class.blink::Member.562", %"class.blink::Member.591", %"class.blink::Member.593", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.507", %"class.blink::Member.595", %class.scoped_refptr.597, %"class.blink::HeapHashSet.659", %"class.blink::Member.666", %"class.blink::HeapHashMap.679", %"class.std::__1::unique_ptr.686", %"class.blink::Member.698", %"class.blink::Member.719", %"class.blink::Member.721", %"class.blink::Member.723", %"class.WTF::Vector.726", %"class.util::TokenType", %"class.WTF::HashSet.731", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.191", %"class.blink::Member.193", %"class.blink::Member.195", %"class.blink::Member.197", i8, %"class.WTF::Vector.199" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.178" }
%"class.blink::HeapVector.178" = type { %"class.WTF::Vector.181" }
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183", [32 x i8] }
%"class.WTF::VectorBufferBase.183" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.184" }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::HeapVector.186"* }
%"class.blink::HeapVector.186" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.189"* }
%"class.WTF::Vector.189" = type opaque
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1219", %"class.blink::Member.1221", %"class.blink::Member.1223", i8, i32, i8, i32, %"class.blink::Member.1225", %"class.blink::Member.193", %"class.blink::FrameLifecycle", %"class.blink::Member.191", %"class.blink::Member.191", %"class.blink::Member.191", %"class.blink::Member.191", %"class.blink::Member.191", %"class.blink::Member.191", %"class.blink::Member.704", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1229", %"class.blink::Member.1239", i8, %"class.base::UnguessableToken", %"class.absl::optional.1241", %"class.absl::optional.1246", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.191", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1258", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1266", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1274", %"class.blink::FrameLoader", %"class.blink::Member.1295", %"class.blink::Member.60", %"class.blink::Member.1297", %"class.blink::Member.1299", %"class.blink::Member.1301", %"class.blink::Member.1303", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1305", %class.scoped_refptr.1307, %"class.blink::Member.1308", %"class.blink::Member.1310", %"class.blink::Member.1312", %"class.blink::Member.1314", %"class.blink::Member.1316", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1322", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1325", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1346", %"class.std::__1::unique_ptr.1347", %"class.absl::optional.1246", i32, [4 x i8], %"class.std::__1::unique_ptr.1353", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1361", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1366", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1371", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1374", %"class.blink::Member.1376", %"class.blink::Member.1378", %"class.blink::Member.1380", %"class.mojo::StructPtr.1383", %"class.blink::Member.1392", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1394", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1258" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1259" }
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1266" = type { %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.689", %"class.base::WeakPtrFactory.694" }
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.base::WeakPtrFactory.694" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.222 }
%class.scoped_refptr.222 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.223", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.223" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.224" }
%"struct.std::__1::atomic.224" = type { %"struct.std::__1::__atomic_base.225" }
%"struct.std::__1::__atomic_base.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__cxx_atomic_impl.227" }
%"struct.std::__1::__cxx_atomic_impl.227" = type { %"struct.std::__1::__cxx_atomic_base_impl.228" }
%"struct.std::__1::__cxx_atomic_base_impl.228" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1272" }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.702" }
%"class.blink::WeakMember.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.387" }
%"class.blink::HeapHashSet.387" = type { %"class.WTF::HashSet.390" }
%"class.WTF::HashSet.390" = type { %"class.WTF::HashTable.391" }
%"class.WTF::HashTable.391" = type <{ %"class.blink::WeakMember.393"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.393" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.324", %"class.base::RepeatingCallback.2138", i64, %"class.std::__1::map.2139", i8*, i64, %"class.base::WeakPtrFactory.2148" }
%"class.base::RepeatingCallback.324" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.2138" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2139" = type { %"class.std::__1::__tree.2140" }
%"class.std::__1::__tree.2140" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2141", %"class.std::__1::__compressed_pair.2145" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2145" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.base::WeakPtrFactory.2148" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1274" = type { %"class.WTF::HashSet.1277" }
%"class.WTF::HashSet.1277" = type { %"class.WTF::HashTable.1278" }
%"class.WTF::HashTable.1278" = type <{ %"class.blink::WeakMember.1280"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1280" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.704", %"class.blink::Member.1281", %"class.blink::Member.1283", %"class.std::__1::unique_ptr.1285", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1291" }
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1689", %"class.blink::Member.1694", %"class.std::__1::unique_ptr.1696", %"class.std::__1::unique_ptr.477", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1877, %"class.WTF::AtomicString", i32, %"class.absl::optional.1776", %class.scoped_refptr.410, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1741", i8, %"class.absl::optional.1748", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.704", %"class.blink::Member.1878", %"class.blink::Member.741", %"class.blink::Member.1889", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.1891", %class.scoped_refptr.402, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.1904", %"class.std::__1::unique_ptr.1753", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.1906", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1911, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1925, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1926", %"class.blink::Member.1941", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.1954", %"class.WTF::Vector.507", i8, i8, i8, %"class.blink::WebVector.1866", %"class.blink::WebVector.1866", %"class.mojo::Remote.1959" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1689" = type { %"class.WTF::VectorBuffer.1690" }
%"class.WTF::VectorBuffer.1690" = type { %"class.WTF::VectorBufferBase.1691" }
%"class.WTF::VectorBufferBase.1691" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1694" = type { %"class.blink::MemberBase.1695" }
%"class.blink::MemberBase.1695" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1700", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1741", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1748", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1753", %"class.base::UnguessableToken", %"class.blink::WebVector.1759", %"class.base::TickClock"*, %"class.blink::WebVector.1768", %"class.absl::optional.1776", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1781", %"class.blink::WebVector", i8, %"class.blink::WebVector.1800", i8, %"class.std::__1::unique_ptr.1808", %"class.blink::WebVector.1866", %"class.blink::WebVector.1866" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector.1700" = type { %"class.std::__1::vector.1701" }
%"class.std::__1::vector.1701" = type { %"class.std::__1::__vector_base.1702" }
%"class.std::__1::__vector_base.1702" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1736" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1736" = type { %"struct.std::__1::__compressed_pair_elem.1737" }
%"struct.std::__1::__compressed_pair_elem.1737" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1703", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1703" = type { %"class.std::__1::__compressed_pair.1704" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.1705" }
%"struct.std::__1::__compressed_pair_elem.1705" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1747", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1747" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1699" }
%"class.blink::WebPrivatePtr.1699" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1759" = type { %"class.std::__1::vector.1760" }
%"class.std::__1::vector.1760" = type { %"class.std::__1::__vector_base.1761" }
%"class.std::__1::__vector_base.1761" = type { %"class.std::__1::unique_ptr.1762"*, %"class.std::__1::unique_ptr.1762"*, %"class.std::__1::__compressed_pair.1763" }
%"class.std::__1::unique_ptr.1762" = type opaque
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.1764" }
%"struct.std::__1::__compressed_pair_elem.1764" = type { %"class.std::__1::unique_ptr.1762"* }
%"class.blink::WebVector.1768" = type { %"class.std::__1::vector.1769" }
%"class.std::__1::vector.1769" = type { %"class.std::__1::__vector_base.1770" }
%"class.std::__1::__vector_base.1770" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1771" }
%"class.std::__1::__compressed_pair.1771" = type { %"struct.std::__1::__compressed_pair_elem.1772" }
%"struct.std::__1::__compressed_pair_elem.1772" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.1781" = type { %"class.absl::optional_internal::optional_data.1782" }
%"class.absl::optional_internal::optional_data.1782" = type { %"class.absl::optional_internal::optional_data_base.1783" }
%"class.absl::optional_internal::optional_data_base.1783" = type { %"class.absl::optional_internal::optional_data_dtor_base.1784" }
%"class.absl::optional_internal::optional_data_dtor_base.1784" = type { i8, [7 x i8], %union.anon.1785 }
%union.anon.1785 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1330" }
%"class.std::__1::vector.1330" = type { %"class.std::__1::__vector_base.1331" }
%"class.std::__1::__vector_base.1331" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1332" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1333" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1800" = type { %"class.std::__1::vector.1801" }
%"class.std::__1::vector.1801" = type { %"class.std::__1::__vector_base.1802" }
%"class.std::__1::__vector_base.1802" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1803" }
%"class.std::__1::__compressed_pair.1803" = type { %"struct.std::__1::__compressed_pair_elem.1804" }
%"struct.std::__1::__compressed_pair_elem.1804" = type { i32* }
%"class.std::__1::unique_ptr.1808" = type { %"class.std::__1::__compressed_pair.1809" }
%"class.std::__1::__compressed_pair.1809" = type { %"struct.std::__1::__compressed_pair_elem.1810" }
%"struct.std::__1::__compressed_pair_elem.1810" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1811" }
%"class.blink::WebVector.1811" = type { %"class.std::__1::vector.1812" }
%"class.std::__1::vector.1812" = type { %"class.std::__1::__vector_base.1813" }
%"class.std::__1::__vector_base.1813" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1858" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1814", %"class.blink::WebVector.1822", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.1853", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1814" = type { %"class.std::__1::vector.1815" }
%"class.std::__1::vector.1815" = type { %"class.std::__1::__vector_base.1816" }
%"class.std::__1::__vector_base.1816" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1817" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1822" = type { %"class.std::__1::vector.1823" }
%"class.std::__1::vector.1823" = type { %"class.std::__1::__vector_base.1824" }
%"class.std::__1::__vector_base.1824" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1848" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1825", %"class.blink::WebVector", %"class.blink::WebVector.1833", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1825" = type { %"class.std::__1::vector.1826" }
%"class.std::__1::vector.1826" = type { %"class.std::__1::__vector_base.1827" }
%"class.std::__1::__vector_base.1827" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1833" = type { %"class.std::__1::vector.1834" }
%"class.std::__1::vector.1834" = type { %"class.std::__1::__vector_base.1835" }
%"class.std::__1::__vector_base.1835" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1843" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1836" }
%"class.blink::WebVector.1836" = type { %"class.std::__1::vector.1837" }
%"class.std::__1::vector.1837" = type { %"class.std::__1::__vector_base.1838" }
%"class.std::__1::__vector_base.1838" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1839" }
%"class.std::__1::__compressed_pair.1839" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { i8* }
%"class.std::__1::__compressed_pair.1843" = type { %"struct.std::__1::__compressed_pair_elem.1844" }
%"struct.std::__1::__compressed_pair_elem.1844" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1848" = type { %"struct.std::__1::__compressed_pair_elem.1849" }
%"struct.std::__1::__compressed_pair_elem.1849" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1853" = type { %"class.absl::optional_internal::optional_data.1854" }
%"class.absl::optional_internal::optional_data.1854" = type { %"class.absl::optional_internal::optional_data_base.1855" }
%"class.absl::optional_internal::optional_data_base.1855" = type { %"class.absl::optional_internal::optional_data_dtor_base.1856" }
%"class.absl::optional_internal::optional_data_dtor_base.1856" = type { i8, [7 x i8], %union.anon.1857 }
%union.anon.1857 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1858" = type { %"struct.std::__1::__compressed_pair_elem.1859" }
%"struct.std::__1::__compressed_pair_elem.1859" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.337 }
%class.scoped_refptr.337 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.480" }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.483" }
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.WTF::VectorBufferBase.485" = type { %"class.mojo::StructPtr.486"*, i32, i32 }
%"class.mojo::StructPtr.486" = type { %"class.std::__1::unique_ptr.487" }
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.490", %"class.WTF::HashMap.497", %"class.WTF::HashMap.502", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.507", i32, %"class.mojo::StructPtr.512", %"class.WTF::Vector.507" }
%"class.mojo::StructPtr.490" = type { %"class.std::__1::unique_ptr.491" }
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.WTF::HashMap.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"struct.WTF::KeyValuePair.506"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.506" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.512" = type { %"class.std::__1::unique_ptr.513" }
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.507", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.527" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.321", i32 }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.324", %"class.base::OnceCallback.325", %"class.absl::optional.326", %"class.absl::optional.331", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.338", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.346", %"class.std::__1::map.357", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.366", i8, %class.scoped_refptr.204, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.367" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.325" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.326" = type { %"class.absl::optional_internal::optional_data.327" }
%"class.absl::optional_internal::optional_data.327" = type { %"class.absl::optional_internal::optional_data_base.328" }
%"class.absl::optional_internal::optional_data_base.328" = type { %"class.absl::optional_internal::optional_data_dtor_base.329" }
%"class.absl::optional_internal::optional_data_dtor_base.329" = type { i8, %union.anon.330 }
%union.anon.330 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.331" = type { %"class.absl::optional_internal::optional_data.332" }
%"class.absl::optional_internal::optional_data.332" = type { %"class.absl::optional_internal::optional_data_base.333" }
%"class.absl::optional_internal::optional_data_base.333" = type { %"class.absl::optional_internal::optional_data_dtor_base.334" }
%"class.absl::optional_internal::optional_data_dtor_base.334" = type { i8, %union.anon.335 }
%union.anon.335 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.204, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.336" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.336" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1967", [4 x i8], %"class.base::RepeatingCallback.324", %class.scoped_refptr.204, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1967" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.341", %class.scoped_refptr.342 }
%"class.base::RepeatingCallback.341" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.342 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.203", [4 x i8] }>
%"class.base::RefCountedThreadSafe.203" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.346" = type { %"class.std::__1::__tree.347" }
%"class.std::__1::__tree.347" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.357" = type { %"class.std::__1::__tree.358" }
%"class.std::__1::__tree.358" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.359", %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.base::OnceCallback.366" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.204 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.205" }>
%"class.base::RefCountedThreadSafe.205" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.367" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.1877 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1776" = type { %"class.absl::optional_internal::optional_data.1777" }
%"class.absl::optional_internal::optional_data.1777" = type { %"class.absl::optional_internal::optional_data_base.1778" }
%"class.absl::optional_internal::optional_data_base.1778" = type { %"class.absl::optional_internal::optional_data_dtor_base.1779" }
%"class.absl::optional_internal::optional_data_dtor_base.1779" = type { i8, %union.anon.1780 }
%union.anon.1780 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.410 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.403", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.405", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.410 }
%"class.WTF::RefCounted.403" = type { %"class.base::RefCounted.404" }
%"class.base::RefCounted.404" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.405" = type { %"class.absl::optional_internal::optional_data.406" }
%"class.absl::optional_internal::optional_data.406" = type { %"class.absl::optional_internal::optional_data_base.407" }
%"class.absl::optional_internal::optional_data_base.407" = type { %"class.absl::optional_internal::optional_data_dtor_base.408" }
%"class.absl::optional_internal::optional_data_dtor_base.408" = type { i8, %union.anon.409 }
%union.anon.409 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1748" = type { %"class.absl::optional_internal::optional_data.1749" }
%"class.absl::optional_internal::optional_data.1749" = type { %"class.absl::optional_internal::optional_data_base.1750" }
%"class.absl::optional_internal::optional_data_base.1750" = type { %"class.absl::optional_internal::optional_data_dtor_base.1751" }
%"class.absl::optional_internal::optional_data_dtor_base.1751" = type { i8, %union.anon.1752 }
%union.anon.1752 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1786", %"class.base::flat_map.1229", i8, [7 x i8] }>
%"class.std::__1::vector.1786" = type { %"class.std::__1::__vector_base.1787" }
%"class.std::__1::__vector_base.1787" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1795" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1788", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1788" = type { %"class.std::__1::__vector_base.1789" }
%"class.std::__1::__vector_base.1789" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1790" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.405" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.208 }
%union.anon.208 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1791" }
%"struct.std::__1::__compressed_pair_elem.1791" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1878" = type { %"class.blink::MemberBase.1879" }
%"class.blink::MemberBase.1879" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.507", %"class.blink::Member.1882", %"class.absl::optional.1884", i64, i64, i32, %class.scoped_refptr.597, %class.scoped_refptr.1877, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.597 }
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1884" = type { %"class.absl::optional_internal::optional_data.1885" }
%"class.absl::optional_internal::optional_data.1885" = type { %"class.absl::optional_internal::optional_data_base.1886" }
%"class.absl::optional_internal::optional_data_base.1886" = type { %"class.absl::optional_internal::optional_data_dtor_base.1887" }
%"class.absl::optional_internal::optional_data_dtor_base.1887" = type { i8, %union.anon.1888 }
%union.anon.1888 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::Member.1889" = type { %"class.blink::MemberBase.1890" }
%"class.blink::MemberBase.1890" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1712", %class.scoped_refptr.1726, %class.scoped_refptr.1727, %"struct.blink::CacheControlHeader", %"class.absl::optional.326", %"class.absl::optional.1643", %"class.absl::optional.1643", %"class.absl::optional.1643", i64, %"class.blink::KURL", %"class.WTF::Vector.1689", %"class.WTF::String", %"class.WTF::Vector.507", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1246", %"class.WTF::Vector.507", %"class.blink::KURL", %"class.absl::optional.1728" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1706" }
%"class.WTF::HashMap.1706" = type { %"class.WTF::HashTable.1707" }
%"class.WTF::HashTable.1707" = type <{ %"struct.WTF::KeyValuePair.1710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1710" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1711", i8 }
%"struct.std::__1::array.1711" = type { [16 x i8] }
%"class.absl::optional.1712" = type { %"class.absl::optional_internal::optional_data.1713" }
%"class.absl::optional_internal::optional_data.1713" = type { %"class.absl::optional_internal::optional_data_base.1714" }
%"class.absl::optional_internal::optional_data_base.1714" = type { %"class.absl::optional_internal::optional_data_dtor_base.1715" }
%"class.absl::optional_internal::optional_data_dtor_base.1715" = type { i8, %union.anon.1716 }
%union.anon.1716 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.507", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1717", %"class.WTF::Vector.1721" }
%"class.WTF::Vector.1717" = type { %"class.WTF::VectorBuffer.1718" }
%"class.WTF::VectorBuffer.1718" = type { %"class.WTF::VectorBufferBase.35" }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1726 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1727 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.326", %"class.absl::optional.326" }
%"class.absl::optional.1643" = type { %"class.absl::optional_internal::optional_data.1644" }
%"class.absl::optional_internal::optional_data.1644" = type { %"class.absl::optional_internal::optional_data_base.1645" }
%"class.absl::optional_internal::optional_data_base.1645" = type { %"class.absl::optional_internal::optional_data_dtor_base.1646" }
%"class.absl::optional_internal::optional_data_dtor_base.1646" = type { i8, %union.anon.1647 }
%union.anon.1647 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1636" }
%"class.base::time_internal::TimeBase.1636" = type { i64 }
%"class.absl::optional.1728" = type { %"class.absl::optional_internal::optional_data.1729" }
%"class.absl::optional_internal::optional_data.1729" = type { %"class.absl::optional_internal::optional_data_base.1730" }
%"class.absl::optional_internal::optional_data_base.1730" = type { %"class.absl::optional_internal::optional_data_dtor_base.1731" }
%"class.absl::optional_internal::optional_data_dtor_base.1731" = type { i8, %union.anon.1732 }
%union.anon.1732 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.1891" = type { %"class.mojo::internal::InterfacePtrState.1892" }
%"class.mojo::internal::InterfacePtrState.1892" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1893" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.202, %"class.std::__1::unique_ptr.321", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.204, i32 }>
%class.scoped_refptr.202 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.204, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.283", %"class.absl::optional.288", %"class.absl::optional.244", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.312", i8, [7 x i8], %class.scoped_refptr.204, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.203" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.204, %"class.std::__1::unique_ptr.229", %"class.absl::optional", %"struct.std::__1::atomic.240", i8, i8, i8, i8, i32, i32, %"class.absl::optional.244", %"class.std::__1::unique_ptr.249", i8, i64, %class.scoped_refptr.279, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.282" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.204, i8, %"class.mojo::ScopedHandleBase.232", %class.scoped_refptr.233, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.234" }
%"class.mojo::ScopedHandleBase.232" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.233 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.234" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.238 }
%union.anon.238 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.239", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.239" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.252", i8, i64, %class.scoped_refptr.253, %class.scoped_refptr.275 }
%"class.base::RepeatingCallback.252" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.253 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.254", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.264", i8, [7 x i8] }>
%"class.base::RefCounted.254" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.255 }
%class.scoped_refptr.255 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.264" = type { %"class.std::__1::__tree.265" }
%"class.std::__1::__tree.265" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%class.scoped_refptr.275 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.279 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.282" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.283" = type { %"class.absl::optional_internal::optional_data.284" }
%"class.absl::optional_internal::optional_data.284" = type { %"class.absl::optional_internal::optional_data_base.285" }
%"class.absl::optional_internal::optional_data_base.285" = type { %"class.absl::optional_internal::optional_data_dtor_base.286" }
%"class.absl::optional_internal::optional_data_dtor_base.286" = type { i8, %union.anon.287 }
%union.anon.287 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.288" = type { %"class.absl::optional_internal::optional_data.289" }
%"class.absl::optional_internal::optional_data.289" = type { %"class.absl::optional_internal::optional_data_base.290" }
%"class.absl::optional_internal::optional_data_base.290" = type { %"class.absl::optional_internal::optional_data_dtor_base.291" }
%"class.absl::optional_internal::optional_data_dtor_base.291" = type { i8, [7 x i8], %union.anon.292 }
%union.anon.292 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.244" = type { %"class.absl::optional_internal::optional_data.245" }
%"class.absl::optional_internal::optional_data.245" = type { %"class.absl::optional_internal::optional_data_base.246" }
%"class.absl::optional_internal::optional_data_base.246" = type { %"class.absl::optional_internal::optional_data_dtor_base.247" }
%"class.absl::optional_internal::optional_data_dtor_base.247" = type { i8, %union.anon.248 }
%union.anon.248 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.297 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.297 = type { %"class.std::__1::map.300" }
%"class.std::__1::map.300" = type { %"class.std::__1::__tree.301" }
%"class.std::__1::__tree.301" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.311"*, i64 }
%"class.std::__1::unique_ptr.311" = type opaque
%"class.std::__1::map.312" = type { %"class.std::__1::__tree.313" }
%"class.std::__1::__tree.313" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1893" = type { %"class.std::__1::__compressed_pair.1894" }
%"class.std::__1::__compressed_pair.1894" = type { %"struct.std::__1::__compressed_pair_elem.1895" }
%"struct.std::__1::__compressed_pair_elem.1895" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.402 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.326", %"class.absl::optional.326", %"class.absl::optional.326", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1899", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1283" }
%"class.WTF::Vector.1899" = type { %"class.WTF::VectorBuffer.1900" }
%"class.WTF::VectorBuffer.1900" = type { %"class.WTF::VectorBufferBase.1901" }
%"class.WTF::VectorBufferBase.1901" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1753" = type { %"class.std::__1::__compressed_pair.1754" }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.1755" }
%"struct.std::__1::__compressed_pair_elem.1755" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1229", %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.441"*, %"struct.std::__1::pair.441"*, %"class.std::__1::__compressed_pair.442" }
%"struct.std::__1::pair.441" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::pair.441"* }
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.1911 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1912", i64, %"class.WTF::Vector.1914", %"class.WTF::Vector.1919" }
%"class.WTF::RefCounted.1912" = type { %"class.base::RefCounted.1913" }
%"class.base::RefCounted.1913" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1914" = type { %"class.WTF::VectorBuffer.1915" }
%"class.WTF::VectorBuffer.1915" = type { %"class.WTF::VectorBufferBase.1916" }
%"class.WTF::VectorBufferBase.1916" = type { i8*, i32, i32 }
%"class.WTF::Vector.1919" = type { %"class.WTF::VectorBuffer.1920" }
%"class.WTF::VectorBuffer.1920" = type { %"class.WTF::VectorBufferBase.1921" }
%"class.WTF::VectorBufferBase.1921" = type { %"class.std::__1::unique_ptr.1922"*, i32, i32 }
%"class.std::__1::unique_ptr.1922" = type opaque
%class.scoped_refptr.1925 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.1930", %"class.std::__1::unique_ptr.1935", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.1930" = type { %"class.WTF::HashTable.1931" }
%"class.WTF::HashTable.1931" = type <{ %"struct.WTF::KeyValuePair.1934"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1934" = type { %"class.WTF::Vector.1990", %class.scoped_refptr.2213 }
%"class.WTF::Vector.1990" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.79", [32 x i8] }
%class.scoped_refptr.2213 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2214", %"class.WTF::Vector.1977", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2214" = type { %"class.base::RefCounted.2215" }
%"class.base::RefCounted.2215" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1977" = type { %"class.WTF::VectorBuffer.1978" }
%"class.WTF::VectorBuffer.1978" = type { %"class.WTF::VectorBufferBase.79" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2216", i64, %"class.absl::optional.2221" }
%"class.std::__1::unique_ptr.2216" = type { %"class.std::__1::__compressed_pair.2217" }
%"class.std::__1::__compressed_pair.2217" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"class.absl::optional.2221" = type { %"class.absl::optional_internal::optional_data.2222" }
%"class.absl::optional_internal::optional_data.2222" = type { %"class.absl::optional_internal::optional_data_base.2223" }
%"class.absl::optional_internal::optional_data_base.2223" = type { %"class.absl::optional_internal::optional_data_dtor_base.2224" }
%"class.absl::optional_internal::optional_data_dtor_base.2224" = type { i8, %union.anon.2225 }
%union.anon.2225 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2226", %"class.std::__1::unique_ptr.2227" }
%"class.mojo::ScopedHandleBase.2226" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2227" = type { %"class.std::__1::__compressed_pair.2228" }
%"class.std::__1::__compressed_pair.2228" = type { %"struct.std::__1::__compressed_pair_elem.2229" }
%"struct.std::__1::__compressed_pair_elem.2229" = type { i8* }
%"class.std::__1::unique_ptr.1935" = type { %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.1937" }
%"struct.std::__1::__compressed_pair_elem.1937" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.1941" = type { %"class.blink::MemberBase.1942" }
%"class.blink::MemberBase.1942" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.1947" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.1943", %"class.std::__1::bitset.1943", %"class.std::__1::bitset.1945" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1943" = type { %"class.std::__1::__bitset.1944" }
%"class.std::__1::__bitset.1944" = type { [11 x i64] }
%"class.std::__1::bitset.1945" = type { %"class.std::__1::__bitset.1946" }
%"class.std::__1::__bitset.1946" = type { [2 x i64] }
%"class.blink::HeapHashSet.1947" = type { %"class.WTF::HashSet.1950" }
%"class.WTF::HashSet.1950" = type { %"class.WTF::HashTable.1951" }
%"class.WTF::HashTable.1951" = type <{ %"class.blink::Member.1953"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1953" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { i32*, i32, i32 }
%"class.blink::WebVector.1866" = type { %"class.std::__1::vector.1867" }
%"class.std::__1::vector.1867" = type { %"class.std::__1::__vector_base.1868" }
%"class.std::__1::__vector_base.1868" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1869" }
%"class.std::__1::__compressed_pair.1869" = type { %"struct.std::__1::__compressed_pair_elem.1870" }
%"struct.std::__1::__compressed_pair_elem.1870" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.1959" = type { %"class.mojo::internal::InterfacePtrState.1960" }
%"class.mojo::internal::InterfacePtrState.1960" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1961" }
%"class.std::__1::unique_ptr.1961" = type { %"class.std::__1::__compressed_pair.1962" }
%"class.std::__1::__compressed_pair.1962" = type { %"struct.std::__1::__compressed_pair_elem.1963" }
%"struct.std::__1::__compressed_pair_elem.1963" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1285" = type { %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.1291" = type { %"class.WTF::HashTable.1292" }
%"class.WTF::HashTable.1292" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1401", %"class.blink::Member.704", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1406", i8, i32, %"class.blink::Color", %"class.absl::optional.1408", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1413", %"class.blink::Member.1415", %"class.blink::Member.1415", %"class.std::__1::unique_ptr.1418", i32, [4 x i8], %"class.WTF::HashSet.1421", %"class.blink::Member.1428", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1430", %"class.blink::HeapHashSet.1438", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1446", i8, %"class.blink::Member.1452", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1464", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1478", i8, %"class.std::__1::unique_ptr.1484", %"class.std::__1::unique_ptr.1601", %"class.WTF::Vector.1607", i32, %class.scoped_refptr.1612, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1613", %"class.blink::Member.1615", %"class.blink::Member.1617", %"class.blink::HeapHashSet.1619", %"class.blink::HeapHashSet.1626", %"class.std::__1::unique_ptr.1633", %"class.std::__1::unique_ptr.1640", %"class.WTF::Vector.163" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %class.scoped_refptr.1405*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1405 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1406" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1407", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.964, %"class.base::WeakPtrFactory.965" }
%class.scoped_refptr.964 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.965" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1407" = type { %"class.blink::MemberBase.1296" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1408" = type { %"class.absl::optional_internal::optional_data.1409" }
%"class.absl::optional_internal::optional_data.1409" = type { %"class.absl::optional_internal::optional_data_base.1410" }
%"class.absl::optional_internal::optional_data_base.1410" = type { %"class.absl::optional_internal::optional_data_dtor_base.1411" }
%"class.absl::optional_internal::optional_data_dtor_base.1411" = type { i8, %union.anon.1412 }
%union.anon.1412 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::HeapHashSet.1417"* }
%"class.blink::HeapHashSet.1417" = type opaque
%"class.std::__1::unique_ptr.1418" = type { %"class.std::__1::__compressed_pair.1419" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"class.WTF::HashSet.1421"* }
%"class.WTF::HashSet.1421" = type { %"class.WTF::HashTable.1422" }
%"class.WTF::HashTable.1422" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1430" = type { %"class.WTF::HashSet.1433" }
%"class.WTF::HashSet.1433" = type { %"class.WTF::HashTable.1434" }
%"class.WTF::HashTable.1434" = type <{ %"class.blink::Member.1436"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::WebPluginContainerImpl"* }
%"class.blink::WebPluginContainerImpl" = type opaque
%"class.blink::HeapHashSet.1438" = type { %"class.WTF::HashSet.1441" }
%"class.WTF::HashSet.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"class.blink::Member.1444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1444" = type { %"class.blink::MemberBase.1445" }
%"class.blink::MemberBase.1445" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1674", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1685", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.60" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1676", %"class.blink::Member.1677", %"class.blink::Member.1679", %"class.blink::Member.1681", %"class.blink::Member.1683", %"class.WTF::Vector.163", i16, %class.scoped_refptr.964 }
%"class.blink::ThreadState::PrefinalizerRegistration.1676" = type { i8 }
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1685" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1686", { i64, i64 } }
%"class.blink::WeakMember.1686" = type { %"class.blink::MemberBase.1445" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1446" = type { %"class.std::__1::__compressed_pair.1447" }
%"class.std::__1::__compressed_pair.1447" = type { %"struct.std::__1::__compressed_pair_elem.1448" }
%"struct.std::__1::__compressed_pair_elem.1448" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1456", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1456" = type { %"class.WTF::HashTable.1457" }
%"class.WTF::HashTable.1457" = type <{ %"struct.WTF::KeyValuePair.1459"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1459" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1460", i32, i32 }
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1464" = type { %"class.WTF::LinkedHashSet.1467" }
%"class.WTF::LinkedHashSet.1467" = type { %"class.WTF::HashMap.1468", %"class.WTF::VectorBackedLinkedList.1472" }
%"class.WTF::HashMap.1468" = type { %"class.WTF::HashTable.1469" }
%"class.WTF::HashTable.1469" = type <{ %"struct.WTF::KeyValuePair.1471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1471" = type opaque
%"class.WTF::VectorBackedLinkedList.1472" = type { %"class.WTF::Vector.1473", i32, i32 }
%"class.WTF::Vector.1473" = type { %"class.WTF::VectorBuffer.1474" }
%"class.WTF::VectorBuffer.1474" = type { %"class.WTF::VectorBufferBase.1475" }
%"class.WTF::VectorBufferBase.1475" = type { %"class.WTF::VectorBackedLinkedListNode.1476"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1476" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1478" = type { %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1484" = type { %"class.std::__1::__compressed_pair.1485" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1487, %class.scoped_refptr.1487, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1578", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1583", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1487 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1488", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1495" }
%"class.WTF::RefCounted.1488" = type { %"class.base::RefCounted.1489" }
%"class.base::RefCounted.1489" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1490", i32, [4 x i8] }>
%"class.WTF::Vector.1490" = type { %"class.WTF::VectorBuffer.1491" }
%"class.WTF::VectorBuffer.1491" = type { %"class.WTF::VectorBufferBase.1492" }
%"class.WTF::VectorBufferBase.1492" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1495" = type { %"class.WTF::VectorBuffer.1496" }
%"class.WTF::VectorBuffer.1496" = type { %"class.WTF::VectorBufferBase.1497" }
%"class.WTF::VectorBufferBase.1497" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1501", %"class.std::__1::unique_ptr.1550", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1498, %class.scoped_refptr.1499, %class.scoped_refptr.1500 }
%class.scoped_refptr.1498 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1514", i8, i8, %class.scoped_refptr.1498, i32, i32 }
%"class.WTF::RefCounted.1514" = type { %"class.base::RefCounted.1515" }
%"class.base::RefCounted.1515" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1499 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1669" }
%"class.blink::PaintPropertyNode.1669" = type { %"class.WTF::RefCounted.1670", i8, i8, %class.scoped_refptr.1499, i32, i32 }
%"class.WTF::RefCounted.1670" = type { %"class.base::RefCounted.1671" }
%"class.base::RefCounted.1671" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1500 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1666" }
%"class.blink::PaintPropertyNode.1666" = type { %"class.WTF::RefCounted.1667", i8, i8, %class.scoped_refptr.1500, i32, i32 }
%"class.WTF::RefCounted.1667" = type { %"class.base::RefCounted.1668" }
%"class.base::RefCounted.1668" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1501" = type { %"class.std::__1::__compressed_pair.1502" }
%"class.std::__1::__compressed_pair.1502" = type { %"struct.std::__1::__compressed_pair_elem.1503" }
%"struct.std::__1::__compressed_pair_elem.1503" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1504", %"class.WTF::Vector.1509", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1504" = type { %"class.WTF::VectorBuffer.1505" }
%"class.WTF::VectorBuffer.1505" = type { %"class.WTF::VectorBufferBase.1506" }
%"class.WTF::VectorBufferBase.1506" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1509" = type { %"class.WTF::VectorBuffer.1510" }
%"class.WTF::VectorBuffer.1510" = type { %"class.WTF::VectorBufferBase.1511" }
%"class.WTF::VectorBufferBase.1511" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1529" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1522, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1523", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1516" }
%"class.std::__1::unique_ptr.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1522 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1651", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1651" = type { %"class.WTF::RefCounted.1652", i8, i8, %class.scoped_refptr.1522, i32, i32 }
%"class.WTF::RefCounted.1652" = type { %"class.base::RefCounted.1653" }
%"class.base::RefCounted.1653" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1654" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1654" = type { %"class.absl::optional_internal::optional_data.1655" }
%"class.absl::optional_internal::optional_data.1655" = type { %"class.absl::optional_internal::optional_data_base.1656" }
%"class.absl::optional_internal::optional_data_base.1656" = type { %"class.absl::optional_internal::optional_data_dtor_base.1657" }
%"class.absl::optional_internal::optional_data_dtor_base.1657" = type { i8, %union.anon.1658 }
%union.anon.1658 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1659", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1659" = type { %"class.std::__1::__vector_base.1660" }
%"class.std::__1::__vector_base.1660" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1661" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.1662" }
%"struct.std::__1::__compressed_pair_elem.1662" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1523" = type { %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1529" = type { %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1532", %"class.std::__1::unique_ptr.1538", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1532" = type { %"class.std::__1::__compressed_pair.1533" }
%"class.std::__1::__compressed_pair.1533" = type { %"struct.std::__1::__compressed_pair_elem.1534" }
%"struct.std::__1::__compressed_pair_elem.1534" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1538" = type { %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1550" = type { %"class.std::__1::__compressed_pair.1551" }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1553", %"class.absl::optional.1553" }
%"class.absl::optional.1553" = type { %"class.absl::optional_internal::optional_data.1554" }
%"class.absl::optional_internal::optional_data.1554" = type { %"class.absl::optional_internal::optional_data_base.1555" }
%"class.absl::optional_internal::optional_data_base.1555" = type { %"class.absl::optional_internal::optional_data_dtor_base.1556" }
%"class.absl::optional_internal::optional_data_dtor_base.1556" = type { i8, [3 x i8], %union.anon.1557 }
%union.anon.1557 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1495"*, %"class.absl::optional.1563", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1563" = type { %"class.absl::optional_internal::optional_data.1564" }
%"class.absl::optional_internal::optional_data.1564" = type { %"class.absl::optional_internal::optional_data_base.1565" }
%"class.absl::optional_internal::optional_data_base.1565" = type { %"class.absl::optional_internal::optional_data_dtor_base.1566" }
%"class.absl::optional_internal::optional_data_dtor_base.1566" = type { i8, %union.anon.1567 }
%union.anon.1567 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1568", %"class.WTF::Vector.1573" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570", [128 x i8] }
%"class.WTF::VectorBufferBase.1570" = type { i32*, i32, i32 }
%"class.WTF::Vector.1573" = type { %"class.WTF::VectorBuffer.1574" }
%"class.WTF::VectorBuffer.1574" = type { %"class.WTF::VectorBufferBase.1575", [128 x i8] }
%"class.WTF::VectorBufferBase.1575" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1578" = type { %"class.WTF::VectorBuffer.1579" }
%"class.WTF::VectorBuffer.1579" = type { %"class.WTF::VectorBufferBase.1580" }
%"class.WTF::VectorBufferBase.1580" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1583" = type { %"class.WTF::HashTable.1584" }
%"class.WTF::HashTable.1584" = type <{ %"struct.WTF::KeyValuePair.1587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1587" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1588", %"class.WTF::Vector.1593" }
%"class.WTF::HashMap.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"struct.WTF::KeyValuePair.1592"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1592" = type opaque
%"class.WTF::Vector.1593" = type { %"class.WTF::VectorBuffer.1594" }
%"class.WTF::VectorBuffer.1594" = type { %"class.WTF::VectorBufferBase.1595" }
%"class.WTF::VectorBufferBase.1595" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1601" = type { %"class.std::__1::__compressed_pair.1602" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem.1603" }
%"struct.std::__1::__compressed_pair_elem.1603" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1607" = type { %"class.WTF::VectorBuffer.1608" }
%"class.WTF::VectorBuffer.1608" = type { %"class.WTF::VectorBufferBase.1609" }
%"class.WTF::VectorBufferBase.1609" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1612 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1613" = type { %"class.blink::MemberBase.1614" }
%"class.blink::MemberBase.1614" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1619" = type { %"class.WTF::HashSet.1622" }
%"class.WTF::HashSet.1622" = type { %"class.WTF::HashTable.1623" }
%"class.WTF::HashTable.1623" = type <{ %"class.blink::WeakMember.1625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1625" = type opaque
%"class.blink::HeapHashSet.1626" = type { %"class.WTF::HashSet.1629" }
%"class.WTF::HashSet.1629" = type { %"class.WTF::HashTable.1630" }
%"class.WTF::HashTable.1630" = type <{ %"class.blink::WeakMember.1632"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1632" = type opaque
%"class.std::__1::unique_ptr.1633" = type { %"class.std::__1::__compressed_pair.1634" }
%"class.std::__1::__compressed_pair.1634" = type { %"struct.std::__1::__compressed_pair_elem.1635" }
%"struct.std::__1::__compressed_pair_elem.1635" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1640" = type { %"class.std::__1::__compressed_pair.1641" }
%"class.std::__1::__compressed_pair.1641" = type { %"struct.std::__1::__compressed_pair_elem.1642" }
%"struct.std::__1::__compressed_pair_elem.1642" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1643", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1303" = type { %"class.blink::MemberBase.1304" }
%"class.blink::MemberBase.1304" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1305" = type { %"class.blink::MemberBase.1306" }
%"class.blink::MemberBase.1306" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1307 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1322" = type { %"class.blink::Member.1323" }
%"class.blink::Member.1323" = type { %"class.blink::MemberBase.1324" }
%"class.blink::MemberBase.1324" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2151" }
%"class.mojo::Remote.2151" = type { %"class.mojo::internal::InterfacePtrState.2152" }
%"class.mojo::internal::InterfacePtrState.2152" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2153" }
%"class.std::__1::unique_ptr.2153" = type { %"class.std::__1::__compressed_pair.2154" }
%"class.std::__1::__compressed_pair.2154" = type { %"struct.std::__1::__compressed_pair_elem.2155" }
%"struct.std::__1::__compressed_pair_elem.2155" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1328, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1328 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1329", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1329" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1337, i8, [7 x i8] }>
%class.scoped_refptr.1337 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1338", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1339" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1346" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1353" = type { %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1359" }
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2161" }
%"class.mojo::AssociatedRemote.2161" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2162" }
%"class.mojo::internal::AssociatedInterfacePtrState.2162" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2163" }
%"class.std::__1::unique_ptr.2163" = type { %"class.std::__1::__compressed_pair.2164" }
%"class.std::__1::__compressed_pair.2164" = type { %"struct.std::__1::__compressed_pair_elem.2165" }
%"struct.std::__1::__compressed_pair_elem.2165" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1361" = type { %"class.blink::Member.1362" }
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2171" }
%"class.mojo::AssociatedRemote.2171" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2172" }
%"class.mojo::internal::AssociatedInterfacePtrState.2172" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2173" }
%"class.std::__1::unique_ptr.2173" = type { %"class.std::__1::__compressed_pair.2174" }
%"class.std::__1::__compressed_pair.2174" = type { %"struct.std::__1::__compressed_pair_elem.2175" }
%"struct.std::__1::__compressed_pair_elem.2175" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1364" }
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2181", %"class.blink::Member.704", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2181" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2182" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.321" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2182" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1366" = type { %"class.blink::Member.1367" }
%"class.blink::Member.1367" = type { %"class.blink::MemberBase.1368" }
%"class.blink::MemberBase.1368" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2185", %"class.blink::Member.704", %"class.mojo::AssociatedReceiver.2186" }
%"class.blink::ThreadState::PrefinalizerRegistration.2185" = type { i8 }
%"class.mojo::AssociatedReceiver.2186" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2187" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2187" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1369" }
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2190", %"class.blink::Member.704", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2190" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.202, %"class.std::__1::unique_ptr.321", %"class.base::WeakPtrFactory.2191" }
%"class.base::WeakPtrFactory.2191" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1371" = type { %"class.blink::Member.1372" }
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2194", %"class.blink::Member.704", %"class.mojo::AssociatedReceiver.2195" }
%"class.blink::ThreadState::PrefinalizerRegistration.2194" = type { i8 }
%"class.mojo::AssociatedReceiver.2195" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2196" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2196" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1376" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1380" = type { %"class.blink::MemberBase.1381" }
%"class.blink::MemberBase.1381" = type { %"class.blink::HeapHashMap.1382"* }
%"class.blink::HeapHashMap.1382" = type opaque
%"class.mojo::StructPtr.1383" = type { %"class.std::__1::unique_ptr.1384" }
%"class.std::__1::unique_ptr.1384" = type { %"class.std::__1::__compressed_pair.1385" }
%"class.std::__1::__compressed_pair.1385" = type { %"struct.std::__1::__compressed_pair_elem.1386" }
%"struct.std::__1::__compressed_pair_elem.1386" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1387", %"class.mojo::InlinedStructPtr.1388" }
%"class.mojo::InlinedStructPtr.1387" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1388" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1394" = type { %"class.absl::optional_internal::optional_data.1395" }
%"class.absl::optional_internal::optional_data.1395" = type { %"class.absl::optional_internal::optional_data_base.1396" }
%"class.absl::optional_internal::optional_data_base.1396" = type { %"class.absl::optional_internal::optional_data_dtor_base.1397" }
%"class.absl::optional_internal::optional_data_dtor_base.1397" = type { i8, %union.anon.1398 }
%union.anon.1398 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.191", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1229" = type { %"class.base::internal::flat_tree.1230" }
%"class.base::internal::flat_tree.1230" = type { %"class.std::__1::vector.1231" }
%"class.std::__1::vector.1231" = type { %"class.std::__1::__vector_base.1232" }
%"class.std::__1::__vector_base.1232" = type { %"struct.std::__1::pair.1233"*, %"struct.std::__1::pair.1233"*, %"class.std::__1::__compressed_pair.1234" }
%"struct.std::__1::pair.1233" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.std::__1::pair.1233"* }
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1241" = type { %"class.absl::optional_internal::optional_data.1242" }
%"class.absl::optional_internal::optional_data.1242" = type { %"class.absl::optional_internal::optional_data_base.1243" }
%"class.absl::optional_internal::optional_data_base.1243" = type { %"class.absl::optional_internal::optional_data_dtor_base.1244" }
%"class.absl::optional_internal::optional_data_dtor_base.1244" = type { i8, %union.anon.1245 }
%union.anon.1245 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1246" = type { %"class.absl::optional_internal::optional_data.1247" }
%"class.absl::optional_internal::optional_data.1247" = type { %"class.absl::optional_internal::optional_data_base.1248" }
%"class.absl::optional_internal::optional_data_base.1248" = type { %"class.absl::optional_internal::optional_data_dtor_base.1249" }
%"class.absl::optional_internal::optional_data_dtor_base.1249" = type { i8, %union.anon.1250 }
%union.anon.1250 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1251" }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::WeakMember.1257"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1257" = type opaque
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.199" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201" }
%"class.WTF::VectorBufferBase.201" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.371" }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.379", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.456", i32, i8, [3 x i8], %"class.blink::HeapVector.458", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.477", %"class.blink::Member.536", %"class.blink::Member.538", i8 }>
%"class.blink::Supplementable.379" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.380" }
%"class.blink::HeapHashMap.380" = type { %"class.WTF::HashMap.383" }
%"class.WTF::HashMap.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.394" }
%"class.blink::Supplementable.394" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.395" }
%"class.blink::HeapHashMap.395" = type { %"class.WTF::HashMap.398" }
%"class.WTF::HashMap.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"struct.WTF::KeyValuePair.401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.401" = type { i8*, %"class.blink::Member.2126" }
%"class.blink::Member.2126" = type { %"class.blink::MemberBase.2127" }
%"class.blink::MemberBase.2127" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2128" }
%"class.blink::Member.2128" = type { %"class.blink::MemberBase.2129" }
%"class.blink::MemberBase.2129" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.402, %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.438", %"class.blink::Member.450", i32, [4 x i8], %"class.WTF::HashSet.452", i32, i32 }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.414", %"class.std::__1::map.425", %"class.std::__1::map.434"* }
%"class.std::__1::map.414" = type { %"class.std::__1::__tree.415" }
%"class.std::__1::__tree.415" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.416", %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.425" = type { %"class.std::__1::__tree.426" }
%"class.std::__1::__tree.426" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.427", %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.434" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.458" = type { %"class.WTF::Vector.461" }
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { %"class.blink::Member.464"*, i32, i32 }
%"class.blink::Member.464" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.470", i32, i32 }
%"class.blink::HeapHashMap.470" = type { %"class.WTF::HashMap.473" }
%"class.WTF::HashMap.473" = type { %"class.WTF::HashTable.474" }
%"class.WTF::HashTable.474" = type <{ %"struct.WTF::KeyValuePair.476"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.476" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.540" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.541" }
%"class.blink::HeapHashMap.541" = type { %"class.WTF::HashMap.544" }
%"class.WTF::HashMap.544" = type { %"class.WTF::HashTable.545" }
%"class.WTF::HashTable.545" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::HeapVector.564", %"class.WTF::HashMap.572", %"class.blink::Member.577", %"class.blink::Member.579", %"class.blink::HeapHashMap.582", %"class.blink::Member.589" }
%"class.blink::HeapVector.564" = type { %"class.WTF::Vector.567" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { %"class.blink::Member.570"*, i32, i32 }
%"class.blink::Member.570" = type opaque
%"class.WTF::HashMap.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"struct.WTF::KeyValuePair.576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.576" = type opaque
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::HeapHashMap.581"* }
%"class.blink::HeapHashMap.581" = type opaque
%"class.blink::HeapHashMap.582" = type { %"class.WTF::HashMap.585" }
%"class.WTF::HashMap.585" = type { %"class.WTF::HashTable.586" }
%"class.WTF::HashTable.586" = type <{ %"struct.WTF::KeyValuePair.588"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.588" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::CustomElementReactionStack"* }
%"class.blink::CustomElementReactionStack" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.597 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.599", i64, %"class.WTF::Vector.603", %"class.WTF::Vector.608", %"class.WTF::Vector.614", %"class.WTF::Vector.632", %class.scoped_refptr.402, %"class.WTF::HashMap.638", %"class.WTF::Vector.643", %"class.WTF::Vector.603", %"class.WTF::Vector.649", %"class.WTF::HashMap.654", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.598" }
%"class.base::RefCountedThreadSafe.598" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610", [8 x i8] }
%"class.WTF::VectorBufferBase.610" = type { %class.scoped_refptr.611*, i32, i32 }
%class.scoped_refptr.611 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.614" = type { %"class.WTF::VectorBuffer.615" }
%"class.WTF::VectorBuffer.615" = type { %"class.WTF::VectorBufferBase.616" }
%"class.WTF::VectorBufferBase.616" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.618", %"class.std::__1::unique_ptr.624" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.617 }
%class.scoped_refptr.617 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.632" = type { %"class.WTF::VectorBuffer.633" }
%"class.WTF::VectorBuffer.633" = type { %"class.WTF::VectorBufferBase.634" }
%"class.WTF::VectorBufferBase.634" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.635", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.635" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ %"struct.WTF::KeyValuePair.642"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.642" = type opaque
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.mojo::ScopedHandleBase.646"*, i32, i32 }
%"class.mojo::ScopedHandleBase.646" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.603" = type { %"class.WTF::VectorBuffer.604" }
%"class.WTF::VectorBuffer.604" = type { %"class.WTF::VectorBufferBase.605", [16 x i8] }
%"class.WTF::VectorBufferBase.605" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.649" = type { %"class.WTF::VectorBuffer.650" }
%"class.WTF::VectorBuffer.650" = type { %"class.WTF::VectorBufferBase.651" }
%"class.WTF::VectorBufferBase.651" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.654" = type { %"class.WTF::HashTable.655" }
%"class.WTF::HashTable.655" = type <{ %"struct.WTF::KeyValuePair.658"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.658" = type { i8**, %"class.std::__1::unique_ptr.2130" }
%"class.std::__1::unique_ptr.2130" = type { %"class.std::__1::__compressed_pair.2131" }
%"class.std::__1::__compressed_pair.2131" = type { %"struct.std::__1::__compressed_pair_elem.2132" }
%"struct.std::__1::__compressed_pair_elem.2132" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.659" = type { %"class.WTF::HashSet.662" }
%"class.WTF::HashSet.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"class.blink::WeakMember.665"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.665" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.673", %"class.blink::Member.673", %"class.blink::Member.675", %"class.blink::Member.677", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.668" }
%"class.absl::optional.668" = type { %"class.absl::optional_internal::optional_data.669" }
%"class.absl::optional_internal::optional_data.669" = type { %"class.absl::optional_internal::optional_data_base.670" }
%"class.absl::optional_internal::optional_data_base.670" = type { %"class.absl::optional_internal::optional_data_dtor_base.671" }
%"class.absl::optional_internal::optional_data_dtor_base.671" = type { i8, %union.anon.672 }
%union.anon.672 = type { i64 }
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::Event"* }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.679" = type { %"class.WTF::HashMap.682" }
%"class.WTF::HashMap.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"struct.WTF::KeyValuePair.685"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.685" = type opaque
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.704", %"class.blink::CachedTextInputInfo", %"class.blink::Member.715", %"class.blink::Member.717", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.706", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.708", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.708" = type { %"class.WTF::HashMap.711" }
%"class.WTF::HashMap.711" = type { %"class.WTF::HashTable.712" }
%"class.WTF::HashTable.712" = type <{ %"struct.WTF::KeyValuePair.714"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.714" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.6", i32, i32 }
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.174", %"class.blink::Member.1213", %"class.blink::Member.1215" }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.174", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1209" }
%"class.blink::Member.1209" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::HeapHashMap.725"* }
%"class.blink::HeapHashMap.725" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.731" = type { %"class.WTF::HashTable.732" }
%"class.WTF::HashTable.732" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.737" }
%"class.WTF::VectorBuffer.737" = type { %"class.WTF::VectorBufferBase.738" }
%"class.WTF::VectorBufferBase.738" = type { i64*, i32, i32 }
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.379", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.456", i32, i8, [3 x i8], %"class.blink::HeapVector.458", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.477", %"class.blink::Member.536", %"class.blink::Member.538", i8, [7 x i8] }>
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.blink::KURL"* }
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type { %"class.blink::Node", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.763 }
%class.scoped_refptr.763 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.764" = type { %"class.WTF::VectorBuffer.765" }
%"class.WTF::VectorBuffer.765" = type { %"class.WTF::VectorBufferBase.766" }
%"class.WTF::VectorBufferBase.766" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.767 }
%class.scoped_refptr.767 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.768", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.768" = type { %"class.base::RefCounted.769" }
%"class.base::RefCounted.769" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.772" }
%"class.blink::HeapHashMap.772" = type { %"class.WTF::HashMap.775" }
%"class.WTF::HashMap.775" = type { %"class.WTF::HashTable.776" }
%"class.WTF::HashTable.776" = type <{ %"struct.WTF::KeyValuePair.778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.778" = type { %"class.blink::WeakMember.779", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.0", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.6", %"class.blink::Member.6", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.967" }
%"class.blink::HeapHashMap.967" = type { %"class.WTF::HashMap.970" }
%"class.WTF::HashMap.970" = type { %"class.WTF::HashTable.971" }
%"class.WTF::HashTable.971" = type <{ %"struct.WTF::KeyValuePair.973"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.973" = type opaque
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.976" = type { %"class.WTF::HashSet.979" }
%"class.WTF::HashSet.979" = type { %"class.WTF::HashTable.980" }
%"class.WTF::HashTable.980" = type <{ %"class.blink::WeakMember.982"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.982" = type opaque
%"class.blink::HeapHashSet.983" = type { %"class.WTF::HashSet.986" }
%"class.WTF::HashSet.986" = type { %"class.WTF::HashTable.987" }
%"class.WTF::HashTable.987" = type <{ %"class.blink::WeakMember.989"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.989" = type opaque
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.8", %"class.blink::HeapVector.116" }
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1000" = type { %"class.WTF::HashMap.1003" }
%"class.WTF::HashMap.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ %"struct.WTF::KeyValuePair.1006"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1006" = type opaque
%"class.WTF::Vector.1007" = type { %"class.WTF::VectorBuffer.1008" }
%"class.WTF::VectorBuffer.1008" = type { %"class.WTF::VectorBufferBase.1009" }
%"class.WTF::VectorBufferBase.1009" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member.0", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.1035", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.964, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::HeapHashSet.1035" = type { %"class.WTF::HashSet.1038" }
%"class.WTF::HashSet.1038" = type { %"class.WTF::HashTable.1039" }
%"class.WTF::HashTable.1039" = type <{ %"class.blink::Member.1026"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.1030", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1032", %"class.blink::WeakMember.966", %"class.blink::WeakMember.1034", i8, [7 x i8] }>
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.1" }
%"class.blink::WeakMember.1034" = type { %"class.blink::MemberBase.451" }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.1022" }
%"class.WTF::Deque.1022" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"class.blink::Member.1026"*, i32, i32 }
%"class.blink::HeapVector.1041" = type { %"class.WTF::Vector.1044" }
%"class.WTF::Vector.1044" = type { %"class.WTF::VectorBuffer.1045" }
%"class.WTF::VectorBuffer.1045" = type { %"class.WTF::VectorBufferBase.1046" }
%"class.WTF::VectorBufferBase.1046" = type { %"class.blink::Member.1030"*, i32, i32 }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1054" = type { %"class.WTF::HashSet.1057" }
%"class.WTF::HashSet.1057" = type { %"class.WTF::HashTable.1058" }
%"class.WTF::HashTable.1058" = type <{ %"class.blink::WeakMember.1060"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1060" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1061", i32, [4 x i8] }>
%"class.WTF::Vector.1061" = type { %"class.WTF::VectorBuffer.1062" }
%"class.WTF::VectorBuffer.1062" = type { %"class.WTF::VectorBufferBase.1063" }
%"class.WTF::VectorBufferBase.1063" = type { %"struct.std::__1::pair.1064"*, i32, i32 }
%"struct.std::__1::pair.1064" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1080" = type { %"class.WTF::Vector.1083" }
%"class.WTF::Vector.1083" = type { %"class.WTF::VectorBuffer.1084" }
%"class.WTF::VectorBuffer.1084" = type { %"class.WTF::VectorBufferBase.1085" }
%"class.WTF::VectorBufferBase.1085" = type { %"class.blink::Member.1086"*, i32, i32 }
%"class.blink::Member.1086" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.0" }
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::HeapHashSet.1111" = type { %"class.WTF::HashSet.1114" }
%"class.WTF::HashSet.1114" = type { %"class.WTF::HashTable.1115" }
%"class.WTF::HashTable.1115" = type <{ %"class.blink::Member.1117"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1117" = type opaque
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1134" = type { %"class.std::__1::__compressed_pair.1135" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728" }
%"class.WTF::VectorBufferBase.728" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1148" = type { %"class.WTF::HashMap.1151" }
%"class.WTF::HashMap.1151" = type { %"class.WTF::HashTable.1152" }
%"class.WTF::HashTable.1152" = type <{ %"struct.WTF::KeyValuePair.1154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1154" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1157" = type { %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1167" = type { %"class.WTF::HashMap.1170" }
%"class.WTF::HashMap.1170" = type { %"class.WTF::HashTable.1171" }
%"class.WTF::HashTable.1171" = type <{ %"struct.WTF::KeyValuePair.1173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1173" = type opaque
%"class.blink::HeapObserverSet.1174" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1175" }
%"class.blink::HeapHashSet.1175" = type { %"class.WTF::HashSet.1178" }
%"class.WTF::HashSet.1178" = type { %"class.WTF::HashTable.1179" }
%"class.WTF::HashTable.1179" = type <{ %"class.blink::WeakMember.1181"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1181" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.0", %"class.blink::HeapHashSet.1191", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1198", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1191" = type { %"class.WTF::HashSet.1194" }
%"class.WTF::HashSet.1194" = type { %"class.WTF::HashTable.1195" }
%"class.WTF::HashTable.1195" = type <{ %"class.blink::Member.1197"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1197" = type opaque
%"class.blink::HeapTaskRunnerTimer.1198" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1199", { i64, i64 } }
%"class.blink::WeakMember.1199" = type { %"class.blink::MemberBase.1185" }
%"class.blink::WeakMember.1186" = type { %"class.blink::MemberBase.7" }
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1968 }
%class.scoped_refptr.1968 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1969", %"class.WTF::String", %"class.std::__1::unique_ptr.1971" }
%"class.WTF::RefCounted.1969" = type { %"class.base::RefCounted.1970" }
%"class.base::RefCounted.1970" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1971" = type { %"class.std::__1::__compressed_pair.1972" }
%"class.std::__1::__compressed_pair.1972" = type { %"struct.std::__1::__compressed_pair_elem.1973" }
%"struct.std::__1::__compressed_pair_elem.1973" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1974", %"class.std::__1::unique_ptr.1984", %"class.WTF::Vector.1990", i8, i32 }
%"class.std::__1::unique_ptr.1974" = type { %"class.std::__1::__compressed_pair.1975" }
%"class.std::__1::__compressed_pair.1975" = type { %"struct.std::__1::__compressed_pair_elem.1976" }
%"struct.std::__1::__compressed_pair_elem.1976" = type { %"class.WTF::Vector.1977"* }
%"class.std::__1::unique_ptr.1984" = type { %"class.std::__1::__compressed_pair.1985" }
%"class.std::__1::__compressed_pair.1985" = type { %"struct.std::__1::__compressed_pair_elem.1986" }
%"struct.std::__1::__compressed_pair_elem.1986" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.blink::NonSharedCharacterBreakIterator" = type { i8, i8*, i32, i32, %"class.icu_69::BreakIterator"* }
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::AtomicHTMLToken" = type { i32, %"class.WTF::AtomicString", %"class.WTF::String", %"class.std::__1::unique_ptr.1997", i8, i8, %"class.WTF::Vector" }
%"class.std::__1::unique_ptr.1997" = type { %"class.std::__1::__compressed_pair.1998" }
%"class.std::__1::__compressed_pair.1998" = type { %"struct.std::__1::__compressed_pair_elem.1999" }
%"struct.std::__1::__compressed_pair_elem.1999" = type { %"class.blink::DoctypeData"* }
%"class.blink::DoctypeData" = type <{ i8, i8, [6 x i8], %"class.WTF::Vector.2000", %"class.WTF::Vector.2000", i8, [7 x i8] }>
%"class.WTF::Vector.2000" = type { %"class.WTF::VectorBuffer.2001" }
%"class.WTF::VectorBuffer.2001" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { i16*, i32, i32 }
%"class.blink::HTMLHtmlElement" = type { %"class.blink::HTMLElement" }
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.28", %"class.WTF::Vector.2262" }
%"class.WTF::Vector.2262" = type { %"class.WTF::VectorBuffer.2263" }
%"class.WTF::VectorBuffer.2263" = type { %"class.WTF::VectorBufferBase", [64 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HTMLTemplateElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.2007", i32, [4 x i8] }>
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::TemplateContentDocumentFragment"* }
%"class.blink::TemplateContentDocumentFragment" = type { %"class.blink::DocumentFragment", %"class.blink::Member.60" }
%"class.blink::Comment" = type { %"class.blink::CharacterData" }
%"class.blink::CustomElementDefinition" = type { %"class.blink::NameClient", %"class.blink::CustomElementDescriptor", %"class.blink::HeapVector.2119", %"class.WTF::HashSet.140", i8, i8, i8, i8, i8, %"class.blink::HeapVector.116" }
%"class.blink::CustomElementDescriptor" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HeapVector.2119" = type { %"class.WTF::Vector.2122" }
%"class.WTF::Vector.2122" = type { %"class.WTF::VectorBuffer.2123" }
%"class.WTF::VectorBuffer.2123" = type { %"class.WTF::VectorBufferBase.106", [8 x i8] }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::HTMLScriptElement" = type { %"class.blink::HTMLElement", %"class.blink::ScriptElementBase", %"class.blink::ParkableString", i8, %"class.blink::Member.2009" }
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::ScriptLoader"* }
%"class.blink::ScriptLoader" = type { %"class.blink::PendingScriptClient", %"class.blink::NameClient", %"class.blink::Member.1030", i8, %"class.blink::WeakMember.966", i8, i8, i8, i8, i32, i8, i8, i8, %"class.blink::Member.1026", %"class.blink::Member.1026", %"class.blink::Member.2013" }
%"class.blink::Member.2013" = type { %"class.blink::MemberBase.2014" }
%"class.blink::MemberBase.2014" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.2017", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.2037", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.2089", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.2106", %"class.blink::ResourceResponse", %class.scoped_refptr.1911, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.2017" = type { %"class.absl::optional_internal::optional_data.2018" }
%"class.absl::optional_internal::optional_data.2018" = type { %"class.absl::optional_internal::optional_data_base.2019" }
%"class.absl::optional_internal::optional_data_base.2019" = type { %"class.absl::optional_internal::optional_data_dtor_base.2020" }
%"class.absl::optional_internal::optional_data_dtor_base.2020" = type { i8, %union.anon.2021 }
%union.anon.2021 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2022", i8, %"class.absl::optional.2027", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.2022" = type { %"class.absl::optional_internal::optional_data.2023" }
%"class.absl::optional_internal::optional_data.2023" = type { %"class.absl::optional_internal::optional_data_base.2024" }
%"class.absl::optional_internal::optional_data_base.2024" = type { %"class.absl::optional_internal::optional_data_dtor_base.2025" }
%"class.absl::optional_internal::optional_data_dtor_base.2025" = type { i8, [7 x i8], %union.anon.2026 }
%union.anon.2026 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.2027" = type { %"class.absl::optional_internal::optional_data.2028" }
%"class.absl::optional_internal::optional_data.2028" = type { %"class.absl::optional_internal::optional_data_base.2029" }
%"class.absl::optional_internal::optional_data_base.2029" = type { %"class.absl::optional_internal::optional_data_dtor_base.2030" }
%"class.absl::optional_internal::optional_data_dtor_base.2030" = type { i8, %union.anon.2031 }
%union.anon.2031 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.2032", %"class.WTF::Vector.507" }
%"class.WTF::Vector.2032" = type { %"class.WTF::VectorBuffer.2033" }
%"class.WTF::VectorBuffer.2033" = type { %"class.WTF::VectorBufferBase.2034" }
%"class.WTF::VectorBufferBase.2034" = type { i32*, i32, i32 }
%"class.WTF::Vector.2037" = type { %"class.WTF::VectorBuffer.2038" }
%"class.WTF::VectorBuffer.2038" = type { %"class.WTF::VectorBufferBase.2039" }
%"class.WTF::VectorBufferBase.2039" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2085" }
%"class.WTF::HashMap.2085" = type { %"class.WTF::HashTable.2086" }
%"class.WTF::HashTable.2086" = type <{ %"struct.WTF::KeyValuePair.2088"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2088" = type <{ %"class.blink::WeakMember.2211", i32, [4 x i8] }>
%"class.blink::WeakMember.2211" = type { %"class.blink::MemberBase.2212" }
%"class.blink::MemberBase.2212" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.2089" = type { %"class.WTF::HashSet.2092" }
%"class.WTF::HashSet.2092" = type { %"class.WTF::HashTable.2093" }
%"class.WTF::HashTable.2093" = type <{ %"class.blink::WeakMember.2095"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2095" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.2096", %"class.WTF::String", %"class.WTF::HashSet.2097", i8, i8, %class.scoped_refptr.767, %class.scoped_refptr.2102, %class.scoped_refptr.2104 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.2096" = type { i8 }
%"class.WTF::HashSet.2097" = type { %"class.WTF::HashTable.2098" }
%"class.WTF::HashTable.2098" = type <{ %"struct.std::__1::pair.2101"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.2101" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.2102 = type { %"class.base::RefCountedData.2103"* }
%"class.base::RefCountedData.2103" = type opaque
%class.scoped_refptr.2104 = type { %"class.base::RefCountedData.2105"* }
%"class.base::RefCountedData.2105" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.410, %class.scoped_refptr.410, %class.scoped_refptr.410, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2040, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.2053", %"class.absl::optional.2058", %"class.absl::optional.2068", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1246", %"class.absl::optional.2068", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.2068", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1246", %"class.absl::optional.2073", i8, %class.scoped_refptr.2079 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.2040 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2041", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.2042", %class.scoped_refptr.2051, i8, %"class.url::Origin" }
%"class.base::RefCounted.2041" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.2042" = type { %"class.std::__1::vector.2043" }
%"class.std::__1::vector.2043" = type { %"class.std::__1::__vector_base.2044" }
%"class.std::__1::__vector_base.2044" = type { %"class.std::__1::unique_ptr.2045"*, %"class.std::__1::unique_ptr.2045"*, %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2197" }
%"class.std::__1::__compressed_pair.2197" = type { %"struct.std::__1::__compressed_pair_elem.2198" }
%"struct.std::__1::__compressed_pair_elem.2198" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.std::__1::unique_ptr.2045"* }
%class.scoped_refptr.2051 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2052", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2052" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.2053" = type { %"class.absl::optional_internal::optional_data.2054" }
%"class.absl::optional_internal::optional_data.2054" = type { %"class.absl::optional_internal::optional_data_base.2055" }
%"class.absl::optional_internal::optional_data_base.2055" = type { %"class.absl::optional_internal::optional_data_dtor_base.2056" }
%"class.absl::optional_internal::optional_data_dtor_base.2056" = type { i8, %union.anon.2057 }
%union.anon.2057 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.2058" = type { %"class.absl::optional_internal::optional_data.2059" }
%"class.absl::optional_internal::optional_data.2059" = type { %"class.absl::optional_internal::optional_data_base.2060" }
%"class.absl::optional_internal::optional_data_base.2060" = type { %"class.absl::optional_internal::optional_data_dtor_base.2061" }
%"class.absl::optional_internal::optional_data_dtor_base.2061" = type { i8, %union.anon.2062 }
%union.anon.2062 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2063", %"class.WTF::Vector.507", %"class.WTF::String" }
%"class.WTF::Vector.2063" = type { %"class.WTF::VectorBuffer.2064" }
%"class.WTF::VectorBuffer.2064" = type { %"class.WTF::VectorBufferBase.2065" }
%"class.WTF::VectorBufferBase.2065" = type { %class.scoped_refptr.410*, i32, i32 }
%"class.absl::optional.2068" = type { %"class.absl::optional_internal::optional_data.2069" }
%"class.absl::optional_internal::optional_data.2069" = type { %"class.absl::optional_internal::optional_data_base.2070" }
%"class.absl::optional_internal::optional_data_base.2070" = type { %"class.absl::optional_internal::optional_data_dtor_base.2071" }
%"class.absl::optional_internal::optional_data_dtor_base.2071" = type { i8, %union.anon.2072 }
%union.anon.2072 = type { %"class.WTF::String" }
%"class.absl::optional.2073" = type { %"class.absl::optional_internal::optional_data.2074" }
%"class.absl::optional_internal::optional_data.2074" = type { %"class.absl::optional_internal::optional_data_base.2075" }
%"class.absl::optional_internal::optional_data_base.2075" = type { %"class.absl::optional_internal::optional_data_dtor_base.2076" }
%"class.absl::optional_internal::optional_data_dtor_base.2076" = type { i8, %union.anon.2077 }
%union.anon.2077 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.2078" }
%"class.mojo::PendingRemote.2078" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.2079 = type { %"class.base::RefCountedData.2080"* }
%"class.base::RefCountedData.2080" = type { %"class.base::RefCountedThreadSafe.2202", %"class.base::internal::flat_tree.2203" }
%"class.base::RefCountedThreadSafe.2202" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2203" = type { %"class.std::__1::vector.2204" }
%"class.std::__1::vector.2204" = type { %"class.std::__1::__vector_base.2205" }
%"class.std::__1::__vector_base.2205" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2206" }
%"class.std::__1::__compressed_pair.2206" = type { %"struct.std::__1::__compressed_pair_elem.2207" }
%"struct.std::__1::__compressed_pair_elem.2207" = type { i32* }
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.2108" }
%"class.std::__1::__tree.2108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2109", %"class.std::__1::__compressed_pair.2113" }
%"class.std::__1::__compressed_pair.2109" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.2113" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink20HTMLConstructionSite11PendingText4SwapERS1_ = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink15AtomicHTMLTokenD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink25HTMLFormattingElementList5EntryELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_ = comdat any

$_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_24HTMLConstructionSiteTaskEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink13HeapAllocator16NotifyNewObjectsINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_m = comdat any

$_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_ = comdat any

$_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_25HTMLFormattingElementList5EntryEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES3_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN3WTF8internal17DeferredTraceImplIN5blink13HeapAllocatorEPNS2_7VisitorENS2_24HTMLConstructionSiteTaskELj1EEEvT0_PKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHtmlElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_15HTMLHtmlElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13HTMLStackItemEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13HTMLStackItemEE7GetNameEPKv = comdat any

$_ZN5blink13HTMLStackItemD2Ev = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DocumentTypeEE4CallIJRNS_6MemberINS_8DocumentEEERKN3WTF12AtomicStringERKNS8_6StringESE_EEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJPNS_7ElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_15HTMLFormElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_19HTMLTemplateElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLScriptElementEE4CallIJRNS_8DocumentERNS_18CreateElementFlagsEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_17HTMLScriptElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementERPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringEEEEPS1_DpOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names7kIsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str = private unnamed_addr constant [5 x i8] c"html\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"+//Silmaril//dtd html Pro v0r11 19970101//\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"-//AdvaSoft Ltd//DTD HTML 3.0 asWedit + extensions//\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"-//AS//DTD HTML 3.0 asWedit + extensions//\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"-//IETF//DTD HTML 2.0 Level 1//\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"-//IETF//DTD HTML 2.0 Level 2//\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"-//IETF//DTD HTML 2.0 Strict Level 1//\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"-//IETF//DTD HTML 2.0 Strict Level 2//\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"-//IETF//DTD HTML 2.0 Strict//\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"-//IETF//DTD HTML 2.0//\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"-//IETF//DTD HTML 2.1E//\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"-//IETF//DTD HTML 3.0//\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"-//IETF//DTD HTML 3.2 Final//\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"-//IETF//DTD HTML 3.2//\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"-//IETF//DTD HTML 3//\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"-//IETF//DTD HTML Level 0//\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"-//IETF//DTD HTML Level 1//\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"-//IETF//DTD HTML Level 2//\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"-//IETF//DTD HTML Level 3//\00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"-//IETF//DTD HTML Strict Level 0//\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"-//IETF//DTD HTML Strict Level 1//\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"-//IETF//DTD HTML Strict Level 2//\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"-//IETF//DTD HTML Strict Level 3//\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"-//IETF//DTD HTML Strict//\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"-//IETF//DTD HTML//\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c"-//Metrius//DTD Metrius Presentational//\00", align 1
@.str.26 = private unnamed_addr constant [54 x i8] c"-//Microsoft//DTD Internet Explorer 2.0 HTML Strict//\00", align 1
@.str.27 = private unnamed_addr constant [47 x i8] c"-//Microsoft//DTD Internet Explorer 2.0 HTML//\00", align 1
@.str.28 = private unnamed_addr constant [49 x i8] c"-//Microsoft//DTD Internet Explorer 2.0 Tables//\00", align 1
@.str.29 = private unnamed_addr constant [54 x i8] c"-//Microsoft//DTD Internet Explorer 3.0 HTML Strict//\00", align 1
@.str.30 = private unnamed_addr constant [47 x i8] c"-//Microsoft//DTD Internet Explorer 3.0 HTML//\00", align 1
@.str.31 = private unnamed_addr constant [49 x i8] c"-//Microsoft//DTD Internet Explorer 3.0 Tables//\00", align 1
@.str.32 = private unnamed_addr constant [36 x i8] c"-//Netscape Comm. Corp.//DTD HTML//\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"-//Netscape Comm. Corp.//DTD Strict HTML//\00", align 1
@.str.34 = private unnamed_addr constant [43 x i8] c"-//O'Reilly and Associates//DTD HTML 2.0//\00", align 1
@.str.35 = private unnamed_addr constant [52 x i8] c"-//O'Reilly and Associates//DTD HTML Extended 1.0//\00", align 1
@.str.36 = private unnamed_addr constant [60 x i8] c"-//O'Reilly and Associates//DTD HTML Extended Relaxed 1.0//\00", align 1
@.str.37 = private unnamed_addr constant [79 x i8] c"-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//\00", align 1
@.str.38 = private unnamed_addr constant [70 x i8] c"-//SoftQuad//DTD HoTMetaL PRO 4.0::19971010::extensions to HTML 4.0//\00", align 1
@.str.39 = private unnamed_addr constant [37 x i8] c"-//Spyglass//DTD HTML 2.0 Extended//\00", align 1
@.str.40 = private unnamed_addr constant [44 x i8] c"-//SQ//DTD HTML 2.0 HoTMetaL + extensions//\00", align 1
@.str.41 = private unnamed_addr constant [46 x i8] c"-//Sun Microsystems Corp.//DTD HotJava HTML//\00", align 1
@.str.42 = private unnamed_addr constant [53 x i8] c"-//Sun Microsystems Corp.//DTD HotJava Strict HTML//\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"-//W3C//DTD HTML 3 1995-03-24//\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"-//W3C//DTD HTML 3.2 Draft//\00", align 1
@.str.45 = private unnamed_addr constant [29 x i8] c"-//W3C//DTD HTML 3.2 Final//\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"-//W3C//DTD HTML 3.2//\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"-//W3C//DTD HTML 3.2S Draft//\00", align 1
@.str.48 = private unnamed_addr constant [32 x i8] c"-//W3C//DTD HTML 4.0 Frameset//\00", align 1
@.str.49 = private unnamed_addr constant [36 x i8] c"-//W3C//DTD HTML 4.0 Transitional//\00", align 1
@.str.50 = private unnamed_addr constant [41 x i8] c"-//W3C//DTD HTML Experimental 19960712//\00", align 1
@.str.51 = private unnamed_addr constant [39 x i8] c"-//W3C//DTD HTML Experimental 970421//\00", align 1
@.str.52 = private unnamed_addr constant [22 x i8] c"-//W3C//DTD W3 HTML//\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"-//W3O//DTD W3 HTML 3.0//\00", align 1
@.str.54 = private unnamed_addr constant [37 x i8] c"-//W3O//DTD W3 HTML Strict 3.0//EN//\00", align 1
@.str.55 = private unnamed_addr constant [36 x i8] c"-//WebTechs//DTD Mozilla HTML 2.0//\00", align 1
@.str.56 = private unnamed_addr constant [32 x i8] c"-//WebTechs//DTD Mozilla HTML//\00", align 1
@.str.57 = private unnamed_addr constant [35 x i8] c"-/W3C/DTD HTML 4.0 Transitional/EN\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"HTML\00", align 1
@.str.59 = private unnamed_addr constant [59 x i8] c"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\00", align 1
@.str.60 = private unnamed_addr constant [33 x i8] c"-//W3C//DTD HTML 4.01 Frameset//\00", align 1
@.str.61 = private unnamed_addr constant [37 x i8] c"-//W3C//DTD HTML 4.01 Transitional//\00", align 1
@.str.62 = private unnamed_addr constant [33 x i8] c"-//W3C//DTD XHTML 1.0 Frameset//\00", align 1
@.str.63 = private unnamed_addr constant [37 x i8] c"-//W3C//DTD XHTML 1.0 Transitional//\00", align 1
@_ZN5blink10html_names17xhtmlNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kTemplateTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.64 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.65 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTfootTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTheadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@.str.66 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.67 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Attribute]\00", align 1
@_ZN5blink10html_names6kDdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kLiTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kPTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kRbTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kRpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kRtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kRTCTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.68 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.69 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.70 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.72 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.73 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.74 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.75 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_24HTMLConstructionSiteTaskENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [158 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::HTMLConstructionSiteTask, WTF::VectorTraits<blink::HTMLConstructionSiteTask> >]\00", align 1
@_ZN5blink10html_names8kFormTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13HTMLStackItemEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLStackItem]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13HTMLStackItemEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13HTMLStackItemEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink20HTMLConstructionSiteC1EPNS_23HTMLParserReentryPermitERNS_8DocumentENS_19ParserContentPolicyE = hidden unnamed_addr alias void (%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLParserReentryPermit"*, %"class.blink::Document"*, i32), void (%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLParserReentryPermit"*, %"class.blink::Document"*, i32)* @_ZN5blink20HTMLConstructionSiteC2EPNS_23HTMLParserReentryPermitERNS_8DocumentENS_19ParserContentPolicyE
@_ZN5blink20HTMLConstructionSiteD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLConstructionSite"*), void (%"class.blink::HTMLConstructionSite"*)* @_ZN5blink20HTMLConstructionSiteD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite11ExecuteTaskERNS_24HTMLConstructionSiteTaskE(%"class.blink::HTMLConstructionSite"* nocapture readnone, %"struct.blink::HTMLConstructionSiteTask"* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %184 [
    i32 0, label %5
    i32 1, label %27
    i32 2, label %172
    i32 3, label %173
    i32 4, label %178
  ]

5:                                                ; preds = %2
  tail call fastcc void @_ZN5blinkL6InsertERNS_24HTMLConstructionSiteTaskE(%"struct.blink::HTMLConstructionSiteTask"* dereferenceable(40) %1) #10
  %6 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %184, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  %14 = bitcast %"class.blink::Node"* %7 to %"class.blink::Element"*
  br i1 %13, label %15, label %184

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::Node"* %7 to void (%"class.blink::Element"*)***
  %17 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %17, i64 112
  %19 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %18, align 8
  tail call void %19(%"class.blink::Element"* nonnull %14) #10
  %20 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 5
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %184, label %23

23:                                               ; preds = %15
  %24 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %16, align 8
  %25 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %24, i64 111
  %26 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %25, align 8
  tail call void %26(%"class.blink::Element"* nonnull %14) #10
  br label %184

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 4, i32 0, i32 0
  %29 = bitcast %"class.blink::Node"** %28 to %"class.blink::Text"**
  %30 = load %"class.blink::Text"*, %"class.blink::Text"** %29, align 8
  %31 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 4, i32 0, i32 0
  br label %40

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %38, i64 0, i32 2, i32 0, i32 0
  br label %40

40:                                               ; preds = %36, %34
  %41 = phi %"class.blink::Node"** [ %35, %34 ], [ %39, %36 ]
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %171, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 12
  %48 = icmp eq i32 %47, 4
  br i1 %48, label %49, label %171

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %51, i64 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 48
  %55 = icmp ne i32 %54, 0
  %56 = icmp eq %"class.blink::ContainerNode"* %51, null
  %57 = or i1 %56, %55
  br i1 %57, label %78, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %51, i64 0, i32 0
  %60 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 1, i32 2
  %64 = bitcast %"class.blink::Member.6"* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %67, %69
  br i1 %70, label %95, label %71

71:                                               ; preds = %58
  %72 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %73 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %67, %76
  br i1 %77, label %95, label %94

78:                                               ; preds = %49
  %79 = icmp ne i32 %54, 32
  %80 = or i1 %56, %79
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %51, i64 0, i32 0
  %83 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kScriptTagE, align 8
  %84 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 1, i32 2
  %87 = bitcast %"class.blink::Member.6"* %86 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %90, %92
  br i1 %93, label %95, label %94

94:                                               ; preds = %81, %78, %71
  br label %95

95:                                               ; preds = %94, %81, %71, %58
  %96 = phi i32 [ 65536, %94 ], [ -1, %81 ], [ -1, %71 ], [ -1, %58 ]
  %97 = bitcast %"class.blink::Node"* %42 to %"class.blink::CharacterData"*
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1
  %99 = bitcast %"class.blink::Node"* %98 to i8*
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %121, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1, i32 0, i32 0, i32 1
  %104 = bitcast %"class.blink::TraceWrapperV8Reference"* %103 to %"class.blink::ParkableStringImpl"**
  %105 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %104, align 8
  %106 = icmp eq %"class.blink::ParkableStringImpl"* %105, null
  br i1 %106, label %129, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0
  %109 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %108, align 8
  %110 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %109, null
  br i1 %110, label %111, label %118

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %105, i64 0, i32 1, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %129, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  br label %129

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %109, i64 0, i32 8
  %120 = load i32, i32* %119, align 4
  br label %129

121:                                              ; preds = %95
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1, i32 1
  %123 = bitcast i32* %122 to %"class.WTF::StringImpl"**
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  br label %129

129:                                              ; preds = %126, %121, %118, %115, %111, %102
  %130 = phi i32 [ 0, %102 ], [ %120, %118 ], [ %117, %115 ], [ 0, %111 ], [ %128, %126 ], [ 0, %121 ]
  %131 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %30, i64 0, i32 0, i32 1
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %152, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %30, i64 0, i32 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %135, align 8
  %137 = icmp eq %"class.blink::ParkableStringImpl"* %136, null
  br i1 %137, label %159, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0
  %140 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %139, align 8
  %141 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %140, null
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %136, i64 0, i32 1, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  br label %159

149:                                              ; preds = %138
  %150 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %140, i64 0, i32 8
  %151 = load i32, i32* %150, align 4
  br label %159

152:                                              ; preds = %129
  %153 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %30, i64 0, i32 0, i32 3, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  br label %159

159:                                              ; preds = %156, %152, %149, %146, %142, %134
  %160 = phi i32 [ 0, %134 ], [ %151, %149 ], [ %148, %146 ], [ 0, %142 ], [ %158, %156 ], [ 0, %152 ]
  %161 = add i32 %160, %130
  %162 = icmp ult i32 %161, %96
  br i1 %162, label %163, label %171

163:                                              ; preds = %159
  br i1 %133, label %167, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %30, i64 0, i32 0, i32 2
  %166 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %165) #10
  br label %169

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %30, i64 0, i32 0, i32 3
  br label %169

169:                                              ; preds = %167, %164
  %170 = phi %"class.WTF::String"* [ %166, %164 ], [ %168, %167 ]
  tail call void @_ZN5blink13CharacterData16ParserAppendDataERKN3WTF6StringE(%"class.blink::CharacterData"* nonnull %97, %"class.WTF::String"* dereferenceable(8) %170) #10
  br label %184

171:                                              ; preds = %159, %44, %40
  tail call fastcc void @_ZN5blinkL6InsertERNS_24HTMLConstructionSiteTaskE(%"struct.blink::HTMLConstructionSiteTask"* dereferenceable(40) %1) #10
  br label %184

172:                                              ; preds = %2
  tail call fastcc void @_ZN5blinkL6InsertERNS_24HTMLConstructionSiteTaskE(%"struct.blink::HTMLConstructionSiteTask"* dereferenceable(40) %1) #10
  br label %184

173:                                              ; preds = %2
  %174 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2, i32 0, i32 0
  %175 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %174, align 8
  %176 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 4, i32 0, i32 0
  %177 = load %"class.blink::Node"*, %"class.blink::Node"** %176, align 8
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %175, %"class.blink::Node"* %177) #10
  br label %184

178:                                              ; preds = %2
  %179 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2, i32 0, i32 0
  %180 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %179, align 8
  %181 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 4, i32 0, i32 0
  %182 = bitcast %"class.blink::Node"** %181 to %"class.blink::ContainerNode"**
  %183 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %182, align 8
  tail call void @_ZN5blink13ContainerNode25ParserTakeAllChildrenFromERS0_(%"class.blink::ContainerNode"* %180, %"class.blink::ContainerNode"* dereferenceable(80) %183) #10
  br label %184

184:                                              ; preds = %171, %169, %23, %15, %9, %5, %2, %172, %173, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NonSharedCharacterBreakIterator", align 8
  %4 = alloca %"class.blink::HTMLConstructionSite::PendingText", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %394, label %11

11:                                               ; preds = %2
  %12 = icmp eq i32 %1, 1
  br i1 %12, label %13, label %58

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %7, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 48
  %19 = icmp ne i32 %18, 0
  %20 = icmp eq %"class.blink::ContainerNode"* %15, null
  %21 = or i1 %20, %19
  br i1 %21, label %42, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0
  %24 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1, i32 2
  %28 = bitcast %"class.blink::Member.6"* %27 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %31, %33
  br i1 %34, label %394, label %35

35:                                               ; preds = %22
  %36 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %31, %40
  br i1 %41, label %394, label %58

42:                                               ; preds = %13
  %43 = icmp ne i32 %18, 32
  %44 = or i1 %20, %43
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0
  %47 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kScriptTagE, align 8
  %48 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %46, i64 1, i32 2
  %51 = bitcast %"class.blink::Member.6"* %50 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %54, %56
  br i1 %57, label %394, label %58

58:                                               ; preds = %45, %35, %42, %11
  %59 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 72, i1 false)
  %60 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %4, i64 0, i32 2, i32 2
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %4, i64 0, i32 2, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 25, i1 false) #10
  store i8 1, i8* %61, align 4
  %62 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %4, i64 0, i32 2, i32 4
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %4, i64 0, i32 3
  store i32 0, i32* %63, align 8
  call void @_ZN5blink20HTMLConstructionSite11PendingText4SwapERS1_(%"class.blink::HTMLConstructionSite::PendingText"* %7, %"class.blink::HTMLConstructionSite::PendingText"* nonnull dereferenceable(72) %4)
  %64 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %65, i64 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 48
  %69 = icmp ne i32 %68, 0
  %70 = icmp eq %"class.blink::ContainerNode"* %65, null
  %71 = or i1 %70, %69
  br i1 %71, label %92, label %72

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %65, i64 0, i32 0
  %74 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE, align 8
  %75 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 1, i32 2
  %78 = bitcast %"class.blink::Member.6"* %77 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %81, %83
  br i1 %84, label %109, label %85

85:                                               ; preds = %72
  %86 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %87 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %81, %90
  br i1 %91, label %109, label %108

92:                                               ; preds = %58
  %93 = icmp ne i32 %68, 32
  %94 = or i1 %70, %93
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %65, i64 0, i32 0
  %97 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kScriptTagE, align 8
  %98 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 1, i32 2
  %101 = bitcast %"class.blink::Member.6"* %100 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 3, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %104, %106
  br i1 %107, label %109, label %108

108:                                              ; preds = %95, %92, %85
  br label %109

109:                                              ; preds = %72, %85, %95, %108
  %110 = phi i32 [ 65536, %108 ], [ -1, %95 ], [ -1, %85 ], [ -1, %72 ]
  %111 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %4, i64 0, i32 2
  %112 = load i32, i32* %60, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %376, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %111, i64 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %4, i64 0, i32 2, i32 1
  %117 = bitcast %union.anon* %116 to i16**
  %118 = getelementptr inbounds %"class.blink::NonSharedCharacterBreakIterator", %"class.blink::NonSharedCharacterBreakIterator"* %3, i64 0, i32 0
  %119 = bitcast %"class.WTF::String"* %5 to i8*
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %121 = bitcast %"class.WTF::String"* %5 to i64*
  %122 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %6 to i8*
  %123 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %6, i64 0, i32 0
  %124 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %6, i64 0, i32 2, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %6, i64 0, i32 2
  %126 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %4 to i64*
  %127 = bitcast %"class.blink::Member.2"* %125 to i64*
  %128 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %4, i64 0, i32 1
  %129 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %6, i64 0, i32 3
  %130 = bitcast %"class.blink::Member.6"* %128 to i64*
  %131 = bitcast %"class.blink::Member.6"* %129 to i64*
  %132 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %125, i64 0, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %6, i64 0, i32 4
  %134 = bitcast %"class.blink::Member.6"* %133 to i64*
  %135 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %136 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %137 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %135, i64 0, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %6, i64 0, i32 5
  %140 = getelementptr inbounds %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %124, i64 1
  %141 = bitcast %"class.blink::ContainerNode"** %140 to i8*
  br label %142

142:                                              ; preds = %114, %373
  %143 = phi i32 [ %112, %114 ], [ %374, %373 ]
  %144 = phi i32 [ 0, %114 ], [ %175, %373 ]
  %145 = add i32 %144, %110
  %146 = icmp ult i32 %143, %145
  %147 = select i1 %146, i32 %143, i32 %145
  %148 = icmp ugt i32 %143, %145
  %149 = load i8, i8* %61, align 4
  %150 = icmp eq i8 %149, 0
  %151 = and i1 %148, %150
  br i1 %151, label %152, label %174

152:                                              ; preds = %142
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  %155 = load i16*, i16** %117, align 8
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 1
  %157 = bitcast %"class.WTF::StringImpl"* %156 to i16*
  %158 = select i1 %154, i16* %155, i16* %157
  %159 = zext i32 %144 to i64
  %160 = getelementptr inbounds i16, i16* %158, i64 %159
  %161 = sub i32 %147, %144
  %162 = add i32 %161, 2
  %163 = sub i32 %143, %144
  %164 = icmp ult i32 %163, %162
  %165 = select i1 %164, i32 %163, i32 %162
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 32, i1 false) #10
  call void @_ZN5blink31NonSharedCharacterBreakIteratorC1EPKDsj(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3, i16* %160, i32 %165) #10
  %166 = call zeroext i1 @_ZNK5blink31NonSharedCharacterBreakIterator7IsBreakEi(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3, i32 %161) #10
  br i1 %166, label %172, label %167

167:                                              ; preds = %152
  %168 = call i32 @_ZNK5blink31NonSharedCharacterBreakIterator9PrecedingEi(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3, i32 %161) #10
  %169 = icmp sgt i32 %168, 0
  %170 = add i32 %168, %144
  %171 = select i1 %169, i32 %170, i32 0
  br label %172

172:                                              ; preds = %167, %152
  %173 = phi i32 [ %147, %152 ], [ %171, %167 ]
  call void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #10
  br label %174

174:                                              ; preds = %142, %172
  %175 = phi i32 [ %173, %172 ], [ %147, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %120, align 8
  %176 = sub i32 %175, %144
  %177 = call %"class.WTF::StringImpl"* @_ZNK3WTF13StringBuilder9SubstringEjj(%"class.WTF::StringBuilder"* %111, i32 %144, i32 %176) #10
  store %"class.WTF::StringImpl"* %177, %"class.WTF::StringImpl"** %120, align 8
  %178 = load i32, i32* %63, align 8
  switch i32 %178, label %269 [
    i32 2, label %214
    i32 0, label %179
  ]

179:                                              ; preds = %174
  %180 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  store i64 0, i64* %121, align 8
  br label %306

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 1
  %186 = bitcast %"class.WTF::StringImpl"* %185 to i8*
  %187 = zext i32 %184 to i64
  %188 = icmp eq i32 %184, 0
  br i1 %188, label %216, label %189

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %203, label %194

194:                                              ; preds = %189, %200
  %195 = phi i64 [ %201, %200 ], [ 0, %189 ]
  %196 = getelementptr inbounds i8, i8* %186, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = icmp ult i8 %197, 33
  br i1 %198, label %199, label %269

199:                                              ; preds = %194
  switch i8 %197, label %269 [
    i8 32, label %200
    i8 10, label %200
    i8 9, label %200
    i8 13, label %200
    i8 12, label %200
  ]

200:                                              ; preds = %199, %199, %199, %199, %199
  %201 = add nuw nsw i64 %195, 1
  %202 = icmp eq i64 %201, %187
  br i1 %202, label %214, label %194

203:                                              ; preds = %189
  %204 = bitcast %"class.WTF::StringImpl"* %185 to i16*
  br label %205

205:                                              ; preds = %211, %203
  %206 = phi i64 [ %212, %211 ], [ 0, %203 ]
  %207 = getelementptr inbounds i16, i16* %204, i64 %206
  %208 = load i16, i16* %207, align 2
  %209 = icmp ult i16 %208, 33
  br i1 %209, label %210, label %269

210:                                              ; preds = %205
  switch i16 %208, label %269 [
    i16 32, label %211
    i16 10, label %211
    i16 9, label %211
    i16 13, label %211
    i16 12, label %211
  ]

211:                                              ; preds = %210, %210, %210, %210, %210
  %212 = add nuw nsw i64 %206, 1
  %213 = icmp eq i64 %212, %187
  br i1 %213, label %214, label %205

214:                                              ; preds = %200, %211, %174
  %215 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %215, label %288, label %216

216:                                              ; preds = %214, %182
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 acquire, align 4
  %219 = and i32 %218, 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %237, label %221

221:                                              ; preds = %216
  %222 = load atomic i32, i32* %217 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %240

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = zext i32 %227 to i33
  %229 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %228, i33 1) #10
  %230 = extractvalue { i33, i1 } %229, 1
  %231 = extractvalue { i33, i1 } %229, 0
  %232 = icmp slt i33 %231, 0
  %233 = or i1 %230, %232
  br i1 %233, label %234, label %235, !prof !3

234:                                              ; preds = %225
  call void @llvm.trap() #10
  unreachable

235:                                              ; preds = %225
  %236 = trunc i33 %231 to i32
  store i32 %236, i32* %226, align 4
  br label %240

237:                                              ; preds = %216
  %238 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %177) #10
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %288, label %240

240:                                              ; preds = %237, %235, %221
  %241 = phi %"class.WTF::StringImpl"* [ %238, %237 ], [ %177, %221 ], [ %177, %235 ]
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %258

248:                                              ; preds = %240
  %249 = zext i32 %247 to i33
  %250 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %249, i33 1) #10
  %251 = extractvalue { i33, i1 } %250, 1
  %252 = extractvalue { i33, i1 } %250, 0
  %253 = icmp slt i33 %252, 0
  %254 = or i1 %251, %253
  br i1 %254, label %255, label %256, !prof !3

255:                                              ; preds = %248
  call void @llvm.trap() #10
  unreachable

256:                                              ; preds = %248
  %257 = trunc i33 %252 to i32
  store i32 %257, i32* %246, align 4
  br label %258

258:                                              ; preds = %256, %240
  %259 = phi i32 [ %257, %256 ], [ %247, %240 ]
  %260 = load atomic i32, i32* %242 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %265

263:                                              ; preds = %258
  %264 = add i32 %259, -1
  store i32 %264, i32* %246, align 4
  br label %265

265:                                              ; preds = %263, %258
  %266 = phi i32 [ %264, %263 ], [ %259, %258 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %288

268:                                              ; preds = %265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %241) #10
  br label %288

269:                                              ; preds = %199, %194, %210, %205, %174
  %270 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %270, label %288, label %271

271:                                              ; preds = %269
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %271
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = zext i32 %278 to i33
  %280 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %279, i33 1) #10
  %281 = extractvalue { i33, i1 } %280, 1
  %282 = extractvalue { i33, i1 } %280, 0
  %283 = icmp slt i33 %282, 0
  %284 = or i1 %281, %283
  br i1 %284, label %285, label %286, !prof !3

285:                                              ; preds = %276
  call void @llvm.trap() #10
  unreachable

286:                                              ; preds = %276
  %287 = trunc i33 %282 to i32
  store i32 %287, i32* %277, align 4
  br label %288

288:                                              ; preds = %214, %237, %265, %268, %269, %271, %286
  %289 = phi %"class.WTF::StringImpl"* [ null, %214 ], [ null, %237 ], [ %177, %286 ], [ %177, %271 ], [ null, %269 ], [ %241, %268 ], [ %241, %265 ]
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %291 = ptrtoint %"class.WTF::StringImpl"* %289 to i64
  store i64 %291, i64* %121, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #10
  br label %306

306:                                              ; preds = %305, %302, %288, %181
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %122) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 40, i1 false)
  store i32 1, i32* %123, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 17, i1 false) #10
  %307 = load i64, i64* %126, align 8
  store atomic i64 %307, i64* %127 monotonic, align 8
  %308 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %313, label %310

310:                                              ; preds = %306
  %311 = inttoptr i64 %307 to i8*
  %312 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %311) #10
  br label %313

313:                                              ; preds = %306, %310
  %314 = load i64, i64* %130, align 8
  store atomic i64 %314, i64* %131 monotonic, align 8
  %315 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %320, label %317

317:                                              ; preds = %313
  %318 = inttoptr i64 %314 to i8*
  %319 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %318) #10
  br label %320

320:                                              ; preds = %313, %317
  %321 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %132, align 8
  %322 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %321, i64 0, i32 0, i32 3, i32 0, i32 0
  %323 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %323, i64 0, i32 2, i32 0, i32 0
  %325 = load %"class.blink::Document"*, %"class.blink::Document"** %324, align 8
  %326 = call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %325, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %327 = ptrtoint %"class.blink::Text"* %326 to i64
  store atomic i64 %327, i64* %134 monotonic, align 8
  %328 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %333, label %330

330:                                              ; preds = %320
  %331 = bitcast %"class.blink::Text"* %326 to i8*
  %332 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %331) #10
  br label %333

333:                                              ; preds = %320, %330
  call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  %334 = load i32, i32* %136, align 4
  %335 = load i32, i32* %137, align 8
  %336 = icmp eq i32 %334, %335
  br i1 %336, label %356, label %337, !prof !3

337:                                              ; preds = %333
  %338 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %138, align 8
  %339 = zext i32 %334 to i64
  %340 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %338, i64 %339
  %341 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %340, i64 0, i32 0
  %342 = load i32, i32* %123, align 8
  store i32 %342, i32* %341, align 8
  %343 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %338, i64 %339, i32 2
  %344 = load i64, i64* %127, align 8
  %345 = bitcast %"class.blink::Member.2"* %343 to i64*
  store i64 %344, i64* %345, align 8
  %346 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %338, i64 %339, i32 3
  %347 = load i64, i64* %131, align 8
  %348 = bitcast %"class.blink::Member.6"* %346 to i64*
  store i64 %347, i64* %348, align 8
  %349 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %338, i64 %339, i32 4
  %350 = load i64, i64* %134, align 8
  %351 = bitcast %"class.blink::Member.6"* %349 to i64*
  store i64 %350, i64* %351, align 8
  %352 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %338, i64 %339, i32 5
  %353 = load i8, i8* %139, align 8, !range !2
  store i8 %353, i8* %352, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %340) #10
  %354 = load i32, i32* %136, align 4
  %355 = add i32 %354, 1
  store i32 %355, i32* %136, align 4
  br label %357

356:                                              ; preds = %333
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"* %135, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %6) #10
  br label %357

357:                                              ; preds = %337, %356
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %122) #10
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #10
  br label %373

373:                                              ; preds = %357, %369, %372
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #10
  %374 = load i32, i32* %60, align 8
  %375 = icmp ugt i32 %374, %175
  br i1 %375, label %142, label %376

376:                                              ; preds = %373, %109
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %111) #10
  %377 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %111, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %379 = icmp eq %"class.WTF::StringImpl"* %378, null
  br i1 %379, label %393, label %380

380:                                              ; preds = %376
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load atomic i32, i32* %381 monotonic, align 4
  %383 = and i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 0
  %386 = load i32, i32* %385, align 4
  br i1 %384, label %387, label %389

387:                                              ; preds = %380
  %388 = add i32 %386, -1
  store i32 %388, i32* %385, align 4
  br label %389

389:                                              ; preds = %387, %380
  %390 = phi i32 [ %388, %387 ], [ %386, %380 ]
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %393

392:                                              ; preds = %389
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %378) #10
  br label %393

393:                                              ; preds = %376, %389, %392
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #10
  br label %394

394:                                              ; preds = %45, %22, %35, %2, %393
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20HTMLConstructionSite11PendingText4SwapERS1_(%"class.blink::HTMLConstructionSite::PendingText"*, %"class.blink::HTMLConstructionSite::PendingText"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %1, i64 0, i32 3
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  store i32 %6, i32* %3, align 4
  store i32 %5, i32* %4, align 4
  %7 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 %10, i64* %7 monotonic, align 8
  store atomic i64 %8, i64* %9 monotonic, align 8
  %11 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #10
  br label %17

17:                                               ; preds = %13, %2
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %1 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %24

24:                                               ; preds = %17, %20
  %25 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %0, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %1, i64 0, i32 1, i32 0
  %27 = bitcast %"class.blink::MemberBase.7"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::MemberBase.7"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  store atomic i64 %30, i64* %27 monotonic, align 8
  store atomic i64 %28, i64* %29 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %24
  %34 = bitcast %"class.blink::MemberBase.7"* %25 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #10
  br label %37

37:                                               ; preds = %33, %24
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.blink::MemberBase.7"* %26 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #10
  br label %44

44:                                               ; preds = %37, %40
  %45 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %0, i64 0, i32 2
  %46 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %1, i64 0, i32 2
  tail call void @_ZN3WTF13StringBuilder4SwapERS0_(%"class.WTF::StringBuilder"* %45, %"class.WTF::StringBuilder"* dereferenceable(48) %46) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF13StringBuilder9SubstringEjj(%"class.WTF::StringBuilder"*, i32, i32) local_unnamed_addr #2

declare %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite9QueueTaskERKNS_24HTMLConstructionSiteTaskE(%"class.blink::HTMLConstructionSite"*, %"struct.blink::HTMLConstructionSiteTask"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0)
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %37, label %9, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %10, align 8
  %12 = zext i32 %5 to i64
  %13 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %11, i64 %12
  %14 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %11, i64 %12, i32 2
  %18 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2
  %19 = bitcast %"class.blink::Member.2"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::Member.2"* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %11, i64 %12, i32 3
  %23 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 3
  %24 = bitcast %"class.blink::Member.6"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::Member.6"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %11, i64 %12, i32 4
  %28 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 4
  %29 = bitcast %"class.blink::Member.6"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::Member.6"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %11, i64 %12, i32 5
  %33 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 5
  %34 = load i8, i8* %33, align 8, !range !2
  store i8 %34, i8* %32, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %13) #10
  %35 = load i32, i32* %4, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %4, align 4
  br label %38

37:                                               ; preds = %2
  tail call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"* %3, %"struct.blink::HTMLConstructionSiteTask"* dereferenceable(40) %1) #10
  br label %38

38:                                               ; preds = %9, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"*, %"class.blink::ContainerNode"*, %"class.blink::Node"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %6 = zext i1 %3 to i8
  %7 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %9, i64 1
  %11 = bitcast %"class.blink::ContainerNode"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 17, i1 false) #10
  %12 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 2
  %13 = ptrtoint %"class.blink::ContainerNode"* %1 to i64
  %14 = bitcast %"class.blink::Member.2"* %12 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.blink::ContainerNode"* %1 to i8*
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #10
  br label %20

20:                                               ; preds = %4, %17
  %21 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 4
  %22 = ptrtoint %"class.blink::Node"* %2 to i64
  %23 = bitcast %"class.blink::Member.6"* %21 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Node"* %2 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #10
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 5
  store i8 %6, i8* %30, align 8
  %31 = tail call zeroext i1 @_ZNK5blink20HTMLConstructionSite18ShouldFosterParentEv(%"class.blink::HTMLConstructionSite"* %0)
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZN5blink20HTMLConstructionSite12FosterParentEPNS_4NodeE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::Node"* %2)
  br label %78

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %35, 512
  br i1 %36, label %37, label %49

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %39 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %38) #10
  %40 = icmp eq %"class.blink::ContainerNode"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %37
  %42 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %38) #10
  %43 = ptrtoint %"class.blink::ContainerNode"* %42 to i64
  store atomic i64 %43, i64* %14 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::ContainerNode"* %42 to i8*
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %46, %41, %37, %33
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  %50 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %51 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %77, label %56, !prof !3

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %50, i64 0, i32 0, i32 0, i32 0
  %58 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %57, align 8
  %59 = zext i32 %52 to i64
  %60 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %58, i64 %59
  %61 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %60, i64 0, i32 0
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %58, i64 %59, i32 2
  %63 = load i64, i64* %14, align 8
  %64 = bitcast %"class.blink::Member.2"* %62 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %58, i64 %59, i32 3
  %66 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 3
  %67 = bitcast %"class.blink::Member.6"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::Member.6"* %65 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %58, i64 %59, i32 4
  %71 = load i64, i64* %23, align 8
  %72 = bitcast %"class.blink::Member.6"* %70 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %58, i64 %59, i32 5
  %74 = load i8, i8* %30, align 8, !range !2
  store i8 %74, i8* %73, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %60) #10
  %75 = load i32, i32* %51, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %51, align 4
  br label %78

77:                                               ; preds = %49
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"* %50, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %5) #10
  br label %78

78:                                               ; preds = %77, %56, %32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20HTMLConstructionSite18ShouldFosterParentEv(%"class.blink::HTMLConstructionSite"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %80, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %80

13:                                               ; preds = %5
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %80, label %28

28:                                               ; preds = %22, %13
  %29 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %18, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %80, label %41

41:                                               ; preds = %35, %28
  %42 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %18, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  br i1 %53, label %80, label %54

54:                                               ; preds = %48, %41
  %55 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %18, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %63, %65
  br i1 %66, label %80, label %67

67:                                               ; preds = %61, %54
  %68 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %18, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %76, %78
  br label %80

80:                                               ; preds = %74, %67, %61, %48, %35, %22, %1, %5
  %81 = phi i1 [ false, %5 ], [ false, %1 ], [ true, %61 ], [ true, %48 ], [ true, %35 ], [ true, %22 ], [ false, %67 ], [ %79, %74 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite12FosterParentEPNS_4NodeE(%"class.blink::HTMLConstructionSite"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %4 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  %5 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.blink::ContainerNode"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 25, i1 false) #10
  call void @_ZN5blink20HTMLConstructionSite14FindFosterSiteERNS_24HTMLConstructionSiteTaskE(%"class.blink::HTMLConstructionSite"* %0, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %3)
  %8 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %3, i64 0, i32 4
  %9 = ptrtoint %"class.blink::Node"* %1 to i64
  %10 = bitcast %"class.blink::Member.6"* %8 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::Node"* %1 to i8*
  %15 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %14) #10
  br label %16

16:                                               ; preds = %2, %13
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  %17 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %18 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %48, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %25, i64 %26
  %28 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %27, i64 0, i32 0
  %29 = load i32, i32* %5, align 8
  store i32 %29, i32* %28, align 8
  %30 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %25, i64 %26, i32 2
  %31 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %3, i64 0, i32 2
  %32 = bitcast %"class.blink::Member.2"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Member.2"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %25, i64 %26, i32 3
  %36 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %3, i64 0, i32 3
  %37 = bitcast %"class.blink::Member.6"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::Member.6"* %35 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %25, i64 %26, i32 4
  %41 = load i64, i64* %10, align 8
  %42 = bitcast %"class.blink::Member.6"* %40 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %25, i64 %26, i32 5
  %44 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %3, i64 0, i32 5
  %45 = load i8, i8* %44, align 8, !range !2
  store i8 %45, i8* %43, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %27) #10
  %46 = load i32, i32* %18, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %18, align 4
  br label %49

48:                                               ; preds = %16
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"* %17, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %3) #10
  br label %49

49:                                               ; preds = %23, %48
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %3 = alloca %"class.blink::HeapVector.69", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %5 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %38 [
    i32 0, label %76
    i32 1, label %7
  ]

7:                                                ; preds = %1
  %8 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  %9 = tail call dereferenceable(40) %"struct.blink::HTMLConstructionSiteTask"* @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %4, i32 0) #10
  %10 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %9, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %2, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %9, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.2"* %14 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = bitcast %"class.blink::Member.2"* %13 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %2, i64 0, i32 4
  %19 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %9, i64 0, i32 4
  %20 = bitcast %"class.blink::Member.6"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.6"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %2, i64 0, i32 5
  %24 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %9, i64 0, i32 5
  %25 = load i8, i8* %24, align 8, !range !2
  store i8 %25, i8* %23, align 8
  %26 = load i32, i32* %5, align 4
  %27 = add i32 %26, -1
  %28 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %28, align 8
  %30 = zext i32 %27 to i64
  %31 = zext i32 %26 to i64
  %32 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %29, i64 %30
  %33 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %29, i64 %31
  %34 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %32 to i8*
  %35 = ptrtoint %"struct.blink::HTMLConstructionSiteTask"* %33 to i64
  %36 = ptrtoint %"struct.blink::HTMLConstructionSiteTask"* %32 to i64
  %37 = sub i64 %35, %36
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %34, i64 %37) #10
  store i32 %27, i32* %5, align 4
  call void @_ZN5blink20HTMLConstructionSite11ExecuteTaskERNS_24HTMLConstructionSiteTaskE(%"class.blink::HTMLConstructionSite"* undef, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %2)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #10
  br label %76

38:                                               ; preds = %1
  %39 = bitcast %"class.blink::HeapVector.69"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.blink::HeapVector.69", %"class.blink::HeapVector.69"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %41 = bitcast %"class.blink::HeapVector.69"* %3 to i8**
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds %"class.blink::HeapVector.69", %"class.blink::HeapVector.69"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::HeapVector.69", %"class.blink::HeapVector.69"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = bitcast i32* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 44, i1 false) #10
  %45 = getelementptr inbounds %"class.blink::HeapVector.69", %"class.blink::HeapVector.69"* %3, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.73"* nonnull %45, %"class.WTF::VectorBuffer.73"* dereferenceable(56) %46, i64 0, i64 0) #10
  %47 = getelementptr inbounds %"class.blink::HeapVector.69", %"class.blink::HeapVector.69"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %47, align 8
  %49 = load i32, i32* %43, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %48, i64 %50
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %57, label %72, !prof !4

53:                                               ; preds = %72
  %54 = load i32, i32* %43, align 4
  %55 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %47, align 8
  %56 = icmp eq i32 %54, 0
  br i1 %56, label %57, label %60, !prof !3

57:                                               ; preds = %38, %53
  %58 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %55, %53 ], [ %48, %38 ]
  %59 = bitcast i8* %40 to %"struct.blink::HTMLConstructionSiteTask"*
  br label %66

60:                                               ; preds = %53
  %61 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %55, null
  %62 = bitcast i8* %40 to %"struct.blink::HTMLConstructionSiteTask"*
  %63 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %55, %62
  %64 = and i1 %61, %63
  br i1 %64, label %66, label %65

65:                                               ; preds = %60
  store i32 0, i32* %43, align 4
  br label %66

66:                                               ; preds = %57, %65, %60
  %67 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %58, %57 ], [ %55, %65 ], [ %55, %60 ]
  %68 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %59, %57 ], [ %62, %65 ], [ %62, %60 ]
  %69 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %67, %68
  br i1 %69, label %71, label %70, !prof !5

70:                                               ; preds = %66
  call void @_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.73"* nonnull %45, %"struct.blink::HTMLConstructionSiteTask"* %67) #10
  br label %71

71:                                               ; preds = %66, %70
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %39) #10
  br label %76

72:                                               ; preds = %38, %72
  %73 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %74, %72 ], [ %48, %38 ]
  call void @_ZN5blink20HTMLConstructionSite11ExecuteTaskERNS_24HTMLConstructionSiteTaskE(%"class.blink::HTMLConstructionSite"* undef, %"struct.blink::HTMLConstructionSiteTask"* dereferenceable(40) %73)
  %74 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %73, i64 1
  %75 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %74, %51
  br i1 %75, label %53, label %72

76:                                               ; preds = %1, %71, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSiteC2EPNS_23HTMLParserReentryPermitERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLParserReentryPermit"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::HTMLParserReentryPermit"* %1, %"class.blink::HTMLParserReentryPermit"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Document"* %2, %"class.blink::Document"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ContainerNode"* %7, %"class.blink::ContainerNode"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %11 = bitcast %"class.blink::HTMLStackItem"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  tail call void @_ZN5blink16HTMLElementStackC1Ev(%"class.blink::HTMLElementStack"* %10) #10
  %12 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementListC1Ev(%"class.blink::HTMLFormattingElementList"* %12) #10
  %13 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i64 0
  %15 = bitcast %"class.blink::HeapVector.69"* %13 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2, i32 2
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2, i32 3
  %20 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 69, i1 false)
  store i8 1, i8* %19, align 4
  %21 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2, i32 4
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 3
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 9
  store i32 %3, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 10
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 11
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 12
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 33
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %26, align 2
  ret void
}

declare void @_ZN5blink16HTMLElementStackC1Ev(%"class.blink::HTMLElementStack"*) unnamed_addr #2

declare void @_ZN5blink25HTMLFormattingElementListC1Ev(%"class.blink::HTMLFormattingElementList"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite19InitFragmentParsingEPNS_16DocumentFragmentEPNS_7ElementE(%"class.blink::HTMLConstructionSite"* nocapture, %"class.blink::DocumentFragment"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 2
  %5 = ptrtoint %"class.blink::DocumentFragment"* %1 to i64
  %6 = bitcast %"class.blink::Member.2"* %4 to i64*
  store atomic i64 %5, i64* %6 monotonic, align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::DocumentFragment"* %1 to i8*
  %11 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #10
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 10
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 135, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = icmp eq %"class.blink::Document"* %20, null
  br i1 %21, label %22, label %82

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 48
  %26 = icmp ne i32 %25, 0
  %27 = icmp eq %"class.blink::Element"* %2, null
  %28 = or i1 %27, %26
  br i1 %28, label %43, label %29

29:                                               ; preds = %22
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %34 = bitcast %"class.blink::Member.6"* %33 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %29
  %42 = bitcast %"class.blink::Element"* %2 to %"class.blink::HTMLFormElement"*
  br label %72

43:                                               ; preds = %29, %22
  %44 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %14) #10
  %45 = icmp eq %"class.blink::ContainerNode"* %44, null
  br i1 %45, label %69, label %46

46:                                               ; preds = %43
  %47 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %48 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %47, i64 0, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %66, %46
  %50 = phi %"class.blink::ContainerNode"* [ %44, %46 ], [ %67, %66 ]
  %51 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %50, i64 0, i32 0
  %52 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %50, i64 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 48
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %49
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 1, i32 2
  %59 = bitcast %"class.blink::Member.6"* %58 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %62, %64
  br i1 %65, label %69, label %66

66:                                               ; preds = %56, %49
  %67 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %51) #10
  %68 = icmp eq %"class.blink::ContainerNode"* %67, null
  br i1 %68, label %69, label %49

69:                                               ; preds = %66, %56, %43
  %70 = phi %"class.blink::ContainerNode"* [ null, %43 ], [ null, %66 ], [ %50, %56 ]
  %71 = bitcast %"class.blink::ContainerNode"* %70 to %"class.blink::HTMLFormElement"*
  br label %72

72:                                               ; preds = %41, %69
  %73 = phi %"class.blink::HTMLFormElement"* [ %42, %41 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 4
  %75 = ptrtoint %"class.blink::HTMLFormElement"* %73 to i64
  %76 = bitcast %"class.blink::Member.20"* %74 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %72
  %80 = bitcast %"class.blink::HTMLFormElement"* %73 to i8*
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #10
  br label %82

82:                                               ; preds = %12, %79, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSiteD2Ev(%"class.blink::HTMLConstructionSite"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %2) #10
  %3 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7
  %21 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::HeapVector.69", %"class.blink::HeapVector.69"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %24, align 8
  br i1 %23, label %33, label %26, !prof !3

26:                                               ; preds = %19
  %27 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %25, null
  %28 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i64 0
  %29 = bitcast i8* %28 to %"struct.blink::HTMLConstructionSiteTask"*
  %30 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %25, %29
  %31 = and i1 %27, %30
  br i1 %31, label %33, label %32

32:                                               ; preds = %26
  store i32 0, i32* %21, align 4
  br label %33

33:                                               ; preds = %19, %32, %26
  %34 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i64 0
  %35 = bitcast i8* %34 to %"struct.blink::HTMLConstructionSiteTask"*
  %36 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %25, %35
  br i1 %36, label %39, label %37, !prof !5

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::HeapVector.69", %"class.blink::HeapVector.69"* %20, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.73"* %38, %"struct.blink::HTMLConstructionSiteTask"* %25) #10
  br label %39

39:                                               ; preds = %33, %37
  store %"struct.blink::HTMLConstructionSiteTask"* null, %"struct.blink::HTMLConstructionSiteTask"** %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20HTMLConstructionSite5TraceEPNS_7VisitorE(%"class.blink::HTMLConstructionSite"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLConstructionSite"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.0"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #10
  br label %23

23:                                               ; preds = %12, %17
  %24 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::Member.2"* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %34

34:                                               ; preds = %23, %28
  %35 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 3
  %36 = bitcast %"class.blink::Member.14"* %35 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %1, i8* nonnull %40, i8* nonnull %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 4
  %47 = bitcast %"class.blink::Member.20"* %46 to i64*
  %48 = load atomic i64, i64* %47 monotonic, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = inttoptr i64 %48 to i8*
  %52 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %1, i8* nonnull %51, i8* nonnull %51, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %56

56:                                               ; preds = %45, %50
  %57 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  tail call void @_ZNK5blink16HTMLElementStack5TraceEPNS_7VisitorE(%"class.blink::HTMLElementStack"* %57, %"class.blink::Visitor"* %1) #10
  %58 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 6
  %59 = bitcast %"class.blink::HTMLFormattingElementList"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  %62 = bitcast %"class.blink::HTMLFormattingElementList"* %58 to i8**
  %63 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %64 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %64, i64 11
  %66 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %65, align 8
  tail call void %66(%"class.blink::Visitor"* %1, i8** %62) #10
  br i1 %61, label %73, label %67

67:                                               ; preds = %56
  %68 = inttoptr i64 %60 to i8*
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %68, i8* nonnull %68, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_25HTMLFormattingElementList5EntryEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %73

73:                                               ; preds = %56, %67
  %74 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES3_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.72"* %74, %"class.blink::Visitor"* %1) #10
  %75 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8
  %76 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %75 to i64*
  %77 = load atomic i64, i64* %76 monotonic, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = inttoptr i64 %77 to i8*
  %81 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, i64 5
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %1, i8* nonnull %80, i8* nonnull %80, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %85

85:                                               ; preds = %79, %73
  %86 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 1
  %87 = bitcast %"class.blink::Member.6"* %86 to i64*
  %88 = load atomic i64, i64* %87 monotonic, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = inttoptr i64 %88 to i8*
  %92 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, i64 5
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %94, align 8
  tail call void %95(%"class.blink::Visitor"* %1, i8* nonnull %91, i8* nonnull %91, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %96

96:                                               ; preds = %85, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite6DetachEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HTMLConstructionSite::PendingText", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8
  %4 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 72, i1 false) #10
  %5 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %2, i64 0, i32 2, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %2, i64 0, i32 2, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 25, i1 false) #10
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %2, i64 0, i32 2, i32 4
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %2, i64 0, i32 3
  store i32 0, i32* %8, align 8
  call void @_ZN5blink20HTMLConstructionSite11PendingText4SwapERS1_(%"class.blink::HTMLConstructionSite::PendingText"* %3, %"class.blink::HTMLConstructionSite::PendingText"* nonnull dereferenceable(72) %2) #10
  %9 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %2, i64 0, i32 2
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #10
  br label %26

26:                                               ; preds = %1, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #10
  %27 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1
  %28 = bitcast %"class.blink::Member.0"* %27 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 2
  %30 = bitcast %"class.blink::Member.2"* %29 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::HTMLFormElement"* @_ZN5blink20HTMLConstructionSite8TakeFormEv(%"class.blink::HTMLConstructionSite"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 4, i32 0
  %3 = getelementptr inbounds %"class.blink::MemberBase.21", %"class.blink::MemberBase.21"* %2, i64 0, i32 0
  %4 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %3, align 8
  %5 = bitcast %"class.blink::MemberBase.21"* %2 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  ret %"class.blink::HTMLFormElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite32InsertHTMLHtmlStartTagBeforeHTMLEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %4 = alloca %"class.blink::HTMLHtmlElement"*, align 8
  %5 = alloca %"class.blink::CreateElementFlags", align 8
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %3, align 8
  %6 = bitcast %"class.blink::HTMLHtmlElement"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  store %"class.blink::HTMLHtmlElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::HTMLHtmlElement"*), %"class.blink::HTMLHtmlElement"** %4, align 8
  %7 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6
  %8 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11

11:                                               ; preds = %2
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIsAttrE, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %12, i64 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi i32 [ 0, %11 ], [ %34, %33 ]
  %16 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %15) #10
  %17 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, %19
  br i1 %20, label %37, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %27, %21
  %34 = add nuw i32 %15, 1
  %35 = load i32, i32* %8, align 4
  %36 = icmp ult i32 %34, %35
  br i1 %36, label %14, label %57

37:                                               ; preds = %14, %27
  %38 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %15) #10
  %39 = icmp eq %"class.blink::Attribute"* %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 10
  %45 = load i8, i8* %44, align 4, !range !2, !noalias !6
  %46 = icmp eq i8 %45, 0
  %47 = ptrtoint %"class.blink::Document"* %42 to i64
  %48 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %5, i64 0, i32 0
  store i8 1, i8* %48, align 8, !alias.scope !6
  %49 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %5, i64 0, i32 2
  %50 = bitcast %"class.blink::Document"** %49 to i64*
  store i64 %47, i64* %50, align 8, !alias.scope !6
  %51 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %5, i64 0, i32 3
  %52 = select i1 %46, i8 2, i8 3
  store i8 %52, i8* %51, align 8, !alias.scope !9
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 1
  %54 = tail call %"class.blink::Element"* @_ZN5blink8Document13CreateElementERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"* %42, %"class.blink::QualifiedName"* dereferenceable(8) %43, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %5, %"class.WTF::AtomicString"* dereferenceable(8) %53) #10
  %55 = bitcast %"class.blink::Element"* %54 to %"class.blink::HTMLHtmlElement"*
  %56 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %3, align 8
  br label %61

57:                                               ; preds = %33, %2, %37
  %58 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.blink::Document"*, %"class.blink::Document"** %58, align 8
  %60 = tail call %"class.blink::HTMLHtmlElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHtmlElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %59) #10
  br label %61

61:                                               ; preds = %57, %40
  %62 = phi %"class.blink::AtomicHTMLToken"* [ %1, %57 ], [ %56, %40 ]
  %63 = phi %"class.blink::HTMLHtmlElement"* [ %60, %57 ], [ %55, %40 ]
  store %"class.blink::HTMLHtmlElement"* %63, %"class.blink::HTMLHtmlElement"** %4, align 8
  %64 = getelementptr inbounds %"class.blink::HTMLHtmlElement", %"class.blink::HTMLHtmlElement"* %63, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 9
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, -1
  %68 = icmp ult i32 %67, 2
  %69 = getelementptr inbounds %"class.blink::HTMLHtmlElement", %"class.blink::HTMLHtmlElement"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %72, label %70

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %62, i64 0, i32 6
  tail call void @_ZNK5blink7Element24StripScriptingAttributesERN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"* %64, %"class.WTF::Vector"* dereferenceable(16) %71) #10
  br label %72

72:                                               ; preds = %70, %61
  %73 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %62, i64 0, i32 6
  tail call void @_ZN5blink7Element19ParserSetAttributesERKN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"* %64, %"class.WTF::Vector"* dereferenceable(16) %73) #10
  %74 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %62, i64 0, i32 5
  %75 = load i8, i8* %74, align 1, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %90, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::HTMLHtmlElement", %"class.blink::HTMLHtmlElement"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::Document"*, %"class.blink::Document"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %81, i64 0, i32 2
  %83 = bitcast %"class.blink::UseCounter"* %82 to void (%"class.blink::UseCounter"*, i32)***
  %84 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %84, i64 3
  %86 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %85, align 8
  tail call void %86(%"class.blink::UseCounter"* %82, i32 2250) #10
  %87 = getelementptr inbounds %"class.blink::HTMLHtmlElement", %"class.blink::HTMLHtmlElement"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = or i32 %88, 16777216
  store i32 %89, i32* %87, align 8
  br label %90

90:                                               ; preds = %72, %77
  %91 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %91, align 8
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %92, %"class.blink::Node"* %69, i1 zeroext false)
  %93 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %94 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_15HTMLHtmlElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::HTMLHtmlElement"** nonnull dereferenceable(8) %4, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink16HTMLElementStack19PushHTMLHtmlElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %93, %"class.blink::HTMLStackItem"* %94) #10
  call void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"* %0)
  %95 = load %"class.blink::HTMLHtmlElement"*, %"class.blink::HTMLHtmlElement"** %4, align 8
  call void @_ZN5blink15HTMLHtmlElement16InsertedByParserEv(%"class.blink::HTMLHtmlElement"* %95) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

declare %"class.blink::Element"* @_ZN5blink8Document13CreateElementERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv(%"class.blink::CreateElementFlags"* noalias nocapture sret, %"class.blink::HTMLConstructionSite"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %1, i64 0, i32 10
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.blink::Document"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %0, i64 0, i32 0
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %0, i64 0, i32 2
  %11 = bitcast %"class.blink::Document"** %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %0, i64 0, i32 3
  %13 = select i1 %5, i8 2, i8 3
  store i8 %13, i8* %12, align 8, !alias.scope !14
  ret void
}

declare void @_ZN5blink16HTMLElementStack19PushHTMLHtmlElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #2

declare void @_ZN5blink15HTMLHtmlElement16InsertedByParserEv(%"class.blink::HTMLHtmlElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite35MergeAttributesFromTokenIntoElementEPNS_15AtomicHTMLTokenEPNS_7ElementE(%"class.blink::HTMLConstructionSite"* nocapture readnone, %"class.blink::AtomicHTMLToken"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %76, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %8, align 8
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %9, i64 %10
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 3, i32 0, i32 0
  br label %13

13:                                               ; preds = %7, %73
  %14 = phi %"class.blink::Attribute"* [ %9, %7 ], [ %74, %73 ]
  %15 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %12, align 8
  %16 = icmp eq %"class.blink::ElementData"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %14, i64 0, i32 0
  br label %70

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::ElementData"* %15 to %"class.blink::UniqueElementData"*
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 1, i32 1
  %27 = bitcast %"class.blink::Member.28"* %26 to %"class.blink::Attribute"**
  %28 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %25, i64 0, i32 2, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  br label %36

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 1
  %33 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::Attribute"*
  %34 = lshr i32 %21, 1
  %35 = and i32 %34, 268435455
  br label %36

36:                                               ; preds = %24, %31
  %37 = phi i32 [ %35, %31 ], [ %30, %24 ]
  %38 = phi %"class.blink::Attribute"* [ %33, %31 ], [ %28, %24 ]
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %14, i64 0, i32 0
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 %40
  %42 = icmp eq i32 %37, 0
  br i1 %42, label %70, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %14, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %64, %43
  %49 = phi %"class.blink::Attribute"* [ %38, %43 ], [ %65, %64 ]
  %50 = phi i32 [ 0, %43 ], [ %66, %64 ]
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %49, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %52, %45
  br i1 %53, label %68, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %59, %54
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %49, i64 1
  %66 = add i32 %50, 1
  %67 = icmp eq %"class.blink::Attribute"* %65, %41
  br i1 %67, label %70, label %48

68:                                               ; preds = %48, %59
  %69 = icmp eq i32 %50, -1
  br i1 %69, label %70, label %73

70:                                               ; preds = %64, %17, %36, %68
  %71 = phi %"class.blink::QualifiedName"* [ %39, %68 ], [ %18, %17 ], [ %39, %36 ], [ %39, %64 ]
  %72 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %14, i64 0, i32 1
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %71, %"class.WTF::AtomicString"* dereferenceable(8) %72) #10
  br label %73

73:                                               ; preds = %70, %68
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %14, i64 1
  %75 = icmp eq %"class.blink::Attribute"* %74, %11
  br i1 %75, label %76, label %13

76:                                               ; preds = %73, %3
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %81

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %8 = tail call %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11HtmlElementEv(%"class.blink::HTMLElementStack"* %7) #10
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %81, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %13, align 8
  %15 = zext i32 %10 to i64
  %16 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %14, i64 %15
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 3, i32 0, i32 0
  br label %18

18:                                               ; preds = %78, %12
  %19 = phi %"class.blink::Attribute"* [ %14, %12 ], [ %79, %78 ]
  %20 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %17, align 8
  %21 = icmp eq %"class.blink::ElementData"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 0, i32 0
  br label %75

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::UniqueElementData"*
  %31 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 1, i32 1
  %32 = bitcast %"class.blink::Member.28"* %31 to %"class.blink::Attribute"**
  %33 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %30, i64 0, i32 2, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  br label %41

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 1
  %38 = bitcast %"class.blink::ElementData"* %37 to %"class.blink::Attribute"*
  %39 = lshr i32 %26, 1
  %40 = and i32 %39, 268435455
  br label %41

41:                                               ; preds = %36, %29
  %42 = phi i32 [ %40, %36 ], [ %35, %29 ]
  %43 = phi %"class.blink::Attribute"* [ %38, %36 ], [ %33, %29 ]
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 0, i32 0
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 %45
  %47 = icmp eq i32 %42, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %69, %48
  %54 = phi %"class.blink::Attribute"* [ %43, %48 ], [ %70, %69 ]
  %55 = phi i32 [ 0, %48 ], [ %71, %69 ]
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %57, %50
  br i1 %58, label %73, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %66, %67
  br i1 %68, label %73, label %69

69:                                               ; preds = %64, %59
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 1
  %71 = add i32 %55, 1
  %72 = icmp eq %"class.blink::Attribute"* %70, %46
  br i1 %72, label %75, label %53

73:                                               ; preds = %64, %53
  %74 = icmp eq i32 %55, -1
  br i1 %74, label %75, label %78

75:                                               ; preds = %69, %73, %41, %22
  %76 = phi %"class.blink::QualifiedName"* [ %44, %73 ], [ %23, %22 ], [ %44, %41 ], [ %44, %69 ]
  %77 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 0, i32 1
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %8, %"class.blink::QualifiedName"* dereferenceable(8) %76, %"class.WTF::AtomicString"* dereferenceable(8) %77) #10
  br label %78

78:                                               ; preds = %75, %73
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 1
  %80 = icmp eq %"class.blink::Attribute"* %79, %16
  br i1 %80, label %81, label %18

81:                                               ; preds = %78, %6, %2
  ret void
}

declare %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11HtmlElementEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite28InsertHTMLBodyStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %4 = tail call %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11BodyElementEv(%"class.blink::HTMLElementStack"* %3) #10
  %5 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %77, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %9, align 8
  %11 = zext i32 %6 to i64
  %12 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %10, i64 %11
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 3, i32 0, i32 0
  br label %14

14:                                               ; preds = %74, %8
  %15 = phi %"class.blink::Attribute"* [ %10, %8 ], [ %75, %74 ]
  %16 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %13, align 8
  %17 = icmp eq %"class.blink::ElementData"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  br label %71

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::ElementData"* %16 to %"class.blink::UniqueElementData"*
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1, i32 1
  %28 = bitcast %"class.blink::Member.28"* %27 to %"class.blink::Attribute"**
  %29 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %26, i64 0, i32 2, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  br label %37

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1
  %34 = bitcast %"class.blink::ElementData"* %33 to %"class.blink::Attribute"*
  %35 = lshr i32 %22, 1
  %36 = and i32 %35, 268435455
  br label %37

37:                                               ; preds = %32, %25
  %38 = phi i32 [ %36, %32 ], [ %31, %25 ]
  %39 = phi %"class.blink::Attribute"* [ %34, %32 ], [ %29, %25 ]
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  %41 = zext i32 %38 to i64
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 %41
  %43 = icmp eq i32 %38, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %65, %44
  %50 = phi %"class.blink::Attribute"* [ %39, %44 ], [ %66, %65 ]
  %51 = phi i32 [ 0, %44 ], [ %67, %65 ]
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %53, %46
  br i1 %54, label %69, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %57, %58
  br i1 %59, label %60, label %65

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, %63
  br i1 %64, label %69, label %65

65:                                               ; preds = %60, %55
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 1
  %67 = add i32 %51, 1
  %68 = icmp eq %"class.blink::Attribute"* %66, %42
  br i1 %68, label %71, label %49

69:                                               ; preds = %60, %49
  %70 = icmp eq i32 %51, -1
  br i1 %70, label %71, label %74

71:                                               ; preds = %65, %69, %37, %18
  %72 = phi %"class.blink::QualifiedName"* [ %40, %69 ], [ %19, %18 ], [ %40, %37 ], [ %40, %65 ]
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %72, %"class.WTF::AtomicString"* dereferenceable(8) %73) #10
  br label %74

74:                                               ; preds = %71, %69
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %76 = icmp eq %"class.blink::Attribute"* %75, %12
  br i1 %76, label %77, label %14

77:                                               ; preds = %74, %2
  ret void
}

declare %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11BodyElementEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite27SetDefaultCompatibilityModeEv(%"class.blink::HTMLConstructionSite"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 12
  store i8 1, i8* %6, align 2
  %7 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document20SetCompatibilityModeENS0_17CompatibilityModeE(%"class.blink::Document"* %8, i32 0) #10
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite20SetCompatibilityModeENS_8Document17CompatibilityModeE(%"class.blink::HTMLConstructionSite"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 12
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 2
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  tail call void @_ZN5blink8Document20SetCompatibilityModeENS0_17CompatibilityModeE(%"class.blink::Document"* %7, i32 %1) #10
  ret void
}

declare void @_ZN5blink8Document20SetCompatibilityModeENS0_17CompatibilityModeE(%"class.blink::Document"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite31SetCompatibilityModeFromDoctypeERKN3WTF6StringES4_S4_(%"class.blink::HTMLConstructionSite"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = alloca %"class.WTF::StringView", align 8
  %32 = alloca %"class.WTF::StringView", align 8
  %33 = alloca %"class.WTF::StringView", align 8
  %34 = alloca %"class.WTF::StringView", align 8
  %35 = alloca %"class.WTF::StringView", align 8
  %36 = alloca %"class.WTF::StringView", align 8
  %37 = alloca %"class.WTF::StringView", align 8
  %38 = alloca %"class.WTF::StringView", align 8
  %39 = alloca %"class.WTF::StringView", align 8
  %40 = alloca %"class.WTF::StringView", align 8
  %41 = alloca %"class.WTF::StringView", align 8
  %42 = alloca %"class.WTF::StringView", align 8
  %43 = alloca %"class.WTF::StringView", align 8
  %44 = alloca %"class.WTF::StringView", align 8
  %45 = alloca %"class.WTF::StringView", align 8
  %46 = alloca %"class.WTF::StringView", align 8
  %47 = alloca %"class.WTF::StringView", align 8
  %48 = alloca %"class.WTF::StringView", align 8
  %49 = alloca %"class.WTF::StringView", align 8
  %50 = alloca %"class.WTF::StringView", align 8
  %51 = alloca %"class.WTF::StringView", align 8
  %52 = alloca %"class.WTF::StringView", align 8
  %53 = alloca %"class.WTF::StringView", align 8
  %54 = alloca %"class.WTF::StringView", align 8
  %55 = alloca %"class.WTF::StringView", align 8
  %56 = alloca %"class.WTF::StringView", align 8
  %57 = alloca %"class.WTF::StringView", align 8
  %58 = alloca %"class.WTF::StringView", align 8
  %59 = alloca %"class.WTF::StringView", align 8
  %60 = alloca %"class.WTF::StringView", align 8
  %61 = alloca %"class.WTF::StringView", align 8
  %62 = alloca %"class.WTF::StringView", align 8
  %63 = alloca %"class.WTF::StringView", align 8
  %64 = alloca %"class.WTF::StringView", align 8
  %65 = alloca %"class.WTF::StringView", align 8
  %66 = alloca %"class.WTF::StringView", align 8
  %67 = alloca %"class.WTF::StringView", align 8
  %68 = alloca %"class.WTF::StringView", align 8
  %69 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %73, label %77

73:                                               ; preds = %4
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %74, align 8
  %75 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %76 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %75, i64* %76, align 8
  br label %85

77:                                               ; preds = %4
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 1
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %83 = bitcast i8** %82 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %83, align 8
  %84 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %85

85:                                               ; preds = %77, %73
  %86 = phi i64 [ %84, %77 ], [ %75, %73 ]
  %87 = phi i32 [ %80, %77 ], [ 0, %73 ]
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %87, i32* %88, align 8
  %89 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #10
  %90 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %86, i64* %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %92, align 8
  %93 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  %94 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #10
  %95 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #10
  %96 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #10
  %97 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #10
  %98 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #10
  %99 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #10
  %100 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #10
  %101 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #10
  %102 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #10
  %103 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #10
  %104 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #10
  %105 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #10
  %106 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #10
  %107 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #10
  %108 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #10
  %109 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #10
  %110 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #10
  %111 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #10
  %112 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #10
  %113 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #10
  %114 = bitcast %"class.WTF::StringView"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #10
  %115 = bitcast %"class.WTF::StringView"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #10
  %116 = bitcast %"class.WTF::StringView"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #10
  %117 = bitcast %"class.WTF::StringView"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #10
  %118 = bitcast %"class.WTF::StringView"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #10
  %119 = bitcast %"class.WTF::StringView"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #10
  %120 = bitcast %"class.WTF::StringView"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #10
  %121 = bitcast %"class.WTF::StringView"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #10
  %122 = bitcast %"class.WTF::StringView"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #10
  %123 = bitcast %"class.WTF::StringView"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #10
  %124 = bitcast %"class.WTF::StringView"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #10
  %125 = bitcast %"class.WTF::StringView"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #10
  %126 = bitcast %"class.WTF::StringView"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #10
  %127 = bitcast %"class.WTF::StringView"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #10
  %128 = bitcast %"class.WTF::StringView"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #10
  %129 = bitcast %"class.WTF::StringView"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #10
  %130 = bitcast %"class.WTF::StringView"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #10
  %131 = bitcast %"class.WTF::StringView"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #10
  %132 = bitcast %"class.WTF::StringView"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #10
  %133 = bitcast %"class.WTF::StringView"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #10
  %134 = bitcast %"class.WTF::StringView"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #10
  %135 = bitcast %"class.WTF::StringView"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #10
  %136 = bitcast %"class.WTF::StringView"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #10
  %137 = bitcast %"class.WTF::StringView"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #10
  %138 = bitcast %"class.WTF::StringView"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #10
  %139 = bitcast %"class.WTF::StringView"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #10
  %140 = bitcast %"class.WTF::StringView"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #10
  %141 = bitcast %"class.WTF::StringView"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #10
  %142 = bitcast %"class.WTF::StringView"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #10
  %143 = bitcast %"class.WTF::StringView"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #10
  %144 = bitcast %"class.WTF::StringView"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #10
  %145 = bitcast %"class.WTF::StringView"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #10
  %146 = bitcast %"class.WTF::StringView"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #10
  %147 = bitcast %"class.WTF::StringView"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #10
  %148 = bitcast %"class.WTF::StringView"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #10
  %149 = bitcast %"class.WTF::StringView"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #10
  %150 = bitcast %"class.WTF::StringView"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #10
  %151 = bitcast %"class.WTF::StringView"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #10
  br i1 %93, label %152, label %1200

152:                                              ; preds = %85
  %153 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %154 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i8** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 42, i32* %156, align 8
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %160, label %164

160:                                              ; preds = %152
  %161 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %153, i64* %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i8** %162, align 8
  %163 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 52, i32* %163, align 8
  br label %175

164:                                              ; preds = %152
  %165 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %158, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  br i1 %165, label %1200, label %166

166:                                              ; preds = %164
  %167 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %169 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i8** %170, align 8
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 52, i32* %171, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %166
  %174 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %168, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #10
  br i1 %174, label %1200, label %180

175:                                              ; preds = %166, %160
  %176 = phi i64 [ %153, %160 ], [ %167, %166 ]
  %177 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i8** %178, align 8
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 42, i32* %179, align 8
  br label %189

180:                                              ; preds = %173
  %181 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %183 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %181, i64* %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i8** %184, align 8
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 42, i32* %185, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %180
  %188 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %182, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #10
  br i1 %188, label %1200, label %194

189:                                              ; preds = %180, %175
  %190 = phi i64 [ %176, %175 ], [ %181, %180 ]
  %191 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i8** %192, align 8
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 31, i32* %193, align 8
  br label %203

194:                                              ; preds = %187
  %195 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %197 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %195, i64* %197, align 8
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i8** %198, align 8
  %199 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 31, i32* %199, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %194
  %202 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %196, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #10
  br i1 %202, label %1200, label %208

203:                                              ; preds = %194, %189
  %204 = phi i64 [ %190, %189 ], [ %195, %194 ]
  %205 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %204, i64* %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8** %206, align 8
  %207 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 31, i32* %207, align 8
  br label %217

208:                                              ; preds = %201
  %209 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %211 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %209, i64* %211, align 8
  %212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8** %212, align 8
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 31, i32* %213, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %208
  %216 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %210, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #10
  br i1 %216, label %1200, label %222

217:                                              ; preds = %208, %203
  %218 = phi i64 [ %204, %203 ], [ %209, %208 ]
  %219 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i8** %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 38, i32* %221, align 8
  br label %231

222:                                              ; preds = %215
  %223 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %225 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %223, i64* %225, align 8
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i8** %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 38, i32* %227, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %222
  %230 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %224, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #10
  br i1 %230, label %1200, label %236

231:                                              ; preds = %222, %217
  %232 = phi i64 [ %218, %217 ], [ %223, %222 ]
  %233 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0), i8** %234, align 8
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 38, i32* %235, align 8
  br label %245

236:                                              ; preds = %229
  %237 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %239 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %237, i64* %239, align 8
  %240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0), i8** %240, align 8
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 38, i32* %241, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %242, label %245, label %243

243:                                              ; preds = %236
  %244 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %238, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #10
  br i1 %244, label %1200, label %250

245:                                              ; preds = %236, %231
  %246 = phi i64 [ %232, %231 ], [ %237, %236 ]
  %247 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8** %248, align 8
  %249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 30, i32* %249, align 8
  br label %259

250:                                              ; preds = %243
  %251 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %253 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8** %254, align 8
  %255 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 30, i32* %255, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %256, label %259, label %257

257:                                              ; preds = %250
  %258 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %252, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #10
  br i1 %258, label %1200, label %264

259:                                              ; preds = %250, %245
  %260 = phi i64 [ %246, %245 ], [ %251, %250 ]
  %261 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i8** %262, align 8
  %263 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 23, i32* %263, align 8
  br label %273

264:                                              ; preds = %257
  %265 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %267 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %265, i64* %267, align 8
  %268 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i8** %268, align 8
  %269 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 23, i32* %269, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %264
  %272 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %266, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #10
  br i1 %272, label %1200, label %278

273:                                              ; preds = %264, %259
  %274 = phi i64 [ %260, %259 ], [ %265, %264 ]
  %275 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %274, i64* %275, align 8
  %276 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i8** %276, align 8
  %277 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 24, i32* %277, align 8
  br label %287

278:                                              ; preds = %271
  %279 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %281 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %279, i64* %281, align 8
  %282 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i8** %282, align 8
  %283 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 24, i32* %283, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %278
  %286 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %280, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #10
  br i1 %286, label %1200, label %292

287:                                              ; preds = %278, %273
  %288 = phi i64 [ %274, %273 ], [ %279, %278 ]
  %289 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %288, i64* %289, align 8
  %290 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i8** %290, align 8
  %291 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 23, i32* %291, align 8
  br label %301

292:                                              ; preds = %285
  %293 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %295 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %293, i64* %295, align 8
  %296 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i8** %296, align 8
  %297 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 23, i32* %297, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %292
  %300 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %294, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #10
  br i1 %300, label %1200, label %306

301:                                              ; preds = %292, %287
  %302 = phi i64 [ %288, %287 ], [ %293, %292 ]
  %303 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %302, i64* %303, align 8
  %304 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), i8** %304, align 8
  %305 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 29, i32* %305, align 8
  br label %315

306:                                              ; preds = %299
  %307 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %309 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %307, i64* %309, align 8
  %310 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), i8** %310, align 8
  %311 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 29, i32* %311, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %312, label %315, label %313

313:                                              ; preds = %306
  %314 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %308, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #10
  br i1 %314, label %1200, label %320

315:                                              ; preds = %306, %301
  %316 = phi i64 [ %302, %301 ], [ %307, %306 ]
  %317 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %316, i64* %317, align 8
  %318 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8** %318, align 8
  %319 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 23, i32* %319, align 8
  br label %329

320:                                              ; preds = %313
  %321 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %323 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %321, i64* %323, align 8
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8** %324, align 8
  %325 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 23, i32* %325, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %322, null
  br i1 %326, label %329, label %327

327:                                              ; preds = %320
  %328 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %322, %"class.WTF::StringView"* nonnull dereferenceable(24) %19) #10
  br i1 %328, label %1200, label %334

329:                                              ; preds = %320, %315
  %330 = phi i64 [ %316, %315 ], [ %321, %320 ]
  %331 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %330, i64* %331, align 8
  %332 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8** %332, align 8
  %333 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 21, i32* %333, align 8
  br label %343

334:                                              ; preds = %327
  %335 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %337 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %335, i64* %337, align 8
  %338 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8** %338, align 8
  %339 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 21, i32* %339, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %334
  %342 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %336, %"class.WTF::StringView"* nonnull dereferenceable(24) %20) #10
  br i1 %342, label %1200, label %348

343:                                              ; preds = %334, %329
  %344 = phi i64 [ %330, %329 ], [ %335, %334 ]
  %345 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %344, i64* %345, align 8
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i8** %346, align 8
  %347 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 27, i32* %347, align 8
  br label %357

348:                                              ; preds = %341
  %349 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %350 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %351 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i8** %352, align 8
  %353 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 27, i32* %353, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %350, null
  br i1 %354, label %357, label %355

355:                                              ; preds = %348
  %356 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %350, %"class.WTF::StringView"* nonnull dereferenceable(24) %21) #10
  br i1 %356, label %1200, label %362

357:                                              ; preds = %348, %343
  %358 = phi i64 [ %344, %343 ], [ %349, %348 ]
  %359 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i8** %360, align 8
  %361 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 27, i32* %361, align 8
  br label %371

362:                                              ; preds = %355
  %363 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %365 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i8** %366, align 8
  %367 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 27, i32* %367, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %362
  %370 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %364, %"class.WTF::StringView"* nonnull dereferenceable(24) %22) #10
  br i1 %370, label %1200, label %376

371:                                              ; preds = %362, %357
  %372 = phi i64 [ %358, %357 ], [ %363, %362 ]
  %373 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %372, i64* %373, align 8
  %374 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i8** %374, align 8
  %375 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 27, i32* %375, align 8
  br label %385

376:                                              ; preds = %369
  %377 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %379 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %377, i64* %379, align 8
  %380 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i8** %380, align 8
  %381 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 27, i32* %381, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %378, null
  br i1 %382, label %385, label %383

383:                                              ; preds = %376
  %384 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %378, %"class.WTF::StringView"* nonnull dereferenceable(24) %23) #10
  br i1 %384, label %1200, label %390

385:                                              ; preds = %376, %371
  %386 = phi i64 [ %372, %371 ], [ %377, %376 ]
  %387 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %386, i64* %387, align 8
  %388 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0), i8** %388, align 8
  %389 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 27, i32* %389, align 8
  br label %399

390:                                              ; preds = %383
  %391 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %393 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %391, i64* %393, align 8
  %394 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0), i8** %394, align 8
  %395 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 27, i32* %395, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %396, label %399, label %397

397:                                              ; preds = %390
  %398 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %392, %"class.WTF::StringView"* nonnull dereferenceable(24) %24) #10
  br i1 %398, label %1200, label %404

399:                                              ; preds = %390, %385
  %400 = phi i64 [ %386, %385 ], [ %391, %390 ]
  %401 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %400, i64* %401, align 8
  %402 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8** %402, align 8
  %403 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 34, i32* %403, align 8
  br label %413

404:                                              ; preds = %397
  %405 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %407 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %405, i64* %407, align 8
  %408 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8** %408, align 8
  %409 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 34, i32* %409, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %410, label %413, label %411

411:                                              ; preds = %404
  %412 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %406, %"class.WTF::StringView"* nonnull dereferenceable(24) %25) #10
  br i1 %412, label %1200, label %418

413:                                              ; preds = %404, %399
  %414 = phi i64 [ %400, %399 ], [ %405, %404 ]
  %415 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %414, i64* %415, align 8
  %416 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i64 0, i64 0), i8** %416, align 8
  %417 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 34, i32* %417, align 8
  br label %427

418:                                              ; preds = %411
  %419 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %420 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %421 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %419, i64* %421, align 8
  %422 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i64 0, i64 0), i8** %422, align 8
  %423 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 34, i32* %423, align 8
  %424 = icmp eq %"class.WTF::StringImpl"* %420, null
  br i1 %424, label %427, label %425

425:                                              ; preds = %418
  %426 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %420, %"class.WTF::StringView"* nonnull dereferenceable(24) %26) #10
  br i1 %426, label %1200, label %432

427:                                              ; preds = %418, %413
  %428 = phi i64 [ %414, %413 ], [ %419, %418 ]
  %429 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %428, i64* %429, align 8
  %430 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0), i8** %430, align 8
  %431 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 34, i32* %431, align 8
  br label %441

432:                                              ; preds = %425
  %433 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %434 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %435 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %433, i64* %435, align 8
  %436 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0), i8** %436, align 8
  %437 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 34, i32* %437, align 8
  %438 = icmp eq %"class.WTF::StringImpl"* %434, null
  br i1 %438, label %441, label %439

439:                                              ; preds = %432
  %440 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %434, %"class.WTF::StringView"* nonnull dereferenceable(24) %27) #10
  br i1 %440, label %1200, label %446

441:                                              ; preds = %432, %427
  %442 = phi i64 [ %428, %427 ], [ %433, %432 ]
  %443 = bitcast %"class.WTF::StringView"* %28 to i64*
  store i64 %442, i64* %443, align 8
  %444 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i64 0, i64 0), i8** %444, align 8
  %445 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 34, i32* %445, align 8
  br label %455

446:                                              ; preds = %439
  %447 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %448 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %449 = bitcast %"class.WTF::StringView"* %28 to i64*
  store i64 %447, i64* %449, align 8
  %450 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i64 0, i64 0), i8** %450, align 8
  %451 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 34, i32* %451, align 8
  %452 = icmp eq %"class.WTF::StringImpl"* %448, null
  br i1 %452, label %455, label %453

453:                                              ; preds = %446
  %454 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %448, %"class.WTF::StringView"* nonnull dereferenceable(24) %28) #10
  br i1 %454, label %1200, label %460

455:                                              ; preds = %446, %441
  %456 = phi i64 [ %442, %441 ], [ %447, %446 ]
  %457 = bitcast %"class.WTF::StringView"* %29 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8** %458, align 8
  %459 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  store i32 26, i32* %459, align 8
  br label %469

460:                                              ; preds = %453
  %461 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %462 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %463 = bitcast %"class.WTF::StringView"* %29 to i64*
  store i64 %461, i64* %463, align 8
  %464 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8** %464, align 8
  %465 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  store i32 26, i32* %465, align 8
  %466 = icmp eq %"class.WTF::StringImpl"* %462, null
  br i1 %466, label %469, label %467

467:                                              ; preds = %460
  %468 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %462, %"class.WTF::StringView"* nonnull dereferenceable(24) %29) #10
  br i1 %468, label %1200, label %474

469:                                              ; preds = %460, %455
  %470 = phi i64 [ %456, %455 ], [ %461, %460 ]
  %471 = bitcast %"class.WTF::StringView"* %30 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0), i8** %472, align 8
  %473 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 19, i32* %473, align 8
  br label %483

474:                                              ; preds = %467
  %475 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %476 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %477 = bitcast %"class.WTF::StringView"* %30 to i64*
  store i64 %475, i64* %477, align 8
  %478 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0), i8** %478, align 8
  %479 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 19, i32* %479, align 8
  %480 = icmp eq %"class.WTF::StringImpl"* %476, null
  br i1 %480, label %483, label %481

481:                                              ; preds = %474
  %482 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %476, %"class.WTF::StringView"* nonnull dereferenceable(24) %30) #10
  br i1 %482, label %1200, label %488

483:                                              ; preds = %474, %469
  %484 = phi i64 [ %470, %469 ], [ %475, %474 ]
  %485 = bitcast %"class.WTF::StringView"* %31 to i64*
  store i64 %484, i64* %485, align 8
  %486 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), i8** %486, align 8
  %487 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  store i32 40, i32* %487, align 8
  br label %497

488:                                              ; preds = %481
  %489 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %491 = bitcast %"class.WTF::StringView"* %31 to i64*
  store i64 %489, i64* %491, align 8
  %492 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), i8** %492, align 8
  %493 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  store i32 40, i32* %493, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %490, null
  br i1 %494, label %497, label %495

495:                                              ; preds = %488
  %496 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %490, %"class.WTF::StringView"* nonnull dereferenceable(24) %31) #10
  br i1 %496, label %1200, label %502

497:                                              ; preds = %488, %483
  %498 = phi i64 [ %484, %483 ], [ %489, %488 ]
  %499 = bitcast %"class.WTF::StringView"* %32 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26, i64 0, i64 0), i8** %500, align 8
  %501 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 2
  store i32 53, i32* %501, align 8
  br label %511

502:                                              ; preds = %495
  %503 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %504 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %505 = bitcast %"class.WTF::StringView"* %32 to i64*
  store i64 %503, i64* %505, align 8
  %506 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26, i64 0, i64 0), i8** %506, align 8
  %507 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 2
  store i32 53, i32* %507, align 8
  %508 = icmp eq %"class.WTF::StringImpl"* %504, null
  br i1 %508, label %511, label %509

509:                                              ; preds = %502
  %510 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %504, %"class.WTF::StringView"* nonnull dereferenceable(24) %32) #10
  br i1 %510, label %1200, label %516

511:                                              ; preds = %502, %497
  %512 = phi i64 [ %498, %497 ], [ %503, %502 ]
  %513 = bitcast %"class.WTF::StringView"* %33 to i64*
  store i64 %512, i64* %513, align 8
  %514 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.27, i64 0, i64 0), i8** %514, align 8
  %515 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 2
  store i32 46, i32* %515, align 8
  br label %525

516:                                              ; preds = %509
  %517 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %518 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %519 = bitcast %"class.WTF::StringView"* %33 to i64*
  store i64 %517, i64* %519, align 8
  %520 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.27, i64 0, i64 0), i8** %520, align 8
  %521 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 2
  store i32 46, i32* %521, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %518, null
  br i1 %522, label %525, label %523

523:                                              ; preds = %516
  %524 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %518, %"class.WTF::StringView"* nonnull dereferenceable(24) %33) #10
  br i1 %524, label %1200, label %530

525:                                              ; preds = %516, %511
  %526 = phi i64 [ %512, %511 ], [ %517, %516 ]
  %527 = bitcast %"class.WTF::StringView"* %34 to i64*
  store i64 %526, i64* %527, align 8
  %528 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 1
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.28, i64 0, i64 0), i8** %528, align 8
  %529 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 2
  store i32 48, i32* %529, align 8
  br label %539

530:                                              ; preds = %523
  %531 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %532 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %533 = bitcast %"class.WTF::StringView"* %34 to i64*
  store i64 %531, i64* %533, align 8
  %534 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 1
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.28, i64 0, i64 0), i8** %534, align 8
  %535 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 2
  store i32 48, i32* %535, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %532, null
  br i1 %536, label %539, label %537

537:                                              ; preds = %530
  %538 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %532, %"class.WTF::StringView"* nonnull dereferenceable(24) %34) #10
  br i1 %538, label %1200, label %544

539:                                              ; preds = %530, %525
  %540 = phi i64 [ %526, %525 ], [ %531, %530 ]
  %541 = bitcast %"class.WTF::StringView"* %35 to i64*
  store i64 %540, i64* %541, align 8
  %542 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 1
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.29, i64 0, i64 0), i8** %542, align 8
  %543 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 2
  store i32 53, i32* %543, align 8
  br label %553

544:                                              ; preds = %537
  %545 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %546 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %547 = bitcast %"class.WTF::StringView"* %35 to i64*
  store i64 %545, i64* %547, align 8
  %548 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 1
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.29, i64 0, i64 0), i8** %548, align 8
  %549 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 2
  store i32 53, i32* %549, align 8
  %550 = icmp eq %"class.WTF::StringImpl"* %546, null
  br i1 %550, label %553, label %551

551:                                              ; preds = %544
  %552 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %546, %"class.WTF::StringView"* nonnull dereferenceable(24) %35) #10
  br i1 %552, label %1200, label %558

553:                                              ; preds = %544, %539
  %554 = phi i64 [ %540, %539 ], [ %545, %544 ]
  %555 = bitcast %"class.WTF::StringView"* %36 to i64*
  store i64 %554, i64* %555, align 8
  %556 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.30, i64 0, i64 0), i8** %556, align 8
  %557 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 2
  store i32 46, i32* %557, align 8
  br label %567

558:                                              ; preds = %551
  %559 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %560 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %561 = bitcast %"class.WTF::StringView"* %36 to i64*
  store i64 %559, i64* %561, align 8
  %562 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.30, i64 0, i64 0), i8** %562, align 8
  %563 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 2
  store i32 46, i32* %563, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %560, null
  br i1 %564, label %567, label %565

565:                                              ; preds = %558
  %566 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %560, %"class.WTF::StringView"* nonnull dereferenceable(24) %36) #10
  br i1 %566, label %1200, label %572

567:                                              ; preds = %558, %553
  %568 = phi i64 [ %554, %553 ], [ %559, %558 ]
  %569 = bitcast %"class.WTF::StringView"* %37 to i64*
  store i64 %568, i64* %569, align 8
  %570 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 1
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.31, i64 0, i64 0), i8** %570, align 8
  %571 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 2
  store i32 48, i32* %571, align 8
  br label %581

572:                                              ; preds = %565
  %573 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %574 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %575 = bitcast %"class.WTF::StringView"* %37 to i64*
  store i64 %573, i64* %575, align 8
  %576 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 1
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.31, i64 0, i64 0), i8** %576, align 8
  %577 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 2
  store i32 48, i32* %577, align 8
  %578 = icmp eq %"class.WTF::StringImpl"* %574, null
  br i1 %578, label %581, label %579

579:                                              ; preds = %572
  %580 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %574, %"class.WTF::StringView"* nonnull dereferenceable(24) %37) #10
  br i1 %580, label %1200, label %586

581:                                              ; preds = %572, %567
  %582 = phi i64 [ %568, %567 ], [ %573, %572 ]
  %583 = bitcast %"class.WTF::StringView"* %38 to i64*
  store i64 %582, i64* %583, align 8
  %584 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i64 0, i64 0), i8** %584, align 8
  %585 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 2
  store i32 35, i32* %585, align 8
  br label %595

586:                                              ; preds = %579
  %587 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %589 = bitcast %"class.WTF::StringView"* %38 to i64*
  store i64 %587, i64* %589, align 8
  %590 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i64 0, i64 0), i8** %590, align 8
  %591 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 2
  store i32 35, i32* %591, align 8
  %592 = icmp eq %"class.WTF::StringImpl"* %588, null
  br i1 %592, label %595, label %593

593:                                              ; preds = %586
  %594 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %588, %"class.WTF::StringView"* nonnull dereferenceable(24) %38) #10
  br i1 %594, label %1200, label %600

595:                                              ; preds = %586, %581
  %596 = phi i64 [ %582, %581 ], [ %587, %586 ]
  %597 = bitcast %"class.WTF::StringView"* %39 to i64*
  store i64 %596, i64* %597, align 8
  %598 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i64 0, i64 0), i8** %598, align 8
  %599 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 2
  store i32 42, i32* %599, align 8
  br label %609

600:                                              ; preds = %593
  %601 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %602 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %603 = bitcast %"class.WTF::StringView"* %39 to i64*
  store i64 %601, i64* %603, align 8
  %604 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i64 0, i64 0), i8** %604, align 8
  %605 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 2
  store i32 42, i32* %605, align 8
  %606 = icmp eq %"class.WTF::StringImpl"* %602, null
  br i1 %606, label %609, label %607

607:                                              ; preds = %600
  %608 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %602, %"class.WTF::StringView"* nonnull dereferenceable(24) %39) #10
  br i1 %608, label %1200, label %614

609:                                              ; preds = %600, %595
  %610 = phi i64 [ %596, %595 ], [ %601, %600 ]
  %611 = bitcast %"class.WTF::StringView"* %40 to i64*
  store i64 %610, i64* %611, align 8
  %612 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.34, i64 0, i64 0), i8** %612, align 8
  %613 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 2
  store i32 42, i32* %613, align 8
  br label %623

614:                                              ; preds = %607
  %615 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %616 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %617 = bitcast %"class.WTF::StringView"* %40 to i64*
  store i64 %615, i64* %617, align 8
  %618 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.34, i64 0, i64 0), i8** %618, align 8
  %619 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 2
  store i32 42, i32* %619, align 8
  %620 = icmp eq %"class.WTF::StringImpl"* %616, null
  br i1 %620, label %623, label %621

621:                                              ; preds = %614
  %622 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %616, %"class.WTF::StringView"* nonnull dereferenceable(24) %40) #10
  br i1 %622, label %1200, label %628

623:                                              ; preds = %614, %609
  %624 = phi i64 [ %610, %609 ], [ %615, %614 ]
  %625 = bitcast %"class.WTF::StringView"* %41 to i64*
  store i64 %624, i64* %625, align 8
  %626 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %41, i64 0, i32 1
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i8** %626, align 8
  %627 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %41, i64 0, i32 2
  store i32 51, i32* %627, align 8
  br label %637

628:                                              ; preds = %621
  %629 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %630 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %631 = bitcast %"class.WTF::StringView"* %41 to i64*
  store i64 %629, i64* %631, align 8
  %632 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %41, i64 0, i32 1
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i8** %632, align 8
  %633 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %41, i64 0, i32 2
  store i32 51, i32* %633, align 8
  %634 = icmp eq %"class.WTF::StringImpl"* %630, null
  br i1 %634, label %637, label %635

635:                                              ; preds = %628
  %636 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %630, %"class.WTF::StringView"* nonnull dereferenceable(24) %41) #10
  br i1 %636, label %1200, label %642

637:                                              ; preds = %628, %623
  %638 = phi i64 [ %624, %623 ], [ %629, %628 ]
  %639 = bitcast %"class.WTF::StringView"* %42 to i64*
  store i64 %638, i64* %639, align 8
  %640 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 1
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.36, i64 0, i64 0), i8** %640, align 8
  %641 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 2
  store i32 59, i32* %641, align 8
  br label %651

642:                                              ; preds = %635
  %643 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %645 = bitcast %"class.WTF::StringView"* %42 to i64*
  store i64 %643, i64* %645, align 8
  %646 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 1
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.36, i64 0, i64 0), i8** %646, align 8
  %647 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 2
  store i32 59, i32* %647, align 8
  %648 = icmp eq %"class.WTF::StringImpl"* %644, null
  br i1 %648, label %651, label %649

649:                                              ; preds = %642
  %650 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %644, %"class.WTF::StringView"* nonnull dereferenceable(24) %42) #10
  br i1 %650, label %1200, label %656

651:                                              ; preds = %642, %637
  %652 = phi i64 [ %638, %637 ], [ %643, %642 ]
  %653 = bitcast %"class.WTF::StringView"* %43 to i64*
  store i64 %652, i64* %653, align 8
  %654 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 1
  store i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.37, i64 0, i64 0), i8** %654, align 8
  %655 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 2
  store i32 78, i32* %655, align 8
  br label %665

656:                                              ; preds = %649
  %657 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %658 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %659 = bitcast %"class.WTF::StringView"* %43 to i64*
  store i64 %657, i64* %659, align 8
  %660 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 1
  store i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.37, i64 0, i64 0), i8** %660, align 8
  %661 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 2
  store i32 78, i32* %661, align 8
  %662 = icmp eq %"class.WTF::StringImpl"* %658, null
  br i1 %662, label %665, label %663

663:                                              ; preds = %656
  %664 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %658, %"class.WTF::StringView"* nonnull dereferenceable(24) %43) #10
  br i1 %664, label %1200, label %670

665:                                              ; preds = %656, %651
  %666 = phi i64 [ %652, %651 ], [ %657, %656 ]
  %667 = bitcast %"class.WTF::StringView"* %44 to i64*
  store i64 %666, i64* %667, align 8
  %668 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 1
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i8** %668, align 8
  %669 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 2
  store i32 69, i32* %669, align 8
  br label %679

670:                                              ; preds = %663
  %671 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %673 = bitcast %"class.WTF::StringView"* %44 to i64*
  store i64 %671, i64* %673, align 8
  %674 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 1
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i8** %674, align 8
  %675 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 2
  store i32 69, i32* %675, align 8
  %676 = icmp eq %"class.WTF::StringImpl"* %672, null
  br i1 %676, label %679, label %677

677:                                              ; preds = %670
  %678 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %672, %"class.WTF::StringView"* nonnull dereferenceable(24) %44) #10
  br i1 %678, label %1200, label %684

679:                                              ; preds = %670, %665
  %680 = phi i64 [ %666, %665 ], [ %671, %670 ]
  %681 = bitcast %"class.WTF::StringView"* %45 to i64*
  store i64 %680, i64* %681, align 8
  %682 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i64 0, i64 0), i8** %682, align 8
  %683 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 2
  store i32 36, i32* %683, align 8
  br label %693

684:                                              ; preds = %677
  %685 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %686 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %687 = bitcast %"class.WTF::StringView"* %45 to i64*
  store i64 %685, i64* %687, align 8
  %688 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i64 0, i64 0), i8** %688, align 8
  %689 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 2
  store i32 36, i32* %689, align 8
  %690 = icmp eq %"class.WTF::StringImpl"* %686, null
  br i1 %690, label %693, label %691

691:                                              ; preds = %684
  %692 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %686, %"class.WTF::StringView"* nonnull dereferenceable(24) %45) #10
  br i1 %692, label %1200, label %698

693:                                              ; preds = %684, %679
  %694 = phi i64 [ %680, %679 ], [ %685, %684 ]
  %695 = bitcast %"class.WTF::StringView"* %46 to i64*
  store i64 %694, i64* %695, align 8
  %696 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 1
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i8** %696, align 8
  %697 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 2
  store i32 43, i32* %697, align 8
  br label %707

698:                                              ; preds = %691
  %699 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %700 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %701 = bitcast %"class.WTF::StringView"* %46 to i64*
  store i64 %699, i64* %701, align 8
  %702 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 1
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i8** %702, align 8
  %703 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 2
  store i32 43, i32* %703, align 8
  %704 = icmp eq %"class.WTF::StringImpl"* %700, null
  br i1 %704, label %707, label %705

705:                                              ; preds = %698
  %706 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %700, %"class.WTF::StringView"* nonnull dereferenceable(24) %46) #10
  br i1 %706, label %1200, label %712

707:                                              ; preds = %698, %693
  %708 = phi i64 [ %694, %693 ], [ %699, %698 ]
  %709 = bitcast %"class.WTF::StringView"* %47 to i64*
  store i64 %708, i64* %709, align 8
  %710 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.41, i64 0, i64 0), i8** %710, align 8
  %711 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 2
  store i32 45, i32* %711, align 8
  br label %721

712:                                              ; preds = %705
  %713 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %714 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %715 = bitcast %"class.WTF::StringView"* %47 to i64*
  store i64 %713, i64* %715, align 8
  %716 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.41, i64 0, i64 0), i8** %716, align 8
  %717 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 2
  store i32 45, i32* %717, align 8
  %718 = icmp eq %"class.WTF::StringImpl"* %714, null
  br i1 %718, label %721, label %719

719:                                              ; preds = %712
  %720 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %714, %"class.WTF::StringView"* nonnull dereferenceable(24) %47) #10
  br i1 %720, label %1200, label %726

721:                                              ; preds = %712, %707
  %722 = phi i64 [ %708, %707 ], [ %713, %712 ]
  %723 = bitcast %"class.WTF::StringView"* %48 to i64*
  store i64 %722, i64* %723, align 8
  %724 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 1
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.42, i64 0, i64 0), i8** %724, align 8
  %725 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 2
  store i32 52, i32* %725, align 8
  br label %735

726:                                              ; preds = %719
  %727 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %728 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %729 = bitcast %"class.WTF::StringView"* %48 to i64*
  store i64 %727, i64* %729, align 8
  %730 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 1
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.42, i64 0, i64 0), i8** %730, align 8
  %731 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 2
  store i32 52, i32* %731, align 8
  %732 = icmp eq %"class.WTF::StringImpl"* %728, null
  br i1 %732, label %735, label %733

733:                                              ; preds = %726
  %734 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %728, %"class.WTF::StringView"* nonnull dereferenceable(24) %48) #10
  br i1 %734, label %1200, label %740

735:                                              ; preds = %726, %721
  %736 = phi i64 [ %722, %721 ], [ %727, %726 ]
  %737 = bitcast %"class.WTF::StringView"* %49 to i64*
  store i64 %736, i64* %737, align 8
  %738 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %49, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i64 0, i64 0), i8** %738, align 8
  %739 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %49, i64 0, i32 2
  store i32 31, i32* %739, align 8
  br label %749

740:                                              ; preds = %733
  %741 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %742 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %743 = bitcast %"class.WTF::StringView"* %49 to i64*
  store i64 %741, i64* %743, align 8
  %744 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %49, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i64 0, i64 0), i8** %744, align 8
  %745 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %49, i64 0, i32 2
  store i32 31, i32* %745, align 8
  %746 = icmp eq %"class.WTF::StringImpl"* %742, null
  br i1 %746, label %749, label %747

747:                                              ; preds = %740
  %748 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %742, %"class.WTF::StringView"* nonnull dereferenceable(24) %49) #10
  br i1 %748, label %1200, label %754

749:                                              ; preds = %740, %735
  %750 = phi i64 [ %736, %735 ], [ %741, %740 ]
  %751 = bitcast %"class.WTF::StringView"* %50 to i64*
  store i64 %750, i64* %751, align 8
  %752 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %50, i64 0, i32 1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0), i8** %752, align 8
  %753 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %50, i64 0, i32 2
  store i32 28, i32* %753, align 8
  br label %763

754:                                              ; preds = %747
  %755 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %756 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %757 = bitcast %"class.WTF::StringView"* %50 to i64*
  store i64 %755, i64* %757, align 8
  %758 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %50, i64 0, i32 1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0), i8** %758, align 8
  %759 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %50, i64 0, i32 2
  store i32 28, i32* %759, align 8
  %760 = icmp eq %"class.WTF::StringImpl"* %756, null
  br i1 %760, label %763, label %761

761:                                              ; preds = %754
  %762 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %756, %"class.WTF::StringView"* nonnull dereferenceable(24) %50) #10
  br i1 %762, label %1200, label %768

763:                                              ; preds = %754, %749
  %764 = phi i64 [ %750, %749 ], [ %755, %754 ]
  %765 = bitcast %"class.WTF::StringView"* %51 to i64*
  store i64 %764, i64* %765, align 8
  %766 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %51, i64 0, i32 1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45, i64 0, i64 0), i8** %766, align 8
  %767 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %51, i64 0, i32 2
  store i32 28, i32* %767, align 8
  br label %777

768:                                              ; preds = %761
  %769 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %770 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %771 = bitcast %"class.WTF::StringView"* %51 to i64*
  store i64 %769, i64* %771, align 8
  %772 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %51, i64 0, i32 1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45, i64 0, i64 0), i8** %772, align 8
  %773 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %51, i64 0, i32 2
  store i32 28, i32* %773, align 8
  %774 = icmp eq %"class.WTF::StringImpl"* %770, null
  br i1 %774, label %777, label %775

775:                                              ; preds = %768
  %776 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %770, %"class.WTF::StringView"* nonnull dereferenceable(24) %51) #10
  br i1 %776, label %1200, label %782

777:                                              ; preds = %768, %763
  %778 = phi i64 [ %764, %763 ], [ %769, %768 ]
  %779 = bitcast %"class.WTF::StringView"* %52 to i64*
  store i64 %778, i64* %779, align 8
  %780 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %52, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0), i8** %780, align 8
  %781 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %52, i64 0, i32 2
  store i32 22, i32* %781, align 8
  br label %791

782:                                              ; preds = %775
  %783 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %784 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %785 = bitcast %"class.WTF::StringView"* %52 to i64*
  store i64 %783, i64* %785, align 8
  %786 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %52, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0), i8** %786, align 8
  %787 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %52, i64 0, i32 2
  store i32 22, i32* %787, align 8
  %788 = icmp eq %"class.WTF::StringImpl"* %784, null
  br i1 %788, label %791, label %789

789:                                              ; preds = %782
  %790 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %784, %"class.WTF::StringView"* nonnull dereferenceable(24) %52) #10
  br i1 %790, label %1200, label %796

791:                                              ; preds = %782, %777
  %792 = phi i64 [ %778, %777 ], [ %783, %782 ]
  %793 = bitcast %"class.WTF::StringView"* %53 to i64*
  store i64 %792, i64* %793, align 8
  %794 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %53, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0), i8** %794, align 8
  %795 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %53, i64 0, i32 2
  store i32 29, i32* %795, align 8
  br label %805

796:                                              ; preds = %789
  %797 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %798 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %799 = bitcast %"class.WTF::StringView"* %53 to i64*
  store i64 %797, i64* %799, align 8
  %800 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %53, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0), i8** %800, align 8
  %801 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %53, i64 0, i32 2
  store i32 29, i32* %801, align 8
  %802 = icmp eq %"class.WTF::StringImpl"* %798, null
  br i1 %802, label %805, label %803

803:                                              ; preds = %796
  %804 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %798, %"class.WTF::StringView"* nonnull dereferenceable(24) %53) #10
  br i1 %804, label %1200, label %810

805:                                              ; preds = %796, %791
  %806 = phi i64 [ %792, %791 ], [ %797, %796 ]
  %807 = bitcast %"class.WTF::StringView"* %54 to i64*
  store i64 %806, i64* %807, align 8
  %808 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %54, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i8** %808, align 8
  %809 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %54, i64 0, i32 2
  store i32 31, i32* %809, align 8
  br label %819

810:                                              ; preds = %803
  %811 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %812 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %813 = bitcast %"class.WTF::StringView"* %54 to i64*
  store i64 %811, i64* %813, align 8
  %814 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %54, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i8** %814, align 8
  %815 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %54, i64 0, i32 2
  store i32 31, i32* %815, align 8
  %816 = icmp eq %"class.WTF::StringImpl"* %812, null
  br i1 %816, label %819, label %817

817:                                              ; preds = %810
  %818 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %812, %"class.WTF::StringView"* nonnull dereferenceable(24) %54) #10
  br i1 %818, label %1200, label %824

819:                                              ; preds = %810, %805
  %820 = phi i64 [ %806, %805 ], [ %811, %810 ]
  %821 = bitcast %"class.WTF::StringView"* %55 to i64*
  store i64 %820, i64* %821, align 8
  %822 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %55, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.49, i64 0, i64 0), i8** %822, align 8
  %823 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %55, i64 0, i32 2
  store i32 35, i32* %823, align 8
  br label %833

824:                                              ; preds = %817
  %825 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %826 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %827 = bitcast %"class.WTF::StringView"* %55 to i64*
  store i64 %825, i64* %827, align 8
  %828 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %55, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.49, i64 0, i64 0), i8** %828, align 8
  %829 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %55, i64 0, i32 2
  store i32 35, i32* %829, align 8
  %830 = icmp eq %"class.WTF::StringImpl"* %826, null
  br i1 %830, label %833, label %831

831:                                              ; preds = %824
  %832 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %826, %"class.WTF::StringView"* nonnull dereferenceable(24) %55) #10
  br i1 %832, label %1200, label %838

833:                                              ; preds = %824, %819
  %834 = phi i64 [ %820, %819 ], [ %825, %824 ]
  %835 = bitcast %"class.WTF::StringView"* %56 to i64*
  store i64 %834, i64* %835, align 8
  %836 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %56, i64 0, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i8** %836, align 8
  %837 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %56, i64 0, i32 2
  store i32 40, i32* %837, align 8
  br label %847

838:                                              ; preds = %831
  %839 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %840 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %841 = bitcast %"class.WTF::StringView"* %56 to i64*
  store i64 %839, i64* %841, align 8
  %842 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %56, i64 0, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i8** %842, align 8
  %843 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %56, i64 0, i32 2
  store i32 40, i32* %843, align 8
  %844 = icmp eq %"class.WTF::StringImpl"* %840, null
  br i1 %844, label %847, label %845

845:                                              ; preds = %838
  %846 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %840, %"class.WTF::StringView"* nonnull dereferenceable(24) %56) #10
  br i1 %846, label %1200, label %852

847:                                              ; preds = %838, %833
  %848 = phi i64 [ %834, %833 ], [ %839, %838 ]
  %849 = bitcast %"class.WTF::StringView"* %57 to i64*
  store i64 %848, i64* %849, align 8
  %850 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %57, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.51, i64 0, i64 0), i8** %850, align 8
  %851 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %57, i64 0, i32 2
  store i32 38, i32* %851, align 8
  br label %861

852:                                              ; preds = %845
  %853 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %854 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %855 = bitcast %"class.WTF::StringView"* %57 to i64*
  store i64 %853, i64* %855, align 8
  %856 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %57, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.51, i64 0, i64 0), i8** %856, align 8
  %857 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %57, i64 0, i32 2
  store i32 38, i32* %857, align 8
  %858 = icmp eq %"class.WTF::StringImpl"* %854, null
  br i1 %858, label %861, label %859

859:                                              ; preds = %852
  %860 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %854, %"class.WTF::StringView"* nonnull dereferenceable(24) %57) #10
  br i1 %860, label %1200, label %866

861:                                              ; preds = %852, %847
  %862 = phi i64 [ %848, %847 ], [ %853, %852 ]
  %863 = bitcast %"class.WTF::StringView"* %58 to i64*
  store i64 %862, i64* %863, align 8
  %864 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %58, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i64 0, i64 0), i8** %864, align 8
  %865 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %58, i64 0, i32 2
  store i32 21, i32* %865, align 8
  br label %875

866:                                              ; preds = %859
  %867 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %868 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %869 = bitcast %"class.WTF::StringView"* %58 to i64*
  store i64 %867, i64* %869, align 8
  %870 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %58, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i64 0, i64 0), i8** %870, align 8
  %871 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %58, i64 0, i32 2
  store i32 21, i32* %871, align 8
  %872 = icmp eq %"class.WTF::StringImpl"* %868, null
  br i1 %872, label %875, label %873

873:                                              ; preds = %866
  %874 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %868, %"class.WTF::StringView"* nonnull dereferenceable(24) %58) #10
  br i1 %874, label %1200, label %880

875:                                              ; preds = %866, %861
  %876 = phi i64 [ %862, %861 ], [ %867, %866 ]
  %877 = bitcast %"class.WTF::StringView"* %59 to i64*
  store i64 %876, i64* %877, align 8
  %878 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %59, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0), i8** %878, align 8
  %879 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %59, i64 0, i32 2
  store i32 25, i32* %879, align 8
  br label %971

880:                                              ; preds = %873
  %881 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %882 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %883 = bitcast %"class.WTF::StringView"* %59 to i64*
  store i64 %881, i64* %883, align 8
  %884 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %59, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0), i8** %884, align 8
  %885 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %59, i64 0, i32 2
  store i32 25, i32* %885, align 8
  %886 = icmp eq %"class.WTF::StringImpl"* %882, null
  br i1 %886, label %971, label %887

887:                                              ; preds = %880
  %888 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %882, %"class.WTF::StringView"* nonnull dereferenceable(24) %59) #10
  br i1 %888, label %1200, label %889

889:                                              ; preds = %887
  %890 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %891 = icmp eq %"class.WTF::StringImpl"* %890, null
  br i1 %891, label %971, label %892

892:                                              ; preds = %889
  %893 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %890, i64 0, i32 1
  %894 = load i32, i32* %893, align 4
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %890, i64 1
  %896 = bitcast %"class.WTF::StringImpl"* %895 to i8*
  %897 = icmp eq i32 %894, 36
  br i1 %897, label %898, label %979

898:                                              ; preds = %892
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %890, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %900 = load atomic i32, i32* %899 monotonic, align 4
  %901 = and i32 %900, 1
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %934, label %918

903:                                              ; preds = %918
  %904 = getelementptr inbounds i8, i8* %896, i64 %933
  %905 = load i8, i8* %904, align 1
  %906 = zext i8 %905 to i64
  %907 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %906
  %908 = load i8, i8* %907, align 1
  %909 = zext i8 %908 to i32
  %910 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.54, i64 0, i64 %933
  %911 = load i8, i8* %910, align 1
  %912 = zext i8 %911 to i64
  %913 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %912
  %914 = load i8, i8* %913, align 1
  %915 = sext i8 %914 to i32
  %916 = icmp eq i32 %909, %915
  %917 = add nuw nsw i64 %919, 2
  br i1 %916, label %1291, label %979

918:                                              ; preds = %898, %1291
  %919 = phi i64 [ %917, %1291 ], [ 0, %898 ]
  %920 = getelementptr inbounds i8, i8* %896, i64 %919
  %921 = load i8, i8* %920, align 1
  %922 = zext i8 %921 to i64
  %923 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %922
  %924 = load i8, i8* %923, align 1
  %925 = zext i8 %924 to i32
  %926 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.54, i64 0, i64 %919
  %927 = load i8, i8* %926, align 1
  %928 = zext i8 %927 to i64
  %929 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %928
  %930 = load i8, i8* %929, align 1
  %931 = sext i8 %930 to i32
  %932 = icmp eq i32 %925, %931
  %933 = or i64 %919, 1
  br i1 %932, label %903, label %979

934:                                              ; preds = %898
  %935 = bitcast %"class.WTF::StringImpl"* %895 to i16*
  br label %953

936:                                              ; preds = %953
  %937 = getelementptr inbounds i16, i16* %935, i64 %970
  %938 = load i16, i16* %937, align 2
  %939 = add i16 %938, -65
  %940 = icmp ult i16 %939, 26
  %941 = zext i1 %940 to i16
  %942 = shl nuw nsw i16 %941, 5
  %943 = or i16 %942, %938
  %944 = zext i16 %943 to i32
  %945 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.54, i64 0, i64 %970
  %946 = load i8, i8* %945, align 1
  %947 = zext i8 %946 to i64
  %948 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %947
  %949 = load i8, i8* %948, align 1
  %950 = sext i8 %949 to i32
  %951 = icmp eq i32 %944, %950
  %952 = add nuw nsw i64 %954, 2
  br i1 %951, label %1289, label %979

953:                                              ; preds = %1289, %934
  %954 = phi i64 [ 0, %934 ], [ %952, %1289 ]
  %955 = getelementptr inbounds i16, i16* %935, i64 %954
  %956 = load i16, i16* %955, align 2
  %957 = add i16 %956, -65
  %958 = icmp ult i16 %957, 26
  %959 = zext i1 %958 to i16
  %960 = shl nuw nsw i16 %959, 5
  %961 = or i16 %960, %956
  %962 = zext i16 %961 to i32
  %963 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.54, i64 0, i64 %954
  %964 = load i8, i8* %963, align 1
  %965 = zext i8 %964 to i64
  %966 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %965
  %967 = load i8, i8* %966, align 1
  %968 = sext i8 %967 to i32
  %969 = icmp eq i32 %962, %968
  %970 = or i64 %954, 1
  br i1 %969, label %936, label %979

971:                                              ; preds = %875, %880, %889
  %972 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %973 = bitcast %"class.WTF::StringView"* %60 to i64*
  store i64 %972, i64* %973, align 8
  %974 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %60, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.55, i64 0, i64 0), i8** %974, align 8
  %975 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %60, i64 0, i32 2
  store i32 35, i32* %975, align 8
  %976 = bitcast %"class.WTF::StringView"* %61 to i64*
  store i64 %972, i64* %976, align 8
  %977 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %61, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.56, i64 0, i64 0), i8** %977, align 8
  %978 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %61, i64 0, i32 2
  store i32 31, i32* %978, align 8
  br label %1076

979:                                              ; preds = %918, %903, %953, %936, %892
  %980 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %981 = bitcast %"class.WTF::StringView"* %60 to i64*
  store i64 %980, i64* %981, align 8
  %982 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %60, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.55, i64 0, i64 0), i8** %982, align 8
  %983 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %60, i64 0, i32 2
  store i32 35, i32* %983, align 8
  %984 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %890, %"class.WTF::StringView"* nonnull dereferenceable(24) %60) #10
  br i1 %984, label %1200, label %985

985:                                              ; preds = %979
  %986 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %987 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %988 = bitcast %"class.WTF::StringView"* %61 to i64*
  store i64 %986, i64* %988, align 8
  %989 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %61, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.56, i64 0, i64 0), i8** %989, align 8
  %990 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %61, i64 0, i32 2
  store i32 31, i32* %990, align 8
  %991 = icmp eq %"class.WTF::StringImpl"* %987, null
  br i1 %991, label %1076, label %992

992:                                              ; preds = %985
  %993 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %987, %"class.WTF::StringView"* nonnull dereferenceable(24) %61) #10
  br i1 %993, label %1200, label %994

994:                                              ; preds = %992
  %995 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %996 = icmp eq %"class.WTF::StringImpl"* %995, null
  br i1 %996, label %1076, label %997

997:                                              ; preds = %994
  %998 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %995, i64 0, i32 1
  %999 = load i32, i32* %998, align 4
  %1000 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %995, i64 1
  %1001 = bitcast %"class.WTF::StringImpl"* %1000 to i8*
  %1002 = icmp eq i32 %999, 34
  br i1 %1002, label %1003, label %1080

1003:                                             ; preds = %997
  %1004 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %995, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1005 = load atomic i32, i32* %1004 monotonic, align 4
  %1006 = and i32 %1005, 1
  %1007 = icmp eq i32 %1006, 0
  br i1 %1007, label %1039, label %1023

1008:                                             ; preds = %1023
  %1009 = getelementptr inbounds i8, i8* %1001, i64 %1038
  %1010 = load i8, i8* %1009, align 1
  %1011 = zext i8 %1010 to i64
  %1012 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1011
  %1013 = load i8, i8* %1012, align 1
  %1014 = zext i8 %1013 to i32
  %1015 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.57, i64 0, i64 %1038
  %1016 = load i8, i8* %1015, align 1
  %1017 = zext i8 %1016 to i64
  %1018 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1017
  %1019 = load i8, i8* %1018, align 1
  %1020 = sext i8 %1019 to i32
  %1021 = icmp eq i32 %1014, %1020
  %1022 = add nuw nsw i64 %1024, 2
  br i1 %1021, label %1287, label %1080

1023:                                             ; preds = %1003, %1287
  %1024 = phi i64 [ %1022, %1287 ], [ 0, %1003 ]
  %1025 = getelementptr inbounds i8, i8* %1001, i64 %1024
  %1026 = load i8, i8* %1025, align 1
  %1027 = zext i8 %1026 to i64
  %1028 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1027
  %1029 = load i8, i8* %1028, align 1
  %1030 = zext i8 %1029 to i32
  %1031 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.57, i64 0, i64 %1024
  %1032 = load i8, i8* %1031, align 1
  %1033 = zext i8 %1032 to i64
  %1034 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1033
  %1035 = load i8, i8* %1034, align 1
  %1036 = sext i8 %1035 to i32
  %1037 = icmp eq i32 %1030, %1036
  %1038 = or i64 %1024, 1
  br i1 %1037, label %1008, label %1080

1039:                                             ; preds = %1003
  %1040 = bitcast %"class.WTF::StringImpl"* %1000 to i16*
  br label %1058

1041:                                             ; preds = %1058
  %1042 = getelementptr inbounds i16, i16* %1040, i64 %1075
  %1043 = load i16, i16* %1042, align 2
  %1044 = add i16 %1043, -65
  %1045 = icmp ult i16 %1044, 26
  %1046 = zext i1 %1045 to i16
  %1047 = shl nuw nsw i16 %1046, 5
  %1048 = or i16 %1047, %1043
  %1049 = zext i16 %1048 to i32
  %1050 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.57, i64 0, i64 %1075
  %1051 = load i8, i8* %1050, align 1
  %1052 = zext i8 %1051 to i64
  %1053 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1052
  %1054 = load i8, i8* %1053, align 1
  %1055 = sext i8 %1054 to i32
  %1056 = icmp eq i32 %1049, %1055
  %1057 = add nuw nsw i64 %1059, 2
  br i1 %1056, label %1285, label %1080

1058:                                             ; preds = %1285, %1039
  %1059 = phi i64 [ 0, %1039 ], [ %1057, %1285 ]
  %1060 = getelementptr inbounds i16, i16* %1040, i64 %1059
  %1061 = load i16, i16* %1060, align 2
  %1062 = add i16 %1061, -65
  %1063 = icmp ult i16 %1062, 26
  %1064 = zext i1 %1063 to i16
  %1065 = shl nuw nsw i16 %1064, 5
  %1066 = or i16 %1065, %1061
  %1067 = zext i16 %1066 to i32
  %1068 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.57, i64 0, i64 %1059
  %1069 = load i8, i8* %1068, align 1
  %1070 = zext i8 %1069 to i64
  %1071 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1070
  %1072 = load i8, i8* %1071, align 1
  %1073 = sext i8 %1072 to i32
  %1074 = icmp eq i32 %1067, %1073
  %1075 = or i64 %1059, 1
  br i1 %1074, label %1041, label %1080

1076:                                             ; preds = %971, %985, %994
  %1077 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %62, i64 0, i32 1
  store i8* null, i8** %1077, align 8
  %1078 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1079 = bitcast %"class.WTF::StringView"* %62 to i64*
  store i64 %1078, i64* %1079, align 8
  br label %1085

1080:                                             ; preds = %1023, %1008, %1058, %1041, %997
  %1081 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %62, i64 0, i32 0
  store %"class.WTF::StringImpl"* %995, %"class.WTF::StringImpl"** %1081, align 8
  %1082 = load i32, i32* %998, align 4
  %1083 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %62, i64 0, i32 1
  %1084 = bitcast i8** %1083 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1000, %"class.WTF::StringImpl"** %1084, align 8
  br label %1085

1085:                                             ; preds = %1076, %1080
  %1086 = phi i32 [ %1082, %1080 ], [ 0, %1076 ]
  %1087 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %62, i64 0, i32 2
  store i32 %1086, i32* %1087, align 8
  %1088 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %62, [5 x i8]* nonnull dereferenceable(5) @.str.58)
  br i1 %1088, label %1200, label %1089

1089:                                             ; preds = %1085
  %1090 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %1091 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1090, align 8
  %1092 = icmp eq %"class.WTF::StringImpl"* %1091, null
  br i1 %1092, label %1173, label %1093

1093:                                             ; preds = %1089
  %1094 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1091, i64 0, i32 1
  %1095 = load i32, i32* %1094, align 4
  %1096 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1091, i64 1
  %1097 = bitcast %"class.WTF::StringImpl"* %1096 to i8*
  switch i32 %1095, label %1184 [
    i32 58, label %1098
    i32 0, label %1173
  ]

1098:                                             ; preds = %1093
  %1099 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1091, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1100 = load atomic i32, i32* %1099 monotonic, align 4
  %1101 = and i32 %1100, 1
  %1102 = icmp eq i32 %1101, 0
  br i1 %1102, label %1134, label %1118

1103:                                             ; preds = %1118
  %1104 = getelementptr inbounds i8, i8* %1097, i64 %1133
  %1105 = load i8, i8* %1104, align 1
  %1106 = zext i8 %1105 to i64
  %1107 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1106
  %1108 = load i8, i8* %1107, align 1
  %1109 = zext i8 %1108 to i32
  %1110 = getelementptr inbounds [59 x i8], [59 x i8]* @.str.59, i64 0, i64 %1133
  %1111 = load i8, i8* %1110, align 1
  %1112 = zext i8 %1111 to i64
  %1113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1112
  %1114 = load i8, i8* %1113, align 1
  %1115 = sext i8 %1114 to i32
  %1116 = icmp eq i32 %1109, %1115
  %1117 = add nuw nsw i64 %1119, 2
  br i1 %1116, label %1283, label %1171

1118:                                             ; preds = %1098, %1283
  %1119 = phi i64 [ %1117, %1283 ], [ 0, %1098 ]
  %1120 = getelementptr inbounds i8, i8* %1097, i64 %1119
  %1121 = load i8, i8* %1120, align 1
  %1122 = zext i8 %1121 to i64
  %1123 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1122
  %1124 = load i8, i8* %1123, align 1
  %1125 = zext i8 %1124 to i32
  %1126 = getelementptr inbounds [59 x i8], [59 x i8]* @.str.59, i64 0, i64 %1119
  %1127 = load i8, i8* %1126, align 1
  %1128 = zext i8 %1127 to i64
  %1129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1128
  %1130 = load i8, i8* %1129, align 1
  %1131 = sext i8 %1130 to i32
  %1132 = icmp eq i32 %1125, %1131
  %1133 = or i64 %1119, 1
  br i1 %1132, label %1103, label %1171

1134:                                             ; preds = %1098
  %1135 = bitcast %"class.WTF::StringImpl"* %1096 to i16*
  br label %1153

1136:                                             ; preds = %1153
  %1137 = getelementptr inbounds i16, i16* %1135, i64 %1170
  %1138 = load i16, i16* %1137, align 2
  %1139 = add i16 %1138, -65
  %1140 = icmp ult i16 %1139, 26
  %1141 = zext i1 %1140 to i16
  %1142 = shl nuw nsw i16 %1141, 5
  %1143 = or i16 %1142, %1138
  %1144 = zext i16 %1143 to i32
  %1145 = getelementptr inbounds [59 x i8], [59 x i8]* @.str.59, i64 0, i64 %1170
  %1146 = load i8, i8* %1145, align 1
  %1147 = zext i8 %1146 to i64
  %1148 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1147
  %1149 = load i8, i8* %1148, align 1
  %1150 = sext i8 %1149 to i32
  %1151 = icmp eq i32 %1144, %1150
  %1152 = add nuw nsw i64 %1154, 2
  br i1 %1151, label %1281, label %1171

1153:                                             ; preds = %1281, %1134
  %1154 = phi i64 [ 0, %1134 ], [ %1152, %1281 ]
  %1155 = getelementptr inbounds i16, i16* %1135, i64 %1154
  %1156 = load i16, i16* %1155, align 2
  %1157 = add i16 %1156, -65
  %1158 = icmp ult i16 %1157, 26
  %1159 = zext i1 %1158 to i16
  %1160 = shl nuw nsw i16 %1159, 5
  %1161 = or i16 %1160, %1156
  %1162 = zext i16 %1161 to i32
  %1163 = getelementptr inbounds [59 x i8], [59 x i8]* @.str.59, i64 0, i64 %1154
  %1164 = load i8, i8* %1163, align 1
  %1165 = zext i8 %1164 to i64
  %1166 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1165
  %1167 = load i8, i8* %1166, align 1
  %1168 = sext i8 %1167 to i32
  %1169 = icmp eq i32 %1162, %1168
  %1170 = or i64 %1154, 1
  br i1 %1169, label %1136, label %1171

1171:                                             ; preds = %1118, %1103, %1153, %1136
  %1172 = icmp eq i32 %1095, 0
  br i1 %1172, label %1173, label %1184

1173:                                             ; preds = %1093, %1171, %1089
  %1174 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1175 = bitcast %"class.WTF::StringView"* %63 to i64*
  store i64 %1174, i64* %1175, align 8
  %1176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %63, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0), i8** %1176, align 8
  %1177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %63, i64 0, i32 2
  store i32 32, i32* %1177, align 8
  %1178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %1179 = icmp eq %"class.WTF::StringImpl"* %1178, null
  br i1 %1179, label %1184, label %1180

1180:                                             ; preds = %1173
  %1181 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1178, %"class.WTF::StringView"* nonnull dereferenceable(24) %63) #10
  br i1 %1181, label %1200, label %1182

1182:                                             ; preds = %1180
  %1183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1090, align 8
  br label %1184

1184:                                             ; preds = %1093, %1182, %1173, %1171
  %1185 = phi %"class.WTF::StringImpl"* [ %1183, %1182 ], [ %1091, %1173 ], [ %1091, %1171 ], [ %1091, %1093 ]
  %1186 = icmp eq %"class.WTF::StringImpl"* %1185, null
  br i1 %1186, label %1191, label %1187

1187:                                             ; preds = %1184
  %1188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1185, i64 0, i32 1
  %1189 = load i32, i32* %1188, align 4
  %1190 = icmp eq i32 %1189, 0
  br i1 %1190, label %1191, label %1200

1191:                                             ; preds = %1187, %1184
  %1192 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1193 = bitcast %"class.WTF::StringView"* %64 to i64*
  store i64 %1192, i64* %1193, align 8
  %1194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %64, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.61, i64 0, i64 0), i8** %1194, align 8
  %1195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %64, i64 0, i32 2
  store i32 36, i32* %1195, align 8
  %1196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %1197 = icmp eq %"class.WTF::StringImpl"* %1196, null
  br i1 %1197, label %1200, label %1198

1198:                                             ; preds = %1191
  %1199 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1196, %"class.WTF::StringView"* nonnull dereferenceable(24) %64) #10
  br label %1200

1200:                                             ; preds = %1291, %1289, %1287, %1285, %1283, %1281, %1191, %85, %1198, %1180, %992, %979, %887, %873, %859, %845, %831, %817, %803, %789, %775, %761, %747, %733, %719, %705, %691, %677, %663, %649, %635, %621, %607, %593, %579, %565, %551, %537, %523, %509, %495, %481, %467, %453, %439, %425, %411, %397, %383, %369, %355, %341, %327, %313, %299, %285, %271, %257, %243, %229, %215, %201, %187, %173, %164, %1187, %1085
  %1201 = phi i1 [ true, %1085 ], [ true, %85 ], [ false, %1187 ], [ true, %164 ], [ true, %173 ], [ true, %187 ], [ true, %201 ], [ true, %215 ], [ true, %229 ], [ true, %243 ], [ true, %257 ], [ true, %271 ], [ true, %285 ], [ true, %299 ], [ true, %313 ], [ true, %327 ], [ true, %341 ], [ true, %355 ], [ true, %369 ], [ true, %383 ], [ true, %397 ], [ true, %411 ], [ true, %425 ], [ true, %439 ], [ true, %453 ], [ true, %467 ], [ true, %481 ], [ true, %495 ], [ true, %509 ], [ true, %523 ], [ true, %537 ], [ true, %551 ], [ true, %565 ], [ true, %579 ], [ true, %593 ], [ true, %607 ], [ true, %621 ], [ true, %635 ], [ true, %649 ], [ true, %663 ], [ true, %677 ], [ true, %691 ], [ true, %705 ], [ true, %719 ], [ true, %733 ], [ true, %747 ], [ true, %761 ], [ true, %775 ], [ true, %789 ], [ true, %803 ], [ true, %817 ], [ true, %831 ], [ true, %845 ], [ true, %859 ], [ true, %873 ], [ true, %887 ], [ true, %979 ], [ true, %992 ], [ true, %1180 ], [ %1199, %1198 ], [ false, %1191 ], [ true, %1281 ], [ true, %1283 ], [ true, %1285 ], [ true, %1287 ], [ true, %1289 ], [ true, %1291 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #10
  br i1 %1201, label %1275, label %1202

1202:                                             ; preds = %1200
  %1203 = bitcast %"class.WTF::StringView"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1203) #10
  %1204 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1205 = bitcast %"class.WTF::StringView"* %65 to i64*
  store i64 %1204, i64* %1205, align 8
  %1206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %65, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.62, i64 0, i64 0), i8** %1206, align 8
  %1207 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %65, i64 0, i32 2
  store i32 32, i32* %1207, align 8
  %1208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %1209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1208, align 8
  %1210 = icmp eq %"class.WTF::StringImpl"* %1209, null
  br i1 %1210, label %1216, label %1211

1211:                                             ; preds = %1202
  %1212 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1209, %"class.WTF::StringView"* nonnull dereferenceable(24) %65) #10
  %1213 = bitcast %"class.WTF::StringView"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1213) #10
  %1214 = bitcast %"class.WTF::StringView"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1214) #10
  %1215 = bitcast %"class.WTF::StringView"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1215) #10
  br i1 %1212, label %1269, label %1223

1216:                                             ; preds = %1202
  %1217 = bitcast %"class.WTF::StringView"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1217) #10
  %1218 = bitcast %"class.WTF::StringView"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1218) #10
  %1219 = bitcast %"class.WTF::StringView"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1219) #10
  %1220 = bitcast %"class.WTF::StringView"* %66 to i64*
  store i64 %1204, i64* %1220, align 8
  %1221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %66, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.63, i64 0, i64 0), i8** %1221, align 8
  %1222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %66, i64 0, i32 2
  store i32 36, i32* %1222, align 8
  br label %1232

1223:                                             ; preds = %1211
  %1224 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1208, align 8
  %1226 = bitcast %"class.WTF::StringView"* %66 to i64*
  store i64 %1224, i64* %1226, align 8
  %1227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %66, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.63, i64 0, i64 0), i8** %1227, align 8
  %1228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %66, i64 0, i32 2
  store i32 36, i32* %1228, align 8
  %1229 = icmp eq %"class.WTF::StringImpl"* %1225, null
  br i1 %1229, label %1232, label %1230

1230:                                             ; preds = %1223
  %1231 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1225, %"class.WTF::StringView"* nonnull dereferenceable(24) %66) #10
  br i1 %1231, label %1269, label %1232

1232:                                             ; preds = %1216, %1223, %1230
  %1233 = phi i8* [ %1217, %1216 ], [ %1213, %1223 ], [ %1213, %1230 ]
  %1234 = phi i8* [ %1218, %1216 ], [ %1214, %1223 ], [ %1214, %1230 ]
  %1235 = phi i8* [ %1219, %1216 ], [ %1215, %1223 ], [ %1215, %1230 ]
  %1236 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %1237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1236, align 8
  %1238 = icmp eq %"class.WTF::StringImpl"* %1237, null
  br i1 %1238, label %1273, label %1239

1239:                                             ; preds = %1232
  %1240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 0, i32 1
  %1241 = load i32, i32* %1240, align 4
  %1242 = icmp eq i32 %1241, 0
  br i1 %1242, label %1255, label %1243

1243:                                             ; preds = %1239
  %1244 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1245 = bitcast %"class.WTF::StringView"* %67 to i64*
  store i64 %1244, i64* %1245, align 8
  %1246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %67, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0), i8** %1246, align 8
  %1247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %67, i64 0, i32 2
  store i32 32, i32* %1247, align 8
  %1248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1208, align 8
  %1249 = icmp eq %"class.WTF::StringImpl"* %1248, null
  br i1 %1249, label %1255, label %1250

1250:                                             ; preds = %1243
  %1251 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1248, %"class.WTF::StringView"* nonnull dereferenceable(24) %67) #10
  br i1 %1251, label %1269, label %1252

1252:                                             ; preds = %1250
  %1253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1236, align 8
  %1254 = icmp eq %"class.WTF::StringImpl"* %1253, null
  br i1 %1254, label %1273, label %1255

1255:                                             ; preds = %1239, %1243, %1252
  %1256 = phi %"class.WTF::StringImpl"* [ %1253, %1252 ], [ %1237, %1243 ], [ %1237, %1239 ]
  %1257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 1
  %1258 = load i32, i32* %1257, align 4
  %1259 = icmp eq i32 %1258, 0
  br i1 %1259, label %1273, label %1260

1260:                                             ; preds = %1255
  %1261 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1262 = bitcast %"class.WTF::StringView"* %68 to i64*
  store i64 %1261, i64* %1262, align 8
  %1263 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %68, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.61, i64 0, i64 0), i8** %1263, align 8
  %1264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %68, i64 0, i32 2
  store i32 36, i32* %1264, align 8
  %1265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1208, align 8
  %1266 = icmp eq %"class.WTF::StringImpl"* %1265, null
  br i1 %1266, label %1273, label %1267

1267:                                             ; preds = %1260
  %1268 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1265, %"class.WTF::StringView"* nonnull dereferenceable(24) %68) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1235) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1234) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1233) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1203) #10
  br i1 %1268, label %1275, label %1274

1269:                                             ; preds = %1211, %1230, %1250
  %1270 = phi i8* [ %1235, %1250 ], [ %1215, %1230 ], [ %1215, %1211 ]
  %1271 = phi i8* [ %1234, %1250 ], [ %1214, %1230 ], [ %1214, %1211 ]
  %1272 = phi i8* [ %1233, %1250 ], [ %1213, %1230 ], [ %1213, %1211 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1270) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1271) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1272) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1203) #10
  br label %1275

1273:                                             ; preds = %1260, %1255, %1252, %1232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1235) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1234) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1233) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1203) #10
  br label %1274

1274:                                             ; preds = %1273, %1267
  br label %1275

1275:                                             ; preds = %1267, %1269, %1200, %1274
  %1276 = phi i8 [ 0, %1274 ], [ 1, %1200 ], [ 0, %1269 ], [ 0, %1267 ]
  %1277 = phi i32 [ 2, %1274 ], [ 0, %1200 ], [ 1, %1269 ], [ 1, %1267 ]
  %1278 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 12
  store i8 %1276, i8* %1278, align 2
  %1279 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %1280 = load %"class.blink::Document"*, %"class.blink::Document"** %1279, align 8
  call void @_ZN5blink8Document20SetCompatibilityModeENS0_17CompatibilityModeE(%"class.blink::Document"* %1280, i32 %1277) #10
  ret void

1281:                                             ; preds = %1136
  %1282 = icmp eq i64 %1152, 58
  br i1 %1282, label %1200, label %1153

1283:                                             ; preds = %1103
  %1284 = icmp eq i64 %1117, 58
  br i1 %1284, label %1200, label %1118

1285:                                             ; preds = %1041
  %1286 = icmp eq i64 %1057, 34
  br i1 %1286, label %1200, label %1058

1287:                                             ; preds = %1008
  %1288 = icmp eq i64 %1022, 34
  br i1 %1288, label %1200, label %1023

1289:                                             ; preds = %936
  %1290 = icmp eq i64 %952, 36
  br i1 %1290, label %1200, label %953

1291:                                             ; preds = %903
  %1292 = icmp eq i64 %917, 36
  br i1 %1292, label %1200, label %918
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite16ProcessEndOfFileEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %5, %1
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  tail call void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"* %0) #10
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  tail call void @_ZN5blink16HTMLElementStack6PopAllEv(%"class.blink::HTMLElementStack"* %11) #10
  ret void
}

declare void @_ZN5blink16HTMLElementStack6PopAllEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite15FinishedParsingEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %5, %1
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  tail call void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"* %0) #10
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  tail call void @_ZN5blink8Document15FinishedParsingEv(%"class.blink::Document"* %12) #10
  ret void
}

declare void @_ZN5blink8Document15FinishedParsingEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite13InsertDoctypeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %7, i64 0, i32 3, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16* %9, i32 %11) #10
  %13 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %14 = bitcast %"class.WTF::String"* %3 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %6, align 8
  %17 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %16, i64 0, i32 4, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16* %18, i32 %20) #10
  %22 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %23 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %26 = call %"class.blink::DocumentType"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DocumentTypeEE4CallIJRNS_6MemberINS_8DocumentEEERKN3WTF12AtomicStringERKNS8_6StringESE_EEEPS1_DpOT_(%"class.blink::Member.0"* dereferenceable(8) %24, %"class.WTF::AtomicString"* dereferenceable(8) %25, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %27 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DocumentType", %"class.blink::DocumentType"* %26, i64 0, i32 0
  call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %28, %"class.blink::Node"* %29, i1 zeroext false)
  %30 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 10
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %44

33:                                               ; preds = %2
  %34 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %6, align 8
  %35 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %34, i64 0, i32 5
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 12
  store i8 1, i8* %39, align 2
  %40 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  call void @_ZN5blink8Document20SetCompatibilityModeENS0_17CompatibilityModeE(%"class.blink::Document"* %41, i32 0) #10
  br label %44

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 0, i32 0
  call void @_ZN5blink20HTMLConstructionSite31SetCompatibilityModeFromDoctypeERKN3WTF6StringES4_S4_(%"class.blink::HTMLConstructionSite"* %0, %"class.WTF::String"* dereferenceable(8) %43, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br label %44

44:                                               ; preds = %38, %42, %2
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %61

61:                                               ; preds = %44, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #10
  br label %78

78:                                               ; preds = %61, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite13InsertCommentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %8, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp ne i32 %11, 0
  %13 = icmp eq %"class.blink::ContainerNode"* %8, null
  %14 = or i1 %13, %12
  br i1 %14, label %40, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %8, i64 0, i32 0
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.6"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %28, label %40

28:                                               ; preds = %15
  %29 = bitcast %"class.blink::ContainerNode"* %8 to %"class.blink::HTMLTemplateElement"*
  %30 = tail call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement15ContentInternalEv(%"class.blink::HTMLTemplateElement"* nonnull %29) #10
  %31 = icmp eq %"class.blink::DocumentFragment"* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %36, align 8
  br label %40

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %30, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %43

40:                                               ; preds = %32, %15, %2
  %41 = phi %"class.blink::ContainerNode"* [ %37, %32 ], [ %8, %15 ], [ %8, %2 ]
  %42 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %41, i64 0, i32 0, i32 3, i32 0, i32 0
  br label %43

43:                                               ; preds = %38, %40
  %44 = phi %"class.blink::TreeScope"** [ %42, %40 ], [ %39, %38 ]
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 2
  %49 = tail call %"class.blink::Comment"* @_ZN5blink7Comment6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %47, %"class.WTF::String"* dereferenceable(8) %48) #10
  %50 = getelementptr inbounds %"class.blink::Comment", %"class.blink::Comment"* %49, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %8, %"class.blink::Node"* %50, i1 zeroext false)
  ret void
}

declare %"class.blink::Comment"* @_ZN5blink7Comment6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(2848) %"class.blink::Document"* @_ZN5blink20HTMLConstructionSite27OwnerDocumentForCurrentNodeEv(%"class.blink::HTMLConstructionSite"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %7, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 48
  %11 = icmp ne i32 %10, 0
  %12 = icmp eq %"class.blink::ContainerNode"* %7, null
  %13 = or i1 %12, %11
  br i1 %13, label %39, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %7, i64 0, i32 0
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.6"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %14
  %28 = bitcast %"class.blink::ContainerNode"* %7 to %"class.blink::HTMLTemplateElement"*
  %29 = tail call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement15ContentInternalEv(%"class.blink::HTMLTemplateElement"* nonnull %28) #10
  %30 = icmp eq %"class.blink::DocumentFragment"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %35, align 8
  br label %39

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %29, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %42

39:                                               ; preds = %31, %14, %1
  %40 = phi %"class.blink::ContainerNode"* [ %36, %31 ], [ %7, %14 ], [ %7, %1 ]
  %41 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %40, i64 0, i32 0, i32 3, i32 0, i32 0
  br label %42

42:                                               ; preds = %37, %39
  %43 = phi %"class.blink::TreeScope"** [ %41, %39 ], [ %38, %37 ]
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  ret %"class.blink::Document"* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite23InsertCommentOnDocumentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 2
  %8 = tail call %"class.blink::Comment"* @_ZN5blink7Comment6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %6, %"class.WTF::String"* dereferenceable(8) %7) #10
  %9 = getelementptr inbounds %"class.blink::Comment", %"class.blink::Comment"* %8, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %4, %"class.blink::Node"* %9, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite30InsertCommentOnHTMLHtmlElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %4 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %3) #10
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 2
  %10 = tail call %"class.blink::Comment"* @_ZN5blink7Comment6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %8, %"class.WTF::String"* dereferenceable(8) %9) #10
  %11 = getelementptr inbounds %"class.blink::Comment", %"class.blink::Comment"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %4, %"class.blink::Node"* %11, i1 zeroext false)
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite21InsertHTMLHeadElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %4 = alloca %"class.blink::Element"*, align 8
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %3, align 8
  %5 = bitcast %"class.blink::Element"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %7 = tail call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %6)
  store %"class.blink::Element"* %7, %"class.blink::Element"** %4, align 8
  %8 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJPNS_7ElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::Element"** nonnull dereferenceable(8) %4, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %3) #10
  %9 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 3
  %10 = ptrtoint %"class.blink::HTMLStackItem"* %8 to i64
  %11 = bitcast %"class.blink::Member.14"* %9 to i64*
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::HTMLStackItem"* %8 to %"class.blink::Element"**
  br label %21

16:                                               ; preds = %2
  %17 = bitcast %"class.blink::HTMLStackItem"* %8 to i8*
  %18 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #10
  %19 = bitcast %"class.blink::Member.14"* %9 to %"class.blink::Element"***
  %20 = load %"class.blink::Element"**, %"class.blink::Element"*** %19, align 8
  br label %21

21:                                               ; preds = %14, %16
  %22 = phi %"class.blink::Element"** [ %15, %14 ], [ %20, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %23 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %9, i64 0, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %22, align 8
  %31 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %30, i64 0, i32 0, i32 0
  call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %28, %"class.blink::Node"* %31, i1 zeroext false)
  %32 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %33 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %29, align 8
  call void @_ZN5blink16HTMLElementStack19PushHTMLHeadElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %32, %"class.blink::HTMLStackItem"* %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* nocapture readonly, %"class.blink::AtomicHTMLToken"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::QualifiedName", align 8
  %5 = alloca %"class.blink::CEReactionsScope", align 8
  %6 = alloca %"class.blink::CreateElementFlags", align 8
  %7 = alloca %"class.blink::CreateElementFlags", align 8
  %8 = alloca %"class.blink::CreateElementFlags", align 8
  %9 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 48
  %18 = icmp ne i32 %17, 0
  %19 = icmp eq %"class.blink::ContainerNode"* %14, null
  %20 = or i1 %19, %18
  br i1 %20, label %46, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  %23 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 1, i32 2
  %27 = bitcast %"class.blink::Member.6"* %26 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %30, %32
  br i1 %33, label %34, label %46

34:                                               ; preds = %21
  %35 = bitcast %"class.blink::ContainerNode"* %14 to %"class.blink::HTMLTemplateElement"*
  %36 = tail call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement15ContentInternalEv(%"class.blink::HTMLTemplateElement"* nonnull %35) #10
  %37 = icmp eq %"class.blink::DocumentFragment"* %36, null
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %42, align 8
  br label %46

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %36, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %49

46:                                               ; preds = %38, %21, %3
  %47 = phi %"class.blink::ContainerNode"* [ %43, %38 ], [ %14, %21 ], [ %14, %3 ]
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %47, i64 0, i32 0, i32 3, i32 0, i32 0
  br label %49

49:                                               ; preds = %44, %46
  %50 = phi %"class.blink::TreeScope"** [ %48, %46 ], [ %45, %44 ]
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = bitcast %"class.blink::QualifiedName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %56 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %57 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %4, %"class.WTF::AtomicString"* dereferenceable(8) %56, %"class.WTF::AtomicString"* dereferenceable(8) %57, %"class.WTF::AtomicString"* dereferenceable(8) %2) #10
  %58 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6
  %59 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %93, label %62

62:                                               ; preds = %49
  %63 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIsAttrE, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %63, i64 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %84, %62
  %66 = phi i32 [ 0, %62 ], [ %85, %84 ]
  %67 = call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %58, i32 %66) #10
  %68 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, %70
  br i1 %71, label %88, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %74, %76
  br i1 %77, label %78, label %84

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %80, %82
  br i1 %83, label %88, label %84

84:                                               ; preds = %78, %72
  %85 = add nuw i32 %66, 1
  %86 = load i32, i32* %59, align 4
  %87 = icmp ult i32 %85, %86
  br i1 %87, label %65, label %93

88:                                               ; preds = %65, %78
  %89 = call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %58, i32 %66) #10
  %90 = icmp eq %"class.blink::Attribute"* %89, null
  %91 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %89, i64 0, i32 1
  %92 = select i1 %90, %"class.WTF::AtomicString"* %56, %"class.WTF::AtomicString"* %91
  br label %93

93:                                               ; preds = %84, %88, %49
  %94 = phi %"class.WTF::AtomicString"* [ %56, %49 ], [ %92, %88 ], [ %56, %84 ]
  %95 = call %"class.blink::CustomElementDefinition"* @_ZN5blink20HTMLConstructionSite29LookUpCustomElementDefinitionERNS_8DocumentERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* undef, %"class.blink::Document"* dereferenceable(2848) %53, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %94)
  %96 = icmp eq %"class.blink::CustomElementDefinition"* %95, null
  %97 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 10
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %96, label %164, label %100

100:                                              ; preds = %93
  br i1 %99, label %101, label %154

101:                                              ; preds = %100
  %102 = icmp eq %"class.blink::Document"* %53, null
  %103 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 73
  %104 = select i1 %102, i32* null, i32* %103
  br i1 %102, label %108, label %105

105:                                              ; preds = %101
  %106 = load i32, i32* %104, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %101, %105
  %109 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %110, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %108
  %115 = call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #10
  call void @_ZN5blink9Microtask17PerformCheckpointEPN2v87IsolateE(%"class.v8::Isolate"* %115) #10
  br label %116

116:                                              ; preds = %114, %108
  %117 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #10
  %118 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %5, i64 0, i32 1
  %119 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 16, i1 false)
  %120 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %121 = bitcast %"class.blink::CEReactionsScope"* %5 to i64*
  store i64 %120, i64* %121, align 8
  store i8 0, i8* %118, align 8
  store %"class.blink::CEReactionsScope"* %5, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %122 = load i8, i8* %97, align 4, !range !2, !noalias !19
  %123 = icmp eq i8 %122, 0
  %124 = select i1 %123, i8 2, i8 3
  %125 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %6, i64 0, i32 0
  store i8 0, i8* %125, align 8
  %126 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %6, i64 0, i32 2
  %127 = bitcast %"class.blink::Document"** %126 to i64*
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %6, i64 0, i32 3
  store i8 %124, i8* %128, align 8
  %129 = call %"class.blink::HTMLElement"* @_ZN5blink23CustomElementDefinition13CreateElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::CustomElementDefinition"* nonnull %95, %"class.blink::Document"* dereferenceable(2848) %53, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %6) #10
  %130 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %129, i64 0, i32 0
  %131 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %58, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %131, align 8
  %133 = load i32, i32* %59, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %132, i64 %134
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %137, label %148

137:                                              ; preds = %148, %116
  %138 = load i8, i8* %118, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %5) #10
  br label %141

141:                                              ; preds = %137, %140
  %142 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %143 = load i64, i64* %142, align 8
  store i64 %143, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #10
  %144 = icmp eq i32* %104, null
  br i1 %144, label %224, label %145

145:                                              ; preds = %141
  %146 = load i32, i32* %104, align 4
  %147 = add i32 %146, -1
  store i32 %147, i32* %104, align 4
  br label %224

148:                                              ; preds = %116, %148
  %149 = phi %"class.blink::Attribute"* [ %152, %148 ], [ %132, %116 ]
  %150 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %149, i64 0, i32 0
  %151 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %149, i64 0, i32 1
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %130, %"class.blink::QualifiedName"* dereferenceable(8) %150, %"class.WTF::AtomicString"* dereferenceable(8) %151) #10
  %152 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %149, i64 1
  %153 = icmp eq %"class.blink::Attribute"* %152, %135
  br i1 %153, label %137, label %148

154:                                              ; preds = %100
  %155 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %156 = bitcast %"class.blink::Document"** %155 to i64*
  %157 = load i64, i64* %156, align 8, !noalias !22
  %158 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %7, i64 0, i32 0
  store i8 1, i8* %158, align 8, !alias.scope !22
  %159 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %7, i64 0, i32 2
  %160 = bitcast %"class.blink::Document"** %159 to i64*
  store i64 %157, i64* %160, align 8, !alias.scope !22
  %161 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %7, i64 0, i32 3
  store i8 3, i8* %161, align 8, !alias.scope !25
  %162 = call %"class.blink::HTMLElement"* @_ZN5blink23CustomElementDefinition13CreateElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::CustomElementDefinition"* nonnull %95, %"class.blink::Document"* dereferenceable(2848) %53, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %7) #10
  %163 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %162, i64 0, i32 0
  br label %174

164:                                              ; preds = %93
  %165 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %166 = bitcast %"class.blink::Document"** %165 to i64*
  %167 = load i64, i64* %166, align 8, !noalias !30
  %168 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %8, i64 0, i32 0
  store i8 1, i8* %168, align 8, !alias.scope !30
  %169 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %8, i64 0, i32 2
  %170 = bitcast %"class.blink::Document"** %169 to i64*
  store i64 %167, i64* %170, align 8, !alias.scope !30
  %171 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %8, i64 0, i32 3
  %172 = select i1 %99, i8 2, i8 3
  store i8 %172, i8* %171, align 8, !alias.scope !33
  %173 = call %"class.blink::Element"* @_ZN5blink13CustomElement36CreateUncustomizedOrUndefinedElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"* dereferenceable(2848) %53, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %8, %"class.WTF::AtomicString"* dereferenceable(8) %94) #10
  br label %174

174:                                              ; preds = %164, %154
  %175 = phi %"class.blink::Element"* [ %163, %154 ], [ %173, %164 ]
  %176 = icmp eq %"class.blink::Element"* %175, null
  br i1 %176, label %201, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %175, i64 0, i32 0, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = and i32 %179, 48
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %201

182:                                              ; preds = %177
  %183 = bitcast %"class.blink::Element"* %175 to %"class.blink::HTMLElement"*
  %184 = bitcast %"class.blink::Element"* %175 to %"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)***
  %185 = load %"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)**, %"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)*** %184, align 8
  %186 = getelementptr inbounds %"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)*, %"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)** %185, i64 169
  %187 = load %"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)*, %"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)** %186, align 8
  %188 = call %"class.blink::FormAssociated"* %187(%"class.blink::HTMLElement"* nonnull %183) #10
  %189 = icmp eq %"class.blink::FormAssociated"* %188, null
  br i1 %189, label %201, label %190

190:                                              ; preds = %182
  %191 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %53) #10
  %192 = icmp eq %"class.blink::LocalFrame"* %191, null
  br i1 %192, label %201, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 4, i32 0, i32 0
  %195 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %194, align 8
  %196 = icmp eq %"class.blink::HTMLFormElement"* %195, null
  br i1 %196, label %201, label %197

197:                                              ; preds = %193
  %198 = bitcast %"class.blink::FormAssociated"* %188 to void (%"class.blink::FormAssociated"*, %"class.blink::HTMLFormElement"*)***
  %199 = load void (%"class.blink::FormAssociated"*, %"class.blink::HTMLFormElement"*)**, void (%"class.blink::FormAssociated"*, %"class.blink::HTMLFormElement"*)*** %198, align 8
  %200 = load void (%"class.blink::FormAssociated"*, %"class.blink::HTMLFormElement"*)*, void (%"class.blink::FormAssociated"*, %"class.blink::HTMLFormElement"*)** %199, align 8
  call void %200(%"class.blink::FormAssociated"* nonnull %188, %"class.blink::HTMLFormElement"* nonnull %195) #10
  br label %201

201:                                              ; preds = %177, %174, %193, %190, %182, %197
  %202 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 9
  %203 = load i32, i32* %202, align 8
  %204 = add i32 %203, -1
  %205 = icmp ult i32 %204, 2
  br i1 %205, label %207, label %206

206:                                              ; preds = %201
  call void @_ZNK5blink7Element24StripScriptingAttributesERN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"* %175, %"class.WTF::Vector"* dereferenceable(16) %58) #10
  br label %207

207:                                              ; preds = %206, %201
  call void @_ZN5blink7Element19ParserSetAttributesERKN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"* %175, %"class.WTF::Vector"* dereferenceable(16) %58) #10
  %208 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 5
  %209 = load i8, i8* %208, align 1, !range !2
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %224, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %175, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %213 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %213, i64 0, i32 2, i32 0, i32 0
  %215 = load %"class.blink::Document"*, %"class.blink::Document"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %215, i64 0, i32 2
  %217 = bitcast %"class.blink::UseCounter"* %216 to void (%"class.blink::UseCounter"*, i32)***
  %218 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %218, i64 3
  %220 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %219, align 8
  call void %220(%"class.blink::UseCounter"* %216, i32 2250) #10
  %221 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %175, i64 0, i32 0, i32 0, i32 1
  %222 = load i32, i32* %221, align 8
  %223 = or i32 %222, 16777216
  store i32 %223, i32* %221, align 8
  br label %224

224:                                              ; preds = %211, %207, %145, %141
  %225 = phi %"class.blink::Element"* [ %130, %141 ], [ %130, %145 ], [ %175, %207 ], [ %175, %211 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  ret %"class.blink::Element"* %225
}

declare void @_ZN5blink16HTMLElementStack19PushHTMLHeadElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite21InsertHTMLBodyElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %4 = alloca %"class.blink::Element"*, align 8
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %3, align 8
  %5 = bitcast %"class.blink::Element"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %7 = tail call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %6)
  store %"class.blink::Element"* %7, %"class.blink::Element"** %4, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %13, %"class.blink::Node"* %14, i1 zeroext false)
  %15 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %16 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::Element"** nonnull dereferenceable(8) %4, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink16HTMLElementStack19PushHTMLBodyElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %15, %"class.blink::HTMLStackItem"* %16) #10
  %17 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = icmp eq %"class.blink::Document"* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %2
  call void @_ZN5blink8Document14WillInsertBodyEv(%"class.blink::Document"* nonnull %18) #10
  br label %21

21:                                               ; preds = %2, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

declare void @_ZN5blink16HTMLElementStack19PushHTMLBodyElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #2

declare void @_ZN5blink8Document14WillInsertBodyEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite21InsertHTMLFormElementEPNS_15AtomicHTMLTokenEb(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %5 = alloca %"class.blink::HTMLFormElement"*, align 8
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %4, align 8
  %6 = bitcast %"class.blink::HTMLFormElement"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %8 = tail call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %7)
  %9 = bitcast %"class.blink::HTMLFormElement"** %5 to %"class.blink::Element"**
  store %"class.blink::Element"* %8, %"class.blink::Element"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %11 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %10) #10
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  br i1 %11, label %22, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 4
  %15 = ptrtoint %"class.blink::Element"* %8 to i64
  %16 = bitcast %"class.blink::Member.20"* %14 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::Element"* %8 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #10
  br label %22

22:                                               ; preds = %19, %13, %3
  br i1 %2, label %23, label %74

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %25 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 48
  %33 = icmp ne i32 %32, 0
  %34 = icmp eq %"class.blink::ContainerNode"* %29, null
  %35 = or i1 %34, %33
  br i1 %35, label %61, label %36

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0
  %38 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 1, i32 2
  %42 = bitcast %"class.blink::Member.6"* %41 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %45, %47
  br i1 %48, label %49, label %61

49:                                               ; preds = %36
  %50 = bitcast %"class.blink::ContainerNode"* %29 to %"class.blink::HTMLTemplateElement"*
  %51 = tail call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement15ContentInternalEv(%"class.blink::HTMLTemplateElement"* nonnull %50) #10
  %52 = icmp eq %"class.blink::DocumentFragment"* %51, null
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %24, align 8
  %55 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %57, align 8
  br label %61

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %51, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %64

61:                                               ; preds = %53, %36, %23
  %62 = phi %"class.blink::ContainerNode"* [ %58, %53 ], [ %29, %36 ], [ %29, %23 ]
  %63 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %62, i64 0, i32 0, i32 3, i32 0, i32 0
  br label %64

64:                                               ; preds = %59, %61
  %65 = phi %"class.blink::TreeScope"** [ %63, %61 ], [ %60, %59 ]
  %66 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %66, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %68, i64 0, i32 2
  %70 = bitcast %"class.blink::UseCounter"* %69 to void (%"class.blink::UseCounter"*, i32)***
  %71 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %71, i64 3
  %73 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %72, align 8
  tail call void %73(%"class.blink::UseCounter"* %69, i32 85) #10
  br label %74

74:                                               ; preds = %64, %22
  %75 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %76 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %79, align 8
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %80, %"class.blink::Node"* %12, i1 zeroext false)
  %81 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_15HTMLFormElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::HTMLFormElement"** nonnull dereferenceable(8) %5, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %4) #10
  call void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %10, %"class.blink::HTMLStackItem"* %81) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #2

declare void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite25InsertHTMLTemplateElementEPNS_15AtomicHTMLTokenENS_25DeclarativeShadowRootTypeE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %5 = alloca %"class.blink::HTMLTemplateElement"*, align 8
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %4, align 8
  %6 = bitcast %"class.blink::HTMLTemplateElement"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %8 = tail call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %7)
  %9 = bitcast %"class.blink::HTMLTemplateElement"** %5 to %"class.blink::Element"**
  store %"class.blink::Element"* %8, %"class.blink::Element"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.blink::TraceWrapperV8Reference"* %10 to i32*
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %17, %"class.blink::Node"* %18, i1 zeroext false)
  %19 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %20 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_19HTMLTemplateElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::HTMLTemplateElement"** nonnull dereferenceable(8) %5, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %4) #10
  call void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %19, %"class.blink::HTMLStackItem"* %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %4 = alloca %"class.blink::Element"*, align 8
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %3, align 8
  %5 = bitcast %"class.blink::Element"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %7 = tail call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %6)
  store %"class.blink::Element"* %7, %"class.blink::Element"** %4, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %13, %"class.blink::Node"* %14, i1 zeroext false)
  %15 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %16 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::Element"** nonnull dereferenceable(8) %4, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %15, %"class.blink::HTMLStackItem"* %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %7, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %10 = tail call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %9)
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %8, %"class.blink::Node"* %11, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite23InsertFormattingElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = bitcast %"class.blink::AtomicHTMLToken"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %3, align 8
  %6 = bitcast %"class.blink::Element"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %8 = tail call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %7) #10
  store %"class.blink::Element"* %8, %"class.blink::Element"** %4, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %14, %"class.blink::Node"* %15, i1 zeroext false) #10
  %16 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %17 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::Element"** nonnull dereferenceable(8) %4, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %16, %"class.blink::HTMLStackItem"* %17) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  %18 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 6
  %19 = call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %16) #10
  %20 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %20, align 8
  call void @_ZN5blink25HTMLFormattingElementList6AppendEPNS_13HTMLStackItemE(%"class.blink::HTMLFormattingElementList"* %18, %"class.blink::HTMLStackItem"* %21) #10
  ret void
}

declare void @_ZN5blink25HTMLFormattingElementList6AppendEPNS_13HTMLStackItemE(%"class.blink::HTMLFormattingElementList"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite19InsertScriptElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %4 = alloca %"class.blink::CreateElementFlags", align 8
  %5 = alloca %"class.blink::HTMLScriptElement"*, align 8
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %4, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %4, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 2
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  br label %15

15:                                               ; preds = %2, %12
  %16 = phi %"class.blink::Document"* [ %14, %12 ], [ null, %2 ]
  %17 = zext i1 %11 to i8
  %18 = or i8 %17, -86
  store i8 %18, i8* %6, align 8
  store %"class.blink::Document"* %16, %"class.blink::Document"** %7, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 10
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp ne i8 %20, 0
  %22 = and i1 %11, %21
  %23 = zext i1 %22 to i8
  %24 = shl nuw nsw i8 %23, 2
  %25 = or i8 %24, -86
  store i8 %25, i8* %8, align 8
  %26 = bitcast %"class.blink::HTMLScriptElement"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  store %"class.blink::HTMLScriptElement"* null, %"class.blink::HTMLScriptElement"** %5, align 8
  %27 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6
  %28 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %59, label %31

31:                                               ; preds = %15
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIsAttrE, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %53, %31
  %35 = phi i32 [ 0, %31 ], [ %54, %53 ]
  %36 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 %35) #10
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %39
  br i1 %40, label %57, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %49, %51
  br i1 %52, label %57, label %53

53:                                               ; preds = %47, %41
  %54 = add nuw i32 %35, 1
  %55 = load i32, i32* %28, align 4
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %34, label %59

57:                                               ; preds = %47, %34
  %58 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 %35) #10
  br label %59

59:                                               ; preds = %53, %15, %57
  %60 = phi %"class.blink::Attribute"* [ %58, %57 ], [ null, %15 ], [ null, %53 ]
  %61 = icmp eq %"class.blink::Attribute"* %60, null
  %62 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %63 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %67, i64 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, 48
  %71 = icmp ne i32 %70, 0
  %72 = icmp eq %"class.blink::ContainerNode"* %67, null
  %73 = or i1 %72, %71
  br i1 %73, label %99, label %74

74:                                               ; preds = %59
  %75 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %67, i64 0, i32 0
  %76 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %77 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 1, i32 2
  %80 = bitcast %"class.blink::Member.6"* %79 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %81 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %81, i64 0, i32 3, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %83, %85
  br i1 %86, label %87, label %99

87:                                               ; preds = %74
  %88 = bitcast %"class.blink::ContainerNode"* %67 to %"class.blink::HTMLTemplateElement"*
  %89 = tail call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement15ContentInternalEv(%"class.blink::HTMLTemplateElement"* nonnull %88) #10
  %90 = icmp eq %"class.blink::DocumentFragment"* %89, null
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %62, align 8
  %93 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %95, align 8
  br label %99

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %89, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %102

99:                                               ; preds = %91, %74, %59
  %100 = phi %"class.blink::ContainerNode"* [ %96, %91 ], [ %67, %74 ], [ %67, %59 ]
  %101 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %100, i64 0, i32 0, i32 3, i32 0, i32 0
  br label %102

102:                                              ; preds = %97, %99
  %103 = phi %"class.blink::TreeScope"** [ %101, %99 ], [ %98, %97 ]
  %104 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %104, i64 0, i32 2, i32 0, i32 0
  %106 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  br i1 %61, label %112, label %107

107:                                              ; preds = %102
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %109 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 1
  %110 = tail call %"class.blink::Element"* @_ZN5blink8Document13CreateElementERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"* %106, %"class.blink::QualifiedName"* dereferenceable(8) %108, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %4, %"class.WTF::AtomicString"* dereferenceable(8) %109) #10
  %111 = bitcast %"class.blink::Element"* %110 to %"class.blink::HTMLScriptElement"*
  br label %114

112:                                              ; preds = %102
  %113 = call %"class.blink::HTMLScriptElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLScriptElementEE4CallIJRNS_8DocumentERNS_18CreateElementFlagsEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %106, %"class.blink::CreateElementFlags"* nonnull dereferenceable(24) %4) #10
  br label %114

114:                                              ; preds = %112, %107
  %115 = phi %"class.blink::HTMLScriptElement"* [ %113, %112 ], [ %111, %107 ]
  store %"class.blink::HTMLScriptElement"* %115, %"class.blink::HTMLScriptElement"** %5, align 8
  %116 = getelementptr inbounds %"class.blink::HTMLScriptElement", %"class.blink::HTMLScriptElement"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %3, align 8
  %118 = load i32, i32* %9, align 8
  %119 = add i32 %118, -1
  %120 = icmp ult i32 %119, 2
  br i1 %120, label %123, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %117, i64 0, i32 6
  call void @_ZNK5blink7Element24StripScriptingAttributesERN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"* %116, %"class.WTF::Vector"* dereferenceable(16) %122) #10
  br label %123

123:                                              ; preds = %121, %114
  %124 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %117, i64 0, i32 6
  call void @_ZN5blink7Element19ParserSetAttributesERKN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"* %116, %"class.WTF::Vector"* dereferenceable(16) %124) #10
  %125 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %117, i64 0, i32 5
  %126 = load i8, i8* %125, align 1, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %141, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.blink::HTMLScriptElement", %"class.blink::HTMLScriptElement"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %130 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %130, i64 0, i32 2, i32 0, i32 0
  %132 = load %"class.blink::Document"*, %"class.blink::Document"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %132, i64 0, i32 2
  %134 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %135 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %135, i64 3
  %137 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %136, align 8
  call void %137(%"class.blink::UseCounter"* %133, i32 2250) #10
  %138 = getelementptr inbounds %"class.blink::HTMLScriptElement", %"class.blink::HTMLScriptElement"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = or i32 %139, 16777216
  store i32 %140, i32* %138, align 8
  br label %141

141:                                              ; preds = %123, %128
  %142 = load i32, i32* %9, align 8
  %143 = add i32 %142, -1
  %144 = icmp ult i32 %143, 2
  br i1 %144, label %145, label %153

145:                                              ; preds = %141
  %146 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %62, align 8
  %147 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %149, align 8
  %151 = bitcast %"class.blink::HTMLScriptElement"** %5 to %"class.blink::Node"**
  %152 = load %"class.blink::Node"*, %"class.blink::Node"** %151, align 8
  call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %150, %"class.blink::Node"* %152, i1 zeroext false)
  br label %153

153:                                              ; preds = %145, %141
  %154 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %155 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_17HTMLScriptElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::HTMLScriptElement"** nonnull dereferenceable(8) %5, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %154, %"class.blink::HTMLStackItem"* %155) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite20InsertForeignElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %5 = alloca %"class.blink::Element"*, align 8
  store %"class.blink::AtomicHTMLToken"* %1, %"class.blink::AtomicHTMLToken"** %4, align 8
  %6 = bitcast %"class.blink::Element"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = tail call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  store %"class.blink::Element"* %7, %"class.blink::Element"** %5, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = icmp ult i32 %10, 2
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0
  br i1 %11, label %19, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::Element"* %7 to i1 (%"class.blink::Element"*)***
  %15 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %15, i64 134
  %17 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::Element"* %7) #10
  br i1 %18, label %29, label %19

19:                                               ; preds = %13, %3
  %20 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp ne i8 %27, 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %25, %"class.blink::Node"* %12, i1 zeroext %28)
  br label %29

29:                                               ; preds = %19, %13
  %30 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 4
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %35 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementERPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringEEEEPS1_DpOT_(%"class.blink::Element"** nonnull dereferenceable(8) %5, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %2) #10
  call void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %34, %"class.blink::HTMLStackItem"* %35) #10
  br label %36

36:                                               ; preds = %29, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %5 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false)
  %6 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %7, i64 1
  %9 = bitcast %"class.blink::ContainerNode"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 17, i1 false) #10
  %10 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2
  %17 = ptrtoint %"class.blink::ContainerNode"* %15 to i64
  %18 = bitcast %"class.blink::Member.2"* %16 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::ContainerNode"* %15 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %24

24:                                               ; preds = %3, %21
  %25 = tail call zeroext i1 @_ZNK5blink20HTMLConstructionSite18ShouldFosterParentEv(%"class.blink::HTMLConstructionSite"* %0)
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  call void @_ZN5blink20HTMLConstructionSite14FindFosterSiteERNS_24HTMLConstructionSiteTaskE(%"class.blink::HTMLConstructionSite"* %0, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %4)
  %27 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %16, i64 0, i32 0, i32 0
  %28 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %27, align 8
  br label %29

29:                                               ; preds = %26, %24
  %30 = phi %"class.blink::ContainerNode"* [ %28, %26 ], [ %15, %24 ]
  %31 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %30, i64 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 48
  %34 = icmp ne i32 %33, 0
  %35 = icmp eq %"class.blink::ContainerNode"* %30, null
  %36 = or i1 %35, %34
  br i1 %36, label %62, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %30, i64 0, i32 0
  %39 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.6"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %46, %48
  br i1 %49, label %50, label %62

50:                                               ; preds = %37
  %51 = bitcast %"class.blink::ContainerNode"* %30 to %"class.blink::HTMLTemplateElement"*
  %52 = tail call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement15ContentInternalEv(%"class.blink::HTMLTemplateElement"* nonnull %51) #10
  %53 = icmp eq %"class.blink::DocumentFragment"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %50
  %55 = ptrtoint %"class.blink::DocumentFragment"* %52 to i64
  store atomic i64 %55, i64* %18 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %52, i64 0, i32 0
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.blink::DocumentFragment"* %52 to i8*
  %61 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %60) #10
  br label %62

62:                                               ; preds = %37, %29, %59, %54, %50
  %63 = phi %"class.blink::ContainerNode"* [ %30, %37 ], [ %30, %29 ], [ %58, %59 ], [ %58, %54 ], [ %30, %50 ]
  %64 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8
  %65 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %64, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %69, align 8
  %71 = icmp eq %"class.blink::ContainerNode"* %70, %63
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 1, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::Node"*, %"class.blink::Node"** %75, align 8
  %77 = icmp eq %"class.blink::Node"* %74, %76
  br i1 %77, label %79, label %78

78:                                               ; preds = %72, %68
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0)
  br label %79

79:                                               ; preds = %72, %78, %62
  %80 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 3, i32 0, i32 0
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %80, align 8
  %82 = ptrtoint %"class.blink::ContainerNode"* %63 to i64
  %83 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %64 to i64*
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %79
  %87 = bitcast %"class.blink::ContainerNode"* %63 to i8*
  %88 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #10
  br label %89

89:                                               ; preds = %86, %79
  %90 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 1
  %91 = ptrtoint %"class.blink::Node"* %81 to i64
  %92 = bitcast %"class.blink::Member.6"* %90 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.blink::Node"* %81 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #10
  br label %98

98:                                               ; preds = %89, %95
  %99 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 2
  tail call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %99, %"class.WTF::StringView"* dereferenceable(24) %1) #10
  %100 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 8, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %101, %2
  %103 = select i1 %102, i32 %2, i32 %101
  store i32 %103, i32* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite14FindFosterSiteERNS_24HTMLConstructionSiteTaskE(%"class.blink::HTMLConstructionSite"*, %"struct.blink::HTMLConstructionSiteTask"* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3
  %8 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack7TopmostERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %7) #10
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3
  %13 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack7TopmostERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %12) #10
  %14 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %8, null
  %15 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %13, null
  br i1 %14, label %31, label %16

16:                                               ; preds = %2
  br i1 %15, label %19, label %17

17:                                               ; preds = %16
  %18 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack13ElementRecord7IsAboveEPS1_(%"class.blink::HTMLElementStack::ElementRecord"* nonnull %8, %"class.blink::HTMLElementStack::ElementRecord"* nonnull %13) #10
  br i1 %18, label %19, label %42

19:                                               ; preds = %16, %17
  %20 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %8 to %"class.blink::Element"***
  %21 = load %"class.blink::Element"**, %"class.blink::Element"*** %20, align 8
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2
  %24 = ptrtoint %"class.blink::Element"* %22 to i64
  %25 = bitcast %"class.blink::Member.2"* %23 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %83, label %28

28:                                               ; preds = %19
  %29 = bitcast %"class.blink::Element"* %22 to i8*
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #10
  br label %83

31:                                               ; preds = %2
  br i1 %15, label %32, label %42

32:                                               ; preds = %31
  %33 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %3) #10
  %34 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2
  %35 = ptrtoint %"class.blink::ContainerNode"* %33 to i64
  %36 = bitcast %"class.blink::Member.2"* %34 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %83, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::ContainerNode"* %33 to i8*
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #10
  br label %83

42:                                               ; preds = %17, %31
  %43 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %13 to %"class.blink::Element"***
  %44 = load %"class.blink::Element"**, %"class.blink::Element"*** %43, align 8
  %45 = load %"class.blink::Element"*, %"class.blink::Element"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %45, i64 0, i32 0, i32 0
  %47 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %46) #10
  %48 = icmp eq %"class.blink::ContainerNode"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2
  %51 = ptrtoint %"class.blink::ContainerNode"* %47 to i64
  %52 = bitcast %"class.blink::Member.2"* %50 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.blink::ContainerNode"* %47 to i8*
  %57 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %49, %55
  %59 = load %"class.blink::Element"**, %"class.blink::Element"*** %43, align 8
  %60 = load %"class.blink::Element"*, %"class.blink::Element"** %59, align 8
  %61 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 3
  %62 = ptrtoint %"class.blink::Element"* %60 to i64
  %63 = bitcast %"class.blink::Member.6"* %61 to i64*
  store atomic i64 %62, i64* %63 monotonic, align 8
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %83, label %66

66:                                               ; preds = %58
  %67 = bitcast %"class.blink::Element"* %60 to i8*
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #10
  br label %83

69:                                               ; preds = %42
  %70 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %13, i64 0, i32 1, i32 0, i32 0
  %71 = bitcast %"class.blink::HTMLElementStack::ElementRecord"** %70 to %"class.blink::Element"****
  %72 = load %"class.blink::Element"***, %"class.blink::Element"**** %71, align 8
  %73 = load %"class.blink::Element"**, %"class.blink::Element"*** %72, align 8
  %74 = load %"class.blink::Element"*, %"class.blink::Element"** %73, align 8
  %75 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %1, i64 0, i32 2
  %76 = ptrtoint %"class.blink::Element"* %74 to i64
  %77 = bitcast %"class.blink::Member.2"* %75 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %69
  %81 = bitcast %"class.blink::Element"* %74 to i8*
  %82 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #10
  br label %83

83:                                               ; preds = %80, %69, %66, %58, %39, %32, %28, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite8ReparentEPNS_16HTMLElementStack13ElementRecordES3_(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLElementStack::ElementRecord"* nocapture readonly, %"class.blink::HTMLElementStack::ElementRecord"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %5 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false)
  %6 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 0
  store i32 3, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.blink::ContainerNode"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false) #10
  %9 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2
  %14 = ptrtoint %"class.blink::ContainerNode"* %12 to i64
  %15 = bitcast %"class.blink::Member.2"* %13 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.blink::ContainerNode"* %12 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #10
  br label %21

21:                                               ; preds = %3, %18
  %22 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %24, align 8
  %26 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 4
  %27 = ptrtoint %"class.blink::ContainerNode"* %25 to i64
  %28 = bitcast %"class.blink::Member.6"* %26 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %21
  %32 = bitcast %"class.blink::ContainerNode"* %25 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #10
  br label %34

34:                                               ; preds = %21, %31
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  %35 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %36 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %63, label %41, !prof !3

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %35, i64 0, i32 0, i32 0, i32 0
  %43 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %42, align 8
  %44 = zext i32 %37 to i64
  %45 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %43, i64 %44
  %46 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %45, i64 0, i32 0
  store i32 3, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %43, i64 %44, i32 2
  %48 = load i64, i64* %15, align 8
  %49 = bitcast %"class.blink::Member.2"* %47 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %43, i64 %44, i32 3
  %51 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 3
  %52 = bitcast %"class.blink::Member.6"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::Member.6"* %50 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %43, i64 %44, i32 4
  %56 = load i64, i64* %28, align 8
  %57 = bitcast %"class.blink::Member.6"* %55 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %43, i64 %44, i32 5
  %59 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 5
  %60 = load i8, i8* %59, align 8, !range !2
  store i8 %60, i8* %58, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %45) #10
  %61 = load i32, i32* %36, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %36, align 4
  br label %64

63:                                               ; preds = %34
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"* %35, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %4) #10
  br label %64

64:                                               ; preds = %41, %63
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite8ReparentEPNS_16HTMLElementStack13ElementRecordEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLElementStack::ElementRecord"* nocapture readonly, %"class.blink::HTMLStackItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %5 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false)
  %6 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 0
  store i32 3, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.blink::ContainerNode"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false) #10
  %9 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2
  %14 = ptrtoint %"class.blink::ContainerNode"* %12 to i64
  %15 = bitcast %"class.blink::Member.2"* %13 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.blink::ContainerNode"* %12 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #10
  br label %21

21:                                               ; preds = %3, %18
  %22 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 4
  %25 = ptrtoint %"class.blink::ContainerNode"* %23 to i64
  %26 = bitcast %"class.blink::Member.6"* %24 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %21
  %30 = bitcast %"class.blink::ContainerNode"* %23 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #10
  br label %32

32:                                               ; preds = %21, %29
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  %33 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %34 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %61, label %39, !prof !3

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %33, i64 0, i32 0, i32 0, i32 0
  %41 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %40, align 8
  %42 = zext i32 %35 to i64
  %43 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %41, i64 %42
  %44 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %43, i64 0, i32 0
  store i32 3, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %41, i64 %42, i32 2
  %46 = load i64, i64* %15, align 8
  %47 = bitcast %"class.blink::Member.2"* %45 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %41, i64 %42, i32 3
  %49 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 3
  %50 = bitcast %"class.blink::Member.6"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.blink::Member.6"* %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %41, i64 %42, i32 4
  %54 = load i64, i64* %26, align 8
  %55 = bitcast %"class.blink::Member.6"* %53 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %41, i64 %42, i32 5
  %57 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 5
  %58 = load i8, i8* %57, align 8, !range !2
  store i8 %58, i8* %56, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %43) #10
  %59 = load i32, i32* %34, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %34, align 4
  br label %62

61:                                               ; preds = %32
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"* %33, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %4) #10
  br label %62

62:                                               ; preds = %39, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite24InsertAlreadyParsedChildEPNS_13HTMLStackItemEPNS_16HTMLElementStack13ElementRecordE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLStackItem"* nocapture readonly, %"class.blink::HTMLElementStack::ElementRecord"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %15, %17
  br i1 %18, label %71, label %19

19:                                               ; preds = %13, %3
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %9, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %71, label %32

32:                                               ; preds = %26, %19
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %9, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %71, label %45

45:                                               ; preds = %39, %32
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %9, %50
  br i1 %51, label %52, label %58

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %54, %56
  br i1 %57, label %71, label %58

58:                                               ; preds = %52, %45
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %9, %63
  br i1 %64, label %65, label %77

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %67, %69
  br i1 %70, label %71, label %77

71:                                               ; preds = %13, %26, %39, %52, %65
  %72 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %2, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %75, i64 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite12FosterParentEPNS_4NodeE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::Node"* %76)
  br label %137

77:                                               ; preds = %58, %65
  %78 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 40, i1 false)
  %79 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 0
  store i32 2, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %80, i64 1
  %82 = bitcast %"class.blink::ContainerNode"** %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 17, i1 false) #10
  %83 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %83, align 8
  %85 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2
  %86 = ptrtoint %"class.blink::ContainerNode"* %84 to i64
  %87 = bitcast %"class.blink::Member.2"* %85 to i64*
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %77
  %91 = bitcast %"class.blink::ContainerNode"* %84 to i8*
  %92 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #10
  br label %93

93:                                               ; preds = %77, %90
  %94 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %2, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %96, align 8
  %98 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 4
  %99 = ptrtoint %"class.blink::ContainerNode"* %97 to i64
  %100 = bitcast %"class.blink::Member.6"* %98 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %93
  %104 = bitcast %"class.blink::ContainerNode"* %97 to i8*
  %105 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %104) #10
  br label %106

106:                                              ; preds = %93, %103
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  %107 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %108 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %109, %111
  br i1 %112, label %135, label %113, !prof !3

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %107, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %114, align 8
  %116 = zext i32 %109 to i64
  %117 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %115, i64 %116
  %118 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %117, i64 0, i32 0
  store i32 2, i32* %118, align 8
  %119 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %115, i64 %116, i32 2
  %120 = load i64, i64* %87, align 8
  %121 = bitcast %"class.blink::Member.2"* %119 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %115, i64 %116, i32 3
  %123 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 3
  %124 = bitcast %"class.blink::Member.6"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.blink::Member.6"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %115, i64 %116, i32 4
  %128 = load i64, i64* %100, align 8
  %129 = bitcast %"class.blink::Member.6"* %127 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %115, i64 %116, i32 5
  %131 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 5
  %132 = load i8, i8* %131, align 8, !range !2
  store i8 %132, i8* %130, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %117) #10
  %133 = load i32, i32* %108, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %108, align 4
  br label %136

135:                                              ; preds = %106
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"* %107, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %4) #10
  br label %136

136:                                              ; preds = %113, %135
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #10
  br label %137

137:                                              ; preds = %136, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite15TakeAllChildrenEPNS_13HTMLStackItemEPNS_16HTMLElementStack13ElementRecordE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLStackItem"* nocapture readonly, %"class.blink::HTMLElementStack::ElementRecord"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::HTMLConstructionSiteTask", align 8
  %5 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false)
  %6 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 0
  store i32 4, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %7, i64 1
  %9 = bitcast %"class.blink::ContainerNode"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 17, i1 false) #10
  %10 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 2
  %13 = ptrtoint %"class.blink::ContainerNode"* %11 to i64
  %14 = bitcast %"class.blink::Member.2"* %12 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.blink::ContainerNode"* %11 to i8*
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #10
  br label %20

20:                                               ; preds = %3, %17
  %21 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 4
  %26 = ptrtoint %"class.blink::ContainerNode"* %24 to i64
  %27 = bitcast %"class.blink::Member.6"* %25 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::ContainerNode"* %24 to i8*
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #10
  br label %33

33:                                               ; preds = %20, %30
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %0, i32 0) #10
  %34 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0
  %35 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %62, label %40, !prof !3

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %34, i64 0, i32 0, i32 0, i32 0
  %42 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %41, align 8
  %43 = zext i32 %36 to i64
  %44 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %42, i64 %43
  %45 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %44, i64 0, i32 0
  store i32 4, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %42, i64 %43, i32 2
  %47 = load i64, i64* %14, align 8
  %48 = bitcast %"class.blink::Member.2"* %46 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %42, i64 %43, i32 3
  %50 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 3
  %51 = bitcast %"class.blink::Member.6"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::Member.6"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %42, i64 %43, i32 4
  %55 = load i64, i64* %27, align 8
  %56 = bitcast %"class.blink::Member.6"* %54 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %42, i64 %43, i32 5
  %58 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %4, i64 0, i32 5
  %59 = load i8, i8* %58, align 8, !range !2
  store i8 %59, i8* %57, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %44) #10
  %60 = load i32, i32* %35, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %35, align 4
  br label %63

62:                                               ; preds = %33
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"* %34, %"struct.blink::HTMLConstructionSiteTask"* nonnull dereferenceable(40) %4) #10
  br label %63

63:                                               ; preds = %40, %62
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CustomElementDefinition"* @_ZN5blink20HTMLConstructionSite29LookUpCustomElementDefinitionERNS_8DocumentERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* nocapture readnone, %"class.blink::Document"* nocapture readonly dereferenceable(2848), %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CustomElementDescriptor", align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %14, label %108

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 12, i32 0, i32 0
  %16 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %15, align 8
  %17 = icmp eq %"class.blink::LocalDOMWindow"* %16, null
  br i1 %17, label %108, label %18

18:                                               ; preds = %14
  %19 = tail call %"class.blink::CustomElementRegistry"* @_ZNK5blink14LocalDOMWindow19MaybeCustomElementsEv(%"class.blink::LocalDOMWindow"* nonnull %16) #10
  %20 = icmp eq %"class.blink::CustomElementRegistry"* %19, null
  br i1 %20, label %108, label %21

21:                                               ; preds = %18
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  %27 = select i1 %26, %"class.WTF::AtomicString"* %23, %"class.WTF::AtomicString"* %3
  %28 = bitcast %"class.blink::CustomElementDescriptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.blink::CustomElementDescriptor", %"class.blink::CustomElementDescriptor"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::CustomElementDescriptor", %"class.blink::CustomElementDescriptor"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::CustomElementDescriptor", %"class.blink::CustomElementDescriptor"* %5, i64 0, i32 1
  %33 = bitcast %"class.WTF::AtomicString"* %32 to i64*
  store i64 -6148914691236517206, i64* %33, align 8
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %29, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #10
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #10
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %36, %21
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %30, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #10
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %62
  tail call void @llvm.trap() #10
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %53, %57, %72
  %75 = call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry13DefinitionForERKNS_23CustomElementDescriptorE(%"class.blink::CustomElementRegistry"* nonnull %19, %"class.blink::CustomElementDescriptor"* nonnull dereferenceable(16) %5) #10
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #10
  br label %91

91:                                               ; preds = %90, %87, %74
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #10
  br label %107

107:                                              ; preds = %91, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  br label %108

108:                                              ; preds = %4, %14, %18, %107
  %109 = phi %"class.blink::CustomElementDefinition"* [ null, %4 ], [ null, %14 ], [ %75, %107 ], [ null, %18 ]
  ret %"class.blink::CustomElementDefinition"* %109
}

declare %"class.blink::CustomElementRegistry"* @_ZNK5blink14LocalDOMWindow19MaybeCustomElementsEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry13DefinitionForERKNS_23CustomElementDescriptorE(%"class.blink::CustomElementRegistry"*, %"class.blink::CustomElementDescriptor"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink9Microtask17PerformCheckpointEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZN5blink23CustomElementDefinition13CreateElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::CustomElementDefinition"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink13CustomElement36CreateUncustomizedOrUndefinedElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLStackItem"* @_ZN5blink20HTMLConstructionSite27CreateElementFromSavedTokenEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"* nocapture readonly, %"class.blink::HTMLStackItem"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Element"*, align 8
  %4 = alloca %"class.blink::AtomicHTMLToken", align 8
  %5 = alloca %"class.blink::AtomicHTMLToken"*, align 8
  %6 = bitcast %"class.blink::Element"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  store %"class.blink::Element"* inttoptr (i64 -6148914691236517206 to %"class.blink::Element"*), %"class.blink::Element"** %3, align 8
  %7 = bitcast %"class.blink::AtomicHTMLToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 0
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #10
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %19
  tail call void @llvm.trap() #10
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %2, %14, %29
  %32 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 6
  %34 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 18, i1 false) #10
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %33, %"class.WTF::Vector"* dereferenceable(16) %8) #10
  %35 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 3
  %36 = call %"class.blink::Element"* @_ZN5blink20HTMLConstructionSite13CreateElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::AtomicHTMLToken"* nonnull %4, %"class.WTF::AtomicString"* dereferenceable(8) %35)
  store %"class.blink::Element"* %36, %"class.blink::Element"** %3, align 8
  %37 = bitcast %"class.blink::AtomicHTMLToken"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  store %"class.blink::AtomicHTMLToken"* %4, %"class.blink::AtomicHTMLToken"** %5, align 8
  %38 = call %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringEEEEPS1_DpOT_(%"class.blink::Element"** nonnull dereferenceable(8) %3, %"class.blink::AtomicHTMLToken"** nonnull dereferenceable(8) %5, %"class.WTF::AtomicString"* dereferenceable(8) %35) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret %"class.blink::HTMLStackItem"* %38
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %3, align 8
  %5 = icmp eq %"class.blink::Attribute"* %4, null
  br i1 %5, label %41, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Attribute"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.blink::Attribute"* [ %34, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %33) #10
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %35 = icmp eq %"class.blink::Attribute"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #10
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %42, align 8
  store %"class.blink::DoctypeData"* null, %"class.blink::DoctypeData"** %42, align 8
  %44 = icmp eq %"class.blink::DoctypeData"* %43, null
  br i1 %44, label %69, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = icmp eq i16* %47, null
  %49 = bitcast i16* %47 to i8*
  br i1 %48, label %56, label %50, !prof !5

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 4, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #10
  store i16* null, i16** %46, align 8
  br label %56

56:                                               ; preds = %55, %45
  %57 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = icmp eq i16* %58, null
  %60 = bitcast i16* %58 to i8*
  br i1 %59, label %67, label %61, !prof !5

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 3, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65, !prof !3

65:                                               ; preds = %61
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %61
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #10
  br label %67

67:                                               ; preds = %66, %56
  %68 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 0
  tail call void @free(i8* %68) #10
  br label %69

69:                                               ; preds = %41, %67
  %70 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #10
  br label %86

86:                                               ; preds = %69, %82, %85
  %87 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #10
  br label %103

103:                                              ; preds = %86, %99, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20HTMLConstructionSite35IndexOfFirstUnopenFormattingElementERj(%"class.blink::HTMLConstructionSite"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  br label %9

9:                                                ; preds = %6, %23
  %10 = phi i32 [ %11, %23 ], [ %4, %6 ]
  %11 = add i32 %10, -1
  %12 = tail call dereferenceable(8) %"class.blink::HTMLFormattingElementList::Entry"* @_ZN3WTF6VectorIN5blink25HTMLFormattingElementList5EntryELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.65"* %7, i32 %11) #10
  %13 = getelementptr inbounds %"class.blink::HTMLFormattingElementList::Entry", %"class.blink::HTMLFormattingElementList::Entry"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %13, align 8
  %15 = icmp eq %"class.blink::HTMLStackItem"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::HTMLStackItem"* %14 to %"class.blink::Element"**
  %18 = load %"class.blink::Element"*, %"class.blink::Element"** %17, align 8
  %19 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack8ContainsEPNS_7ElementE(%"class.blink::HTMLElementStack"* %8, %"class.blink::Element"* %18) #10
  br i1 %19, label %20, label %23

20:                                               ; preds = %9, %16
  store i32 %10, i32* %1, align 4
  %21 = load i32, i32* %3, align 4
  %22 = icmp ult i32 %10, %21
  br label %26

23:                                               ; preds = %16
  %24 = icmp eq i32 %11, 0
  br i1 %24, label %25, label %9

25:                                               ; preds = %23
  store i32 0, i32* %1, align 4
  br label %26

26:                                               ; preds = %20, %25, %2
  %27 = phi i1 [ false, %2 ], [ true, %25 ], [ %22, %20 ]
  ret i1 %27
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack8ContainsEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %57, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  br label %8

8:                                                ; preds = %19, %5
  %9 = phi i32 [ %10, %19 ], [ %3, %5 ]
  %10 = add i32 %9, -1
  %11 = tail call dereferenceable(8) %"class.blink::HTMLFormattingElementList::Entry"* @_ZN3WTF6VectorIN5blink25HTMLFormattingElementList5EntryELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.65"* %6, i32 %10) #10
  %12 = getelementptr inbounds %"class.blink::HTMLFormattingElementList::Entry", %"class.blink::HTMLFormattingElementList::Entry"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %12, align 8
  %14 = icmp eq %"class.blink::HTMLStackItem"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::HTMLStackItem"* %13 to %"class.blink::Element"**
  %17 = load %"class.blink::Element"*, %"class.blink::Element"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack8ContainsEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* %17) #10
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = icmp eq i32 %10, 0
  br i1 %20, label %24, label %8

21:                                               ; preds = %8, %15
  %22 = load i32, i32* %2, align 4
  %23 = icmp ult i32 %9, %22
  br i1 %23, label %26, label %57

24:                                               ; preds = %19
  %25 = load i32, i32* %2, align 4
  br label %26

26:                                               ; preds = %24, %21
  %27 = phi i32 [ %22, %21 ], [ %25, %24 ]
  %28 = phi i32 [ %9, %21 ], [ 0, %24 ]
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %57

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %30, %53
  %33 = phi i32 [ %28, %30 ], [ %54, %53 ]
  %34 = tail call dereferenceable(8) %"class.blink::HTMLFormattingElementList::Entry"* @_ZN3WTF6VectorIN5blink25HTMLFormattingElementList5EntryELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.65"* %6, i32 %33) #10
  %35 = getelementptr inbounds %"class.blink::HTMLFormattingElementList::Entry", %"class.blink::HTMLFormattingElementList::Entry"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %35, align 8
  %37 = tail call %"class.blink::HTMLStackItem"* @_ZN5blink20HTMLConstructionSite27CreateElementFromSavedTokenEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::HTMLStackItem"* %36)
  %38 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %31, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %37, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %44, i64 0, i32 0
  tail call void @_ZN5blink20HTMLConstructionSite11AttachLaterEPNS_13ContainerNodeEPNS_4NodeEb(%"class.blink::HTMLConstructionSite"* %0, %"class.blink::ContainerNode"* %42, %"class.blink::Node"* %45, i1 zeroext false)
  tail call void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %7, %"class.blink::HTMLStackItem"* %37) #10
  %46 = ptrtoint %"class.blink::HTMLStackItem"* %37 to i64
  %47 = bitcast %"class.blink::HTMLFormattingElementList::Entry"* %34 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %32
  %51 = bitcast %"class.blink::HTMLStackItem"* %37 to i8*
  %52 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #10
  br label %53

53:                                               ; preds = %32, %50
  %54 = add nuw i32 %33, 1
  %55 = load i32, i32* %2, align 4
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %32, label %57

57:                                               ; preds = %53, %26, %1, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %5, align 8
  %7 = tail call fastcc zeroext i1 @_ZN5blinkL16HasImpliedEndTagEPKNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %6)
  br i1 %7, label %8, label %29

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  br label %13

13:                                               ; preds = %8, %24
  %14 = phi %"class.blink::HTMLStackItem"* [ %6, %8 ], [ %27, %24 ]
  %15 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %21, %22
  br i1 %23, label %29, label %24

24:                                               ; preds = %13, %19
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %12) #10
  %25 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %26, align 8
  %28 = tail call fastcc zeroext i1 @_ZN5blinkL16HasImpliedEndTagEPKNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %27)
  br i1 %28, label %13, label %29

29:                                               ; preds = %24, %19, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL16HasImpliedEndTagEPKNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* nocapture readonly) unnamed_addr #3 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE to %"class.blink::QualifiedName"**), align 8
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %133, label %16

16:                                               ; preds = %1, %10
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %6, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %133, label %29

29:                                               ; preds = %16, %23
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %6, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %133, label %42

42:                                               ; preds = %29, %36
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %6, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br i1 %54, label %133, label %55

55:                                               ; preds = %42, %49
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE to %"class.blink::QualifiedName"**), align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %6, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %133, label %68

68:                                               ; preds = %55, %62
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %6, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, %79
  br i1 %80, label %133, label %81

81:                                               ; preds = %68, %75
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRbTagE to %"class.blink::QualifiedName"**), align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %6, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %90, %92
  br i1 %93, label %133, label %94

94:                                               ; preds = %81, %88
  %95 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRpTagE to %"class.blink::QualifiedName"**), align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %6, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br i1 %106, label %133, label %107

107:                                              ; preds = %94, %101
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRtTagE to %"class.blink::QualifiedName"**), align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %6, %112
  br i1 %113, label %114, label %120

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %116, %118
  br i1 %119, label %133, label %120

120:                                              ; preds = %107, %114
  %121 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kRTCTagE to %"class.blink::QualifiedName"**), align 8
  %122 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %6, %125
  br i1 %126, label %127, label %133

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %129, %131
  br label %133

133:                                              ; preds = %127, %120, %114, %101, %88, %75, %62, %49, %36, %23, %10
  %134 = phi i1 [ true, %114 ], [ true, %101 ], [ true, %88 ], [ true, %75 ], [ true, %62 ], [ true, %49 ], [ true, %36 ], [ true, %23 ], [ true, %10 ], [ false, %120 ], [ %132, %127 ]
  ret i1 %134
}

declare void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %4, align 8
  %6 = tail call fastcc zeroext i1 @_ZN5blinkL16HasImpliedEndTagEPKNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %5)
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 5
  br label %9

9:                                                ; preds = %7, %9
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %8) #10
  %10 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %11, align 8
  %13 = tail call fastcc zeroext i1 @_ZN5blinkL16HasImpliedEndTagEPKNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %12)
  br i1 %13, label %9, label %14

14:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink20HTMLConstructionSite12InQuirksModeEv(%"class.blink::HTMLConstructionSite"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLConstructionSite", %"class.blink::HTMLConstructionSite"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack7TopmostERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16HTMLElementStack13ElementRecord7IsAboveEPS1_(%"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20HTMLConstructionSite11PendingText5TraceEPNS_7VisitorE(%"class.blink::HTMLConstructionSite::PendingText"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLConstructionSite::PendingText"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::HTMLConstructionSite::PendingText", %"class.blink::HTMLConstructionSite::PendingText"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.6"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL6InsertERNS_24HTMLConstructionSiteTaskE(%"struct.blink::HTMLConstructionSiteTask"* nocapture dereferenceable(40)) unnamed_addr #5 {
  %2 = alloca %"class.blink::CEReactionsScope", align 8
  %3 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %5, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp ne i32 %8, 0
  %10 = icmp eq %"class.blink::ContainerNode"* %5, null
  %11 = or i1 %10, %9
  br i1 %11, label %40, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %5, i64 0, i32 0
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.6"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %40

25:                                               ; preds = %12
  %26 = bitcast %"class.blink::ContainerNode"* %5 to %"class.blink::HTMLTemplateElement"*
  %27 = tail call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement15ContentInternalEv(%"class.blink::HTMLTemplateElement"* nonnull %26) #10
  %28 = ptrtoint %"class.blink::DocumentFragment"* %27 to i64
  %29 = bitcast %"class.blink::Member.2"* %3 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %27, i64 0, i32 0
  br i1 %31, label %37, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.blink::DocumentFragment"* %27 to i8*
  %35 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #10
  %36 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %4, align 8
  br label %37

37:                                               ; preds = %25, %33
  %38 = phi %"class.blink::ContainerNode"* [ %32, %25 ], [ %36, %33 ]
  %39 = icmp eq %"class.blink::ContainerNode"* %38, null
  br i1 %39, label %61, label %40

40:                                               ; preds = %37, %12, %1
  %41 = phi %"class.blink::ContainerNode"* [ %38, %37 ], [ %5, %12 ], [ %5, %1 ]
  %42 = bitcast %"class.blink::CEReactionsScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %2, i64 0, i32 1
  %44 = bitcast %"class.blink::CEReactionsScope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  %45 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %46 = bitcast %"class.blink::CEReactionsScope"* %2 to i64*
  store i64 %45, i64* %46, align 8
  store i8 0, i8* %43, align 8
  store %"class.blink::CEReactionsScope"* %2, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %47 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %0, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = icmp eq %"class.blink::Node"* %48, null
  %50 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %0, i64 0, i32 4, i32 0, i32 0
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  br i1 %49, label %53, label %52

52:                                               ; preds = %40
  call void @_ZN5blink13ContainerNode18ParserInsertBeforeEPNS_4NodeERS1_(%"class.blink::ContainerNode"* %41, %"class.blink::Node"* %51, %"class.blink::Node"* nonnull dereferenceable(64) %48) #10
  br label %54

53:                                               ; preds = %40
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %41, %"class.blink::Node"* %51) #10
  br label %54

54:                                               ; preds = %53, %52
  %55 = load i8, i8* %43, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %2) #10
  br label %58

58:                                               ; preds = %54, %57
  %59 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #10
  br label %61

61:                                               ; preds = %37, %58
  ret void
}

declare void @_ZN5blink13ContainerNode18ParserInsertBeforeEPNS_4NodeERS1_(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink13CharacterData16ParserAppendDataERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

declare void @_ZN5blink13ContainerNode25ParserTakeAllChildrenFromERS0_(%"class.blink::ContainerNode"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder4SwapERS0_(%"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"* dereferenceable(48)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink31NonSharedCharacterBreakIteratorC1EPKDsj(%"class.blink::NonSharedCharacterBreakIterator"*, i16*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink31NonSharedCharacterBreakIterator7IsBreakEi(%"class.blink::NonSharedCharacterBreakIterator"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink31NonSharedCharacterBreakIterator9PrecedingEi(%"class.blink::NonSharedCharacterBreakIterator"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"*) unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.73"*, %"struct.blink::HTMLConstructionSiteTask"*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.65, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %25
  ret %"class.blink::Attribute"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK5blink7Element24StripScriptingAttributesERN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink7Element19ParserSetAttributesERKN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #2

declare %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement15ContentInternalEv(%"class.blink::HTMLTemplateElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #10
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #10
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %9) #10
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #10
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 4
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"class.blink::Attribute"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"class.blink::Attribute"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %68, label %28

28:                                               ; preds = %17, %64
  %29 = phi %"class.blink::Attribute"* [ %65, %64 ], [ %18, %17 ]
  %30 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 16777216
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %41) #10
  br label %42

42:                                               ; preds = %40, %35, %28
  %43 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 1
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %26
  br i1 %67, label %68, label %28

68:                                               ; preds = %64, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.66, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.67, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::HTMLFormattingElementList::Entry"* @_ZN3WTF6VectorIN5blink25HTMLFormattingElementList5EntryELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.65"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.65, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLFormattingElementList::Entry"*, %"class.blink::HTMLFormattingElementList::Entry"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::HTMLFormattingElementList::Entry", %"class.blink::HTMLFormattingElementList::Entry"* %24, i64 %25
  ret %"class.blink::HTMLFormattingElementList::Entry"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.72"*, %"struct.blink::HTMLConstructionSiteTask"* dereferenceable(40)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %6, align 8
  %8 = icmp ugt %"struct.blink::HTMLConstructionSiteTask"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::HTMLConstructionSiteTask"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.72"* %0, i32 %5) #10
  %14 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.blink::HTMLConstructionSiteTask"* %1 to i64
  %17 = ptrtoint %"struct.blink::HTMLConstructionSiteTask"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 40
  tail call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.72"* %0, i32 %5) #10
  %20 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %6, align 8
  %21 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %23, i64 %26
  %28 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %24, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %28, align 8
  %31 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %23, i64 %26, i32 2
  %32 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %24, i64 0, i32 2
  %33 = bitcast %"class.blink::Member.2"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::Member.2"* %31 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %23, i64 %26, i32 3
  %37 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %24, i64 0, i32 3
  %38 = bitcast %"class.blink::Member.6"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::Member.6"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %23, i64 %26, i32 4
  %42 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %24, i64 0, i32 4
  %43 = bitcast %"class.blink::Member.6"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::Member.6"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %23, i64 %26, i32 5
  %47 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %24, i64 0, i32 5
  %48 = load i8, i8* %47, align 8, !range !2
  store i8 %48, i8* %46, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"* %27) #10
  %49 = load i32, i32* %3, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_(%"struct.blink::HTMLConstructionSiteTask"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %60, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %60, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %0, i64 0, i32 2
  %26 = bitcast %"class.blink::Member.2"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %35

35:                                               ; preds = %18, %29
  %36 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %0, i64 0, i32 3
  %37 = bitcast %"class.blink::Member.6"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %24, i8* nonnull %41, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %0, i64 0, i32 4
  %48 = bitcast %"class.blink::Member.6"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %24, i8* nonnull %52, i8* %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %57

57:                                               ; preds = %46, %51
  %58 = load i64, i64* %19, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %19, align 8
  br label %60

60:                                               ; preds = %1, %11, %57
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.68, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.65, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.72"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %8, align 8
  %10 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 1
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_24HTMLConstructionSiteTaskEEEmm(i64 %14) #10
  %16 = udiv i64 %15, 40
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #10
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 1, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"struct.blink::HTMLConstructionSiteTask"*
  %33 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 2
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_24HTMLConstructionSiteTaskEEEmm(i64 %37) #10
  %39 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %8, align 8
  %40 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 40, %34 ]
  %43 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #10
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = udiv i64 %42, 40
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #10
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #10
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.65, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.69, i64 0, i64 0)) #10
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #10
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.72"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %5, align 8
  %7 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::HTMLConstructionSiteTask"*
  %10 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %73

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %6 to i8*
  %26 = mul nuw nsw i64 %19, 40
  br i1 %24, label %28, label %27, !prof !3

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #10
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"struct.blink::HTMLConstructionSiteTask"* nonnull %9, i64 %19) #10
  br label %28

28:                                               ; preds = %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #10
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.73"* %20, %"struct.blink::HTMLConstructionSiteTask"* nonnull %6) #10
  br label %73

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_24HTMLConstructionSiteTaskEEEmm(i64 %30) #10
  %32 = udiv i64 %31, 40
  %33 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %32) #10
  %34 = bitcast %"class.blink::HeapVectorBacking"* %33 to %"struct.blink::HTMLConstructionSiteTask"*
  %35 = ptrtoint %"class.blink::HeapVectorBacking"* %33 to i64
  %36 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %39 = icmp ne %"class.blink::HeapVectorBacking"* %33, null
  %40 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %37, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %52, !prof !5

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = bitcast i8* %43 to %"struct.blink::HTMLConstructionSiteTask"*
  %45 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %37, %44
  %46 = load i32, i32* %38, align 4
  %47 = zext i32 %46 to i64
  %48 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %37 to i8*
  %49 = mul nuw nsw i64 %47, 40
  %50 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %33, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %50, i8* nonnull %48, i64 %49) #10
  br i1 %45, label %51, label %52

51:                                               ; preds = %42
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"struct.blink::HTMLConstructionSiteTask"* nonnull %34, i64 %47) #10
  br label %52

52:                                               ; preds = %29, %42, %51
  %53 = bitcast %"class.WTF::Vector.72"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = load i32, i32* %38, align 4
  %56 = zext i32 %55 to i64
  %57 = mul nuw nsw i64 %56, 40
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %54, i64 %57) #10
  %58 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %36, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 1, i64 0
  %60 = bitcast i8* %59 to %"struct.blink::HTMLConstructionSiteTask"*
  %61 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %58, %60
  br i1 %61, label %64, label %62, !prof !5

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.73"* %63, %"struct.blink::HTMLConstructionSiteTask"* %58) #10
  br label %64

64:                                               ; preds = %52, %62
  %65 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  store atomic i64 %35, i64* %65 monotonic, align 8
  %66 = trunc i64 %32 to i32
  %67 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %66, i32* %67, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %33, i64 0, i32 0
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #10
  br label %73

73:                                               ; preds = %70, %64, %28, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_24HTMLConstructionSiteTaskEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 3355443
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 3355443) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.66, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.70, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 40
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.72, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 40
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([158 x i8], [158 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_24HTMLConstructionSiteTaskENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.74, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %88, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.blink::HTMLConstructionSiteTask"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 40
  %51 = icmp ugt i64 %49, 39
  br i1 %51, label %52, label %88

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %85, %52
  %55 = phi i64 [ 0, %52 ], [ %86, %85 ]
  %56 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %30, i64 %55, i32 2
  %57 = bitcast %"class.blink::Member.2"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %65

65:                                               ; preds = %60, %54
  %66 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %30, i64 %55, i32 3
  %67 = bitcast %"class.blink::Member.6"* %66 to i64*
  %68 = load atomic i64, i64* %67 monotonic, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = inttoptr i64 %68 to i8*
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %0, i8* nonnull %71, i8* nonnull %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %75

75:                                               ; preds = %70, %65
  %76 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %30, i64 %55, i32 4
  %77 = bitcast %"class.blink::Member.6"* %76 to i64*
  %78 = load atomic i64, i64* %77 monotonic, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %75
  %81 = inttoptr i64 %78 to i8*
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, i64 5
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %0, i8* nonnull %81, i8* nonnull %81, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %85

85:                                               ; preds = %80, %75
  %86 = add nuw nsw i64 %55, 1
  %87 = icmp ult i64 %86, %50
  br i1 %87, label %54, label %88

88:                                               ; preds = %85, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"struct.blink::HTMLConstructionSiteTask"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.blink::HTMLConstructionSiteTask"* %0 to i8*
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %73, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %70, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %65, %25
  %28 = phi i8* [ %3, %25 ], [ %66, %65 ]
  %29 = phi i64 [ %1, %25 ], [ %30, %65 ]
  %30 = add i64 %29, -1
  %31 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %26, align 8
  %32 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %31, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds i8, i8* %28, i64 8
  %34 = bitcast i8* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %27
  %38 = inttoptr i64 %35 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %32, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %43

43:                                               ; preds = %27, %37
  %44 = getelementptr inbounds i8, i8* %28, i64 16
  %45 = bitcast i8* %44 to i64*
  %46 = load atomic i64, i64* %45 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %43
  %49 = inttoptr i64 %46 to i8*
  %50 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, i64 5
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, align 8
  tail call void %53(%"class.blink::Visitor"* %32, i8* nonnull %49, i8* %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %54

54:                                               ; preds = %43, %48
  %55 = getelementptr inbounds i8, i8* %28, i64 24
  %56 = bitcast i8* %55 to i64*
  %57 = load atomic i64, i64* %56 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = inttoptr i64 %57 to i8*
  %61 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %32, i8* nonnull %60, i8* %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %65

65:                                               ; preds = %54, %59
  %66 = getelementptr inbounds i8, i8* %28, i64 40
  %67 = icmp eq i64 %30, 0
  br i1 %67, label %68, label %27

68:                                               ; preds = %65
  %69 = load i64, i64* %21, align 8
  br label %70

70:                                               ; preds = %68, %20
  %71 = phi i64 [ %69, %68 ], [ %23, %20 ]
  %72 = add i64 %71, -1
  store i64 %72, i64* %21, align 8
  br label %73

73:                                               ; preds = %2, %13, %70
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::HTMLConstructionSiteTask"* @_ZN3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.65, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %24, i64 %25
  ret %"struct.blink::HTMLConstructionSiteTask"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.73"*, %"class.WTF::VectorBuffer.73"* dereferenceable(56), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [40 x i8], align 8
  %6 = trunc i64 %2 to i32
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = trunc i64 %3 to i32
  %10 = lshr i64 %3, 32
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 0, i32 0
  %13 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 1, i64 0
  %15 = bitcast i8* %14 to %"struct.blink::HTMLConstructionSiteTask"*
  %16 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %13, %15
  %17 = ptrtoint %"struct.blink::HTMLConstructionSiteTask"* %13 to i64
  br i1 %16, label %49, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 0
  %20 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 1, i64 0
  %22 = bitcast i8* %21 to %"struct.blink::HTMLConstructionSiteTask"*
  %23 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %20, %22
  br i1 %23, label %49, label %24

24:                                               ; preds = %18
  %25 = ptrtoint %"struct.blink::HTMLConstructionSiteTask"* %20 to i64
  %26 = bitcast %"class.WTF::VectorBuffer.73"* %1 to i64*
  %27 = bitcast %"class.WTF::VectorBuffer.73"* %0 to i64*
  store atomic i64 %17, i64* %26 monotonic, align 8
  store atomic i64 %25, i64* %27 monotonic, align 8
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 1
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 2
  %34 = load i32, i32* %32, align 4
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %32, align 4
  store i32 %34, i32* %33, align 4
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %24
  %39 = bitcast %"class.WTF::VectorBuffer.73"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #10
  br label %42

42:                                               ; preds = %24, %38
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %190, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.WTF::VectorBuffer.73"* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %190

49:                                               ; preds = %18, %4
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #10
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #10
  br label %56

56:                                               ; preds = %49, %54
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 14
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %60, align 8
  %63 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %12, align 8
  %64 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %63, %15
  br i1 %64, label %65, label %70

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 1, i64 0
  %69 = bitcast i8* %68 to %"struct.blink::HTMLConstructionSiteTask"*
  br label %70

70:                                               ; preds = %56, %65
  %71 = phi i32 [ %8, %65 ], [ 0, %56 ]
  %72 = phi i32 [ %6, %65 ], [ 0, %56 ]
  %73 = phi i32 [ %67, %65 ], [ 0, %56 ]
  %74 = phi i8* [ %14, %65 ], [ null, %56 ]
  %75 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %15, %65 ], [ null, %56 ]
  %76 = phi i8* [ %68, %65 ], [ null, %56 ]
  %77 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %69, %65 ], [ null, %56 ]
  %78 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 0
  %79 = load %"struct.blink::HTMLConstructionSiteTask"*, %"struct.blink::HTMLConstructionSiteTask"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 1, i64 0
  %81 = bitcast i8* %80 to %"struct.blink::HTMLConstructionSiteTask"*
  %82 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %79, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %70
  %84 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  br label %86

86:                                               ; preds = %70, %83
  %87 = phi i32 [ %11, %83 ], [ 0, %70 ]
  %88 = phi i32 [ %9, %83 ], [ 0, %70 ]
  %89 = phi i32 [ %85, %83 ], [ 0, %70 ]
  %90 = phi i8* [ %80, %83 ], [ null, %70 ]
  %91 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %81, %83 ], [ null, %70 ]
  %92 = phi i8* [ %14, %83 ], [ null, %70 ]
  %93 = phi %"struct.blink::HTMLConstructionSiteTask"* [ %15, %83 ], [ null, %70 ]
  %94 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 1
  %96 = load i32, i32* %94, align 4
  %97 = load i32, i32* %95, align 4
  store i32 %97, i32* %94, align 4
  store i32 %96, i32* %95, align 4
  %98 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %75, null
  %99 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %91, null
  %100 = or i1 %98, %99
  br i1 %100, label %116, label %101

101:                                              ; preds = %86
  %102 = bitcast %"class.WTF::VectorBuffer.73"* %1 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.WTF::VectorBuffer.73"* %0 to i64*
  store atomic i64 %103, i64* %104 monotonic, align 8
  %105 = ptrtoint i8* %80 to i64
  store atomic i64 %105, i64* %102 monotonic, align 8
  %106 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 0, i32 2
  %107 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 2
  %108 = load i32, i32* %106, align 4
  %109 = load i32, i32* %107, align 4
  store i32 %109, i32* %106, align 4
  store i32 %108, i32* %107, align 4
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %138, label %112

112:                                              ; preds = %101
  %113 = bitcast %"class.WTF::VectorBuffer.73"* %0 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #10
  br label %138

116:                                              ; preds = %86
  %117 = and i1 %98, %99
  br i1 %117, label %118, label %133

118:                                              ; preds = %116
  %119 = bitcast %"class.WTF::VectorBuffer.73"* %0 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.WTF::VectorBuffer.73"* %1 to i64*
  store atomic i64 %120, i64* %121 monotonic, align 8
  %122 = ptrtoint i8* %14 to i64
  store atomic i64 %122, i64* %119 monotonic, align 8
  %123 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 0, i32 2
  %124 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 2
  %125 = load i32, i32* %123, align 4
  %126 = load i32, i32* %124, align 4
  store i32 %126, i32* %123, align 4
  store i32 %125, i32* %124, align 4
  %127 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %138, label %129

129:                                              ; preds = %118
  %130 = bitcast %"class.WTF::VectorBuffer.73"* %1 to i8**
  %131 = load i8*, i8** %130, align 8
  %132 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %131) #10
  br label %138

133:                                              ; preds = %116
  %134 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %0, i64 0, i32 0, i32 2
  %135 = getelementptr inbounds %"class.WTF::VectorBuffer.73", %"class.WTF::VectorBuffer.73"* %1, i64 0, i32 0, i32 2
  %136 = load i32, i32* %134, align 4
  %137 = load i32, i32* %135, align 4
  store i32 %137, i32* %134, align 4
  store i32 %136, i32* %135, align 4
  br label %138

138:                                              ; preds = %129, %118, %112, %101, %133
  %139 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %75, null
  %140 = icmp ne i32 %88, %87
  %141 = getelementptr inbounds [40 x i8], [40 x i8]* %5, i64 0, i64 0
  %142 = icmp ne i32 %73, 0
  %143 = and i1 %139, %142
  %144 = icmp ne i32 %89, 0
  %145 = and i1 %99, %144
  br i1 %143, label %146, label %152

146:                                              ; preds = %138
  %147 = icmp eq i32 %72, %71
  %148 = icmp ne i32 %72, 0
  %149 = or i1 %147, %148
  %150 = icmp eq i32 %71, 0
  %151 = or i1 %150, %149
  br label %152

152:                                              ; preds = %146, %138
  %153 = phi i1 [ false, %138 ], [ %151, %146 ]
  br i1 %145, label %154, label %163

154:                                              ; preds = %152
  %155 = icmp eq i32 %88, 0
  %156 = and i1 %155, %140
  %157 = icmp ne i32 %87, 0
  %158 = and i1 %157, %156
  %159 = xor i1 %153, true
  %160 = or i1 %158, %159
  %161 = xor i1 %158, true
  br i1 %160, label %163, label %162

162:                                              ; preds = %154
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %141) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* align 8 %90, i64 40, i1 false) #10
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* %90, i8* %74, i64 40) #10
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* %74, i8* nonnull %141, i64 40) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %141) #10
  call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"struct.blink::HTMLConstructionSiteTask"* %75, i64 1) #10
  call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"struct.blink::HTMLConstructionSiteTask"* nonnull %91, i64 1) #10
  br label %176

163:                                              ; preds = %154, %152
  %164 = phi i1 [ false, %152 ], [ %161, %154 ]
  br i1 %153, label %165, label %170

165:                                              ; preds = %163
  %166 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %77, null
  %167 = and i1 %139, %166
  br i1 %167, label %168, label %169, !prof !5

168:                                              ; preds = %165
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %76, i8* nonnull %74, i64 40) #10
  call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"struct.blink::HTMLConstructionSiteTask"* nonnull %77, i64 1) #10
  br label %169

169:                                              ; preds = %165, %168
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %74, i64 40) #10
  br label %176

170:                                              ; preds = %163
  br i1 %164, label %171, label %176

171:                                              ; preds = %170
  %172 = icmp ne %"struct.blink::HTMLConstructionSiteTask"* %93, null
  %173 = and i1 %99, %172
  br i1 %173, label %174, label %175, !prof !5

174:                                              ; preds = %171
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %92, i8* nonnull %90, i64 40) #10
  call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"struct.blink::HTMLConstructionSiteTask"* nonnull %93, i64 1) #10
  br label %175

175:                                              ; preds = %171, %174
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %90, i64 40) #10
  br label %176

176:                                              ; preds = %162, %175, %170, %169
  %177 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %178 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %177, i64 0, i32 1
  %179 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %178) #10
  %180 = icmp eq i8* %179, null
  br i1 %180, label %181, label %183, !prof !3

181:                                              ; preds = %176
  %182 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %178, i8* %182) #10
  br label %183

183:                                              ; preds = %176, %181
  %184 = phi i8* [ %182, %181 ], [ %179, %176 ]
  %185 = bitcast i8* %184 to %"class.blink::ThreadState"**
  %186 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %186, i64 0, i32 14
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, -1
  store i64 %189, i64* %187, align 8
  br label %190

190:                                              ; preds = %45, %42, %183
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLFormElement"*
  tail call void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZNK5blink16HTMLElementStack5TraceEPNS_7VisitorE(%"class.blink::HTMLElementStack"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_25HTMLFormattingElementList5EntryEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_25HTMLFormattingElementList5EntryEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::HTMLFormattingElementList::Entry"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 3
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"class.blink::HTMLFormattingElementList::Entry", %"class.blink::HTMLFormattingElementList::Entry"* %30, i64 %55
  %57 = bitcast %"class.blink::HTMLFormattingElementList::Entry"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv) #10
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink24HTMLConstructionSiteTaskELj1ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES3_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.72"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.blink::HTMLConstructionSiteTask"*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::Vector.72"* %0 to i8**
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %10 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, i64 11
  %12 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8** %8) #10
  br label %65

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 1, i64 0
  %15 = bitcast i8* %14 to %"struct.blink::HTMLConstructionSiteTask"*
  %16 = icmp eq %"struct.blink::HTMLConstructionSiteTask"* %15, %5
  %17 = bitcast %"class.WTF::Vector.72"* %0 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #10
  %22 = inttoptr i64 %4 to i8*
  br i1 %16, label %28, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %22, i8* nonnull %22, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_24HTMLConstructionSiteTaskEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %65

28:                                               ; preds = %13
  %29 = bitcast %"class.blink::Visitor"* %1 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %30 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %30, i64 4
  %32 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::Visitor"* %1, i8* %22, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN3WTF8internal17DeferredTraceImplIN5blink13HeapAllocatorEPNS2_7VisitorENS2_24HTMLConstructionSiteTaskELj1EEEvT0_PKv, i64 40) #10
  br i1 %33, label %65, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %36 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 2
  %37 = bitcast %"class.blink::Member.2"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %34
  %41 = inttoptr i64 %38 to i8*
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %45

45:                                               ; preds = %40, %34
  %46 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 3
  %47 = bitcast %"class.blink::Member.6"* %46 to i64*
  %48 = load atomic i64, i64* %47 monotonic, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = inttoptr i64 %48 to i8*
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, i64 5
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8* nonnull %51, i8* nonnull %51, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %55

55:                                               ; preds = %50, %45
  %56 = getelementptr inbounds %"struct.blink::HTMLConstructionSiteTask", %"struct.blink::HTMLConstructionSiteTask"* %5, i64 0, i32 4
  %57 = bitcast %"class.blink::Member.6"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %1, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %65

65:                                               ; preds = %55, %60, %23, %28, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8internal17DeferredTraceImplIN5blink13HeapAllocatorEPNS2_7VisitorENS2_24HTMLConstructionSiteTaskELj1EEEvT0_PKv(%"class.blink::Visitor"*, i8*) #0 comdat {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = bitcast i8* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %3, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %8, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %3, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %23

23:                                               ; preds = %18, %13
  %24 = getelementptr inbounds i8, i8* %1, i64 24
  %25 = bitcast i8* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %3, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %0, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %33

33:                                               ; preds = %28, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLHtmlElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHtmlElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #10
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLHtmlElement"*
  tail call void @_ZN5blink15HTMLHtmlElementC1ERNS_8DocumentE(%"class.blink::HTMLHtmlElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #10
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLHtmlElement"* %51
}

declare void @_ZN5blink15HTMLHtmlElementC1ERNS_8DocumentE(%"class.blink::HTMLHtmlElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_15HTMLHtmlElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::HTMLHtmlElement"** dereferenceable(8), %"class.blink::AtomicHTMLToken"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #10
  %4 = bitcast i8* %3 to %"class.blink::HTMLStackItem"*
  %5 = bitcast %"class.blink::HTMLHtmlElement"** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %1, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = bitcast i8* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %2
  %33 = getelementptr inbounds i8, i8* %3, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::Vector"*
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* dereferenceable(16) %35) #10
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %32, %41, %56
  %59 = getelementptr inbounds i8, i8* %3, i64 40
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %3, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  ret %"class.blink::HTMLStackItem"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13HTMLStackItemEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13HTMLStackItemEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HTMLStackItem"*
  tail call void @_ZN5blink13HTMLStackItemD2Ev(%"class.blink::HTMLStackItem"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13HTMLStackItemEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HTMLStackItemD2Ev(%"class.blink::HTMLStackItem"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %20, align 8
  %22 = icmp eq %"class.blink::Attribute"* %21, null
  br i1 %22, label %58, label %23, !prof !5

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::Attribute"* %21 to i8*
  %25 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %56, label %28, !prof !3

28:                                               ; preds = %23
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %21, i64 %29
  br label %31

31:                                               ; preds = %49, %28
  %32 = phi %"class.blink::Attribute"* [ %51, %49 ], [ %21, %28 ]
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %49

49:                                               ; preds = %48, %45, %31
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %50) #10
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %30
  br i1 %52, label %53, label %31

53:                                               ; preds = %49
  store i32 0, i32* %25, align 4
  %54 = bitcast %"class.WTF::Vector"* %19 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %23
  %57 = phi i8* [ %55, %53 ], [ %24, %23 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #10
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %20, align 8
  br label %58

58:                                               ; preds = %18, %56
  %59 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %58, %71, %74
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DocumentType"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DocumentTypeEE4CallIJRNS_6MemberINS_8DocumentEEERKN3WTF12AtomicStringERKNS8_6StringESE_EEEPS1_DpOT_(%"class.blink::Member.0"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %6 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %10 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %9, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi i32 [ %6, %4 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %5, i64 0, i32 19, i64 6
  %14 = bitcast %"class.blink::BaseArena"** %13 to %"class.blink::NormalPageArena"**
  %15 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 96
  br i1 %18, label %49, label %19, !prof !3

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 96
  store i8* %22, i8** %20, align 8
  %23 = add i64 %17, -96
  store i64 %23, i64* %16, align 8
  %24 = bitcast i8* %21 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %21, i64 4
  %26 = bitcast i8* %25 to i16*
  %27 = trunc i32 %12 to i16
  %28 = shl i16 %27, 2
  store atomic i16 %28, i16* %26 monotonic, align 2
  %29 = getelementptr inbounds i8, i8* %21, i64 6
  %30 = bitcast i8* %29 to i16*
  store i16 48, i16* %30, align 2
  %31 = ptrtoint i8* %21 to i64
  %32 = and i64 %31, -131072
  %33 = inttoptr i64 %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 4400
  %35 = bitcast i8* %34 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %36 = bitcast i8* %34 to i64*
  %37 = load i64, i64* %36, align 16
  %38 = sub i64 %31, %37
  %39 = lshr i64 %38, 3
  %40 = lshr i64 %38, 6
  %41 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %35, i64 0, i32 0, i32 1, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 7
  %45 = shl i32 1, %44
  %46 = trunc i32 %45 to i8
  %47 = or i8 %42, %46
  store atomic i8 %47, i8* %41 release, align 1
  %48 = getelementptr inbounds i8, i8* %21, i64 8
  br label %52

49:                                               ; preds = %11
  %50 = zext i32 %12 to i64
  %51 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %15, i64 96, i64 %50) #10
  br label %52

52:                                               ; preds = %19, %49
  %53 = phi i8* [ %48, %19 ], [ %51, %49 ]
  %54 = bitcast i8* %53 to %"class.blink::DocumentType"*
  %55 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %0, i64 0, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  tail call void @_ZN5blink12DocumentTypeC1EPNS_8DocumentERKN3WTF6StringES6_S6_(%"class.blink::DocumentType"* %54, %"class.blink::Document"* %56, %"class.WTF::String"* dereferenceable(8) %57, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3) #10
  %58 = getelementptr inbounds i8, i8* %53, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  ret %"class.blink::DocumentType"* %54
}

declare void @_ZN5blink12DocumentTypeC1EPNS_8DocumentERKN3WTF6StringES6_S6_(%"class.blink::DocumentType"*, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJPNS_7ElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::Element"** dereferenceable(8), %"class.blink::AtomicHTMLToken"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #10
  %4 = bitcast i8* %3 to %"class.blink::HTMLStackItem"*
  %5 = bitcast %"class.blink::Element"** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %1, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = bitcast i8* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %2
  %33 = getelementptr inbounds i8, i8* %3, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::Vector"*
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* dereferenceable(16) %35) #10
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %32, %41, %56
  %59 = getelementptr inbounds i8, i8* %3, i64 40
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %3, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  ret %"class.blink::HTMLStackItem"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::Element"** dereferenceable(8), %"class.blink::AtomicHTMLToken"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #10
  %4 = bitcast i8* %3 to %"class.blink::HTMLStackItem"*
  %5 = bitcast %"class.blink::Element"** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %1, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = bitcast i8* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %2
  %33 = getelementptr inbounds i8, i8* %3, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::Vector"*
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* dereferenceable(16) %35) #10
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %32, %41, %56
  %59 = getelementptr inbounds i8, i8* %3, i64 40
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %3, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  ret %"class.blink::HTMLStackItem"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_15HTMLFormElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::HTMLFormElement"** dereferenceable(8), %"class.blink::AtomicHTMLToken"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #10
  %4 = bitcast i8* %3 to %"class.blink::HTMLStackItem"*
  %5 = bitcast %"class.blink::HTMLFormElement"** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %1, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = bitcast i8* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %2
  %33 = getelementptr inbounds i8, i8* %3, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::Vector"*
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* dereferenceable(16) %35) #10
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %32, %41, %56
  %59 = getelementptr inbounds i8, i8* %3, i64 40
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %3, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  ret %"class.blink::HTMLStackItem"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_19HTMLTemplateElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::HTMLTemplateElement"** dereferenceable(8), %"class.blink::AtomicHTMLToken"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #10
  %4 = bitcast i8* %3 to %"class.blink::HTMLStackItem"*
  %5 = bitcast %"class.blink::HTMLTemplateElement"** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %1, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = bitcast i8* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %2
  %33 = getelementptr inbounds i8, i8* %3, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::Vector"*
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* dereferenceable(16) %35) #10
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %32, %41, %56
  %59 = getelementptr inbounds i8, i8* %3, i64 40
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %3, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  ret %"class.blink::HTMLStackItem"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLScriptElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLScriptElementEE4CallIJRNS_8DocumentERNS_18CreateElementFlagsEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 144
  br i1 %16, label %47, label %17, !prof !3

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 144
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -144
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 72, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 144, i64 %48) #10
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLScriptElement"*
  tail call void @_ZN5blink17HTMLScriptElementC1ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLScriptElement"* %52, %"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %1) #10
  %53 = getelementptr inbounds i8, i8* %51, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLScriptElement"* %52
}

declare void @_ZN5blink17HTMLScriptElementC1ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLScriptElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_17HTMLScriptElementERPNS_15AtomicHTMLTokenEEEEPS1_DpOT_(%"class.blink::HTMLScriptElement"** dereferenceable(8), %"class.blink::AtomicHTMLToken"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #10
  %4 = bitcast i8* %3 to %"class.blink::HTMLStackItem"*
  %5 = bitcast %"class.blink::HTMLScriptElement"** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %1, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = bitcast i8* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %2
  %33 = getelementptr inbounds i8, i8* %3, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::Vector"*
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* dereferenceable(16) %35) #10
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %32, %41, %56
  %59 = getelementptr inbounds i8, i8* %3, i64 40
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %3, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  ret %"class.blink::HTMLStackItem"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementERPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringEEEEPS1_DpOT_(%"class.blink::Element"** dereferenceable(8), %"class.blink::AtomicHTMLToken"** dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #10
  %5 = bitcast i8* %4 to %"class.blink::HTMLStackItem"*
  %6 = bitcast %"class.blink::Element"** %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %1, align 8
  %9 = bitcast i8* %4 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %3
  %33 = getelementptr inbounds i8, i8* %4, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::Vector"*
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %8, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* dereferenceable(16) %35) #10
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds i8, i8* %4, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %32, %41, %56
  %59 = getelementptr inbounds i8, i8* %4, i64 40
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %4, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  ret %"class.blink::HTMLStackItem"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStackItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLStackItemEE4CallIJRPNS_7ElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringEEEEPS1_DpOT_(%"class.blink::Element"** dereferenceable(8), %"class.blink::AtomicHTMLToken"** dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #10
  %5 = bitcast i8* %4 to %"class.blink::HTMLStackItem"*
  %6 = bitcast %"class.blink::Element"** %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = load %"class.blink::AtomicHTMLToken"*, %"class.blink::AtomicHTMLToken"** %1, align 8
  %9 = bitcast i8* %4 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %3
  %33 = getelementptr inbounds i8, i8* %4, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::Vector"*
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %8, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* dereferenceable(16) %35) #10
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds i8, i8* %4, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %32, %41, %56
  %59 = getelementptr inbounds i8, i8* %4, i64 40
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %4, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  ret %"class.blink::HTMLStackItem"* %5
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1073205, i32 2146410443}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv"}
!9 = !{!10, !12, !7}
!10 = distinct !{!10, !11, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE: argument 0"}
!11 = distinct !{!11, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE"}
!12 = distinct !{!12, !13, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE"}
!17 = distinct !{!17, !18, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE: argument 0"}
!18 = distinct !{!18, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv"}
!25 = !{!26, !28, !23}
!26 = distinct !{!26, !27, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE: argument 0"}
!27 = distinct !{!27, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE"}
!28 = distinct !{!28, !29, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE: argument 0"}
!29 = distinct !{!29, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv: argument 0"}
!32 = distinct !{!32, !"_ZNK5blink20HTMLConstructionSite21GetCreateElementFlagsEv"}
!33 = !{!34, !36, !31}
!34 = distinct !{!34, !35, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE: argument 0"}
!35 = distinct !{!35, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE"}
!36 = distinct !{!36, !37, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE: argument 0"}
!37 = distinct !{!37, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE"}
