; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/remb.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/remb.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::rtcp::Remb" = type { %"class.webrtc::rtcp::Psfb", i64, %"class.std::__1::vector" }
%"class.webrtc::rtcp::Psfb" = type { %"class.webrtc::rtcp::RtcpPacket.base", i32 }
%"class.webrtc::rtcp::RtcpPacket.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.webrtc::rtcp::CommonHeader" = type { i8, i8, i8, i32, i8* }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.webrtc::rtcp::RtcpPacket" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN6webrtc4rtcp4PsfbD0Ev = comdat any

$_ZN6webrtc4rtcp10RtcpPacketD2Ev = comdat any

$_ZN6webrtc4rtcp10RtcpPacketD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN6webrtc4rtcp4PsfbE = comdat any

$_ZTVN6webrtc4rtcp10RtcpPacketE = comdat any

@_ZTVN6webrtc4rtcp4RembE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::Remb"*)* @_ZN6webrtc4rtcp4RembD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::Remb"*)* @_ZN6webrtc4rtcp4RembD0Ev to i8*), i8* bitcast (i64 (%"class.webrtc::rtcp::Remb"*)* @_ZNK6webrtc4rtcp4Remb11BlockLengthEv to i8*), i8* bitcast (i1 (%"class.webrtc::rtcp::Remb"*, i8*, i64*, i64, i8*, {}*)* @_ZNK6webrtc4rtcp4Remb6CreateEPhPmmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [69 x i8] c"../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/remb.cc\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Payload length \00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c" is too small for Remb packet.\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"Payload size \00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c" does not match \00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c" ssrcs.\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"Invalid remb bitrate value : \00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"*2^\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"Not enough space for all given SSRCs.\00", align 1
@_ZTVN6webrtc4rtcp4PsfbE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::Psfb"*)* @_ZN6webrtc4rtcp4PsfbD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN6webrtc4rtcp10RtcpPacketE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc4rtcp4RembC1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::Remb"*), void (%"class.webrtc::rtcp::Remb"*)* @_ZN6webrtc4rtcp4RembC2Ev
@_ZN6webrtc4rtcp4RembC1ERKS1_ = hidden unnamed_addr alias void (%"class.webrtc::rtcp::Remb"*, %"class.webrtc::rtcp::Remb"*), void (%"class.webrtc::rtcp::Remb"*, %"class.webrtc::rtcp::Remb"*)* @_ZN6webrtc4rtcp4RembC2ERKS1_
@_ZN6webrtc4rtcp4RembD1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::Remb"*), void (%"class.webrtc::rtcp::Remb"*)* @_ZN6webrtc4rtcp4RembD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4RembC2Ev(%"class.webrtc::rtcp::Remb"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %4, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4RembE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 1
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4RembC2ERKS1_(%"class.webrtc::rtcp::Remb"*, %"class.webrtc::rtcp::Remb"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp10RtcpPacketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4PsfbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4RembE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %1, i64 0, i32 2
  %15 = bitcast %"class.std::__1::vector"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10
  %16 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %1, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %2
  %25 = icmp ugt i64 %22, 4611686018427387903
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #11
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #12
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 1
  %32 = bitcast i32** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector"* %13 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds i32, i32* %30, i64 %22
  %35 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i32* %34, i32** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = load i64, i64* %17, align 8
  %39 = bitcast i32** %31 to i64*
  %40 = ptrtoint i8* %29 to i64
  %41 = ptrtoint i32* %37 to i64
  %42 = sub i64 %38, %41
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %28
  %45 = lshr exact i64 %42, 2
  %46 = bitcast i32* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 %46, i64 %42, i1 false) #10
  %47 = getelementptr inbounds i32, i32* %30, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %28
  %50 = phi i64 [ %48, %44 ], [ %40, %28 ]
  store i64 %50, i64* %39, align 8
  br label %51

51:                                               ; preds = %2, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4RembD2Ev(%"class.webrtc::rtcp::Remb"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4RembE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4RembD0Ev(%"class.webrtc::rtcp::Remb"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4RembE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.webrtc::rtcp::Remb"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc4rtcp4Remb5ParseERKNS0_12CommonHeaderE(%"class.webrtc::rtcp::Remb"*, %"class.webrtc::rtcp::CommonHeader"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = icmp ult i32 %8, 16
  br i1 %10, label %11, label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %12) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 53, i32 2, i32 0, i32 0) #10
  %13 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %13 to %"class.std::__1::basic_ostream"*
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15) #10
  %16 = load i32, i32* %7, align 4
  %17 = zext i32 %16 to i64
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %15, i64 %17) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i64 30) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %12) #10
  br label %200

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 4
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds i8, i8* %22, i64 9
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds i8, i8* %22, i64 10
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds i8, i8* %22, i64 11
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 1380273474
  br i1 %41, label %42, label %200

42:                                               ; preds = %20
  %43 = getelementptr inbounds i8, i8* %22, i64 12
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  %47 = add nuw nsw i64 %46, 16
  %48 = icmp eq i64 %47, %9
  br i1 %48, label %60, label %49

49:                                               ; preds = %42
  %50 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %50) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 64, i32 2, i32 0, i32 0) #10
  %51 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %52 = bitcast %"class.std::__1::basic_ostringstream"* %51 to %"class.std::__1::basic_ostream"*
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i64 13) #10
  %54 = load i32, i32* %7, align 4
  %55 = zext i32 %54 to i64
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %53, i64 %55) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 16) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %44, i8* %3, align 1
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* nonnull %3, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %50) #10
  br label %200

60:                                               ; preds = %42
  %61 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc4rtcp4Psfb19ParseCommonFeedbackEPKh(%"class.webrtc::rtcp::Psfb"* %61, i8* %22) #10
  %62 = getelementptr inbounds i8, i8* %22, i64 13
  %63 = load i8, i8* %62, align 1
  %64 = lshr i8 %63, 2
  %65 = and i8 %63, 3
  %66 = zext i8 %65 to i64
  %67 = shl nuw nsw i64 %66, 16
  %68 = getelementptr inbounds i8, i8* %22, i64 14
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = shl nuw nsw i64 %70, 8
  %72 = getelementptr inbounds i8, i8* %22, i64 15
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = or i64 %71, %74
  %76 = or i64 %75, %67
  %77 = zext i8 %64 to i64
  %78 = shl i64 %76, %77
  %79 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 1
  store i64 %78, i64* %79, align 8
  %80 = lshr i64 %78, %77
  %81 = icmp eq i64 %80, %76
  br i1 %81, label %91, label %82

82:                                               ; preds = %60
  %83 = zext i8 %64 to i32
  %84 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %84) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 77, i32 1, i32 0, i32 0) #10
  %85 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %86 = bitcast %"class.std::__1::basic_ostringstream"* %85 to %"class.std::__1::basic_ostream"*
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %86, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i64 29) #10
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %87, i64 %76) #10
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %88, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #10
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %89, i32 %83) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %84) #10
  br label %200

91:                                               ; preds = %60
  %92 = getelementptr inbounds i8, i8* %22, i64 16
  %93 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2
  %94 = bitcast %"class.std::__1::vector"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 1
  %97 = bitcast i32** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast i32** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %100, %95
  %102 = ashr exact i64 %101, 2
  %103 = icmp ult i64 %102, %45
  br i1 %103, label %104, label %113

104:                                              ; preds = %91
  %105 = tail call i8* @_Znwm(i64 %46) #12
  %106 = bitcast i8* %105 to i32*
  %107 = ptrtoint i8* %105 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %45
  %109 = ptrtoint i32* %108 to i64
  store i64 %107, i64* %94, align 8
  store i64 %107, i64* %97, align 8
  store i64 %109, i64* %99, align 8
  %110 = icmp eq i64 %95, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %104
  %112 = inttoptr i64 %95 to i8*
  tail call void @_ZdlPv(i8* %112) #12
  br label %113

113:                                              ; preds = %91, %104, %111
  %114 = icmp eq i8 %44, 0
  br i1 %114, label %200, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 0
  br label %117

117:                                              ; preds = %196, %115
  %118 = phi i8 [ 0, %115 ], [ %198, %196 ]
  %119 = phi i8* [ %92, %115 ], [ %197, %196 ]
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw i32 %121, 24
  %123 = getelementptr inbounds i8, i8* %119, i64 1
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = shl nuw nsw i32 %125, 16
  %127 = or i32 %126, %122
  %128 = getelementptr inbounds i8, i8* %119, i64 2
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = shl nuw nsw i32 %130, 8
  %132 = or i32 %127, %131
  %133 = getelementptr inbounds i8, i8* %119, i64 3
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = or i32 %132, %135
  %137 = load i32*, i32** %96, align 8
  %138 = load i32*, i32** %98, align 8
  %139 = icmp ult i32* %137, %138
  %140 = ptrtoint i32* %138 to i64
  br i1 %139, label %141, label %144

141:                                              ; preds = %117
  store i32 %136, i32* %137, align 4
  %142 = getelementptr inbounds i32, i32* %137, i64 1
  %143 = ptrtoint i32* %142 to i64
  store i64 %143, i64* %97, align 8
  br label %196

144:                                              ; preds = %117
  %145 = ptrtoint i32* %137 to i64
  %146 = load i64, i64* %94, align 8
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 2
  %149 = add nsw i64 %148, 1
  %150 = icmp ugt i64 %149, 4611686018427387903
  br i1 %150, label %151, label %153

151:                                              ; preds = %144
  %152 = bitcast %"class.std::__1::vector"* %93 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %152) #11
  unreachable

153:                                              ; preds = %144
  %154 = sub i64 %140, %146
  %155 = ashr exact i64 %154, 2
  %156 = icmp ult i64 %155, 2305843009213693951
  br i1 %156, label %157, label %165

157:                                              ; preds = %153
  %158 = ashr exact i64 %154, 1
  %159 = icmp ult i64 %158, %149
  %160 = select i1 %159, i64 %149, i64 %158
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %157
  %163 = icmp ugt i64 %160, 4611686018427387903
  br i1 %163, label %164, label %165

164:                                              ; preds = %162
  tail call void @abort() #11
  unreachable

165:                                              ; preds = %162, %153
  %166 = phi i64 [ %160, %162 ], [ 4611686018427387903, %153 ]
  %167 = shl i64 %166, 2
  %168 = tail call i8* @_Znwm(i64 %167) #12
  %169 = bitcast i8* %168 to i32*
  br label %170

170:                                              ; preds = %165, %157
  %171 = phi i64 [ %166, %165 ], [ 0, %157 ]
  %172 = phi i32* [ %169, %165 ], [ null, %157 ]
  %173 = getelementptr inbounds i32, i32* %172, i64 %148
  %174 = getelementptr inbounds i32, i32* %172, i64 %171
  %175 = ptrtoint i32* %174 to i64
  store i32 %136, i32* %173, align 4
  %176 = getelementptr inbounds i32, i32* %173, i64 1
  %177 = ptrtoint i32* %176 to i64
  %178 = load i32*, i32** %116, align 8
  %179 = load i64, i64* %97, align 8
  %180 = ptrtoint i32* %178 to i64
  %181 = sub i64 %179, %180
  %182 = ashr exact i64 %181, 2
  %183 = sub nsw i64 0, %182
  %184 = getelementptr inbounds i32, i32* %173, i64 %183
  %185 = ptrtoint i32* %184 to i64
  %186 = icmp sgt i64 %181, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %170
  %188 = bitcast i32* %184 to i8*
  %189 = bitcast i32* %178 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 %181, i1 false) #10
  %190 = load i32*, i32** %116, align 8
  br label %191

191:                                              ; preds = %187, %170
  %192 = phi i32* [ %178, %170 ], [ %190, %187 ]
  store i64 %185, i64* %94, align 8
  store i64 %177, i64* %97, align 8
  store i64 %175, i64* %99, align 8
  %193 = icmp eq i32* %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = bitcast i32* %192 to i8*
  tail call void @_ZdlPv(i8* %195) #12
  br label %196

196:                                              ; preds = %141, %191, %194
  %197 = getelementptr inbounds i8, i8* %119, i64 4
  %198 = add nuw i8 %118, 1
  %199 = icmp eq i8 %198, %44
  br i1 %199, label %200, label %117

200:                                              ; preds = %196, %113, %20, %82, %49, %11
  %201 = phi i1 [ false, %11 ], [ false, %20 ], [ false, %49 ], [ false, %82 ], [ true, %113 ], [ true, %196 ]
  ret i1 %201
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6webrtc4rtcp4Psfb19ParseCommonFeedbackEPKh(%"class.webrtc::rtcp::Psfb"*, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc4rtcp4Remb8SetSsrcsENSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.webrtc::rtcp::Remb"* nocapture, %"class.std::__1::vector"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ugt i64 %10, 255
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %13) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 95, i32 2, i32 0, i32 0) #10
  %14 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %14 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %13) #10
  br label %41

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = ptrtoint i32* %20 to i64
  %24 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 1
  %25 = bitcast i32** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast i32* %20 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  %27 = bitcast %"class.std::__1::vector"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #10
  %28 = load i64, i64* %7, align 8
  br label %29

29:                                               ; preds = %17, %22
  %30 = phi i64 [ %28, %22 ], [ %8, %17 ]
  %31 = bitcast %"class.std::__1::vector"* %18 to i64*
  store i64 %30, i64* %31, align 8
  %32 = load i64, i64* %5, align 8
  %33 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 1
  %34 = bitcast i32** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i32** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast i32** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #10
  br label %41

41:                                               ; preds = %29, %12
  %42 = phi i1 [ false, %12 ], [ true, %29 ]
  ret i1 %42
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp4Remb11BlockLengthEv(%"class.webrtc::rtcp::Remb"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, 20
  %9 = sub i64 %8, %7
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc4rtcp4Remb6CreateEPhPmmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::Remb"*, i8*, i64*, i64, i8*, {}*) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.webrtc::rtcp::Remb"* %0 to i64 (%"class.webrtc::rtcp::Remb"*)***
  %8 = bitcast %"class.webrtc::rtcp::Remb"* %0 to %"class.webrtc::rtcp::RtcpPacket"*
  br label %9

9:                                                ; preds = %17, %6
  %10 = load i64, i64* %2, align 8
  %11 = load i64 (%"class.webrtc::rtcp::Remb"*)**, i64 (%"class.webrtc::rtcp::Remb"*)*** %7, align 8
  %12 = getelementptr inbounds i64 (%"class.webrtc::rtcp::Remb"*)*, i64 (%"class.webrtc::rtcp::Remb"*)** %11, i64 2
  %13 = load i64 (%"class.webrtc::rtcp::Remb"*)*, i64 (%"class.webrtc::rtcp::Remb"*)** %12, align 8
  %14 = tail call i64 %13(%"class.webrtc::rtcp::Remb"* %0) #10
  %15 = add i64 %14, %10
  %16 = icmp ugt i64 %15, %3
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  %18 = tail call zeroext i1 @_ZNK6webrtc4rtcp10RtcpPacket12OnBufferFullEPhPmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::RtcpPacket"* %8, i8* %1, i64* %2, i8* %4, {}* %5) #10
  br i1 %18, label %9, label %142

19:                                               ; preds = %9
  %20 = load i64 (%"class.webrtc::rtcp::Remb"*)**, i64 (%"class.webrtc::rtcp::Remb"*)*** %7, align 8
  %21 = getelementptr inbounds i64 (%"class.webrtc::rtcp::Remb"*)*, i64 (%"class.webrtc::rtcp::Remb"*)** %20, i64 2
  %22 = load i64 (%"class.webrtc::rtcp::Remb"*)*, i64 (%"class.webrtc::rtcp::Remb"*)** %21, align 8
  %23 = tail call i64 %22(%"class.webrtc::rtcp::Remb"* %0) #10
  %24 = tail call i64 @_ZNK6webrtc4rtcp10RtcpPacket12HeaderLengthEv(%"class.webrtc::rtcp::RtcpPacket"* %8) #10
  tail call void @_ZN6webrtc4rtcp10RtcpPacket12CreateHeaderEmhmPhPm(i64 15, i8 zeroext -50, i64 %24, i8* %1, i64* %2) #10
  %25 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 0
  %26 = load i64, i64* %2, align 8
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  tail call void @_ZNK6webrtc4rtcp4Psfb20CreateCommonFeedbackEPh(%"class.webrtc::rtcp::Psfb"* %25, i8* %27) #10
  %28 = load i64, i64* %2, align 8
  %29 = add i64 %28, 8
  store i64 %29, i64* %2, align 8
  %30 = getelementptr inbounds i8, i8* %1, i64 %29
  store i8 82, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 69, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %30, i64 2
  store i8 77, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %30, i64 3
  store i8 66, i8* %33, align 1
  %34 = load i64, i64* %2, align 8
  %35 = add i64 %34, 4
  store i64 %35, i64* %2, align 8
  %36 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %37, 262143
  br i1 %38, label %39, label %48

39:                                               ; preds = %19, %39
  %40 = phi i64 [ %42, %39 ], [ %37, %19 ]
  %41 = phi i8 [ %43, %39 ], [ 0, %19 ]
  %42 = lshr i64 %40, 1
  %43 = add nuw nsw i8 %41, 1
  %44 = icmp ugt i64 %40, 524287
  br i1 %44, label %39, label %45

45:                                               ; preds = %39
  %46 = zext i8 %43 to i64
  %47 = shl nuw nsw i64 %46, 2
  br label %48

48:                                               ; preds = %45, %19
  %49 = phi i64 [ 0, %19 ], [ %47, %45 ]
  %50 = phi i64 [ %37, %19 ], [ %42, %45 ]
  %51 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2
  %52 = getelementptr inbounds %"class.webrtc::rtcp::Remb", %"class.webrtc::rtcp::Remb"* %0, i64 0, i32 2, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector"* %51 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = lshr exact i64 %57, 2
  %59 = trunc i64 %58 to i8
  %60 = add i64 %34, 5
  store i64 %60, i64* %2, align 8
  %61 = getelementptr inbounds i8, i8* %1, i64 %35
  store i8 %59, i8* %61, align 1
  %62 = lshr i64 %50, 16
  %63 = or i64 %49, %62
  %64 = trunc i64 %63 to i8
  %65 = load i64, i64* %2, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %2, align 8
  %67 = getelementptr inbounds i8, i8* %1, i64 %65
  store i8 %64, i8* %67, align 1
  %68 = load i64, i64* %2, align 8
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  %70 = trunc i64 %50 to i16
  %71 = lshr i16 %70, 8
  %72 = trunc i16 %71 to i8
  store i8 %72, i8* %69, align 1
  %73 = trunc i64 %50 to i8
  %74 = getelementptr inbounds i8, i8* %69, i64 1
  store i8 %73, i8* %74, align 1
  %75 = load i64, i64* %2, align 8
  %76 = add i64 %75, 2
  store i64 %76, i64* %2, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %51, i64 0, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = load i32*, i32** %52, align 8
  %80 = icmp eq i32* %78, %79
  br i1 %80, label %142, label %81

81:                                               ; preds = %48
  %82 = ptrtoint i32* %78 to i64
  %83 = getelementptr i32, i32* %79, i64 -1
  %84 = ptrtoint i32* %83 to i64
  %85 = sub i64 %84, %82
  %86 = and i64 %85, 4
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %104

88:                                               ; preds = %81
  %89 = load i32, i32* %78, align 4
  %90 = getelementptr inbounds i8, i8* %1, i64 %76
  %91 = lshr i32 %89, 24
  %92 = trunc i32 %91 to i8
  store i8 %92, i8* %90, align 1
  %93 = lshr i32 %89, 16
  %94 = trunc i32 %93 to i8
  %95 = getelementptr inbounds i8, i8* %90, i64 1
  store i8 %94, i8* %95, align 1
  %96 = lshr i32 %89, 8
  %97 = trunc i32 %96 to i8
  %98 = getelementptr inbounds i8, i8* %90, i64 2
  store i8 %97, i8* %98, align 1
  %99 = trunc i32 %89 to i8
  %100 = getelementptr inbounds i8, i8* %90, i64 3
  store i8 %99, i8* %100, align 1
  %101 = load i64, i64* %2, align 8
  %102 = add i64 %101, 4
  store i64 %102, i64* %2, align 8
  %103 = getelementptr inbounds i32, i32* %78, i64 1
  br label %104

104:                                              ; preds = %88, %81
  %105 = phi i64 [ %76, %81 ], [ %102, %88 ]
  %106 = phi i32* [ %78, %81 ], [ %103, %88 ]
  %107 = icmp ult i64 %85, 4
  br i1 %107, label %142, label %108

108:                                              ; preds = %104, %108
  %109 = phi i64 [ %139, %108 ], [ %105, %104 ]
  %110 = phi i32* [ %140, %108 ], [ %106, %104 ]
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds i8, i8* %1, i64 %109
  %113 = lshr i32 %111, 24
  %114 = trunc i32 %113 to i8
  store i8 %114, i8* %112, align 1
  %115 = lshr i32 %111, 16
  %116 = trunc i32 %115 to i8
  %117 = getelementptr inbounds i8, i8* %112, i64 1
  store i8 %116, i8* %117, align 1
  %118 = lshr i32 %111, 8
  %119 = trunc i32 %118 to i8
  %120 = getelementptr inbounds i8, i8* %112, i64 2
  store i8 %119, i8* %120, align 1
  %121 = trunc i32 %111 to i8
  %122 = getelementptr inbounds i8, i8* %112, i64 3
  store i8 %121, i8* %122, align 1
  %123 = load i64, i64* %2, align 8
  %124 = add i64 %123, 4
  store i64 %124, i64* %2, align 8
  %125 = getelementptr inbounds i32, i32* %110, i64 1
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds i8, i8* %1, i64 %124
  %128 = lshr i32 %126, 24
  %129 = trunc i32 %128 to i8
  store i8 %129, i8* %127, align 1
  %130 = lshr i32 %126, 16
  %131 = trunc i32 %130 to i8
  %132 = getelementptr inbounds i8, i8* %127, i64 1
  store i8 %131, i8* %132, align 1
  %133 = lshr i32 %126, 8
  %134 = trunc i32 %133 to i8
  %135 = getelementptr inbounds i8, i8* %127, i64 2
  store i8 %134, i8* %135, align 1
  %136 = trunc i32 %126 to i8
  %137 = getelementptr inbounds i8, i8* %127, i64 3
  store i8 %136, i8* %137, align 1
  %138 = load i64, i64* %2, align 8
  %139 = add i64 %138, 4
  store i64 %139, i64* %2, align 8
  %140 = getelementptr inbounds i32, i32* %110, i64 2
  %141 = icmp eq i32* %140, %79
  br i1 %141, label %142, label %108

142:                                              ; preds = %17, %104, %108, %48
  %143 = phi i1 [ true, %48 ], [ true, %108 ], [ true, %104 ], [ false, %17 ]
  ret i1 %143
}

declare zeroext i1 @_ZNK6webrtc4rtcp10RtcpPacket12OnBufferFullEPhPmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::RtcpPacket"*, i8*, i64*, i8*, {}*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN6webrtc4rtcp10RtcpPacket12CreateHeaderEmhmPhPm(i64, i8 zeroext, i64, i8*, i64*) local_unnamed_addr #3

declare i64 @_ZNK6webrtc4rtcp10RtcpPacket12HeaderLengthEv(%"class.webrtc::rtcp::RtcpPacket"*) local_unnamed_addr #3

declare void @_ZNK6webrtc4rtcp4Psfb20CreateCommonFeedbackEPh(%"class.webrtc::rtcp::Psfb"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp4PsfbD0Ev(%"class.webrtc::rtcp::Psfb"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp10RtcpPacketD2Ev(%"class.webrtc::rtcp::RtcpPacket"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp10RtcpPacketD0Ev(%"class.webrtc::rtcp::RtcpPacket"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
