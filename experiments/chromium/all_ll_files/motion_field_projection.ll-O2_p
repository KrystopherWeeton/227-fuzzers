; ModuleID = '../../third_party/libgav1/src/src/dsp/motion_field_projection.cc'
source_filename = "../../third_party/libgav1/src/src/dsp/motion_field_projection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array", %"struct.std::__1::array.0", %"struct.std::__1::array.0", %"struct.std::__1::array.1", %"struct.std::__1::array.2", %"class.libgav1::Array2D", %"class.libgav1::Array2D.4" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::array.0" = type { [8 x i8] }
%"struct.std::__1::array.1" = type { [8 x i8] }
%"struct.std::__1::array.2" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"class.libgav1::Array2D.4" = type { %"class.std::__1::unique_ptr.5", i64, i64, %"class.libgav1::Array2DView.11" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }
%"class.libgav1::Array2DView.11" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.4", %"class.libgav1::Array2D.12" }
%"class.libgav1::Array2D.12" = type { %"class.std::__1::unique_ptr.13", i64, i64, %"class.libgav1::Array2DView.19" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.libgav1::Array2DView.19" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav13dsp27MotionFieldProjectionInit_CEv() local_unnamed_addr #0 {
  %1 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 8) #2
  %2 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 21
  store void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)* @_ZN7libgav13dsp12_GLOBAL__N_129MotionFieldProjectionKernel_CERKNS_13ReferenceInfoEiiiiiiPNS_19TemporalMotionFieldE, void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)** %2, align 8
  %3 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 10) #2
  %4 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %3, i64 0, i32 21
  store void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)* @_ZN7libgav13dsp12_GLOBAL__N_129MotionFieldProjectionKernel_CERKNS_13ReferenceInfoEiiiiiiPNS_19TemporalMotionFieldE, void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)** %4, align 8
  ret void
}

declare %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_129MotionFieldProjectionKernel_CERKNS_13ReferenceInfoEiiiiiiPNS_19TemporalMotionFieldE(%"struct.libgav1::ReferenceInfo"* nocapture readonly dereferenceable(128), i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"* nocapture readonly) #0 {
  %9 = getelementptr inbounds %"struct.libgav1::TemporalMotionField", %"struct.libgav1::TemporalMotionField"* %7, i64 0, i32 0, i32 3, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = icmp sgt i32 %5, 8
  %13 = select i1 %12, i32 %5, i32 8
  %14 = add nsw i32 %13, -8
  %15 = add nsw i32 %6, 8
  %16 = icmp slt i32 %10, %15
  %17 = select i1 %16, i32 %10, i32 %15
  %18 = sext i32 %3 to i64
  %19 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 5, i32 3, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, %18
  %23 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 5, i32 3, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %22
  %26 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 6, i32 3, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = mul nsw i64 %28, %18
  %30 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 6, i32 3, i32 2
  %31 = load %"struct.libgav1::MotionVector"*, %"struct.libgav1::MotionVector"** %30, align 8
  %32 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %31, i64 %29
  %33 = getelementptr inbounds %"struct.libgav1::TemporalMotionField", %"struct.libgav1::TemporalMotionField"* %7, i64 0, i32 1, i32 3, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = mul nsw i64 %35, %18
  %37 = getelementptr inbounds %"struct.libgav1::TemporalMotionField", %"struct.libgav1::TemporalMotionField"* %7, i64 0, i32 1, i32 3, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  %40 = mul nsw i64 %11, %18
  %41 = getelementptr inbounds %"struct.libgav1::TemporalMotionField", %"struct.libgav1::TemporalMotionField"* %7, i64 0, i32 0, i32 3, i32 2
  %42 = load %"struct.libgav1::MotionVector"*, %"struct.libgav1::MotionVector"** %41, align 8
  %43 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %42, i64 %40
  %44 = zext i32 %14 to i64
  %45 = sext i32 %17 to i64
  br label %46

46:                                               ; preds = %133, %8
  %47 = phi i8* [ %25, %8 ], [ %134, %133 ]
  %48 = phi %"struct.libgav1::MotionVector"* [ %32, %8 ], [ %135, %133 ]
  %49 = phi i8* [ %39, %8 ], [ %136, %133 ]
  %50 = phi %"struct.libgav1::MotionVector"* [ %43, %8 ], [ %137, %133 ]
  %51 = phi i32 [ %3, %8 ], [ %138, %133 ]
  %52 = and i32 %51, -8
  %53 = sub nsw i32 %52, %51
  %54 = sub nsw i32 %4, %51
  %55 = add nsw i32 %53, 8
  %56 = icmp slt i32 %55, %54
  %57 = select i1 %56, i32 %55, i32 %54
  br label %58

58:                                               ; preds = %130, %46
  %59 = phi i64 [ %131, %130 ], [ %44, %46 ]
  %60 = getelementptr inbounds i8, i8* %47, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i64
  %63 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 3, i32 0, i64 %62
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %130

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %48, i64 %59
  %68 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 4, i32 0, i64 %62
  %69 = load i16, i16* %68, align 2
  %70 = sext i16 %69 to i32
  %71 = bitcast %"struct.libgav1::MotionVector"* %67 to [2 x i16]*
  %72 = mul i32 %70, %1
  %73 = bitcast %"struct.libgav1::MotionVector"* %67 to i16*
  %74 = load i16, i16* %73, align 2
  %75 = sext i16 %74 to i32
  %76 = mul i32 %72, %75
  %77 = ashr i32 %76, 31
  %78 = add i32 %76, 8192
  %79 = add i32 %78, %77
  %80 = ashr i32 %79, 14
  %81 = icmp slt i32 %80, 16383
  %82 = select i1 %81, i32 %80, i32 16383
  %83 = icmp sgt i32 %82, -16383
  %84 = select i1 %83, i32 %82, i32 -16383
  %85 = getelementptr inbounds [2 x i16], [2 x i16]* %71, i64 0, i64 1
  %86 = load i16, i16* %85, align 2
  %87 = sext i16 %86 to i32
  %88 = mul i32 %72, %87
  %89 = ashr i32 %88, 31
  %90 = add i32 %88, 8192
  %91 = add i32 %90, %89
  %92 = ashr i32 %91, 14
  %93 = icmp slt i32 %92, 16383
  %94 = select i1 %93, i32 %92, i32 16383
  %95 = sdiv i32 %84, 64
  %96 = xor i32 %95, %2
  %97 = sub i32 %96, %2
  %98 = icmp sge i32 %97, %53
  %99 = icmp slt i32 %97, %57
  %100 = and i1 %98, %99
  br i1 %100, label %101, label %130

101:                                              ; preds = %66
  %102 = icmp sgt i32 %94, -16383
  %103 = select i1 %102, i32 %94, i32 -16383
  %104 = trunc i64 %59 to i32
  %105 = and i32 %104, 2147483640
  %106 = add nsw i32 %105, -8
  %107 = icmp sgt i32 %106, %5
  %108 = select i1 %107, i32 %106, i32 %5
  %109 = add nuw nsw i32 %105, 16
  %110 = icmp slt i32 %109, %6
  %111 = select i1 %110, i32 %109, i32 %6
  %112 = sdiv i32 %103, 64
  %113 = xor i32 %112, %2
  %114 = sub i32 %104, %2
  %115 = add i32 %113, %114
  %116 = icmp sge i32 %115, %108
  %117 = icmp slt i32 %115, %111
  %118 = and i1 %116, %117
  br i1 %118, label %119, label %130

119:                                              ; preds = %101
  %120 = sext i32 %97 to i64
  %121 = mul nsw i64 %120, %11
  %122 = sext i32 %115 to i64
  %123 = add nsw i64 %121, %122
  %124 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %67, i64 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %50, i64 %123, i32 0, i32 0
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 2, i32 0, i64 %62
  %128 = load i8, i8* %127, align 1
  %129 = getelementptr inbounds i8, i8* %49, i64 %123
  store i8 %128, i8* %129, align 1
  br label %130

130:                                              ; preds = %66, %101, %119, %58
  %131 = add nuw nsw i64 %59, 1
  %132 = icmp slt i64 %131, %45
  br i1 %132, label %58, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds i8, i8* %47, i64 %11
  %135 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %48, i64 %11
  %136 = getelementptr inbounds i8, i8* %49, i64 %11
  %137 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %50, i64 %11
  %138 = add nsw i32 %51, 1
  %139 = icmp slt i32 %138, %4
  br i1 %139, label %46, label %140

140:                                              ; preds = %133
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
