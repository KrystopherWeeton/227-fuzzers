; ModuleID = '../../v8/src/heap/allocation-observer.cc'
source_filename = "../../v8/src/heap/allocation-observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::PauseAllocationObserversScope" = type { %"class.v8::internal::Heap"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.53", %"class.std::__1::vector.57", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.106", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.110", %"class.std::__1::vector.110", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %"class.std::__1::shared_ptr.207", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.208", %"class.std::__1::unique_ptr.234", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.240", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.253", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.259", i8, [7 x i8], %"class.std::__1::unordered_map.285", %"class.std::__1::unordered_map.311", %"class.std::__1::unordered_map.285", %"class.std::__1::unordered_map.335", %"class.std::__1::vector.363", i8, %"class.std::__1::unique_ptr.370", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.24" }
%"class.std::__1::__hash_table.24" = type <{ %"class.std::__1::unique_ptr.25", %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.42", [4 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27", %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base.28"** }
%"struct.std::__1::__hash_node_base.28" = type { %"struct.std::__1::__hash_node_base.28"* }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__bucket_list_deallocator.30" }
%"class.std::__1::__bucket_list_deallocator.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::__hash_node_base.28" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.48", %"struct.std::__1::atomic.48", %"struct.std::__1::atomic.48" }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i64 }
%"class.v8::internal::Isolate" = type opaque
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i32 }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.std::__1::pair.59"*, %"struct.std::__1::pair.59"*, %"class.std::__1::__compressed_pair.60" }
%"struct.std::__1::pair.59" = type opaque
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::pair.59"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.91" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.48", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.48", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.48", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type opaque
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.97", %"struct.std::__1::atomic.101", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { i8 }
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.105" }
%"class.std::__1::shared_ptr.105" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl.108" }
%"struct.std::__1::__cxx_atomic_impl.108" = type { %"struct.std::__1::__cxx_atomic_base_impl.109" }
%"struct.std::__1::__cxx_atomic_base_impl.109" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.112" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.207" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.208" = type { %"class.std::__1::__hash_table.209" }
%"class.std::__1::__hash_table.209" = type <{ %"class.std::__1::unique_ptr.210", %"class.std::__1::__compressed_pair.220", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.228", [4 x i8] }>
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212", %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::__hash_node_base.213"** }
%"struct.std::__1::__hash_node_base.213" = type { %"struct.std::__1::__hash_node_base.213"* }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.std::__1::__bucket_list_deallocator.215" }
%"class.std::__1::__bucket_list_deallocator.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base.213" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.246", %"class.std::__1::vector.246" }
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.v8::internal::Object"* }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_set.259" = type { %"class.std::__1::__hash_table.260" }
%"class.std::__1::__hash_table.260" = type <{ %"class.std::__1::unique_ptr.261", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.280", [4 x i8] }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base.264"** }
%"struct.std::__1::__hash_node_base.264" = type { %"struct.std::__1::__hash_node_base.264"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator.266" }
%"class.std::__1::__bucket_list_deallocator.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base.264" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.311" = type { %"class.std::__1::__hash_table.312" }
%"class.std::__1::__hash_table.312" = type <{ %"class.std::__1::unique_ptr.313", %"class.std::__1::__compressed_pair.323", %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.331", [4 x i8] }>
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315", %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.std::__1::__hash_node_base.316"** }
%"struct.std::__1::__hash_node_base.316" = type { %"struct.std::__1::__hash_node_base.316"* }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.std::__1::__bucket_list_deallocator.318" }
%"class.std::__1::__bucket_list_deallocator.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.std::__1::__hash_node_base.316" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.305", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::__hash_node_base.290" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.335" = type { %"class.std::__1::__hash_table.336" }
%"class.std::__1::__hash_table.336" = type <{ %"class.std::__1::unique_ptr.337", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.357", [4 x i8] }>
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339", %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.std::__1::__hash_node_base.340"** }
%"struct.std::__1::__hash_node_base.340" = type { %"struct.std::__1::__hash_node_base.340"* }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.std::__1::__bucket_list_deallocator.342" }
%"class.std::__1::__bucket_list_deallocator.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.std::__1::__hash_node_base.340" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.363" = type { %"class.std::__1::__vector_base.364" }
%"class.std::__1::__vector_base.364" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.365" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::SpaceIterator" = type <{ i32 (...)**, %"class.v8::internal::Heap"*, i32, [4 x i8] }>

$_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNKSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"step_run\00", align 1

@_ZN2v88internal29PauseAllocationObserversScopeC1EPNS0_4HeapE = hidden unnamed_addr alias void (%"class.v8::internal::PauseAllocationObserversScope"*, %"class.v8::internal::Heap"*), void (%"class.v8::internal::PauseAllocationObserversScope"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal29PauseAllocationObserversScopeC2EPNS0_4HeapE
@_ZN2v88internal29PauseAllocationObserversScopeD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::PauseAllocationObserversScope"*), void (%"class.v8::internal::PauseAllocationObserversScope"*)* @_ZN2v88internal29PauseAllocationObserversScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationCounter21AddAllocationObserverEPNS0_18AllocationObserverE(%"class.v8::internal::AllocationCounter"*, %"class.v8::internal::AllocationObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %76, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %10, align 8
  %12 = icmp ult %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %9, %11
  %13 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %11 to i64
  br i1 %12, label %14, label %21

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %9, i64 0, i32 0
  store %"class.v8::internal::AllocationObserver"* %1, %"class.v8::internal::AllocationObserver"** %15, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %9, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %9, i64 1
  %18 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %17 to i64
  %19 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %8 to i64*
  %20 = bitcast i64* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  store i64 %18, i64* %19, align 8
  br label %170

21:                                               ; preds = %6
  %22 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %9 to i64
  %23 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %8 to i64*
  %24 = bitcast %"class.std::__1::vector"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = sdiv exact i64 %26, 24
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 768614336404564650
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #10
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %10 to i64*
  %34 = sub i64 %13, %25
  %35 = sdiv exact i64 %34, 24
  %36 = icmp ult i64 %35, 384307168202282325
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37, %32
  %43 = phi i64 [ %40, %37 ], [ 768614336404564650, %32 ]
  %44 = mul i64 %43, 24
  %45 = tail call i8* @_Znwm(i64 %44) #11
  %46 = bitcast i8* %45 to %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*
  br label %47

47:                                               ; preds = %42, %37
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %49, i64 %27
  %51 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %49, i64 %48
  %52 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %51 to i64
  %53 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %50, i64 0, i32 0
  store %"class.v8::internal::AllocationObserver"* %1, %"class.v8::internal::AllocationObserver"** %53, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %49, i64 %27, i32 1
  %55 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %50, i64 1
  %56 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %58 = bitcast i64* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false)
  %59 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %57, align 8
  %60 = load i64, i64* %23, align 8
  %61 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %59 to i64
  %62 = sub i64 %60, %61
  %63 = sdiv exact i64 %62, -24
  %64 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %50, i64 %63
  %65 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %64 to i64
  %66 = icmp sgt i64 %62, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %47
  %68 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %64 to i8*
  %69 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %62, i1 false) #12
  %70 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %57, align 8
  br label %71

71:                                               ; preds = %67, %47
  %72 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %59, %47 ], [ %70, %67 ]
  store i64 %65, i64* %24, align 8
  store i64 %56, i64* %23, align 8
  store i64 %52, i64* %33, align 8
  %73 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %72, null
  br i1 %73, label %170, label %74

74:                                               ; preds = %71
  %75 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #11
  br label %170

76:                                               ; preds = %2
  %77 = bitcast %"class.v8::internal::AllocationObserver"* %1 to i64 (%"class.v8::internal::AllocationObserver"*)***
  %78 = load i64 (%"class.v8::internal::AllocationObserver"*)**, i64 (%"class.v8::internal::AllocationObserver"*)*** %77, align 8
  %79 = getelementptr inbounds i64 (%"class.v8::internal::AllocationObserver"*)*, i64 (%"class.v8::internal::AllocationObserver"*)** %78, i64 3
  %80 = load i64 (%"class.v8::internal::AllocationObserver"*)*, i64 (%"class.v8::internal::AllocationObserver"*)** %79, align 8
  %81 = tail call i64 %80(%"class.v8::internal::AllocationObserver"* %1) #12
  %82 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %81
  %85 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 1
  %86 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %88 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %87, align 8
  %89 = icmp ult %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %86, %88
  %90 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %88 to i64
  br i1 %89, label %91, label %99

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %86, i64 0, i32 0
  store %"class.v8::internal::AllocationObserver"* %1, %"class.v8::internal::AllocationObserver"** %92, align 8
  %93 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %86, i64 0, i32 1
  store i64 %83, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %86, i64 0, i32 2
  store i64 %84, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %86, i64 1
  %96 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %95 to i64
  %97 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %85 to i64*
  store i64 %96, i64* %97, align 8
  %98 = bitcast %"class.v8::internal::AllocationCounter"* %0 to i64*
  br label %155

99:                                               ; preds = %76
  %100 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %86 to i64
  %101 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %85 to i64*
  %102 = bitcast %"class.v8::internal::AllocationCounter"* %0 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %100, %103
  %105 = sdiv exact i64 %104, 24
  %106 = add nsw i64 %105, 1
  %107 = icmp ugt i64 %106, 768614336404564650
  br i1 %107, label %108, label %110

108:                                              ; preds = %99
  %109 = bitcast %"class.v8::internal::AllocationCounter"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #10
  unreachable

110:                                              ; preds = %99
  %111 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %87 to i64*
  %112 = sub i64 %90, %103
  %113 = sdiv exact i64 %112, 24
  %114 = icmp ult i64 %113, 384307168202282325
  br i1 %114, label %115, label %120

115:                                              ; preds = %110
  %116 = shl nsw i64 %113, 1
  %117 = icmp ult i64 %116, %106
  %118 = select i1 %117, i64 %106, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %115, %110
  %121 = phi i64 [ %118, %115 ], [ 768614336404564650, %110 ]
  %122 = mul i64 %121, 24
  %123 = tail call i8* @_Znwm(i64 %122) #11
  %124 = bitcast i8* %123 to %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*
  br label %125

125:                                              ; preds = %120, %115
  %126 = phi i64 [ %121, %120 ], [ 0, %115 ]
  %127 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %124, %120 ], [ null, %115 ]
  %128 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %127, i64 %105
  %129 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %127, i64 %126
  %130 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %129 to i64
  %131 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %128, i64 0, i32 0
  store %"class.v8::internal::AllocationObserver"* %1, %"class.v8::internal::AllocationObserver"** %131, align 8
  %132 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %127, i64 %105, i32 1
  store i64 %83, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %127, i64 %105, i32 2
  store i64 %84, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %128, i64 1
  %135 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %134 to i64
  %136 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 0
  %137 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %136, align 8
  %138 = load i64, i64* %101, align 8
  %139 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %137 to i64
  %140 = sub i64 %138, %139
  %141 = sdiv exact i64 %140, -24
  %142 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %128, i64 %141
  %143 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %142 to i64
  %144 = icmp sgt i64 %140, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %125
  %146 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %142 to i8*
  %147 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 %140, i1 false) #12
  %148 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %136, align 8
  br label %149

149:                                              ; preds = %145, %125
  %150 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %137, %125 ], [ %148, %145 ]
  store i64 %143, i64* %102, align 8
  store i64 %135, i64* %101, align 8
  store i64 %130, i64* %111, align 8
  %151 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %150 to i8*
  tail call void @_ZdlPv(i8* %153) #11
  %154 = load i64, i64* %101, align 8
  br label %155

155:                                              ; preds = %91, %149, %152
  %156 = phi i64* [ %98, %91 ], [ %102, %149 ], [ %102, %152 ]
  %157 = phi i64 [ %96, %91 ], [ %135, %149 ], [ %154, %152 ]
  %158 = load i64, i64* %156, align 8
  %159 = sub i64 %157, %158
  %160 = icmp eq i64 %159, 24
  %161 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 6
  br i1 %160, label %162, label %163

162:                                              ; preds = %155
  store i64 %84, i64* %161, align 8
  br label %170

163:                                              ; preds = %155
  %164 = load i64, i64* %161, align 8
  %165 = load i64, i64* %82, align 8
  %166 = sub i64 %164, %165
  %167 = icmp slt i64 %81, %166
  %168 = select i1 %167, i64 %81, i64 %166
  %169 = add i64 %168, %165
  store i64 %169, i64* %161, align 8
  br label %170

170:                                              ; preds = %162, %163, %74, %71, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationCounter24RemoveAllocationObserverEPNS0_18AllocationObserverE(%"class.v8::internal::AllocationCounter"*, %"class.v8::internal::AllocationObserver"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::AllocationObserver"*, align 8
  store %"class.v8::internal::AllocationObserver"* %1, %"class.v8::internal::AllocationObserver"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %5, %7
  %9 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %7 to i64
  %10 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %5 to i64
  br i1 %8, label %19, label %11

11:                                               ; preds = %2, %16
  %12 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %17, %16 ], [ %5, %2 ]
  %13 = getelementptr %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %12, i64 0, i32 0
  %14 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %13, align 8
  %15 = icmp eq %"class.v8::internal::AllocationObserver"* %14, %1
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %12, i64 1
  %18 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %17, %7
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %16, %2
  %20 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %5, %2 ], [ %12, %11 ], [ %7, %16 ]
  %21 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 7
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 2, i32 0
  %26 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %25, %"class.v8::internal::AllocationObserver"** nonnull dereferenceable(8) %3, %"class.v8::internal::AllocationObserver"** nonnull dereferenceable(8) %3) #12
  br label %67

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %20, i64 1
  %29 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %28 to i64
  %30 = sub i64 %9, %29
  %31 = sdiv exact i64 %30, 24
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %20 to i8*
  %35 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %28 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 %30, i1 false) #12
  %36 = bitcast %"class.v8::internal::AllocationCounter"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = inttoptr i64 %37 to %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*
  br label %39

39:                                               ; preds = %27, %33
  %40 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %38, %33 ], [ %5, %27 ]
  %41 = phi i64 [ %37, %33 ], [ %10, %27 ]
  %42 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %20, i64 %31
  store %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %42, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %6, align 8
  %43 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %42 to i64
  %44 = icmp eq i64 %41, %43
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %47 = bitcast i64* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false)
  br label %67

48:                                               ; preds = %39
  %49 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %40, %42
  %50 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %51 = load i64, i64* %50, align 8
  br i1 %49, label %52, label %56

52:                                               ; preds = %56, %48
  %53 = phi i64 [ 0, %48 ], [ %64, %56 ]
  %54 = add i64 %51, %53
  %55 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 6
  store i64 %54, i64* %55, align 8
  br label %67

56:                                               ; preds = %48, %56
  %57 = phi i64 [ %64, %56 ], [ 0, %48 ]
  %58 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %65, %56 ], [ %40, %48 ]
  %59 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %60, %51
  %62 = add i64 %57, -1
  %63 = icmp ult i64 %62, %61
  %64 = select i1 %63, i64 %57, i64 %61
  %65 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %58, i64 1
  %66 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %65, %42
  br i1 %66, label %52, label %56

67:                                               ; preds = %45, %52, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationCounter26AdvanceAllocationObserversEm(%"class.v8::internal::AllocationCounter"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::AllocationCounter"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %1
  store i64 %16, i64* %14, align 8
  br label %17

17:                                               ; preds = %6, %2, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationCounter25InvokeAllocationObserversEmmm(%"class.v8::internal::AllocationCounter"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %308

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::AllocationCounter"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  %15 = inttoptr i64 %13 to %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*
  %16 = inttoptr i64 %11 to %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*
  br i1 %14, label %308, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 7
  store i8 1, i8* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %15, %16
  br i1 %20, label %68, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %23 = load i64, i64* %22, align 8
  br label %27

24:                                               ; preds = %58
  %25 = and i8 %61, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %68, label %69, !prof !3

27:                                               ; preds = %21, %58
  %28 = phi i64 [ %23, %21 ], [ %59, %58 ]
  %29 = phi i8 [ 0, %21 ], [ %61, %58 ]
  %30 = phi i64 [ 0, %21 ], [ %65, %58 ]
  %31 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %15, %21 ], [ %66, %58 ]
  %32 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %31, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %28
  %35 = icmp ugt i64 %34, %3
  br i1 %35, label %58, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %31, i64 0, i32 0
  %38 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %37, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %31, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %28, %40
  %42 = trunc i64 %41 to i32
  %43 = bitcast %"class.v8::internal::AllocationObserver"* %38 to void (%"class.v8::internal::AllocationObserver"*, i32, i64, i64)***
  %44 = load void (%"class.v8::internal::AllocationObserver"*, i32, i64, i64)**, void (%"class.v8::internal::AllocationObserver"*, i32, i64, i64)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.v8::internal::AllocationObserver"*, i32, i64, i64)*, void (%"class.v8::internal::AllocationObserver"*, i32, i64, i64)** %44, i64 2
  %46 = load void (%"class.v8::internal::AllocationObserver"*, i32, i64, i64)*, void (%"class.v8::internal::AllocationObserver"*, i32, i64, i64)** %45, align 8
  tail call void %46(%"class.v8::internal::AllocationObserver"* %38, i32 %42, i64 %1, i64 %2) #12
  %47 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %37, align 8
  %48 = bitcast %"class.v8::internal::AllocationObserver"* %47 to i64 (%"class.v8::internal::AllocationObserver"*)***
  %49 = load i64 (%"class.v8::internal::AllocationObserver"*)**, i64 (%"class.v8::internal::AllocationObserver"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.v8::internal::AllocationObserver"*)*, i64 (%"class.v8::internal::AllocationObserver"*)** %49, i64 3
  %51 = load i64 (%"class.v8::internal::AllocationObserver"*)*, i64 (%"class.v8::internal::AllocationObserver"*)** %50, align 8
  %52 = tail call i64 %51(%"class.v8::internal::AllocationObserver"* %47) #12
  %53 = load i64, i64* %22, align 8
  store i64 %53, i64* %39, align 8
  %54 = load i64, i64* %22, align 8
  %55 = add i64 %52, %3
  %56 = add i64 %55, %54
  store i64 %56, i64* %32, align 8
  %57 = load i64, i64* %22, align 8
  br label %58

58:                                               ; preds = %27, %36
  %59 = phi i64 [ %57, %36 ], [ %28, %27 ]
  %60 = phi i64 [ %56, %36 ], [ %33, %27 ]
  %61 = phi i8 [ 1, %36 ], [ %29, %27 ]
  %62 = sub i64 %60, %59
  %63 = add i64 %30, -1
  %64 = icmp ult i64 %63, %62
  %65 = select i1 %64, i64 %30, i64 %62
  %66 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %31, i64 1
  %67 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %66, %16
  br i1 %67, label %24, label %27

68:                                               ; preds = %17, %24
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

69:                                               ; preds = %24
  %70 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %70, i64 0, i32 0, i32 0
  %72 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 1, i32 0, i32 1
  %74 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %73, align 8
  %75 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %72 to i64
  br label %85

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %80 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %80 to i64*
  br label %92

82:                                               ; preds = %169
  %83 = bitcast %"class.std::__1::vector"* %70 to i64*
  %84 = load i64, i64* %83, align 8
  br label %85

85:                                               ; preds = %76, %82
  %86 = phi i64 [ %77, %76 ], [ %84, %82 ]
  %87 = phi i64 [ %65, %76 ], [ %109, %82 ]
  %88 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %73 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %301, label %172

92:                                               ; preds = %78, %169
  %93 = phi i64 [ %65, %78 ], [ %109, %169 ]
  %94 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %72, %78 ], [ %170, %169 ]
  %95 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %94, i64 0, i32 0
  %96 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %95, align 8
  %97 = bitcast %"class.v8::internal::AllocationObserver"* %96 to i64 (%"class.v8::internal::AllocationObserver"*)***
  %98 = load i64 (%"class.v8::internal::AllocationObserver"*)**, i64 (%"class.v8::internal::AllocationObserver"*)*** %97, align 8
  %99 = getelementptr inbounds i64 (%"class.v8::internal::AllocationObserver"*)*, i64 (%"class.v8::internal::AllocationObserver"*)** %98, i64 3
  %100 = load i64 (%"class.v8::internal::AllocationObserver"*)*, i64 (%"class.v8::internal::AllocationObserver"*)** %99, align 8
  %101 = tail call i64 %100(%"class.v8::internal::AllocationObserver"* %96) #12
  %102 = load i64, i64* %79, align 8
  %103 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %94, i64 0, i32 1
  store i64 %102, i64* %103, align 8
  %104 = load i64, i64* %79, align 8
  %105 = add i64 %101, %3
  %106 = add i64 %105, %104
  %107 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %94, i64 0, i32 2
  store i64 %106, i64* %107, align 8
  %108 = icmp ult i64 %105, %93
  %109 = select i1 %108, i64 %105, i64 %93
  %110 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %9, align 8
  %111 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %80, align 8
  %112 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %110, %111
  %113 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %111 to i64
  br i1 %112, label %119, label %114

114:                                              ; preds = %92
  %115 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %110 to i8*
  %116 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #12
  %117 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %110, i64 1
  %118 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %117 to i64
  store i64 %118, i64* %10, align 8
  br label %169

119:                                              ; preds = %92
  %120 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %110 to i64
  %121 = load i64, i64* %12, align 8
  %122 = sub i64 %120, %121
  %123 = sdiv exact i64 %122, 24
  %124 = add nsw i64 %123, 1
  %125 = icmp ugt i64 %124, 768614336404564650
  br i1 %125, label %126, label %128

126:                                              ; preds = %119
  %127 = bitcast %"class.v8::internal::AllocationCounter"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %127) #10
  unreachable

128:                                              ; preds = %119
  %129 = sub i64 %113, %121
  %130 = sdiv exact i64 %129, 24
  %131 = icmp ult i64 %130, 384307168202282325
  br i1 %131, label %132, label %137

132:                                              ; preds = %128
  %133 = shl nsw i64 %130, 1
  %134 = icmp ult i64 %133, %124
  %135 = select i1 %134, i64 %124, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %132, %128
  %138 = phi i64 [ %135, %132 ], [ 768614336404564650, %128 ]
  %139 = mul i64 %138, 24
  %140 = tail call i8* @_Znwm(i64 %139) #11
  %141 = bitcast i8* %140 to %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*
  br label %142

142:                                              ; preds = %137, %132
  %143 = phi i64 [ %138, %137 ], [ 0, %132 ]
  %144 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %141, %137 ], [ null, %132 ]
  %145 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %144, i64 %123
  %146 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %144, i64 %143
  %147 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %146 to i64
  %148 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %145 to i8*
  %149 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 24, i1 false) #12
  %150 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %145, i64 1
  %151 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %150 to i64
  %152 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %19, align 8
  %153 = load i64, i64* %10, align 8
  %154 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %152 to i64
  %155 = sub i64 %153, %154
  %156 = sdiv exact i64 %155, -24
  %157 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %145, i64 %156
  %158 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %157 to i64
  %159 = icmp sgt i64 %155, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %142
  %161 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %157 to i8*
  %162 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 %155, i1 false) #12
  %163 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %19, align 8
  br label %164

164:                                              ; preds = %160, %142
  %165 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %152, %142 ], [ %163, %160 ]
  store i64 %158, i64* %12, align 8
  store i64 %151, i64* %10, align 8
  store i64 %147, i64* %81, align 8
  %166 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %164
  %168 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %165 to i8*
  tail call void @_ZdlPv(i8* %168) #11
  br label %169

169:                                              ; preds = %114, %164, %167
  %170 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %94, i64 1
  %171 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %170, %74
  br i1 %171, label %82, label %92

172:                                              ; preds = %85
  %173 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %19, align 8
  %174 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %9, align 8
  %175 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %173, %174
  br i1 %175, label %186, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 2, i32 0
  br label %178

178:                                              ; preds = %183, %176
  %179 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %184, %183 ], [ %173, %176 ]
  %180 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %179, i64 0, i32 0
  %181 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table"* %177, %"class.v8::internal::AllocationObserver"** dereferenceable(8) %180) #12
  %182 = icmp eq %"struct.std::__1::__hash_node_base"* %181, null
  br i1 %182, label %183, label %186

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %179, i64 1
  %185 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %184, %174
  br i1 %185, label %213, label %178

186:                                              ; preds = %178, %172
  %187 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %173, %172 ], [ %179, %178 ]
  %188 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %187 to i64
  %189 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %187, %174
  br i1 %189, label %213, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %187, i64 1
  %192 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %191, %174
  br i1 %192, label %213, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 2, i32 0
  br label %195

195:                                              ; preds = %207, %193
  %196 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %191, %193 ], [ %209, %207 ]
  %197 = phi i64 [ %188, %193 ], [ %208, %207 ]
  %198 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %196, i64 0, i32 0
  %199 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table"* %194, %"class.v8::internal::AllocationObserver"** dereferenceable(8) %198) #12
  %200 = icmp eq %"struct.std::__1::__hash_node_base"* %199, null
  br i1 %200, label %201, label %207

201:                                              ; preds = %195
  %202 = inttoptr i64 %197 to %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*
  %203 = inttoptr i64 %197 to i8*
  %204 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %196 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 24, i1 false) #12
  %205 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %202, i64 1
  %206 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %205 to i64
  br label %207

207:                                              ; preds = %201, %195
  %208 = phi i64 [ %197, %195 ], [ %206, %201 ]
  %209 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %196, i64 1
  %210 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %209, %174
  br i1 %210, label %211, label %195

211:                                              ; preds = %207
  %212 = inttoptr i64 %208 to %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*
  br label %213

213:                                              ; preds = %183, %211, %186, %190
  %214 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %174, %186 ], [ %187, %190 ], [ %212, %211 ], [ %174, %183 ]
  %215 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %214, i64 1
  %216 = load i64, i64* %10, align 8
  %217 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %215 to i64
  %218 = sub i64 %216, %217
  %219 = sdiv exact i64 %218, 24
  %220 = icmp eq i64 %218, 0
  br i1 %220, label %224, label %221

221:                                              ; preds = %213
  %222 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %214 to i8*
  %223 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %215 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %218, i1 false) #12
  br label %224

224:                                              ; preds = %213, %221
  %225 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %214, i64 %219
  store %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %225, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %9, align 8
  %226 = load i64, i64* %89, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %279, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %230 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %229, align 8
  %231 = icmp eq %"struct.std::__1::__hash_node_base"* %230, null
  br i1 %231, label %238, label %232

232:                                              ; preds = %228, %232
  %233 = phi %"struct.std::__1::__hash_node_base"* [ %235, %232 ], [ %230, %228 ]
  %234 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %233, i64 0, i32 0
  %235 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %234, align 8
  %236 = bitcast %"struct.std::__1::__hash_node_base"* %233 to i8*
  tail call void @_ZdlPv(i8* %236) #11
  %237 = icmp eq %"struct.std::__1::__hash_node_base"* %235, null
  br i1 %237, label %238, label %232

238:                                              ; preds = %232, %228
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %229, align 8
  %239 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = add i64 %240, -1
  %245 = and i64 %240, 3
  %246 = icmp ult i64 %244, 3
  br i1 %246, label %249, label %247

247:                                              ; preds = %242
  %248 = sub i64 %240, %245
  br label %262

249:                                              ; preds = %262, %242
  %250 = phi i64 [ 0, %242 ], [ %276, %262 ]
  %251 = icmp eq i64 %245, 0
  br i1 %251, label %260, label %252

252:                                              ; preds = %249, %252
  %253 = phi i64 [ %257, %252 ], [ %250, %249 ]
  %254 = phi i64 [ %258, %252 ], [ %245, %249 ]
  %255 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %243, align 8
  %256 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %255, i64 %253
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %256, align 8
  %257 = add nuw i64 %253, 1
  %258 = add i64 %254, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %252, !llvm.loop !4

260:                                              ; preds = %249, %252, %238
  store i64 0, i64* %89, align 8
  %261 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %9, align 8
  br label %279

262:                                              ; preds = %262, %247
  %263 = phi i64 [ 0, %247 ], [ %276, %262 ]
  %264 = phi i64 [ %248, %247 ], [ %277, %262 ]
  %265 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %243, align 8
  %266 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %265, i64 %263
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %266, align 8
  %267 = or i64 %263, 1
  %268 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %243, align 8
  %269 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %268, i64 %267
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %269, align 8
  %270 = or i64 %263, 2
  %271 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %243, align 8
  %272 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %271, i64 %270
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %272, align 8
  %273 = or i64 %263, 3
  %274 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %243, align 8
  %275 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %274, i64 %273
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %275, align 8
  %276 = add nuw i64 %263, 4
  %277 = add i64 %264, -4
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %249, label %262

279:                                              ; preds = %224, %260
  %280 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %225, %224 ], [ %261, %260 ]
  %281 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %19, align 8
  %282 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %281, %280
  br i1 %282, label %298, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %285 = load i64, i64* %284, align 8
  br label %287

286:                                              ; preds = %287
  br i1 %282, label %298, label %301

287:                                              ; preds = %283, %287
  %288 = phi i64 [ 0, %283 ], [ %295, %287 ]
  %289 = phi %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* [ %281, %283 ], [ %296, %287 ]
  %290 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %289, i64 0, i32 2
  %291 = load i64, i64* %290, align 8
  %292 = sub i64 %291, %285
  %293 = add i64 %288, -1
  %294 = icmp ult i64 %293, %292
  %295 = select i1 %294, i64 %288, i64 %292
  %296 = getelementptr inbounds %"struct.v8::internal::AllocationCounter::AllocationObserverCounter", %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %289, i64 1
  %297 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %296, %280
  br i1 %297, label %286, label %287

298:                                              ; preds = %279, %286
  %299 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %300 = bitcast i64* %299 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %300, i8 0, i64 16, i1 false)
  br label %307

301:                                              ; preds = %286, %85
  %302 = phi i64 [ %87, %85 ], [ %295, %286 ]
  %303 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 5
  %304 = load i64, i64* %303, align 8
  %305 = add i64 %304, %302
  %306 = getelementptr inbounds %"class.v8::internal::AllocationCounter", %"class.v8::internal::AllocationCounter"* %0, i64 0, i32 6
  store i64 %305, i64* %306, align 8
  br label %307

307:                                              ; preds = %301, %298
  store i8 0, i8* %18, align 8
  br label %308

308:                                              ; preds = %8, %4, %307
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29PauseAllocationObserversScopeC2EPNS0_4HeapE(%"class.v8::internal::PauseAllocationObserversScope"* nocapture, %"class.v8::internal::Heap"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SpaceIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::PauseAllocationObserversScope", %"class.v8::internal::PauseAllocationObserversScope"* %0, i64 0, i32 0
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %4, align 8
  %5 = bitcast %"class.v8::internal::SpaceIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  call void @_ZN2v88internal13SpaceIteratorC1EPNS0_4HeapE(%"class.v8::internal::SpaceIterator"* nonnull %3, %"class.v8::internal::Heap"* %1) #12
  %6 = call zeroext i1 @_ZN2v88internal13SpaceIterator7HasNextEv(%"class.v8::internal::SpaceIterator"* nonnull %3) #12
  br i1 %6, label %8, label %7

7:                                                ; preds = %8, %2
  call void @_ZN2v88internal13SpaceIteratorD1Ev(%"class.v8::internal::SpaceIterator"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void

8:                                                ; preds = %2, %8
  %9 = call %"class.v8::internal::Space"* @_ZN2v88internal13SpaceIterator4NextEv(%"class.v8::internal::SpaceIterator"* nonnull %3) #12
  %10 = bitcast %"class.v8::internal::Space"* %9 to void (%"class.v8::internal::Space"*)***
  %11 = load void (%"class.v8::internal::Space"*)**, void (%"class.v8::internal::Space"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::Space"*)*, void (%"class.v8::internal::Space"*)** %11, i64 8
  %13 = load void (%"class.v8::internal::Space"*)*, void (%"class.v8::internal::Space"*)** %12, align 8
  call void %13(%"class.v8::internal::Space"* %9) #12
  %14 = call zeroext i1 @_ZN2v88internal13SpaceIterator7HasNextEv(%"class.v8::internal::SpaceIterator"* nonnull %3) #12
  br i1 %14, label %8, label %7
}

declare void @_ZN2v88internal13SpaceIteratorC1EPNS0_4HeapE(%"class.v8::internal::SpaceIterator"*, %"class.v8::internal::Heap"*) unnamed_addr #4

declare zeroext i1 @_ZN2v88internal13SpaceIterator7HasNextEv(%"class.v8::internal::SpaceIterator"*) local_unnamed_addr #4

declare %"class.v8::internal::Space"* @_ZN2v88internal13SpaceIterator4NextEv(%"class.v8::internal::SpaceIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal13SpaceIteratorD1Ev(%"class.v8::internal::SpaceIterator"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29PauseAllocationObserversScopeD2Ev(%"class.v8::internal::PauseAllocationObserversScope"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SpaceIterator", align 8
  %3 = bitcast %"class.v8::internal::SpaceIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::PauseAllocationObserversScope", %"class.v8::internal::PauseAllocationObserversScope"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %4, align 8
  call void @_ZN2v88internal13SpaceIteratorC1EPNS0_4HeapE(%"class.v8::internal::SpaceIterator"* nonnull %2, %"class.v8::internal::Heap"* %5) #12
  %6 = call zeroext i1 @_ZN2v88internal13SpaceIterator7HasNextEv(%"class.v8::internal::SpaceIterator"* nonnull %2) #12
  br i1 %6, label %8, label %7

7:                                                ; preds = %8, %1
  call void @_ZN2v88internal13SpaceIteratorD1Ev(%"class.v8::internal::SpaceIterator"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret void

8:                                                ; preds = %1, %8
  %9 = call %"class.v8::internal::Space"* @_ZN2v88internal13SpaceIterator4NextEv(%"class.v8::internal::SpaceIterator"* nonnull %2) #12
  %10 = bitcast %"class.v8::internal::Space"* %9 to void (%"class.v8::internal::Space"*)***
  %11 = load void (%"class.v8::internal::Space"*)**, void (%"class.v8::internal::Space"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::Space"*)*, void (%"class.v8::internal::Space"*)** %11, i64 9
  %13 = load void (%"class.v8::internal::Space"*)*, void (%"class.v8::internal::Space"*)** %12, align 8
  call void %13(%"class.v8::internal::Space"* %9) #12
  %14 = call zeroext i1 @_ZN2v88internal13SpaceIterator7HasNextEv(%"class.v8::internal::SpaceIterator"* nonnull %2) #12
  br i1 %14, label %8, label %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.v8::internal::AllocationObserver"** dereferenceable(8), %"class.v8::internal::AllocationObserver"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %1, align 8
  %5 = ptrtoint %"class.v8::internal::AllocationObserver"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %81, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !6
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %81, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br i1 %24, label %41, label %63

41:                                               ; preds = %39, %58
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %58 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = icmp ult i64 %49, %20
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %20
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %58, label %81

58:                                               ; preds = %55, %46
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to %"class.v8::internal::AllocationObserver"**
  %61 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %60, align 8
  %62 = icmp eq %"class.v8::internal::AllocationObserver"* %61, %4
  br i1 %62, label %169, label %41

63:                                               ; preds = %39, %76
  %64 = phi %"struct.std::__1::__hash_node_base"* [ %66, %76 ], [ %37, %39 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %18
  %73 = and i64 %71, %40
  %74 = icmp eq i64 %73, %33
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to %"class.v8::internal::AllocationObserver"**
  %79 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %78, align 8
  %80 = icmp eq %"class.v8::internal::AllocationObserver"* %79, %4
  br i1 %80, label %169, label %63

81:                                               ; preds = %68, %63, %55, %41, %32, %3
  %82 = phi i64 [ %33, %32 ], [ undef, %3 ], [ %33, %41 ], [ %33, %55 ], [ %33, %63 ], [ %33, %68 ]
  %83 = tail call i8* @_Znwm(i64 24) #11, !noalias !7
  %84 = getelementptr inbounds i8, i8* %83, i64 16
  %85 = bitcast %"class.v8::internal::AllocationObserver"** %2 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !7
  %87 = bitcast i8* %84 to i64*
  store i64 %86, i64* %87, align 8, !noalias !7
  %88 = getelementptr inbounds i8, i8* %83, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %18, i64* %89, align 8, !noalias !7
  %90 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %90, align 8, !noalias !7
  %91 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %20 to float
  %96 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %21, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %81
  %102 = shl i64 %20, 1
  %103 = icmp ult i64 %20, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !6
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #12
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %113)
  %114 = load i64, i64* %19, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %114) #12, !range !6
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %101
  %118 = add i64 %114, -1
  %119 = and i64 %118, %18
  br label %124

120:                                              ; preds = %101
  %121 = icmp ult i64 %18, %114
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %18, %114
  br label %124

124:                                              ; preds = %122, %120, %117, %81
  %125 = phi i64 [ %20, %81 ], [ %114, %117 ], [ %114, %120 ], [ %114, %122 ]
  %126 = phi i64 [ %82, %81 ], [ %119, %117 ], [ %18, %120 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, i64 %126
  %130 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base"* %130, null
  br i1 %131, label %132, label %158

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %83 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8**
  store i8* %83, i8** %137, align 8
  store %"struct.std::__1::__hash_node_base"* %133, %"struct.std::__1::__hash_node_base"** %129, align 8
  %138 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %90, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base"* %138, null
  br i1 %139, label %165, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %138, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = tail call i64 @llvm.ctpop.i64(i64 %125) #12, !range !6
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = add i64 %125, -1
  %148 = and i64 %143, %147
  br label %153

149:                                              ; preds = %140
  %150 = icmp ult i64 %143, %125
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %143, %125
  br label %153

153:                                              ; preds = %146, %149, %151
  %154 = phi i64 [ %148, %146 ], [ %152, %151 ], [ %143, %149 ]
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, i64 %154
  %157 = bitcast %"struct.std::__1::__hash_node_base"** %156 to i8**
  br label %163

158:                                              ; preds = %124
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8* %83 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i8**
  br label %163

163:                                              ; preds = %153, %158
  %164 = phi i8** [ %162, %158 ], [ %157, %153 ]
  store i8* %83, i8** %164, align 8
  br label %165

165:                                              ; preds = %163, %132
  %166 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base"*
  %167 = load i64, i64* %91, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %91, align 8
  br label %169

169:                                              ; preds = %76, %58, %165
  %170 = phi i8 [ 1, %165 ], [ 0, %58 ], [ 0, %76 ]
  %171 = phi %"struct.std::__1::__hash_node_base"* [ %166, %165 ], [ %44, %58 ], [ %66, %76 ]
  %172 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %171, 0
  %173 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %172, i8 %170, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !6
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !6
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !6
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #10
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !10

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !6
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to %"class.v8::internal::AllocationObserver"**
  %105 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %130, align 8
  %106 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %104, align 8
  %107 = icmp eq %"class.v8::internal::AllocationObserver"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to %"class.v8::internal::AllocationObserver"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to %"class.v8::internal::AllocationObserver"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to %"class.v8::internal::AllocationObserver"**
  %157 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %147, align 8
  %158 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %156, align 8
  %159 = icmp eq %"class.v8::internal::AllocationObserver"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #11
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.v8::internal::AllocationObserver"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %1, align 8
  %4 = ptrtoint %"class.v8::internal::AllocationObserver"* %3 to i64
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %84, label %21

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctpop.i64(i64 %19) #12, !range !6
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %17, %25
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %84, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br i1 %23, label %44, label %66

44:                                               ; preds = %42, %62
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %64, %62 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %17, %48
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = icmp ult i64 %48, %19
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %48, %19
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %53, %52 ], [ %48, %50 ]
  %56 = icmp eq i64 %55, %32
  br i1 %56, label %62, label %84

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to %"class.v8::internal::AllocationObserver"**
  %60 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %59, align 8
  %61 = icmp eq %"class.v8::internal::AllocationObserver"* %60, %3
  br i1 %61, label %84, label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base"* %64, null
  br i1 %65, label %84, label %44

66:                                               ; preds = %42, %80
  %67 = phi %"struct.std::__1::__hash_node_base"* [ %82, %80 ], [ %40, %42 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %17, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = and i64 %70, %43
  %74 = icmp eq i64 %73, %32
  br i1 %74, label %80, label %84

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 2
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to %"class.v8::internal::AllocationObserver"**
  %78 = load %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"** %77, align 8
  %79 = icmp eq %"class.v8::internal::AllocationObserver"* %78, %3
  br i1 %79, label %84, label %80

80:                                               ; preds = %72, %75
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base"* %82, null
  br i1 %83, label %84, label %66

84:                                               ; preds = %75, %80, %72, %57, %62, %54, %38, %2, %31
  %85 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %57 ], [ null, %62 ], [ null, %54 ], [ %67, %75 ], [ null, %80 ], [ null, %72 ]
  ret %"struct.std::__1::__hash_node_base"* %85
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{i64 0, i64 65}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableIPN2v88internal18AllocationObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!10 = distinct !{!10, !5}
