; ModuleID = '../../services/network/public/cpp/server/web_socket_encoder.cc'
source_filename = "../../services/network/public/cpp/server/web_socket_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::server::WebSocketEncoder" = type { i32, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::WebSocketDeflater"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.net::WebSocketInflater"* }
%"class.net::WebSocketDeflater" = type <{ %"class.std::__1::unique_ptr.3", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %struct.z_stream_s* }
%struct.z_stream_s = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i8* }
%"class.net::WebSocketInflater" = type { %"class.std::__1::unique_ptr.3", %"class.net::WebSocketInflater::InputQueue", %"class.net::WebSocketInflater::OutputBuffer" }
%"class.net::WebSocketInflater::InputQueue" = type { i64, i64, i64, %"class.base::circular_deque.16" }
%"class.base::circular_deque.16" = type { %"class.base::internal::VectorBuffer.17", i64, i64 }
%"class.base::internal::VectorBuffer.17" = type { %class.scoped_refptr*, i64 }
%class.scoped_refptr = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::WebSocketInflater::OutputBuffer" = type { i64, %"class.std::__1::vector", i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::WebSocketDeflateParameters" = type { i32, i32, %"struct.net::WebSocketDeflateParameters::WindowBits", %"struct.net::WebSocketDeflateParameters::WindowBits" }
%"struct.net::WebSocketDeflateParameters::WindowBits" = type { i16, i8, i8 }
%"class.net::WebSocketExtensionParser" = type { i8*, i8*, %"class.std::__1::vector.27" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.net::WebSocketExtension"*, %"class.net::WebSocketExtension"*, %"class.std::__1::__compressed_pair.36" }
%"class.net::WebSocketExtension" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.net::WebSocketExtension::Parameter"*, %"class.net::WebSocketExtension::Parameter"*, %"class.std::__1::__compressed_pair.31" }
%"class.net::WebSocketExtension::Parameter" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.net::WebSocketExtension::Parameter"* }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.net::WebSocketExtension"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKcEES7_S7_ = comdat any

$_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_ = comdat any

@_ZN7network6server16WebSocketEncoder17kClientExtensionsE = hidden local_unnamed_addr constant [43 x i8] c"permessage-deflate; client_max_window_bits\00", align 16

@_ZN7network6server16WebSocketEncoderC1ENS1_4TypeENSt3__110unique_ptrIN3net17WebSocketDeflaterENS3_14default_deleteIS6_EEEENS4_INS5_17WebSocketInflaterENS7_ISA_EEEE = hidden unnamed_addr alias void (%"class.network::server::WebSocketEncoder"*, i32, %"class.net::WebSocketDeflater"*, %"class.net::WebSocketInflater"*), void (%"class.network::server::WebSocketEncoder"*, i32, %"class.net::WebSocketDeflater"*, %"class.net::WebSocketInflater"*)* @_ZN7network6server16WebSocketEncoderC2ENS1_4TypeENSt3__110unique_ptrIN3net17WebSocketDeflaterENS3_14default_deleteIS6_EEEENS4_INS5_17WebSocketInflaterENS7_ISA_EEEE
@_ZN7network6server16WebSocketEncoderD1Ev = hidden unnamed_addr alias void (%"class.network::server::WebSocketEncoder"*), void (%"class.network::server::WebSocketEncoder"*)* @_ZN7network6server16WebSocketEncoderD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.network::server::WebSocketEncoder"* @_ZN7network6server16WebSocketEncoder12CreateServerEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 24) #8
  %2 = bitcast i8* %1 to %"class.network::server::WebSocketEncoder"*
  %3 = bitcast i8* %1 to i32*
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret %"class.network::server::WebSocketEncoder"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.network::server::WebSocketEncoder"* @_ZN7network6server16WebSocketEncoder12CreateServerERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPN3net26WebSocketDeflateParametersE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.net::WebSocketDeflateParameters"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.net::WebSocketExtensionParser", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.net::WebSocketDeflateParameters", align 4
  %6 = bitcast %"class.net::WebSocketExtensionParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  %7 = bitcast %"class.net::WebSocketExtensionParser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  call void @_ZN3net24WebSocketExtensionParserC1Ev(%"class.net::WebSocketExtensionParser"* nonnull %3) #9
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i8* %13, i8* %16
  %19 = select i1 %11, i64 %15, i64 %17
  %20 = call zeroext i1 @_ZN3net24WebSocketExtensionParser5ParseEPKcm(%"class.net::WebSocketExtensionParser"* nonnull %3, i8* %18, i64 %19) #9
  br i1 %20, label %21, label %116

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.net::WebSocketExtensionParser", %"class.net::WebSocketExtensionParser"* %3, i64 0, i32 2, i32 0, i32 1
  %23 = getelementptr inbounds %"class.net::WebSocketExtensionParser", %"class.net::WebSocketExtensionParser"* %3, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.net::WebSocketExtension"*, %"class.net::WebSocketExtension"** %23, align 8
  %25 = load %"class.net::WebSocketExtension"*, %"class.net::WebSocketExtension"** %22, align 8
  %26 = icmp eq %"class.net::WebSocketExtension"* %24, %25
  br i1 %26, label %111, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.net::WebSocketDeflateParameters"* %5 to i8*
  %31 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %5, i64 0, i32 0
  %32 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %5, i64 0, i32 1
  %33 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %5, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %5, i64 0, i32 2, i32 1
  %35 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %5, i64 0, i32 2, i32 2
  %36 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %5, i64 0, i32 3, i32 1
  %37 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %5, i64 0, i32 3, i32 2
  %38 = bitcast i16* %33 to i64*
  %39 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %5, i64 0, i32 3
  %40 = bitcast %"struct.net::WebSocketDeflateParameters::WindowBits"* %39 to i32*
  %41 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %1, i64 0, i32 0
  %42 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %1, i64 0, i32 1
  %43 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %1, i64 0, i32 2, i32 0
  %44 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %1, i64 0, i32 2, i32 1
  %45 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %1, i64 0, i32 2, i32 2
  %46 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %1, i64 0, i32 3
  %47 = bitcast %"struct.net::WebSocketDeflateParameters::WindowBits"* %46 to i32*
  %48 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  br label %52

50:                                               ; preds = %108
  %51 = icmp eq %"class.net::WebSocketExtension"* %110, %25
  br i1 %51, label %111, label %52

52:                                               ; preds = %27, %50
  %53 = phi i64 [ undef, %27 ], [ %102, %50 ]
  %54 = phi %"class.net::WebSocketExtension"* [ %24, %27 ], [ %110, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  store i32 1, i32* %31, align 4
  store i32 1, i32* %32, align 4
  store i64 0, i64* %38, align 4
  %55 = call zeroext i1 @_ZN3net26WebSocketDeflateParameters10InitializeERKNS_18WebSocketExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::WebSocketDeflateParameters"* nonnull %5, %"class.net::WebSocketExtension"* dereferenceable(48) %54, %"class.std::__1::basic_string"* nonnull %4) #9
  br i1 %55, label %56, label %101

56:                                               ; preds = %52
  %57 = call zeroext i1 @_ZNK3net26WebSocketDeflateParameters16IsValidAsRequestEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::WebSocketDeflateParameters"* nonnull %5, %"class.std::__1::basic_string"* nonnull %4) #9
  br i1 %57, label %58, label %101

58:                                               ; preds = %56
  %59 = load i32, i32* %31, align 4
  %60 = load i32, i32* %32, align 4
  %61 = load i16, i16* %33, align 4
  %62 = load i8, i8* %34, align 2
  %63 = load i8, i8* %35, align 1
  %64 = load i32, i32* %40, align 4
  %65 = load i8, i8* %36, align 2, !range !2
  %66 = icmp eq i8 %65, 0
  %67 = load i8, i8* %37, align 1
  %68 = icmp ne i8 %67, 0
  %69 = or i1 %66, %68
  %70 = select i1 %69, i32 %64, i32 16842767
  %71 = call i8* @_Znwm(i64 80) #8
  %72 = bitcast i8* %71 to %"class.net::WebSocketDeflater"*
  call void @_ZN3net17WebSocketDeflaterC1ENS0_19ContextTakeOverModeE(%"class.net::WebSocketDeflater"* nonnull %72, i32 %59) #9
  %73 = ptrtoint i8* %71 to i64
  %74 = call i8* @_Znwm(i64 112) #8
  %75 = bitcast i8* %74 to %"class.net::WebSocketInflater"*
  call void @_ZN3net17WebSocketInflaterC1Emm(%"class.net::WebSocketInflater"* nonnull %75, i64 16384, i64 16384) #9
  %76 = ptrtoint i8* %74 to i64
  %77 = icmp eq i8 %62, 0
  %78 = icmp eq i8 %63, 0
  %79 = or i1 %77, %78
  %80 = sext i16 %61 to i32
  %81 = select i1 %79, i32 15, i32 %80
  %82 = call zeroext i1 @_ZN3net17WebSocketDeflater10InitializeEi(%"class.net::WebSocketDeflater"* nonnull %72, i32 %81) #9
  br i1 %82, label %83, label %100

83:                                               ; preds = %58
  %84 = and i32 %70, 16711680
  %85 = icmp eq i32 %84, 0
  %86 = icmp ult i32 %70, 16777216
  %87 = or i1 %86, %85
  %88 = shl i32 %70, 16
  %89 = ashr exact i32 %88, 16
  %90 = select i1 %87, i32 15, i32 %89
  %91 = call zeroext i1 @_ZN3net17WebSocketInflater10InitializeEi(%"class.net::WebSocketInflater"* nonnull %75, i32 %90) #9
  br i1 %91, label %92, label %100

92:                                               ; preds = %83
  store i32 %59, i32* %41, align 4
  store i32 %60, i32* %42, align 4
  store i16 %61, i16* %43, align 4
  store i8 %62, i8* %44, align 2
  store i8 %63, i8* %45, align 1
  store i32 %70, i32* %47, align 4
  %93 = call i8* @_Znwm(i64 24) #8
  %94 = bitcast i8* %93 to i32*
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = bitcast i8* %95 to i64*
  store i64 %73, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to i64*
  store i64 %76, i64* %98, align 8
  %99 = ptrtoint i8* %93 to i64
  br label %101

100:                                              ; preds = %83, %58
  call void @_ZN3net17WebSocketInflaterD1Ev(%"class.net::WebSocketInflater"* nonnull %75) #9
  call void @_ZdlPv(i8* nonnull %74) #8
  call void @_ZN3net17WebSocketDeflaterD1Ev(%"class.net::WebSocketDeflater"* nonnull %72) #9
  call void @_ZdlPv(i8* nonnull %71) #8
  br label %101

101:                                              ; preds = %100, %92, %52, %56
  %102 = phi i64 [ %53, %56 ], [ %53, %52 ], [ %99, %92 ], [ %53, %100 ]
  %103 = phi i32 [ 3, %56 ], [ 3, %52 ], [ 1, %92 ], [ 3, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  %104 = load i8, i8* %49, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  %107 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %107) #8
  br label %108

108:                                              ; preds = %101, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  %109 = icmp eq i32 %103, 3
  %110 = getelementptr inbounds %"class.net::WebSocketExtension", %"class.net::WebSocketExtension"* %54, i64 1
  br i1 %109, label %50, label %116

111:                                              ; preds = %50, %21
  %112 = call i8* @_Znwm(i64 24) #8
  %113 = bitcast i8* %112 to i32*
  store i32 0, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 8
  %115 = ptrtoint i8* %112 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false)
  br label %116

116:                                              ; preds = %108, %2, %111
  %117 = phi i64 [ %115, %111 ], [ 0, %2 ], [ %102, %108 ]
  call void @_ZN3net24WebSocketExtensionParserD1Ev(%"class.net::WebSocketExtensionParser"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  %118 = inttoptr i64 %117 to %"class.network::server::WebSocketEncoder"*
  ret %"class.network::server::WebSocketEncoder"* %118
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN3net24WebSocketExtensionParserC1Ev(%"class.net::WebSocketExtensionParser"*) unnamed_addr #4

declare zeroext i1 @_ZN3net26WebSocketDeflateParameters10InitializeERKNS_18WebSocketExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::WebSocketDeflateParameters"*, %"class.net::WebSocketExtension"* dereferenceable(48), %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3net26WebSocketDeflateParameters16IsValidAsRequestEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::WebSocketDeflateParameters"*, %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN3net17WebSocketDeflater10InitializeEi(%"class.net::WebSocketDeflater"*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN3net17WebSocketInflater10InitializeEi(%"class.net::WebSocketInflater"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net24WebSocketExtensionParserD1Ev(%"class.net::WebSocketExtensionParser"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.network::server::WebSocketEncoder"* @_ZN7network6server16WebSocketEncoder12CreateClientERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.net::WebSocketExtensionParser", align 8
  %3 = alloca %"class.net::WebSocketDeflateParameters", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.net::WebSocketExtensionParser"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #9
  %6 = bitcast %"class.net::WebSocketExtensionParser"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 40, i1 false)
  call void @_ZN3net24WebSocketExtensionParserC1Ev(%"class.net::WebSocketExtensionParser"* nonnull %2) #9
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = call zeroext i1 @_ZN3net24WebSocketExtensionParser5ParseEPKcm(%"class.net::WebSocketExtensionParser"* nonnull %2, i8* %17, i64 %18) #9
  br i1 %19, label %24, label %20

20:                                               ; preds = %1
  %21 = call i8* @_Znwm(i64 24) #8
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false)
  br label %105

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.net::WebSocketExtensionParser", %"class.net::WebSocketExtensionParser"* %2, i64 0, i32 2, i32 0, i32 1
  %26 = getelementptr inbounds %"class.net::WebSocketExtensionParser", %"class.net::WebSocketExtensionParser"* %2, i64 0, i32 2
  %27 = bitcast %"class.net::WebSocketExtension"** %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.27"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = icmp eq i64 %31, 48
  br i1 %32, label %37, label %33

33:                                               ; preds = %24
  %34 = call i8* @_Znwm(i64 24) #8
  %35 = bitcast i8* %34 to i32*
  store i32 1, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  br label %105

37:                                               ; preds = %24
  %38 = inttoptr i64 %30 to %"class.net::WebSocketExtension"*
  %39 = bitcast %"class.net::WebSocketDeflateParameters"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %3, i64 0, i32 0
  %41 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %3, i64 0, i32 1
  %42 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %3, i64 0, i32 2, i32 0
  %43 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %3, i64 0, i32 2, i32 1
  %44 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %3, i64 0, i32 2, i32 2
  %45 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %3, i64 0, i32 3, i32 0
  %46 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %3, i64 0, i32 3, i32 1
  %47 = getelementptr inbounds %"class.net::WebSocketDeflateParameters", %"class.net::WebSocketDeflateParameters"* %3, i64 0, i32 3, i32 2
  store i32 1, i32* %40, align 4
  store i32 1, i32* %41, align 4
  %48 = bitcast i16* %42 to i64*
  store i64 0, i64* %48, align 4
  %49 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #9
  %51 = call zeroext i1 @_ZN3net26WebSocketDeflateParameters10InitializeERKNS_18WebSocketExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::WebSocketDeflateParameters"* nonnull %3, %"class.net::WebSocketExtension"* dereferenceable(48) %38, %"class.std::__1::basic_string"* nonnull %4) #9
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = call zeroext i1 @_ZNK3net26WebSocketDeflateParameters17IsValidAsResponseEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::WebSocketDeflateParameters"* nonnull %3, %"class.std::__1::basic_string"* nonnull %4) #9
  br i1 %53, label %58, label %54

54:                                               ; preds = %52, %37
  %55 = call i8* @_Znwm(i64 24) #8
  %56 = bitcast i8* %55 to i32*
  store i32 1, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false)
  br label %96

58:                                               ; preds = %52
  %59 = load i32, i32* %41, align 4
  %60 = call i8* @_Znwm(i64 80) #8
  %61 = bitcast i8* %60 to %"class.net::WebSocketDeflater"*
  call void @_ZN3net17WebSocketDeflaterC1ENS0_19ContextTakeOverModeE(%"class.net::WebSocketDeflater"* nonnull %61, i32 %59) #9
  %62 = ptrtoint i8* %60 to i64
  %63 = call i8* @_Znwm(i64 112) #8
  %64 = bitcast i8* %63 to %"class.net::WebSocketInflater"*
  call void @_ZN3net17WebSocketInflaterC1Emm(%"class.net::WebSocketInflater"* nonnull %64, i64 16384, i64 16384) #9
  %65 = ptrtoint i8* %63 to i64
  %66 = load i8, i8* %46, align 2, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = load i8, i8* %47, align 1
  %69 = icmp eq i8 %68, 0
  %70 = or i1 %67, %69
  %71 = load i16, i16* %45, align 4
  %72 = sext i16 %71 to i32
  %73 = select i1 %70, i32 15, i32 %72
  %74 = call zeroext i1 @_ZN3net17WebSocketDeflater10InitializeEi(%"class.net::WebSocketDeflater"* nonnull %61, i32 %73) #9
  br i1 %74, label %75, label %92

75:                                               ; preds = %58
  %76 = load i8, i8* %43, align 2, !range !2
  %77 = icmp eq i8 %76, 0
  %78 = load i8, i8* %44, align 1
  %79 = icmp eq i8 %78, 0
  %80 = or i1 %77, %79
  %81 = load i16, i16* %42, align 4
  %82 = sext i16 %81 to i32
  %83 = select i1 %80, i32 15, i32 %82
  %84 = call zeroext i1 @_ZN3net17WebSocketInflater10InitializeEi(%"class.net::WebSocketInflater"* nonnull %64, i32 %83) #9
  br i1 %84, label %85, label %92

85:                                               ; preds = %75
  %86 = call i8* @_Znwm(i64 24) #8
  %87 = bitcast i8* %86 to i32*
  store i32 1, i32* %87, align 8
  %88 = getelementptr inbounds i8, i8* %86, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %62, i64* %89, align 8
  %90 = getelementptr inbounds i8, i8* %86, i64 16
  %91 = bitcast i8* %90 to i64*
  store i64 %65, i64* %91, align 8
  br label %96

92:                                               ; preds = %75, %58
  %93 = call i8* @_Znwm(i64 24) #8
  %94 = bitcast i8* %93 to i32*
  store i32 1, i32* %94, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false)
  call void @_ZN3net17WebSocketInflaterD1Ev(%"class.net::WebSocketInflater"* nonnull %64) #9
  call void @_ZdlPv(i8* nonnull %63) #8
  call void @_ZN3net17WebSocketDeflaterD1Ev(%"class.net::WebSocketDeflater"* nonnull %61) #9
  call void @_ZdlPv(i8* nonnull %60) #8
  br label %96

96:                                               ; preds = %92, %85, %54
  %97 = phi i8* [ %55, %54 ], [ %86, %85 ], [ %93, %92 ]
  %98 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %96
  %103 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %103) #8
  br label %104

104:                                              ; preds = %96, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #9
  br label %105

105:                                              ; preds = %104, %33, %20
  %106 = phi i8* [ %34, %33 ], [ %97, %104 ], [ %21, %20 ]
  %107 = bitcast i8* %106 to %"class.network::server::WebSocketEncoder"*
  call void @_ZN3net24WebSocketExtensionParserD1Ev(%"class.net::WebSocketExtensionParser"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #9
  ret %"class.network::server::WebSocketEncoder"* %107
}

declare zeroext i1 @_ZNK3net26WebSocketDeflateParameters17IsValidAsResponseEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::WebSocketDeflateParameters"*, %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network6server16WebSocketEncoderC2ENS1_4TypeENSt3__110unique_ptrIN3net17WebSocketDeflaterENS3_14default_deleteIS6_EEEENS4_INS5_17WebSocketInflaterENS7_ISA_EEEE(%"class.network::server::WebSocketEncoder"* nocapture, i32, %"class.net::WebSocketDeflater"*, %"class.net::WebSocketInflater"*) unnamed_addr #2 align 2 {
  %5 = ptrtoint %"class.net::WebSocketDeflater"* %2 to i64
  %6 = ptrtoint %"class.net::WebSocketInflater"* %3 to i64
  %7 = getelementptr inbounds %"class.network::server::WebSocketEncoder", %"class.network::server::WebSocketEncoder"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.network::server::WebSocketEncoder", %"class.network::server::WebSocketEncoder"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.0"* %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.network::server::WebSocketEncoder", %"class.network::server::WebSocketEncoder"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::unique_ptr.13"* %10 to i64*
  store i64 %6, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network6server16WebSocketEncoderD2Ev(%"class.network::server::WebSocketEncoder"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.network::server::WebSocketEncoder", %"class.network::server::WebSocketEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::WebSocketInflater"*, %"class.net::WebSocketInflater"** %2, align 8
  store %"class.net::WebSocketInflater"* null, %"class.net::WebSocketInflater"** %2, align 8
  %4 = icmp eq %"class.net::WebSocketInflater"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN3net17WebSocketInflaterD1Ev(%"class.net::WebSocketInflater"* nonnull %3) #9
  %6 = bitcast %"class.net::WebSocketInflater"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.network::server::WebSocketEncoder", %"class.network::server::WebSocketEncoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.net::WebSocketDeflater"*, %"class.net::WebSocketDeflater"** %8, align 8
  store %"class.net::WebSocketDeflater"* null, %"class.net::WebSocketDeflater"** %8, align 8
  %10 = icmp eq %"class.net::WebSocketDeflater"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN3net17WebSocketDeflaterD1Ev(%"class.net::WebSocketDeflater"* nonnull %9) #9
  %12 = bitcast %"class.net::WebSocketDeflater"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7network6server16WebSocketEncoder11DecodeFrameERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.network::server::WebSocketEncoder"* nocapture readonly, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i32* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.network::server::WebSocketEncoder", %"class.network::server::WebSocketEncoder"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %276, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %9
  %15 = getelementptr inbounds i8, i8* %13, i64 1
  %16 = load i8, i8* %13, align 1
  %17 = getelementptr inbounds i8, i8* %13, i64 2
  %18 = load i8, i8* %15, align 1
  %19 = zext i8 %16 to i32
  %20 = icmp sgt i8 %16, -1
  %21 = and i8 %16, 64
  %22 = icmp slt i8 %18, 0
  %23 = and i32 %19, 48
  %24 = icmp ne i32 %23, 0
  %25 = or i1 %20, %24
  br i1 %25, label %276, label %26

26:                                               ; preds = %11
  %27 = and i32 %19, 15
  switch i32 %27, label %276 [
    i32 8, label %28
    i32 1, label %29
  ]

28:                                               ; preds = %26
  br label %29

29:                                               ; preds = %28, %26
  %30 = phi i32 [ 0, %26 ], [ 2, %28 ]
  %31 = or i1 %7, %22
  br i1 %31, label %32, label %276

32:                                               ; preds = %29
  %33 = and i8 %18, 127
  %34 = icmp ugt i8 %33, 125
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = zext i8 %33 to i64
  br label %56

37:                                               ; preds = %32
  %38 = icmp eq i8 %33, 126
  %39 = select i1 %38, i32 2, i32 8
  %40 = add i64 %9, -2
  %41 = zext i32 %39 to i64
  %42 = icmp slt i64 %40, %41
  br i1 %42, label %276, label %43

43:                                               ; preds = %37, %43
  %44 = phi i32 [ %52, %43 ], [ 0, %37 ]
  %45 = phi i64 [ %51, %43 ], [ 0, %37 ]
  %46 = phi i8* [ %48, %43 ], [ %17, %37 ]
  %47 = shl i64 %45, 8
  %48 = getelementptr inbounds i8, i8* %46, i64 1
  %49 = load i8, i8* %46, align 1
  %50 = zext i8 %49 to i64
  %51 = or i64 %47, %50
  %52 = add nuw nsw i32 %44, 1
  %53 = icmp ult i32 %52, %39
  br i1 %53, label %43, label %54

54:                                               ; preds = %43
  %55 = icmp slt i64 %51, 0
  br i1 %55, label %276, label %56

56:                                               ; preds = %54, %35
  %57 = phi i64 [ %36, %35 ], [ %51, %54 ]
  %58 = phi i8* [ %17, %35 ], [ %48, %54 ]
  %59 = lshr i8 %18, 5
  %60 = and i8 %59, 4
  %61 = zext i8 %60 to i64
  %62 = add nuw i64 %57, %61
  %63 = ptrtoint i8* %14 to i64
  %64 = ptrtoint i8* %58 to i64
  %65 = sub i64 %63, %64
  %66 = icmp ult i64 %65, %62
  br i1 %66, label %276, label %67

67:                                               ; preds = %56
  br i1 %22, label %68, label %105

68:                                               ; preds = %67
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3, i64 %57, i8 signext 0) #9
  %69 = getelementptr inbounds i8, i8* %58, i64 4
  %70 = icmp eq i64 %57, 0
  br i1 %70, label %263, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = and i64 %57, 1
  %77 = icmp eq i64 %57, 1
  br i1 %77, label %246, label %78

78:                                               ; preds = %71
  %79 = sub i64 %57, %76
  br label %80

80:                                               ; preds = %280, %78
  %81 = phi i64 [ 0, %78 ], [ %283, %280 ]
  %82 = phi i64 [ %79, %78 ], [ %284, %280 ]
  %83 = getelementptr inbounds i8, i8* %69, i64 %81
  %84 = load i8, i8* %83, align 1
  %85 = and i64 %81, 2
  %86 = getelementptr inbounds i8, i8* %58, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = xor i8 %87, %84
  %89 = load i8, i8* %73, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %80
  %92 = load i8*, i8** %75, align 8
  br label %93

93:                                               ; preds = %91, %80
  %94 = phi i8* [ %92, %91 ], [ %74, %80 ]
  %95 = getelementptr inbounds i8, i8* %94, i64 %81
  store i8 %88, i8* %95, align 1
  %96 = or i64 %81, 1
  %97 = getelementptr inbounds i8, i8* %69, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = and i64 %96, 3
  %100 = getelementptr inbounds i8, i8* %58, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = xor i8 %101, %98
  %103 = load i8, i8* %73, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %278, label %280

105:                                              ; preds = %67
  %106 = getelementptr inbounds i8, i8* %58, i64 %57
  %107 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 9223372036854775807
  %115 = add nsw i64 %114, -1
  br label %116

116:                                              ; preds = %111, %105
  %117 = phi i64 [ %115, %111 ], [ 22, %105 ]
  %118 = icmp ugt i64 %57, %117
  br i1 %118, label %119, label %129

119:                                              ; preds = %116
  br i1 %110, label %120, label %123

120:                                              ; preds = %119
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  br label %125

123:                                              ; preds = %119
  %124 = zext i8 %109 to i64
  br label %125

125:                                              ; preds = %123, %120
  %126 = phi i64 [ %122, %120 ], [ %124, %123 ]
  %127 = sub nsw i64 %57, %117
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %3, i64 %117, i64 %127, i64 %126, i64 0, i64 %126, i64 0) #9
  %128 = load i8, i8* %108, align 1
  br label %129

129:                                              ; preds = %125, %116
  %130 = phi i8 [ %109, %116 ], [ %128, %125 ]
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  br label %137

135:                                              ; preds = %129
  %136 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %137

137:                                              ; preds = %135, %132
  %138 = phi i8* [ %134, %132 ], [ %136, %135 ]
  %139 = icmp eq i64 %57, 0
  br i1 %139, label %238, label %140

140:                                              ; preds = %137
  %141 = icmp ult i64 %57, 32
  br i1 %141, label %228, label %142

142:                                              ; preds = %140
  %143 = getelementptr i8, i8* %138, i64 %57
  %144 = icmp ult i8* %138, %106
  %145 = icmp ult i8* %58, %143
  %146 = and i1 %144, %145
  br i1 %146, label %228, label %147

147:                                              ; preds = %142
  %148 = and i64 %57, -32
  %149 = getelementptr i8, i8* %138, i64 %148
  %150 = getelementptr i8, i8* %58, i64 %148
  %151 = add i64 %148, -32
  %152 = lshr exact i64 %151, 5
  %153 = add nuw nsw i64 %152, 1
  %154 = and i64 %153, 3
  %155 = icmp ult i64 %151, 96
  br i1 %155, label %207, label %156

156:                                              ; preds = %147
  %157 = sub nsw i64 %153, %154
  br label %158

158:                                              ; preds = %158, %156
  %159 = phi i64 [ 0, %156 ], [ %204, %158 ]
  %160 = phi i64 [ %157, %156 ], [ %205, %158 ]
  %161 = getelementptr i8, i8* %138, i64 %159
  %162 = getelementptr i8, i8* %58, i64 %159
  %163 = bitcast i8* %162 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1, !alias.scope !3
  %165 = getelementptr i8, i8* %162, i64 16
  %166 = bitcast i8* %165 to <16 x i8>*
  %167 = load <16 x i8>, <16 x i8>* %166, align 1, !alias.scope !3
  %168 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %164, <16 x i8>* %168, align 1, !alias.scope !6, !noalias !3
  %169 = getelementptr i8, i8* %161, i64 16
  %170 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %167, <16 x i8>* %170, align 1, !alias.scope !6, !noalias !3
  %171 = or i64 %159, 32
  %172 = getelementptr i8, i8* %138, i64 %171
  %173 = getelementptr i8, i8* %58, i64 %171
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !3
  %176 = getelementptr i8, i8* %173, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !3
  %179 = bitcast i8* %172 to <16 x i8>*
  store <16 x i8> %175, <16 x i8>* %179, align 1, !alias.scope !6, !noalias !3
  %180 = getelementptr i8, i8* %172, i64 16
  %181 = bitcast i8* %180 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %181, align 1, !alias.scope !6, !noalias !3
  %182 = or i64 %159, 64
  %183 = getelementptr i8, i8* %138, i64 %182
  %184 = getelementptr i8, i8* %58, i64 %182
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !3
  %187 = getelementptr i8, i8* %184, i64 16
  %188 = bitcast i8* %187 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 1, !alias.scope !3
  %190 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %190, align 1, !alias.scope !6, !noalias !3
  %191 = getelementptr i8, i8* %183, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %189, <16 x i8>* %192, align 1, !alias.scope !6, !noalias !3
  %193 = or i64 %159, 96
  %194 = getelementptr i8, i8* %138, i64 %193
  %195 = getelementptr i8, i8* %58, i64 %193
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !3
  %198 = getelementptr i8, i8* %195, i64 16
  %199 = bitcast i8* %198 to <16 x i8>*
  %200 = load <16 x i8>, <16 x i8>* %199, align 1, !alias.scope !3
  %201 = bitcast i8* %194 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %201, align 1, !alias.scope !6, !noalias !3
  %202 = getelementptr i8, i8* %194, i64 16
  %203 = bitcast i8* %202 to <16 x i8>*
  store <16 x i8> %200, <16 x i8>* %203, align 1, !alias.scope !6, !noalias !3
  %204 = add i64 %159, 128
  %205 = add i64 %160, -4
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %158, !llvm.loop !8

207:                                              ; preds = %158, %147
  %208 = phi i64 [ 0, %147 ], [ %204, %158 ]
  %209 = icmp eq i64 %154, 0
  br i1 %209, label %226, label %210

210:                                              ; preds = %207, %210
  %211 = phi i64 [ %223, %210 ], [ %208, %207 ]
  %212 = phi i64 [ %224, %210 ], [ %154, %207 ]
  %213 = getelementptr i8, i8* %138, i64 %211
  %214 = getelementptr i8, i8* %58, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !3
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !3
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !6, !noalias !3
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !6, !noalias !3
  %223 = add i64 %211, 32
  %224 = add i64 %212, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %210, !llvm.loop !10

226:                                              ; preds = %210, %207
  %227 = icmp eq i64 %57, %148
  br i1 %227, label %238, label %228

228:                                              ; preds = %226, %142, %140
  %229 = phi i8* [ %138, %142 ], [ %138, %140 ], [ %149, %226 ]
  %230 = phi i8* [ %58, %142 ], [ %58, %140 ], [ %150, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %236, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %235, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %235 = getelementptr inbounds i8, i8* %233, i64 1
  %236 = getelementptr inbounds i8, i8* %232, i64 1
  %237 = icmp eq i8* %235, %106
  br i1 %237, label %238, label %231, !llvm.loop !12

238:                                              ; preds = %231, %226, %137
  %239 = phi i8* [ %138, %137 ], [ %149, %226 ], [ %236, %231 ]
  store i8 0, i8* %239, align 1
  %240 = load i8, i8* %108, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %57, i64* %243, align 8
  br label %263

244:                                              ; preds = %238
  %245 = trunc i64 %57 to i8
  store i8 %245, i8* %108, align 1
  br label %263

246:                                              ; preds = %280, %71
  %247 = phi i64 [ 0, %71 ], [ %283, %280 ]
  %248 = icmp eq i64 %76, 0
  br i1 %248, label %263, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds i8, i8* %69, i64 %247
  %251 = load i8, i8* %250, align 1
  %252 = and i64 %247, 3
  %253 = getelementptr inbounds i8, i8* %58, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = xor i8 %254, %251
  %256 = load i8, i8* %73, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %260

258:                                              ; preds = %249
  %259 = load i8*, i8** %75, align 8
  br label %260

260:                                              ; preds = %258, %249
  %261 = phi i8* [ %259, %258 ], [ %74, %249 ]
  %262 = getelementptr inbounds i8, i8* %261, i64 %247
  store i8 %255, i8* %262, align 1
  br label %263

263:                                              ; preds = %260, %246, %68, %242, %244
  %264 = getelementptr inbounds i8, i8* %58, i64 %61
  %265 = getelementptr inbounds i8, i8* %264, i64 %57
  %266 = ptrtoint i8* %265 to i64
  %267 = ptrtoint i8* %13 to i64
  %268 = sub i64 %266, %267
  %269 = trunc i64 %268 to i32
  store i32 %269, i32* %2, align 4
  %270 = icmp ne i32 %30, 0
  %271 = icmp eq i8 %21, 0
  %272 = or i1 %271, %270
  br i1 %272, label %276, label %273

273:                                              ; preds = %263
  %274 = tail call zeroext i1 @_ZN7network6server16WebSocketEncoder7InflateEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.network::server::WebSocketEncoder"* %0, %"class.std::__1::basic_string"* %3)
  %275 = select i1 %274, i32 0, i32 3
  br label %276

276:                                              ; preds = %37, %56, %54, %29, %26, %11, %4, %273, %263
  %277 = phi i32 [ %30, %263 ], [ %275, %273 ], [ 1, %37 ], [ 1, %56 ], [ 3, %54 ], [ 3, %29 ], [ 3, %26 ], [ 3, %11 ], [ 1, %4 ]
  ret i32 %277

278:                                              ; preds = %93
  %279 = load i8*, i8** %75, align 8
  br label %280

280:                                              ; preds = %278, %93
  %281 = phi i8* [ %279, %278 ], [ %74, %93 ]
  %282 = getelementptr inbounds i8, i8* %281, i64 %96
  store i8 %102, i8* %282, align 1
  %283 = add nuw i64 %81, 2
  %284 = add i64 %82, -2
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %246, label %80
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network6server16WebSocketEncoder7InflateEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.network::server::WebSocketEncoder"* nocapture readonly, %"class.std::__1::basic_string"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.network::server::WebSocketEncoder", %"class.network::server::WebSocketEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.net::WebSocketInflater"*, %"class.net::WebSocketInflater"** %5, align 8
  %7 = icmp eq %"class.net::WebSocketInflater"* %6, null
  br i1 %7, label %118, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %21

18:                                               ; preds = %8
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %20 = zext i8 %11 to i64
  br label %21

21:                                               ; preds = %13, %18
  %22 = phi i8* [ %15, %13 ], [ %19, %18 ]
  %23 = phi i64 [ %17, %13 ], [ %20, %18 ]
  %24 = tail call zeroext i1 @_ZN3net17WebSocketInflater8AddBytesEPKcm(%"class.net::WebSocketInflater"* nonnull %6, i8* %22, i64 %23) #9
  br i1 %24, label %25, label %118

25:                                               ; preds = %21
  %26 = load %"class.net::WebSocketInflater"*, %"class.net::WebSocketInflater"** %5, align 8
  %27 = tail call zeroext i1 @_ZN3net17WebSocketInflater6FinishEv(%"class.net::WebSocketInflater"* %26) #9
  br i1 %27, label %28, label %118

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #9
  %32 = load %"class.net::WebSocketInflater"*, %"class.net::WebSocketInflater"** %5, align 8
  %33 = getelementptr inbounds %"class.net::WebSocketInflater", %"class.net::WebSocketInflater"* %32, i64 0, i32 2
  %34 = call i64 @_ZNK3net17WebSocketInflater12OutputBuffer4SizeEv(%"class.net::WebSocketInflater::OutputBuffer"* %33) #9
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %73, label %36

36:                                               ; preds = %28, %62
  %37 = load %"class.net::WebSocketInflater"*, %"class.net::WebSocketInflater"** %5, align 8
  %38 = getelementptr inbounds %"class.net::WebSocketInflater", %"class.net::WebSocketInflater"* %37, i64 0, i32 2
  %39 = call i64 @_ZNK3net17WebSocketInflater12OutputBuffer4SizeEv(%"class.net::WebSocketInflater::OutputBuffer"* %38) #9
  %40 = call %"class.net::IOBufferWithSize"* @_ZN3net17WebSocketInflater9GetOutputEm(%"class.net::WebSocketInflater"* %37, i64 %39) #9
  %41 = icmp eq %"class.net::IOBufferWithSize"* %40, null
  br i1 %41, label %110, label %42

42:                                               ; preds = %36
  %43 = load i8*, i8** %31, align 8
  %44 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %40, i64 0, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %40, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %45, i64 %48
  %50 = call i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKcEES7_S7_(%"class.std::__1::vector"* nonnull %3, i8* %43, i8* %45, i8* %49)
  %51 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %40, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %62

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe"* %56 to %"class.net::IOBuffer"*
  %58 = bitcast %"class.base::RefCountedThreadSafe"* %56 to void (%"class.net::IOBuffer"*)***
  %59 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %59, i64 1
  %61 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %60, align 8
  call void %61(%"class.net::IOBuffer"* nonnull %57) #9
  br label %62

62:                                               ; preds = %42, %55
  %63 = load %"class.net::WebSocketInflater"*, %"class.net::WebSocketInflater"** %5, align 8
  %64 = getelementptr inbounds %"class.net::WebSocketInflater", %"class.net::WebSocketInflater"* %63, i64 0, i32 2
  %65 = call i64 @_ZNK3net17WebSocketInflater12OutputBuffer4SizeEv(%"class.net::WebSocketInflater::OutputBuffer"* %64) #9
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %36

67:                                               ; preds = %62
  %68 = bitcast i8** %31 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector"* %3 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to i8*
  br label %73

73:                                               ; preds = %28, %67
  %74 = phi i8* [ %72, %67 ], [ null, %28 ]
  %75 = phi i64 [ %71, %67 ], [ 0, %28 ]
  %76 = phi i64 [ %69, %67 ], [ 0, %28 ]
  %77 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #9
  %78 = sub i64 %76, %75
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %101, label %80

80:                                               ; preds = %73
  %81 = icmp ugt i64 %78, -17
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %83) #10
  unreachable

84:                                               ; preds = %80
  %85 = icmp ult i64 %78, 23
  br i1 %85, label %94, label %86

86:                                               ; preds = %84
  %87 = add nuw i64 %78, 16
  %88 = and i64 %87, -16
  %89 = call i8* @_Znwm(i64 %88) #8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %89, i8** %90, align 8
  %91 = or i64 %88, -9223372036854775808
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %78, i64* %93, align 8
  br label %98

94:                                               ; preds = %84
  %95 = trunc i64 %78 to i8
  %96 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  store i8 %95, i8* %97, align 1
  br label %98

98:                                               ; preds = %86, %94
  %99 = phi i8* [ %89, %86 ], [ %77, %94 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %99, i8* align 1 %74, i64 %78, i1 false) #9
  %100 = getelementptr inbounds i8, i8* %99, i64 %78
  store i8 0, i8* %100, align 1
  br label %102

101:                                              ; preds = %73
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #9
  br label %102

102:                                              ; preds = %101, %98
  %103 = load i8, i8* %10, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #8
  br label %108

108:                                              ; preds = %105, %102
  %109 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %77, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #9
  br label %110

110:                                              ; preds = %36, %108
  %111 = phi i1 [ true, %108 ], [ false, %36 ]
  %112 = load i8*, i8** %30, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %110
  %115 = ptrtoint i8* %112 to i64
  %116 = bitcast i8** %31 to i64*
  store i64 %115, i64* %116, align 8
  call void @_ZdlPv(i8* nonnull %112) #8
  br label %117

117:                                              ; preds = %110, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #9
  br label %118

118:                                              ; preds = %2, %25, %21, %117
  %119 = phi i1 [ %111, %117 ], [ false, %2 ], [ false, %21 ], [ false, %25 ]
  ret i1 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network6server16WebSocketEncoder11EncodeFrameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEiPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.network::server::WebSocketEncoder"* nocapture readonly, i8*, i64, i32, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %9 = call zeroext i1 @_ZN7network6server16WebSocketEncoder7DeflateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.network::server::WebSocketEncoder"* %0, i8* %1, i64 %2, %"class.std::__1::basic_string"* nonnull %6)
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = load i8*, i8** %8, align 8
  %17 = select i1 %15, i8* %16, i8* %7
  %18 = load i64, i64* %11, align 8
  %19 = zext i8 %14 to i64
  %20 = select i1 %15, i64 %18, i64 %19
  call fastcc void @_ZN7network6server12_GLOBAL__N_117EncodeFrameHybi17EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEibPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(i8* %17, i64 %20, i32 %3, i1 zeroext true, %"class.std::__1::basic_string"* %4)
  br label %23

21:                                               ; preds = %5
  tail call fastcc void @_ZN7network6server12_GLOBAL__N_117EncodeFrameHybi17EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEibPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(i8* %1, i64 %2, i32 %3, i1 zeroext false, %"class.std::__1::basic_string"* %4)
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %23

23:                                               ; preds = %21, %10
  %24 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %21 ], [ %12, %10 ]
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %29) #8
  br label %30

30:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network6server16WebSocketEncoder7DeflateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.network::server::WebSocketEncoder"* nocapture readonly, i8*, i64, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.network::server::WebSocketEncoder", %"class.network::server::WebSocketEncoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.net::WebSocketDeflater"*, %"class.net::WebSocketDeflater"** %6, align 8
  %8 = icmp eq %"class.net::WebSocketDeflater"* %7, null
  br i1 %8, label %82, label %9

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZN3net17WebSocketDeflater8AddBytesEPKcm(%"class.net::WebSocketDeflater"* nonnull %7, i8* %1, i64 %2) #9
  %11 = load %"class.net::WebSocketDeflater"*, %"class.net::WebSocketDeflater"** %6, align 8
  %12 = tail call zeroext i1 @_ZN3net17WebSocketDeflater6FinishEv(%"class.net::WebSocketDeflater"* %11) #9
  %13 = and i1 %10, %12
  br i1 %13, label %14, label %82

14:                                               ; preds = %9
  %15 = load %"class.net::WebSocketDeflater"*, %"class.net::WebSocketDeflater"** %6, align 8
  %16 = getelementptr inbounds %"class.net::WebSocketDeflater", %"class.net::WebSocketDeflater"* %15, i64 0, i32 3, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.net::WebSocketDeflater", %"class.net::WebSocketDeflater"* %15, i64 0, i32 3, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, %17
  br i1 %20, label %23, label %21

21:                                               ; preds = %14
  %22 = sub i64 %19, %17
  br label %28

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.net::WebSocketDeflater", %"class.net::WebSocketDeflater"* %15, i64 0, i32 3, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %19, %17
  %27 = add i64 %26, %25
  br label %28

28:                                               ; preds = %21, %23
  %29 = phi i64 [ %22, %21 ], [ %27, %23 ]
  %30 = tail call %"class.net::IOBufferWithSize"* @_ZN3net17WebSocketDeflater9GetOutputEm(%"class.net::WebSocketDeflater"* %15, i64 %29) #9
  %31 = icmp eq %"class.net::IOBufferWithSize"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %30, i64 0, i32 0, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %30, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = icmp ugt i32 %37, -17
  br i1 %39, label %40, label %42

40:                                               ; preds = %32
  %41 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %41) #10
  unreachable

42:                                               ; preds = %32
  %43 = icmp ult i32 %37, 23
  br i1 %43, label %52, label %44

44:                                               ; preds = %42
  %45 = add nuw nsw i64 %38, 16
  %46 = and i64 %45, -16
  %47 = tail call i8* @_Znwm(i64 %46) #8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %47, i8** %48, align 8
  %49 = or i64 %46, -9223372036854775808
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %38, i64* %51, align 8
  br label %57

52:                                               ; preds = %42
  %53 = trunc i32 %37 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1
  %56 = icmp eq i32 %37, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %52, %44
  %58 = phi i8* [ %47, %44 ], [ %33, %52 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 %35, i64 %38, i1 false) #9
  br label %59

59:                                               ; preds = %52, %57
  %60 = phi i8* [ %33, %52 ], [ %58, %57 ]
  %61 = getelementptr inbounds i8, i8* %60, i64 %38
  store i8 0, i8* %61, align 1
  %62 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #8
  br label %69

69:                                               ; preds = %66, %59
  %70 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %33, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #9
  %71 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %30, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw sub i32* %72, i32 1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %82

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %71, i64 -2
  %77 = bitcast %"class.base::RefCountedThreadSafe"* %76 to %"class.net::IOBuffer"*
  %78 = bitcast %"class.base::RefCountedThreadSafe"* %76 to void (%"class.net::IOBuffer"*)***
  %79 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %79, i64 1
  %81 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %80, align 8
  tail call void %81(%"class.net::IOBuffer"* nonnull %77) #9
  br label %82

82:                                               ; preds = %9, %4, %28, %75, %69
  %83 = phi i1 [ false, %4 ], [ false, %9 ], [ true, %69 ], [ true, %75 ], [ false, %28 ]
  ret i1 %83
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7network6server12_GLOBAL__N_117EncodeFrameHybi17EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEibPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(i8*, i64, i32, i1 zeroext, %"class.std::__1::basic_string"* nocapture) unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to [8 x i8]*
  %10 = alloca %"class.std::__1::basic_string", align 8
  store i32 %2, i32* %6, align 4
  %11 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = select i1 %3, i8 -63, i8 -127
  %16 = bitcast i8** %13 to i64*
  %17 = bitcast %"class.std::__1::vector"* %7 to i64*
  %18 = bitcast i8** %14 to i64*
  %19 = tail call i8* @_Znwm(i64 1) #8
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  %21 = ptrtoint i8* %20 to i64
  store i8 %15, i8* %19, align 1
  %22 = ptrtoint i8* %19 to i64
  store i64 %22, i64* %17, align 8
  store i64 %21, i64* %16, align 8
  store i64 %21, i64* %18, align 8
  %23 = icmp eq i32 %2, 0
  %24 = select i1 %23, i8 0, i8 -128
  %25 = icmp ult i64 %1, 126
  br i1 %25, label %26, label %39

26:                                               ; preds = %5
  %27 = trunc i64 %1 to i8
  %28 = or i8 %24, %27
  %29 = bitcast %"class.std::__1::vector"* %7 to i64*
  %30 = tail call i8* @_Znwm(i64 2) #8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 %28, i8* %31, align 1
  %32 = insertelement <2 x i8*> undef, i8* %30, i32 0
  %33 = shufflevector <2 x i8*> %32, <2 x i8*> undef, <2 x i32> zeroinitializer
  %34 = getelementptr i8, <2 x i8*> %33, <2 x i64> <i64 2, i64 2>
  %35 = ptrtoint <2 x i8*> %34 to <2 x i64>
  %36 = ptrtoint i8* %30 to i64
  %37 = load i8, i8* %19, align 1
  store i8 %37, i8* %30, align 1
  store i64 %36, i64* %29, align 8
  %38 = bitcast i8** %13 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %38, align 8
  tail call void @_ZdlPv(i8* nonnull %19) #8
  br label %181

39:                                               ; preds = %5
  %40 = icmp ult i64 %1, 65536
  br i1 %40, label %41, label %142

41:                                               ; preds = %39
  %42 = or i8 %24, 126
  %43 = bitcast i8** %13 to i64*
  %44 = bitcast %"class.std::__1::vector"* %7 to i64*
  %45 = bitcast i8** %14 to i64*
  %46 = tail call i8* @_Znwm(i64 2) #8
  %47 = getelementptr inbounds i8, i8* %46, i64 1
  %48 = getelementptr inbounds i8, i8* %46, i64 2
  %49 = ptrtoint i8* %48 to i64
  store i8 %42, i8* %47, align 1
  %50 = getelementptr inbounds i8, i8* %46, i64 2
  %51 = ptrtoint i8* %50 to i64
  %52 = ptrtoint i8* %46 to i64
  %53 = load i8, i8* %19, align 1
  store i8 %53, i8* %46, align 1
  store i64 %52, i64* %44, align 8
  store i64 %51, i64* %43, align 8
  store i64 %49, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %19) #8
  %54 = lshr i64 %1, 8
  %55 = trunc i64 %54 to i8
  %56 = ptrtoint i8* %50 to i64
  %57 = bitcast i8** %13 to i64*
  %58 = bitcast %"class.std::__1::vector"* %7 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %56, %59
  %61 = add i64 %60, 1
  %62 = icmp slt i64 %61, 0
  %63 = inttoptr i64 %59 to i8*
  br i1 %62, label %64, label %66

64:                                               ; preds = %41
  %65 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %65) #10
  unreachable

66:                                               ; preds = %41
  %67 = bitcast i8** %14 to i64*
  %68 = sub i64 %49, %59
  %69 = icmp ult i64 %68, 4611686018427387903
  br i1 %69, label %70, label %75

70:                                               ; preds = %66
  %71 = shl i64 %68, 1
  %72 = icmp ult i64 %71, %61
  %73 = select i1 %72, i64 %61, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %70, %66
  %76 = phi i64 [ %73, %70 ], [ 9223372036854775807, %66 ]
  %77 = tail call i8* @_Znwm(i64 %76) #8
  br label %78

78:                                               ; preds = %75, %70
  %79 = phi i64 [ %76, %75 ], [ 0, %70 ]
  %80 = phi i8* [ %77, %75 ], [ null, %70 ]
  %81 = getelementptr inbounds i8, i8* %80, i64 %60
  %82 = getelementptr inbounds i8, i8* %80, i64 %79
  %83 = ptrtoint i8* %82 to i64
  store i8 %55, i8* %81, align 1
  %84 = getelementptr inbounds i8, i8* %81, i64 1
  %85 = ptrtoint i8* %84 to i64
  %86 = sub i64 %51, %59
  %87 = sub i64 0, %86
  %88 = getelementptr inbounds i8, i8* %81, i64 %87
  %89 = ptrtoint i8* %88 to i64
  %90 = icmp sgt i64 %86, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %78
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %63, i64 %86, i1 false) #9
  br label %92

92:                                               ; preds = %91, %78
  store i64 %89, i64* %58, align 8
  store i64 %85, i64* %57, align 8
  store i64 %83, i64* %67, align 8
  %93 = icmp eq i64 %59, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %92
  tail call void @_ZdlPv(i8* nonnull %63) #8
  br label %95

95:                                               ; preds = %92, %94
  %96 = trunc i64 %1 to i8
  %97 = icmp ult i8* %84, %82
  br i1 %97, label %98, label %102

98:                                               ; preds = %95
  store i8 %96, i8* %84, align 1
  %99 = getelementptr inbounds i8, i8* %84, i64 1
  %100 = ptrtoint i8* %99 to i64
  %101 = bitcast i8** %13 to i64*
  store i64 %100, i64* %101, align 8
  br label %181

102:                                              ; preds = %95
  %103 = ptrtoint i8* %84 to i64
  %104 = bitcast i8** %13 to i64*
  %105 = bitcast %"class.std::__1::vector"* %7 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = add i64 %107, 1
  %109 = icmp slt i64 %108, 0
  %110 = inttoptr i64 %106 to i8*
  br i1 %109, label %111, label %113

111:                                              ; preds = %102
  %112 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %112) #10
  unreachable

113:                                              ; preds = %102
  %114 = bitcast i8** %14 to i64*
  %115 = sub i64 %83, %106
  %116 = icmp ult i64 %115, 4611686018427387903
  br i1 %116, label %117, label %122

117:                                              ; preds = %113
  %118 = shl i64 %115, 1
  %119 = icmp ult i64 %118, %108
  %120 = select i1 %119, i64 %108, i64 %118
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %117, %113
  %123 = phi i64 [ %120, %117 ], [ 9223372036854775807, %113 ]
  %124 = tail call i8* @_Znwm(i64 %123) #8
  br label %125

125:                                              ; preds = %122, %117
  %126 = phi i64 [ %123, %122 ], [ 0, %117 ]
  %127 = phi i8* [ %124, %122 ], [ null, %117 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 %107
  %129 = getelementptr inbounds i8, i8* %127, i64 %126
  %130 = ptrtoint i8* %129 to i64
  store i8 %96, i8* %128, align 1
  %131 = getelementptr inbounds i8, i8* %128, i64 1
  %132 = ptrtoint i8* %131 to i64
  %133 = sub i64 %85, %106
  %134 = sub i64 0, %133
  %135 = getelementptr inbounds i8, i8* %128, i64 %134
  %136 = ptrtoint i8* %135 to i64
  %137 = icmp sgt i64 %133, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %125
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %135, i8* align 1 %110, i64 %133, i1 false) #9
  br label %139

139:                                              ; preds = %138, %125
  store i64 %136, i64* %105, align 8
  store i64 %132, i64* %104, align 8
  store i64 %130, i64* %114, align 8
  %140 = icmp eq i64 %106, 0
  br i1 %140, label %181, label %141

141:                                              ; preds = %139
  tail call void @_ZdlPv(i8* nonnull %110) #8
  br label %181

142:                                              ; preds = %39
  %143 = or i8 %24, 127
  %144 = bitcast i8** %13 to i64*
  %145 = bitcast %"class.std::__1::vector"* %7 to i64*
  %146 = bitcast i8** %14 to i64*
  %147 = tail call i8* @_Znwm(i64 2) #8
  %148 = getelementptr inbounds i8, i8* %147, i64 1
  %149 = getelementptr inbounds i8, i8* %147, i64 2
  %150 = ptrtoint i8* %149 to i64
  store i8 %143, i8* %148, align 1
  %151 = getelementptr inbounds i8, i8* %147, i64 2
  %152 = ptrtoint i8* %151 to i64
  %153 = ptrtoint i8* %147 to i64
  %154 = load i8, i8* %19, align 1
  store i8 %154, i8* %147, align 1
  store i64 %153, i64* %145, align 8
  store i64 %152, i64* %144, align 8
  store i64 %150, i64* %146, align 8
  tail call void @_ZdlPv(i8* nonnull %19) #8
  %155 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #9
  %156 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 1
  %157 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 2
  %158 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 3
  %159 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 4
  %160 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 5
  %161 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 6
  %162 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 7
  %163 = trunc i64 %1 to i8
  store i8 %163, i8* %162, align 1
  %164 = lshr i64 %1, 8
  %165 = trunc i64 %164 to i8
  store i8 %165, i8* %161, align 2
  %166 = lshr i64 %1, 16
  %167 = trunc i64 %166 to i8
  store i8 %167, i8* %160, align 1
  %168 = lshr i64 %1, 24
  %169 = trunc i64 %168 to i8
  store i8 %169, i8* %159, align 4
  %170 = lshr i64 %1, 32
  %171 = trunc i64 %170 to i8
  store i8 %171, i8* %158, align 1
  %172 = lshr i64 %1, 40
  %173 = trunc i64 %172 to i8
  store i8 %173, i8* %157, align 2
  %174 = lshr i64 %1, 48
  %175 = trunc i64 %174 to i8
  store i8 %175, i8* %156, align 1
  %176 = lshr i64 %1, 56
  %177 = trunc i64 %176 to i8
  store i8 %177, i8* %155, align 8
  %178 = getelementptr inbounds i64, i64* %8, i64 1
  %179 = bitcast i64* %178 to i8*
  %180 = call i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKcEES7_S7_(%"class.std::__1::vector"* nonnull %7, i8* %151, i8* nonnull %155, i8* %179)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #9
  br label %181

181:                                              ; preds = %141, %139, %98, %26, %142
  %182 = load i32, i32* %6, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %247, label %184

184:                                              ; preds = %181
  %185 = bitcast i32* %6 to i8*
  %186 = load i8*, i8** %13, align 8
  %187 = getelementptr inbounds i32, i32* %6, i64 1
  %188 = bitcast i32* %187 to i8*
  %189 = call i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* nonnull %7, i8* %186, i8* nonnull %185, i8* %188)
  %190 = icmp eq i64 %1, 0
  br i1 %190, label %251, label %191

191:                                              ; preds = %184
  %192 = bitcast i8** %13 to i64*
  %193 = bitcast %"class.std::__1::vector"* %7 to i64*
  %194 = bitcast i8** %14 to i64*
  br label %195

195:                                              ; preds = %244, %191
  %196 = phi i64 [ 0, %191 ], [ %245, %244 ]
  %197 = getelementptr inbounds i8, i8* %0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = and i64 %196, 3
  %200 = getelementptr inbounds i8, i8* %185, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = xor i8 %201, %198
  %203 = load i8*, i8** %13, align 8
  %204 = load i8*, i8** %14, align 8
  %205 = icmp ult i8* %203, %204
  %206 = ptrtoint i8* %204 to i64
  br i1 %205, label %207, label %210

207:                                              ; preds = %195
  store i8 %202, i8* %203, align 1
  %208 = getelementptr inbounds i8, i8* %203, i64 1
  %209 = ptrtoint i8* %208 to i64
  store i64 %209, i64* %192, align 8
  br label %244

210:                                              ; preds = %195
  %211 = ptrtoint i8* %203 to i64
  %212 = load i64, i64* %193, align 8
  %213 = sub i64 %211, %212
  %214 = add i64 %213, 1
  %215 = icmp slt i64 %214, 0
  %216 = inttoptr i64 %212 to i8*
  br i1 %215, label %217, label %219

217:                                              ; preds = %210
  %218 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %218) #10
  unreachable

219:                                              ; preds = %210
  %220 = sub i64 %206, %212
  %221 = icmp ult i64 %220, 4611686018427387903
  br i1 %221, label %222, label %227

222:                                              ; preds = %219
  %223 = shl i64 %220, 1
  %224 = icmp ult i64 %223, %214
  %225 = select i1 %224, i64 %214, i64 %223
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %222, %219
  %228 = phi i64 [ %225, %222 ], [ 9223372036854775807, %219 ]
  %229 = call i8* @_Znwm(i64 %228) #8
  br label %230

230:                                              ; preds = %227, %222
  %231 = phi i64 [ %228, %227 ], [ 0, %222 ]
  %232 = phi i8* [ %229, %227 ], [ null, %222 ]
  %233 = getelementptr inbounds i8, i8* %232, i64 %213
  %234 = getelementptr inbounds i8, i8* %232, i64 %231
  %235 = ptrtoint i8* %234 to i64
  store i8 %202, i8* %233, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = ptrtoint i8* %236 to i64
  %238 = ptrtoint i8* %232 to i64
  %239 = icmp sgt i64 %213, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %232, i8* align 1 %216, i64 %213, i1 false) #9
  br label %241

241:                                              ; preds = %240, %230
  store i64 %238, i64* %193, align 8
  store i64 %237, i64* %192, align 8
  store i64 %235, i64* %194, align 8
  %242 = icmp eq i64 %212, 0
  br i1 %242, label %244, label %243

243:                                              ; preds = %241
  call void @_ZdlPv(i8* nonnull %216) #8
  br label %244

244:                                              ; preds = %207, %241, %243
  %245 = add nuw i64 %196, 1
  %246 = icmp eq i64 %245, %1
  br i1 %246, label %251, label %195

247:                                              ; preds = %181
  %248 = load i8*, i8** %13, align 8
  %249 = getelementptr inbounds i8, i8* %0, i64 %1
  %250 = call i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* nonnull %7, i8* %248, i8* %0, i8* %249)
  br label %251

251:                                              ; preds = %244, %184, %247
  %252 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #9
  %253 = load i8*, i8** %12, align 8
  %254 = bitcast i8** %13 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = ptrtoint i8* %253 to i64
  %257 = sub i64 %255, %256
  %258 = icmp ugt i64 %257, -17
  br i1 %258, label %259, label %261

259:                                              ; preds = %251
  %260 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %260) #10
  unreachable

261:                                              ; preds = %251
  %262 = icmp ult i64 %257, 23
  br i1 %262, label %271, label %263

263:                                              ; preds = %261
  %264 = add nuw i64 %257, 16
  %265 = and i64 %264, -16
  %266 = call i8* @_Znwm(i64 %265) #8
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %266, i8** %267, align 8
  %268 = or i64 %265, -9223372036854775808
  %269 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %268, i64* %269, align 8
  %270 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %257, i64* %270, align 8
  br label %276

271:                                              ; preds = %261
  %272 = trunc i64 %257 to i8
  %273 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %273, i64 0, i32 1, i32 0
  store i8 %272, i8* %274, align 1
  %275 = icmp eq i64 %257, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %271, %263
  %277 = phi i8* [ %266, %263 ], [ %252, %271 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %277, i8* align 1 %253, i64 %257, i1 false) #9
  br label %278

278:                                              ; preds = %271, %276
  %279 = phi i8* [ %252, %271 ], [ %277, %276 ]
  %280 = getelementptr inbounds i8, i8* %279, i64 %257
  store i8 0, i8* %280, align 1
  %281 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %289

285:                                              ; preds = %278
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #8
  %288 = load i8*, i8** %12, align 8
  br label %289

289:                                              ; preds = %285, %278
  %290 = phi i8* [ %288, %285 ], [ %253, %278 ]
  %291 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* nonnull align 8 %252, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252) #9
  %292 = icmp eq i8* %290, null
  br i1 %292, label %295, label %293

293:                                              ; preds = %289
  %294 = ptrtoint i8* %290 to i64
  store i64 %294, i64* %254, align 8
  call void @_ZdlPv(i8* nonnull %290) #8
  br label %295

295:                                              ; preds = %289, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  ret void
}

declare zeroext i1 @_ZN3net17WebSocketInflater8AddBytesEPKcm(%"class.net::WebSocketInflater"*, i8*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN3net17WebSocketInflater6FinishEv(%"class.net::WebSocketInflater"*) local_unnamed_addr #4

declare %"class.net::IOBufferWithSize"* @_ZN3net17WebSocketInflater9GetOutputEm(%"class.net::WebSocketInflater"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKcEES7_S7_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #9
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !13
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !13
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !16, !noalias !13
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !16, !noalias !13
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !13
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !13
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !16, !noalias !13
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !16, !noalias !13
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !13
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !13
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !16, !noalias !13
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !16, !noalias !13
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !13
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !13
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !16, !noalias !13
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !16, !noalias !13
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !18

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !13
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !13
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !16, !noalias !13
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !16, !noalias !13
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !19

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #9
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !20

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #9
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #10
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #8
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !21
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !21
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !24, !noalias !21
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !24, !noalias !21
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !21
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !21
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !24, !noalias !21
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !24, !noalias !21
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !21
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !21
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !24, !noalias !21
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !24, !noalias !21
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !21
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !21
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !24, !noalias !21
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !24, !noalias !21
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !26

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !21
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !21
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !24, !noalias !21
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !24, !noalias !21
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !27

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !28

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #9
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !29
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !29
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !32, !noalias !29
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !32, !noalias !29
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !29
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !29
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !32, !noalias !29
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !32, !noalias !29
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !29
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !29
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !32, !noalias !29
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !32, !noalias !29
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !29
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !29
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !32, !noalias !29
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !32, !noalias !29
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !34

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !29
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !29
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !32, !noalias !29
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !32, !noalias !29
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !35

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !36

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #8
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

declare zeroext i1 @_ZN3net17WebSocketDeflater8AddBytesEPKcm(%"class.net::WebSocketDeflater"*, i8*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN3net17WebSocketDeflater6FinishEv(%"class.net::WebSocketDeflater"*) local_unnamed_addr #4

declare %"class.net::IOBufferWithSize"* @_ZN3net17WebSocketDeflater9GetOutputEm(%"class.net::WebSocketDeflater"*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN3net24WebSocketExtensionParser5ParseEPKcm(%"class.net::WebSocketExtensionParser"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #9
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !37
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !37
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !40, !noalias !37
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !40, !noalias !37
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !37
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !37
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !40, !noalias !37
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !40, !noalias !37
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !37
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !37
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !40, !noalias !37
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !40, !noalias !37
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !37
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !37
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !40, !noalias !37
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !40, !noalias !37
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !42

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !37
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !37
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !40, !noalias !37
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !40, !noalias !37
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !43

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #9
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !44

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #9
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #10
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #8
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !45
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !45
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !48, !noalias !45
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !48, !noalias !45
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !45
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !45
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !48, !noalias !45
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !48, !noalias !45
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !45
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !45
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !48, !noalias !45
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !48, !noalias !45
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !45
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !45
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !48, !noalias !45
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !48, !noalias !45
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !50

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !45
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !45
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !48, !noalias !45
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !48, !noalias !45
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !51

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !52

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #9
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !53
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !53
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !56, !noalias !53
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !56, !noalias !53
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !53
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !53
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !56, !noalias !53
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !56, !noalias !53
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !53
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !53
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !56, !noalias !53
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !56, !noalias !53
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !53
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !53
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !56, !noalias !53
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !56, !noalias !53
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !58

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !53
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !53
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !56, !noalias !53
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !56, !noalias !53
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !59

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !60

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #8
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare i64 @_ZNK3net17WebSocketInflater12OutputBuffer4SizeEv(%"class.net::WebSocketInflater::OutputBuffer"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3net17WebSocketDeflaterD1Ev(%"class.net::WebSocketDeflater"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3net17WebSocketInflaterD1Ev(%"class.net::WebSocketInflater"*) unnamed_addr #5

declare void @_ZN3net17WebSocketDeflaterC1ENS0_19ContextTakeOverModeE(%"class.net::WebSocketDeflater"*, i32) unnamed_addr #4

declare void @_ZN3net17WebSocketInflaterC1Emm(%"class.net::WebSocketInflater"*, i64, i64) unnamed_addr #4

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !9}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !9}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !9}
!59 = distinct !{!59, !11}
!60 = distinct !{!60, !9}
