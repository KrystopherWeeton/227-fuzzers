; ModuleID = '../../third_party/blink/renderer/core/css/css_primitive_value.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_primitive_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.blink::CSSMathFunctionValue" = type { %"class.blink::CSSPrimitiveValue", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSMathExpressionNode"* }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::CalculationValue" = type <{ %"class.WTF::RefCounted", [4 x i8], %"union.blink::CalculationValue::DataUnion", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"union.blink::CalculationValue::DataUnion" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::CalculationExpressionNode"* }
%"class.blink::CalculationExpressionNode" = type opaque
%"struct.blink::PixelsAndPercent" = type { float, float }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type opaque
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector", %"class.std::__1::bitset" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [80 x i8] }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.176", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.115", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.95", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.109", [4 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { float }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.118", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.127" }
%"class.WTF::Vector.127" = type { %"class.WTF::VectorBuffer.128" }
%"class.WTF::VectorBuffer.128" = type { %"class.WTF::VectorBufferBase.129" }
%"class.WTF::VectorBufferBase.129" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.143" }
%"class.WTF::VectorBuffer.143" = type { %"class.WTF::VectorBufferBase.144" }
%"class.WTF::VectorBufferBase.144" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.180" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.175 }
%class.scoped_refptr.175 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"em\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"ex\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"rem\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"ch\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"px\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"cm\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"dppx\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"dpi\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"dpcm\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"mm\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"pt\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"pc\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"deg\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"rad\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"grad\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"hz\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"khz\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"turn\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"fr\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"vw\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"vh\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"vmin\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"vmax\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E = external local_unnamed_addr global i8, align 1
@switch.table._ZN5blink17CSSPrimitiveValue22UnitTypeToUnitCategoryENS0_8UnitTypeE = private unnamed_addr constant [29 x i32] [i32 0, i32 1, i32 7, i32 7, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 2, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 6], align 4
@switch.table._ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE = private unnamed_addr constant [24 x double] [double 0x4042E5CB972E5CB9, double 0x400E3C78F1E3C78E, double 9.600000e+01, double 0x3FF5555555555555, double 1.600000e+01, double 0x3FEE3C78F1E3C78E, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 0x404CA5DC1A63C1F8, double 9.000000e-01, double 3.600000e+02, double 1.000000e+00, double 1.000000e+03, double 1.000000e+00, double 1.000000e+03, double 1.000000e+00, double 0x3F85555555555555, double 0x3F9B17E4B17E4B19], align 8
@switch.table._ZN5blink17CSSPrimitiveValue28CanonicalUnitTypeForCategoryENS0_12UnitCategoryE = private unnamed_addr constant [7 x i32] [i32 1, i32 0, i32 5, i32 19, i32 23, i32 25, i32 27], align 4
@switch.table._ZN5blink17CSSPrimitiveValue24UnitTypeToLengthUnitTypeENS0_8UnitTypeERNS0_14LengthUnitTypeE = private unnamed_addr constant [31 x i32] [i32 1, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 7, i32 8, i32 9, i32 4, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2], align 4
@switch.table._ZN5blink17CSSPrimitiveValue24LengthUnitTypeToUnitTypeENS0_14LengthUnitTypeE = private unnamed_addr constant [10 x i32] [i32 5, i32 2, i32 3, i32 4, i32 16, i32 17, i32 12, i32 13, i32 14, i32 15], align 4
@switch.table._ZN5blink17CSSPrimitiveValue16UnitTypeToStringENS0_8UnitTypeE = private unnamed_addr constant [31 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)], align 8

@_ZN5blink17CSSPrimitiveValueC1ENS_8CSSValue9ClassTypeE = hidden unnamed_addr alias void (%"class.blink::CSSPrimitiveValue"*, i32), void (%"class.blink::CSSPrimitiveValue"*, i32)* @_ZN5blink17CSSPrimitiveValueC2ENS_8CSSValue9ClassTypeE

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink17CSSPrimitiveValue21ClampToCSSLengthRangeEd(double) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call double @_ZN5blink21CSSValueClampingUtils11ClampLengthEd(double %0) #6
  br label %6

6:                                                ; preds = %1, %4
  %7 = phi double [ %5, %4 ], [ %0, %1 ]
  %8 = fcmp ult double %7, 0x417FFFFFC0000000
  br i1 %8, label %9, label %13

9:                                                ; preds = %6
  %10 = fcmp ole double %7, 0xC17FFFFFE0000000
  %11 = select i1 %10, double 0xC17FFFFFE0000000, double %7
  %12 = fptrunc double %11 to float
  br label %13

13:                                               ; preds = %6, %9
  %14 = phi float [ %12, %9 ], [ 0x417FFFFFC0000000, %6 ]
  ret float %14
}

declare double @_ZN5blink21CSSValueClampingUtils11ClampLengthEd(double) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink17CSSPrimitiveValue22UnitTypeToUnitCategoryENS0_8UnitTypeE(i32) local_unnamed_addr #2 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 29
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [29 x i32], [29 x i32]* @switch.table._ZN5blink17CSSPrimitiveValue22UnitTypeToUnitCategoryENS0_8UnitTypeE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue32IsCalculatedPercentageWithLengthEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %7 = bitcast i8* %6 to %"class.blink::CSSMathExpressionNode"**
  %8 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 3
  br label %12

12:                                               ; preds = %5, %1
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsResolutionEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %9, -27
  %11 = icmp ult i32 %10, 3
  br label %12

12:                                               ; preds = %5, %1
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsFlexEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = icmp eq i8 %8, 30
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue7IsAngleEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %9, -19
  %11 = icmp ult i32 %10, 4
  br label %19

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %14 = bitcast i8* %13 to %"class.blink::CSSMathExpressionNode"**
  %15 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 4
  br label %19

19:                                               ; preds = %12, %5
  %20 = phi i1 [ %11, %5 ], [ %18, %12 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %9, -3
  %11 = icmp ult i32 %10, 16
  %12 = icmp eq i8 %8, 32
  %13 = or i1 %12, %11
  br label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %16 = bitcast i8* %15 to %"class.blink::CSSMathExpressionNode"**
  %17 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br label %21

21:                                               ; preds = %14, %5
  %22 = phi i1 [ %13, %5 ], [ %20, %14 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue4IsPxEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = icmp eq i8 %8, 5
  br label %13

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %12 = tail call zeroext i1 @_ZNK5blink20CSSMathFunctionValue4IsPxEv(%"class.blink::CSSMathFunctionValue"* %11) #6
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi i1 [ %9, %5 ], [ %12, %10 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink20CSSMathFunctionValue4IsPxEv(%"class.blink::CSSMathFunctionValue"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = icmp eq i8 %8, 1
  %10 = icmp eq i8 %8, 31
  %11 = or i1 %9, %10
  br label %19

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %14 = bitcast i8* %13 to %"class.blink::CSSMathExpressionNode"**
  %15 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br label %19

19:                                               ; preds = %12, %5
  %20 = phi i1 [ %11, %5 ], [ %18, %12 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue9IsIntegerEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = icmp eq i8 %8, 31
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = icmp eq i8 %8, 2
  br label %17

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %12 = bitcast i8* %11 to %"class.blink::CSSMathExpressionNode"**
  %13 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 2
  br label %17

17:                                               ; preds = %10, %5
  %18 = phi i1 [ %9, %5 ], [ %16, %10 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsTimeEv(%"class.blink::CSSPrimitiveValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 127
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %9, -23
  %11 = icmp ult i32 %10, 2
  br label %19

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %14 = bitcast i8* %13 to %"class.blink::CSSMathExpressionNode"**
  %15 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 5
  br label %19

19:                                               ; preds = %12, %5
  %20 = phi i1 [ %11, %5 ], [ %18, %12 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue28IsComputationallyIndependentEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %7 = tail call zeroext i1 @_ZNK5blink22CSSNumericLiteralValue28IsComputationallyIndependentEv(%"class.blink::CSSNumericLiteralValue"* %6) #6
  br label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %10 = tail call zeroext i1 @_ZNK5blink20CSSMathFunctionValue28IsComputationallyIndependentEv(%"class.blink::CSSMathFunctionValue"* %9) #6
  br label %11

11:                                               ; preds = %8, %5
  %12 = phi i1 [ %7, %5 ], [ %10, %8 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK5blink22CSSNumericLiteralValue28IsComputationallyIndependentEv(%"class.blink::CSSNumericLiteralValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20CSSMathFunctionValue28IsComputationallyIndependentEv(%"class.blink::CSSMathFunctionValue"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17CSSPrimitiveValueC2ENS_8CSSValue9ClassTypeE(%"class.blink::CSSPrimitiveValue"* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 0
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, -8
  store i8 %6, i8* %4, align 1
  %7 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %8 = trunc i32 %1 to i8
  store i8 %8, i8* %7, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSPrimitiveValue"* @_ZN5blink17CSSPrimitiveValue16CreateFromLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %80 [
    i8 1, label %5
    i8 2, label %21
    i8 8, label %38
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::Length"* %0 to float*
  %11 = load float, float* %10, align 4
  br label %16

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  br label %16

16:                                               ; preds = %9, %12
  %17 = phi float [ %11, %9 ], [ %15, %12 ]
  %18 = fpext float %17 to double
  %19 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %18, i32 2) #6
  %20 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %19, i64 0, i32 0
  br label %80

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::Length"* %0 to float*
  %27 = load float, float* %26, align 4
  br label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = sitofp i32 %30 to float
  br label %32

32:                                               ; preds = %25, %28
  %33 = phi float [ %27, %25 ], [ %31, %28 ]
  %34 = fdiv float %33, %1
  %35 = fpext float %34 to double
  %36 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %35, i32 5) #6
  %37 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %36, i64 0, i32 0
  br label %80

38:                                               ; preds = %2
  %39 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0) #6
  %40 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %39, i64 0, i32 3
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %39, i64 0, i32 2
  %46 = bitcast %"union.blink::CalculationValue::DataUnion"* %45 to float*
  %47 = load float, float* %46, align 8
  %48 = fcmp une float %47, 0.000000e+00
  %49 = bitcast %"union.blink::CalculationValue::DataUnion"* %45 to %"struct.blink::PixelsAndPercent"*
  %50 = getelementptr inbounds %"struct.blink::PixelsAndPercent", %"struct.blink::PixelsAndPercent"* %49, i64 0, i32 1
  %51 = load float, float* %50, align 4
  br i1 %48, label %52, label %57

52:                                               ; preds = %44
  %53 = fcmp une float %51, 0.000000e+00
  br i1 %53, label %54, label %68

54:                                               ; preds = %38, %52
  %55 = tail call %"class.blink::CSSMathFunctionValue"* @_ZN5blink20CSSMathFunctionValue6CreateERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %0, float %1) #6
  %56 = getelementptr inbounds %"class.blink::CSSMathFunctionValue", %"class.blink::CSSMathFunctionValue"* %55, i64 0, i32 0
  br label %80

57:                                               ; preds = %44
  %58 = fpext float %51 to double
  %59 = fcmp olt float %51, 0.000000e+00
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = and i8 %41, 2
  %62 = icmp eq i8 %61, 0
  %63 = select i1 %62, double %58, double 0.000000e+00
  br label %64

64:                                               ; preds = %60, %57
  %65 = phi double [ %58, %57 ], [ %63, %60 ]
  %66 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %65, i32 2) #6
  %67 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %66, i64 0, i32 0
  br label %80

68:                                               ; preds = %52
  %69 = fdiv float %47, %1
  %70 = fpext float %69 to double
  %71 = fcmp olt float %69, 0.000000e+00
  br i1 %71, label %72, label %76

72:                                               ; preds = %68
  %73 = and i8 %41, 2
  %74 = icmp eq i8 %73, 0
  %75 = select i1 %74, double %70, double 0.000000e+00
  br label %76

76:                                               ; preds = %72, %68
  %77 = phi double [ %70, %68 ], [ %75, %72 ]
  %78 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %77, i32 5) #6
  %79 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %78, i64 0, i32 0
  br label %80

80:                                               ; preds = %2, %54, %64, %76, %32, %16
  %81 = phi %"class.blink::CSSPrimitiveValue"* [ %37, %32 ], [ %20, %16 ], [ %56, %54 ], [ %79, %76 ], [ %67, %64 ], [ null, %2 ]
  ret %"class.blink::CSSPrimitiveValue"* %81
}

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"*) local_unnamed_addr #1

declare %"class.blink::CSSMathFunctionValue"* @_ZN5blink20CSSMathFunctionValue6CreateERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17CSSPrimitiveValue14ComputeSecondsEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %7 = tail call double @_ZNK5blink20CSSMathFunctionValue14ComputeSecondsEv(%"class.blink::CSSMathFunctionValue"* %6) #6
  br label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %10 = tail call double @_ZNK5blink22CSSNumericLiteralValue14ComputeSecondsEv(%"class.blink::CSSNumericLiteralValue"* %9) #6
  br label %11

11:                                               ; preds = %8, %5
  %12 = phi double [ %7, %5 ], [ %10, %8 ]
  %13 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = tail call double @_ZN5blink21CSSValueClampingUtils9ClampTimeEd(double %12) #6
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi double [ %16, %15 ], [ %12, %11 ]
  ret double %18
}

declare double @_ZNK5blink20CSSMathFunctionValue14ComputeSecondsEv(%"class.blink::CSSMathFunctionValue"*) local_unnamed_addr #1

declare double @_ZNK5blink22CSSNumericLiteralValue14ComputeSecondsEv(%"class.blink::CSSNumericLiteralValue"*) local_unnamed_addr #1

declare double @_ZN5blink21CSSValueClampingUtils9ClampTimeEd(double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %7 = tail call double @_ZNK5blink20CSSMathFunctionValue14ComputeDegreesEv(%"class.blink::CSSMathFunctionValue"* %6) #6
  br label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %10 = tail call double @_ZNK5blink22CSSNumericLiteralValue14ComputeDegreesEv(%"class.blink::CSSNumericLiteralValue"* %9) #6
  br label %11

11:                                               ; preds = %8, %5
  %12 = phi double [ %7, %5 ], [ %10, %8 ]
  %13 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = tail call double @_ZN5blink21CSSValueClampingUtils10ClampAngleEd(double %12) #6
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi double [ %16, %15 ], [ %12, %11 ]
  ret double %18
}

declare double @_ZNK5blink20CSSMathFunctionValue14ComputeDegreesEv(%"class.blink::CSSMathFunctionValue"*) local_unnamed_addr #1

declare double @_ZNK5blink22CSSNumericLiteralValue14ComputeDegreesEv(%"class.blink::CSSNumericLiteralValue"*) local_unnamed_addr #1

declare double @_ZN5blink21CSSValueClampingUtils10ClampAngleEd(double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17CSSPrimitiveValue19ComputeDotsPerPixelEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %3 = tail call double @_ZNK5blink22CSSNumericLiteralValue19ComputeDotsPerPixelEv(%"class.blink::CSSNumericLiteralValue"* %2) #6
  ret double %3
}

declare double @_ZNK5blink22CSSNumericLiteralValue19ComputeDotsPerPixelEv(%"class.blink::CSSNumericLiteralValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIiEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %8 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %8, %6 ], [ %11, %9 ]
  %14 = fcmp olt double %13, 0.000000e+00
  %15 = select i1 %14, double -1.000000e-02, double 1.000000e-02
  %16 = fadd double %13, %15
  %17 = fcmp ogt double %16, 0x41DFFFFFFFC00000
  %18 = fcmp olt double %16, 0xC1E0000000000000
  %19 = or i1 %17, %18
  %20 = fptosi double %16 to i32
  %21 = select i1 %19, i32 0, i32 %20
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17CSSPrimitiveValue19ComputeLengthDoubleERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %8 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi double [ %8, %6 ], [ %11, %9 ]
  ret double %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIjEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %8 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %8, %6 ], [ %11, %9 ]
  %14 = fcmp olt double %13, 0.000000e+00
  %15 = select i1 %14, double -1.000000e-02, double 1.000000e-02
  %16 = fadd double %13, %15
  %17 = fcmp ogt double %16, 0x41EFFFFFFFE00000
  %18 = fcmp olt double %16, 0.000000e+00
  %19 = or i1 %17, %18
  %20 = fptoui double %16 to i32
  %21 = select i1 %19, i32 0, i32 %20
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17CSSPrimitiveValue13ComputeLengthINS_6LengthEEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* noalias nocapture sret, %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %1, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::CSSPrimitiveValue"* %1 to %"class.blink::CSSMathFunctionValue"*
  %9 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %8, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %2) #6
  br label %13

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::CSSPrimitiveValue"* %1 to %"class.blink::CSSNumericLiteralValue"*
  %12 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %11, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %2) #6
  br label %13

13:                                               ; preds = %7, %10
  %14 = phi double [ %9, %7 ], [ %12, %10 ]
  %15 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call double @_ZN5blink21CSSValueClampingUtils11ClampLengthEd(double %14) #6
  br label %19

19:                                               ; preds = %17, %13
  %20 = phi double [ %18, %17 ], [ %14, %13 ]
  %21 = fcmp ult double %20, 0x417FFFFFC0000000
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = fcmp ole double %20, 0xC17FFFFFE0000000
  %24 = select i1 %23, double 0xC17FFFFFE0000000, double %20
  %25 = fptrunc double %24 to float
  br label %26

26:                                               ; preds = %19, %22
  %27 = phi float [ %25, %22 ], [ 0x417FFFFFC0000000, %19 ]
  %28 = bitcast %"class.blink::Length"* %0 to float*
  store float %27, float* %28, align 4, !alias.scope !3
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %29, align 4, !alias.scope !3
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 2, i8* %30, align 1, !alias.scope !3
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %31, align 2, !alias.scope !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIsEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %8 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %8, %6 ], [ %11, %9 ]
  %14 = fcmp olt double %13, 0.000000e+00
  %15 = select i1 %14, double -1.000000e-02, double 1.000000e-02
  %16 = fadd double %13, %15
  %17 = fcmp ogt double %16, 3.276700e+04
  %18 = fcmp olt double %16, -3.276800e+04
  %19 = or i1 %17, %18
  %20 = fptosi double %16 to i16
  %21 = select i1 %19, i16 0, i16 %20
  ret i16 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK5blink17CSSPrimitiveValue13ComputeLengthItEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %8 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %8, %6 ], [ %11, %9 ]
  %14 = fcmp olt double %13, 0.000000e+00
  %15 = select i1 %14, double -1.000000e-02, double 1.000000e-02
  %16 = fadd double %13, %15
  %17 = fcmp ogt double %16, 6.553500e+04
  %18 = fcmp olt double %16, 0.000000e+00
  %19 = or i1 %17, %18
  %20 = fptoui double %16 to i16
  %21 = select i1 %19, i16 0, i16 %20
  ret i16 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIhEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %8 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %8, %6 ], [ %11, %9 ]
  %14 = fcmp olt double %13, 0.000000e+00
  %15 = select i1 %14, double -1.000000e-02, double 1.000000e-02
  %16 = fadd double %13, %15
  %17 = fcmp ogt double %16, 2.550000e+02
  %18 = fcmp olt double %16, 0.000000e+00
  %19 = or i1 %17, %18
  %20 = fptoui double %16 to i8
  %21 = select i1 %19, i8 0, i8 %20
  ret i8 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %8 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %8, %6 ], [ %11, %9 ]
  %14 = fptrunc double %13 to float
  %15 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float %14) #6
  br label %19

19:                                               ; preds = %12, %17
  %20 = phi float [ %18, %17 ], [ %14, %12 ]
  ret float %20
}

declare float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIdEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %8 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #6
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %8, %6 ], [ %11, %9 ]
  %14 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call double @_ZN5blink21CSSValueClampingUtils11ClampLengthEd(double %13) #6
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi double [ %17, %16 ], [ %13, %12 ]
  ret double %19
}

declare double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #1

declare double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue21AccumulateLengthArrayERNS0_14CSSLengthArrayEd(%"class.blink::CSSPrimitiveValue"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104), double) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %9 = tail call zeroext i1 @_ZNK5blink20CSSMathFunctionValue21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSMathFunctionValue"* %8, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %2) #6
  br label %13

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %12 = tail call zeroext i1 @_ZNK5blink22CSSNumericLiteralValue21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSNumericLiteralValue"* %11, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %2) #6
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi i1 [ %9, %7 ], [ %12, %10 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink20CSSMathFunctionValue21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSMathFunctionValue"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104), double) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink22CSSNumericLiteralValue21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSNumericLiteralValue"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104), double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17CSSPrimitiveValue25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE(%"class.blink::CSSPrimitiveValue"*, %"class.std::__1::bitset"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %8 = bitcast i8* %7 to %"class.blink::CSSMathExpressionNode"**
  %9 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %8, align 8
  %10 = bitcast %"class.blink::CSSMathExpressionNode"* %9 to void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)***
  %11 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)**, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)** %11, i64 7
  %13 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)** %12, align 8
  tail call void %13(%"class.blink::CSSMathExpressionNode"* %9, %"class.std::__1::bitset"* dereferenceable(8) %1) #6
  br label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  tail call void @_ZNK5blink22CSSNumericLiteralValue25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE(%"class.blink::CSSNumericLiteralValue"* %15, %"class.std::__1::bitset"* dereferenceable(8) %1) #6
  br label %16

16:                                               ; preds = %14, %6
  ret void
}

declare void @_ZNK5blink22CSSNumericLiteralValue25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE(%"class.blink::CSSNumericLiteralValue"*, %"class.std::__1::bitset"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE(i32) local_unnamed_addr #2 align 2 {
  %2 = add i32 %0, -6
  %3 = icmp ult i32 %2, 24
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [24 x double], [24 x double]* @switch.table._ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE, i64 0, i64 %5
  %7 = load double, double* %6, align 8
  ret double %7

8:                                                ; preds = %1
  ret double 1.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* noalias sret, %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %1, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %1, i64 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 127
  %11 = zext i8 %10 to i32
  %12 = add nsw i32 %11, -3
  %13 = icmp ult i32 %12, 16
  %14 = icmp eq i8 %10, 32
  %15 = or i1 %14, %13
  br i1 %15, label %27, label %49

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %1, i64 2, i32 0, i32 2
  %18 = bitcast i8* %17 to %"class.blink::CSSMathExpressionNode"**
  %19 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %84 [
    i32 1, label %22
    i32 2, label %51
  ]

22:                                               ; preds = %16
  %23 = icmp eq i8 %5, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = bitcast %"class.blink::CSSPrimitiveValue"* %1 to %"class.blink::CSSMathFunctionValue"*
  %26 = tail call double @_ZNK5blink20CSSMathFunctionValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %25, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %2) #6, !noalias !6
  br label %30

27:                                               ; preds = %7, %22
  %28 = bitcast %"class.blink::CSSPrimitiveValue"* %1 to %"class.blink::CSSNumericLiteralValue"*
  %29 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %28, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %2) #6, !noalias !6
  br label %30

30:                                               ; preds = %27, %24
  %31 = phi double [ %26, %24 ], [ %29, %27 ]
  %32 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2, !noalias !6
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = tail call double @_ZN5blink21CSSValueClampingUtils11ClampLengthEd(double %31) #6, !noalias !6
  br label %36

36:                                               ; preds = %34, %30
  %37 = phi double [ %35, %34 ], [ %31, %30 ]
  %38 = fcmp ult double %37, 0x417FFFFFC0000000
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = fcmp ole double %37, 0xC17FFFFFE0000000
  %41 = select i1 %40, double 0xC17FFFFFE0000000, double %37
  %42 = fptrunc double %41 to float
  br label %43

43:                                               ; preds = %36, %39
  %44 = phi float [ %42, %39 ], [ 0x417FFFFFC0000000, %36 ]
  %45 = bitcast %"class.blink::Length"* %0 to float*
  store float %44, float* %45, align 4, !alias.scope !9
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %46, align 4, !alias.scope !9
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 2, i8* %47, align 1, !alias.scope !9
  %48 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %48, align 2, !alias.scope !9
  br label %86

49:                                               ; preds = %7
  %50 = icmp eq i8 %10, 2
  br i1 %50, label %61, label %84

51:                                               ; preds = %16
  %52 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %1, i64 0, i32 0, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = and i8 %53, 4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %84

56:                                               ; preds = %51
  %57 = icmp eq i8 %5, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = bitcast %"class.blink::CSSPrimitiveValue"* %1 to %"class.blink::CSSMathFunctionValue"*
  %60 = tail call double @_ZNK5blink20CSSMathFunctionValue11DoubleValueEv(%"class.blink::CSSMathFunctionValue"* %59) #6
  br label %65

61:                                               ; preds = %49, %56
  %62 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %1, i64 2, i32 0, i32 2
  %63 = bitcast i8* %62 to double*
  %64 = load double, double* %63, align 8
  br label %65

65:                                               ; preds = %58, %61
  %66 = phi double [ %60, %58 ], [ %64, %61 ]
  %67 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = tail call double @_ZN5blink21CSSValueClampingUtils11ClampLengthEd(double %66) #6
  br label %71

71:                                               ; preds = %65, %69
  %72 = phi double [ %70, %69 ], [ %66, %65 ]
  %73 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %73, align 4, !alias.scope !12
  %74 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %74, align 1, !alias.scope !12
  %75 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %75, align 2, !alias.scope !12
  %76 = fcmp ult double %72, 0x47EFFFFFE0000000
  br i1 %76, label %77, label %81

77:                                               ; preds = %71
  %78 = fcmp ole double %72, 0xC7EFFFFFE0000000
  %79 = select i1 %78, double 0xC7EFFFFFE0000000, double %72
  %80 = fptrunc double %79 to float
  br label %81

81:                                               ; preds = %71, %77
  %82 = phi float [ %80, %77 ], [ 0x47EFFFFFE0000000, %71 ]
  %83 = bitcast %"class.blink::Length"* %0 to float*
  store float %82, float* %83, align 4, !alias.scope !12
  br label %86

84:                                               ; preds = %16, %51, %49
  %85 = bitcast %"class.blink::CSSPrimitiveValue"* %1 to %"class.blink::CSSMathFunctionValue"*
  tail call void @_ZNK5blink20CSSMathFunctionValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSMathFunctionValue"* %85, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %2) #6
  br label %86

86:                                               ; preds = %84, %81, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17CSSPrimitiveValue29GetDoubleValueWithoutClampingEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %7 = tail call double @_ZNK5blink20CSSMathFunctionValue11DoubleValueEv(%"class.blink::CSSMathFunctionValue"* %6) #6
  br label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %10 = bitcast i8* %9 to double*
  %11 = load double, double* %10, align 8
  br label %12

12:                                               ; preds = %8, %5
  %13 = phi double [ %7, %5 ], [ %11, %8 ]
  ret double %13
}

declare void @_ZNK5blink20CSSMathFunctionValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret, %"class.blink::CSSMathFunctionValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %7 = tail call double @_ZNK5blink20CSSMathFunctionValue11DoubleValueEv(%"class.blink::CSSMathFunctionValue"* %6) #6
  br label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %10 = bitcast i8* %9 to double*
  %11 = load double, double* %10, align 8
  br label %12

12:                                               ; preds = %5, %8
  %13 = phi double [ %7, %5 ], [ %11, %8 ]
  %14 = tail call double @_ZN5blink21CSSValueClampingUtils11ClampDoubleEd(double %13) #6
  ret double %14
}

declare double @_ZN5blink21CSSValueClampingUtils11ClampDoubleEd(double) local_unnamed_addr #1

declare double @_ZNK5blink20CSSMathFunctionValue11DoubleValueEv(%"class.blink::CSSMathFunctionValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsZeroEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %7 = tail call zeroext i1 @_ZNK5blink20CSSMathFunctionValue6IsZeroEv(%"class.blink::CSSMathFunctionValue"* %6) #6
  br label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 2, i32 0, i32 2
  %10 = bitcast i8* %9 to double*
  %11 = load double, double* %10, align 8
  %12 = fcmp oeq double %11, 0.000000e+00
  br label %13

13:                                               ; preds = %8, %5
  %14 = phi i1 [ %7, %5 ], [ %12, %8 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink20CSSMathFunctionValue6IsZeroEv(%"class.blink::CSSMathFunctionValue"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink17CSSPrimitiveValue28CanonicalUnitTypeForCategoryENS0_12UnitCategoryE(i32) local_unnamed_addr #2 align 2 {
  %2 = icmp ult i32 %0, 7
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN5blink17CSSPrimitiveValue28CanonicalUnitTypeForCategoryENS0_12UnitCategoryE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN5blink17CSSPrimitiveValue24UnitTypeToLengthUnitTypeENS0_8UnitTypeERNS0_14LengthUnitTypeE(i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #5 align 2 {
  %3 = add i32 %0, -2
  %4 = icmp ult i32 %3, 31
  br i1 %4, label %5, label %13

5:                                                ; preds = %2
  %6 = lshr i32 1073872895, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds [31 x i32], [31 x i32]* @switch.table._ZN5blink17CSSPrimitiveValue24UnitTypeToLengthUnitTypeENS0_8UnitTypeERNS0_14LengthUnitTypeE, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %1, align 4
  br label %13

13:                                               ; preds = %5, %2, %9
  %14 = phi i1 [ false, %2 ], [ true, %9 ], [ false, %5 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink17CSSPrimitiveValue24LengthUnitTypeToUnitTypeENS0_14LengthUnitTypeE(i32) local_unnamed_addr #2 align 2 {
  %2 = icmp ult i32 %0, 10
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN5blink17CSSPrimitiveValue24LengthUnitTypeToUnitTypeENS0_14LengthUnitTypeE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN5blink17CSSPrimitiveValue16UnitTypeToStringENS0_8UnitTypeE(i32) local_unnamed_addr #2 align 2 {
  %2 = add i32 %0, -2
  %3 = icmp ult i32 %2, 31
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [31 x i8*], [31 x i8*]* @switch.table._ZN5blink17CSSPrimitiveValue16UnitTypeToStringENS0_8UnitTypeE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17CSSPrimitiveValue13CustomCSSTextEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink20CSSMathFunctionValue13CustomCSSTextEv(%"class.blink::CSSMathFunctionValue"* %6) #6
  br label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::CSSPrimitiveValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22CSSNumericLiteralValue13CustomCSSTextEv(%"class.blink::CSSNumericLiteralValue"* %9) #6
  br label %11

11:                                               ; preds = %8, %5
  %12 = phi %"class.WTF::StringImpl"* [ %7, %5 ], [ %10, %8 ]
  ret %"class.WTF::StringImpl"* %12
}

declare %"class.WTF::StringImpl"* @_ZNK5blink20CSSMathFunctionValue13CustomCSSTextEv(%"class.blink::CSSMathFunctionValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink22CSSNumericLiteralValue13CustomCSSTextEv(%"class.blink::CSSNumericLiteralValue"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink17CSSPrimitiveValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSPrimitiveValue"* nocapture, %"class.blink::Visitor"* nocapture) local_unnamed_addr #2 align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink6Length5FixedIfEES0_T_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink6Length5FixedIfEES0_T_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink17CSSPrimitiveValue13ComputeLengthINS_6LengthEEET_RKNS_25CSSToLengthConversionDataE: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink17CSSPrimitiveValue13ComputeLengthINS_6LengthEEET_RKNS_25CSSToLengthConversionDataE"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZN5blink6Length5FixedIfEES0_T_: argument 0"}
!11 = distinct !{!11, !"_ZN5blink6Length5FixedIfEES0_T_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink6Length7PercentIdEES0_T_: argument 0"}
!14 = distinct !{!14, !"_ZN5blink6Length7PercentIdEES0_T_"}
