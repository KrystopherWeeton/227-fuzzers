; ModuleID = 'gen/ui/gfx/x/xf86dri.cc'
source_filename = "gen/ui/gfx/x/xf86dri.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.x11::XF86Dri" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.175", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.188", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::XF86Dri"* }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.181" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type opaque
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::XF86Dri::QueryVersionRequest" = type { i8 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.270"* }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { i8*, i8*, %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { i8* }
%"class.x11::WriteBuffer" = type { %"class.std::__1::vector.263", %"class.std::__1::vector.270", i64, %"class.std::__1::vector.277" }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %class.scoped_refptr.247*, %class.scoped_refptr.247*, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %class.scoped_refptr.247* }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { i32*, i32*, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { i32* }
%"struct.x11::XF86Dri::QueryVersionReply" = type { i16, i16, i16, i32 }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"struct.x11::XF86Dri::QueryDirectRenderingCapableRequest" = type { i32 }
%"struct.x11::XF86Dri::QueryDirectRenderingCapableReply" = type <{ i16, i8, i8 }>
%"struct.x11::XF86Dri::OpenConnectionRequest" = type { i32 }
%"struct.x11::XF86Dri::OpenConnectionReply" = type { i16, i32, i32, %"class.std::__1::basic_string" }
%"struct.x11::XF86Dri::CloseConnectionRequest" = type { i32 }
%"struct.x11::XF86Dri::GetClientDriverNameRequest" = type { i32 }
%"struct.x11::XF86Dri::GetClientDriverNameReply" = type { i16, i32, i32, i32, %"class.std::__1::basic_string" }
%"struct.x11::XF86Dri::CreateContextRequest" = type { i32, i32, i32 }
%"struct.x11::XF86Dri::CreateContextReply" = type { i16, i32 }
%"struct.x11::XF86Dri::DestroyContextRequest" = type { i32, i32 }
%"struct.x11::XF86Dri::CreateDrawableRequest" = type { i32, i32 }
%"struct.x11::XF86Dri::CreateDrawableReply" = type { i16, i32 }
%"struct.x11::XF86Dri::DestroyDrawableRequest" = type { i32, i32 }
%"struct.x11::XF86Dri::GetDrawableInfoRequest" = type { i32, i32 }
%"struct.x11::XF86Dri::GetDrawableInfoReply" = type { i16, i32, i32, i16, i16, i16, i16, i16, i16, %"class.std::__1::vector.330", %"class.std::__1::vector.330" }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"struct.x11::XF86Dri::DrmClipRect"*, %"struct.x11::XF86Dri::DrmClipRect"*, %"class.std::__1::__compressed_pair.332" }
%"struct.x11::XF86Dri::DrmClipRect" = type { i16, i16, i16, i16 }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.x11::XF86Dri::DrmClipRect"* }
%"struct.x11::XF86Dri::GetDeviceInfoRequest" = type { i32 }
%"struct.x11::XF86Dri::GetDeviceInfoReply" = type { i16, i32, i32, i32, i32, i32, %"class.std::__1::vector.345" }
%"class.std::__1::vector.345" = type { %"class.std::__1::__vector_base.346" }
%"class.std::__1::__vector_base.346" = type { i32*, i32*, %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { i32* }
%"struct.x11::XF86Dri::AuthConnectionRequest" = type { i32, i32 }
%"struct.x11::XF86Dri::AuthConnectionReply" = type { i16, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh = comdat any

$_ZNSt3__16vectorIN3x117XF86Dri11DrmClipRectENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [22 x i8] c"XF86Dri::QueryVersion\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"XF86Dri::QueryDirectRenderingCapable\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"XF86Dri::OpenConnection\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"XF86Dri::CloseConnection\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"XF86Dri::GetClientDriverName\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"XF86Dri::CreateContext\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"XF86Dri::DestroyContext\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"XF86Dri::CreateDrawable\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"XF86Dri::DestroyDrawable\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"XF86Dri::GetDrawableInfo\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"XF86Dri::GetDeviceInfo\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"XF86Dri::AuthConnection\00", align 1

@_ZN3x117XF86DriC1EPNS_10ConnectionERKNS_19QueryExtensionReplyE = hidden unnamed_addr alias void (%"class.x11::XF86Dri"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*), void (%"class.x11::XF86Dri"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*)* @_ZN3x117XF86DriC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x117XF86DriC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE(%"class.x11::XF86Dri"* nocapture, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"* nocapture readonly dereferenceable(6)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %4, align 8
  %5 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1
  %6 = bitcast %"struct.x11::QueryExtensionReply"* %5 to i8*
  %7 = bitcast %"struct.x11::QueryExtensionReply"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 2 %7, i64 6, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri12QueryVersionERKNS0_19QueryVersionRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::QueryVersionRequest"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.x11::WriteBuffer", align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %13 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %13) #8
  br i1 %14, label %15, label %59

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %59, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.x11::WriteBuffer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %9) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  %21 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %22 = load i8, i8* %21, align 1
  store i8 %22, i8* %10, align 1
  %23 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %9, i64 0, i32 1
  %24 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %25, align 8
  %26 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %10) #8
  %27 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %9, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  store i8 0, i8* %11, align 1
  %30 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %31, align 8
  %32 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 0, i8* %4, align 1
  %35 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %36 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %36, align 8
  %37 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %36, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %41 = load i64, i64* %27, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  %43 = and i64 %41, 3
  %44 = xor i64 %43, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 0, i8* %8, align 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %19
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  br label %49

49:                                               ; preds = %49, %46
  %50 = phi i64 [ 0, %46 ], [ %54, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %48, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %52 = load i64, i64* %27, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %27, align 8
  %54 = add nuw nsw i64 %50, 1
  %55 = icmp eq i64 %54, %44
  br i1 %55, label %56, label %49

56:                                               ; preds = %49, %19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  %57 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %58 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %57, %"class.x11::WriteBuffer"* nonnull %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #8
  br label %59

59:                                               ; preds = %2, %15, %56
  %60 = phi %"class.x11::Connection::FutureImpl"* [ %58, %56 ], [ null, %15 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %60
}

declare zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri12QueryVersionEv(%"class.x11::XF86Dri"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri12QueryVersionERKNS0_19QueryVersionRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::QueryVersionRequest"* dereferenceable(1) undef)
  ret %"class.x11::Connection::FutureImpl"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::QueryVersionReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri17QueryVersionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 12) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::QueryVersionReply"*
  %4 = bitcast i8* %2 to i64*
  store i64 0, i64* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 2
  %7 = bitcast i8* %6 to i16*
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to i16*
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %15 = bitcast %"class.base::RefCountedMemory"* %14 to i8* (%"class.base::RefCountedMemory"*)***
  %16 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %15, align 8
  %17 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %16, align 8
  %18 = tail call i8* %17(%"class.base::RefCountedMemory"* %14) #8
  %19 = load i64, i64* %12, align 8
  %20 = add i64 %19, 2
  store i64 %20, i64* %12, align 8
  %21 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %22 = bitcast %"class.base::RefCountedMemory"* %21 to i8* (%"class.base::RefCountedMemory"*)***
  %23 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %22, align 8
  %24 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %23, align 8
  %25 = tail call i8* %24(%"class.base::RefCountedMemory"* %21) #8
  %26 = load i64, i64* %12, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 1
  store i16 %29, i16* %5, align 2
  %30 = add i64 %26, 2
  store i64 %30, i64* %12, align 8
  %31 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %32 = bitcast %"class.base::RefCountedMemory"* %31 to i8* (%"class.base::RefCountedMemory"*)***
  %33 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %32, align 8
  %34 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %33, align 8
  %35 = tail call i8* %34(%"class.base::RefCountedMemory"* %31) #8
  %36 = load i64, i64* %12, align 8
  %37 = add i64 %36, 4
  store i64 %37, i64* %12, align 8
  %38 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %39 = bitcast %"class.base::RefCountedMemory"* %38 to i8* (%"class.base::RefCountedMemory"*)***
  %40 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %39, align 8
  %41 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %40, align 8
  %42 = tail call i8* %41(%"class.base::RefCountedMemory"* %38) #8
  %43 = load i64, i64* %12, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 1
  store i16 %46, i16* %7, align 2
  %47 = add i64 %43, 2
  store i64 %47, i64* %12, align 8
  %48 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %49 = bitcast %"class.base::RefCountedMemory"* %48 to i8* (%"class.base::RefCountedMemory"*)***
  %50 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %49, align 8
  %51 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %50, align 8
  %52 = tail call i8* %51(%"class.base::RefCountedMemory"* %48) #8
  %53 = load i64, i64* %12, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %55, align 1
  store i16 %56, i16* %9, align 2
  %57 = add i64 %53, 2
  store i64 %57, i64* %12, align 8
  %58 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %59 = bitcast %"class.base::RefCountedMemory"* %58 to i8* (%"class.base::RefCountedMemory"*)***
  %60 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %59, align 8
  %61 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %60, align 8
  %62 = tail call i8* %61(%"class.base::RefCountedMemory"* %58) #8
  %63 = load i64, i64* %12, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  store i32 %66, i32* %11, align 4
  %67 = add i64 %63, 4
  %68 = sub i64 0, %63
  %69 = and i64 %68, 3
  %70 = add i64 %67, %69
  store i64 %70, i64* %12, align 8
  ret %"struct.x11::XF86Dri::QueryVersionReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri27QueryDirectRenderingCapableERKNS0_34QueryDirectRenderingCapableRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::QueryDirectRenderingCapableRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 1, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XF86Dri::QueryDirectRenderingCapableRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri27QueryDirectRenderingCapableERKj(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XF86Dri::QueryDirectRenderingCapableRequest", align 4
  %4 = bitcast %"struct.x11::XF86Dri::QueryDirectRenderingCapableRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XF86Dri::QueryDirectRenderingCapableRequest", %"struct.x11::XF86Dri::QueryDirectRenderingCapableRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri27QueryDirectRenderingCapableERKNS0_34QueryDirectRenderingCapableRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::QueryDirectRenderingCapableRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::QueryDirectRenderingCapableReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri32QueryDirectRenderingCapableReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 4) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::QueryDirectRenderingCapableReply"*
  %4 = bitcast i8* %2 to i32*
  store i32 0, i32* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 2
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %10 = bitcast %"class.base::RefCountedMemory"* %9 to i8* (%"class.base::RefCountedMemory"*)***
  %11 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %10, align 8
  %12 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %11, align 8
  %13 = tail call i8* %12(%"class.base::RefCountedMemory"* %9) #8
  %14 = load i64, i64* %7, align 8
  %15 = add i64 %14, 2
  store i64 %15, i64* %7, align 8
  %16 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %17 = bitcast %"class.base::RefCountedMemory"* %16 to i8* (%"class.base::RefCountedMemory"*)***
  %18 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %17, align 8
  %19 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %18, align 8
  %20 = tail call i8* %19(%"class.base::RefCountedMemory"* %16) #8
  %21 = load i64, i64* %7, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 1
  store i16 %24, i16* %5, align 2
  %25 = add i64 %21, 2
  store i64 %25, i64* %7, align 8
  %26 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %27 = bitcast %"class.base::RefCountedMemory"* %26 to i8* (%"class.base::RefCountedMemory"*)***
  %28 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %27, align 8
  %29 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %28, align 8
  %30 = tail call i8* %29(%"class.base::RefCountedMemory"* %26) #8
  %31 = load i64, i64* %7, align 8
  %32 = add i64 %31, 4
  store i64 %32, i64* %7, align 8
  %33 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %34 = bitcast %"class.base::RefCountedMemory"* %33 to i8* (%"class.base::RefCountedMemory"*)***
  %35 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %34, align 8
  %36 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %35, align 8
  %37 = tail call i8* %36(%"class.base::RefCountedMemory"* %33) #8
  %38 = load i64, i64* %7, align 8
  %39 = getelementptr inbounds i8, i8* %37, i64 %38
  %40 = load i8, i8* %39, align 1
  store i8 %40, i8* %6, align 1
  %41 = or i64 %38, -4
  %42 = sub i64 %38, %41
  store i64 %42, i64* %7, align 8
  ret %"struct.x11::XF86Dri::QueryDirectRenderingCapableReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14OpenConnectionERKNS0_21OpenConnectionRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::OpenConnectionRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 2, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XF86Dri::OpenConnectionRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14OpenConnectionERKj(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XF86Dri::OpenConnectionRequest", align 4
  %4 = bitcast %"struct.x11::XF86Dri::OpenConnectionRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XF86Dri::OpenConnectionRequest", %"struct.x11::XF86Dri::OpenConnectionRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14OpenConnectionERKNS0_21OpenConnectionRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::OpenConnectionRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::OpenConnectionReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri19OpenConnectionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 40) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::OpenConnectionReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 40, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 4
  %6 = bitcast i8* %5 to i32*
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to %"class.std::__1::basic_string"*
  %11 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %14 = bitcast %"class.base::RefCountedMemory"* %13 to i8* (%"class.base::RefCountedMemory"*)***
  %15 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %15, align 8
  %17 = tail call i8* %16(%"class.base::RefCountedMemory"* %13) #8
  %18 = load i64, i64* %11, align 8
  %19 = add i64 %18, 2
  store i64 %19, i64* %11, align 8
  %20 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %21 = bitcast %"class.base::RefCountedMemory"* %20 to i8* (%"class.base::RefCountedMemory"*)***
  %22 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %21, align 8
  %23 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %22, align 8
  %24 = tail call i8* %23(%"class.base::RefCountedMemory"* %20) #8
  %25 = load i64, i64* %11, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i16*
  %28 = load i16, i16* %27, align 1
  store i16 %28, i16* %4, align 2
  %29 = add i64 %25, 2
  store i64 %29, i64* %11, align 8
  %30 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %31 = bitcast %"class.base::RefCountedMemory"* %30 to i8* (%"class.base::RefCountedMemory"*)***
  %32 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %31, align 8
  %33 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %32, align 8
  %34 = tail call i8* %33(%"class.base::RefCountedMemory"* %30) #8
  %35 = load i64, i64* %11, align 8
  %36 = add i64 %35, 4
  store i64 %36, i64* %11, align 8
  %37 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %38 = bitcast %"class.base::RefCountedMemory"* %37 to i8* (%"class.base::RefCountedMemory"*)***
  %39 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %38, align 8
  %40 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %39, align 8
  %41 = tail call i8* %40(%"class.base::RefCountedMemory"* %37) #8
  %42 = load i64, i64* %11, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 1
  store i32 %45, i32* %6, align 4
  %46 = add i64 %42, 4
  store i64 %46, i64* %11, align 8
  %47 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %48 = bitcast %"class.base::RefCountedMemory"* %47 to i8* (%"class.base::RefCountedMemory"*)***
  %49 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %48, align 8
  %50 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %49, align 8
  %51 = tail call i8* %50(%"class.base::RefCountedMemory"* %47) #8
  %52 = load i64, i64* %11, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 1
  store i32 %55, i32* %8, align 4
  %56 = add i64 %52, 4
  store i64 %56, i64* %11, align 8
  %57 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %58 = bitcast %"class.base::RefCountedMemory"* %57 to i8* (%"class.base::RefCountedMemory"*)***
  %59 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %58, align 8
  %60 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %59, align 8
  %61 = tail call i8* %60(%"class.base::RefCountedMemory"* %57) #8
  %62 = load i64, i64* %11, align 8
  %63 = getelementptr inbounds i8, i8* %61, i64 %62
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %64, align 1
  %66 = add i64 %62, 16
  store i64 %66, i64* %11, align 8
  %67 = zext i32 %65 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %10, i64 %67, i8 signext 0) #8
  %68 = getelementptr inbounds i8, i8* %2, i64 39
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %1
  %72 = bitcast i8* %9 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds i8, i8* %2, i64 24
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  br label %79

77:                                               ; preds = %1
  %78 = zext i8 %69 to i64
  br label %79

79:                                               ; preds = %71, %77
  %80 = phi i8* [ %73, %71 ], [ %9, %77 ]
  %81 = phi i64 [ %76, %71 ], [ %78, %77 ]
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %79
  %85 = load i64, i64* %11, align 8
  br label %86

86:                                               ; preds = %91, %84
  %87 = phi i64 [ %85, %84 ], [ %102, %91 ]
  %88 = sub i64 0, %87
  %89 = and i64 %88, 3
  %90 = add i64 %89, %87
  store i64 %90, i64* %11, align 8
  ret %"struct.x11::XF86Dri::OpenConnectionReply"* %3

91:                                               ; preds = %79, %91
  %92 = phi i8* [ %103, %91 ], [ %80, %79 ]
  %93 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %94 = bitcast %"class.base::RefCountedMemory"* %93 to i8* (%"class.base::RefCountedMemory"*)***
  %95 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %94, align 8
  %96 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %95, align 8
  %97 = tail call i8* %96(%"class.base::RefCountedMemory"* %93) #8
  %98 = load i64, i64* %11, align 8
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  store i8 %100, i8* %92, align 1
  %101 = load i64, i64* %11, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %11, align 8
  %103 = getelementptr inbounds i8, i8* %92, i64 1
  %104 = icmp eq i8* %103, %82
  br i1 %104, label %86, label %91
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15CloseConnectionERKNS0_22CloseConnectionRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::CloseConnectionRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 3, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XF86Dri::CloseConnectionRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15CloseConnectionERKj(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XF86Dri::CloseConnectionRequest", align 4
  %4 = bitcast %"struct.x11::XF86Dri::CloseConnectionRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XF86Dri::CloseConnectionRequest", %"struct.x11::XF86Dri::CloseConnectionRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15CloseConnectionERKNS0_22CloseConnectionRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::CloseConnectionRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri19GetClientDriverNameERKNS0_26GetClientDriverNameRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::GetClientDriverNameRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 4, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XF86Dri::GetClientDriverNameRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri19GetClientDriverNameERKj(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XF86Dri::GetClientDriverNameRequest", align 4
  %4 = bitcast %"struct.x11::XF86Dri::GetClientDriverNameRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XF86Dri::GetClientDriverNameRequest", %"struct.x11::XF86Dri::GetClientDriverNameRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri19GetClientDriverNameERKNS0_26GetClientDriverNameRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::GetClientDriverNameRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::GetClientDriverNameReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri24GetClientDriverNameReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 40) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::GetClientDriverNameReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 40, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 4
  %6 = bitcast i8* %5 to i32*
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds i8, i8* %2, i64 12
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = bitcast i8* %11 to %"class.std::__1::basic_string"*
  %13 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %13, align 8
  %21 = add i64 %20, 2
  store i64 %21, i64* %13, align 8
  %22 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %23 = bitcast %"class.base::RefCountedMemory"* %22 to i8* (%"class.base::RefCountedMemory"*)***
  %24 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %23, align 8
  %25 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %24, align 8
  %26 = tail call i8* %25(%"class.base::RefCountedMemory"* %22) #8
  %27 = load i64, i64* %13, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 1
  store i16 %30, i16* %4, align 2
  %31 = add i64 %27, 2
  store i64 %31, i64* %13, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #8
  %37 = load i64, i64* %13, align 8
  %38 = add i64 %37, 4
  store i64 %38, i64* %13, align 8
  %39 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %40 = bitcast %"class.base::RefCountedMemory"* %39 to i8* (%"class.base::RefCountedMemory"*)***
  %41 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %40, align 8
  %42 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %41, align 8
  %43 = tail call i8* %42(%"class.base::RefCountedMemory"* %39) #8
  %44 = load i64, i64* %13, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 1
  store i32 %47, i32* %6, align 4
  %48 = add i64 %44, 4
  store i64 %48, i64* %13, align 8
  %49 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %50 = bitcast %"class.base::RefCountedMemory"* %49 to i8* (%"class.base::RefCountedMemory"*)***
  %51 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %50, align 8
  %52 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %51, align 8
  %53 = tail call i8* %52(%"class.base::RefCountedMemory"* %49) #8
  %54 = load i64, i64* %13, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 1
  store i32 %57, i32* %8, align 4
  %58 = add i64 %54, 4
  store i64 %58, i64* %13, align 8
  %59 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %60 = bitcast %"class.base::RefCountedMemory"* %59 to i8* (%"class.base::RefCountedMemory"*)***
  %61 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %60, align 8
  %62 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %61, align 8
  %63 = tail call i8* %62(%"class.base::RefCountedMemory"* %59) #8
  %64 = load i64, i64* %13, align 8
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1
  store i32 %67, i32* %10, align 4
  %68 = add i64 %64, 4
  store i64 %68, i64* %13, align 8
  %69 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %70 = bitcast %"class.base::RefCountedMemory"* %69 to i8* (%"class.base::RefCountedMemory"*)***
  %71 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %70, align 8
  %72 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %71, align 8
  %73 = tail call i8* %72(%"class.base::RefCountedMemory"* %69) #8
  %74 = load i64, i64* %13, align 8
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 1
  %78 = add i64 %74, 12
  store i64 %78, i64* %13, align 8
  %79 = zext i32 %77 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %12, i64 %79, i8 signext 0) #8
  %80 = getelementptr inbounds i8, i8* %2, i64 39
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %89

83:                                               ; preds = %1
  %84 = bitcast i8* %11 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds i8, i8* %2, i64 24
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  br label %91

89:                                               ; preds = %1
  %90 = zext i8 %81 to i64
  br label %91

91:                                               ; preds = %83, %89
  %92 = phi i8* [ %85, %83 ], [ %11, %89 ]
  %93 = phi i64 [ %88, %83 ], [ %90, %89 ]
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %96, label %103

96:                                               ; preds = %91
  %97 = load i64, i64* %13, align 8
  br label %98

98:                                               ; preds = %103, %96
  %99 = phi i64 [ %97, %96 ], [ %114, %103 ]
  %100 = sub i64 0, %99
  %101 = and i64 %100, 3
  %102 = add i64 %101, %99
  store i64 %102, i64* %13, align 8
  ret %"struct.x11::XF86Dri::GetClientDriverNameReply"* %3

103:                                              ; preds = %91, %103
  %104 = phi i8* [ %115, %103 ], [ %92, %91 ]
  %105 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %106 = bitcast %"class.base::RefCountedMemory"* %105 to i8* (%"class.base::RefCountedMemory"*)***
  %107 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %106, align 8
  %108 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %107, align 8
  %109 = tail call i8* %108(%"class.base::RefCountedMemory"* %105) #8
  %110 = load i64, i64* %13, align 8
  %111 = getelementptr inbounds i8, i8* %109, i64 %110
  %112 = load i8, i8* %111, align 1
  store i8 %112, i8* %104, align 1
  %113 = load i64, i64* %13, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %13, align 8
  %115 = getelementptr inbounds i8, i8* %104, i64 1
  %116 = icmp eq i8* %115, %94
  br i1 %116, label %98, label %103
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri13CreateContextERKNS0_20CreateContextRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::CreateContextRequest"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.x11::WriteBuffer", align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %16) #8
  br i1 %17, label %18, label %100

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %100, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.x11::WriteBuffer"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %12) #8
  %24 = getelementptr inbounds %"struct.x11::XF86Dri::CreateContextRequest", %"struct.x11::XF86Dri::CreateContextRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  %25 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %26 = load i8, i8* %25, align 1
  store i8 %26, i8* %13, align 1
  %27 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 1
  %28 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.270"* %27, %"class.std::__1::vector.270"** %29, align 8
  %30 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %13) #8
  %31 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #8
  store i8 5, i8* %14, align 1
  %34 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %27, %"class.std::__1::vector.270"** %35, align 8
  %36 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  %37 = load i64, i64* %31, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  store i8 0, i8* %7, align 1
  %39 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %40 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  store %"class.std::__1::vector.270"* %27, %"class.std::__1::vector.270"** %40, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  %42 = load i64, i64* %31, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  store %"class.std::__1::vector.270"* %27, %"class.std::__1::vector.270"** %40, align 8
  %44 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  %45 = load i64, i64* %31, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %31, align 8
  %47 = getelementptr inbounds %"struct.x11::XF86Dri::CreateContextRequest", %"struct.x11::XF86Dri::CreateContextRequest"* %1, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  %48 = bitcast %"struct.x11::XF86Dri::CreateContextRequest"* %1 to i8*
  %49 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #8
  %50 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.270"* %27, %"class.std::__1::vector.270"** %50, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %48) #8
  %52 = getelementptr inbounds i8, i8* %48, i64 1
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %52) #8
  %54 = getelementptr inbounds i8, i8* %48, i64 2
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %54) #8
  %56 = getelementptr inbounds i8, i8* %48, i64 3
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %56) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  %58 = load i64, i64* %31, align 8
  %59 = add i64 %58, 4
  store i64 %59, i64* %31, align 8
  %60 = bitcast i32* %24 to i8*
  %61 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #8
  %62 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %27, %"class.std::__1::vector.270"** %62, align 8
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %60) #8
  %64 = getelementptr inbounds i8, i8* %60, i64 1
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %64) #8
  %66 = getelementptr inbounds i8, i8* %60, i64 2
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %66) #8
  %68 = getelementptr inbounds i8, i8* %60, i64 3
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %68) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  %70 = load i64, i64* %31, align 8
  %71 = add i64 %70, 4
  store i64 %71, i64* %31, align 8
  %72 = bitcast i32* %47 to i8*
  %73 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #8
  %74 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %27, %"class.std::__1::vector.270"** %74, align 8
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %72) #8
  %76 = getelementptr inbounds i8, i8* %72, i64 1
  %77 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %76) #8
  %78 = getelementptr inbounds i8, i8* %72, i64 2
  %79 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %78) #8
  %80 = getelementptr inbounds i8, i8* %72, i64 3
  %81 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %80) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #8
  %82 = load i64, i64* %31, align 8
  %83 = add i64 %82, 4
  store i64 %83, i64* %31, align 8
  %84 = sub i64 0, %82
  %85 = and i64 %84, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  store i8 0, i8* %11, align 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %22
  %88 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %89 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  br label %90

90:                                               ; preds = %90, %87
  %91 = phi i64 [ 0, %87 ], [ %95, %90 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #8
  store %"class.std::__1::vector.270"* %27, %"class.std::__1::vector.270"** %89, align 8
  %92 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #8
  %93 = load i64, i64* %31, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %31, align 8
  %95 = add nuw nsw i64 %91, 1
  %96 = icmp eq i64 %95, %85
  br i1 %96, label %97, label %90

97:                                               ; preds = %90, %22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  %98 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %99 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %98, %"class.x11::WriteBuffer"* nonnull %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #8
  br label %100

100:                                              ; preds = %2, %18, %97
  %101 = phi %"class.x11::Connection::FutureImpl"* [ %99, %97 ], [ null, %18 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri13CreateContextERKjS2_S2_(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.x11::XF86Dri::CreateContextRequest", align 4
  %6 = bitcast %"struct.x11::XF86Dri::CreateContextRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"struct.x11::XF86Dri::CreateContextRequest", %"struct.x11::XF86Dri::CreateContextRequest"* %5, i64 0, i32 0
  %8 = load i32, i32* %1, align 4
  store i32 %8, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.x11::XF86Dri::CreateContextRequest", %"struct.x11::XF86Dri::CreateContextRequest"* %5, i64 0, i32 1
  %10 = load i32, i32* %2, align 4
  store i32 %10, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.x11::XF86Dri::CreateContextRequest", %"struct.x11::XF86Dri::CreateContextRequest"* %5, i64 0, i32 2
  %12 = load i32, i32* %3, align 4
  store i32 %12, i32* %11, align 4
  %13 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri13CreateContextERKNS0_20CreateContextRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::CreateContextRequest"* nonnull dereferenceable(12) %5)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #8
  ret %"class.x11::Connection::FutureImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::CreateContextReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri18CreateContextReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 8) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::CreateContextReply"*
  %4 = bitcast i8* %2 to i64*
  store i64 0, i64* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %11 = bitcast %"class.base::RefCountedMemory"* %10 to i8* (%"class.base::RefCountedMemory"*)***
  %12 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %11, align 8
  %13 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %12, align 8
  %14 = tail call i8* %13(%"class.base::RefCountedMemory"* %10) #8
  %15 = load i64, i64* %8, align 8
  %16 = add i64 %15, 2
  store i64 %16, i64* %8, align 8
  %17 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %18 = bitcast %"class.base::RefCountedMemory"* %17 to i8* (%"class.base::RefCountedMemory"*)***
  %19 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %19, align 8
  %21 = tail call i8* %20(%"class.base::RefCountedMemory"* %17) #8
  %22 = load i64, i64* %8, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to i16*
  %25 = load i16, i16* %24, align 1
  store i16 %25, i16* %5, align 2
  %26 = add i64 %22, 2
  store i64 %26, i64* %8, align 8
  %27 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %28 = bitcast %"class.base::RefCountedMemory"* %27 to i8* (%"class.base::RefCountedMemory"*)***
  %29 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %28, align 8
  %30 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %29, align 8
  %31 = tail call i8* %30(%"class.base::RefCountedMemory"* %27) #8
  %32 = load i64, i64* %8, align 8
  %33 = add i64 %32, 4
  store i64 %33, i64* %8, align 8
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #8
  %39 = load i64, i64* %8, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 1
  store i32 %42, i32* %7, align 4
  %43 = add i64 %39, 4
  %44 = sub i64 0, %39
  %45 = and i64 %44, 3
  %46 = add i64 %43, %45
  store i64 %46, i64* %8, align 8
  ret %"struct.x11::XF86Dri::CreateContextReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14DestroyContextERKNS0_21DestroyContextRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::DestroyContextRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %86

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %86, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 6, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::XF86Dri::DestroyContextRequest", %"struct.x11::XF86Dri::DestroyContextRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %46 = bitcast %"struct.x11::XF86Dri::DestroyContextRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %46, i64 2
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %52) #8
  %54 = getelementptr inbounds i8, i8* %46, i64 3
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %54) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %56 = load i64, i64* %29, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %29, align 8
  %58 = bitcast i32* %45 to i8*
  %59 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %60, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #8
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %62) #8
  %64 = getelementptr inbounds i8, i8* %58, i64 2
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %64) #8
  %66 = getelementptr inbounds i8, i8* %58, i64 3
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %68 = load i64, i64* %29, align 8
  %69 = add i64 %68, 4
  store i64 %69, i64* %29, align 8
  %70 = sub i64 0, %68
  %71 = and i64 %70, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %21
  %74 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %75 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %81, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %75, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %79 = load i64, i64* %29, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %29, align 8
  %81 = add nuw nsw i64 %77, 1
  %82 = icmp eq i64 %81, %71
  br i1 %82, label %83, label %76

83:                                               ; preds = %76, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %84 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %85 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %84, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %86

86:                                               ; preds = %2, %17, %83
  %87 = phi %"class.x11::Connection::FutureImpl"* [ %85, %83 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14DestroyContextERKjS2_(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::XF86Dri::DestroyContextRequest", align 4
  %5 = bitcast %"struct.x11::XF86Dri::DestroyContextRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::XF86Dri::DestroyContextRequest", %"struct.x11::XF86Dri::DestroyContextRequest"* %4, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::XF86Dri::DestroyContextRequest", %"struct.x11::XF86Dri::DestroyContextRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14DestroyContextERKNS0_21DestroyContextRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::DestroyContextRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14CreateDrawableERKNS0_21CreateDrawableRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::CreateDrawableRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %86

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %86, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 7, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::XF86Dri::CreateDrawableRequest", %"struct.x11::XF86Dri::CreateDrawableRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %46 = bitcast %"struct.x11::XF86Dri::CreateDrawableRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %46, i64 2
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %52) #8
  %54 = getelementptr inbounds i8, i8* %46, i64 3
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %54) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %56 = load i64, i64* %29, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %29, align 8
  %58 = bitcast i32* %45 to i8*
  %59 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %60, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #8
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %62) #8
  %64 = getelementptr inbounds i8, i8* %58, i64 2
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %64) #8
  %66 = getelementptr inbounds i8, i8* %58, i64 3
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %68 = load i64, i64* %29, align 8
  %69 = add i64 %68, 4
  store i64 %69, i64* %29, align 8
  %70 = sub i64 0, %68
  %71 = and i64 %70, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %21
  %74 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %75 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %81, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %75, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %79 = load i64, i64* %29, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %29, align 8
  %81 = add nuw nsw i64 %77, 1
  %82 = icmp eq i64 %81, %71
  br i1 %82, label %83, label %76

83:                                               ; preds = %76, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %84 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %85 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %84, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %86

86:                                               ; preds = %2, %17, %83
  %87 = phi %"class.x11::Connection::FutureImpl"* [ %85, %83 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14CreateDrawableERKjS2_(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::XF86Dri::CreateDrawableRequest", align 4
  %5 = bitcast %"struct.x11::XF86Dri::CreateDrawableRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::XF86Dri::CreateDrawableRequest", %"struct.x11::XF86Dri::CreateDrawableRequest"* %4, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::XF86Dri::CreateDrawableRequest", %"struct.x11::XF86Dri::CreateDrawableRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14CreateDrawableERKNS0_21CreateDrawableRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::CreateDrawableRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::CreateDrawableReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri19CreateDrawableReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 8) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::CreateDrawableReply"*
  %4 = bitcast i8* %2 to i64*
  store i64 0, i64* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %11 = bitcast %"class.base::RefCountedMemory"* %10 to i8* (%"class.base::RefCountedMemory"*)***
  %12 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %11, align 8
  %13 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %12, align 8
  %14 = tail call i8* %13(%"class.base::RefCountedMemory"* %10) #8
  %15 = load i64, i64* %8, align 8
  %16 = add i64 %15, 2
  store i64 %16, i64* %8, align 8
  %17 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %18 = bitcast %"class.base::RefCountedMemory"* %17 to i8* (%"class.base::RefCountedMemory"*)***
  %19 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %19, align 8
  %21 = tail call i8* %20(%"class.base::RefCountedMemory"* %17) #8
  %22 = load i64, i64* %8, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to i16*
  %25 = load i16, i16* %24, align 1
  store i16 %25, i16* %5, align 2
  %26 = add i64 %22, 2
  store i64 %26, i64* %8, align 8
  %27 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %28 = bitcast %"class.base::RefCountedMemory"* %27 to i8* (%"class.base::RefCountedMemory"*)***
  %29 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %28, align 8
  %30 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %29, align 8
  %31 = tail call i8* %30(%"class.base::RefCountedMemory"* %27) #8
  %32 = load i64, i64* %8, align 8
  %33 = add i64 %32, 4
  store i64 %33, i64* %8, align 8
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #8
  %39 = load i64, i64* %8, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 1
  store i32 %42, i32* %7, align 4
  %43 = add i64 %39, 4
  %44 = sub i64 0, %39
  %45 = and i64 %44, 3
  %46 = add i64 %43, %45
  store i64 %46, i64* %8, align 8
  ret %"struct.x11::XF86Dri::CreateDrawableReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15DestroyDrawableERKNS0_22DestroyDrawableRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::DestroyDrawableRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %86

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %86, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 8, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::XF86Dri::DestroyDrawableRequest", %"struct.x11::XF86Dri::DestroyDrawableRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %46 = bitcast %"struct.x11::XF86Dri::DestroyDrawableRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %46, i64 2
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %52) #8
  %54 = getelementptr inbounds i8, i8* %46, i64 3
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %54) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %56 = load i64, i64* %29, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %29, align 8
  %58 = bitcast i32* %45 to i8*
  %59 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %60, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #8
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %62) #8
  %64 = getelementptr inbounds i8, i8* %58, i64 2
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %64) #8
  %66 = getelementptr inbounds i8, i8* %58, i64 3
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %68 = load i64, i64* %29, align 8
  %69 = add i64 %68, 4
  store i64 %69, i64* %29, align 8
  %70 = sub i64 0, %68
  %71 = and i64 %70, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %21
  %74 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %75 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %81, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %75, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %79 = load i64, i64* %29, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %29, align 8
  %81 = add nuw nsw i64 %77, 1
  %82 = icmp eq i64 %81, %71
  br i1 %82, label %83, label %76

83:                                               ; preds = %76, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %84 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %85 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %84, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %86

86:                                               ; preds = %2, %17, %83
  %87 = phi %"class.x11::Connection::FutureImpl"* [ %85, %83 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15DestroyDrawableERKjS2_(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::XF86Dri::DestroyDrawableRequest", align 4
  %5 = bitcast %"struct.x11::XF86Dri::DestroyDrawableRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::XF86Dri::DestroyDrawableRequest", %"struct.x11::XF86Dri::DestroyDrawableRequest"* %4, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::XF86Dri::DestroyDrawableRequest", %"struct.x11::XF86Dri::DestroyDrawableRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15DestroyDrawableERKNS0_22DestroyDrawableRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::DestroyDrawableRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15GetDrawableInfoERKNS0_22GetDrawableInfoRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::GetDrawableInfoRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %86

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %86, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 9, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::XF86Dri::GetDrawableInfoRequest", %"struct.x11::XF86Dri::GetDrawableInfoRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %46 = bitcast %"struct.x11::XF86Dri::GetDrawableInfoRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %46, i64 2
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %52) #8
  %54 = getelementptr inbounds i8, i8* %46, i64 3
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %54) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %56 = load i64, i64* %29, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %29, align 8
  %58 = bitcast i32* %45 to i8*
  %59 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %60, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #8
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %62) #8
  %64 = getelementptr inbounds i8, i8* %58, i64 2
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %64) #8
  %66 = getelementptr inbounds i8, i8* %58, i64 3
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %68 = load i64, i64* %29, align 8
  %69 = add i64 %68, 4
  store i64 %69, i64* %29, align 8
  %70 = sub i64 0, %68
  %71 = and i64 %70, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %21
  %74 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %75 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %81, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %75, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %79 = load i64, i64* %29, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %29, align 8
  %81 = add nuw nsw i64 %77, 1
  %82 = icmp eq i64 %81, %71
  br i1 %82, label %83, label %76

83:                                               ; preds = %76, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %84 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %85 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %84, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %86

86:                                               ; preds = %2, %17, %83
  %87 = phi %"class.x11::Connection::FutureImpl"* [ %85, %83 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15GetDrawableInfoERKjS2_(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::XF86Dri::GetDrawableInfoRequest", align 4
  %5 = bitcast %"struct.x11::XF86Dri::GetDrawableInfoRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::XF86Dri::GetDrawableInfoRequest", %"struct.x11::XF86Dri::GetDrawableInfoRequest"* %4, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::XF86Dri::GetDrawableInfoRequest", %"struct.x11::XF86Dri::GetDrawableInfoRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri15GetDrawableInfoERKNS0_22GetDrawableInfoRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::GetDrawableInfoRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::GetDrawableInfoReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri20GetDrawableInfoReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 72) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::GetDrawableInfoReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 72, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 4
  %6 = bitcast i8* %5 to i32*
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds i8, i8* %2, i64 12
  %10 = bitcast i8* %9 to i16*
  %11 = getelementptr inbounds i8, i8* %2, i64 14
  %12 = bitcast i8* %11 to i16*
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = bitcast i8* %13 to i16*
  %15 = getelementptr inbounds i8, i8* %2, i64 18
  %16 = bitcast i8* %15 to i16*
  %17 = getelementptr inbounds i8, i8* %2, i64 20
  %18 = bitcast i8* %17 to i16*
  %19 = getelementptr inbounds i8, i8* %2, i64 22
  %20 = bitcast i8* %19 to i16*
  %21 = getelementptr inbounds i8, i8* %2, i64 24
  %22 = getelementptr inbounds i8, i8* %2, i64 32
  %23 = bitcast i8* %22 to %"struct.x11::XF86Dri::DrmClipRect"**
  %24 = bitcast i8* %22 to i64*
  %25 = bitcast i8* %21 to i64*
  %26 = getelementptr inbounds i8, i8* %2, i64 48
  %27 = bitcast i8* %26 to %"class.std::__1::vector.330"*
  %28 = getelementptr inbounds i8, i8* %2, i64 56
  %29 = bitcast i8* %28 to %"struct.x11::XF86Dri::DrmClipRect"**
  %30 = bitcast i8* %28 to i64*
  %31 = bitcast i8* %26 to i64*
  %32 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #8
  %39 = load i64, i64* %32, align 8
  %40 = add i64 %39, 2
  store i64 %40, i64* %32, align 8
  %41 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %42 = bitcast %"class.base::RefCountedMemory"* %41 to i8* (%"class.base::RefCountedMemory"*)***
  %43 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %42, align 8
  %44 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %43, align 8
  %45 = tail call i8* %44(%"class.base::RefCountedMemory"* %41) #8
  %46 = load i64, i64* %32, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 1
  store i16 %49, i16* %4, align 2
  %50 = add i64 %46, 2
  store i64 %50, i64* %32, align 8
  %51 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %52 = bitcast %"class.base::RefCountedMemory"* %51 to i8* (%"class.base::RefCountedMemory"*)***
  %53 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %52, align 8
  %54 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %53, align 8
  %55 = tail call i8* %54(%"class.base::RefCountedMemory"* %51) #8
  %56 = load i64, i64* %32, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %32, align 8
  %58 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %59 = bitcast %"class.base::RefCountedMemory"* %58 to i8* (%"class.base::RefCountedMemory"*)***
  %60 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %59, align 8
  %61 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %60, align 8
  %62 = tail call i8* %61(%"class.base::RefCountedMemory"* %58) #8
  %63 = load i64, i64* %32, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  store i32 %66, i32* %6, align 4
  %67 = add i64 %63, 4
  store i64 %67, i64* %32, align 8
  %68 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %69 = bitcast %"class.base::RefCountedMemory"* %68 to i8* (%"class.base::RefCountedMemory"*)***
  %70 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %69, align 8
  %71 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %70, align 8
  %72 = tail call i8* %71(%"class.base::RefCountedMemory"* %68) #8
  %73 = load i64, i64* %32, align 8
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 1
  store i32 %76, i32* %8, align 4
  %77 = add i64 %73, 4
  store i64 %77, i64* %32, align 8
  %78 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %79 = bitcast %"class.base::RefCountedMemory"* %78 to i8* (%"class.base::RefCountedMemory"*)***
  %80 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %79, align 8
  %81 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %80, align 8
  %82 = tail call i8* %81(%"class.base::RefCountedMemory"* %78) #8
  %83 = load i64, i64* %32, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  %85 = bitcast i8* %84 to i16*
  %86 = load i16, i16* %85, align 1
  store i16 %86, i16* %10, align 2
  %87 = add i64 %83, 2
  store i64 %87, i64* %32, align 8
  %88 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %89 = bitcast %"class.base::RefCountedMemory"* %88 to i8* (%"class.base::RefCountedMemory"*)***
  %90 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %89, align 8
  %91 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %90, align 8
  %92 = tail call i8* %91(%"class.base::RefCountedMemory"* %88) #8
  %93 = load i64, i64* %32, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 1
  store i16 %96, i16* %12, align 2
  %97 = add i64 %93, 2
  store i64 %97, i64* %32, align 8
  %98 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %99 = bitcast %"class.base::RefCountedMemory"* %98 to i8* (%"class.base::RefCountedMemory"*)***
  %100 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %99, align 8
  %101 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %100, align 8
  %102 = tail call i8* %101(%"class.base::RefCountedMemory"* %98) #8
  %103 = load i64, i64* %32, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = bitcast i8* %104 to i16*
  %106 = load i16, i16* %105, align 1
  store i16 %106, i16* %14, align 2
  %107 = add i64 %103, 2
  store i64 %107, i64* %32, align 8
  %108 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %109 = bitcast %"class.base::RefCountedMemory"* %108 to i8* (%"class.base::RefCountedMemory"*)***
  %110 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %109, align 8
  %111 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %110, align 8
  %112 = tail call i8* %111(%"class.base::RefCountedMemory"* %108) #8
  %113 = load i64, i64* %32, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = bitcast i8* %114 to i16*
  %116 = load i16, i16* %115, align 1
  store i16 %116, i16* %16, align 2
  %117 = add i64 %113, 2
  store i64 %117, i64* %32, align 8
  %118 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %119 = bitcast %"class.base::RefCountedMemory"* %118 to i8* (%"class.base::RefCountedMemory"*)***
  %120 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %119, align 8
  %121 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %120, align 8
  %122 = tail call i8* %121(%"class.base::RefCountedMemory"* %118) #8
  %123 = load i64, i64* %32, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  %125 = bitcast i8* %124 to i32*
  %126 = load i32, i32* %125, align 1
  %127 = add i64 %123, 4
  store i64 %127, i64* %32, align 8
  %128 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %129 = bitcast %"class.base::RefCountedMemory"* %128 to i8* (%"class.base::RefCountedMemory"*)***
  %130 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %129, align 8
  %131 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %130, align 8
  %132 = tail call i8* %131(%"class.base::RefCountedMemory"* %128) #8
  %133 = load i64, i64* %32, align 8
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  %135 = bitcast i8* %134 to i16*
  %136 = load i16, i16* %135, align 1
  store i16 %136, i16* %18, align 2
  %137 = add i64 %133, 2
  store i64 %137, i64* %32, align 8
  %138 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %139 = bitcast %"class.base::RefCountedMemory"* %138 to i8* (%"class.base::RefCountedMemory"*)***
  %140 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %139, align 8
  %141 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %140, align 8
  %142 = tail call i8* %141(%"class.base::RefCountedMemory"* %138) #8
  %143 = load i64, i64* %32, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  %145 = bitcast i8* %144 to i16*
  %146 = load i16, i16* %145, align 1
  store i16 %146, i16* %20, align 2
  %147 = add i64 %143, 2
  store i64 %147, i64* %32, align 8
  %148 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %149 = bitcast %"class.base::RefCountedMemory"* %148 to i8* (%"class.base::RefCountedMemory"*)***
  %150 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %149, align 8
  %151 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %150, align 8
  %152 = tail call i8* %151(%"class.base::RefCountedMemory"* %148) #8
  %153 = load i64, i64* %32, align 8
  %154 = getelementptr inbounds i8, i8* %152, i64 %153
  %155 = bitcast i8* %154 to i32*
  %156 = load i32, i32* %155, align 1
  %157 = add i64 %153, 4
  store i64 %157, i64* %32, align 8
  %158 = zext i32 %126 to i64
  %159 = load i64, i64* %24, align 8
  %160 = load i64, i64* %25, align 8
  %161 = sub i64 %159, %160
  %162 = ashr exact i64 %161, 3
  %163 = icmp ult i64 %162, %158
  %164 = inttoptr i64 %160 to %"struct.x11::XF86Dri::DrmClipRect"*
  br i1 %163, label %165, label %171

165:                                              ; preds = %1
  %166 = bitcast i8* %21 to %"class.std::__1::vector.330"*
  %167 = sub nsw i64 %158, %162
  tail call void @_ZNSt3__16vectorIN3x117XF86Dri11DrmClipRectENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.330"* %166, i64 %167) #8
  %168 = bitcast i8* %21 to %"struct.x11::XF86Dri::DrmClipRect"**
  %169 = load %"struct.x11::XF86Dri::DrmClipRect"*, %"struct.x11::XF86Dri::DrmClipRect"** %168, align 8
  %170 = load %"struct.x11::XF86Dri::DrmClipRect"*, %"struct.x11::XF86Dri::DrmClipRect"** %23, align 8
  br label %176

171:                                              ; preds = %1
  %172 = inttoptr i64 %159 to %"struct.x11::XF86Dri::DrmClipRect"*
  %173 = icmp ugt i64 %162, %158
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %164, i64 %158
  store %"struct.x11::XF86Dri::DrmClipRect"* %175, %"struct.x11::XF86Dri::DrmClipRect"** %23, align 8
  br label %176

176:                                              ; preds = %165, %171, %174
  %177 = phi %"struct.x11::XF86Dri::DrmClipRect"* [ %170, %165 ], [ %172, %171 ], [ %175, %174 ]
  %178 = phi %"struct.x11::XF86Dri::DrmClipRect"* [ %169, %165 ], [ %164, %171 ], [ %164, %174 ]
  %179 = icmp eq %"struct.x11::XF86Dri::DrmClipRect"* %178, %177
  br i1 %179, label %180, label %204

180:                                              ; preds = %204, %176
  %181 = zext i32 %156 to i64
  %182 = load i64, i64* %30, align 8
  %183 = load i64, i64* %31, align 8
  %184 = sub i64 %182, %183
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, %181
  %187 = inttoptr i64 %183 to %"struct.x11::XF86Dri::DrmClipRect"*
  br i1 %186, label %188, label %193

188:                                              ; preds = %180
  %189 = sub nsw i64 %181, %185
  tail call void @_ZNSt3__16vectorIN3x117XF86Dri11DrmClipRectENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.330"* %27, i64 %189) #8
  %190 = bitcast i8* %26 to %"struct.x11::XF86Dri::DrmClipRect"**
  %191 = load %"struct.x11::XF86Dri::DrmClipRect"*, %"struct.x11::XF86Dri::DrmClipRect"** %190, align 8
  %192 = load %"struct.x11::XF86Dri::DrmClipRect"*, %"struct.x11::XF86Dri::DrmClipRect"** %29, align 8
  br label %198

193:                                              ; preds = %180
  %194 = inttoptr i64 %182 to %"struct.x11::XF86Dri::DrmClipRect"*
  %195 = icmp ugt i64 %185, %181
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %187, i64 %181
  store %"struct.x11::XF86Dri::DrmClipRect"* %197, %"struct.x11::XF86Dri::DrmClipRect"** %29, align 8
  br label %198

198:                                              ; preds = %188, %193, %196
  %199 = phi %"struct.x11::XF86Dri::DrmClipRect"* [ %192, %188 ], [ %194, %193 ], [ %197, %196 ]
  %200 = phi %"struct.x11::XF86Dri::DrmClipRect"* [ %191, %188 ], [ %187, %193 ], [ %187, %196 ]
  %201 = icmp eq %"struct.x11::XF86Dri::DrmClipRect"* %200, %199
  br i1 %201, label %202, label %261

202:                                              ; preds = %198
  %203 = load i64, i64* %32, align 8
  br label %256

204:                                              ; preds = %176, %204
  %205 = phi %"struct.x11::XF86Dri::DrmClipRect"* [ %254, %204 ], [ %178, %176 ]
  %206 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %205, i64 0, i32 0
  %207 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %205, i64 0, i32 1
  %208 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %205, i64 0, i32 2
  %209 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %205, i64 0, i32 3
  %210 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %211 = bitcast %"class.base::RefCountedMemory"* %210 to i8* (%"class.base::RefCountedMemory"*)***
  %212 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %211, align 8
  %213 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %212, align 8
  %214 = tail call i8* %213(%"class.base::RefCountedMemory"* %210) #8
  %215 = load i64, i64* %32, align 8
  %216 = getelementptr inbounds i8, i8* %214, i64 %215
  %217 = bitcast i8* %216 to i16*
  %218 = load i16, i16* %217, align 1
  store i16 %218, i16* %206, align 2
  %219 = load i64, i64* %32, align 8
  %220 = add i64 %219, 2
  store i64 %220, i64* %32, align 8
  %221 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %222 = bitcast %"class.base::RefCountedMemory"* %221 to i8* (%"class.base::RefCountedMemory"*)***
  %223 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %222, align 8
  %224 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %223, align 8
  %225 = tail call i8* %224(%"class.base::RefCountedMemory"* %221) #8
  %226 = load i64, i64* %32, align 8
  %227 = getelementptr inbounds i8, i8* %225, i64 %226
  %228 = bitcast i8* %227 to i16*
  %229 = load i16, i16* %228, align 1
  store i16 %229, i16* %207, align 2
  %230 = load i64, i64* %32, align 8
  %231 = add i64 %230, 2
  store i64 %231, i64* %32, align 8
  %232 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %233 = bitcast %"class.base::RefCountedMemory"* %232 to i8* (%"class.base::RefCountedMemory"*)***
  %234 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %233, align 8
  %235 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %234, align 8
  %236 = tail call i8* %235(%"class.base::RefCountedMemory"* %232) #8
  %237 = load i64, i64* %32, align 8
  %238 = getelementptr inbounds i8, i8* %236, i64 %237
  %239 = bitcast i8* %238 to i16*
  %240 = load i16, i16* %239, align 1
  store i16 %240, i16* %208, align 2
  %241 = load i64, i64* %32, align 8
  %242 = add i64 %241, 2
  store i64 %242, i64* %32, align 8
  %243 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %244 = bitcast %"class.base::RefCountedMemory"* %243 to i8* (%"class.base::RefCountedMemory"*)***
  %245 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %244, align 8
  %246 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %245, align 8
  %247 = tail call i8* %246(%"class.base::RefCountedMemory"* %243) #8
  %248 = load i64, i64* %32, align 8
  %249 = getelementptr inbounds i8, i8* %247, i64 %248
  %250 = bitcast i8* %249 to i16*
  %251 = load i16, i16* %250, align 1
  store i16 %251, i16* %209, align 2
  %252 = load i64, i64* %32, align 8
  %253 = add i64 %252, 2
  store i64 %253, i64* %32, align 8
  %254 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %205, i64 1
  %255 = icmp eq %"struct.x11::XF86Dri::DrmClipRect"* %254, %177
  br i1 %255, label %180, label %204

256:                                              ; preds = %261, %202
  %257 = phi i64 [ %203, %202 ], [ %310, %261 ]
  %258 = sub i64 0, %257
  %259 = and i64 %258, 3
  %260 = add i64 %259, %257
  store i64 %260, i64* %32, align 8
  ret %"struct.x11::XF86Dri::GetDrawableInfoReply"* %3

261:                                              ; preds = %198, %261
  %262 = phi %"struct.x11::XF86Dri::DrmClipRect"* [ %311, %261 ], [ %200, %198 ]
  %263 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %262, i64 0, i32 0
  %264 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %262, i64 0, i32 1
  %265 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %262, i64 0, i32 2
  %266 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %262, i64 0, i32 3
  %267 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %268 = bitcast %"class.base::RefCountedMemory"* %267 to i8* (%"class.base::RefCountedMemory"*)***
  %269 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %268, align 8
  %270 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %269, align 8
  %271 = tail call i8* %270(%"class.base::RefCountedMemory"* %267) #8
  %272 = load i64, i64* %32, align 8
  %273 = getelementptr inbounds i8, i8* %271, i64 %272
  %274 = bitcast i8* %273 to i16*
  %275 = load i16, i16* %274, align 1
  store i16 %275, i16* %263, align 2
  %276 = load i64, i64* %32, align 8
  %277 = add i64 %276, 2
  store i64 %277, i64* %32, align 8
  %278 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %279 = bitcast %"class.base::RefCountedMemory"* %278 to i8* (%"class.base::RefCountedMemory"*)***
  %280 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %279, align 8
  %281 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %280, align 8
  %282 = tail call i8* %281(%"class.base::RefCountedMemory"* %278) #8
  %283 = load i64, i64* %32, align 8
  %284 = getelementptr inbounds i8, i8* %282, i64 %283
  %285 = bitcast i8* %284 to i16*
  %286 = load i16, i16* %285, align 1
  store i16 %286, i16* %264, align 2
  %287 = load i64, i64* %32, align 8
  %288 = add i64 %287, 2
  store i64 %288, i64* %32, align 8
  %289 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %290 = bitcast %"class.base::RefCountedMemory"* %289 to i8* (%"class.base::RefCountedMemory"*)***
  %291 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %290, align 8
  %292 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %291, align 8
  %293 = tail call i8* %292(%"class.base::RefCountedMemory"* %289) #8
  %294 = load i64, i64* %32, align 8
  %295 = getelementptr inbounds i8, i8* %293, i64 %294
  %296 = bitcast i8* %295 to i16*
  %297 = load i16, i16* %296, align 1
  store i16 %297, i16* %265, align 2
  %298 = load i64, i64* %32, align 8
  %299 = add i64 %298, 2
  store i64 %299, i64* %32, align 8
  %300 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %33, align 8
  %301 = bitcast %"class.base::RefCountedMemory"* %300 to i8* (%"class.base::RefCountedMemory"*)***
  %302 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %301, align 8
  %303 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %302, align 8
  %304 = tail call i8* %303(%"class.base::RefCountedMemory"* %300) #8
  %305 = load i64, i64* %32, align 8
  %306 = getelementptr inbounds i8, i8* %304, i64 %305
  %307 = bitcast i8* %306 to i16*
  %308 = load i16, i16* %307, align 1
  store i16 %308, i16* %266, align 2
  %309 = load i64, i64* %32, align 8
  %310 = add i64 %309, 2
  store i64 %310, i64* %32, align 8
  %311 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %262, i64 1
  %312 = icmp eq %"struct.x11::XF86Dri::DrmClipRect"* %311, %199
  br i1 %312, label %256, label %261
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri13GetDeviceInfoERKNS0_20GetDeviceInfoRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::GetDeviceInfoRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 10, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XF86Dri::GetDeviceInfoRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri13GetDeviceInfoERKj(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XF86Dri::GetDeviceInfoRequest", align 4
  %4 = bitcast %"struct.x11::XF86Dri::GetDeviceInfoRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XF86Dri::GetDeviceInfoRequest", %"struct.x11::XF86Dri::GetDeviceInfoRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri13GetDeviceInfoERKNS0_20GetDeviceInfoRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::GetDeviceInfoRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::GetDeviceInfoReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri18GetDeviceInfoReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 48) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::GetDeviceInfoReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 48, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 4
  %6 = bitcast i8* %5 to i32*
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds i8, i8* %2, i64 12
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = bitcast i8* %11 to i32*
  %13 = getelementptr inbounds i8, i8* %2, i64 20
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds i8, i8* %2, i64 24
  %16 = getelementptr inbounds i8, i8* %2, i64 32
  %17 = bitcast i8* %16 to i32**
  %18 = bitcast i8* %16 to i64*
  %19 = bitcast i8* %15 to i64*
  %20 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %22 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %23 = bitcast %"class.base::RefCountedMemory"* %22 to i8* (%"class.base::RefCountedMemory"*)***
  %24 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %23, align 8
  %25 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %24, align 8
  %26 = tail call i8* %25(%"class.base::RefCountedMemory"* %22) #8
  %27 = load i64, i64* %20, align 8
  %28 = add i64 %27, 2
  store i64 %28, i64* %20, align 8
  %29 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %30 = bitcast %"class.base::RefCountedMemory"* %29 to i8* (%"class.base::RefCountedMemory"*)***
  %31 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %30, align 8
  %32 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %31, align 8
  %33 = tail call i8* %32(%"class.base::RefCountedMemory"* %29) #8
  %34 = load i64, i64* %20, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i16*
  %37 = load i16, i16* %36, align 1
  store i16 %37, i16* %4, align 2
  %38 = add i64 %34, 2
  store i64 %38, i64* %20, align 8
  %39 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %40 = bitcast %"class.base::RefCountedMemory"* %39 to i8* (%"class.base::RefCountedMemory"*)***
  %41 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %40, align 8
  %42 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %41, align 8
  %43 = tail call i8* %42(%"class.base::RefCountedMemory"* %39) #8
  %44 = load i64, i64* %20, align 8
  %45 = add i64 %44, 4
  store i64 %45, i64* %20, align 8
  %46 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %47 = bitcast %"class.base::RefCountedMemory"* %46 to i8* (%"class.base::RefCountedMemory"*)***
  %48 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %47, align 8
  %49 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %48, align 8
  %50 = tail call i8* %49(%"class.base::RefCountedMemory"* %46) #8
  %51 = load i64, i64* %20, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 1
  store i32 %54, i32* %6, align 4
  %55 = add i64 %51, 4
  store i64 %55, i64* %20, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #8
  %61 = load i64, i64* %20, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  store i32 %64, i32* %8, align 4
  %65 = add i64 %61, 4
  store i64 %65, i64* %20, align 8
  %66 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %67 = bitcast %"class.base::RefCountedMemory"* %66 to i8* (%"class.base::RefCountedMemory"*)***
  %68 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %67, align 8
  %69 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = tail call i8* %69(%"class.base::RefCountedMemory"* %66) #8
  %71 = load i64, i64* %20, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 1
  store i32 %74, i32* %10, align 4
  %75 = add i64 %71, 4
  store i64 %75, i64* %20, align 8
  %76 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %77 = bitcast %"class.base::RefCountedMemory"* %76 to i8* (%"class.base::RefCountedMemory"*)***
  %78 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %77, align 8
  %79 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %78, align 8
  %80 = tail call i8* %79(%"class.base::RefCountedMemory"* %76) #8
  %81 = load i64, i64* %20, align 8
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 1
  store i32 %84, i32* %12, align 4
  %85 = add i64 %81, 4
  store i64 %85, i64* %20, align 8
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %87 = bitcast %"class.base::RefCountedMemory"* %86 to i8* (%"class.base::RefCountedMemory"*)***
  %88 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %87, align 8
  %89 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %88, align 8
  %90 = tail call i8* %89(%"class.base::RefCountedMemory"* %86) #8
  %91 = load i64, i64* %20, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 1
  store i32 %94, i32* %14, align 4
  %95 = add i64 %91, 4
  store i64 %95, i64* %20, align 8
  %96 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %97 = bitcast %"class.base::RefCountedMemory"* %96 to i8* (%"class.base::RefCountedMemory"*)***
  %98 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %97, align 8
  %99 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %98, align 8
  %100 = tail call i8* %99(%"class.base::RefCountedMemory"* %96) #8
  %101 = load i64, i64* %20, align 8
  %102 = getelementptr inbounds i8, i8* %100, i64 %101
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 1
  %105 = add i64 %101, 4
  store i64 %105, i64* %20, align 8
  %106 = zext i32 %104 to i64
  %107 = load i64, i64* %18, align 8
  %108 = load i64, i64* %19, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %110, %106
  %112 = inttoptr i64 %108 to i32*
  br i1 %111, label %113, label %119

113:                                              ; preds = %1
  %114 = bitcast i8* %15 to %"class.std::__1::vector.345"*
  %115 = sub nsw i64 %106, %110
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.345"* %114, i64 %115) #8
  %116 = bitcast i8* %15 to i32**
  %117 = load i32*, i32** %116, align 8
  %118 = load i32*, i32** %17, align 8
  br label %124

119:                                              ; preds = %1
  %120 = inttoptr i64 %107 to i32*
  %121 = icmp ugt i64 %110, %106
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = getelementptr inbounds i32, i32* %112, i64 %106
  store i32* %123, i32** %17, align 8
  br label %124

124:                                              ; preds = %113, %119, %122
  %125 = phi i32* [ %118, %113 ], [ %120, %119 ], [ %123, %122 ]
  %126 = phi i32* [ %117, %113 ], [ %112, %119 ], [ %112, %122 ]
  %127 = icmp eq i32* %126, %125
  br i1 %127, label %128, label %135

128:                                              ; preds = %124
  %129 = load i64, i64* %20, align 8
  br label %130

130:                                              ; preds = %135, %128
  %131 = phi i64 [ %129, %128 ], [ %147, %135 ]
  %132 = sub i64 0, %131
  %133 = and i64 %132, 3
  %134 = add i64 %133, %131
  store i64 %134, i64* %20, align 8
  ret %"struct.x11::XF86Dri::GetDeviceInfoReply"* %3

135:                                              ; preds = %124, %135
  %136 = phi i32* [ %148, %135 ], [ %126, %124 ]
  %137 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %21, align 8
  %138 = bitcast %"class.base::RefCountedMemory"* %137 to i8* (%"class.base::RefCountedMemory"*)***
  %139 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %138, align 8
  %140 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %139, align 8
  %141 = tail call i8* %140(%"class.base::RefCountedMemory"* %137) #8
  %142 = load i64, i64* %20, align 8
  %143 = getelementptr inbounds i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 1
  store i32 %145, i32* %136, align 4
  %146 = load i64, i64* %20, align 8
  %147 = add i64 %146, 4
  store i64 %147, i64* %20, align 8
  %148 = getelementptr inbounds i32, i32* %136, i64 1
  %149 = icmp eq i32* %148, %125
  br i1 %149, label %130, label %135
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14AuthConnectionERKNS0_21AuthConnectionRequestE(%"class.x11::XF86Dri"* nocapture readonly, %"struct.x11::XF86Dri::AuthConnectionRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %86

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %86, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"class.x11::XF86Dri", %"class.x11::XF86Dri"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 11, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::XF86Dri::AuthConnectionRequest", %"struct.x11::XF86Dri::AuthConnectionRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %46 = bitcast %"struct.x11::XF86Dri::AuthConnectionRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %46, i64 2
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %52) #8
  %54 = getelementptr inbounds i8, i8* %46, i64 3
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %54) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %56 = load i64, i64* %29, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %29, align 8
  %58 = bitcast i32* %45 to i8*
  %59 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %60, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #8
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %62) #8
  %64 = getelementptr inbounds i8, i8* %58, i64 2
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %64) #8
  %66 = getelementptr inbounds i8, i8* %58, i64 3
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %68 = load i64, i64* %29, align 8
  %69 = add i64 %68, 4
  store i64 %69, i64* %29, align 8
  %70 = sub i64 0, %68
  %71 = and i64 %70, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %21
  %74 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %75 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %81, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %75, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %79 = load i64, i64* %29, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %29, align 8
  %81 = add nuw nsw i64 %77, 1
  %82 = icmp eq i64 %81, %71
  br i1 %82, label %83, label %76

83:                                               ; preds = %76, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %84 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %85 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %84, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %86

86:                                               ; preds = %2, %17, %83
  %87 = phi %"class.x11::Connection::FutureImpl"* [ %85, %83 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14AuthConnectionERKjS2_(%"class.x11::XF86Dri"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::XF86Dri::AuthConnectionRequest", align 4
  %5 = bitcast %"struct.x11::XF86Dri::AuthConnectionRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::XF86Dri::AuthConnectionRequest", %"struct.x11::XF86Dri::AuthConnectionRequest"* %4, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::XF86Dri::AuthConnectionRequest", %"struct.x11::XF86Dri::AuthConnectionRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x117XF86Dri14AuthConnectionERKNS0_21AuthConnectionRequestE(%"class.x11::XF86Dri"* %0, %"struct.x11::XF86Dri::AuthConnectionRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XF86Dri::AuthConnectionReply"* @_ZN3x116detail9ReadReplyINS_7XF86Dri19AuthConnectionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 8) #9
  %3 = bitcast i8* %2 to %"struct.x11::XF86Dri::AuthConnectionReply"*
  %4 = bitcast i8* %2 to i64*
  store i64 0, i64* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %11 = bitcast %"class.base::RefCountedMemory"* %10 to i8* (%"class.base::RefCountedMemory"*)***
  %12 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %11, align 8
  %13 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %12, align 8
  %14 = tail call i8* %13(%"class.base::RefCountedMemory"* %10) #8
  %15 = load i64, i64* %8, align 8
  %16 = add i64 %15, 2
  store i64 %16, i64* %8, align 8
  %17 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %18 = bitcast %"class.base::RefCountedMemory"* %17 to i8* (%"class.base::RefCountedMemory"*)***
  %19 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %19, align 8
  %21 = tail call i8* %20(%"class.base::RefCountedMemory"* %17) #8
  %22 = load i64, i64* %8, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to i16*
  %25 = load i16, i16* %24, align 1
  store i16 %25, i16* %5, align 2
  %26 = add i64 %22, 2
  store i64 %26, i64* %8, align 8
  %27 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %28 = bitcast %"class.base::RefCountedMemory"* %27 to i8* (%"class.base::RefCountedMemory"*)***
  %29 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %28, align 8
  %30 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %29, align 8
  %31 = tail call i8* %30(%"class.base::RefCountedMemory"* %27) #8
  %32 = load i64, i64* %8, align 8
  %33 = add i64 %32, 4
  store i64 %33, i64* %8, align 8
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %9, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #8
  %39 = load i64, i64* %8, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 1
  store i32 %42, i32* %7, align 4
  %43 = add i64 %39, 4
  %44 = sub i64 0, %39
  %45 = and i64 %44, 3
  %46 = add i64 %43, %45
  store i64 %46, i64* %8, align 8
  ret %"struct.x11::XF86Dri::AuthConnectionReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.270"*, %"class.std::__1::vector.270"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = load i8, i8* %1, align 1
  store i8 %12, i8* %6, align 1
  %13 = getelementptr inbounds i8, i8* %6, i64 1
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %62

16:                                               ; preds = %2
  %17 = ptrtoint i8* %6 to i64
  %18 = bitcast i8** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.270"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = add i64 %21, 1
  %23 = icmp slt i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = bitcast %"class.std::__1::vector.270"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #10
  unreachable

26:                                               ; preds = %16
  %27 = bitcast i8** %7 to i64*
  %28 = sub i64 %10, %20
  %29 = icmp ult i64 %28, 4611686018427387903
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = shl i64 %28, 1
  %32 = icmp ult i64 %31, %22
  %33 = select i1 %32, i64 %22, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %26
  %36 = phi i64 [ %33, %30 ], [ 9223372036854775807, %26 ]
  %37 = tail call i8* @_Znwm(i64 %36) #9
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %40 = phi i8* [ %37, %35 ], [ null, %30 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %21
  %42 = getelementptr inbounds i8, i8* %40, i64 %39
  %43 = ptrtoint i8* %42 to i64
  %44 = load i8, i8* %1, align 1
  store i8 %44, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %18, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #8
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %38
  %59 = phi i8* [ %48, %38 ], [ %57, %56 ]
  store i64 %54, i64* %19, align 8
  store i64 %46, i64* %18, align 8
  store i64 %43, i64* %27, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZdlPv(i8* nonnull %59) #9
  br label %62

62:                                               ; preds = %11, %58, %61
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"*, %"class.x11::WriteBuffer"*, i8*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x117XF86Dri11DrmClipRectENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.330"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.330", %"class.std::__1::vector.330"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::XF86Dri::DrmClipRect"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.330", %"class.std::__1::vector.330"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::XF86Dri::DrmClipRect"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::XF86Dri::DrmClipRect"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %13, i64 %18, i32 0
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint %"struct.x11::XF86Dri::DrmClipRect"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.330"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.330"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to %"struct.x11::XF86Dri::DrmClipRect"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.x11::XF86Dri::DrmClipRect"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %57, i64 %33
  %59 = bitcast %"struct.x11::XF86Dri::DrmClipRect"* %58 to i8*
  %60 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 2 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.x11::XF86Dri::DrmClipRect"* %60 to i64
  %64 = ptrtoint %"struct.x11::XF86Dri::DrmClipRect"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.330", %"class.std::__1::vector.330"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.x11::XF86Dri::DrmClipRect"*, %"struct.x11::XF86Dri::DrmClipRect"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.x11::XF86Dri::DrmClipRect"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.x11::XF86Dri::DrmClipRect", %"struct.x11::XF86Dri::DrmClipRect"* %58, i64 %71
  %73 = ptrtoint %"struct.x11::XF86Dri::DrmClipRect"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.x11::XF86Dri::DrmClipRect"* %72 to i8*
  %77 = bitcast %"struct.x11::XF86Dri::DrmClipRect"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %76, i8* align 2 %77, i64 %69, i1 false) #8
  %78 = load %"struct.x11::XF86Dri::DrmClipRect"*, %"struct.x11::XF86Dri::DrmClipRect"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.x11::XF86Dri::DrmClipRect"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.x11::XF86Dri::DrmClipRect"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.x11::XF86Dri::DrmClipRect"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.345"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.345", %"class.std::__1::vector.345"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.345", %"class.std::__1::vector.345"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.345"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.345"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.345", %"class.std::__1::vector.345"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
