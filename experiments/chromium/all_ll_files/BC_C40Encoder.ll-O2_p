; ModuleID = '../../third_party/pdfium/fxbarcode/datamatrix/BC_C40Encoder.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/datamatrix/BC_C40Encoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_C40Encoder = type { %class.CBC_Encoder }
%class.CBC_Encoder = type { i32 (...)** }
%class.CBC_EncoderContext = type { %"class.fxcrt::WideString", %"class.fxcrt::WideString", i64, i8, %"class.fxcrt::UnownedPtr", i8, i8, i64 }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::UnownedPtr" = type { %class.CBC_SymbolInfo* }
%class.CBC_SymbolInfo = type { i32 (...)**, %"struct.CBC_SymbolInfo::Data"* }
%"struct.CBC_SymbolInfo::Data" = type { i16, i16, i16, i8, i8, i8, i8 }

@_ZTV14CBC_C40Encoder = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_C40Encoder*)* @_ZN14CBC_C40EncoderD2Ev to i8*), i8* bitcast (void (%class.CBC_C40Encoder*)* @_ZN14CBC_C40EncoderD0Ev to i8*), i8* bitcast (i8 (%class.CBC_C40Encoder*)* @_ZN14CBC_C40Encoder15GetEncodingModeEv to i8*), i8* bitcast (i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*)* @_ZN14CBC_C40Encoder6EncodeEP18CBC_EncoderContext to i8*), i8* bitcast (i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)* @_ZN14CBC_C40Encoder9HandleEODEP18CBC_EncoderContextPN5fxcrt10WideStringE to i8*), i8* bitcast (i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)* @_ZN14CBC_C40Encoder10EncodeCharEwPN5fxcrt10WideStringE to i8*)] }, align 8

@_ZN14CBC_C40EncoderC1Ev = hidden unnamed_addr alias void (%class.CBC_C40Encoder*), void (%class.CBC_C40Encoder*)* @_ZN14CBC_C40EncoderC2Ev
@_ZN14CBC_C40EncoderD1Ev = hidden unnamed_addr alias void (%class.CBC_C40Encoder*), void (%class.CBC_C40Encoder*)* @_ZN14CBC_C40EncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_C40EncoderC2Ev(%class.CBC_C40Encoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_C40Encoder, %class.CBC_C40Encoder* %0, i64 0, i32 0
  tail call void @_ZN11CBC_EncoderC2Ev(%class.CBC_Encoder* %2) #6
  %3 = getelementptr inbounds %class.CBC_C40Encoder, %class.CBC_C40Encoder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14CBC_C40Encoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN11CBC_EncoderC2Ev(%class.CBC_Encoder*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11CBC_EncoderD2Ev(%class.CBC_Encoder*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_C40EncoderD2Ev(%class.CBC_C40Encoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_C40Encoder, %class.CBC_C40Encoder* %0, i64 0, i32 0
  tail call void @_ZN11CBC_EncoderD2Ev(%class.CBC_Encoder* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_C40EncoderD0Ev(%class.CBC_C40Encoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_C40Encoder, %class.CBC_C40Encoder* %0, i64 0, i32 0
  tail call void @_ZN11CBC_EncoderD2Ev(%class.CBC_Encoder* %2) #6
  %3 = bitcast %class.CBC_C40Encoder* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZN14CBC_C40Encoder15GetEncodingModeEv(%class.CBC_C40Encoder* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8 1
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CBC_C40Encoder6EncodeEP18CBC_EncoderContext(%class.CBC_C40Encoder*, %class.CBC_EncoderContext*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %5, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %3) #6
  %6 = call zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* %1) #6
  br i1 %6, label %7, label %97

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 2
  %9 = bitcast %class.CBC_C40Encoder* %0 to i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)***
  %10 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 0
  %12 = bitcast %class.CBC_C40Encoder* %0 to i8 (%class.CBC_C40Encoder*)***
  br label %13

13:                                               ; preds = %7, %95
  %14 = call signext i32 @_ZN18CBC_EncoderContext14getCurrentCharEv(%class.CBC_EncoderContext* %1) #6
  %15 = load i64, i64* %8, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %8, align 8
  %17 = load i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)**, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*** %9, align 8
  %18 = getelementptr inbounds i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)** %17, i64 5
  %19 = load i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)** %18, align 8
  %20 = call i32 %19(%class.CBC_C40Encoder* %0, i32 signext %14, %"class.fxcrt::WideString"* nonnull %3) #6
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %103, label %22

22:                                               ; preds = %13
  %23 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %5, align 8
  %24 = icmp eq %"class.fxcrt::StringDataTemplate"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %23, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %28

28:                                               ; preds = %22, %25
  %29 = phi i64 [ %27, %25 ], [ 0, %22 ]
  %30 = udiv i64 %29, 3
  %31 = shl nuw i64 %30, 1
  %32 = call i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext* %1) #6
  %33 = add i64 %31, %32
  %34 = shl i64 %33, 32
  %35 = ashr exact i64 %34, 32
  %36 = call zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEm(%class.CBC_EncoderContext* %1, i64 %35) #6
  br i1 %36, label %37, label %103

37:                                               ; preds = %28
  %38 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %10, align 8
  %39 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %38, i64 0, i32 1
  %40 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %39, align 8
  %41 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %40, i64 0, i32 0
  %42 = load i16, i16* %41, align 2
  %43 = call zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* %1) #6
  %44 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %5, align 8
  %45 = icmp eq %"class.fxcrt::StringDataTemplate"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %44, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  br label %49

49:                                               ; preds = %37, %46
  %50 = phi i64 [ %48, %46 ], [ 0, %37 ]
  %51 = urem i64 %50, 3
  br i1 %43, label %80, label %52

52:                                               ; preds = %49
  %53 = sext i16 %42 to i64
  %54 = sub nsw i64 %53, %35
  %55 = trunc i64 %54 to i32
  %56 = icmp ne i64 %51, 2
  %57 = icmp eq i32 %55, 2
  %58 = or i1 %57, %56
  br i1 %58, label %62, label %59

59:                                               ; preds = %52
  %60 = call i32 @_ZN14CBC_C40Encoder21BacktrackOneCharacterEP18CBC_EncoderContextPN5fxcrt10WideStringEi(%class.CBC_C40Encoder* %0, %class.CBC_EncoderContext* %1, %"class.fxcrt::WideString"* nonnull %3, i32 %20)
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %103, label %62

62:                                               ; preds = %52, %59
  %63 = phi i32 [ %60, %59 ], [ %20, %52 ]
  %64 = icmp ne i32 %55, 1
  br label %65

65:                                               ; preds = %77, %62
  %66 = phi i32 [ %63, %62 ], [ %78, %77 ]
  %67 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %5, align 8
  %68 = icmp eq %"class.fxcrt::StringDataTemplate"* %67, null
  br i1 %68, label %97, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %67, i64 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = urem i64 %71, 3
  %73 = icmp eq i64 %72, 1
  %74 = icmp sgt i32 %66, 3
  %75 = or i1 %64, %74
  %76 = and i1 %73, %75
  br i1 %76, label %77, label %97

77:                                               ; preds = %69
  %78 = call i32 @_ZN14CBC_C40Encoder21BacktrackOneCharacterEP18CBC_EncoderContextPN5fxcrt10WideStringEi(%class.CBC_C40Encoder* %0, %class.CBC_EncoderContext* %1, %"class.fxcrt::WideString"* nonnull %3, i32 %66)
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %103, label %65

80:                                               ; preds = %49
  %81 = icmp eq i64 %51, 0
  br i1 %81, label %82, label %95

82:                                               ; preds = %80
  %83 = load i64, i64* %8, align 8
  %84 = load i8 (%class.CBC_C40Encoder*)**, i8 (%class.CBC_C40Encoder*)*** %12, align 8
  %85 = getelementptr inbounds i8 (%class.CBC_C40Encoder*)*, i8 (%class.CBC_C40Encoder*)** %84, i64 2
  %86 = load i8 (%class.CBC_C40Encoder*)*, i8 (%class.CBC_C40Encoder*)** %85, align 8
  %87 = call signext i8 %86(%class.CBC_C40Encoder* %0) #6
  %88 = call signext i8 @_ZN20CBC_HighLevelEncoder13LookAheadTestERKN5fxcrt10WideStringEmNS_8EncodingE(%"class.fxcrt::WideString"* dereferenceable(8) %11, i64 %83, i8 signext %87) #6
  %89 = load i8 (%class.CBC_C40Encoder*)**, i8 (%class.CBC_C40Encoder*)*** %12, align 8
  %90 = getelementptr inbounds i8 (%class.CBC_C40Encoder*)*, i8 (%class.CBC_C40Encoder*)** %89, i64 2
  %91 = load i8 (%class.CBC_C40Encoder*)*, i8 (%class.CBC_C40Encoder*)** %90, align 8
  %92 = call signext i8 %91(%class.CBC_C40Encoder* %0) #6
  %93 = icmp eq i8 %88, %92
  br i1 %93, label %95, label %94

94:                                               ; preds = %82
  call void @_ZN18CBC_EncoderContext19SignalEncoderChangeEN20CBC_HighLevelEncoder8EncodingE(%class.CBC_EncoderContext* %1, i8 signext %88) #6
  br label %97

95:                                               ; preds = %82, %80
  %96 = call zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* %1) #6
  br i1 %96, label %13, label %97

97:                                               ; preds = %95, %65, %69, %2, %94
  %98 = bitcast %class.CBC_C40Encoder* %0 to i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)***
  %99 = load i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)**, i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)*, i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)** %99, i64 4
  %101 = load i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)*, i1 (%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)** %100, align 8
  %102 = call zeroext i1 %101(%class.CBC_C40Encoder* %0, %class.CBC_EncoderContext* %1, %"class.fxcrt::WideString"* nonnull %3) #6
  br label %103

103:                                              ; preds = %28, %13, %77, %59, %97
  %104 = phi i1 [ %102, %97 ], [ false, %59 ], [ false, %77 ], [ false, %13 ], [ false, %28 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret i1 %104
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

declare zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

declare signext i32 @_ZN18CBC_EncoderContext14getCurrentCharEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

declare i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

declare zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEm(%class.CBC_EncoderContext*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CBC_C40Encoder21BacktrackOneCharacterEP18CBC_EncoderContextPN5fxcrt10WideStringEi(%class.CBC_C40Encoder*, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8
  %12 = icmp eq %"class.fxcrt::StringDataTemplate"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %11, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi i64 [ %15, %13 ], [ 0, %9 ]
  %18 = sext i32 %3 to i64
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %37, label %20

20:                                               ; preds = %16
  %21 = sub i64 %17, %18
  %22 = tail call i64 @_ZN5fxcrt10WideString6DeleteEmm(%"class.fxcrt::WideString"* %2, i64 %21, i64 %18) #6
  %23 = load i64, i64* %6, align 8
  %24 = add i64 %23, -1
  store i64 %24, i64* %6, align 8
  %25 = tail call signext i32 @_ZN18CBC_EncoderContext14getCurrentCharEv(%class.CBC_EncoderContext* %1) #6
  %26 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  %27 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %27, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %5) #6
  %28 = bitcast %class.CBC_C40Encoder* %0 to i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)***
  %29 = load i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)**, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)** %29, i64 5
  %31 = load i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)** %30, align 8
  %32 = call i32 %31(%class.CBC_C40Encoder* %0, i32 signext %25, %"class.fxcrt::WideString"* nonnull %5) #6
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %35, label %34

34:                                               ; preds = %20
  call void @_ZN18CBC_EncoderContext15resetSymbolInfoEv(%class.CBC_EncoderContext* %1) #6
  br label %35

35:                                               ; preds = %20, %34
  %36 = phi i32 [ %32, %34 ], [ -1, %20 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  br label %37

37:                                               ; preds = %35, %16, %4
  %38 = phi i32 [ -1, %4 ], [ %36, %35 ], [ -1, %16 ]
  ret i32 %38
}

declare signext i8 @_ZN20CBC_HighLevelEncoder13LookAheadTestERKN5fxcrt10WideStringEmNS_8EncodingE(%"class.fxcrt::WideString"* dereferenceable(8), i64, i8 signext) local_unnamed_addr #1

declare void @_ZN18CBC_EncoderContext19SignalEncoderChangeEN20CBC_HighLevelEncoder8EncodingE(%class.CBC_EncoderContext*, i8 signext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_C40Encoder16WriteNextTripletEP18CBC_EncoderContextPN5fxcrt10WideStringE(%class.CBC_EncoderContext*, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x i32], align 4
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %6, align 8, !noalias !2
  %8 = icmp eq %"class.fxcrt::StringDataTemplate"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %7, i64 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !2
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %14, !prof !5

13:                                               ; preds = %9, %2
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !7
  unreachable

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %7, i64 0, i32 3, i64 0
  %16 = load i32, i32* %15, align 4, !noalias !2
  %17 = icmp eq i64 %11, 1
  br i1 %17, label %18, label %19, !prof !5

18:                                               ; preds = %14
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !7
  unreachable

19:                                               ; preds = %14
  %20 = icmp ugt i64 %11, 2
  br i1 %20, label %22, label %21, !prof !8

21:                                               ; preds = %19
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !7
  unreachable

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %7, i64 0, i32 3, i64 1
  %24 = load i32, i32* %23, align 4, !noalias !2
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %7, i64 0, i32 3, i64 2
  %26 = load i32, i32* %25, align 4, !noalias !2
  %27 = mul nsw i32 %16, 1600
  %28 = mul nsw i32 %24, 40
  %29 = or i32 %27, 1
  %30 = add i32 %28, %29
  %31 = add i32 %30, %26
  %32 = bitcast [2 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6, !noalias !2
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1
  %35 = sdiv i32 %31, 256
  store i32 %35, i32* %33, align 4, !noalias !2
  %36 = srem i32 %31, 256
  store i32 %36, i32* %34, align 4, !noalias !2
  call void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"* nonnull %4, i32* nonnull %33, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6, !noalias !2
  call void @_ZN18CBC_EncoderContext14writeCodewordsERKN5fxcrt10WideStringE(%class.CBC_EncoderContext* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #6
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %37 = call i64 @_ZN5fxcrt10WideString6DeleteEmm(%"class.fxcrt::WideString"* %1, i64 0, i64 3) #6
  ret void
}

declare void @_ZN18CBC_EncoderContext14writeCodewordsERKN5fxcrt10WideStringE(%class.CBC_EncoderContext*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

declare i64 @_ZN5fxcrt10WideString6DeleteEmm(%"class.fxcrt::WideString"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CBC_C40Encoder9HandleEODEP18CBC_EncoderContextPN5fxcrt10WideStringE(%class.CBC_C40Encoder* nocapture readnone, %class.CBC_EncoderContext*, %"class.fxcrt::WideString"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %6 = icmp eq %"class.fxcrt::StringDataTemplate"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = udiv i64 %9, 3
  %11 = shl nuw i64 %10, 1
  %12 = urem i64 %9, 3
  br label %13

13:                                               ; preds = %3, %7
  %14 = phi i64 [ %11, %7 ], [ 0, %3 ]
  %15 = phi i64 [ %12, %7 ], [ 0, %3 ]
  %16 = tail call i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext* %1) #6
  %17 = add i64 %16, %14
  %18 = shl i64 %17, 32
  %19 = ashr exact i64 %18, 32
  %20 = tail call zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEm(%class.CBC_EncoderContext* %1, i64 %19) #6
  br i1 %20, label %21, label %88

21:                                               ; preds = %13
  %22 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 4, i32 0
  %23 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %22, align 8
  %24 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %23, i64 0, i32 1
  %25 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %24, align 8
  %26 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %25, i64 0, i32 0
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i64
  %29 = sub nsw i64 %28, %19
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i64 %15, 2
  br i1 %31, label %32, label %47

32:                                               ; preds = %21
  %33 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 0) #6
  %34 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %35 = icmp eq %"class.fxcrt::StringDataTemplate"* %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %32, %41
  %37 = phi %"class.fxcrt::StringDataTemplate"* [ %42, %41 ], [ %34, %32 ]
  %38 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, 2
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  tail call void @_ZN14CBC_C40Encoder16WriteNextTripletEP18CBC_EncoderContextPN5fxcrt10WideStringE(%class.CBC_EncoderContext* %1, %"class.fxcrt::WideString"* %2)
  %42 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %43 = icmp eq %"class.fxcrt::StringDataTemplate"* %42, null
  br i1 %43, label %44, label %36

44:                                               ; preds = %36, %41, %32
  %45 = tail call zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* %1) #6
  br i1 %45, label %46, label %87

46:                                               ; preds = %44
  tail call void @_ZN18CBC_EncoderContext13writeCodewordEw(%class.CBC_EncoderContext* %1, i32 signext 254) #6
  br label %87

47:                                               ; preds = %21
  %48 = icmp eq i32 %30, 1
  %49 = icmp eq i64 %15, 1
  %50 = and i1 %49, %48
  br i1 %50, label %51, label %69

51:                                               ; preds = %47
  %52 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %53 = icmp eq %"class.fxcrt::StringDataTemplate"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %51, %59
  %55 = phi %"class.fxcrt::StringDataTemplate"* [ %60, %59 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %55, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp ugt i64 %57, 2
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  tail call void @_ZN14CBC_C40Encoder16WriteNextTripletEP18CBC_EncoderContextPN5fxcrt10WideStringE(%class.CBC_EncoderContext* %1, %"class.fxcrt::WideString"* %2)
  %60 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %61 = icmp eq %"class.fxcrt::StringDataTemplate"* %60, null
  br i1 %61, label %62, label %54

62:                                               ; preds = %54, %59, %51
  %63 = tail call zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* %1) #6
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void @_ZN18CBC_EncoderContext13writeCodewordEw(%class.CBC_EncoderContext* %1, i32 signext 254) #6
  br label %65

65:                                               ; preds = %64, %62
  %66 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, -1
  store i64 %68, i64* %66, align 8
  br label %87

69:                                               ; preds = %47
  %70 = icmp eq i64 %15, 0
  br i1 %70, label %71, label %88

71:                                               ; preds = %69
  %72 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %73 = icmp eq %"class.fxcrt::StringDataTemplate"* %72, null
  br i1 %73, label %82, label %74

74:                                               ; preds = %71, %79
  %75 = phi %"class.fxcrt::StringDataTemplate"* [ %80, %79 ], [ %72, %71 ]
  %76 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %75, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = icmp ugt i64 %77, 2
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  tail call void @_ZN14CBC_C40Encoder16WriteNextTripletEP18CBC_EncoderContextPN5fxcrt10WideStringE(%class.CBC_EncoderContext* %1, %"class.fxcrt::WideString"* %2)
  %80 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %81 = icmp eq %"class.fxcrt::StringDataTemplate"* %80, null
  br i1 %81, label %82, label %74

82:                                               ; preds = %74, %79, %71
  %83 = icmp sgt i32 %30, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = tail call zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* %1) #6
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %82
  tail call void @_ZN18CBC_EncoderContext13writeCodewordEw(%class.CBC_EncoderContext* %1, i32 signext 254) #6
  br label %87

87:                                               ; preds = %65, %84, %86, %44, %46
  tail call void @_ZN18CBC_EncoderContext19SignalEncoderChangeEN20CBC_HighLevelEncoder8EncodingE(%class.CBC_EncoderContext* %1, i8 signext 0) #6
  br label %88

88:                                               ; preds = %87, %69, %13
  %89 = phi i1 [ false, %13 ], [ true, %87 ], [ false, %69 ]
  ret i1 %89
}

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #1

declare void @_ZN18CBC_EncoderContext13writeCodewordEw(%class.CBC_EncoderContext*, i32 signext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CBC_C40Encoder10EncodeCharEwPN5fxcrt10WideStringE(%class.CBC_C40Encoder*, i32 signext, %"class.fxcrt::WideString"*) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 32
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 3) #6
  br label %67

7:                                                ; preds = %3
  %8 = icmp ugt i32 %1, 127
  br i1 %8, label %21, label %9

9:                                                ; preds = %7
  %10 = tail call i32 @iswdigit(i32 %1) #6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add nsw i32 %1, -44
  %14 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %13) #6
  br label %67

15:                                               ; preds = %9
  %16 = add nsw i32 %1, -65
  %17 = icmp ult i32 %16, 26
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = add nsw i32 %1, -51
  %20 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %19) #6
  br label %67

21:                                               ; preds = %7, %15
  %22 = icmp slt i32 %1, 32
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 0) #6
  %25 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %1) #6
  br label %67

26:                                               ; preds = %21
  %27 = icmp slt i32 %1, 48
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 1) #6
  %30 = add nsw i32 %1, -33
  %31 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %30) #6
  br label %67

32:                                               ; preds = %26
  %33 = add nsw i32 %1, -58
  %34 = icmp ult i32 %33, 7
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 1) #6
  %37 = add nsw i32 %1, -43
  %38 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %37) #6
  br label %67

39:                                               ; preds = %32
  %40 = add nsw i32 %1, -91
  %41 = icmp ult i32 %40, 5
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 1) #6
  %44 = add nsw i32 %1, -69
  %45 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %44) #6
  br label %67

46:                                               ; preds = %39
  %47 = add nsw i32 %1, -60
  %48 = icmp ult i32 %47, 68
  br i1 %48, label %49, label %53

49:                                               ; preds = %46
  %50 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 2) #6
  %51 = add nsw i32 %1, -96
  %52 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %51) #6
  br label %67

53:                                               ; preds = %46
  %54 = icmp sgt i32 %1, 79
  br i1 %54, label %55, label %67

55:                                               ; preds = %53
  %56 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 1) #6
  %57 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext 30) #6
  %58 = add nsw i32 %1, -128
  %59 = bitcast %class.CBC_C40Encoder* %0 to i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)***
  %60 = load i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)**, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)** %60, i64 5
  %62 = load i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)*, i32 (%class.CBC_C40Encoder*, i32, %"class.fxcrt::WideString"*)** %61, align 8
  %63 = tail call i32 %62(%class.CBC_C40Encoder* %0, i32 signext %58, %"class.fxcrt::WideString"* %2) #6
  %64 = icmp sgt i32 %63, 0
  %65 = add nsw i32 %63, 2
  %66 = select i1 %64, i32 %65, i32 0
  br label %67

67:                                               ; preds = %53, %55, %49, %42, %35, %28, %23, %18, %12, %5
  %68 = phi i32 [ 1, %5 ], [ 1, %12 ], [ 1, %18 ], [ 2, %23 ], [ 2, %28 ], [ 2, %35 ], [ 2, %42 ], [ 2, %49 ], [ %66, %55 ], [ 0, %53 ]
  ret i32 %68
}

declare void @_ZN18CBC_EncoderContext15resetSymbolInfoEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"*, i32*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @iswdigit(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_120EncodeToC40CodewordsERKN5fxcrt10WideStringE: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_120EncodeToC40CodewordsERKN5fxcrt10WideStringE"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i32 -2143842569}
!7 = !{i32 -2143842548}
!8 = !{!"branch_weights", i32 2000, i32 1}
