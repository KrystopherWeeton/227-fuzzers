; ModuleID = '../../third_party/pdfium/core/fxcodec/jbig2/JBig2_HtrdProc.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/jbig2/JBig2_HtrdProc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CJBig2_Image = type <{ %"class.fxcrt::MaybeOwned", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.0", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%class.CJBig2_HTRDProc = type { i32, i32, i8, i8, i32, %"class.std::__1::vector"*, i8, i32, i8, i32, i32, i32, i32, i16, i16, i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CJBig2_Image* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::unique_ptr"* }
%class.CJBig2_ArithDecoder = type opaque
%class.JBig2ArithCtx = type opaque
%class.PauseIndicatorIface = type opaque
%class.CJBig2_GRDProc = type <{ i8, i8, i8, i8, i32, i32, [4 x i8], %"class.fxcrt::UnownedPtr.8", [8 x i8], i32, [4 x i8], i8*, i32, i16, [2 x i8], i32, %struct.FX_RECT, [4 x i8] }>
%"class.fxcrt::UnownedPtr.8" = type { %class.CJBig2_Image* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.CJBig2_GRDProc::ProgressiveArithDecodeState" = type { %"class.std::__1::unique_ptr"*, %"class.fxcrt::UnownedPtr.9", %"class.fxcrt::UnownedPtr.10", %"class.fxcrt::UnownedPtr.11" }
%"class.fxcrt::UnownedPtr.9" = type { %class.CJBig2_ArithDecoder* }
%"class.fxcrt::UnownedPtr.10" = type { %class.JBig2ArithCtx* }
%"class.fxcrt::UnownedPtr.11" = type { %class.PauseIndicatorIface* }
%class.CJBig2_BitStream = type <{ %"class.pdfium::span", i32, i32, i32, [4 x i8] }>
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.12", i64 }
%"class.fxcrt::UnownedPtr.12" = type { i8* }

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_Image* @_ZN15CJBig2_HTRDProc11DecodeArithEP19CJBig2_ArithDecoderP13JBig2ArithCtxP19PauseIndicatorIface(%class.CJBig2_HTRDProc* nocapture readonly, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CJBig2_GRDProc, align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", align 8
  %9 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 8
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %79, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 9
  %14 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 10
  %15 = tail call i8* @_Znwm(i64 32) #6
  %16 = bitcast i8* %15 to %class.CJBig2_Image*
  %17 = load i32, i32* %13, align 4
  %18 = load i32, i32* %14, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %16, i32 %17, i32 %18) #7
  %19 = ptrtoint i8* %15 to i64
  %20 = load i32, i32* %14, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %79, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 11
  %24 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 14
  %25 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 13
  %26 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 12
  %27 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 15
  %28 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 0
  %29 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 16
  %30 = load i32, i32* %13, align 4
  br label %31

31:                                               ; preds = %22, %38
  %32 = phi i32 [ %20, %22 ], [ %39, %38 ]
  %33 = phi i32 [ %30, %22 ], [ %40, %38 ]
  %34 = phi i32 [ 0, %22 ], [ %41, %38 ]
  %35 = icmp eq i32 %33, 0
  br i1 %35, label %38, label %43

36:                                               ; preds = %43
  %37 = load i32, i32* %14, align 8
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ %37, %36 ], [ %32, %31 ]
  %40 = phi i32 [ %77, %36 ], [ 0, %31 ]
  %41 = add nuw i32 %34, 1
  %42 = icmp ult i32 %41, %39
  br i1 %42, label %31, label %79

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %76, %43 ], [ 0, %31 ]
  %45 = load i32, i32* %23, align 4
  %46 = load i16, i16* %24, align 2
  %47 = zext i16 %46 to i32
  %48 = mul i32 %34, %47
  %49 = add i32 %48, %45
  %50 = load i16, i16* %25, align 4
  %51 = zext i16 %50 to i32
  %52 = mul i32 %44, %51
  %53 = add i32 %49, %52
  %54 = lshr i32 %53, 8
  %55 = load i32, i32* %26, align 8
  %56 = mul i32 %34, %51
  %57 = mul i32 %44, %47
  %58 = sub i32 %55, %57
  %59 = add i32 %58, %56
  %60 = lshr i32 %59, 8
  %61 = load i8, i8* %27, align 8
  %62 = zext i8 %61 to i32
  %63 = sub nsw i32 0, %62
  %64 = icmp eq i32 %54, %63
  %65 = load i32, i32* %28, align 8
  %66 = icmp sge i32 %54, %65
  %67 = or i1 %64, %66
  %68 = load i8, i8* %29, align 1
  %69 = zext i8 %68 to i32
  %70 = sub nsw i32 0, %69
  %71 = icmp eq i32 %60, %70
  %72 = or i1 %67, %71
  %73 = icmp uge i32 %60, %69
  %74 = or i1 %73, %72
  %75 = zext i1 %74 to i32
  tail call void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image* nonnull %16, i32 %44, i32 %34, i32 %75) #7
  %76 = add nuw i32 %44, 1
  %77 = load i32, i32* %13, align 4
  %78 = icmp ult i32 %76, %77
  br i1 %78, label %43, label %36

79:                                               ; preds = %38, %12, %4
  %80 = phi i64 [ 0, %4 ], [ %19, %12 ], [ %19, %38 ]
  %81 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 4
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %83, %79
  %84 = phi i32 [ 1, %79 ], [ %87, %83 ]
  %85 = shl i32 1, %84
  %86 = icmp ult i32 %85, %82
  %87 = add i32 %84, 1
  br i1 %86, label %83, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %89) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 80, i1 false)
  call void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc* nonnull %5) #7
  %90 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 2
  %91 = load i8, i8* %90, align 8, !range !2
  store i8 %91, i8* %89, align 8
  %92 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 9
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 4
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 10
  %96 = load i32, i32* %95, align 8
  %97 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 5
  store i32 %96, i32* %97, align 8
  %98 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 3
  %99 = load i8, i8* %98, align 1
  %100 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 3
  store i8 %99, i8* %100, align 1
  %101 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 1
  store i8 0, i8* %101, align 1
  %102 = load i8, i8* %9, align 8, !range !2
  %103 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 2
  store i8 %102, i8* %103, align 2
  %104 = inttoptr i64 %80 to %class.CJBig2_Image*
  %105 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 7, i32 0
  store %class.CJBig2_Image* %104, %class.CJBig2_Image** %105, align 8
  %106 = icmp ult i8 %99, 2
  %107 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 8, i64 0
  %108 = select i1 %106, i8 3, i8 2
  store i8 %108, i8* %107, align 8
  %109 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 8, i64 1
  store i8 -1, i8* %109, align 1
  %110 = icmp eq i8 %99, 0
  br i1 %110, label %111, label %118

111:                                              ; preds = %88
  %112 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 8, i64 2
  store i8 -3, i8* %112, align 2
  %113 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 8, i64 3
  store i8 -1, i8* %113, align 1
  %114 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 8, i64 4
  store i8 2, i8* %114, align 4
  %115 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 8, i64 5
  store i8 -2, i8* %115, align 1
  %116 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 8, i64 6
  store i8 -2, i8* %116, align 2
  %117 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %5, i64 0, i32 8, i64 7
  store i8 -2, i8* %117, align 1
  br label %118

118:                                              ; preds = %111, %88
  %119 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #7
  %120 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %121 = and i32 %84, 255
  %122 = zext i32 %121 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 0, i64 24, i1 false) #7
  %123 = icmp eq i32 %121, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %118
  %125 = call %class.CJBig2_Image* @_ZN15CJBig2_HTRDProc11DecodeImageERKNSt3__16vectorINS0_10unique_ptrI12CJBig2_ImageNS0_14default_deleteIS3_EEEENS0_9allocatorIS6_EEEE(%class.CJBig2_HTRDProc* %0, %"class.std::__1::vector"* nonnull dereferenceable(24) %6)
  br label %214

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %128 = shl nuw nsw i32 %121, 3
  %129 = zext i32 %128 to i64
  %130 = call i8* @_Znwm(i64 %129) #6
  %131 = bitcast i8* %130 to %"class.std::__1::unique_ptr"*
  %132 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %130, i8** %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %131, i64 %122
  store %"class.std::__1::unique_ptr"* %133, %"class.std::__1::unique_ptr"** %127, align 8
  %134 = bitcast %"class.std::__1::unique_ptr"** %120 to i64*
  %135 = ptrtoint i8* %130 to i64
  %136 = add nsw i64 %122, -1
  %137 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %131, i64 %136, i32 0, i32 0, i32 0
  %138 = ptrtoint %class.CJBig2_Image** %137 to i64
  %139 = sub i64 8, %135
  %140 = add i64 %139, %138
  %141 = and i64 %140, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 0, i64 %141, i1 false) #7
  %142 = ptrtoint %"class.std::__1::unique_ptr"* %133 to i64
  store i64 %142, i64* %134, align 8
  %143 = add nsw i32 %121, -1
  %144 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %146 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  %147 = bitcast %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %8 to i8*
  %148 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %8, i64 0, i32 0
  %149 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %8, i64 0, i32 1, i32 0
  %150 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %8, i64 0, i32 2, i32 0
  %151 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %8, i64 0, i32 3, i32 0
  %152 = and i32 %84, 255
  %153 = zext i32 %152 to i64
  %154 = sext i32 %143 to i64
  %155 = bitcast %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %8 to i8*
  br label %158

156:                                              ; preds = %191
  %157 = icmp sgt i64 %160, 0
  br i1 %157, label %158, label %193

158:                                              ; preds = %126, %156
  %159 = phi i64 [ %153, %126 ], [ %160, %156 ]
  %160 = add nsw i64 %159, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #7
  store i64 0, i64* %146, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %147) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 32, i1 false)
  call void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateC1Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nonnull %8) #7
  store %"class.std::__1::unique_ptr"* %7, %"class.std::__1::unique_ptr"** %148, align 8
  store %class.CJBig2_ArithDecoder* %1, %class.CJBig2_ArithDecoder** %149, align 8
  store %class.JBig2ArithCtx* %2, %class.JBig2ArithCtx** %150, align 8
  store %class.PauseIndicatorIface* null, %class.PauseIndicatorIface** %151, align 8
  %161 = call i32 @_ZN14CJBig2_GRDProc16StartDecodeArithEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nonnull %5, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nonnull %8) #7
  store %class.PauseIndicatorIface* %3, %class.PauseIndicatorIface** %151, align 8
  %162 = icmp eq i32 %161, 3
  br i1 %162, label %163, label %166

163:                                              ; preds = %158, %163
  %164 = call i32 @_ZN14CJBig2_GRDProc14ContinueDecodeEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nonnull %5, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nonnull %8) #7
  %165 = icmp eq i32 %164, 3
  br i1 %165, label %163, label %166

166:                                              ; preds = %163, %158
  %167 = load %class.CJBig2_Image*, %class.CJBig2_Image** %145, align 8
  %168 = icmp eq %class.CJBig2_Image* %167, null
  br i1 %168, label %185, label %169

169:                                              ; preds = %166
  %170 = ptrtoint %class.CJBig2_Image* %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %131, i64 %160
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %145, align 8
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = load %class.CJBig2_Image*, %class.CJBig2_Image** %172, align 8
  %174 = bitcast %"class.std::__1::unique_ptr"* %171 to i64*
  store i64 %170, i64* %174, align 8
  %175 = icmp eq %class.CJBig2_Image* %173, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %169
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %173) #7
  %177 = bitcast %class.CJBig2_Image* %173 to i8*
  call void @_ZdlPv(i8* %177) #6
  br label %178

178:                                              ; preds = %169, %176
  %179 = icmp sgt i64 %159, %154
  br i1 %179, label %185, label %180

180:                                              ; preds = %178
  %181 = load %class.CJBig2_Image*, %class.CJBig2_Image** %172, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %131, i64 %159, i32 0, i32 0, i32 0
  %183 = load %class.CJBig2_Image*, %class.CJBig2_Image** %182, align 8
  %184 = call zeroext i1 @_ZN12CJBig2_Image11ComposeFromEiiPS_14JBig2ComposeOp(%class.CJBig2_Image* %181, i32 0, i32 0, %class.CJBig2_Image* %183, i32 2) #7
  br label %185

185:                                              ; preds = %178, %166, %180
  %186 = phi i32 [ 0, %180 ], [ 0, %178 ], [ 1, %166 ]
  call void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateD1Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %147) #7
  %187 = load %class.CJBig2_Image*, %class.CJBig2_Image** %145, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %145, align 8
  %188 = icmp eq %class.CJBig2_Image* %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %187) #7
  %190 = bitcast %class.CJBig2_Image* %187 to i8*
  call void @_ZdlPv(i8* %190) #6
  br label %191

191:                                              ; preds = %185, %189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #7
  %192 = icmp eq i32 %186, 0
  br i1 %192, label %156, label %195

193:                                              ; preds = %156
  %194 = call %class.CJBig2_Image* @_ZN15CJBig2_HTRDProc11DecodeImageERKNSt3__16vectorINS0_10unique_ptrI12CJBig2_ImageNS0_14default_deleteIS3_EEEENS0_9allocatorIS6_EEEE(%class.CJBig2_HTRDProc* %0, %"class.std::__1::vector"* nonnull dereferenceable(24) %6)
  br label %195

195:                                              ; preds = %191, %193
  %196 = phi %class.CJBig2_Image* [ %194, %193 ], [ null, %191 ]
  %197 = icmp eq %"class.std::__1::unique_ptr"* %133, %131
  br i1 %197, label %211, label %198

198:                                              ; preds = %195, %206
  %199 = phi %"class.std::__1::unique_ptr"* [ %200, %206 ], [ %133, %195 ]
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %199, i64 -1
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %200, i64 0, i32 0, i32 0, i32 0
  %202 = load %class.CJBig2_Image*, %class.CJBig2_Image** %201, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %201, align 8
  %203 = icmp eq %class.CJBig2_Image* %202, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %198
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %202) #7
  %205 = bitcast %class.CJBig2_Image* %202 to i8*
  call void @_ZdlPv(i8* %205) #6
  br label %206

206:                                              ; preds = %204, %198
  %207 = icmp eq %"class.std::__1::unique_ptr"* %200, %131
  br i1 %207, label %208, label %198

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::vector"* %6 to i8**
  %210 = load i8*, i8** %209, align 8
  br label %211

211:                                              ; preds = %208, %195
  %212 = phi i8* [ %210, %208 ], [ %130, %195 ]
  %213 = bitcast %"class.std::__1::unique_ptr"** %120 to i8**
  store i8* %130, i8** %213, align 8
  call void @_ZdlPv(i8* %212) #6
  br label %214

214:                                              ; preds = %124, %211
  %215 = phi %class.CJBig2_Image* [ %196, %211 ], [ %125, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #7
  call void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %89) #7
  %216 = icmp eq i64 %80, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %104) #7
  %218 = inttoptr i64 %80 to i8*
  call void @_ZdlPv(i8* %218) #6
  br label %219

219:                                              ; preds = %214, %217
  ret %class.CJBig2_Image* %215
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc*) unnamed_addr #2

declare void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateC1Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) unnamed_addr #2

declare i32 @_ZN14CJBig2_GRDProc16StartDecodeArithEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) local_unnamed_addr #2

declare i32 @_ZN14CJBig2_GRDProc14ContinueDecodeEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) local_unnamed_addr #2

declare zeroext i1 @_ZN12CJBig2_Image11ComposeFromEiiPS_14JBig2ComposeOp(%class.CJBig2_Image*, i32, i32, %class.CJBig2_Image*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateD1Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_Image* @_ZN15CJBig2_HTRDProc11DecodeImageERKNSt3__16vectorINS0_10unique_ptrI12CJBig2_ImageNS0_14default_deleteIS3_EEEENS0_9allocatorIS6_EEEE(%class.CJBig2_HTRDProc* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 32) #6
  %6 = bitcast i8* %5 to %class.CJBig2_Image*
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %4, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %6, i32 %7, i32 %8) #7
  %9 = ptrtoint i8* %5 to i64
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %103, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 6
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp ne i8 %16, 0
  tail call void @_ZN12CJBig2_Image4FillEb(%class.CJBig2_Image* nonnull %6, i1 zeroext %17) #7
  %18 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 10
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %104, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 9
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr"** %23 to i64*
  %25 = bitcast %"class.std::__1::vector"* %1 to i64*
  %26 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 4
  %27 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 11
  %28 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 14
  %29 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 13
  %30 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 12
  %31 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 5
  %32 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 7
  %33 = load i32, i32* %22, align 4
  br label %34

34:                                               ; preds = %21, %46
  %35 = phi i32 [ %19, %21 ], [ %47, %46 ]
  %36 = phi i32 [ %33, %21 ], [ %48, %46 ]
  %37 = phi i32 [ 0, %21 ], [ %49, %46 ]
  %38 = icmp eq i32 %36, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34, %51
  %40 = phi i32 [ %81, %51 ], [ 0, %34 ]
  %41 = load i64, i64* %24, align 8
  %42 = load i64, i64* %25, align 8
  %43 = icmp eq i64 %41, %42
  br i1 %43, label %51, label %84

44:                                               ; preds = %51
  %45 = load i32, i32* %18, align 8
  br label %46

46:                                               ; preds = %44, %34
  %47 = phi i32 [ %45, %44 ], [ %35, %34 ]
  %48 = phi i32 [ %82, %44 ], [ 0, %34 ]
  %49 = add nuw i32 %37, 1
  %50 = icmp ult i32 %49, %47
  br i1 %50, label %34, label %104

51:                                               ; preds = %84, %39
  %52 = phi i32 [ 0, %39 ], [ %95, %84 ]
  %53 = load i32, i32* %26, align 4
  %54 = add i32 %53, -1
  %55 = icmp ult i32 %54, %52
  %56 = select i1 %55, i32 %54, i32 %52
  %57 = load i32, i32* %27, align 4
  %58 = load i16, i16* %28, align 2
  %59 = zext i16 %58 to i32
  %60 = mul i32 %37, %59
  %61 = add i32 %60, %57
  %62 = load i16, i16* %29, align 4
  %63 = zext i16 %62 to i32
  %64 = mul i32 %40, %63
  %65 = add i32 %61, %64
  %66 = lshr i32 %65, 8
  %67 = load i32, i32* %30, align 8
  %68 = mul i32 %37, %63
  %69 = mul i32 %40, %59
  %70 = sub i32 %67, %69
  %71 = add i32 %70, %68
  %72 = lshr i32 %71, 8
  %73 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %31, align 8
  %74 = zext i32 %56 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %73, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %76, i64 %74, i32 0, i32 0, i32 0
  %78 = load %class.CJBig2_Image*, %class.CJBig2_Image** %77, align 8
  %79 = load i32, i32* %32, align 4
  %80 = tail call zeroext i1 @_ZN12CJBig2_Image9ComposeToEPS_ii14JBig2ComposeOp(%class.CJBig2_Image* %78, %class.CJBig2_Image* nonnull %6, i32 %66, i32 %72, i32 %79) #7
  %81 = add nuw i32 %40, 1
  %82 = load i32, i32* %22, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %39, label %44

84:                                               ; preds = %39, %84
  %85 = phi i64 [ %99, %84 ], [ %42, %39 ]
  %86 = phi i64 [ %97, %84 ], [ 0, %39 ]
  %87 = phi i8 [ %96, %84 ], [ 0, %39 ]
  %88 = phi i32 [ %95, %84 ], [ 0, %39 ]
  %89 = inttoptr i64 %85 to %"class.std::__1::unique_ptr"*
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 %86, i32 0, i32 0, i32 0
  %91 = load %class.CJBig2_Image*, %class.CJBig2_Image** %90, align 8
  %92 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %91, i32 %40, i32 %37) #7
  %93 = zext i8 %87 to i32
  %94 = shl i32 %92, %93
  %95 = or i32 %94, %88
  %96 = add i8 %87, 1
  %97 = zext i8 %96 to i64
  %98 = load i64, i64* %24, align 8
  %99 = load i64, i64* %25, align 8
  %100 = sub i64 %98, %99
  %101 = ashr exact i64 %100, 3
  %102 = icmp ugt i64 %101, %97
  br i1 %102, label %84, label %51

103:                                              ; preds = %2
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %6) #7
  tail call void @_ZdlPv(i8* nonnull %5) #6
  br label %104

104:                                              ; preds = %46, %14, %103
  %105 = phi i64 [ 0, %103 ], [ %9, %14 ], [ %9, %46 ]
  %106 = inttoptr i64 %105 to %class.CJBig2_Image*
  ret %class.CJBig2_Image* %106
}

; Function Attrs: nounwind
declare void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_Image* @_ZN15CJBig2_HTRDProc9DecodeMMREP16CJBig2_BitStream(%class.CJBig2_HTRDProc* nocapture readonly, %class.CJBig2_BitStream*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CJBig2_GRDProc, align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  br label %7

7:                                                ; preds = %7, %2
  %8 = phi i32 [ 1, %2 ], [ %11, %7 ]
  %9 = shl i32 1, %8
  %10 = icmp ult i32 %9, %6
  %11 = add i32 %8, 1
  br i1 %10, label %7, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 80, i1 false)
  call void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc* nonnull %3) #7
  %14 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 2
  %15 = load i8, i8* %14, align 8, !range !2
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 9
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %3, i64 0, i32 4
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %class.CJBig2_HTRDProc, %class.CJBig2_HTRDProc* %0, i64 0, i32 10
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %3, i64 0, i32 5
  store i32 %20, i32* %21, align 8
  %22 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %24 = and i32 %8, 255
  %25 = zext i32 %24 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #7
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = shl nuw nsw i32 %24, 3
  %30 = zext i32 %29 to i64
  %31 = call i8* @_Znwm(i64 %30) #6
  %32 = bitcast i8* %31 to %"class.std::__1::unique_ptr"*
  %33 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 %25
  store %"class.std::__1::unique_ptr"* %34, %"class.std::__1::unique_ptr"** %28, align 8
  %35 = bitcast %"class.std::__1::unique_ptr"** %23 to i64*
  %36 = ptrtoint i8* %31 to i64
  %37 = add nsw i64 %25, -1
  %38 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 %37, i32 0, i32 0, i32 0
  %39 = ptrtoint %class.CJBig2_Image** %38 to i64
  %40 = sub i64 8, %36
  %41 = add i64 %40, %39
  %42 = and i64 %41, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 %42, i1 false) #7
  %43 = ptrtoint %"class.std::__1::unique_ptr"* %34 to i64
  store i64 %43, i64* %35, align 8
  %44 = bitcast i8* %31 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %12, %27
  %46 = phi %"class.std::__1::unique_ptr"* [ null, %12 ], [ %34, %27 ]
  %47 = phi %"class.std::__1::unique_ptr"* [ null, %12 ], [ %44, %27 ]
  %48 = phi i8* [ null, %12 ], [ %31, %27 ]
  %49 = phi %"class.std::__1::unique_ptr"* [ null, %12 ], [ %32, %27 ]
  %50 = add nsw i32 %24, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 %51
  %53 = call i32 @_ZN14CJBig2_GRDProc14StartDecodeMMREPNSt3__110unique_ptrI12CJBig2_ImageNS0_14default_deleteIS2_EEEEP16CJBig2_BitStream(%class.CJBig2_GRDProc* nonnull %3, %"class.std::__1::unique_ptr"* %52, %class.CJBig2_BitStream* %1) #7
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0
  %55 = load %class.CJBig2_Image*, %class.CJBig2_Image** %54, align 8
  %56 = icmp eq %class.CJBig2_Image* %55, null
  br i1 %56, label %80, label %57

57:                                               ; preds = %45
  call void @_ZN16CJBig2_BitStream9alignByteEv(%class.CJBig2_BitStream* %1) #7
  call void @_ZN16CJBig2_BitStream6offsetEj(%class.CJBig2_BitStream* %1, i32 3) #7
  %58 = icmp ugt i32 %24, 1
  br i1 %58, label %59, label %78

59:                                               ; preds = %57
  %60 = and i32 %8, 255
  %61 = zext i32 %60 to i64
  %62 = add nsw i64 %61, -2
  br label %63

63:                                               ; preds = %59, %70
  %64 = phi i64 [ %62, %59 ], [ %76, %70 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 %64
  %66 = call i32 @_ZN14CJBig2_GRDProc14StartDecodeMMREPNSt3__110unique_ptrI12CJBig2_ImageNS0_14default_deleteIS2_EEEEP16CJBig2_BitStream(%class.CJBig2_GRDProc* nonnull %3, %"class.std::__1::unique_ptr"* %65, %class.CJBig2_BitStream* %1) #7
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = load %class.CJBig2_Image*, %class.CJBig2_Image** %67, align 8
  %69 = icmp eq %class.CJBig2_Image* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %63
  call void @_ZN16CJBig2_BitStream9alignByteEv(%class.CJBig2_BitStream* %1) #7
  call void @_ZN16CJBig2_BitStream6offsetEj(%class.CJBig2_BitStream* %1, i32 3) #7
  %71 = load %class.CJBig2_Image*, %class.CJBig2_Image** %67, align 8
  %72 = add nuw nsw i64 %64, 1
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 %72, i32 0, i32 0, i32 0
  %74 = load %class.CJBig2_Image*, %class.CJBig2_Image** %73, align 8
  %75 = call zeroext i1 @_ZN12CJBig2_Image11ComposeFromEiiPS_14JBig2ComposeOp(%class.CJBig2_Image* %71, i32 0, i32 0, %class.CJBig2_Image* %74, i32 2) #7
  %76 = add i64 %64, -1
  %77 = icmp sgt i64 %64, 0
  br i1 %77, label %63, label %78

78:                                               ; preds = %70, %57
  %79 = call %class.CJBig2_Image* @_ZN15CJBig2_HTRDProc11DecodeImageERKNSt3__16vectorINS0_10unique_ptrI12CJBig2_ImageNS0_14default_deleteIS3_EEEENS0_9allocatorIS6_EEEE(%class.CJBig2_HTRDProc* %0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4)
  br label %80

80:                                               ; preds = %63, %45, %78
  %81 = phi %class.CJBig2_Image* [ %79, %78 ], [ null, %45 ], [ null, %63 ]
  %82 = icmp eq %"class.std::__1::unique_ptr"* %49, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %80
  %84 = icmp eq %"class.std::__1::unique_ptr"* %46, %49
  br i1 %84, label %98, label %85

85:                                               ; preds = %83, %93
  %86 = phi %"class.std::__1::unique_ptr"* [ %87, %93 ], [ %46, %83 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 -1
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %class.CJBig2_Image*, %class.CJBig2_Image** %88, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %88, align 8
  %90 = icmp eq %class.CJBig2_Image* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %89) #7
  %92 = bitcast %class.CJBig2_Image* %89 to i8*
  call void @_ZdlPv(i8* %92) #6
  br label %93

93:                                               ; preds = %91, %85
  %94 = icmp eq %"class.std::__1::unique_ptr"* %87, %49
  br i1 %94, label %95, label %85

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::vector"* %4 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %83
  %99 = phi i8* [ %97, %95 ], [ %48, %83 ]
  store %"class.std::__1::unique_ptr"* %47, %"class.std::__1::unique_ptr"** %23, align 8
  call void @_ZdlPv(i8* %99) #6
  br label %100

100:                                              ; preds = %80, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #7
  call void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #7
  ret %class.CJBig2_Image* %81
}

declare i32 @_ZN14CJBig2_GRDProc14StartDecodeMMREPNSt3__110unique_ptrI12CJBig2_ImageNS0_14default_deleteIS2_EEEEP16CJBig2_BitStream(%class.CJBig2_GRDProc*, %"class.std::__1::unique_ptr"*, %class.CJBig2_BitStream*) local_unnamed_addr #2

declare void @_ZN16CJBig2_BitStream9alignByteEv(%class.CJBig2_BitStream*) local_unnamed_addr #2

declare void @_ZN16CJBig2_BitStream6offsetEj(%class.CJBig2_BitStream*, i32) local_unnamed_addr #2

declare void @_ZN12CJBig2_Image4FillEb(%class.CJBig2_Image*, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN12CJBig2_Image9ComposeToEPS_ii14JBig2ComposeOp(%class.CJBig2_Image*, %class.CJBig2_Image*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image*, i32, i32) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
