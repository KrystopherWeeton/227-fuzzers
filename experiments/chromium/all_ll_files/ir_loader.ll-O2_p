; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/ir_loader.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/ir_loader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spvtools::opt::IrLoader" = type <{ %"class.std::__1::function"*, %"class.spvtools::opt::Module"*, %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.37", %"class.std::__1::vector.11", %"class.std::__1::unique_ptr.18", %"class.spvtools::opt::DebugScope", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::vector.28", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.35", %"class.std::__1::unique_ptr.18", %"class.std::__1::vector.28" }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.11", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.spvtools::opt::IRContext" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.6" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::vector.0"* }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i32* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.spvtools::opt::Operand"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::unique_ptr.37"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::unique_ptr.18"* }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.18", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.18", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.23", %"class.std::__1::vector.11", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::unique_ptr.25"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.spv_parsed_instruction_t = type { i32*, i16, i16, i32, i32, i32, %struct.spv_parsed_operand_t*, i16 }
%struct.spv_parsed_operand_t = type { i16, i16, i32, i32, i32 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.std::__1::default_delete.41" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.67" = type { %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::allocator.46"* }
%"class.std::__1::allocator.46" = type { i8 }

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8FunctionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt8FunctionD2Ev = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZN8spvtools3opt11InstructionC2ERKS1_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools4LogfIJRK6SpvOp_EEEvRKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS8_EEES6_S8_SB_S8_DpOT_ = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

@.str = private unnamed_addr constant [14 x i8] c"<instruction>\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"function inside function\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"OpFunctionEnd without corresponding OpFunction\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"OpFunctionEnd inside basic block\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"OpLabel outside function\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"OpLabel inside basic block\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"terminator instruction outside function\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"terminator instruction outside basic block\00", align 1
@.str.8 = private unnamed_addr constant [68 x i8] c"Unhandled inst type (opcode: %d) found outside function definition.\00", align 1
@.str.9 = private unnamed_addr constant [121 x i8] c"Debug info extension instruction other than DebugScope, DebugNoScope, DebugDeclare, and DebugValue found inside function\00", align 1
@.str.10 = private unnamed_addr constant [83 x i8] c"Non-OpFunctionParameter (opcode: %d) found inside function but outside basic block\00", align 1
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [27 x i8] c"cannot compose log message\00", align 1

@_ZN8spvtools3opt8IrLoaderC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS6_EEEPNS0_6ModuleE = hidden unnamed_addr alias void (%"class.spvtools::opt::IrLoader"*, %"class.std::__1::function"*, %"class.spvtools::opt::Module"*), void (%"class.spvtools::opt::IrLoader"*, %"class.std::__1::function"*, %"class.spvtools::opt::Module"*)* @_ZN8spvtools3opt8IrLoaderC2ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS6_EEEPNS0_6ModuleE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8IrLoaderC2ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS6_EEEPNS0_6ModuleE(%"class.spvtools::opt::IrLoader"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::Module"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  store %"class.std::__1::function"* %1, %"class.std::__1::function"** %4, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  store %"class.spvtools::opt::Module"* %2, %"class.spvtools::opt::Module"** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 13, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13, i1 false) #9
  %10 = getelementptr inbounds i8, i8* %9, i64 13
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 3
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 10
  %14 = bitcast %"class.std::__1::unique_ptr.25"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 56, i1 false)
  store i8 1, i8* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt8IrLoader14AddInstructionEPK24spv_parsed_instruction_t(%"class.spvtools::opt::IrLoader"*, %struct.spv_parsed_instruction_t*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.25", align 8
  %4 = alloca %"class.std::__1::unique_ptr.37", align 8
  %5 = alloca %"class.std::__1::unique_ptr.37", align 8
  %6 = alloca %"class.std::__1::unique_ptr.18", align 8
  %7 = alloca %"class.std::__1::unique_ptr.18", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.spvtools::opt::Instruction", align 8
  %10 = alloca %struct.spv_position_t, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  %15 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 2
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  store i32 %17, i32* %8, align 4
  switch i16 %16, label %118 [
    i16 317, label %18
    i16 8, label %18
    i16 12, label %48
  ]

18:                                               ; preds = %2, %2
  %19 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  %20 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %20, i64 0, i32 17
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %22, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %22, align 8
  %24 = icmp eq %"class.spvtools::opt::Instruction"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.spvtools::opt::Instruction"* %23 to void (%"class.spvtools::opt::Instruction"*)***
  %27 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %27, i64 1
  %29 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, align 8
  tail call void %29(%"class.spvtools::opt::Instruction"* nonnull %23) #9
  br label %30

30:                                               ; preds = %18, %25
  %31 = bitcast %"class.spvtools::opt::Instruction"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #9
  %32 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %19, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %32, i64 0, i32 2
  %34 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextERK24spv_parsed_instruction_tRKNS0_10DebugScopeE(%"class.spvtools::opt::Instruction"* nonnull %9, %"class.spvtools::opt::IRContext"* %34, %struct.spv_parsed_instruction_t* dereferenceable(40) %1, %"class.spvtools::opt::DebugScope"* dereferenceable(8) %35) #9
  %36 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7, i32 0, i32 1
  %37 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %39 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %38, align 8
  %40 = icmp ult %"class.spvtools::opt::Instruction"* %37, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %30
  call void @_ZN8spvtools3opt11InstructionC1EOS1_(%"class.spvtools::opt::Instruction"* %37, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %9) #9
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 1
  %43 = ptrtoint %"class.spvtools::opt::Instruction"* %42 to i64
  %44 = bitcast %"class.spvtools::opt::Instruction"** %36 to i64*
  store i64 %43, i64* %44, align 8
  br label %47

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7
  call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.11"* %46, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %9) #9
  br label %47

47:                                               ; preds = %41, %45
  call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #9
  br label %1368

48:                                               ; preds = %2
  %49 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = tail call zeroext i1 @_Z21spvExtInstIsDebugInfo19spv_ext_inst_type_t(i32 %50) #9
  br i1 %51, label %52, label %118

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 4
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %49, align 4
  %58 = icmp eq i32 %57, 8
  %59 = icmp eq i32 %56, 23
  br i1 %58, label %60, label %89

60:                                               ; preds = %52
  br i1 %59, label %61, label %81

61:                                               ; preds = %60
  %62 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 1
  %63 = load i16, i16* %62, align 8
  %64 = icmp ugt i16 %63, 6
  br i1 %64, label %65, label %70

65:                                               ; preds = %61
  %66 = getelementptr inbounds i32, i32* %54, i64 6
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = shl nuw i64 %68, 32
  br label %70

70:                                               ; preds = %65, %61
  %71 = phi i64 [ %69, %65 ], [ 0, %61 ]
  %72 = getelementptr inbounds i32, i32* %54, i64 5
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  %75 = bitcast %"class.spvtools::opt::DebugScope"* %74 to i64*
  %76 = zext i32 %73 to i64
  %77 = or i64 %71, %76
  store i64 %77, i64* %75, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  %79 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %78, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %79, i64 0, i32 17
  store i8 1, i8* %80, align 8
  br label %1368

81:                                               ; preds = %60
  %82 = icmp eq i32 %56, 24
  br i1 %82, label %83, label %118

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  %85 = bitcast %"class.spvtools::opt::DebugScope"* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  %87 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %86, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %87, i64 0, i32 17
  store i8 1, i8* %88, align 8
  br label %1368

89:                                               ; preds = %52
  br i1 %59, label %90, label %110

90:                                               ; preds = %89
  %91 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 1
  %92 = load i16, i16* %91, align 8
  %93 = icmp ugt i16 %92, 6
  br i1 %93, label %94, label %99

94:                                               ; preds = %90
  %95 = getelementptr inbounds i32, i32* %54, i64 6
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = shl nuw i64 %97, 32
  br label %99

99:                                               ; preds = %94, %90
  %100 = phi i64 [ %98, %94 ], [ 0, %90 ]
  %101 = getelementptr inbounds i32, i32* %54, i64 5
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  %104 = bitcast %"class.spvtools::opt::DebugScope"* %103 to i64*
  %105 = zext i32 %102 to i64
  %106 = or i64 %100, %105
  store i64 %106, i64* %104, align 8
  %107 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  %108 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %107, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %108, i64 0, i32 17
  store i8 1, i8* %109, align 8
  br label %1368

110:                                              ; preds = %89
  %111 = icmp eq i32 %56, 24
  br i1 %111, label %112, label %118

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  %114 = bitcast %"class.spvtools::opt::DebugScope"* %113 to i64*
  store i64 0, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  %116 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %115, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %116, i64 0, i32 17
  store i8 1, i8* %117, align 8
  br label %1368

118:                                              ; preds = %2, %81, %110, %48
  %119 = tail call i8* @_Znwm(i64 112) #10
  %120 = bitcast i8* %119 to %"class.spvtools::opt::Instruction"*
  %121 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  %122 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %122, i64 0, i32 2
  %124 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %123, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7
  tail call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextERK24spv_parsed_instruction_tONSt3__16vectorIS1_NS7_9allocatorIS1_EEEE(%"class.spvtools::opt::Instruction"* nonnull %120, %"class.spvtools::opt::IRContext"* %124, %struct.spv_parsed_instruction_t* dereferenceable(40) %1, %"class.std::__1::vector.11"* dereferenceable(24) %125) #9
  %126 = ptrtoint i8* %119 to i64
  %127 = getelementptr inbounds i8, i8* %119, i64 80
  %128 = bitcast i8* %127 to %"class.std::__1::vector.11"*
  %129 = bitcast i8* %127 to %"class.spvtools::opt::Instruction"**
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds i8, i8* %119, i64 88
  %132 = bitcast i8* %131 to %"class.spvtools::opt::Instruction"**
  %133 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %134 = icmp eq %"class.spvtools::opt::Instruction"* %130, %133
  br i1 %134, label %174, label %135

135:                                              ; preds = %118
  %136 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 10
  %137 = load i8, i8* %136, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %160, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %133, i64 -1, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 317
  br i1 %142, label %160, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %133, i64 -1
  %145 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %146 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %145, i64 0, i32 2
  %147 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %146, align 8
  %148 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %144, %"class.spvtools::opt::IRContext"* %147) #9
  %149 = ptrtoint %"class.spvtools::opt::Instruction"* %148 to i64
  %150 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %151, align 8
  %153 = bitcast %"class.std::__1::unique_ptr.18"* %150 to i64*
  store i64 %149, i64* %153, align 8
  %154 = icmp eq %"class.spvtools::opt::Instruction"* %152, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %143
  %156 = bitcast %"class.spvtools::opt::Instruction"* %152 to void (%"class.spvtools::opt::Instruction"*)***
  %157 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %157, i64 1
  %159 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %158, align 8
  tail call void %159(%"class.spvtools::opt::Instruction"* nonnull %152) #9
  br label %160

160:                                              ; preds = %143, %155, %139, %135
  %161 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %125, i64 0, i32 0, i32 0
  %162 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %161, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7, i32 0, i32 1
  %164 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %163, align 8
  %165 = icmp eq %"class.spvtools::opt::Instruction"* %164, %162
  br i1 %165, label %173, label %166

166:                                              ; preds = %160, %166
  %167 = phi %"class.spvtools::opt::Instruction"* [ %168, %166 ], [ %164, %160 ]
  %168 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %167, i64 -1
  %169 = bitcast %"class.spvtools::opt::Instruction"* %168 to void (%"class.spvtools::opt::Instruction"*)***
  %170 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %169, align 8
  %171 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %170, align 8
  tail call void %171(%"class.spvtools::opt::Instruction"* %168) #9
  %172 = icmp eq %"class.spvtools::opt::Instruction"* %168, %162
  br i1 %172, label %173, label %166

173:                                              ; preds = %166, %160
  store %"class.spvtools::opt::Instruction"* %162, %"class.spvtools::opt::Instruction"** %163, align 8
  br label %208

174:                                              ; preds = %118
  %175 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %176 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %175, align 8
  %177 = icmp eq %"class.spvtools::opt::Instruction"* %176, null
  br i1 %177, label %208, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %176, i64 0, i32 8
  %181 = bitcast %"class.spvtools::opt::DebugScope"* %179 to i64*
  %182 = bitcast %"class.spvtools::opt::DebugScope"* %180 to i64*
  %183 = load i64, i64* %181, align 4
  store i64 %183, i64* %182, align 8
  %184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %176, i64 0, i32 7, i32 0, i32 0
  %185 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %184, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %176, i64 0, i32 7, i32 0, i32 1
  %187 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %186, align 8
  %188 = icmp eq %"class.spvtools::opt::Instruction"* %185, %187
  br i1 %188, label %196, label %189

189:                                              ; preds = %178, %189
  %190 = phi %"class.spvtools::opt::Instruction"* [ %194, %189 ], [ %185, %178 ]
  %191 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 0, i32 8
  %192 = bitcast %"class.spvtools::opt::DebugScope"* %191 to i64*
  %193 = load i64, i64* %181, align 4
  store i64 %193, i64* %192, align 8
  %194 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 1
  %195 = icmp eq %"class.spvtools::opt::Instruction"* %194, %187
  br i1 %195, label %196, label %189

196:                                              ; preds = %189, %178
  %197 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %175, align 8
  %198 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %199 = getelementptr inbounds i8, i8* %119, i64 96
  %200 = bitcast i8* %199 to %"class.spvtools::opt::Instruction"**
  %201 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %200, align 8
  %202 = icmp eq %"class.spvtools::opt::Instruction"* %198, %201
  br i1 %202, label %207, label %203

203:                                              ; preds = %196
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %198, %"class.spvtools::opt::Instruction"* dereferenceable(112) %197) #9
  %204 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 1
  %205 = ptrtoint %"class.spvtools::opt::Instruction"* %204 to i64
  %206 = bitcast i8* %131 to i64*
  store i64 %205, i64* %206, align 8
  br label %208

207:                                              ; preds = %196
  tail call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.11"* %128, %"class.spvtools::opt::Instruction"* dereferenceable(112) %197) #9
  br label %208

208:                                              ; preds = %174, %207, %203, %173
  %209 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 2
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  br label %219

217:                                              ; preds = %208
  %218 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  br label %219

219:                                              ; preds = %214, %217
  %220 = phi i8* [ %216, %214 ], [ %218, %217 ]
  %221 = bitcast %struct.spv_position_t* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #9
  %222 = getelementptr inbounds %struct.spv_position_t, %struct.spv_position_t* %10, i64 0, i32 0
  %223 = getelementptr inbounds %struct.spv_position_t, %struct.spv_position_t* %10, i64 0, i32 1
  %224 = load i32, i32* %11, align 8
  %225 = zext i32 %224 to i64
  store i64 %225, i64* %222, align 8
  %226 = bitcast i64* %223 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 16, i1 false)
  switch i16 %16, label %390 [
    i16 54, label %227
    i16 56, label %264
    i16 248, label %337
  ]

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 5
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %228, i64 0, i32 0, i32 0, i32 0
  %230 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %229, align 8
  %231 = icmp eq %"class.spvtools::opt::Function"* %230, null
  br i1 %231, label %244, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %234 = load %"class.std::__1::function"*, %"class.std::__1::function"** %233, align 8
  %235 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %234, i64 0, i32 0, i32 2
  %236 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %235, align 8
  %237 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %236, i64 0, i32 2
  %238 = load i8, i8* %237, align 8, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %1363

240:                                              ; preds = %232
  %241 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %234, i64 0, i32 0, i32 1, i32 0
  %242 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %241, align 8
  %243 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %234, i64 0, i32 0, i32 0
  call void %242(%"union.std::__1::__function::__policy_storage"* %243, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %1363

244:                                              ; preds = %227
  %245 = tail call i8* @_Znwm(i64 208) #10
  %246 = bitcast i8* %245 to i64*
  store i64 %126, i64* %246, align 8
  %247 = getelementptr inbounds i8, i8* %245, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 24, i1 false) #9
  %248 = getelementptr inbounds i8, i8* %245, i64 32
  %249 = bitcast i8* %248 to i32 (...)***
  %250 = getelementptr inbounds i8, i8* %245, i64 40
  %251 = bitcast i8* %250 to i32 (...)***
  %252 = getelementptr inbounds i8, i8* %245, i64 48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %251, align 8
  %253 = getelementptr inbounds i8, i8* %245, i64 72
  %254 = getelementptr inbounds i8, i8* %245, i64 88
  %255 = bitcast i8* %254 to i32*
  store i32 0, i32* %255, align 8
  %256 = getelementptr inbounds i8, i8* %245, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 14, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 56, i1 false) #9
  %257 = bitcast i8* %252 to i8**
  store i8* %250, i8** %257, align 8
  %258 = getelementptr inbounds i8, i8* %245, i64 56
  %259 = bitcast i8* %258 to i8**
  store i8* %250, i8** %259, align 8
  %260 = getelementptr inbounds i8, i8* %245, i64 64
  store i8 1, i8* %260, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %249, align 8
  %261 = getelementptr inbounds i8, i8* %245, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %261, i8 0, i64 56, i1 false) #9
  %262 = ptrtoint i8* %245 to i64
  %263 = bitcast %"class.std::__1::unique_ptr.25"* %228 to i64*
  store i64 %262, i64* %263, align 8
  br label %1362

264:                                              ; preds = %219
  %265 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 5
  %266 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %265, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %266, align 8
  %268 = icmp eq %"class.spvtools::opt::Function"* %267, null
  br i1 %268, label %269, label %281

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %271 = load %"class.std::__1::function"*, %"class.std::__1::function"** %270, align 8
  %272 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %271, i64 0, i32 0, i32 2
  %273 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %272, align 8
  %274 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %273, i64 0, i32 2
  %275 = load i8, i8* %274, align 8, !range !2
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %277, label %1363

277:                                              ; preds = %269
  %278 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %271, i64 0, i32 0, i32 1, i32 0
  %279 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %278, align 8
  %280 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %271, i64 0, i32 0, i32 0
  call void %279(%"union.std::__1::__function::__policy_storage"* %280, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %1363

281:                                              ; preds = %264
  %282 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %283 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %282, align 8
  %284 = icmp eq %"class.spvtools::opt::BasicBlock"* %283, null
  br i1 %284, label %297, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %287 = load %"class.std::__1::function"*, %"class.std::__1::function"** %286, align 8
  %288 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %287, i64 0, i32 0, i32 2
  %289 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %288, align 8
  %290 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %289, i64 0, i32 2
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %293, label %1363

293:                                              ; preds = %285
  %294 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %287, i64 0, i32 0, i32 1, i32 0
  %295 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %294, align 8
  %296 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %287, i64 0, i32 0, i32 0
  call void %295(%"union.std::__1::__function::__policy_storage"* %296, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %1363

297:                                              ; preds = %281
  %298 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %267, i64 0, i32 4
  %299 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %298, i64 0, i32 0, i32 0, i32 0
  %300 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %299, align 8
  %301 = bitcast %"class.std::__1::unique_ptr.18"* %298 to i64*
  store i64 %126, i64* %301, align 8
  %302 = icmp eq %"class.spvtools::opt::Instruction"* %300, null
  br i1 %302, label %308, label %303

303:                                              ; preds = %297
  %304 = bitcast %"class.spvtools::opt::Instruction"* %300 to void (%"class.spvtools::opt::Instruction"*)***
  %305 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %304, align 8
  %306 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %305, i64 1
  %307 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %306, align 8
  tail call void %307(%"class.spvtools::opt::Instruction"* nonnull %300) #9
  br label %308

308:                                              ; preds = %297, %303
  %309 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.25"* %265 to i64*
  %311 = load i64, i64* %310, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %266, align 8
  %312 = inttoptr i64 %311 to %"class.spvtools::opt::Function"*
  %313 = bitcast %"class.std::__1::unique_ptr.25"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313)
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Function"* %312, %"class.spvtools::opt::Function"** %314, align 8
  %315 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %309, i64 0, i32 15, i32 0, i32 1
  %316 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %315, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %309, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %318 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %317, align 8
  %319 = icmp ult %"class.std::__1::unique_ptr.25"* %316, %318
  br i1 %319, label %320, label %325

320:                                              ; preds = %308
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %314, align 8
  %321 = bitcast %"class.std::__1::unique_ptr.25"* %316 to i64*
  store i64 %311, i64* %321, align 8
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %316, i64 1
  %323 = ptrtoint %"class.std::__1::unique_ptr.25"* %322 to i64
  %324 = bitcast %"class.std::__1::unique_ptr.25"** %315 to i64*
  store i64 %323, i64* %324, align 8
  br label %327

325:                                              ; preds = %308
  %326 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %309, i64 0, i32 15
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8FunctionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.23"* %326, %"class.std::__1::unique_ptr.25"* nonnull dereferenceable(8) %3) #9
  br label %327

327:                                              ; preds = %325, %320
  %328 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %314, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %314, align 8
  %329 = icmp eq %"class.spvtools::opt::Function"* %328, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %327
  call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %328) #9
  %331 = bitcast %"class.spvtools::opt::Function"* %328 to i8*
  call void @_ZdlPv(i8* %331) #10
  br label %332

332:                                              ; preds = %327, %330
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313)
  %333 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %266, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %266, align 8
  %334 = icmp eq %"class.spvtools::opt::Function"* %333, null
  br i1 %334, label %1362, label %335

335:                                              ; preds = %332
  call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %333) #9
  %336 = bitcast %"class.spvtools::opt::Function"* %333 to i8*
  call void @_ZdlPv(i8* %336) #10
  br label %1362

337:                                              ; preds = %219
  %338 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %339 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %338, align 8
  %340 = icmp eq %"class.spvtools::opt::Function"* %339, null
  br i1 %340, label %341, label %353

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %343 = load %"class.std::__1::function"*, %"class.std::__1::function"** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %343, i64 0, i32 0, i32 2
  %345 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %344, align 8
  %346 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %345, i64 0, i32 2
  %347 = load i8, i8* %346, align 8, !range !2
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %349, label %1363

349:                                              ; preds = %341
  %350 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %343, i64 0, i32 0, i32 1, i32 0
  %351 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %343, i64 0, i32 0, i32 0
  call void %351(%"union.std::__1::__function::__policy_storage"* %352, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %1363

353:                                              ; preds = %337
  %354 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6
  %355 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %354, i64 0, i32 0, i32 0, i32 0
  %356 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %355, align 8
  %357 = icmp eq %"class.spvtools::opt::BasicBlock"* %356, null
  br i1 %357, label %370, label %358

358:                                              ; preds = %353
  %359 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %360 = load %"class.std::__1::function"*, %"class.std::__1::function"** %359, align 8
  %361 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %360, i64 0, i32 0, i32 2
  %362 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %361, align 8
  %363 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %362, i64 0, i32 2
  %364 = load i8, i8* %363, align 8, !range !2
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %366, label %1363

366:                                              ; preds = %358
  %367 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %360, i64 0, i32 0, i32 1, i32 0
  %368 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %367, align 8
  %369 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %360, i64 0, i32 0, i32 0
  call void %368(%"union.std::__1::__function::__policy_storage"* %369, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %1363

370:                                              ; preds = %353
  %371 = tail call i8* @_Znwm(i64 136) #10
  %372 = bitcast i8* %371 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %372, align 8
  %373 = getelementptr inbounds i8, i8* %371, i64 8
  %374 = bitcast i8* %373 to i64*
  store i64 %126, i64* %374, align 8
  %375 = getelementptr inbounds i8, i8* %371, i64 16
  %376 = bitcast i8* %375 to i32 (...)***
  %377 = getelementptr inbounds i8, i8* %371, i64 24
  %378 = bitcast i8* %377 to i32 (...)***
  %379 = getelementptr inbounds i8, i8* %371, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %378, align 8
  %380 = getelementptr inbounds i8, i8* %371, i64 56
  %381 = getelementptr inbounds i8, i8* %371, i64 72
  %382 = bitcast i8* %381 to i32*
  store i32 0, i32* %382, align 8
  %383 = getelementptr inbounds i8, i8* %371, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %380, i8 0, i64 14, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %383, i8 0, i64 56, i1 false) #9
  %384 = bitcast i8* %379 to i8**
  store i8* %377, i8** %384, align 8
  %385 = getelementptr inbounds i8, i8* %371, i64 40
  %386 = bitcast i8* %385 to i8**
  store i8* %377, i8** %386, align 8
  %387 = getelementptr inbounds i8, i8* %371, i64 48
  store i8 1, i8* %387, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %376, align 8
  %388 = ptrtoint i8* %371 to i64
  %389 = bitcast %"class.std::__1::unique_ptr.37"* %354 to i64*
  store i64 %388, i64* %389, align 8
  br label %1362

390:                                              ; preds = %219
  %391 = tail call zeroext i1 @_Z26spvOpcodeIsBlockTerminator6SpvOp_(i32 %17) #9
  %392 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %393 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %392, align 8
  %394 = icmp eq %"class.spvtools::opt::Function"* %393, null
  br i1 %391, label %395, label %534

395:                                              ; preds = %390
  br i1 %394, label %396, label %408

396:                                              ; preds = %395
  %397 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %398 = load %"class.std::__1::function"*, %"class.std::__1::function"** %397, align 8
  %399 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %398, i64 0, i32 0, i32 2
  %400 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %399, align 8
  %401 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %400, i64 0, i32 2
  %402 = load i8, i8* %401, align 8, !range !2
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %404, label %1363

404:                                              ; preds = %396
  %405 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %398, i64 0, i32 0, i32 1, i32 0
  %406 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %405, align 8
  %407 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %398, i64 0, i32 0, i32 0
  call void %406(%"union.std::__1::__function::__policy_storage"* %407, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #9
  br label %1363

408:                                              ; preds = %395
  %409 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6
  %410 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %409, i64 0, i32 0, i32 0, i32 0
  %411 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %410, align 8
  %412 = icmp eq %"class.spvtools::opt::BasicBlock"* %411, null
  br i1 %412, label %413, label %425

413:                                              ; preds = %408
  %414 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %415 = load %"class.std::__1::function"*, %"class.std::__1::function"** %414, align 8
  %416 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %415, i64 0, i32 0, i32 2
  %417 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %416, align 8
  %418 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %417, i64 0, i32 2
  %419 = load i8, i8* %418, align 8, !range !2
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %421, label %1363

421:                                              ; preds = %413
  %422 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %415, i64 0, i32 0, i32 1, i32 0
  %423 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %422, align 8
  %424 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %415, i64 0, i32 0, i32 0
  call void %423(%"union.std::__1::__function::__policy_storage"* %424, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0)) #9
  br label %1363

425:                                              ; preds = %408
  %426 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  %427 = getelementptr inbounds %"class.spvtools::opt::DebugScope", %"class.spvtools::opt::DebugScope"* %426, i64 0, i32 0
  %428 = load i32, i32* %427, align 4
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %452, label %430

430:                                              ; preds = %425
  %431 = getelementptr inbounds i8, i8* %119, i64 104
  %432 = bitcast %"class.spvtools::opt::DebugScope"* %426 to i64*
  %433 = bitcast i8* %431 to i64*
  %434 = load i64, i64* %432, align 4
  store i64 %434, i64* %433, align 8
  %435 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %436 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %437 = icmp eq %"class.spvtools::opt::Instruction"* %435, %436
  br i1 %437, label %452, label %438

438:                                              ; preds = %430
  %439 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %435, i64 0, i32 8
  %440 = bitcast %"class.spvtools::opt::DebugScope"* %439 to i64*
  store i64 %434, i64* %440, align 8
  %441 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %435, i64 1
  %442 = icmp eq %"class.spvtools::opt::Instruction"* %441, %436
  br i1 %442, label %450, label %443

443:                                              ; preds = %438, %443
  %444 = phi %"class.spvtools::opt::Instruction"* [ %448, %443 ], [ %441, %438 ]
  %445 = load i64, i64* %432, align 4
  %446 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %444, i64 0, i32 8
  %447 = bitcast %"class.spvtools::opt::DebugScope"* %446 to i64*
  store i64 %445, i64* %447, align 8
  %448 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %444, i64 1
  %449 = icmp eq %"class.spvtools::opt::Instruction"* %448, %436
  br i1 %449, label %450, label %443

450:                                              ; preds = %443, %438
  %451 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %410, align 8
  br label %452

452:                                              ; preds = %450, %430, %425
  %453 = phi %"class.spvtools::opt::BasicBlock"* [ %451, %450 ], [ %411, %430 ], [ %411, %425 ]
  %454 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %453, i64 0, i32 2, i32 0, i32 1
  %455 = getelementptr inbounds i8, i8* %119, i64 8
  %456 = bitcast i8* %455 to %"class.spvtools::opt::Instruction"**
  %457 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %456, align 8
  %458 = icmp eq %"class.spvtools::opt::Instruction"* %457, null
  br i1 %458, label %471, label %459

459:                                              ; preds = %452
  %460 = getelementptr inbounds i8, i8* %119, i64 16
  %461 = bitcast i8* %460 to i64*
  %462 = load i64, i64* %461, align 8
  %463 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %457, i64 0, i32 0, i32 2
  %464 = bitcast %"class.spvtools::opt::Instruction"** %463 to i64*
  store i64 %462, i64* %464, align 8
  %465 = bitcast i8* %455 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast i8* %460 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %468 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %467, align 8
  %469 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %468, i64 0, i32 1
  %470 = bitcast %"class.spvtools::opt::Instruction"** %469 to i64*
  store i64 %466, i64* %470, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %455, i8 0, i64 16, i1 false) #9
  br label %471

471:                                              ; preds = %452, %459
  store %"class.spvtools::opt::Instruction"* %454, %"class.spvtools::opt::Instruction"** %456, align 8
  %472 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %453, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %473 = bitcast %"class.spvtools::opt::Instruction"** %472 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = getelementptr inbounds i8, i8* %119, i64 16
  %476 = bitcast i8* %475 to i64*
  store i64 %474, i64* %476, align 8
  %477 = bitcast %"class.spvtools::opt::Instruction"** %472 to i8**
  store i8* %119, i8** %477, align 8
  %478 = bitcast i8* %475 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %479 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %478, align 8
  %480 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %479, i64 0, i32 1
  %481 = bitcast %"class.spvtools::opt::Instruction"** %480 to i8**
  store i8* %119, i8** %481, align 8
  %482 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %392, align 8
  %483 = bitcast %"class.std::__1::unique_ptr.37"* %409 to i64*
  %484 = load i64, i64* %483, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %410, align 8
  %485 = inttoptr i64 %484 to %"class.spvtools::opt::BasicBlock"*
  %486 = bitcast %"class.std::__1::unique_ptr.37"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %486)
  %487 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %487, align 8
  %488 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %482, i64 0, i32 3
  %489 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %482, i64 0, i32 3, i32 0, i32 1
  %490 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %489, align 8
  %491 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %485, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %482, %"class.spvtools::opt::Function"** %491, align 8
  %492 = bitcast %"class.std::__1::unique_ptr.37"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %492) #9
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %4, i64 0, i32 0, i32 0, i32 0
  %494 = bitcast %"class.std::__1::unique_ptr.37"* %4 to i64*
  store i64 %484, i64* %494, align 8
  %495 = call %"class.std::__1::unique_ptr.37"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.35"* %488, %"class.std::__1::unique_ptr.37"* %490, %"class.std::__1::unique_ptr.37"* nonnull dereferenceable(8) %4) #9
  %496 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %493, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %493, align 8
  %497 = icmp eq %"class.spvtools::opt::BasicBlock"* %496, null
  br i1 %497, label %498, label %499

498:                                              ; preds = %471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %492) #9
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %487, align 8
  br label %505

499:                                              ; preds = %471
  %500 = bitcast %"class.std::__1::unique_ptr.37"* %4 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* nonnull %500, %"class.spvtools::opt::BasicBlock"* nonnull %496) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %492) #9
  %501 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %487, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %487, align 8
  %502 = icmp eq %"class.spvtools::opt::BasicBlock"* %501, null
  br i1 %502, label %505, label %503

503:                                              ; preds = %499
  %504 = bitcast %"class.std::__1::unique_ptr.37"* %5 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* nonnull %504, %"class.spvtools::opt::BasicBlock"* nonnull %501) #9
  br label %505

505:                                              ; preds = %498, %499, %503
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486)
  %506 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %410, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %410, align 8
  %507 = icmp eq %"class.spvtools::opt::BasicBlock"* %506, null
  br i1 %507, label %510, label %508

508:                                              ; preds = %505
  %509 = bitcast %"class.std::__1::unique_ptr.37"* %409 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* %509, %"class.spvtools::opt::BasicBlock"* nonnull %506) #9
  br label %510

510:                                              ; preds = %505, %508
  %511 = bitcast %"class.spvtools::opt::DebugScope"* %426 to i64*
  store i64 0, i64* %511, align 8
  %512 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %513 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %512, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %512, align 8
  %514 = icmp eq %"class.spvtools::opt::Instruction"* %513, null
  br i1 %514, label %520, label %515

515:                                              ; preds = %510
  %516 = bitcast %"class.spvtools::opt::Instruction"* %513 to void (%"class.spvtools::opt::Instruction"*)***
  %517 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %516, align 8
  %518 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %517, i64 1
  %519 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %518, align 8
  call void %519(%"class.spvtools::opt::Instruction"* nonnull %513) #9
  br label %520

520:                                              ; preds = %510, %515
  %521 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %125, i64 0, i32 0, i32 0
  %522 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %521, align 8
  %523 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7, i32 0, i32 1
  %524 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %523, align 8
  %525 = icmp eq %"class.spvtools::opt::Instruction"* %524, %522
  br i1 %525, label %533, label %526

526:                                              ; preds = %520, %526
  %527 = phi %"class.spvtools::opt::Instruction"* [ %528, %526 ], [ %524, %520 ]
  %528 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %527, i64 -1
  %529 = bitcast %"class.spvtools::opt::Instruction"* %528 to void (%"class.spvtools::opt::Instruction"*)***
  %530 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %529, align 8
  %531 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %530, align 8
  call void %531(%"class.spvtools::opt::Instruction"* %528) #9
  %532 = icmp eq %"class.spvtools::opt::Instruction"* %528, %522
  br i1 %532, label %533, label %526

533:                                              ; preds = %526, %520
  store %"class.spvtools::opt::Instruction"* %522, %"class.spvtools::opt::Instruction"** %523, align 8
  br label %1362

534:                                              ; preds = %390
  br i1 %394, label %535, label %994

535:                                              ; preds = %534
  switch i16 %16, label %728 [
    i16 17, label %536
    i16 10, label %566
    i16 11, label %596
    i16 14, label %626
    i16 15, label %638
    i16 16, label %668
    i16 7, label %698
    i16 4, label %698
    i16 3, label %698
    i16 2, label %698
  ]

536:                                              ; preds = %535
  %537 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %538 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %537, i64 0, i32 3, i32 0, i32 1
  %539 = getelementptr inbounds i8, i8* %119, i64 8
  %540 = bitcast i8* %539 to %"class.spvtools::opt::Instruction"**
  %541 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %540, align 8
  %542 = icmp eq %"class.spvtools::opt::Instruction"* %541, null
  br i1 %542, label %555, label %543

543:                                              ; preds = %536
  %544 = getelementptr inbounds i8, i8* %119, i64 16
  %545 = bitcast i8* %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %541, i64 0, i32 0, i32 2
  %548 = bitcast %"class.spvtools::opt::Instruction"** %547 to i64*
  store i64 %546, i64* %548, align 8
  %549 = bitcast i8* %539 to i64*
  %550 = load i64, i64* %549, align 8
  %551 = bitcast i8* %544 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %552 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %551, align 8
  %553 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %552, i64 0, i32 1
  %554 = bitcast %"class.spvtools::opt::Instruction"** %553 to i64*
  store i64 %550, i64* %554, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %539, i8 0, i64 16, i1 false) #9
  br label %555

555:                                              ; preds = %536, %543
  store %"class.spvtools::opt::Instruction"* %538, %"class.spvtools::opt::Instruction"** %540, align 8
  %556 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %537, i64 0, i32 3, i32 0, i32 1, i32 0, i32 2
  %557 = bitcast %"class.spvtools::opt::Instruction"** %556 to i64*
  %558 = load i64, i64* %557, align 8
  %559 = getelementptr inbounds i8, i8* %119, i64 16
  %560 = bitcast i8* %559 to i64*
  store i64 %558, i64* %560, align 8
  %561 = bitcast %"class.spvtools::opt::Instruction"** %556 to i8**
  store i8* %119, i8** %561, align 8
  %562 = bitcast i8* %559 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %563 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %562, align 8
  %564 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %563, i64 0, i32 1
  %565 = bitcast %"class.spvtools::opt::Instruction"** %564 to i8**
  store i8* %119, i8** %565, align 8
  br label %1362

566:                                              ; preds = %535
  %567 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %568 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %567, i64 0, i32 4, i32 0, i32 1
  %569 = getelementptr inbounds i8, i8* %119, i64 8
  %570 = bitcast i8* %569 to %"class.spvtools::opt::Instruction"**
  %571 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %570, align 8
  %572 = icmp eq %"class.spvtools::opt::Instruction"* %571, null
  br i1 %572, label %585, label %573

573:                                              ; preds = %566
  %574 = getelementptr inbounds i8, i8* %119, i64 16
  %575 = bitcast i8* %574 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %571, i64 0, i32 0, i32 2
  %578 = bitcast %"class.spvtools::opt::Instruction"** %577 to i64*
  store i64 %576, i64* %578, align 8
  %579 = bitcast i8* %569 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = bitcast i8* %574 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %582 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %581, align 8
  %583 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %582, i64 0, i32 1
  %584 = bitcast %"class.spvtools::opt::Instruction"** %583 to i64*
  store i64 %580, i64* %584, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %569, i8 0, i64 16, i1 false) #9
  br label %585

585:                                              ; preds = %566, %573
  store %"class.spvtools::opt::Instruction"* %568, %"class.spvtools::opt::Instruction"** %570, align 8
  %586 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %567, i64 0, i32 4, i32 0, i32 1, i32 0, i32 2
  %587 = bitcast %"class.spvtools::opt::Instruction"** %586 to i64*
  %588 = load i64, i64* %587, align 8
  %589 = getelementptr inbounds i8, i8* %119, i64 16
  %590 = bitcast i8* %589 to i64*
  store i64 %588, i64* %590, align 8
  %591 = bitcast %"class.spvtools::opt::Instruction"** %586 to i8**
  store i8* %119, i8** %591, align 8
  %592 = bitcast i8* %589 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %593 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %592, align 8
  %594 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %593, i64 0, i32 1
  %595 = bitcast %"class.spvtools::opt::Instruction"** %594 to i8**
  store i8* %119, i8** %595, align 8
  br label %1362

596:                                              ; preds = %535
  %597 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %598 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %597, i64 0, i32 5, i32 0, i32 1
  %599 = getelementptr inbounds i8, i8* %119, i64 8
  %600 = bitcast i8* %599 to %"class.spvtools::opt::Instruction"**
  %601 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %600, align 8
  %602 = icmp eq %"class.spvtools::opt::Instruction"* %601, null
  br i1 %602, label %615, label %603

603:                                              ; preds = %596
  %604 = getelementptr inbounds i8, i8* %119, i64 16
  %605 = bitcast i8* %604 to i64*
  %606 = load i64, i64* %605, align 8
  %607 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %601, i64 0, i32 0, i32 2
  %608 = bitcast %"class.spvtools::opt::Instruction"** %607 to i64*
  store i64 %606, i64* %608, align 8
  %609 = bitcast i8* %599 to i64*
  %610 = load i64, i64* %609, align 8
  %611 = bitcast i8* %604 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %612 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %611, align 8
  %613 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %612, i64 0, i32 1
  %614 = bitcast %"class.spvtools::opt::Instruction"** %613 to i64*
  store i64 %610, i64* %614, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %599, i8 0, i64 16, i1 false) #9
  br label %615

615:                                              ; preds = %596, %603
  store %"class.spvtools::opt::Instruction"* %598, %"class.spvtools::opt::Instruction"** %600, align 8
  %616 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %597, i64 0, i32 5, i32 0, i32 1, i32 0, i32 2
  %617 = bitcast %"class.spvtools::opt::Instruction"** %616 to i64*
  %618 = load i64, i64* %617, align 8
  %619 = getelementptr inbounds i8, i8* %119, i64 16
  %620 = bitcast i8* %619 to i64*
  store i64 %618, i64* %620, align 8
  %621 = bitcast %"class.spvtools::opt::Instruction"** %616 to i8**
  store i8* %119, i8** %621, align 8
  %622 = bitcast i8* %619 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %623 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %622, align 8
  %624 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %623, i64 0, i32 1
  %625 = bitcast %"class.spvtools::opt::Instruction"** %624 to i8**
  store i8* %119, i8** %625, align 8
  br label %1362

626:                                              ; preds = %535
  %627 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %628 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %627, i64 0, i32 6
  %629 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %628, i64 0, i32 0, i32 0, i32 0
  %630 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %629, align 8
  %631 = bitcast %"class.std::__1::unique_ptr.18"* %628 to i64*
  store i64 %126, i64* %631, align 8
  %632 = icmp eq %"class.spvtools::opt::Instruction"* %630, null
  br i1 %632, label %1362, label %633

633:                                              ; preds = %626
  %634 = bitcast %"class.spvtools::opt::Instruction"* %630 to void (%"class.spvtools::opt::Instruction"*)***
  %635 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %634, align 8
  %636 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %635, i64 1
  %637 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %636, align 8
  tail call void %637(%"class.spvtools::opt::Instruction"* nonnull %630) #9
  br label %1362

638:                                              ; preds = %535
  %639 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %640 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %639, i64 0, i32 7, i32 0, i32 1
  %641 = getelementptr inbounds i8, i8* %119, i64 8
  %642 = bitcast i8* %641 to %"class.spvtools::opt::Instruction"**
  %643 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %642, align 8
  %644 = icmp eq %"class.spvtools::opt::Instruction"* %643, null
  br i1 %644, label %657, label %645

645:                                              ; preds = %638
  %646 = getelementptr inbounds i8, i8* %119, i64 16
  %647 = bitcast i8* %646 to i64*
  %648 = load i64, i64* %647, align 8
  %649 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %643, i64 0, i32 0, i32 2
  %650 = bitcast %"class.spvtools::opt::Instruction"** %649 to i64*
  store i64 %648, i64* %650, align 8
  %651 = bitcast i8* %641 to i64*
  %652 = load i64, i64* %651, align 8
  %653 = bitcast i8* %646 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %654 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %653, align 8
  %655 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %654, i64 0, i32 1
  %656 = bitcast %"class.spvtools::opt::Instruction"** %655 to i64*
  store i64 %652, i64* %656, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %641, i8 0, i64 16, i1 false) #9
  br label %657

657:                                              ; preds = %638, %645
  store %"class.spvtools::opt::Instruction"* %640, %"class.spvtools::opt::Instruction"** %642, align 8
  %658 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %639, i64 0, i32 7, i32 0, i32 1, i32 0, i32 2
  %659 = bitcast %"class.spvtools::opt::Instruction"** %658 to i64*
  %660 = load i64, i64* %659, align 8
  %661 = getelementptr inbounds i8, i8* %119, i64 16
  %662 = bitcast i8* %661 to i64*
  store i64 %660, i64* %662, align 8
  %663 = bitcast %"class.spvtools::opt::Instruction"** %658 to i8**
  store i8* %119, i8** %663, align 8
  %664 = bitcast i8* %661 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %665 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %664, align 8
  %666 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %665, i64 0, i32 1
  %667 = bitcast %"class.spvtools::opt::Instruction"** %666 to i8**
  store i8* %119, i8** %667, align 8
  br label %1362

668:                                              ; preds = %535
  %669 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %670 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %669, i64 0, i32 8, i32 0, i32 1
  %671 = getelementptr inbounds i8, i8* %119, i64 8
  %672 = bitcast i8* %671 to %"class.spvtools::opt::Instruction"**
  %673 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %672, align 8
  %674 = icmp eq %"class.spvtools::opt::Instruction"* %673, null
  br i1 %674, label %687, label %675

675:                                              ; preds = %668
  %676 = getelementptr inbounds i8, i8* %119, i64 16
  %677 = bitcast i8* %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %673, i64 0, i32 0, i32 2
  %680 = bitcast %"class.spvtools::opt::Instruction"** %679 to i64*
  store i64 %678, i64* %680, align 8
  %681 = bitcast i8* %671 to i64*
  %682 = load i64, i64* %681, align 8
  %683 = bitcast i8* %676 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %684 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %683, align 8
  %685 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %684, i64 0, i32 1
  %686 = bitcast %"class.spvtools::opt::Instruction"** %685 to i64*
  store i64 %682, i64* %686, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %671, i8 0, i64 16, i1 false) #9
  br label %687

687:                                              ; preds = %668, %675
  store %"class.spvtools::opt::Instruction"* %670, %"class.spvtools::opt::Instruction"** %672, align 8
  %688 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %669, i64 0, i32 8, i32 0, i32 1, i32 0, i32 2
  %689 = bitcast %"class.spvtools::opt::Instruction"** %688 to i64*
  %690 = load i64, i64* %689, align 8
  %691 = getelementptr inbounds i8, i8* %119, i64 16
  %692 = bitcast i8* %691 to i64*
  store i64 %690, i64* %692, align 8
  %693 = bitcast %"class.spvtools::opt::Instruction"** %688 to i8**
  store i8* %119, i8** %693, align 8
  %694 = bitcast i8* %691 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %695 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %694, align 8
  %696 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %695, i64 0, i32 1
  %697 = bitcast %"class.spvtools::opt::Instruction"** %696 to i8**
  store i8* %119, i8** %697, align 8
  br label %1362

698:                                              ; preds = %535, %535, %535, %535
  %699 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %700 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %699, i64 0, i32 9, i32 0, i32 1
  %701 = getelementptr inbounds i8, i8* %119, i64 8
  %702 = bitcast i8* %701 to %"class.spvtools::opt::Instruction"**
  %703 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %702, align 8
  %704 = icmp eq %"class.spvtools::opt::Instruction"* %703, null
  br i1 %704, label %717, label %705

705:                                              ; preds = %698
  %706 = getelementptr inbounds i8, i8* %119, i64 16
  %707 = bitcast i8* %706 to i64*
  %708 = load i64, i64* %707, align 8
  %709 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %703, i64 0, i32 0, i32 2
  %710 = bitcast %"class.spvtools::opt::Instruction"** %709 to i64*
  store i64 %708, i64* %710, align 8
  %711 = bitcast i8* %701 to i64*
  %712 = load i64, i64* %711, align 8
  %713 = bitcast i8* %706 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %714 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %713, align 8
  %715 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %714, i64 0, i32 1
  %716 = bitcast %"class.spvtools::opt::Instruction"** %715 to i64*
  store i64 %712, i64* %716, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %701, i8 0, i64 16, i1 false) #9
  br label %717

717:                                              ; preds = %698, %705
  store %"class.spvtools::opt::Instruction"* %700, %"class.spvtools::opt::Instruction"** %702, align 8
  %718 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %699, i64 0, i32 9, i32 0, i32 1, i32 0, i32 2
  %719 = bitcast %"class.spvtools::opt::Instruction"** %718 to i64*
  %720 = load i64, i64* %719, align 8
  %721 = getelementptr inbounds i8, i8* %119, i64 16
  %722 = bitcast i8* %721 to i64*
  store i64 %720, i64* %722, align 8
  %723 = bitcast %"class.spvtools::opt::Instruction"** %718 to i8**
  store i8* %119, i8** %723, align 8
  %724 = bitcast i8* %721 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %725 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %724, align 8
  %726 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %725, i64 0, i32 1
  %727 = bitcast %"class.spvtools::opt::Instruction"** %726 to i8**
  store i8* %119, i8** %727, align 8
  br label %1362

728:                                              ; preds = %535
  %729 = add nsw i32 %17, -5
  %730 = icmp ult i32 %729, 2
  br i1 %730, label %731, label %761

731:                                              ; preds = %728
  %732 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %733 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %732, i64 0, i32 10, i32 0, i32 1
  %734 = getelementptr inbounds i8, i8* %119, i64 8
  %735 = bitcast i8* %734 to %"class.spvtools::opt::Instruction"**
  %736 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %735, align 8
  %737 = icmp eq %"class.spvtools::opt::Instruction"* %736, null
  br i1 %737, label %750, label %738

738:                                              ; preds = %731
  %739 = getelementptr inbounds i8, i8* %119, i64 16
  %740 = bitcast i8* %739 to i64*
  %741 = load i64, i64* %740, align 8
  %742 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %736, i64 0, i32 0, i32 2
  %743 = bitcast %"class.spvtools::opt::Instruction"** %742 to i64*
  store i64 %741, i64* %743, align 8
  %744 = bitcast i8* %734 to i64*
  %745 = load i64, i64* %744, align 8
  %746 = bitcast i8* %739 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %747 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %746, align 8
  %748 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %747, i64 0, i32 1
  %749 = bitcast %"class.spvtools::opt::Instruction"** %748 to i64*
  store i64 %745, i64* %749, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %734, i8 0, i64 16, i1 false) #9
  br label %750

750:                                              ; preds = %731, %738
  store %"class.spvtools::opt::Instruction"* %733, %"class.spvtools::opt::Instruction"** %735, align 8
  %751 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %732, i64 0, i32 10, i32 0, i32 1, i32 0, i32 2
  %752 = bitcast %"class.spvtools::opt::Instruction"** %751 to i64*
  %753 = load i64, i64* %752, align 8
  %754 = getelementptr inbounds i8, i8* %119, i64 16
  %755 = bitcast i8* %754 to i64*
  store i64 %753, i64* %755, align 8
  %756 = bitcast %"class.spvtools::opt::Instruction"** %751 to i8**
  store i8* %119, i8** %756, align 8
  %757 = bitcast i8* %754 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %758 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %757, align 8
  %759 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %758, i64 0, i32 1
  %760 = bitcast %"class.spvtools::opt::Instruction"** %759 to i8**
  store i8* %119, i8** %760, align 8
  br label %1362

761:                                              ; preds = %728
  switch i16 %16, label %822 [
    i16 330, label %762
    i16 5632, label %792
    i16 332, label %792
    i16 75, label %792
    i16 74, label %792
    i16 73, label %792
    i16 72, label %792
    i16 71, label %792
    i16 5633, label %792
  ]

762:                                              ; preds = %761
  %763 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %764 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %763, i64 0, i32 11, i32 0, i32 1
  %765 = getelementptr inbounds i8, i8* %119, i64 8
  %766 = bitcast i8* %765 to %"class.spvtools::opt::Instruction"**
  %767 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %766, align 8
  %768 = icmp eq %"class.spvtools::opt::Instruction"* %767, null
  br i1 %768, label %781, label %769

769:                                              ; preds = %762
  %770 = getelementptr inbounds i8, i8* %119, i64 16
  %771 = bitcast i8* %770 to i64*
  %772 = load i64, i64* %771, align 8
  %773 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %767, i64 0, i32 0, i32 2
  %774 = bitcast %"class.spvtools::opt::Instruction"** %773 to i64*
  store i64 %772, i64* %774, align 8
  %775 = bitcast i8* %765 to i64*
  %776 = load i64, i64* %775, align 8
  %777 = bitcast i8* %770 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %778 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %777, align 8
  %779 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %778, i64 0, i32 1
  %780 = bitcast %"class.spvtools::opt::Instruction"** %779 to i64*
  store i64 %776, i64* %780, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %765, i8 0, i64 16, i1 false) #9
  br label %781

781:                                              ; preds = %762, %769
  store %"class.spvtools::opt::Instruction"* %764, %"class.spvtools::opt::Instruction"** %766, align 8
  %782 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %763, i64 0, i32 11, i32 0, i32 1, i32 0, i32 2
  %783 = bitcast %"class.spvtools::opt::Instruction"** %782 to i64*
  %784 = load i64, i64* %783, align 8
  %785 = getelementptr inbounds i8, i8* %119, i64 16
  %786 = bitcast i8* %785 to i64*
  store i64 %784, i64* %786, align 8
  %787 = bitcast %"class.spvtools::opt::Instruction"** %782 to i8**
  store i8* %119, i8** %787, align 8
  %788 = bitcast i8* %785 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %789 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %788, align 8
  %790 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %789, i64 0, i32 1
  %791 = bitcast %"class.spvtools::opt::Instruction"** %790 to i8**
  store i8* %119, i8** %791, align 8
  br label %1362

792:                                              ; preds = %761, %761, %761, %761, %761, %761, %761, %761
  %793 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %794 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %793, i64 0, i32 13, i32 0, i32 1
  %795 = getelementptr inbounds i8, i8* %119, i64 8
  %796 = bitcast i8* %795 to %"class.spvtools::opt::Instruction"**
  %797 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %796, align 8
  %798 = icmp eq %"class.spvtools::opt::Instruction"* %797, null
  br i1 %798, label %811, label %799

799:                                              ; preds = %792
  %800 = getelementptr inbounds i8, i8* %119, i64 16
  %801 = bitcast i8* %800 to i64*
  %802 = load i64, i64* %801, align 8
  %803 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %797, i64 0, i32 0, i32 2
  %804 = bitcast %"class.spvtools::opt::Instruction"** %803 to i64*
  store i64 %802, i64* %804, align 8
  %805 = bitcast i8* %795 to i64*
  %806 = load i64, i64* %805, align 8
  %807 = bitcast i8* %800 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %808 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %807, align 8
  %809 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %808, i64 0, i32 1
  %810 = bitcast %"class.spvtools::opt::Instruction"** %809 to i64*
  store i64 %806, i64* %810, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %795, i8 0, i64 16, i1 false) #9
  br label %811

811:                                              ; preds = %792, %799
  store %"class.spvtools::opt::Instruction"* %794, %"class.spvtools::opt::Instruction"** %796, align 8
  %812 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %793, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  %813 = bitcast %"class.spvtools::opt::Instruction"** %812 to i64*
  %814 = load i64, i64* %813, align 8
  %815 = getelementptr inbounds i8, i8* %119, i64 16
  %816 = bitcast i8* %815 to i64*
  store i64 %814, i64* %816, align 8
  %817 = bitcast %"class.spvtools::opt::Instruction"** %812 to i8**
  store i8* %119, i8** %817, align 8
  %818 = bitcast i8* %815 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %819 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %818, align 8
  %820 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %819, i64 0, i32 1
  %821 = bitcast %"class.spvtools::opt::Instruction"** %820 to i8**
  store i8* %119, i8** %821, align 8
  br label %1362

822:                                              ; preds = %761
  %823 = add nsw i32 %17, -19
  %824 = icmp ult i32 %823, 21
  br i1 %824, label %826, label %825

825:                                              ; preds = %822
  switch i16 %16, label %856 [
    i16 5341, label %826
    i16 4472, label %826
    i16 327, label %826
    i16 322, label %826
    i16 5358, label %826
  ]

826:                                              ; preds = %825, %825, %825, %825, %825, %822
  %827 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %828 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %827, i64 0, i32 14, i32 0, i32 1
  %829 = getelementptr inbounds i8, i8* %119, i64 8
  %830 = bitcast i8* %829 to %"class.spvtools::opt::Instruction"**
  %831 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %830, align 8
  %832 = icmp eq %"class.spvtools::opt::Instruction"* %831, null
  br i1 %832, label %845, label %833

833:                                              ; preds = %826
  %834 = getelementptr inbounds i8, i8* %119, i64 16
  %835 = bitcast i8* %834 to i64*
  %836 = load i64, i64* %835, align 8
  %837 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %831, i64 0, i32 0, i32 2
  %838 = bitcast %"class.spvtools::opt::Instruction"** %837 to i64*
  store i64 %836, i64* %838, align 8
  %839 = bitcast i8* %829 to i64*
  %840 = load i64, i64* %839, align 8
  %841 = bitcast i8* %834 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %842 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %841, align 8
  %843 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %842, i64 0, i32 1
  %844 = bitcast %"class.spvtools::opt::Instruction"** %843 to i64*
  store i64 %840, i64* %844, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %829, i8 0, i64 16, i1 false) #9
  br label %845

845:                                              ; preds = %826, %833
  store %"class.spvtools::opt::Instruction"* %828, %"class.spvtools::opt::Instruction"** %830, align 8
  %846 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %827, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %847 = bitcast %"class.spvtools::opt::Instruction"** %846 to i64*
  %848 = load i64, i64* %847, align 8
  %849 = getelementptr inbounds i8, i8* %119, i64 16
  %850 = bitcast i8* %849 to i64*
  store i64 %848, i64* %850, align 8
  %851 = bitcast %"class.spvtools::opt::Instruction"** %846 to i8**
  store i8* %119, i8** %851, align 8
  %852 = bitcast i8* %849 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %853 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %852, align 8
  %854 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %853, i64 0, i32 1
  %855 = bitcast %"class.spvtools::opt::Instruction"** %854 to i8**
  store i8* %119, i8** %855, align 8
  br label %1362

856:                                              ; preds = %825
  %857 = add nsw i32 %17, -41
  %858 = icmp ult i32 %857, 12
  br i1 %858, label %860, label %859

859:                                              ; preds = %856
  switch i16 %16, label %991 [
    i16 59, label %860
    i16 1, label %860
    i16 12, label %890
  ]

860:                                              ; preds = %859, %859, %856
  %861 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %862 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %861, i64 0, i32 14, i32 0, i32 1
  %863 = getelementptr inbounds i8, i8* %119, i64 8
  %864 = bitcast i8* %863 to %"class.spvtools::opt::Instruction"**
  %865 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %864, align 8
  %866 = icmp eq %"class.spvtools::opt::Instruction"* %865, null
  br i1 %866, label %879, label %867

867:                                              ; preds = %860
  %868 = getelementptr inbounds i8, i8* %119, i64 16
  %869 = bitcast i8* %868 to i64*
  %870 = load i64, i64* %869, align 8
  %871 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %865, i64 0, i32 0, i32 2
  %872 = bitcast %"class.spvtools::opt::Instruction"** %871 to i64*
  store i64 %870, i64* %872, align 8
  %873 = bitcast i8* %863 to i64*
  %874 = load i64, i64* %873, align 8
  %875 = bitcast i8* %868 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %876 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %875, align 8
  %877 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %876, i64 0, i32 1
  %878 = bitcast %"class.spvtools::opt::Instruction"** %877 to i64*
  store i64 %874, i64* %878, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %863, i8 0, i64 16, i1 false) #9
  br label %879

879:                                              ; preds = %860, %867
  store %"class.spvtools::opt::Instruction"* %862, %"class.spvtools::opt::Instruction"** %864, align 8
  %880 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %861, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %881 = bitcast %"class.spvtools::opt::Instruction"** %880 to i64*
  %882 = load i64, i64* %881, align 8
  %883 = getelementptr inbounds i8, i8* %119, i64 16
  %884 = bitcast i8* %883 to i64*
  store i64 %882, i64* %884, align 8
  %885 = bitcast %"class.spvtools::opt::Instruction"** %880 to i8**
  store i8* %119, i8** %885, align 8
  %886 = bitcast i8* %883 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %887 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %886, align 8
  %888 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %887, i64 0, i32 1
  %889 = bitcast %"class.spvtools::opt::Instruction"** %888 to i8**
  store i8* %119, i8** %889, align 8
  br label %1362

890:                                              ; preds = %859
  %891 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 3
  %892 = load i32, i32* %891, align 4
  %893 = tail call zeroext i1 @_Z21spvExtInstIsDebugInfo19spv_ext_inst_type_t(i32 %892) #9
  br i1 %893, label %894, label %924

894:                                              ; preds = %890
  %895 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %896 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %895, i64 0, i32 12, i32 0, i32 1
  %897 = getelementptr inbounds i8, i8* %119, i64 8
  %898 = bitcast i8* %897 to %"class.spvtools::opt::Instruction"**
  %899 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %898, align 8
  %900 = icmp eq %"class.spvtools::opt::Instruction"* %899, null
  br i1 %900, label %913, label %901

901:                                              ; preds = %894
  %902 = getelementptr inbounds i8, i8* %119, i64 16
  %903 = bitcast i8* %902 to i64*
  %904 = load i64, i64* %903, align 8
  %905 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %899, i64 0, i32 0, i32 2
  %906 = bitcast %"class.spvtools::opt::Instruction"** %905 to i64*
  store i64 %904, i64* %906, align 8
  %907 = bitcast i8* %897 to i64*
  %908 = load i64, i64* %907, align 8
  %909 = bitcast i8* %902 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %910 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %909, align 8
  %911 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %910, i64 0, i32 1
  %912 = bitcast %"class.spvtools::opt::Instruction"** %911 to i64*
  store i64 %908, i64* %912, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %897, i8 0, i64 16, i1 false) #9
  br label %913

913:                                              ; preds = %894, %901
  store %"class.spvtools::opt::Instruction"* %896, %"class.spvtools::opt::Instruction"** %898, align 8
  %914 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %895, i64 0, i32 12, i32 0, i32 1, i32 0, i32 2
  %915 = bitcast %"class.spvtools::opt::Instruction"** %914 to i64*
  %916 = load i64, i64* %915, align 8
  %917 = getelementptr inbounds i8, i8* %119, i64 16
  %918 = bitcast i8* %917 to i64*
  store i64 %916, i64* %918, align 8
  %919 = bitcast %"class.spvtools::opt::Instruction"** %914 to i8**
  store i8* %119, i8** %919, align 8
  %920 = bitcast i8* %917 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %921 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %920, align 8
  %922 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %921, i64 0, i32 1
  %923 = bitcast %"class.spvtools::opt::Instruction"** %922 to i8**
  store i8* %119, i8** %923, align 8
  br label %1362

924:                                              ; preds = %890
  %925 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 3
  %926 = load i32, i32* %925, align 4
  %927 = tail call zeroext i1 @_Z23spvExtInstIsNonSemantic19spv_ext_inst_type_t(i32 %926) #9
  br i1 %927, label %928, label %991

928:                                              ; preds = %924
  %929 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %121, align 8
  %930 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %929, i64 0, i32 15, i32 0, i32 0
  %931 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %930, align 8
  %932 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %929, i64 0, i32 15, i32 0, i32 1
  %933 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %932, align 8
  %934 = icmp eq %"class.std::__1::unique_ptr.25"* %931, %933
  br i1 %934, label %935, label %964

935:                                              ; preds = %928
  %936 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %929, i64 0, i32 14, i32 0, i32 1
  %937 = getelementptr inbounds i8, i8* %119, i64 8
  %938 = bitcast i8* %937 to %"class.spvtools::opt::Instruction"**
  %939 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %938, align 8
  %940 = icmp eq %"class.spvtools::opt::Instruction"* %939, null
  br i1 %940, label %953, label %941

941:                                              ; preds = %935
  %942 = getelementptr inbounds i8, i8* %119, i64 16
  %943 = bitcast i8* %942 to i64*
  %944 = load i64, i64* %943, align 8
  %945 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %939, i64 0, i32 0, i32 2
  %946 = bitcast %"class.spvtools::opt::Instruction"** %945 to i64*
  store i64 %944, i64* %946, align 8
  %947 = bitcast i8* %937 to i64*
  %948 = load i64, i64* %947, align 8
  %949 = bitcast i8* %942 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %950 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %949, align 8
  %951 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %950, i64 0, i32 1
  %952 = bitcast %"class.spvtools::opt::Instruction"** %951 to i64*
  store i64 %948, i64* %952, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %937, i8 0, i64 16, i1 false) #9
  br label %953

953:                                              ; preds = %935, %941
  store %"class.spvtools::opt::Instruction"* %936, %"class.spvtools::opt::Instruction"** %938, align 8
  %954 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %929, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %955 = bitcast %"class.spvtools::opt::Instruction"** %954 to i64*
  %956 = load i64, i64* %955, align 8
  %957 = getelementptr inbounds i8, i8* %119, i64 16
  %958 = bitcast i8* %957 to i64*
  store i64 %956, i64* %958, align 8
  %959 = bitcast %"class.spvtools::opt::Instruction"** %954 to i8**
  store i8* %119, i8** %959, align 8
  %960 = bitcast i8* %957 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %961 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %960, align 8
  %962 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %961, i64 0, i32 1
  %963 = bitcast %"class.spvtools::opt::Instruction"** %962 to i8**
  store i8* %119, i8** %963, align 8
  br label %1362

964:                                              ; preds = %928
  %965 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %933, i64 -1, i32 0, i32 0, i32 0
  %966 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %965, align 8
  %967 = bitcast %"class.std::__1::unique_ptr.18"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %967)
  %968 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %6, i64 0, i32 0, i32 0, i32 0
  %969 = bitcast %"class.std::__1::unique_ptr.18"* %6 to i8**
  store i8* %119, i8** %969, align 8
  %970 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %966, i64 0, i32 5, i32 0, i32 1
  %971 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %970, align 8
  %972 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %966, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %973 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %972, align 8
  %974 = icmp ult %"class.std::__1::unique_ptr.18"* %971, %973
  br i1 %974, label %975, label %980

975:                                              ; preds = %964
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %968, align 8
  %976 = bitcast %"class.std::__1::unique_ptr.18"* %971 to i64*
  store i64 %126, i64* %976, align 8
  %977 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %971, i64 1
  %978 = ptrtoint %"class.std::__1::unique_ptr.18"* %977 to i64
  %979 = bitcast %"class.std::__1::unique_ptr.18"** %970 to i64*
  store i64 %978, i64* %979, align 8
  br label %982

980:                                              ; preds = %964
  %981 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %966, i64 0, i32 5
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.28"* %981, %"class.std::__1::unique_ptr.18"* nonnull dereferenceable(8) %6) #9
  br label %982

982:                                              ; preds = %980, %975
  %983 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %968, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %968, align 8
  %984 = icmp eq %"class.spvtools::opt::Instruction"* %983, null
  br i1 %984, label %990, label %985

985:                                              ; preds = %982
  %986 = bitcast %"class.spvtools::opt::Instruction"* %983 to void (%"class.spvtools::opt::Instruction"*)***
  %987 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %986, align 8
  %988 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %987, i64 1
  %989 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %988, align 8
  call void %989(%"class.spvtools::opt::Instruction"* nonnull %983) #9
  br label %990

990:                                              ; preds = %982, %985
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %967)
  br label %1362

991:                                              ; preds = %859, %924
  %992 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %993 = load %"class.std::__1::function"*, %"class.std::__1::function"** %992, align 8
  call void @_ZN8spvtools4LogfIJRK6SpvOp_EEEvRKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS8_EEES6_S8_SB_S8_DpOT_(%"class.std::__1::function"* dereferenceable(32) %993, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.8, i64 0, i64 0), i32* nonnull dereferenceable(4) %8) #9
  br label %1363

994:                                              ; preds = %534
  %995 = or i32 %17, 1
  %996 = icmp eq i32 %995, 247
  br i1 %996, label %997, label %1000

997:                                              ; preds = %994
  %998 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  %999 = bitcast %"class.spvtools::opt::DebugScope"* %998 to i64*
  store i64 0, i64* %999, align 8
  br label %1025

1000:                                             ; preds = %994
  %1001 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9, i32 0
  %1002 = load i32, i32* %1001, align 4
  %1003 = icmp eq i32 %1002, 0
  br i1 %1003, label %1025, label %1004

1004:                                             ; preds = %1000
  %1005 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 9
  %1006 = getelementptr inbounds i8, i8* %119, i64 104
  %1007 = bitcast %"class.spvtools::opt::DebugScope"* %1005 to i64*
  %1008 = bitcast i8* %1006 to i64*
  %1009 = load i64, i64* %1007, align 4
  store i64 %1009, i64* %1008, align 8
  %1010 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %1011 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %1012 = icmp eq %"class.spvtools::opt::Instruction"* %1010, %1011
  br i1 %1012, label %1025, label %1013

1013:                                             ; preds = %1004
  %1014 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1010, i64 0, i32 8
  %1015 = bitcast %"class.spvtools::opt::DebugScope"* %1014 to i64*
  store i64 %1009, i64* %1015, align 8
  %1016 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1010, i64 1
  %1017 = icmp eq %"class.spvtools::opt::Instruction"* %1016, %1011
  br i1 %1017, label %1025, label %1018

1018:                                             ; preds = %1013, %1018
  %1019 = phi %"class.spvtools::opt::Instruction"* [ %1023, %1018 ], [ %1016, %1013 ]
  %1020 = load i64, i64* %1007, align 4
  %1021 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1019, i64 0, i32 8
  %1022 = bitcast %"class.spvtools::opt::DebugScope"* %1021 to i64*
  store i64 %1020, i64* %1022, align 8
  %1023 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1019, i64 1
  %1024 = icmp eq %"class.spvtools::opt::Instruction"* %1023, %1011
  br i1 %1024, label %1025, label %1018

1025:                                             ; preds = %1018, %1013, %997, %1004, %1000
  %1026 = icmp eq i16 %16, 12
  br i1 %1026, label %1027, label %1298

1027:                                             ; preds = %1025
  %1028 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 3
  %1029 = load i32, i32* %1028, align 4
  %1030 = tail call zeroext i1 @_Z21spvExtInstIsDebugInfo19spv_ext_inst_type_t(i32 %1029) #9
  br i1 %1030, label %1031, label %1298

1031:                                             ; preds = %1027
  %1032 = getelementptr inbounds %struct.spv_parsed_instruction_t, %struct.spv_parsed_instruction_t* %1, i64 0, i32 0
  %1033 = load i32*, i32** %1032, align 8
  %1034 = getelementptr inbounds i32, i32* %1033, i64 4
  %1035 = load i32, i32* %1034, align 4
  %1036 = load i32, i32* %1028, align 4
  %1037 = icmp eq i32 %1036, 8
  br i1 %1037, label %1038, label %1168

1038:                                             ; preds = %1031
  switch i32 %1035, label %1165 [
    i32 28, label %1039
    i32 29, label %1102
  ]

1039:                                             ; preds = %1038
  %1040 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %1041 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1040, align 8
  %1042 = icmp eq %"class.spvtools::opt::BasicBlock"* %1041, null
  br i1 %1042, label %1043, label %1073

1043:                                             ; preds = %1039
  %1044 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %392, align 8
  %1045 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1044, i64 0, i32 2, i32 0, i32 1
  %1046 = getelementptr inbounds i8, i8* %119, i64 8
  %1047 = bitcast i8* %1046 to %"class.spvtools::opt::Instruction"**
  %1048 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1047, align 8
  %1049 = icmp eq %"class.spvtools::opt::Instruction"* %1048, null
  br i1 %1049, label %1062, label %1050

1050:                                             ; preds = %1043
  %1051 = getelementptr inbounds i8, i8* %119, i64 16
  %1052 = bitcast i8* %1051 to i64*
  %1053 = load i64, i64* %1052, align 8
  %1054 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1048, i64 0, i32 0, i32 2
  %1055 = bitcast %"class.spvtools::opt::Instruction"** %1054 to i64*
  store i64 %1053, i64* %1055, align 8
  %1056 = bitcast i8* %1046 to i64*
  %1057 = load i64, i64* %1056, align 8
  %1058 = bitcast i8* %1051 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1059 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1058, align 8
  %1060 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1059, i64 0, i32 1
  %1061 = bitcast %"class.spvtools::opt::Instruction"** %1060 to i64*
  store i64 %1057, i64* %1061, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1046, i8 0, i64 16, i1 false) #9
  br label %1062

1062:                                             ; preds = %1043, %1050
  store %"class.spvtools::opt::Instruction"* %1045, %"class.spvtools::opt::Instruction"** %1047, align 8
  %1063 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1044, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1064 = bitcast %"class.spvtools::opt::Instruction"** %1063 to i64*
  %1065 = load i64, i64* %1064, align 8
  %1066 = getelementptr inbounds i8, i8* %119, i64 16
  %1067 = bitcast i8* %1066 to i64*
  store i64 %1065, i64* %1067, align 8
  %1068 = bitcast %"class.spvtools::opt::Instruction"** %1063 to i8**
  store i8* %119, i8** %1068, align 8
  %1069 = bitcast i8* %1066 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1070 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1069, align 8
  %1071 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1070, i64 0, i32 1
  %1072 = bitcast %"class.spvtools::opt::Instruction"** %1071 to i8**
  store i8* %119, i8** %1072, align 8
  br label %1362

1073:                                             ; preds = %1039
  %1074 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1041, i64 0, i32 2, i32 0, i32 1
  %1075 = getelementptr inbounds i8, i8* %119, i64 8
  %1076 = bitcast i8* %1075 to %"class.spvtools::opt::Instruction"**
  %1077 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1076, align 8
  %1078 = icmp eq %"class.spvtools::opt::Instruction"* %1077, null
  br i1 %1078, label %1091, label %1079

1079:                                             ; preds = %1073
  %1080 = getelementptr inbounds i8, i8* %119, i64 16
  %1081 = bitcast i8* %1080 to i64*
  %1082 = load i64, i64* %1081, align 8
  %1083 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1077, i64 0, i32 0, i32 2
  %1084 = bitcast %"class.spvtools::opt::Instruction"** %1083 to i64*
  store i64 %1082, i64* %1084, align 8
  %1085 = bitcast i8* %1075 to i64*
  %1086 = load i64, i64* %1085, align 8
  %1087 = bitcast i8* %1080 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1088 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1087, align 8
  %1089 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1088, i64 0, i32 1
  %1090 = bitcast %"class.spvtools::opt::Instruction"** %1089 to i64*
  store i64 %1086, i64* %1090, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1075, i8 0, i64 16, i1 false) #9
  br label %1091

1091:                                             ; preds = %1073, %1079
  store %"class.spvtools::opt::Instruction"* %1074, %"class.spvtools::opt::Instruction"** %1076, align 8
  %1092 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1041, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1093 = bitcast %"class.spvtools::opt::Instruction"** %1092 to i64*
  %1094 = load i64, i64* %1093, align 8
  %1095 = getelementptr inbounds i8, i8* %119, i64 16
  %1096 = bitcast i8* %1095 to i64*
  store i64 %1094, i64* %1096, align 8
  %1097 = bitcast %"class.spvtools::opt::Instruction"** %1092 to i8**
  store i8* %119, i8** %1097, align 8
  %1098 = bitcast i8* %1095 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1099 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1098, align 8
  %1100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1099, i64 0, i32 1
  %1101 = bitcast %"class.spvtools::opt::Instruction"** %1100 to i8**
  store i8* %119, i8** %1101, align 8
  br label %1362

1102:                                             ; preds = %1038
  %1103 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %1104 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1103, align 8
  %1105 = icmp eq %"class.spvtools::opt::BasicBlock"* %1104, null
  br i1 %1105, label %1106, label %1136

1106:                                             ; preds = %1102
  %1107 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %392, align 8
  %1108 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1107, i64 0, i32 2, i32 0, i32 1
  %1109 = getelementptr inbounds i8, i8* %119, i64 8
  %1110 = bitcast i8* %1109 to %"class.spvtools::opt::Instruction"**
  %1111 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1110, align 8
  %1112 = icmp eq %"class.spvtools::opt::Instruction"* %1111, null
  br i1 %1112, label %1125, label %1113

1113:                                             ; preds = %1106
  %1114 = getelementptr inbounds i8, i8* %119, i64 16
  %1115 = bitcast i8* %1114 to i64*
  %1116 = load i64, i64* %1115, align 8
  %1117 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1111, i64 0, i32 0, i32 2
  %1118 = bitcast %"class.spvtools::opt::Instruction"** %1117 to i64*
  store i64 %1116, i64* %1118, align 8
  %1119 = bitcast i8* %1109 to i64*
  %1120 = load i64, i64* %1119, align 8
  %1121 = bitcast i8* %1114 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1122 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1121, align 8
  %1123 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1122, i64 0, i32 1
  %1124 = bitcast %"class.spvtools::opt::Instruction"** %1123 to i64*
  store i64 %1120, i64* %1124, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1109, i8 0, i64 16, i1 false) #9
  br label %1125

1125:                                             ; preds = %1106, %1113
  store %"class.spvtools::opt::Instruction"* %1108, %"class.spvtools::opt::Instruction"** %1110, align 8
  %1126 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1127 = bitcast %"class.spvtools::opt::Instruction"** %1126 to i64*
  %1128 = load i64, i64* %1127, align 8
  %1129 = getelementptr inbounds i8, i8* %119, i64 16
  %1130 = bitcast i8* %1129 to i64*
  store i64 %1128, i64* %1130, align 8
  %1131 = bitcast %"class.spvtools::opt::Instruction"** %1126 to i8**
  store i8* %119, i8** %1131, align 8
  %1132 = bitcast i8* %1129 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1133 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1132, align 8
  %1134 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1133, i64 0, i32 1
  %1135 = bitcast %"class.spvtools::opt::Instruction"** %1134 to i8**
  store i8* %119, i8** %1135, align 8
  br label %1362

1136:                                             ; preds = %1102
  %1137 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1104, i64 0, i32 2, i32 0, i32 1
  %1138 = getelementptr inbounds i8, i8* %119, i64 8
  %1139 = bitcast i8* %1138 to %"class.spvtools::opt::Instruction"**
  %1140 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1139, align 8
  %1141 = icmp eq %"class.spvtools::opt::Instruction"* %1140, null
  br i1 %1141, label %1154, label %1142

1142:                                             ; preds = %1136
  %1143 = getelementptr inbounds i8, i8* %119, i64 16
  %1144 = bitcast i8* %1143 to i64*
  %1145 = load i64, i64* %1144, align 8
  %1146 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1140, i64 0, i32 0, i32 2
  %1147 = bitcast %"class.spvtools::opt::Instruction"** %1146 to i64*
  store i64 %1145, i64* %1147, align 8
  %1148 = bitcast i8* %1138 to i64*
  %1149 = load i64, i64* %1148, align 8
  %1150 = bitcast i8* %1143 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1151 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1150, align 8
  %1152 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1151, i64 0, i32 1
  %1153 = bitcast %"class.spvtools::opt::Instruction"** %1152 to i64*
  store i64 %1149, i64* %1153, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1138, i8 0, i64 16, i1 false) #9
  br label %1154

1154:                                             ; preds = %1136, %1142
  store %"class.spvtools::opt::Instruction"* %1137, %"class.spvtools::opt::Instruction"** %1139, align 8
  %1155 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1104, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1156 = bitcast %"class.spvtools::opt::Instruction"** %1155 to i64*
  %1157 = load i64, i64* %1156, align 8
  %1158 = getelementptr inbounds i8, i8* %119, i64 16
  %1159 = bitcast i8* %1158 to i64*
  store i64 %1157, i64* %1159, align 8
  %1160 = bitcast %"class.spvtools::opt::Instruction"** %1155 to i8**
  store i8* %119, i8** %1160, align 8
  %1161 = bitcast i8* %1158 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1162 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1161, align 8
  %1163 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1162, i64 0, i32 1
  %1164 = bitcast %"class.spvtools::opt::Instruction"** %1163 to i8**
  store i8* %119, i8** %1164, align 8
  br label %1362

1165:                                             ; preds = %1038
  %1166 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %1167 = load %"class.std::__1::function"*, %"class.std::__1::function"** %1166, align 8
  call void @_ZN8spvtools4LogfIJRK6SpvOp_EEEvRKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS8_EEES6_S8_SB_S8_DpOT_(%"class.std::__1::function"* dereferenceable(32) %1167, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.9, i64 0, i64 0), i32* nonnull dereferenceable(4) %8) #9
  br label %1363

1168:                                             ; preds = %1031
  switch i32 %1035, label %1295 [
    i32 28, label %1169
    i32 29, label %1232
  ]

1169:                                             ; preds = %1168
  %1170 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %1171 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1170, align 8
  %1172 = icmp eq %"class.spvtools::opt::BasicBlock"* %1171, null
  br i1 %1172, label %1173, label %1203

1173:                                             ; preds = %1169
  %1174 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %392, align 8
  %1175 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1174, i64 0, i32 2, i32 0, i32 1
  %1176 = getelementptr inbounds i8, i8* %119, i64 8
  %1177 = bitcast i8* %1176 to %"class.spvtools::opt::Instruction"**
  %1178 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1177, align 8
  %1179 = icmp eq %"class.spvtools::opt::Instruction"* %1178, null
  br i1 %1179, label %1192, label %1180

1180:                                             ; preds = %1173
  %1181 = getelementptr inbounds i8, i8* %119, i64 16
  %1182 = bitcast i8* %1181 to i64*
  %1183 = load i64, i64* %1182, align 8
  %1184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1178, i64 0, i32 0, i32 2
  %1185 = bitcast %"class.spvtools::opt::Instruction"** %1184 to i64*
  store i64 %1183, i64* %1185, align 8
  %1186 = bitcast i8* %1176 to i64*
  %1187 = load i64, i64* %1186, align 8
  %1188 = bitcast i8* %1181 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1189 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1188, align 8
  %1190 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1189, i64 0, i32 1
  %1191 = bitcast %"class.spvtools::opt::Instruction"** %1190 to i64*
  store i64 %1187, i64* %1191, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1176, i8 0, i64 16, i1 false) #9
  br label %1192

1192:                                             ; preds = %1173, %1180
  store %"class.spvtools::opt::Instruction"* %1175, %"class.spvtools::opt::Instruction"** %1177, align 8
  %1193 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1174, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1194 = bitcast %"class.spvtools::opt::Instruction"** %1193 to i64*
  %1195 = load i64, i64* %1194, align 8
  %1196 = getelementptr inbounds i8, i8* %119, i64 16
  %1197 = bitcast i8* %1196 to i64*
  store i64 %1195, i64* %1197, align 8
  %1198 = bitcast %"class.spvtools::opt::Instruction"** %1193 to i8**
  store i8* %119, i8** %1198, align 8
  %1199 = bitcast i8* %1196 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1200 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1199, align 8
  %1201 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1200, i64 0, i32 1
  %1202 = bitcast %"class.spvtools::opt::Instruction"** %1201 to i8**
  store i8* %119, i8** %1202, align 8
  br label %1362

1203:                                             ; preds = %1169
  %1204 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1171, i64 0, i32 2, i32 0, i32 1
  %1205 = getelementptr inbounds i8, i8* %119, i64 8
  %1206 = bitcast i8* %1205 to %"class.spvtools::opt::Instruction"**
  %1207 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1206, align 8
  %1208 = icmp eq %"class.spvtools::opt::Instruction"* %1207, null
  br i1 %1208, label %1221, label %1209

1209:                                             ; preds = %1203
  %1210 = getelementptr inbounds i8, i8* %119, i64 16
  %1211 = bitcast i8* %1210 to i64*
  %1212 = load i64, i64* %1211, align 8
  %1213 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1207, i64 0, i32 0, i32 2
  %1214 = bitcast %"class.spvtools::opt::Instruction"** %1213 to i64*
  store i64 %1212, i64* %1214, align 8
  %1215 = bitcast i8* %1205 to i64*
  %1216 = load i64, i64* %1215, align 8
  %1217 = bitcast i8* %1210 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1218 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1217, align 8
  %1219 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1218, i64 0, i32 1
  %1220 = bitcast %"class.spvtools::opt::Instruction"** %1219 to i64*
  store i64 %1216, i64* %1220, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1205, i8 0, i64 16, i1 false) #9
  br label %1221

1221:                                             ; preds = %1203, %1209
  store %"class.spvtools::opt::Instruction"* %1204, %"class.spvtools::opt::Instruction"** %1206, align 8
  %1222 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1171, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1223 = bitcast %"class.spvtools::opt::Instruction"** %1222 to i64*
  %1224 = load i64, i64* %1223, align 8
  %1225 = getelementptr inbounds i8, i8* %119, i64 16
  %1226 = bitcast i8* %1225 to i64*
  store i64 %1224, i64* %1226, align 8
  %1227 = bitcast %"class.spvtools::opt::Instruction"** %1222 to i8**
  store i8* %119, i8** %1227, align 8
  %1228 = bitcast i8* %1225 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1229 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1228, align 8
  %1230 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1229, i64 0, i32 1
  %1231 = bitcast %"class.spvtools::opt::Instruction"** %1230 to i8**
  store i8* %119, i8** %1231, align 8
  br label %1362

1232:                                             ; preds = %1168
  %1233 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %1234 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1233, align 8
  %1235 = icmp eq %"class.spvtools::opt::BasicBlock"* %1234, null
  br i1 %1235, label %1236, label %1266

1236:                                             ; preds = %1232
  %1237 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %392, align 8
  %1238 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1237, i64 0, i32 2, i32 0, i32 1
  %1239 = getelementptr inbounds i8, i8* %119, i64 8
  %1240 = bitcast i8* %1239 to %"class.spvtools::opt::Instruction"**
  %1241 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1240, align 8
  %1242 = icmp eq %"class.spvtools::opt::Instruction"* %1241, null
  br i1 %1242, label %1255, label %1243

1243:                                             ; preds = %1236
  %1244 = getelementptr inbounds i8, i8* %119, i64 16
  %1245 = bitcast i8* %1244 to i64*
  %1246 = load i64, i64* %1245, align 8
  %1247 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1241, i64 0, i32 0, i32 2
  %1248 = bitcast %"class.spvtools::opt::Instruction"** %1247 to i64*
  store i64 %1246, i64* %1248, align 8
  %1249 = bitcast i8* %1239 to i64*
  %1250 = load i64, i64* %1249, align 8
  %1251 = bitcast i8* %1244 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1252 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1251, align 8
  %1253 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1252, i64 0, i32 1
  %1254 = bitcast %"class.spvtools::opt::Instruction"** %1253 to i64*
  store i64 %1250, i64* %1254, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1239, i8 0, i64 16, i1 false) #9
  br label %1255

1255:                                             ; preds = %1236, %1243
  store %"class.spvtools::opt::Instruction"* %1238, %"class.spvtools::opt::Instruction"** %1240, align 8
  %1256 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1237, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1257 = bitcast %"class.spvtools::opt::Instruction"** %1256 to i64*
  %1258 = load i64, i64* %1257, align 8
  %1259 = getelementptr inbounds i8, i8* %119, i64 16
  %1260 = bitcast i8* %1259 to i64*
  store i64 %1258, i64* %1260, align 8
  %1261 = bitcast %"class.spvtools::opt::Instruction"** %1256 to i8**
  store i8* %119, i8** %1261, align 8
  %1262 = bitcast i8* %1259 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1263 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1262, align 8
  %1264 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1263, i64 0, i32 1
  %1265 = bitcast %"class.spvtools::opt::Instruction"** %1264 to i8**
  store i8* %119, i8** %1265, align 8
  br label %1362

1266:                                             ; preds = %1232
  %1267 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1234, i64 0, i32 2, i32 0, i32 1
  %1268 = getelementptr inbounds i8, i8* %119, i64 8
  %1269 = bitcast i8* %1268 to %"class.spvtools::opt::Instruction"**
  %1270 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1269, align 8
  %1271 = icmp eq %"class.spvtools::opt::Instruction"* %1270, null
  br i1 %1271, label %1284, label %1272

1272:                                             ; preds = %1266
  %1273 = getelementptr inbounds i8, i8* %119, i64 16
  %1274 = bitcast i8* %1273 to i64*
  %1275 = load i64, i64* %1274, align 8
  %1276 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1270, i64 0, i32 0, i32 2
  %1277 = bitcast %"class.spvtools::opt::Instruction"** %1276 to i64*
  store i64 %1275, i64* %1277, align 8
  %1278 = bitcast i8* %1268 to i64*
  %1279 = load i64, i64* %1278, align 8
  %1280 = bitcast i8* %1273 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1281 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1280, align 8
  %1282 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1281, i64 0, i32 1
  %1283 = bitcast %"class.spvtools::opt::Instruction"** %1282 to i64*
  store i64 %1279, i64* %1283, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1268, i8 0, i64 16, i1 false) #9
  br label %1284

1284:                                             ; preds = %1266, %1272
  store %"class.spvtools::opt::Instruction"* %1267, %"class.spvtools::opt::Instruction"** %1269, align 8
  %1285 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1234, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1286 = bitcast %"class.spvtools::opt::Instruction"** %1285 to i64*
  %1287 = load i64, i64* %1286, align 8
  %1288 = getelementptr inbounds i8, i8* %119, i64 16
  %1289 = bitcast i8* %1288 to i64*
  store i64 %1287, i64* %1289, align 8
  %1290 = bitcast %"class.spvtools::opt::Instruction"** %1285 to i8**
  store i8* %119, i8** %1290, align 8
  %1291 = bitcast i8* %1288 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1292 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1291, align 8
  %1293 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1292, i64 0, i32 1
  %1294 = bitcast %"class.spvtools::opt::Instruction"** %1293 to i8**
  store i8* %119, i8** %1294, align 8
  br label %1362

1295:                                             ; preds = %1168
  %1296 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %1297 = load %"class.std::__1::function"*, %"class.std::__1::function"** %1296, align 8
  call void @_ZN8spvtools4LogfIJRK6SpvOp_EEEvRKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS8_EEES6_S8_SB_S8_DpOT_(%"class.std::__1::function"* dereferenceable(32) %1297, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.9, i64 0, i64 0), i32* nonnull dereferenceable(4) %8) #9
  br label %1363

1298:                                             ; preds = %1027, %1025
  %1299 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %1300 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1299, align 8
  %1301 = icmp eq %"class.spvtools::opt::BasicBlock"* %1300, null
  br i1 %1301, label %1302, label %1333

1302:                                             ; preds = %1298
  %1303 = icmp eq i16 %16, 55
  br i1 %1303, label %1307, label %1304

1304:                                             ; preds = %1302
  %1305 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 0
  %1306 = load %"class.std::__1::function"*, %"class.std::__1::function"** %1305, align 8
  call void @_ZN8spvtools4LogfIJRK6SpvOp_EEEvRKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS8_EEES6_S8_SB_S8_DpOT_(%"class.std::__1::function"* dereferenceable(32) %1306, i32 2, i8* %220, %struct.spv_position_t* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.10, i64 0, i64 0), i32* nonnull dereferenceable(4) %8) #9
  br label %1363

1307:                                             ; preds = %1302
  %1308 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %392, align 8
  %1309 = bitcast %"class.std::__1::unique_ptr.18"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1309)
  %1310 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %7, i64 0, i32 0, i32 0, i32 0
  %1311 = bitcast %"class.std::__1::unique_ptr.18"* %7 to i8**
  store i8* %119, i8** %1311, align 8
  %1312 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1308, i64 0, i32 1, i32 0, i32 1
  %1313 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %1312, align 8
  %1314 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1308, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %1315 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %1314, align 8
  %1316 = icmp ult %"class.std::__1::unique_ptr.18"* %1313, %1315
  br i1 %1316, label %1317, label %1322

1317:                                             ; preds = %1307
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %1310, align 8
  %1318 = bitcast %"class.std::__1::unique_ptr.18"* %1313 to i64*
  store i64 %126, i64* %1318, align 8
  %1319 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %1313, i64 1
  %1320 = ptrtoint %"class.std::__1::unique_ptr.18"* %1319 to i64
  %1321 = bitcast %"class.std::__1::unique_ptr.18"** %1312 to i64*
  store i64 %1320, i64* %1321, align 8
  br label %1324

1322:                                             ; preds = %1307
  %1323 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1308, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.28"* %1323, %"class.std::__1::unique_ptr.18"* nonnull dereferenceable(8) %7) #9
  br label %1324

1324:                                             ; preds = %1322, %1317
  %1325 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1310, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %1310, align 8
  %1326 = icmp eq %"class.spvtools::opt::Instruction"* %1325, null
  br i1 %1326, label %1332, label %1327

1327:                                             ; preds = %1324
  %1328 = bitcast %"class.spvtools::opt::Instruction"* %1325 to void (%"class.spvtools::opt::Instruction"*)***
  %1329 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %1328, align 8
  %1330 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %1329, i64 1
  %1331 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %1330, align 8
  call void %1331(%"class.spvtools::opt::Instruction"* nonnull %1325) #9
  br label %1332

1332:                                             ; preds = %1324, %1327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1309)
  br label %1362

1333:                                             ; preds = %1298
  %1334 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1300, i64 0, i32 2, i32 0, i32 1
  %1335 = getelementptr inbounds i8, i8* %119, i64 8
  %1336 = bitcast i8* %1335 to %"class.spvtools::opt::Instruction"**
  %1337 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1336, align 8
  %1338 = icmp eq %"class.spvtools::opt::Instruction"* %1337, null
  br i1 %1338, label %1351, label %1339

1339:                                             ; preds = %1333
  %1340 = getelementptr inbounds i8, i8* %119, i64 16
  %1341 = bitcast i8* %1340 to i64*
  %1342 = load i64, i64* %1341, align 8
  %1343 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1337, i64 0, i32 0, i32 2
  %1344 = bitcast %"class.spvtools::opt::Instruction"** %1343 to i64*
  store i64 %1342, i64* %1344, align 8
  %1345 = bitcast i8* %1335 to i64*
  %1346 = load i64, i64* %1345, align 8
  %1347 = bitcast i8* %1340 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1348 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1347, align 8
  %1349 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1348, i64 0, i32 1
  %1350 = bitcast %"class.spvtools::opt::Instruction"** %1349 to i64*
  store i64 %1346, i64* %1350, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1335, i8 0, i64 16, i1 false) #9
  br label %1351

1351:                                             ; preds = %1333, %1339
  store %"class.spvtools::opt::Instruction"* %1334, %"class.spvtools::opt::Instruction"** %1336, align 8
  %1352 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1300, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1353 = bitcast %"class.spvtools::opt::Instruction"** %1352 to i64*
  %1354 = load i64, i64* %1353, align 8
  %1355 = getelementptr inbounds i8, i8* %119, i64 16
  %1356 = bitcast i8* %1355 to i64*
  store i64 %1354, i64* %1356, align 8
  %1357 = bitcast %"class.spvtools::opt::Instruction"** %1352 to i8**
  store i8* %119, i8** %1357, align 8
  %1358 = bitcast i8* %1355 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %1359 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %1358, align 8
  %1360 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1359, i64 0, i32 1
  %1361 = bitcast %"class.spvtools::opt::Instruction"** %1360 to i8**
  store i8* %119, i8** %1361, align 8
  br label %1362

1362:                                             ; preds = %533, %717, %750, %781, %811, %845, %879, %913, %687, %657, %615, %585, %555, %1332, %1351, %370, %244, %332, %335, %626, %633, %990, %953, %1125, %1154, %1062, %1091, %1255, %1284, %1192, %1221
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #9
  br label %1368

1363:                                             ; preds = %1165, %1295, %421, %413, %404, %396, %366, %358, %349, %341, %293, %285, %277, %269, %240, %232, %1304, %991
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #9
  %1364 = bitcast i8* %119 to void (%"class.spvtools::opt::Instruction"*)***
  %1365 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %1364, align 8
  %1366 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %1365, i64 1
  %1367 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %1366, align 8
  call void %1367(%"class.spvtools::opt::Instruction"* nonnull %120) #9
  br label %1368

1368:                                             ; preds = %112, %99, %83, %70, %1363, %1362, %47
  %1369 = phi i1 [ true, %47 ], [ true, %1362 ], [ false, %1363 ], [ true, %70 ], [ true, %83 ], [ true, %99 ], [ true, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  ret i1 %1369
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextERK24spv_parsed_instruction_tRKNS0_10DebugScopeE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, %struct.spv_parsed_instruction_t* dereferenceable(40), %"class.spvtools::opt::DebugScope"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #9
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.11"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %38, align 8
  store %"class.std::__1::vector.0"* null, %"class.std::__1::vector.0"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.0"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.0"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_Z21spvExtInstIsDebugInfo19spv_ext_inst_type_t(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextERK24spv_parsed_instruction_tONSt3__16vectorIS1_NS7_9allocatorIS1_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, %struct.spv_parsed_instruction_t* dereferenceable(40), %"class.std::__1::vector.11"* dereferenceable(24)) unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

declare zeroext i1 @_Z26spvOpcodeIsBlockTerminator6SpvOp_(i32) local_unnamed_addr #2

declare zeroext i1 @_Z23spvExtInstIsNonSemantic19spv_ext_inst_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8IrLoader9EndModuleEv(%"class.spvtools::opt::IrLoader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.37", align 8
  %3 = alloca %"class.std::__1::unique_ptr.37", align 8
  %4 = alloca %"class.std::__1::unique_ptr.25", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %8 = icmp eq %"class.spvtools::opt::BasicBlock"* %7, null
  %9 = ptrtoint %"class.spvtools::opt::BasicBlock"* %7 to i64
  br i1 %8, label %39, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %11, align 8
  %13 = icmp eq %"class.spvtools::opt::Function"* %12, null
  br i1 %13, label %39, label %14

14:                                               ; preds = %10
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.37"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %12, i64 0, i32 3
  %18 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %12, i64 0, i32 3, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %12, %"class.spvtools::opt::Function"** %20, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.37"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.37"* %2 to i64*
  store i64 %9, i64* %23, align 8
  %24 = call %"class.std::__1::unique_ptr.37"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.35"* %17, %"class.std::__1::unique_ptr.37"* %19, %"class.std::__1::unique_ptr.37"* nonnull dereferenceable(8) %2) #9
  %25 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %22, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %22, align 8
  %26 = icmp eq %"class.spvtools::opt::BasicBlock"* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %16, align 8
  br label %34

28:                                               ; preds = %14
  %29 = bitcast %"class.std::__1::unique_ptr.37"* %2 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* nonnull %29, %"class.spvtools::opt::BasicBlock"* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %30 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %31 = icmp eq %"class.spvtools::opt::BasicBlock"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.std::__1::unique_ptr.37"* %3 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* nonnull %33, %"class.spvtools::opt::BasicBlock"* nonnull %30) #9
  br label %34

34:                                               ; preds = %27, %28, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %35 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %6, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %36 = icmp eq %"class.spvtools::opt::BasicBlock"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = bitcast %"class.std::__1::unique_ptr.37"* %5 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* %38, %"class.spvtools::opt::BasicBlock"* nonnull %35) #9
  br label %39

39:                                               ; preds = %10, %1, %37, %34
  %40 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::Function"* %41, null
  %43 = ptrtoint %"class.spvtools::opt::Function"* %41 to i64
  br i1 %42, label %71, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  %46 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %45, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %40, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.25"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Function"* %41, %"class.spvtools::opt::Function"** %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %46, i64 0, i32 15, i32 0, i32 1
  %50 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %46, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %51, align 8
  %53 = icmp ult %"class.std::__1::unique_ptr.25"* %50, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %44
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %48, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.25"* %50 to i64*
  store i64 %43, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %50, i64 1
  %57 = ptrtoint %"class.std::__1::unique_ptr.25"* %56 to i64
  %58 = bitcast %"class.std::__1::unique_ptr.25"** %49 to i64*
  store i64 %57, i64* %58, align 8
  br label %61

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %46, i64 0, i32 15
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8FunctionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.23"* %60, %"class.std::__1::unique_ptr.25"* nonnull dereferenceable(8) %4) #9
  br label %61

61:                                               ; preds = %59, %54
  %62 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %48, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %48, align 8
  %63 = icmp eq %"class.spvtools::opt::Function"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %62) #9
  %65 = bitcast %"class.spvtools::opt::Function"* %62 to i8*
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  %67 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %40, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %40, align 8
  %68 = icmp eq %"class.spvtools::opt::Function"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %67) #9
  %70 = bitcast %"class.spvtools::opt::Function"* %67 to i8*
  call void @_ZdlPv(i8* %70) #10
  br label %71

71:                                               ; preds = %39, %69, %66
  %72 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 1
  %73 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %73, i64 0, i32 15, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %74, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %73, i64 0, i32 15, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %76, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr.25"* %75, %77
  br i1 %78, label %81, label %121

79:                                               ; preds = %151
  %80 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %72, align 8
  br label %81

81:                                               ; preds = %79, %71
  %82 = phi %"class.spvtools::opt::Module"* [ %80, %79 ], [ %73, %71 ]
  %83 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7
  %84 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %82, i64 0, i32 16
  %85 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %85, align 8
  %87 = icmp eq %"class.spvtools::opt::Instruction"* %86, null
  br i1 %87, label %106, label %88

88:                                               ; preds = %81
  %89 = bitcast %"class.spvtools::opt::Instruction"* %86 to i8*
  %90 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %82, i64 0, i32 16, i32 0, i32 1
  %91 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %90, align 8
  %92 = icmp eq %"class.spvtools::opt::Instruction"* %91, %86
  br i1 %92, label %103, label %93

93:                                               ; preds = %88, %93
  %94 = phi %"class.spvtools::opt::Instruction"* [ %95, %93 ], [ %91, %88 ]
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %94, i64 -1
  %96 = bitcast %"class.spvtools::opt::Instruction"* %95 to void (%"class.spvtools::opt::Instruction"*)***
  %97 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %96, align 8
  %98 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %97, align 8
  call void %98(%"class.spvtools::opt::Instruction"* %95) #9
  %99 = icmp eq %"class.spvtools::opt::Instruction"* %95, %86
  br i1 %99, label %100, label %93

100:                                              ; preds = %93
  %101 = bitcast %"class.std::__1::vector.11"* %84 to i8**
  %102 = load i8*, i8** %101, align 8
  br label %103

103:                                              ; preds = %100, %88
  %104 = phi i8* [ %102, %100 ], [ %89, %88 ]
  store %"class.spvtools::opt::Instruction"* %86, %"class.spvtools::opt::Instruction"** %90, align 8
  call void @_ZdlPv(i8* %104) #10
  %105 = bitcast %"class.std::__1::vector.11"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #9
  br label %106

106:                                              ; preds = %81, %103
  %107 = bitcast %"class.std::__1::vector.11"* %83 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::vector.11"* %84 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7, i32 0, i32 1
  %111 = bitcast %"class.spvtools::opt::Instruction"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %82, i64 0, i32 16, i32 0, i32 1
  %114 = bitcast %"class.spvtools::opt::Instruction"** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast %"class.spvtools::opt::Instruction"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %82, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %119 = bitcast %"class.spvtools::opt::Instruction"** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = bitcast %"class.std::__1::vector.11"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #9
  ret void

121:                                              ; preds = %71, %151
  %122 = phi %"class.std::__1::unique_ptr.25"* [ %152, %151 ], [ %75, %71 ]
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %123, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %124, i64 0, i32 3, i32 0, i32 0
  %126 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %124, i64 0, i32 3, i32 0, i32 1
  %128 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %127, align 8
  %129 = icmp eq %"class.std::__1::unique_ptr.37"* %126, %128
  br i1 %129, label %151, label %130

130:                                              ; preds = %121
  %131 = ptrtoint %"class.std::__1::unique_ptr.37"* %126 to i64
  %132 = getelementptr %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %128, i64 -1
  %133 = ptrtoint %"class.std::__1::unique_ptr.37"* %132 to i64
  %134 = sub i64 %133, %131
  %135 = lshr i64 %134, 3
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %148, label %139

139:                                              ; preds = %130, %139
  %140 = phi %"class.std::__1::unique_ptr.37"* [ %145, %139 ], [ %126, %130 ]
  %141 = phi i64 [ %146, %139 ], [ %137, %130 ]
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %140, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %143, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %140, i64 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %139, !llvm.loop !3

148:                                              ; preds = %139, %130
  %149 = phi %"class.std::__1::unique_ptr.37"* [ %126, %130 ], [ %145, %139 ]
  %150 = icmp ult i64 %134, 56
  br i1 %150, label %151, label %154

151:                                              ; preds = %148, %154, %121
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %122, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.25"* %152, %77
  br i1 %153, label %79, label %121

154:                                              ; preds = %148, %154
  %155 = phi %"class.std::__1::unique_ptr.37"* [ %180, %154 ], [ %149, %148 ]
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %156, align 8
  %158 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %157, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %158, align 8
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 1, i32 0, i32 0, i32 0
  %160 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %159, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %160, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %161, align 8
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 2, i32 0, i32 0, i32 0
  %163 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %162, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %163, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %164, align 8
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 3, i32 0, i32 0, i32 0
  %166 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %166, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %167, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 4, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %169, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %170, align 8
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 5, i32 0, i32 0, i32 0
  %172 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %171, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %172, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %173, align 8
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 6, i32 0, i32 0, i32 0
  %175 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %175, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %176, align 8
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 7, i32 0, i32 0, i32 0
  %178 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %177, align 8
  %179 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %178, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %124, %"class.spvtools::opt::Function"** %179, align 8
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %155, i64 8
  %181 = icmp eq %"class.std::__1::unique_ptr.37"* %180, %128
  br i1 %181, label %151, label %154
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #9
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %3, align 8
  store %"class.std::__1::vector.0"* null, %"class.std::__1::vector.0"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.0"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.0"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %3, align 8
  store %"class.std::__1::vector.0"* null, %"class.std::__1::vector.0"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.0"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.0"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8FunctionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.23"*, %"class.std::__1::unique_ptr.25"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.25"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.25"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.25"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.25"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.25"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.25"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.25"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.25"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.25"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.25"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::Function"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.25"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.25"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.25"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.25"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !5

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.25"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.25"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.25"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.25"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.25"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.25"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.25"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.25"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.25"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.25"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.25"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.25"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.25"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.25"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.25"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.25"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.25"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.25"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.25"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.25"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.25"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.25"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.25"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.25"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.25"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.25"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.25"*
  %138 = icmp eq %"class.std::__1::unique_ptr.25"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.25"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %142, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::Function"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %143) #9
  %146 = bitcast %"class.spvtools::opt::Function"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #10
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.25"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.37"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.35"*, %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.37"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.67", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.37"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.37"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.37"* %10 to i64
  br i1 %11, label %14, label %144

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.37"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.37"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.37"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.37"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.37"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %373

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.37"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.37"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.37"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"class.spvtools::opt::BasicBlock"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.37"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.37"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.37"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.37"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !6

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.37"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.37"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.37"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %82

60:                                               ; preds = %82, %55
  %61 = phi %"class.std::__1::unique_ptr.37"* [ %58, %55 ], [ %132, %82 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.37"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %134, label %66

66:                                               ; preds = %63, %80
  %67 = phi %"class.std::__1::unique_ptr.37"* [ %70, %80 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.37"* [ %69, %80 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.37"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.37"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::BasicBlock"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.std::__1::unique_ptr.37"* %70 to %"struct.std::__1::default_delete.41"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* %79, %"class.spvtools::opt::BasicBlock"* nonnull %75) #9
  br label %80

80:                                               ; preds = %78, %66
  %81 = icmp eq %"class.std::__1::unique_ptr.37"* %69, %1
  br i1 %81, label %134, label %66

82:                                               ; preds = %55, %82
  %83 = phi %"class.std::__1::unique_ptr.37"* [ %132, %82 ], [ %56, %55 ]
  %84 = phi %"class.std::__1::unique_ptr.37"* [ %131, %82 ], [ %57, %55 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.37"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.37"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.37"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.37"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.37"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.37"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.37"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.37"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.37"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.37"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.37"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.37"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.37"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.37"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.37"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.37"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %83, i64 8
  %133 = icmp ult %"class.std::__1::unique_ptr.37"* %131, %8
  br i1 %133, label %82, label %60

134:                                              ; preds = %80, %63
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %2, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.37"* %2 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %1, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.37"* %1 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %"class.spvtools::opt::BasicBlock"* %139, null
  br i1 %141, label %373, label %142

142:                                              ; preds = %134
  %143 = bitcast %"class.std::__1::unique_ptr.37"* %1 to %"struct.std::__1::default_delete.41"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* %143, %"class.spvtools::opt::BasicBlock"* nonnull %139) #9
  br label %373

144:                                              ; preds = %3
  %145 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.67"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #9
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %5, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %5, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %5, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %5, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.37"** %7 to i64*
  %153 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.67"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %12, %155
  %157 = ashr exact i64 %156, 3
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 2305843009213693951
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #11
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"class.std::__1::unique_ptr.37"** %9 to i64*
  %164 = sub i64 %13, %155
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %4, %155
  %169 = ashr exact i64 %168, 3
  store %"class.std::__1::unique_ptr.37"* null, %"class.std::__1::unique_ptr.37"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.46"** %151 to %"class.std::__1::__compressed_pair.43"**
  store %"class.std::__1::__compressed_pair.43"* %145, %"class.std::__1::__compressed_pair.43"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 2
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %4, %155
  %176 = ashr exact i64 %175, 3
  store %"class.std::__1::unique_ptr.37"* null, %"class.std::__1::unique_ptr.37"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.46"** %151 to %"class.std::__1::__compressed_pair.43"**
  store %"class.std::__1::__compressed_pair.43"* %145, %"class.std::__1::__compressed_pair.43"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #11
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 2305843009213693951, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 3
  %186 = tail call i8* @_Znwm(i64 %185) #10
  %187 = bitcast i8* %186 to %"class.std::__1::unique_ptr.37"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"class.std::__1::unique_ptr.37"* [ %187, %182 ], [ null, %171 ]
  store %"class.std::__1::unique_ptr.37"* %191, %"class.std::__1::unique_ptr.37"** %147, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %191, i64 %189
  store %"class.std::__1::unique_ptr.37"* %192, %"class.std::__1::unique_ptr.37"** %149, align 8
  store %"class.std::__1::unique_ptr.37"* %192, %"class.std::__1::unique_ptr.37"** %148, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %191, i64 %190
  store %"class.std::__1::unique_ptr.37"* %193, %"class.std::__1::unique_ptr.37"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.67"* nonnull %5, %"class.std::__1::unique_ptr.37"* dereferenceable(8) %2)
  %194 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %148, align 8
  %195 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %6, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr.37"* %195, %1
  br i1 %196, label %261, label %197

197:                                              ; preds = %188
  %198 = ptrtoint %"class.std::__1::unique_ptr.37"* %195 to i64
  %199 = getelementptr %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %1, i64 -1, i32 0, i32 0, i32 0
  %200 = ptrtoint %"class.spvtools::opt::BasicBlock"** %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %197, %206
  %207 = phi %"class.std::__1::unique_ptr.37"* [ %217, %206 ], [ %194, %197 ]
  %208 = phi %"class.std::__1::unique_ptr.37"* [ %211, %206 ], [ %1, %197 ]
  %209 = phi i64 [ %218, %206 ], [ %204, %197 ]
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %207, i64 -1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %208, i64 -1
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.37"* %211 to i64*
  %214 = load i64, i64* %213, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.37"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %148, align 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %216, i64 -1
  store %"class.std::__1::unique_ptr.37"* %217, %"class.std::__1::unique_ptr.37"** %148, align 8
  %218 = add i64 %209, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206, !llvm.loop !7

220:                                              ; preds = %206, %197
  %221 = phi %"class.std::__1::unique_ptr.37"* [ undef, %197 ], [ %217, %206 ]
  %222 = phi %"class.std::__1::unique_ptr.37"* [ %194, %197 ], [ %217, %206 ]
  %223 = phi %"class.std::__1::unique_ptr.37"* [ %1, %197 ], [ %211, %206 ]
  %224 = icmp ult i64 %201, 24
  br i1 %224, label %261, label %225

225:                                              ; preds = %220, %225
  %226 = phi %"class.std::__1::unique_ptr.37"* [ %259, %225 ], [ %222, %220 ]
  %227 = phi %"class.std::__1::unique_ptr.37"* [ %253, %225 ], [ %223, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %226, i64 -1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %227, i64 -1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.37"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %230, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.37"* %228 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %148, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %234, i64 -1
  store %"class.std::__1::unique_ptr.37"* %235, %"class.std::__1::unique_ptr.37"** %148, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %234, i64 -2
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %227, i64 -2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.37"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.37"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %148, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %242, i64 -1
  store %"class.std::__1::unique_ptr.37"* %243, %"class.std::__1::unique_ptr.37"** %148, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %242, i64 -2
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %227, i64 -3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::unique_ptr.37"* %245 to i64*
  %248 = load i64, i64* %247, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %246, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.37"* %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %148, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %250, i64 -1
  store %"class.std::__1::unique_ptr.37"* %251, %"class.std::__1::unique_ptr.37"** %148, align 8
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %250, i64 -2
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %227, i64 -4
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr.37"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %254, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.37"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %148, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %258, i64 -1
  store %"class.std::__1::unique_ptr.37"* %259, %"class.std::__1::unique_ptr.37"** %148, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.37"* %253, %195
  br i1 %260, label %261, label %225

261:                                              ; preds = %220, %225, %188
  %262 = phi %"class.std::__1::unique_ptr.37"* [ %194, %188 ], [ %221, %220 ], [ %259, %225 ]
  %263 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %7, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.37"* %263, %1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = ptrtoint %"class.std::__1::unique_ptr.37"* %263 to i64
  %267 = ptrtoint %"class.std::__1::unique_ptr.37"* %262 to i64
  %268 = bitcast %"class.std::__1::unique_ptr.37"** %148 to i64*
  %269 = bitcast %"class.std::__1::unique_ptr.37"** %149 to i64*
  %270 = load i64, i64* %269, align 8
  br label %340

271:                                              ; preds = %261
  %272 = bitcast %"class.std::__1::unique_ptr.37"** %149 to i64**
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %263, i64 -1, i32 0, i32 0, i32 0
  %275 = ptrtoint %"class.spvtools::opt::BasicBlock"** %274 to i64
  %276 = sub i64 %275, %4
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %296, label %281

281:                                              ; preds = %271, %281
  %282 = phi i64* [ %291, %281 ], [ %273, %271 ]
  %283 = phi %"class.std::__1::unique_ptr.37"* [ %288, %281 ], [ %1, %271 ]
  %284 = phi i64 [ %292, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %283, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.37"* %283 to i64*
  %287 = load i64, i64* %286, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %285, align 8
  store i64 %287, i64* %282, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %283, i64 1
  %289 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %149, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %289, i64 1
  store %"class.std::__1::unique_ptr.37"* %290, %"class.std::__1::unique_ptr.37"** %149, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.37"* %290 to i64*
  %292 = add i64 %284, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %281, !llvm.loop !8

294:                                              ; preds = %281
  %295 = bitcast %"class.std::__1::unique_ptr.37"* %290 to i64*
  br label %296

296:                                              ; preds = %271, %294
  %297 = phi %"class.std::__1::unique_ptr.37"* [ undef, %271 ], [ %290, %294 ]
  %298 = phi i64* [ %273, %271 ], [ %295, %294 ]
  %299 = phi %"class.std::__1::unique_ptr.37"* [ %1, %271 ], [ %288, %294 ]
  %300 = icmp ult i64 %276, 24
  br i1 %300, label %333, label %301

301:                                              ; preds = %296, %301
  %302 = phi i64* [ %332, %301 ], [ %298, %296 ]
  %303 = phi %"class.std::__1::unique_ptr.37"* [ %328, %301 ], [ %299, %296 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.37"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %304, align 8
  store i64 %306, i64* %302, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %303, i64 1
  %308 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %149, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %308, i64 1
  store %"class.std::__1::unique_ptr.37"* %309, %"class.std::__1::unique_ptr.37"** %149, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.37"* %309 to i64*
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.std::__1::unique_ptr.37"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %311, align 8
  store i64 %313, i64* %310, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %303, i64 2
  %315 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %149, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %315, i64 1
  store %"class.std::__1::unique_ptr.37"* %316, %"class.std::__1::unique_ptr.37"** %149, align 8
  %317 = bitcast %"class.std::__1::unique_ptr.37"* %316 to i64*
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %314, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr.37"* %314 to i64*
  %320 = load i64, i64* %319, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %318, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %303, i64 3
  %322 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %149, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %322, i64 1
  store %"class.std::__1::unique_ptr.37"* %323, %"class.std::__1::unique_ptr.37"** %149, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.37"* %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %321, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.std::__1::unique_ptr.37"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %325, align 8
  store i64 %327, i64* %324, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %303, i64 4
  %329 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %149, align 8
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %329, i64 1
  store %"class.std::__1::unique_ptr.37"* %330, %"class.std::__1::unique_ptr.37"** %149, align 8
  %331 = icmp eq %"class.std::__1::unique_ptr.37"* %328, %263
  %332 = bitcast %"class.std::__1::unique_ptr.37"* %330 to i64*
  br i1 %331, label %333, label %301

333:                                              ; preds = %301, %296
  %334 = phi %"class.std::__1::unique_ptr.37"* [ %297, %296 ], [ %330, %301 ]
  %335 = ptrtoint %"class.std::__1::unique_ptr.37"* %334 to i64
  %336 = bitcast %"class.std::__1::unique_ptr.37"** %148 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %152, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.37"** %149 to i64*
  br label %340

340:                                              ; preds = %265, %333
  %341 = phi i64* [ %269, %265 ], [ %339, %333 ]
  %342 = phi i64 [ %270, %265 ], [ %335, %333 ]
  %343 = phi i64 [ %266, %265 ], [ %338, %333 ]
  %344 = phi i64* [ %268, %265 ], [ %336, %333 ]
  %345 = phi i64 [ %267, %265 ], [ %337, %333 ]
  %346 = load i64, i64* %153, align 8
  store i64 %345, i64* %153, align 8
  store i64 %346, i64* %344, align 8
  store i64 %342, i64* %152, align 8
  store i64 %343, i64* %341, align 8
  %347 = load i64, i64* %163, align 8
  %348 = bitcast %"class.std::__1::unique_ptr.37"** %150 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %163, align 8
  store i64 %347, i64* %348, align 8
  %350 = bitcast %"struct.std::__1::__split_buffer.67"* %5 to i64*
  store i64 %346, i64* %350, align 8
  %351 = inttoptr i64 %346 to %"class.std::__1::unique_ptr.37"*
  %352 = inttoptr i64 %343 to %"class.std::__1::unique_ptr.37"*
  %353 = icmp eq %"class.std::__1::unique_ptr.37"* %352, %351
  br i1 %353, label %367, label %354

354:                                              ; preds = %340, %362
  %355 = phi %"class.std::__1::unique_ptr.37"* [ %363, %362 ], [ %352, %340 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %355, i64 -1
  store %"class.std::__1::unique_ptr.37"* %356, %"class.std::__1::unique_ptr.37"** %149, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %357, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %357, align 8
  %359 = icmp eq %"class.spvtools::opt::BasicBlock"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  %361 = bitcast %"class.std::__1::unique_ptr.37"* %356 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* %361, %"class.spvtools::opt::BasicBlock"* nonnull %358) #9
  br label %362

362:                                              ; preds = %360, %354
  %363 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %149, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.37"* %363, %351
  br i1 %364, label %365, label %354

365:                                              ; preds = %362
  %366 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %147, align 8
  br label %367

367:                                              ; preds = %365, %340
  %368 = phi %"class.std::__1::unique_ptr.37"* [ %366, %365 ], [ %351, %340 ]
  %369 = icmp eq %"class.std::__1::unique_ptr.37"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.std::__1::unique_ptr.37"* %368 to i8*
  call void @_ZdlPv(i8* %371) #10
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #9
  br label %373

373:                                              ; preds = %142, %134, %16, %372
  %374 = phi %"class.std::__1::unique_ptr.37"* [ %1, %16 ], [ %194, %372 ], [ %1, %134 ], [ %1, %142 ]
  ret %"class.std::__1::unique_ptr.37"* %374
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.67"*, %"class.std::__1::unique_ptr.37"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.37"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.37"* %6 to i64
  br i1 %7, label %9, label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.67", %"struct.std::__1::__split_buffer.67"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.37"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.37"* %13 to i64
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.37"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.37"* %11, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %16, %36
  %25 = phi %"class.std::__1::unique_ptr.37"* [ %38, %36 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.37"* [ %37, %36 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.37"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.37"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.std::__1::unique_ptr.37"* %25 to %"struct.std::__1::default_delete.41"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* %35, %"class.spvtools::opt::BasicBlock"* nonnull %31) #9
  br label %36

36:                                               ; preds = %34, %24
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %26, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %25, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.37"* %37, %4
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %10, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.std::__1::unique_ptr.37"* [ %4, %16 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr.37"* [ %22, %16 ], [ %38, %40 ]
  store %"class.std::__1::unique_ptr.37"* %44, %"class.std::__1::unique_ptr.37"** %3, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %43, i64 %21
  store %"class.std::__1::unique_ptr.37"* %45, %"class.std::__1::unique_ptr.37"** %10, align 8
  br label %179

46:                                               ; preds = %9
  %47 = bitcast %"class.std::__1::unique_ptr.37"** %5 to i64*
  %48 = bitcast %"struct.std::__1::__split_buffer.67"* %0 to i64*
  %49 = sub i64 %8, %15
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #11
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #10
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.37"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.37"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.37"* %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.37"* %11 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.37"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.37"* [ %86, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %87, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.37"* [ %88, %77 ], [ %11, %71 ]
  %81 = phi i64 [ %89, %77 ], [ %75, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.37"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %85 = inttoptr i64 %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.37"* %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %80, i64 1
  %89 = add i64 %81, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %77, !llvm.loop !9

91:                                               ; preds = %77
  %92 = ptrtoint %"class.std::__1::unique_ptr.37"* %86 to i64
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi %"class.std::__1::unique_ptr.37"* [ %61, %71 ], [ %86, %91 ]
  %95 = phi i64 [ %62, %71 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.37"* [ %11, %71 ], [ %88, %91 ]
  %97 = icmp ult i64 %72, 56
  br i1 %97, label %152, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.37"* [ %148, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %149, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.37"* [ %150, %98 ], [ %96, %93 ]
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.37"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %99, i64 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.37"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.37"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %99, i64 2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 2
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.37"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.37"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %99, i64 3
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 3
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.37"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.37"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %99, i64 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 4
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.37"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.37"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %99, i64 5
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 5
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.37"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.37"* %130 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %99, i64 6
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 6
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.37"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.37"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %99, i64 7
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 7
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr.37"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.37"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %99, i64 8
  %149 = ptrtoint %"class.std::__1::unique_ptr.37"* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %101, i64 8
  %151 = icmp eq %"class.std::__1::unique_ptr.37"* %69, %148
  br i1 %151, label %152, label %98

152:                                              ; preds = %98, %93
  %153 = ptrtoint %"class.std::__1::unique_ptr.37"* %69 to i64
  %154 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %12, align 8
  %155 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %10, align 8
  %156 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %3, align 8
  br label %157

157:                                              ; preds = %55, %152
  %158 = phi %"class.std::__1::unique_ptr.37"* [ %156, %152 ], [ %4, %55 ]
  %159 = phi %"class.std::__1::unique_ptr.37"* [ %155, %152 ], [ %11, %55 ]
  %160 = phi %"class.std::__1::unique_ptr.37"* [ %154, %152 ], [ %13, %55 ]
  %161 = phi i64 [ %153, %152 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.37"** %10 to i64*
  store i64 %62, i64* %162, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.37"** %3 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %64, i64* %47, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr.37"* %158, %159
  br i1 %164, label %175, label %165

165:                                              ; preds = %157, %173
  %166 = phi %"class.std::__1::unique_ptr.37"* [ %167, %173 ], [ %158, %157 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.std::__1::unique_ptr.37"* %167 to %"struct.std::__1::default_delete.41"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* %172, %"class.spvtools::opt::BasicBlock"* nonnull %169) #9
  br label %173

173:                                              ; preds = %171, %165
  %174 = icmp eq %"class.std::__1::unique_ptr.37"* %167, %159
  br i1 %174, label %175, label %165

175:                                              ; preds = %173, %157
  %176 = icmp eq %"class.std::__1::unique_ptr.37"* %160, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.37"* %160 to i8*
  tail call void @_ZdlPv(i8* %178) #10
  br label %179

179:                                              ; preds = %177, %175, %42, %2
  %180 = bitcast %"class.std::__1::unique_ptr.37"** %3 to i64**
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %1, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.37"* %1 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %182, align 8
  store i64 %184, i64* %181, align 8
  %185 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %3, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %185, i64 1
  store %"class.std::__1::unique_ptr.37"* %186, %"class.std::__1::unique_ptr.37"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.28"*, %"class.std::__1::unique_ptr.18"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.18"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.18"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.18"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.18"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.18"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.18"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.18"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.18"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.18"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.18"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::Instruction"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.18"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.18"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.18"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.18"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !10

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.18"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.18"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.18"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.18"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.18"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.18"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.18"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.18"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.18"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.18"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.18"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.18"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.18"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.18"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.18"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.18"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.18"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.18"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.18"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.18"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.18"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.18"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.18"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.18"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.18"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.18"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.18"*
  %138 = icmp eq %"class.std::__1::unique_ptr.18"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.18"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %142, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::Instruction"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.spvtools::opt::Instruction"* %143 to void (%"class.spvtools::opt::Instruction"*)***
  %147 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, i64 1
  %149 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %148, align 8
  tail call void %149(%"class.spvtools::opt::Instruction"* nonnull %143) #9
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.18"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #9
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #9
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #9
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #9
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #9
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #9
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #9
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #9
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #9
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #9
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #9
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.18"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.18"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.18"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.18"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::Instruction"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::Instruction"* %15 to void (%"class.spvtools::opt::Instruction"*)***
  %19 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::Instruction"* nonnull %15) #9
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.18"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.28"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.18"* %4, %"class.std::__1::unique_ptr.18"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.spvtools::opt::Instruction"* %31 to void (%"class.spvtools::opt::Instruction"*)***
  %35 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %35, i64 1
  %37 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %36, align 8
  tail call void %37(%"class.spvtools::opt::Instruction"* nonnull %31) #9
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %40, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr.37"* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::unique_ptr.37"* %41 to i8*
  %45 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3, i32 0, i32 1
  %46 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %45, align 8
  %47 = icmp eq %"class.std::__1::unique_ptr.37"* %46, %41
  br i1 %47, label %61, label %48

48:                                               ; preds = %43, %56
  %49 = phi %"class.std::__1::unique_ptr.37"* [ %50, %56 ], [ %46, %43 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %49, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %51, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %51, align 8
  %53 = icmp eq %"class.spvtools::opt::BasicBlock"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::unique_ptr.37"* %50 to %"struct.std::__1::default_delete.41"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.41"* %55, %"class.spvtools::opt::BasicBlock"* nonnull %52) #9
  br label %56

56:                                               ; preds = %54, %48
  %57 = icmp eq %"class.std::__1::unique_ptr.37"* %50, %41
  br i1 %57, label %58, label %48

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.35"* %39 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %43
  %62 = phi i8* [ %60, %58 ], [ %44, %43 ]
  store %"class.std::__1::unique_ptr.37"* %41, %"class.std::__1::unique_ptr.37"** %45, align 8
  tail call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %38, %61
  %64 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %66, i64 0, i32 0, i32 3
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp ne i8 %68, 0
  %70 = icmp eq %"class.spvtools::opt::Instruction"* %66, null
  %71 = or i1 %70, %69
  br i1 %71, label %99, label %72

72:                                               ; preds = %63, %72
  %73 = phi %"class.spvtools::opt::Instruction"* [ %93, %72 ], [ %66, %63 ]
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 2
  %75 = bitcast %"class.spvtools::opt::Instruction"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 1
  %78 = bitcast %"class.spvtools::opt::Instruction"** %77 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %79 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %78, align 8
  %80 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %79, i64 0, i32 2
  %81 = bitcast %"class.spvtools::opt::Instruction"** %80 to i64*
  store i64 %76, i64* %81, align 8
  %82 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.spvtools::opt::Instruction"** %74 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %85 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %85, i64 0, i32 1
  %87 = bitcast %"class.spvtools::opt::Instruction"** %86 to i64*
  store i64 %83, i64* %87, align 8
  %88 = bitcast %"class.spvtools::opt::Instruction"** %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #9
  %89 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %90 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %90, i64 1
  %92 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %91, align 8
  tail call void %92(%"class.spvtools::opt::Instruction"* nonnull %73) #9
  %93 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %93, i64 0, i32 0, i32 3
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp ne i8 %95, 0
  %97 = icmp eq %"class.spvtools::opt::Instruction"* %93, null
  %98 = or i1 %97, %96
  br i1 %98, label %99, label %72

99:                                               ; preds = %72, %63
  %100 = phi %"class.spvtools::opt::Instruction"* [ %66, %63 ], [ %93, %72 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %100, i64 0, i32 0, i32 3
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp ne i8 %102, 0
  %104 = icmp eq %"class.spvtools::opt::Instruction"* %100, null
  %105 = or i1 %104, %103
  br i1 %105, label %129, label %106

106:                                              ; preds = %99, %106
  %107 = phi %"class.spvtools::opt::Instruction"* [ %123, %106 ], [ %100, %99 ]
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 0, i32 2
  %109 = bitcast %"class.spvtools::opt::Instruction"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 0, i32 1
  %112 = bitcast %"class.spvtools::opt::Instruction"** %111 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %113 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %112, align 8
  %114 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %113, i64 0, i32 2
  %115 = bitcast %"class.spvtools::opt::Instruction"** %114 to i64*
  store i64 %110, i64* %115, align 8
  %116 = bitcast %"class.spvtools::opt::Instruction"** %111 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.spvtools::opt::Instruction"** %108 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %119 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %119, i64 0, i32 1
  %121 = bitcast %"class.spvtools::opt::Instruction"** %120 to i64*
  store i64 %117, i64* %121, align 8
  %122 = bitcast %"class.spvtools::opt::Instruction"** %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #9
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 0, i32 3
  %125 = load i8, i8* %124, align 8, !range !2
  %126 = icmp ne i8 %125, 0
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %123, null
  %128 = or i1 %127, %126
  br i1 %128, label %129, label %106

129:                                              ; preds = %106, %99
  %130 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %130) #9
  %131 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 1
  %132 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %131, i64 0, i32 0, i32 0
  %133 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %132, align 8
  %134 = icmp eq %"class.std::__1::unique_ptr.18"* %133, null
  br i1 %134, label %158, label %135

135:                                              ; preds = %129
  %136 = bitcast %"class.std::__1::unique_ptr.18"* %133 to i8*
  %137 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 1, i32 0, i32 1
  %138 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %137, align 8
  %139 = icmp eq %"class.std::__1::unique_ptr.18"* %138, %133
  br i1 %139, label %156, label %140

140:                                              ; preds = %135, %151
  %141 = phi %"class.std::__1::unique_ptr.18"* [ %142, %151 ], [ %138, %135 ]
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %141, i64 -1
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %143, align 8
  %145 = icmp eq %"class.spvtools::opt::Instruction"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = bitcast %"class.spvtools::opt::Instruction"* %144 to void (%"class.spvtools::opt::Instruction"*)***
  %148 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %148, i64 1
  %150 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %149, align 8
  tail call void %150(%"class.spvtools::opt::Instruction"* nonnull %144) #9
  br label %151

151:                                              ; preds = %146, %140
  %152 = icmp eq %"class.std::__1::unique_ptr.18"* %142, %133
  br i1 %152, label %153, label %140

153:                                              ; preds = %151
  %154 = bitcast %"class.std::__1::vector.28"* %131 to i8**
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %135
  %157 = phi i8* [ %155, %153 ], [ %136, %135 ]
  store %"class.std::__1::unique_ptr.18"* %133, %"class.std::__1::unique_ptr.18"** %137, align 8
  tail call void @_ZdlPv(i8* %157) #10
  br label %158

158:                                              ; preds = %129, %156
  %159 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %159, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %159, align 8
  %161 = icmp eq %"class.spvtools::opt::Instruction"* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = bitcast %"class.spvtools::opt::Instruction"* %160 to void (%"class.spvtools::opt::Instruction"*)***
  %164 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %164, i64 1
  %166 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %165, align 8
  tail call void %166(%"class.spvtools::opt::Instruction"* nonnull %160) #9
  br label %167

167:                                              ; preds = %158, %162
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.11"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 112
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 164703072086692425
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 112
  %20 = icmp ult i64 %19, 82351536043346212
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 164703072086692425, %14 ]
  %28 = mul i64 %27, 112
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.spvtools::opt::Instruction"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.spvtools::opt::Instruction"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 %9
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 %32
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %35 to i64
  tail call void @_ZN8spvtools3opt11InstructionC1EOS1_(%"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"* dereferenceable(112) %1) #9
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 1
  %38 = ptrtoint %"class.spvtools::opt::Instruction"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %41 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.spvtools::opt::Instruction"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.spvtools::opt::Instruction"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.spvtools::opt::Instruction"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 -1
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 -1
  tail call void @_ZN8spvtools3opt11InstructionC1EOS1_(%"class.spvtools::opt::Instruction"* %48, %"class.spvtools::opt::Instruction"* dereferenceable(112) %49) #9
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.spvtools::opt::Instruction"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.spvtools::opt::Instruction"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.spvtools::opt::Instruction"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.spvtools::opt::Instruction"*
  %60 = icmp eq %"class.spvtools::opt::Instruction"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.spvtools::opt::Instruction"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 -1
  %64 = bitcast %"class.spvtools::opt::Instruction"* %63 to void (%"class.spvtools::opt::Instruction"*)***
  %65 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %64, align 8
  %66 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %65, align 8
  tail call void %66(%"class.spvtools::opt::Instruction"* %63) #9
  %67 = icmp eq %"class.spvtools::opt::Instruction"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN8spvtools3opt11InstructionC1EOS1_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.11"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 112
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 164703072086692425
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 112
  %20 = icmp ult i64 %19, 82351536043346212
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 164703072086692425, %14 ]
  %28 = mul i64 %27, 112
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.spvtools::opt::Instruction"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.spvtools::opt::Instruction"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 %9
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 %32
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %35 to i64
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"* dereferenceable(112) %1) #9
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 1
  %38 = ptrtoint %"class.spvtools::opt::Instruction"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %41 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.spvtools::opt::Instruction"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.spvtools::opt::Instruction"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.spvtools::opt::Instruction"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 -1
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 -1
  tail call void @_ZN8spvtools3opt11InstructionC1EOS1_(%"class.spvtools::opt::Instruction"* %48, %"class.spvtools::opt::Instruction"* dereferenceable(112) %49) #9
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.spvtools::opt::Instruction"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.spvtools::opt::Instruction"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.spvtools::opt::Instruction"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.spvtools::opt::Instruction"*
  %60 = icmp eq %"class.spvtools::opt::Instruction"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.spvtools::opt::Instruction"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 -1
  %64 = bitcast %"class.spvtools::opt::Instruction"* %63 to void (%"class.spvtools::opt::Instruction"*)***
  %65 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %64, align 8
  %66 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %65, align 8
  tail call void %66(%"class.spvtools::opt::Instruction"* %63) #9
  %67 = icmp eq %"class.spvtools::opt::Instruction"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 17, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 1
  %8 = bitcast %"class.spvtools::opt::IRContext"** %6 to i8*
  %9 = bitcast %"class.spvtools::opt::IRContext"** %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 20, i1 false)
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #9
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 48
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %62, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %19, 384307168202282325
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #10
  %27 = bitcast i8* %26 to %"struct.spvtools::opt::Operand"*
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %29 = bitcast %"struct.spvtools::opt::Operand"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %27, i64 %19
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %31, %"struct.spvtools::opt::Operand"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %34 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %33, align 8
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %36 = bitcast %"struct.spvtools::opt::Operand"** %28 to i64*
  %37 = ptrtoint i8* %26 to i64
  %38 = icmp eq %"struct.spvtools::opt::Operand"* %34, %35
  br i1 %38, label %60, label %39

39:                                               ; preds = %25, %39
  %40 = phi %"struct.spvtools::opt::Operand"* [ %56, %39 ], [ %27, %25 ]
  %41 = phi %"struct.spvtools::opt::Operand"* [ %55, %39 ], [ %34, %25 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 2
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 3, i64 0
  %51 = bitcast i32** %49 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %50, %"struct.std::__1::aligned_storage<4, 4>::type"** %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 4
  %53 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %46) #9
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 1
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 1
  %57 = icmp eq %"struct.spvtools::opt::Operand"* %55, %35
  br i1 %57, label %58, label %39

58:                                               ; preds = %39
  %59 = ptrtoint %"struct.spvtools::opt::Operand"* %56 to i64
  br label %60

60:                                               ; preds = %58, %25
  %61 = phi i64 [ %37, %25 ], [ %59, %58 ]
  store i64 %61, i64* %36, align 8
  br label %62

62:                                               ; preds = %2, %60
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 7
  tail call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.11"* %63, %"class.std::__1::vector.11"* dereferenceable(24) %64)
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 8
  %67 = bitcast %"class.spvtools::opt::DebugScope"* %66 to i64*
  %68 = bitcast %"class.spvtools::opt::DebugScope"* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.11"*, %"class.std::__1::vector.11"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.11"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  %4 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.11"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 112
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 164703072086692425
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #11
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #10
  %18 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  %19 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.spvtools::opt::Instruction"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.11"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* %22, %"class.spvtools::opt::Instruction"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %27 = bitcast %"class.spvtools::opt::Instruction"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %25, %26
  br i1 %29, label %40, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi %"class.spvtools::opt::Instruction"* [ %35, %32 ], [ %25, %30 ]
  %34 = phi %"class.spvtools::opt::Instruction"* [ %36, %32 ], [ %31, %30 ]
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"* dereferenceable(112) %33) #9
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 1
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 1
  %37 = icmp eq %"class.spvtools::opt::Instruction"* %35, %26
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"class.spvtools::opt::Instruction"* %36 to i64
  br label %40

40:                                               ; preds = %38, %16
  %41 = phi i64 [ %39, %38 ], [ %28, %16 ]
  store i64 %41, i64* %27, align 8
  br label %42

42:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.0"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.0"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.0"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.0"* nonnull %8, i32* %15, i32* %17) #9
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #9
  %20 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.0"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #11
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #10
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #9
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.0"* null, %"class.std::__1::vector.0"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.0"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.0"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #10
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.0"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.0"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.0"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.0"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.0"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.0"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools4LogfIJRK6SpvOp_EEEvRKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS8_EEES6_S8_SB_S8_DpOT_(%"class.std::__1::function"* dereferenceable(32), i32, i8*, %struct.spv_position_t* dereferenceable(24), i8*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat {
  %7 = alloca [256 x i8], align 16
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 256, i1 false)
  %9 = load i32, i32* %5, align 4
  %10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %8, i64 256, i8* %4, i32 %9) #9
  %11 = icmp ult i32 %10, 256
  br i1 %11, label %12, label %22

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 2
  %14 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %14, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %54

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 1, i32 0
  %20 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 0
  call void %20(%"union.std::__1::__function::__policy_storage"* %21, i32 %1, i8* %2, %struct.spv_position_t* dereferenceable(24) %3, i8* nonnull %8) #9
  br label %54

22:                                               ; preds = %6
  %23 = icmp sgt i32 %10, -1
  br i1 %23, label %24, label %44

24:                                               ; preds = %22
  %25 = add nuw i32 %10, 1
  %26 = zext i32 %25 to i64
  %27 = tail call i8* @_Znwm(i64 %26) #10
  %28 = ptrtoint i8* %27 to i64
  %29 = sub i64 %26, %28
  %30 = getelementptr i8, i8* %27, i64 %29
  %31 = ptrtoint i8* %30 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %27, i8 0, i64 %31, i1 false) #9
  %32 = load i32, i32* %5, align 4
  %33 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %27, i64 %26, i8* %4, i32 %32) #9
  %34 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 2
  %35 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %35, i64 0, i32 2
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 1, i32 0
  %41 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 0
  tail call void %41(%"union.std::__1::__function::__policy_storage"* %42, i32 %1, i8* %2, %struct.spv_position_t* dereferenceable(24) %3, i8* nonnull %27) #9
  br label %43

43:                                               ; preds = %39, %24
  tail call void @_ZdlPv(i8* nonnull %27) #10
  br label %54

44:                                               ; preds = %22
  %45 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 2
  %46 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %46, i64 0, i32 2
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 1, i32 0
  %52 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 0
  tail call void %52(%"union.std::__1::__function::__policy_storage"* %53, i32 %1, i8* %2, %struct.spv_position_t* dereferenceable(24) %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %54

54:                                               ; preds = %50, %44, %43, %18, %12
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !4}
!9 = distinct !{!9, !4}
!10 = distinct !{!10, !4}
