; ModuleID = '../../third_party/blink/renderer/platform/bindings/v8_per_isolate_data.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/v8_per_isolate_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.13", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.40", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.232", %"class.std::__1::unique_ptr.243", %"class.blink::Persistent.249", %"class.blink::Persistent.251", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8*, %"class.v8::Eternal" }
%"class.v8::Eternal" = type { %"class.v8::Template"* }
%"class.v8::Template" = type { i8 }
%"class.WTF::HashMap.13" = type { %"class.WTF::HashTable.14" }
%"class.WTF::HashTable.14" = type <{ %"struct.WTF::KeyValuePair.17"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.17" = type { i8*, %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.v8::Eternal.18"*, i32, i32 }
%"class.v8::Eternal.18" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.29", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.24", i8* }
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type { %"class.WTF::StringImpl"*, i64 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.29" = type { %"class.v8::PersistentValueMapBase.30" }
%"class.v8::PersistentValueMapBase.30" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.31", i8* }
%"class.WTF::HashMap.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"struct.WTF::KeyValuePair.35"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.35" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.313", %"class.WTF::String", %"class.std::__1::unique_ptr.315" }
%"class.WTF::RefCounted.313" = type { %"class.base::RefCounted.314" }
%"class.base::RefCounted.314" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.329", %"class.WTF::Vector.335", i8, i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.WTF::Vector.321"* }
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.323", [32 x i8] }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.43" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.43" = type { %"class.WTF::HashTable.44" }
%"class.WTF::HashTable.44" = type <{ %"struct.WTF::KeyValuePair.47"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.47" = type { i8*, %"class.v8::Eternal.342" }
%"class.v8::Eternal.342" = type { %"class.v8::Private"* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.269", %class.scoped_refptr.272, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.269" = type { %"class.v8::Persistent.270" }
%"class.v8::Persistent.270" = type { %"class.v8::PersistentBase.271" }
%"class.v8::PersistentBase.271" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.272 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent.273" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.279" }
%"class.WTF::HashMap.279" = type { %"class.WTF::HashTable.280" }
%"class.WTF::HashTable.280" = type <{ %"struct.WTF::KeyValuePair.282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.282" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.51", i32, [4 x i8], %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.228", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.167", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist.112"* }
%"class.blink::Worklist.112" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.87" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.147", %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.161", [4 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149", %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { i64 }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { float }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.170", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.179" }
%"class.WTF::Vector.179" = type { %"class.WTF::VectorBuffer.180" }
%"class.WTF::VectorBuffer.180" = type { %"class.WTF::VectorBufferBase.181" }
%"class.WTF::VectorBufferBase.181" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196" }
%"class.WTF::VectorBufferBase.196" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.209" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.98"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.105"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.112"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.119"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.262" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__cxx_atomic_impl.230" }
%"struct.std::__1::__cxx_atomic_impl.230" = type { %"struct.std::__1::__cxx_atomic_base_impl.231" }
%"struct.std::__1::__cxx_atomic_base_impl.231" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.235 }
%class.scoped_refptr.235 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.236" }
%"struct.std::__1::atomic.236" = type { %"struct.std::__1::__atomic_base.237" }
%"struct.std::__1::__atomic_base.237" = type { %"struct.std::__1::__atomic_base.238" }
%"struct.std::__1::__atomic_base.238" = type { %"struct.std::__1::__cxx_atomic_impl.239" }
%"struct.std::__1::__cxx_atomic_impl.239" = type { %"struct.std::__1::__cxx_atomic_base_impl.240" }
%"struct.std::__1::__cxx_atomic_base_impl.240" = type { i32 }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.249" = type { %"class.blink::PersistentBase.250" }
%"class.blink::PersistentBase.250" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.251" = type { %"class.blink::PersistentBase.252" }
%"class.blink::PersistentBase.252" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.257" }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.259" }
%"class.WTF::VectorBufferBase.259" = type { %"struct.std::__1::pair.260"*, i32, i32 }
%"struct.std::__1::pair.260" = type { %"class.blink::UntracedMember", %"class.blink::Member.311" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.287" }>
%"class.base::RefCountedThreadSafe.287" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.287", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::Thread" = type { i32 (...)** }
%"struct.std::__1::default_delete.38" = type { i8 }
%"class.gin::V8IdleTaskRunner" = type { i32 (...)** }
%"class.v8::Value" = type { i8 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Object" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.302 }
%union.anon.302 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::Data" = type { i8 }
%"class.base::span.304" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.base::CheckedContiguousIterator" = type { i8**, i8**, i8** }
%"class.v8::String" = type { i8 }
%"class.v8::ExtensionConfiguration" = type { i32, i8** }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.blink::ExecutionContext" = type opaque
%"class.v8::internal::Isolate" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.v8::Global" = type { %"class.v8::PersistentBase.347" }
%"class.v8::PersistentBase.347" = type { %"class.v8::String"* }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_ = comdat any

$_ZN5blink14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_ = comdat any

$_ZN5blink14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_16V8PerIsolateData20GarbageCollectedDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNKSt3__114default_deleteIN5blink11StringCacheEEclEPS2_ = comdat any

$_ZN2v822PersistentValueMapBaseIPN5blink18ParkableStringImplENS_6StringENS1_28ParkableStringCacheMapTraitsEE5ClearEv = comdat any

$_ZN2v822PersistentValueMapBaseIPN3WTF10StringImplENS_6StringEN5blink20StringCacheMapTraitsEE5ClearEv = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS2_S7_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS8_jSK_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E4findERKS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v87EternalINS2_4NameEEEEEmm = comdat any

$_ZNK4base25CheckedContiguousIteratorIKPKcEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKPKcEppEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E6insertINS_17HashMapTranslatorISJ_SE_S9_EERS2_SA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E8RehashToEPSB_jSL_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E16LookupForWritingERKS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11ScriptStateEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11ScriptStateEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11ScriptStateEE7GetNameEPKv = comdat any

$_ZN5blink14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_11ScriptStateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11ScriptStateEE5IndexEvE13gc_info_index = comdat any

@_ZN5blinkL30g_main_thread_per_isolate_dataE = internal unnamed_addr global %"class.blink::V8PerIsolateData"* null, align 8
@.str = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/bindings/v8_per_isolate_data.cc\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"IsMainThread()\00", align 1
@.str.2 = private unnamed_addr constant [66 x i8] c"v8_context_snapshot_mode_ == V8ContextSnapshotMode::kTakeSnapshot\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"!ScriptForbiddenScope::IsScriptForbidden()\00", align 1
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvN2v87EternalINS4_8TemplateEEEEEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const void *, v8::Eternal<v8::Template> >]\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v87EternalINS1_4NameEEEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = v8::Eternal<v8::Name>]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvNS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [144 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const void *, WTF::Vector<v8::Eternal<v8::Name>, 0, WTF::PartitionAllocator> >]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11ScriptStateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11ScriptStateEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11ScriptStateEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11ScriptStateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4base12OnceCallbackIFvvEEEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = base::OnceCallback<void ()>]\00", align 1

@_ZN5blink16V8PerIsolateDataC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_21V8ContextSnapshotModeE = hidden unnamed_addr alias void (%"class.blink::V8PerIsolateData"*, %"class.base::SingleThreadTaskRunner"*, i32), void (%"class.blink::V8PerIsolateData"*, %"class.base::SingleThreadTaskRunner"*, i32)* @_ZN5blink16V8PerIsolateDataC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_21V8ContextSnapshotModeE
@_ZN5blink16V8PerIsolateDataC1ENS0_21V8ContextSnapshotModeE = hidden unnamed_addr alias void (%"class.blink::V8PerIsolateData"*, i32), void (%"class.blink::V8PerIsolateData"*, i32)* @_ZN5blink16V8PerIsolateDataC2ENS0_21V8ContextSnapshotModeE
@_ZN5blink16V8PerIsolateDataD1Ev = hidden unnamed_addr alias void (%"class.blink::V8PerIsolateData"*), void (%"class.blink::V8PerIsolateData"*)* @_ZN5blink16V8PerIsolateDataD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::Isolate"* @_ZN5blink17MainThreadIsolateEv() local_unnamed_addr #0 {
  %1 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** @_ZN5blinkL30g_main_thread_per_isolate_dataE, align 8
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %1, i64 0, i32 1, i32 1
  %3 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2, align 8
  ret %"class.v8::Isolate"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** @_ZN5blinkL30g_main_thread_per_isolate_dataE, align 8
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %1, i64 0, i32 1, i32 1
  %3 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2, align 8
  ret %"class.v8::Isolate"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateDataC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_21V8ContextSnapshotModeE(%"class.blink::V8PerIsolateData"*, %"class.base::SingleThreadTaskRunner"*, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 0
  store i32 %2, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %1, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %3, %7
  %11 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  tail call void @_ZN3gin13IsolateHolderC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_10AccessModeENS0_20AllowAtomicsWaitModeENS0_11IsolateTypeENS0_19IsolateCreationModeE(%"class.gin::IsolateHolder"* %5, %"class.base::SingleThreadTaskRunner"* %1, i32 0, i32 %13, i32 %16, i32 0) #10
  %17 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2
  %18 = bitcast %"class.WTF::HashMap"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #10
  %19 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3
  %20 = bitcast %"class.WTF::HashMap"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #10
  %21 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4
  %22 = bitcast %"class.WTF::HashMap.13"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #10
  %23 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1, i32 1
  %24 = bitcast %"class.v8::Isolate"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = tail call noalias i8* @malloc(i64 96) #10
  %27 = bitcast i8* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 20, i1 false) #10
  %29 = getelementptr inbounds i8, i8* %26, i64 32
  %30 = getelementptr inbounds i8, i8* %26, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #10
  %31 = bitcast i8* %30 to i64*
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %26, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 20, i1 false) #10
  %33 = getelementptr inbounds i8, i8* %26, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #10
  %34 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %35 = bitcast %"class.blink::StringCache"** %34 to i8**
  store i8* %26, i8** %35, align 8
  %36 = tail call noalias i8* @malloc(i64 32) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #10
  %37 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = bitcast %"class.blink::V8PrivateProperty"** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 7
  %40 = bitcast %"class.blink::Persistent"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #10
  %41 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 8
  store i8 1, i8* %41, align 8
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 9
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 10
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11
  %45 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 15
  %46 = bitcast %"class.WTF::Vector.232"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 56, i1 false)
  %47 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #10
  %48 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %47, i64 0, i32 0
  tail call void @_ZN5blink16RuntimeCallStatsC1EPKN4base9TickClockE(%"class.blink::RuntimeCallStats"* %45, %"class.base::TickClock"* %48) #10
  %49 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 18
  store i64 0, i64* %49, align 8
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %23, align 8
  tail call void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"* %50) #10
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %23, align 8
  tail call void @_ZN2v87Isolate28AddBeforeCallEnteredCallbackEPFvPS0_E(%"class.v8::Isolate"* %51, void (%"class.v8::Isolate"*)* nonnull @_ZN5blinkL25BeforeCallEnteredCallbackEPN2v87IsolateE) #10
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %23, align 8
  tail call void @_ZN2v87Isolate30AddMicrotasksCompletedCallbackEPFvPS0_PvES2_(%"class.v8::Isolate"* %52, void (%"class.v8::Isolate"*, i8*)* nonnull @_ZN5blinkL27MicrotasksCompletedCallbackEPN2v87IsolateEPv, i8* null) #10
  %53 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  br i1 %53, label %54, label %55

54:                                               ; preds = %10
  store %"class.blink::V8PerIsolateData"* %0, %"class.blink::V8PerIsolateData"** @_ZN5blinkL30g_main_thread_per_isolate_dataE, align 8
  br label %55

55:                                               ; preds = %54, %10
  br i1 %6, label %64, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.287", %"class.base::RefCountedThreadSafe.287"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.287", %"class.base::RefCountedThreadSafe.287"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe.287"* %62 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %63) #10
  br label %64

64:                                               ; preds = %55, %56, %61
  ret void
}

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #2

declare void @_ZN3gin13IsolateHolderC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_10AccessModeENS0_20AllowAtomicsWaitModeENS0_11IsolateTypeENS0_19IsolateCreationModeE(%"class.gin::IsolateHolder"*, %"class.base::SingleThreadTaskRunner"*, i32, i32, i32, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallStatsC1EPKN4base9TickClockE(%"class.blink::RuntimeCallStats"*, %"class.base::TickClock"*) unnamed_addr #2

declare void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v87Isolate28AddBeforeCallEnteredCallbackEPFvPS0_E(%"class.v8::Isolate"*, void (%"class.v8::Isolate"*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL25BeforeCallEnteredCallbackEPN2v87IsolateE(%"class.v8::Isolate"* nocapture readnone) #1 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %2 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %1
  %11 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #10
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i32* [ %11, %10 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %1 ]
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0)) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %12, %16
  ret void
}

declare void @_ZN2v87Isolate30AddMicrotasksCompletedCallbackEPFvPS0_PvES2_(%"class.v8::Isolate"*, void (%"class.v8::Isolate"*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL27MicrotasksCompletedCallbackEPN2v87IsolateEPv(%"class.v8::Isolate"*, i8* nocapture readnone) #1 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %5 = add i64 %4, 8
  %6 = inttoptr i64 %5 to %"class.blink::V8PerIsolateData"**
  %7 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %7, i64 0, i32 11
  %9 = bitcast %"class.WTF::Vector.232"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 0, i64* %9 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %7, i64 0, i32 11, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %7, i64 0, i32 11, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  store i32 0, i32* %12, align 4
  %14 = inttoptr i64 %10 to %"class.base::OnceCallback"*
  %15 = zext i32 %13 to i64
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 %15
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %20 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  br label %32

22:                                               ; preds = %32, %2
  %23 = icmp eq i64 %10, 0
  br i1 %23, label %43, label %24, !prof !2

24:                                               ; preds = %22
  br i1 %17, label %30, label %25, !prof !3

25:                                               ; preds = %24, %25
  %26 = phi %"class.base::OnceCallback"* [ %28, %25 ], [ %14, %24 ]
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %26, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %27) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %26, i64 1
  %29 = icmp eq %"class.base::OnceCallback"* %28, %16
  br i1 %29, label %30, label %25

30:                                               ; preds = %25, %24
  %31 = inttoptr i64 %10 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %31) #10
  br label %43

32:                                               ; preds = %32, %18
  %33 = phi %"class.base::OnceCallback"* [ %14, %18 ], [ %41, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback"* %33 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %37 = inttoptr i64 %36 to %"class.base::internal::BindStateBase"*
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %37, i64 0, i32 1
  %39 = bitcast void ()** %38 to void (%"class.base::internal::BindStateBase"*)**
  %40 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %39, align 8
  call void %40(%"class.base::internal::BindStateBase"* %37) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %33, i64 1
  %42 = icmp eq %"class.base::OnceCallback"* %41, %16
  br i1 %42, label %22, label %32

43:                                               ; preds = %22, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateDataC2ENS0_21V8ContextSnapshotModeE(%"class.blink::V8PerIsolateData"*, i32) unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1
  %9 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #10
  %10 = bitcast %"class.blink::Thread"* %9 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %11 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %11, i64 3
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %12, align 8
  %14 = tail call %"class.base::SingleThreadTaskRunner"* %13(%"class.blink::Thread"* %9) #10
  tail call void @_ZN3gin13IsolateHolderC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_10AccessModeENS0_20AllowAtomicsWaitModeENS0_11IsolateTypeENS0_19IsolateCreationModeE(%"class.gin::IsolateHolder"* %8, %"class.base::SingleThreadTaskRunner"* %14, i32 0, i32 1, i32 0, i32 1) #10
  %15 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2
  %16 = bitcast %"class.WTF::HashMap"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #10
  %17 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3
  %18 = bitcast %"class.WTF::HashMap"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #10
  %19 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4
  %20 = bitcast %"class.WTF::HashMap.13"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #10
  %21 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1, i32 1
  %22 = bitcast %"class.v8::Isolate"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = tail call noalias i8* @malloc(i64 96) #10
  %25 = bitcast i8* %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #10
  %27 = getelementptr inbounds i8, i8* %24, i64 32
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #10
  %29 = bitcast i8* %28 to i64*
  store i64 %23, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 20, i1 false) #10
  %31 = getelementptr inbounds i8, i8* %24, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  %32 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %33 = bitcast %"class.blink::StringCache"** %32 to i8**
  store i8* %24, i8** %33, align 8
  %34 = tail call noalias i8* @malloc(i64 32) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #10
  %35 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = bitcast %"class.blink::V8PrivateProperty"** %35 to i8**
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 7
  %38 = bitcast %"class.blink::Persistent"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #10
  %39 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 8
  store i8 1, i8* %39, align 8
  %40 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 9
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 10
  store i8 0, i8* %41, align 2
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11
  %43 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 15
  %44 = bitcast %"class.WTF::Vector.232"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 56, i1 false)
  %45 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #10
  %46 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %45, i64 0, i32 0
  tail call void @_ZN5blink16RuntimeCallStatsC1EPKN4base9TickClockE(%"class.blink::RuntimeCallStats"* %43, %"class.base::TickClock"* %46) #10
  %47 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 18
  store i64 0, i64* %47, align 8
  %48 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  br i1 %48, label %52, label %49

49:                                               ; preds = %2
  %50 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 109, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #10
  br label %52

52:                                               ; preds = %2, %49
  %53 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %54, align 8
  %55 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %56 = load i32, i32* %7, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  store i8* null, i8** %54, align 8
  br label %68

59:                                               ; preds = %52
  %60 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %56) #10
  %61 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i8* %60, i8* %61) #10
  %62 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  store i8* %63, i8** %54, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %5) #10
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #10
  br label %68

68:                                               ; preds = %58, %59, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  store %"class.blink::V8PerIsolateData"* %0, %"class.blink::V8PerIsolateData"** @_ZN5blinkL30g_main_thread_per_isolate_dataE, align 8
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateDataD2Ev(%"class.blink::V8PerIsolateData"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 14, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 13, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #10
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !3

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #10
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  %48 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %49 = load %"class.blink::V8PerIsolateData::Data"*, %"class.blink::V8PerIsolateData::Data"** %48, align 8
  store %"class.blink::V8PerIsolateData::Data"* null, %"class.blink::V8PerIsolateData::Data"** %48, align 8
  %50 = icmp eq %"class.blink::V8PerIsolateData::Data"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::V8PerIsolateData::Data"* %49 to void (%"class.blink::V8PerIsolateData::Data"*)***
  %53 = load void (%"class.blink::V8PerIsolateData::Data"*)**, void (%"class.blink::V8PerIsolateData::Data"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::V8PerIsolateData::Data"*)*, void (%"class.blink::V8PerIsolateData::Data"*)** %53, i64 1
  %55 = load void (%"class.blink::V8PerIsolateData::Data"*)*, void (%"class.blink::V8PerIsolateData::Data"*)** %54, align 8
  tail call void %55(%"class.blink::V8PerIsolateData::Data"* nonnull %49) #10
  br label %56

56:                                               ; preds = %47, %51
  %57 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11
  %58 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %58, align 8
  %60 = icmp eq %"class.base::OnceCallback"* %59, null
  br i1 %60, label %79, label %61, !prof !2

61:                                               ; preds = %56
  %62 = bitcast %"class.base::OnceCallback"* %59 to i8*
  %63 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %77, label %66, !prof !3

66:                                               ; preds = %61
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %59, i64 %67
  br label %69

69:                                               ; preds = %69, %66
  %70 = phi %"class.base::OnceCallback"* [ %72, %69 ], [ %59, %66 ]
  %71 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %70, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %71) #10
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %70, i64 1
  %73 = icmp eq %"class.base::OnceCallback"* %72, %68
  br i1 %73, label %74, label %69

74:                                               ; preds = %69
  store i32 0, i32* %63, align 4
  %75 = bitcast %"class.WTF::Vector.232"* %57 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %61
  %78 = phi i8* [ %76, %74 ], [ %62, %61 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %78) #10
  store %"class.base::OnceCallback"* null, %"class.base::OnceCallback"** %58, align 8
  br label %79

79:                                               ; preds = %56, %77
  %80 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  %81 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %80, align 8
  %82 = icmp eq %"class.blink::PersistentNode"* %81, null
  br i1 %82, label %102, label %83

83:                                               ; preds = %79
  %84 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %85 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %84, i64 0, i32 1
  %86 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %85) #10
  %87 = icmp eq i8* %86, null
  br i1 %87, label %88, label %90, !prof !3

88:                                               ; preds = %83
  %89 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %85, i8* %89) #10
  br label %90

90:                                               ; preds = %88, %83
  %91 = phi i8* [ %89, %88 ], [ %86, %83 ]
  %92 = bitcast i8* %91 to %"class.blink::ThreadState"**
  %93 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %94, align 8
  %96 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %80, align 8
  %97 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %95, i64 0, i32 0, i32 0
  %98 = bitcast %"class.blink::PersistentRegion"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::PersistentNode"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %96, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %101, align 8
  store %"class.blink::PersistentNode"* %96, %"class.blink::PersistentNode"** %97, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %80, align 8
  br label %102

102:                                              ; preds = %79, %90
  %103 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %104 = load %"class.blink::V8PrivateProperty"*, %"class.blink::V8PrivateProperty"** %103, align 8
  store %"class.blink::V8PrivateProperty"* null, %"class.blink::V8PrivateProperty"** %103, align 8
  %105 = icmp eq %"class.blink::V8PrivateProperty"* %104, null
  br i1 %105, label %120, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::V8PrivateProperty", %"class.blink::V8PrivateProperty"* %104, i64 0, i32 1, i32 0, i32 0
  %108 = load %"struct.WTF::KeyValuePair.47"*, %"struct.WTF::KeyValuePair.47"** %107, align 8
  %109 = icmp eq %"struct.WTF::KeyValuePair.47"* %108, null
  br i1 %109, label %112, label %110, !prof !2

110:                                              ; preds = %106
  %111 = bitcast %"struct.WTF::KeyValuePair.47"* %108 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %111) #10
  store %"struct.WTF::KeyValuePair.47"* null, %"struct.WTF::KeyValuePair.47"** %107, align 8
  br label %112

112:                                              ; preds = %110, %106
  %113 = getelementptr inbounds %"class.blink::V8PrivateProperty", %"class.blink::V8PrivateProperty"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"class.v8::Private"*, %"class.v8::Private"** %113, align 8
  %115 = icmp eq %"class.v8::Private"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = bitcast %"class.v8::Private"* %114 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %117) #10
  br label %118

118:                                              ; preds = %116, %112
  %119 = bitcast %"class.blink::V8PrivateProperty"* %104 to i8*
  tail call void @free(i8* %119) #10
  br label %120

120:                                              ; preds = %102, %118
  %121 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 5
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %122, align 8
  store %"class.blink::StringCache"* null, %"class.blink::StringCache"** %122, align 8
  %124 = icmp eq %"class.blink::StringCache"* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %120
  %126 = bitcast %"class.std::__1::unique_ptr.21"* %121 to %"struct.std::__1::default_delete.38"*
  tail call void @_ZNKSt3__114default_deleteIN5blink11StringCacheEEclEPS2_(%"struct.std::__1::default_delete.38"* %126, %"class.blink::StringCache"* nonnull %123) #10
  br label %127

127:                                              ; preds = %120, %125
  %128 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4, i32 0, i32 0
  %129 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %128, align 8
  %130 = icmp eq %"struct.WTF::KeyValuePair.17"* %129, null
  br i1 %130, label %158, label %131, !prof !2

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4, i32 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %156, label %135

135:                                              ; preds = %131
  %136 = zext i32 %133 to i64
  br label %137

137:                                              ; preds = %153, %135
  %138 = phi i64 [ 0, %135 ], [ %154, %153 ]
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %129, i64 %138, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = icmp eq i8* %140, inttoptr (i64 -1 to i8*)
  br i1 %141, label %153, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %129, i64 %138, i32 1, i32 0, i32 0, i32 0
  %144 = load %"class.v8::Eternal.18"*, %"class.v8::Eternal.18"** %143, align 8
  %145 = icmp eq %"class.v8::Eternal.18"* %144, null
  %146 = bitcast %"class.v8::Eternal.18"* %144 to i8*
  br i1 %145, label %153, label %147, !prof !2

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %129, i64 %138, i32 1, i32 0, i32 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %152, label %151, !prof !3

151:                                              ; preds = %147
  store i32 0, i32* %148, align 4
  br label %152

152:                                              ; preds = %151, %147
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %146) #10
  store %"class.v8::Eternal.18"* null, %"class.v8::Eternal.18"** %143, align 8
  br label %153

153:                                              ; preds = %152, %142, %137
  %154 = add nuw nsw i64 %138, 1
  %155 = icmp eq i64 %154, %136
  br i1 %155, label %156, label %137

156:                                              ; preds = %153, %131
  %157 = bitcast %"struct.WTF::KeyValuePair.17"* %129 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %157) #10
  store %"struct.WTF::KeyValuePair.17"* null, %"struct.WTF::KeyValuePair.17"** %128, align 8
  br label %158

158:                                              ; preds = %127, %156
  %159 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3, i32 0, i32 0
  %160 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %159, align 8
  %161 = icmp eq %"struct.WTF::KeyValuePair"* %160, null
  br i1 %161, label %164, label %162, !prof !2

162:                                              ; preds = %158
  %163 = bitcast %"struct.WTF::KeyValuePair"* %160 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %163) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %159, align 8
  br label %164

164:                                              ; preds = %158, %162
  %165 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair"* %166, null
  br i1 %167, label %170, label %168, !prof !2

168:                                              ; preds = %164
  %169 = bitcast %"struct.WTF::KeyValuePair"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %169) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %165, align 8
  br label %170

170:                                              ; preds = %164, %168
  %171 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1
  tail call void @_ZN3gin13IsolateHolderD1Ev(%"class.gin::IsolateHolder"* %171) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gin13IsolateHolderD1Ev(%"class.gin::IsolateHolder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData10InitializeE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_21V8ContextSnapshotModeE(%"class.base::SingleThreadTaskRunner"*, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = tail call noalias i8* @malloc(i64 1224) #10
  %5 = bitcast i8* %4 to %"class.blink::V8PerIsolateData"*
  br i1 %3, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink16V8PerIsolateDataC2ENS0_21V8ContextSnapshotModeE(%"class.blink::V8PerIsolateData"* %5, i32 0)
  br label %13

7:                                                ; preds = %2
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %0, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %7, %9
  tail call void @_ZN5blink16V8PerIsolateDataC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_21V8ContextSnapshotModeE(%"class.blink::V8PerIsolateData"* %5, %"class.base::SingleThreadTaskRunner"* %0, i32 %1)
  br label %13

13:                                               ; preds = %12, %6
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  %15 = bitcast i8* %14 to %"class.v8::Isolate"**
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %15, align 8
  %17 = ptrtoint %"class.v8::Isolate"* %16 to i64
  %18 = add i64 %17, 8
  %19 = inttoptr i64 %18 to i8**
  store i8* %4, i8** %19, align 8
  %20 = icmp eq %"class.base::SingleThreadTaskRunner"* %0, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.287", %"class.base::RefCountedThreadSafe.287"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.287", %"class.base::RefCountedThreadSafe.287"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe.287"* %27 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %28) #10
  br label %29

29:                                               ; preds = %13, %21, %26
  ret %"class.v8::Isolate"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData15EnableIdleTasksEPN2v87IsolateENSt3__110unique_ptrIN3gin16V8IdleTaskRunnerENS4_14default_deleteIS7_EEEE(%"class.v8::Isolate"*, %"class.gin::V8IdleTaskRunner"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %4 = add i64 %3, 8
  %5 = inttoptr i64 %4 to %"class.blink::V8PerIsolateData"**
  %6 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %6, i64 0, i32 1
  tail call void @_ZN3gin13IsolateHolder15EnableIdleTasksENSt3__110unique_ptrINS_16V8IdleTaskRunnerENS1_14default_deleteIS3_EEEE(%"class.gin::IsolateHolder"* %7, %"class.gin::V8IdleTaskRunner"* %1) #10
  ret void
}

declare void @_ZN3gin13IsolateHolder15EnableIdleTasksENSt3__110unique_ptrINS_16V8IdleTaskRunnerENS1_14default_deleteIS3_EEEE(%"class.gin::IsolateHolder"*, %"class.gin::V8IdleTaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData15WillBeDestroyedEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1 align 2 {
  %2 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %3 = add i64 %2, 8
  %4 = inttoptr i64 %3 to %"class.blink::V8PerIsolateData"**
  %5 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 12, i32 0, i32 0, i32 0
  %7 = load %"class.blink::V8PerIsolateData::Data"*, %"class.blink::V8PerIsolateData::Data"** %6, align 8
  store %"class.blink::V8PerIsolateData::Data"* null, %"class.blink::V8PerIsolateData::Data"** %6, align 8
  %8 = icmp eq %"class.blink::V8PerIsolateData::Data"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::V8PerIsolateData::Data"* %7 to void (%"class.blink::V8PerIsolateData::Data"*)***
  %11 = load void (%"class.blink::V8PerIsolateData::Data"*)**, void (%"class.blink::V8PerIsolateData::Data"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::V8PerIsolateData::Data"*)*, void (%"class.blink::V8PerIsolateData::Data"*)** %11, i64 1
  %13 = load void (%"class.blink::V8PerIsolateData::Data"*)*, void (%"class.blink::V8PerIsolateData::Data"*)** %12, align 8
  tail call void %13(%"class.blink::V8PerIsolateData::Data"* nonnull %7) #10
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 11
  %16 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 11, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 11, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %15, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %24, align 8
  %26 = zext i32 %21 to i64
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %25, i64 %26
  br label %28

28:                                               ; preds = %28, %23
  %29 = phi %"class.base::OnceCallback"* [ %31, %28 ], [ %25, %23 ]
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %29, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %30) #10
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %29, i64 1
  %32 = icmp eq %"class.base::OnceCallback"* %31, %27
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  store i32 0, i32* %20, align 4
  br label %34

34:                                               ; preds = %33, %19
  %35 = bitcast %"class.WTF::Vector.232"* %15 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.WTF::Vector.232"* %15 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store i32 0, i32* %16, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %36) #10
  br label %38

38:                                               ; preds = %14, %34
  %39 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 13, i32 0, i32 0
  %40 = load %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::V8PerIsolateData::GarbageCollectedData"** %39, align 8
  %41 = icmp eq %"class.blink::V8PerIsolateData::GarbageCollectedData"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::V8PerIsolateData::GarbageCollectedData"* %40 to void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*)***
  %44 = load void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*)**, void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*)*, void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*)** %44, i64 2
  %46 = load void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*)*, void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*)** %45, align 8
  tail call void %46(%"class.blink::V8PerIsolateData::GarbageCollectedData"* nonnull %40) #10
  store %"class.blink::V8PerIsolateData::GarbageCollectedData"* null, %"class.blink::V8PerIsolateData::GarbageCollectedData"** %39, align 8
  %47 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 13, i32 0, i32 1, i32 0
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  %49 = icmp eq %"class.blink::PersistentNode"* %48, null
  br i1 %49, label %69, label %50

50:                                               ; preds = %42
  %51 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %52 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %51, i64 0, i32 1
  %53 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %52) #10
  %54 = icmp eq i8* %53, null
  br i1 %54, label %55, label %57, !prof !3

55:                                               ; preds = %50
  %56 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %52, i8* %56) #10
  br label %57

57:                                               ; preds = %55, %50
  %58 = phi i8* [ %56, %55 ], [ %53, %50 ]
  %59 = bitcast i8* %58 to %"class.blink::ThreadState"**
  %60 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %61, align 8
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %62, i64 0, i32 0, i32 0
  %65 = bitcast %"class.blink::PersistentRegion"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.blink::PersistentNode"* %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %63, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %68, align 8
  store %"class.blink::PersistentNode"* %63, %"class.blink::PersistentNode"** %64, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %47, align 8
  br label %69

69:                                               ; preds = %38, %57, %42
  tail call void @_ZN5blink16V8PerIsolateData24ClearScriptRegexpContextEv(%"class.blink::V8PerIsolateData"* %5)
  %70 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %71 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %70, i64 0, i32 1
  %72 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %71) #10
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %76, !prof !3

74:                                               ; preds = %69
  %75 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %71, i8* %75) #10
  br label %76

76:                                               ; preds = %69, %74
  %77 = phi i8* [ %75, %74 ], [ %72, %69 ]
  %78 = bitcast i8* %77 to %"class.blink::ThreadState"**
  %79 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %78, align 8
  tail call void @_ZN5blink11ThreadState17DetachFromIsolateEv(%"class.blink::ThreadState"* %79) #10
  %80 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 14, i32 0, i32 0
  store %"class.blink::ActiveScriptWrappableManager"* null, %"class.blink::ActiveScriptWrappableManager"** %80, align 8
  %81 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 14, i32 0, i32 1, i32 0
  %82 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %81, align 8
  %83 = icmp eq %"class.blink::PersistentNode"* %82, null
  br i1 %83, label %103, label %84

84:                                               ; preds = %76
  %85 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %86 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %85, i64 0, i32 1
  %87 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %86) #10
  %88 = icmp eq i8* %87, null
  br i1 %88, label %89, label %91, !prof !3

89:                                               ; preds = %84
  %90 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %86, i8* %90) #10
  br label %91

91:                                               ; preds = %89, %84
  %92 = phi i8* [ %90, %89 ], [ %87, %84 ]
  %93 = bitcast i8* %92 to %"class.blink::ThreadState"**
  %94 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %95, align 8
  %97 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %81, align 8
  %98 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %96, i64 0, i32 0, i32 0
  %99 = bitcast %"class.blink::PersistentRegion"* %96 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.blink::PersistentNode"* %97 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %97, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %102, align 8
  store %"class.blink::PersistentNode"* %97, %"class.blink::PersistentNode"** %98, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %81, align 8
  br label %103

103:                                              ; preds = %76, %91
  %104 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 16
  %105 = load void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)** %104, align 8
  tail call void @_ZN2v87Isolate24RemoveGCPrologueCallbackEPFvPS0_NS_6GCTypeENS_15GCCallbackFlagsEE(%"class.v8::Isolate"* %0, void (%"class.v8::Isolate"*, i32, i32)* %105) #10
  %106 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 17
  %107 = load void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)** %106, align 8
  tail call void @_ZN2v87Isolate24RemoveGCEpilogueCallbackEPFvPS0_NS_6GCTypeENS_15GCCallbackFlagsEE(%"class.v8::Isolate"* %0, void (%"class.v8::Isolate"*, i32, i32)* %107) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData20ClearEndOfScopeTasksEv(%"class.blink::V8PerIsolateData"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11
  %3 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 %13
  br label %15

15:                                               ; preds = %15, %10
  %16 = phi %"class.base::OnceCallback"* [ %18, %15 ], [ %12, %10 ]
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %17) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 1
  %19 = icmp eq %"class.base::OnceCallback"* %18, %14
  br i1 %19, label %20, label %15

20:                                               ; preds = %15
  store i32 0, i32* %7, align 4
  br label %21

21:                                               ; preds = %20, %6
  %22 = bitcast %"class.WTF::Vector.232"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.WTF::Vector.232"* %2 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %23) #10
  br label %25

25:                                               ; preds = %1, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData24ClearScriptRegexpContextEv(%"class.blink::V8PerIsolateData"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  %4 = icmp eq %"class.blink::ScriptState"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink11ScriptState21DisposePerContextDataEv(%"class.blink::ScriptState"* nonnull %3) #10
  %6 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  tail call void @_ZN5blink11ScriptState17DissociateContextEv(%"class.blink::ScriptState"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  store %"class.blink::ScriptState"* null, %"class.blink::ScriptState"** %2, align 8
  %8 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #10
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #10
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  ret void
}

declare void @_ZN5blink11ThreadState17DetachFromIsolateEv(%"class.blink::ThreadState"*) local_unnamed_addr #2

declare void @_ZN2v87Isolate24RemoveGCPrologueCallbackEPFvPS0_NS_6GCTypeENS_15GCCallbackFlagsEE(%"class.v8::Isolate"*, void (%"class.v8::Isolate"*, i32, i32)*) local_unnamed_addr #2

declare void @_ZN2v87Isolate24RemoveGCEpilogueCallbackEPFvPS0_NS_6GCTypeENS_15GCCallbackFlagsEE(%"class.v8::Isolate"*, void (%"class.v8::Isolate"*, i32, i32)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData14SetGCCallbacksEPN2v87IsolateEPFvS3_NS1_6GCTypeENS1_15GCCallbackFlagsEES7_(%"class.blink::V8PerIsolateData"* nocapture, %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 16
  store void (%"class.v8::Isolate"*, i32, i32)* %2, void (%"class.v8::Isolate"*, i32, i32)** %5, align 8
  %6 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 17
  store void (%"class.v8::Isolate"*, i32, i32)* %3, void (%"class.v8::Isolate"*, i32, i32)** %6, align 8
  tail call void @_ZN2v87Isolate21AddGCPrologueCallbackEPFvPS0_NS_6GCTypeENS_15GCCallbackFlagsEES2_(%"class.v8::Isolate"* %1, void (%"class.v8::Isolate"*, i32, i32)* %2, i32 15) #10
  %7 = load void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)** %6, align 8
  tail call void @_ZN2v87Isolate21AddGCEpilogueCallbackEPFvPS0_NS_6GCTypeENS_15GCCallbackFlagsEES2_(%"class.v8::Isolate"* %1, void (%"class.v8::Isolate"*, i32, i32)* %7, i32 15) #10
  ret void
}

declare void @_ZN2v87Isolate21AddGCPrologueCallbackEPFvPS0_NS_6GCTypeENS_15GCCallbackFlagsEES2_(%"class.v8::Isolate"*, void (%"class.v8::Isolate"*, i32, i32)*, i32) local_unnamed_addr #2

declare void @_ZN2v87Isolate21AddGCEpilogueCallbackEPFvPS0_NS_6GCTypeENS_15GCCallbackFlagsEES2_(%"class.v8::Isolate"*, void (%"class.v8::Isolate"*, i32, i32)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData7DestroyEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2v87Isolate31RemoveBeforeCallEnteredCallbackEPFvPS0_E(%"class.v8::Isolate"* %0, void (%"class.v8::Isolate"*)* nonnull @_ZN5blinkL25BeforeCallEnteredCallbackEPN2v87IsolateE) #10
  tail call void @_ZN2v87Isolate33RemoveMicrotasksCompletedCallbackEPFvPS0_PvES2_(%"class.v8::Isolate"* %0, void (%"class.v8::Isolate"*, i8*)* nonnull @_ZN5blinkL27MicrotasksCompletedCallbackEPN2v87IsolateEPv, i8* null) #10
  %2 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %3 = add i64 %2, 8
  %4 = inttoptr i64 %3 to %"class.blink::V8PerIsolateData"**
  %5 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %8 = icmp eq %"class.blink::ScriptState"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN5blink11ScriptState21DisposePerContextDataEv(%"class.blink::ScriptState"* nonnull %7) #10
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %12 = load %"class.blink::V8PrivateProperty"*, %"class.blink::V8PrivateProperty"** %11, align 8
  store %"class.blink::V8PrivateProperty"* null, %"class.blink::V8PrivateProperty"** %11, align 8
  %13 = icmp eq %"class.blink::V8PrivateProperty"* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::V8PrivateProperty", %"class.blink::V8PrivateProperty"* %12, i64 0, i32 1, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.47"*, %"struct.WTF::KeyValuePair.47"** %15, align 8
  %17 = icmp eq %"struct.WTF::KeyValuePair.47"* %16, null
  br i1 %17, label %20, label %18, !prof !2

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair.47"* %16 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #10
  store %"struct.WTF::KeyValuePair.47"* null, %"struct.WTF::KeyValuePair.47"** %15, align 8
  br label %20

20:                                               ; preds = %18, %14
  %21 = getelementptr inbounds %"class.blink::V8PrivateProperty", %"class.blink::V8PrivateProperty"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.v8::Private"*, %"class.v8::Private"** %21, align 8
  %23 = icmp eq %"class.v8::Private"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.v8::Private"* %22 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %25) #10
  br label %26

26:                                               ; preds = %24, %20
  %27 = bitcast %"class.blink::V8PrivateProperty"* %12 to i8*
  tail call void @free(i8* %27) #10
  br label %28

28:                                               ; preds = %10, %26
  %29 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 5
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  tail call void @_ZN5blink11StringCache7DisposeEv(%"class.blink::StringCache"* %31) #10
  %32 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  store %"class.blink::StringCache"* null, %"class.blink::StringCache"** %30, align 8
  %33 = icmp eq %"class.blink::StringCache"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::unique_ptr.21"* %29 to %"struct.std::__1::default_delete.38"*
  tail call void @_ZNKSt3__114default_deleteIN5blink11StringCacheEEclEPS2_(%"struct.std::__1::default_delete.38"* %35, %"class.blink::StringCache"* nonnull %32) #10
  br label %36

36:                                               ; preds = %28, %34
  %37 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 2
  %38 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %37, i64 0, i32 0, i32 0
  %39 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %38, align 8
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 2, i32 0, i32 1
  %43 = bitcast %"struct.WTF::KeyValuePair"* %39 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #10
  %44 = bitcast %"class.WTF::HashMap"* %37 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %42, align 8
  %45 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %45, align 4
  br label %46

46:                                               ; preds = %36, %41
  %47 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 3
  %48 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %47, i64 0, i32 0, i32 0
  %49 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %48, align 8
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 3, i32 0, i32 1
  %53 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #10
  %54 = bitcast %"class.WTF::HashMap"* %47 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  store i32 0, i32* %52, align 8
  %55 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %5, i64 0, i32 3, i32 0, i32 2
  store i32 0, i32* %55, align 4
  br label %56

56:                                               ; preds = %46, %51
  %57 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  store %"class.blink::V8PerIsolateData"* null, %"class.blink::V8PerIsolateData"** @_ZN5blinkL30g_main_thread_per_isolate_dataE, align 8
  br label %59

59:                                               ; preds = %58, %56
  tail call void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"* %0) #10
  %60 = icmp eq %"class.blink::V8PerIsolateData"* %5, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  tail call void @_ZN5blink16V8PerIsolateDataD2Ev(%"class.blink::V8PerIsolateData"* nonnull %5) #10
  %62 = bitcast %"class.blink::V8PerIsolateData"* %5 to i8*
  tail call void @free(i8* %62) #10
  br label %63

63:                                               ; preds = %61, %59
  ret void
}

declare void @_ZN2v87Isolate31RemoveBeforeCallEnteredCallbackEPFvPS0_E(%"class.v8::Isolate"*, void (%"class.v8::Isolate"*)*) local_unnamed_addr #2

declare void @_ZN2v87Isolate33RemoveMicrotasksCompletedCallbackEPFvPS0_PvES2_(%"class.v8::Isolate"*, void (%"class.v8::Isolate"*, i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN5blink11ScriptState21DisposePerContextDataEv(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare void @_ZN5blink11StringCache7DisposeEv(%"class.blink::StringCache"*) local_unnamed_addr #2

declare void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.v8::Template"* @_ZN5blink16V8PerIsolateData14FindV8TemplateERKNS_15DOMWrapperWorldEPKv(%"class.blink::V8PerIsolateData"* nocapture readonly, %"class.blink::DOMWrapperWorld"* nocapture readonly dereferenceable(32), i8*) local_unnamed_addr #5 align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3
  %10 = select i1 %7, %"class.WTF::HashMap"* %8, %"class.WTF::HashMap"* %9
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %12, null
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  br i1 %13, label %61, label %16

16:                                               ; preds = %3
  %17 = add i32 %15, -1
  %18 = zext i32 %17 to i64
  %19 = lshr i64 %4, 8
  %20 = xor i64 %19, %4
  %21 = trunc i64 %20 to i32
  %22 = and i32 %17, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %23
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, %2
  br i1 %27, label %56, label %28

28:                                               ; preds = %16
  %29 = xor i32 %21, -1
  %30 = lshr i32 %21, 23
  %31 = add i32 %30, %29
  %32 = shl i32 %31, 12
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 7
  %35 = xor i32 %34, %33
  %36 = shl i32 %35, 2
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 20
  %39 = xor i32 %38, %37
  %40 = or i32 %39, 1
  %41 = zext i32 %40 to i64
  br label %42

42:                                               ; preds = %47, %28
  %43 = phi i8* [ %26, %28 ], [ %54, %47 ]
  %44 = phi i64 [ %23, %28 ], [ %51, %47 ]
  %45 = phi i64 [ 0, %28 ], [ %49, %47 ]
  %46 = icmp eq i8* %43, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %42
  %48 = icmp eq i64 %45, 0
  %49 = select i1 %48, i64 %41, i64 %45
  %50 = add i64 %49, %44
  %51 = and i64 %50, %18
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, %2
  br i1 %55, label %56, label %42

56:                                               ; preds = %47, %16
  %57 = phi %"struct.WTF::KeyValuePair"* [ %24, %16 ], [ %52, %47 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = zext i32 %15 to i64
  br label %64

61:                                               ; preds = %42, %56, %3
  %62 = zext i32 %15 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %62
  br label %64

64:                                               ; preds = %59, %61
  %65 = phi i64 [ %60, %59 ], [ %62, %61 ]
  %66 = phi %"struct.WTF::KeyValuePair"* [ %57, %59 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %65
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %66, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 1, i32 0
  %71 = load %"class.v8::Template"*, %"class.v8::Template"** %70, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi %"class.v8::Template"* [ %71, %69 ], [ null, %64 ]
  ret %"class.v8::Template"* %73
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap"* @_ZN5blink16V8PerIsolateData19SelectV8TemplateMapERKNS_15DOMWrapperWorldE(%"class.blink::V8PerIsolateData"* readnone, %"class.blink::DOMWrapperWorld"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3
  %8 = select i1 %5, %"class.WTF::HashMap"* %6, %"class.WTF::HashMap"* %7
  ret %"class.WTF::HashMap"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData13AddV8TemplateERKNS_15DOMWrapperWorldEPKvN2v85LocalINS6_8TemplateEEE(%"class.blink::V8PerIsolateData"*, %"class.blink::DOMWrapperWorld"* nocapture readonly dereferenceable(32), i8*, %"class.v8::Template"*) local_unnamed_addr #1 align 2 {
  %5 = alloca i8*, align 8
  %6 = alloca %"class.v8::Eternal", align 8
  store i8* %2, i8** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3
  %12 = select i1 %9, %"class.WTF::HashMap"* %10, %"class.WTF::HashMap"* %11
  %13 = bitcast %"class.v8::Eternal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1, i32 1
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %16 = bitcast %"class.v8::Template"* %3 to %"class.v8::Value"*
  %17 = tail call %"class.v8::Value"* @_ZN2v82V810EternalizeEPNS_7IsolateEPNS_5ValueE(%"class.v8::Isolate"* %15, %"class.v8::Value"* %16) #10
  %18 = bitcast %"class.v8::Eternal"* %6 to %"class.v8::Value"**
  store %"class.v8::Value"* %17, %"class.v8::Value"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0
  %20 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS2_S7_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %19, i8** nonnull dereferenceable(8) %5, %"class.v8::Eternal"* nonnull dereferenceable(8) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* nocapture readonly, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #10
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.302* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #10
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1, i32 1
  %13 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %14 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %13) #10
  %15 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %14, i64 0, i32 3
  %16 = bitcast %"class.base::TickClock"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %14, %"class.blink::RuntimeCallStats"** %18, align 8
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %22 = bitcast i64* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10
  %23 = bitcast %"class.base::TickClock"** %21 to i64*
  store i64 %17, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %14, i64 0, i32 2, i64 2
  %25 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %14, i64 0, i32 0
  %26 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %25, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %19, %"class.blink::RuntimeCallCounter"* %24, %"class.blink::RuntimeCallTimer"* %26) #10
  store %"class.blink::RuntimeCallTimer"* %19, %"class.blink::RuntimeCallTimer"** %25, align 8
  store i8 1, i8* %5, align 8
  br label %27

27:                                               ; preds = %3, %11
  %28 = ptrtoint %"struct.blink::WrapperTypeInfo"* %1 to i64
  %29 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %29, align 8
  %31 = icmp eq %"struct.WTF::KeyValuePair"* %30, null
  %32 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  br i1 %31, label %80, label %34

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  %36 = zext i32 %35 to i64
  %37 = lshr i64 %28, 8
  %38 = xor i64 %37, %28
  %39 = trunc i64 %38 to i32
  %40 = and i32 %35, %39
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"struct.blink::WrapperTypeInfo"* %1 to i8*
  %46 = icmp eq i8* %44, %45
  br i1 %46, label %75, label %47

47:                                               ; preds = %34
  %48 = xor i32 %39, -1
  %49 = lshr i32 %39, 23
  %50 = add i32 %49, %48
  %51 = shl i32 %50, 12
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 7
  %54 = xor i32 %53, %52
  %55 = shl i32 %54, 2
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 20
  %58 = xor i32 %57, %56
  %59 = or i32 %58, 1
  %60 = zext i32 %59 to i64
  br label %61

61:                                               ; preds = %66, %47
  %62 = phi i8* [ %44, %47 ], [ %73, %66 ]
  %63 = phi i64 [ %41, %47 ], [ %70, %66 ]
  %64 = phi i64 [ 0, %47 ], [ %68, %66 ]
  %65 = icmp eq i8* %62, null
  br i1 %65, label %80, label %66

66:                                               ; preds = %61
  %67 = icmp eq i64 %64, 0
  %68 = select i1 %67, i64 %60, i64 %64
  %69 = add i64 %68, %63
  %70 = and i64 %69, %36
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, %45
  br i1 %74, label %75, label %61

75:                                               ; preds = %66, %34
  %76 = phi %"struct.WTF::KeyValuePair"* [ %42, %34 ], [ %71, %66 ]
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = zext i32 %33 to i64
  br label %83

80:                                               ; preds = %61, %75, %27
  %81 = zext i32 %33 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %81
  br label %83

83:                                               ; preds = %80, %78
  %84 = phi i64 [ %79, %78 ], [ %81, %80 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %76, %78 ], [ %82, %80 ]
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %84
  %87 = icmp eq %"struct.WTF::KeyValuePair"* %85, %86
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1, i32 0
  %90 = bitcast %"class.v8::Template"** %89 to %"class.v8::FunctionTemplate"**
  %91 = load %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"** %90, align 8
  %92 = call zeroext i1 @_ZN2v816FunctionTemplate11HasInstanceENS_5LocalINS_5ValueEEE(%"class.v8::FunctionTemplate"* %91, %"class.v8::Value"* %2) #10
  br i1 %92, label %158, label %93

93:                                               ; preds = %83, %88
  %94 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3, i32 0, i32 0
  %95 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %94, align 8
  %96 = icmp eq %"struct.WTF::KeyValuePair"* %95, null
  %97 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  br i1 %96, label %145, label %99

99:                                               ; preds = %93
  %100 = add i32 %98, -1
  %101 = zext i32 %100 to i64
  %102 = lshr i64 %28, 8
  %103 = xor i64 %102, %28
  %104 = trunc i64 %103 to i32
  %105 = and i32 %100, %104
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %106
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast %"struct.blink::WrapperTypeInfo"* %1 to i8*
  %111 = icmp eq i8* %109, %110
  br i1 %111, label %140, label %112

112:                                              ; preds = %99
  %113 = xor i32 %104, -1
  %114 = lshr i32 %104, 23
  %115 = add i32 %114, %113
  %116 = shl i32 %115, 12
  %117 = xor i32 %116, %115
  %118 = lshr i32 %117, 7
  %119 = xor i32 %118, %117
  %120 = shl i32 %119, 2
  %121 = xor i32 %120, %119
  %122 = lshr i32 %121, 20
  %123 = xor i32 %122, %121
  %124 = or i32 %123, 1
  %125 = zext i32 %124 to i64
  br label %126

126:                                              ; preds = %131, %112
  %127 = phi i8* [ %109, %112 ], [ %138, %131 ]
  %128 = phi i64 [ %106, %112 ], [ %135, %131 ]
  %129 = phi i64 [ 0, %112 ], [ %133, %131 ]
  %130 = icmp eq i8* %127, null
  br i1 %130, label %145, label %131

131:                                              ; preds = %126
  %132 = icmp eq i64 %129, 0
  %133 = select i1 %132, i64 %125, i64 %129
  %134 = add i64 %133, %128
  %135 = and i64 %134, %101
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %135
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %138, %110
  br i1 %139, label %140, label %126

140:                                              ; preds = %131, %99
  %141 = phi %"struct.WTF::KeyValuePair"* [ %107, %99 ], [ %136, %131 ]
  %142 = icmp eq %"struct.WTF::KeyValuePair"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %140
  %144 = zext i32 %98 to i64
  br label %148

145:                                              ; preds = %126, %140, %93
  %146 = zext i32 %98 to i64
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %146
  br label %148

148:                                              ; preds = %145, %143
  %149 = phi i64 [ %144, %143 ], [ %146, %145 ]
  %150 = phi %"struct.WTF::KeyValuePair"* [ %141, %143 ], [ %147, %145 ]
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %149
  %152 = icmp eq %"struct.WTF::KeyValuePair"* %150, %151
  br i1 %152, label %158, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %150, i64 0, i32 1, i32 0
  %155 = bitcast %"class.v8::Template"** %154 to %"class.v8::FunctionTemplate"**
  %156 = load %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"** %155, align 8
  %157 = call zeroext i1 @_ZN2v816FunctionTemplate11HasInstanceENS_5LocalINS_5ValueEEE(%"class.v8::FunctionTemplate"* %156, %"class.v8::Value"* %2) #10
  br label %158

158:                                              ; preds = %153, %148, %88
  %159 = phi i1 [ true, %88 ], [ %157, %153 ], [ false, %148 ]
  %160 = load i8, i8* %5, align 8, !range !4
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %164 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %163, align 8
  %165 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %166 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %165) #10
  %167 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %164, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %166, %"class.blink::RuntimeCallTimer"** %167, align 8
  store i8 0, i8* %5, align 8
  br label %168

168:                                              ; preds = %158, %162
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #10
  ret i1 %159
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEERKN3WTF7HashMapIPKvNS4_7EternalINS4_8TemplateEEENS0_13SimplePtrHashENS8_10HashTraitsISB_EENSG_ISE_EENS8_18PartitionAllocatorEEE(%"class.blink::V8PerIsolateData"* nocapture readonly, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*, %"class.WTF::HashMap"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = ptrtoint %"struct.blink::WrapperTypeInfo"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %57, label %11

11:                                               ; preds = %4
  %12 = add i32 %10, -1
  %13 = zext i32 %12 to i64
  %14 = lshr i64 %5, 8
  %15 = xor i64 %14, %5
  %16 = trunc i64 %15 to i32
  %17 = and i32 %12, %16
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"struct.blink::WrapperTypeInfo"* %1 to i8*
  %23 = icmp eq i8* %21, %22
  br i1 %23, label %52, label %24

24:                                               ; preds = %11
  %25 = xor i32 %16, -1
  %26 = lshr i32 %16, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %43, %24
  %39 = phi i8* [ %21, %24 ], [ %50, %43 ]
  %40 = phi i64 [ %18, %24 ], [ %47, %43 ]
  %41 = phi i64 [ 0, %24 ], [ %45, %43 ]
  %42 = icmp eq i8* %39, null
  br i1 %42, label %57, label %43

43:                                               ; preds = %38
  %44 = icmp eq i64 %41, 0
  %45 = select i1 %44, i64 %37, i64 %41
  %46 = add i64 %45, %40
  %47 = and i64 %46, %13
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %47
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, %22
  br i1 %51, label %52, label %38

52:                                               ; preds = %43, %11
  %53 = phi %"struct.WTF::KeyValuePair"* [ %19, %11 ], [ %48, %43 ]
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = zext i32 %10 to i64
  br label %60

57:                                               ; preds = %38, %52, %4
  %58 = zext i32 %10 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %58
  br label %60

60:                                               ; preds = %55, %57
  %61 = phi i64 [ %56, %55 ], [ %58, %57 ]
  %62 = phi %"struct.WTF::KeyValuePair"* [ %53, %55 ], [ %59, %57 ]
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %61
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %62, %63
  br i1 %64, label %70, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 1, i32 0
  %67 = bitcast %"class.v8::Template"** %66 to %"class.v8::FunctionTemplate"**
  %68 = load %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"** %67, align 8
  %69 = tail call zeroext i1 @_ZN2v816FunctionTemplate11HasInstanceENS_5LocalINS_5ValueEEE(%"class.v8::FunctionTemplate"* %68, %"class.v8::Value"* %2) #10
  br label %70

70:                                               ; preds = %60, %65
  %71 = phi i1 [ %69, %65 ], [ false, %60 ]
  ret i1 %71
}

declare zeroext i1 @_ZN2v816FunctionTemplate11HasInstanceENS_5LocalINS_5ValueEEE(%"class.v8::FunctionTemplate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16V8PerIsolateData26HasInstanceOfUntrustedTypeEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* nocapture readonly, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #10
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.302* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #10
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1, i32 1
  %13 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %14 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %13) #10
  %15 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %14, i64 0, i32 3
  %16 = bitcast %"class.base::TickClock"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %14, %"class.blink::RuntimeCallStats"** %18, align 8
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %22 = bitcast i64* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10
  %23 = bitcast %"class.base::TickClock"** %21 to i64*
  store i64 %17, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %14, i64 0, i32 2, i64 2
  %25 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %14, i64 0, i32 0
  %26 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %25, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %19, %"class.blink::RuntimeCallCounter"* %24, %"class.blink::RuntimeCallTimer"* %26) #10
  store %"class.blink::RuntimeCallTimer"* %19, %"class.blink::RuntimeCallTimer"** %25, align 8
  store i8 1, i8* %5, align 8
  br label %27

27:                                               ; preds = %3, %11
  %28 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2
  %29 = call zeroext i1 @_ZN5blink16V8PerIsolateData26HasInstanceOfUntrustedTypeEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEERKN3WTF7HashMapIPKvNS4_7EternalINS4_8TemplateEEENS0_13SimplePtrHashENS8_10HashTraitsISB_EENSG_ISE_EENS8_18PartitionAllocatorEEE(%"class.blink::V8PerIsolateData"* %0, %"struct.blink::WrapperTypeInfo"* %1, %"class.v8::Value"* %2, %"class.WTF::HashMap"* dereferenceable(24) %28)
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3
  %32 = call zeroext i1 @_ZN5blink16V8PerIsolateData26HasInstanceOfUntrustedTypeEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEERKN3WTF7HashMapIPKvNS4_7EternalINS4_8TemplateEEENS0_13SimplePtrHashENS8_10HashTraitsISB_EENSG_ISE_EENS8_18PartitionAllocatorEEE(%"class.blink::V8PerIsolateData"* %0, %"struct.blink::WrapperTypeInfo"* %1, %"class.v8::Value"* %2, %"class.WTF::HashMap"* dereferenceable(24) %31)
  br label %33

33:                                               ; preds = %30, %27
  %34 = phi i1 [ true, %27 ], [ %32, %30 ]
  %35 = load i8, i8* %5, align 8, !range !4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %38, align 8
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %41 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %40) #10
  %42 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %39, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %41, %"class.blink::RuntimeCallTimer"** %42, align 8
  store i8 0, i8* %5, align 8
  br label %43

43:                                               ; preds = %33, %37
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #10
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16V8PerIsolateData26HasInstanceOfUntrustedTypeEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEERKN3WTF7HashMapIPKvNS4_7EternalINS4_8TemplateEEENS0_13SimplePtrHashENS8_10HashTraitsISB_EENSG_ISE_EENS8_18PartitionAllocatorEEE(%"class.blink::V8PerIsolateData"* nocapture readonly, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*, %"class.WTF::HashMap"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = ptrtoint %"struct.blink::WrapperTypeInfo"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %57, label %11

11:                                               ; preds = %4
  %12 = add i32 %10, -1
  %13 = zext i32 %12 to i64
  %14 = lshr i64 %5, 8
  %15 = xor i64 %14, %5
  %16 = trunc i64 %15 to i32
  %17 = and i32 %12, %16
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"struct.blink::WrapperTypeInfo"* %1 to i8*
  %23 = icmp eq i8* %21, %22
  br i1 %23, label %52, label %24

24:                                               ; preds = %11
  %25 = xor i32 %16, -1
  %26 = lshr i32 %16, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %43, %24
  %39 = phi i8* [ %21, %24 ], [ %50, %43 ]
  %40 = phi i64 [ %18, %24 ], [ %47, %43 ]
  %41 = phi i64 [ 0, %24 ], [ %45, %43 ]
  %42 = icmp eq i8* %39, null
  br i1 %42, label %57, label %43

43:                                               ; preds = %38
  %44 = icmp eq i64 %41, 0
  %45 = select i1 %44, i64 %37, i64 %41
  %46 = add i64 %45, %40
  %47 = and i64 %46, %13
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %47
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, %22
  br i1 %51, label %52, label %38

52:                                               ; preds = %43, %11
  %53 = phi %"struct.WTF::KeyValuePair"* [ %19, %11 ], [ %48, %43 ]
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = zext i32 %10 to i64
  br label %60

57:                                               ; preds = %38, %52, %4
  %58 = zext i32 %10 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %58
  br label %60

60:                                               ; preds = %55, %57
  %61 = phi i64 [ %56, %55 ], [ %58, %57 ]
  %62 = phi %"struct.WTF::KeyValuePair"* [ %53, %55 ], [ %59, %57 ]
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %61
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %62, %63
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 1, i32 0
  %67 = load %"class.v8::Template"*, %"class.v8::Template"** %66, align 8
  %68 = bitcast %"class.v8::Template"* %67 to %"class.v8::Data"*
  %69 = tail call zeroext i1 @_ZNK2v84Data18IsFunctionTemplateEv(%"class.v8::Data"* %68) #10
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = bitcast %"class.v8::Template"* %67 to %"class.v8::FunctionTemplate"*
  %72 = tail call zeroext i1 @_ZN2v816FunctionTemplate11HasInstanceENS_5LocalINS_5ValueEEE(%"class.v8::FunctionTemplate"* %71, %"class.v8::Value"* %2) #10
  br label %73

73:                                               ; preds = %70, %65, %60
  %74 = phi i1 [ false, %60 ], [ %72, %70 ], [ false, %65 ]
  ret i1 %74
}

declare zeroext i1 @_ZNK2v84Data18IsFunctionTemplateEv(%"class.v8::Data"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData36ClearPersistentsForV8ContextSnapshotEv(%"class.blink::V8PerIsolateData"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #10
  %9 = bitcast %"class.WTF::HashMap"* %2 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store i32 0, i32* %7, align 8
  %10 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"struct.WTF::KeyValuePair"* %14 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #10
  %19 = bitcast %"class.WTF::HashMap"* %12 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store i32 0, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 3, i32 0, i32 2
  store i32 0, i32* %20, align 4
  br label %21

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"class.WTF::HashMap.13", %"class.WTF::HashMap.13"* %22, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %23, align 8
  %25 = icmp eq %"struct.WTF::KeyValuePair.17"* %24, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %51, label %30

30:                                               ; preds = %26
  %31 = zext i32 %28 to i64
  br label %32

32:                                               ; preds = %48, %30
  %33 = phi i64 [ 0, %30 ], [ %49, %48 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %24, i64 %33, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, inttoptr (i64 -1 to i8*)
  br i1 %36, label %48, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %24, i64 %33, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.v8::Eternal.18"*, %"class.v8::Eternal.18"** %38, align 8
  %40 = icmp eq %"class.v8::Eternal.18"* %39, null
  %41 = bitcast %"class.v8::Eternal.18"* %39 to i8*
  br i1 %40, label %48, label %42, !prof !2

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %24, i64 %33, i32 1, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #10
  store %"class.v8::Eternal.18"* null, %"class.v8::Eternal.18"** %38, align 8
  br label %48

48:                                               ; preds = %47, %37, %32
  %49 = add nuw nsw i64 %33, 1
  %50 = icmp eq i64 %49, %31
  br i1 %50, label %51, label %32

51:                                               ; preds = %48, %26
  %52 = bitcast %"struct.WTF::KeyValuePair.17"* %24 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #10
  %53 = bitcast %"class.WTF::HashMap.13"* %22 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  store i32 0, i32* %27, align 8
  %54 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4, i32 0, i32 2
  store i32 0, i32* %54, align 4
  br label %55

55:                                               ; preds = %21, %51
  %56 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %57 = load %"class.blink::V8PrivateProperty"*, %"class.blink::V8PrivateProperty"** %56, align 8
  store %"class.blink::V8PrivateProperty"* null, %"class.blink::V8PrivateProperty"** %56, align 8
  %58 = icmp eq %"class.blink::V8PrivateProperty"* %57, null
  br i1 %58, label %73, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::V8PrivateProperty", %"class.blink::V8PrivateProperty"* %57, i64 0, i32 1, i32 0, i32 0
  %61 = load %"struct.WTF::KeyValuePair.47"*, %"struct.WTF::KeyValuePair.47"** %60, align 8
  %62 = icmp eq %"struct.WTF::KeyValuePair.47"* %61, null
  br i1 %62, label %65, label %63, !prof !2

63:                                               ; preds = %59
  %64 = bitcast %"struct.WTF::KeyValuePair.47"* %61 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #10
  store %"struct.WTF::KeyValuePair.47"* null, %"struct.WTF::KeyValuePair.47"** %60, align 8
  br label %65

65:                                               ; preds = %63, %59
  %66 = getelementptr inbounds %"class.blink::V8PrivateProperty", %"class.blink::V8PrivateProperty"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.v8::Private"*, %"class.v8::Private"** %66, align 8
  %68 = icmp eq %"class.v8::Private"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = bitcast %"class.v8::Private"* %67 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %70) #10
  br label %71

71:                                               ; preds = %69, %65
  %72 = bitcast %"class.blink::V8PrivateProperty"* %57 to i8*
  tail call void @free(i8* %72) #10
  br label %73

73:                                               ; preds = %55, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, %"class.v8::Eternal.18"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.304"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  store i8* %1, i8** %6, align 8
  %10 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.WTF::HashMap.13", %"class.WTF::HashMap.13"* %10, i64 0, i32 0
  %12 = call { %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"* } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E4findERKS2_(%"class.WTF::HashTable.14"* %11, i8** nonnull dereferenceable(8) %6) #10
  %13 = extractvalue { %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"* } %12, 0
  %14 = getelementptr inbounds %"class.WTF::HashMap.13", %"class.WTF::HashMap.13"* %10, i64 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 4, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %15, i64 %18
  %20 = icmp eq %"struct.WTF::KeyValuePair.17"* %13, %19
  br i1 %20, label %21, label %130, !prof !3

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1, i32 1
  %23 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %24 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %28 = getelementptr inbounds %"class.base::span.304", %"class.base::span.304"* %2, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  %30 = load i64, i64* %28, align 8
  %31 = trunc i64 %30 to i32
  store %"class.v8::Eternal.18"* null, %"class.v8::Eternal.18"** %25, align 8
  store i32 0, i32* %26, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %21
  store i32 0, i32* %27, align 4
  br label %51

34:                                               ; preds = %21
  %35 = and i64 %30, 4294967295
  %36 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v87EternalINS2_4NameEEEEEmm(i64 %35) #10
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v87EternalINS1_4NameEEEEEPKcv, i64 0, i64 0)) #10
  %38 = ptrtoint i8* %37 to i64
  %39 = bitcast %"class.WTF::Vector"* %7 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %36, 3
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %26, align 8
  %42 = bitcast i8* %37 to %"class.v8::Eternal.18"*
  store i32 %31, i32* %27, align 4
  %43 = getelementptr inbounds %"class.v8::Eternal.18", %"class.v8::Eternal.18"* %42, i64 %35
  %44 = getelementptr %"class.v8::Eternal.18", %"class.v8::Eternal.18"* %43, i64 -1, i32 0
  %45 = ptrtoint %"class.v8::Name"** %44 to i64
  %46 = sub i64 8, %38
  %47 = add i64 %46, %45
  %48 = and i64 %47, -8
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 %48, i1 false) #10
  %49 = load i64, i64* %28, align 8, !noalias !5
  %50 = load %"class.v8::Eternal.18"*, %"class.v8::Eternal.18"** %25, align 8
  br label %51

51:                                               ; preds = %33, %34
  %52 = phi %"class.v8::Eternal.18"* [ null, %33 ], [ %50, %34 ]
  %53 = phi i64 [ %30, %33 ], [ %49, %34 ]
  %54 = getelementptr inbounds %"class.base::span.304", %"class.base::span.304"* %2, i64 0, i32 1
  %55 = load i8**, i8*** %54, align 8, !noalias !5
  %56 = getelementptr inbounds i8*, i8** %55, i64 %53
  call void @_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %8, i8** %55, i8** %55, i8** %56) #10
  %57 = load i8**, i8*** %54, align 8, !noalias !8
  %58 = load i64, i64* %28, align 8, !noalias !8
  %59 = getelementptr inbounds i8*, i8** %57, i64 %58
  call void @_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %9, i8** %57, i8** %59, i8** %59) #10
  %60 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60)
  %61 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61)
  %62 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* nonnull align 8 %62, i64 24, i1 false) #10
  %63 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* nonnull align 8 %63, i64 24, i1 false) #10
  call void @_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #10
  %64 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %65 = load i8**, i8*** %64, align 8
  %66 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %67 = load i8**, i8*** %66, align 8
  %68 = icmp eq i8** %65, %67
  br i1 %68, label %97, label %69

69:                                               ; preds = %51
  %70 = ptrtoint %"class.v8::Isolate"* %23 to i64
  %71 = add i64 %70, 200
  %72 = inttoptr i64 %71 to %"class.v8::String"*
  br label %73

73:                                               ; preds = %87, %69
  %74 = phi %"class.v8::Eternal.18"* [ %52, %69 ], [ %93, %87 ]
  %75 = call dereferenceable(8) i8** @_ZNK4base25CheckedContiguousIteratorIKPKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #10
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %73
  %79 = load i8, i8* %76, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = call i64 @strlen(i8* nonnull %76) #11
  %83 = trunc i64 %82 to i32
  %84 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %23, i8* nonnull %76, i32 1, i32 %83) #10
  %85 = icmp eq %"class.v8::String"* %84, null
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %81
  call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %87

87:                                               ; preds = %86, %81, %78, %73
  %88 = phi %"class.v8::String"* [ %84, %81 ], [ null, %86 ], [ %72, %78 ], [ %72, %73 ]
  %89 = bitcast %"class.v8::String"* %88 to %"class.v8::Value"*
  %90 = call %"class.v8::Value"* @_ZN2v82V810EternalizeEPNS_7IsolateEPNS_5ValueE(%"class.v8::Isolate"* %23, %"class.v8::Value"* %89) #10
  %91 = bitcast %"class.v8::Eternal.18"* %74 to %"class.v8::Value"**
  store %"class.v8::Value"* %90, %"class.v8::Value"** %91, align 8
  %92 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKPKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #10
  %93 = getelementptr inbounds %"class.v8::Eternal.18", %"class.v8::Eternal.18"* %74, i64 1
  call void @_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #10
  %94 = load i8**, i8*** %64, align 8
  %95 = load i8**, i8*** %66, align 8
  %96 = icmp eq i8** %94, %95
  br i1 %96, label %97, label %73

97:                                               ; preds = %87, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61)
  %98 = call { %"struct.WTF::KeyValuePair.17"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E6insertINS_17HashMapTranslatorISJ_SE_S9_EERS2_SA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable.14"* %11, i8** nonnull dereferenceable(8) %6, %"class.WTF::Vector"* nonnull dereferenceable(16) %7) #10
  %99 = extractvalue { %"struct.WTF::KeyValuePair.17"*, i8 } %98, 1
  %100 = and i8 %99, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  %103 = load %"class.v8::Eternal.18"*, %"class.v8::Eternal.18"** %25, align 8
  %104 = extractvalue { %"struct.WTF::KeyValuePair.17"*, i8 } %98, 0
  br label %119

105:                                              ; preds = %97
  %106 = extractvalue { %"struct.WTF::KeyValuePair.17"*, i8 } %98, 0
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %106, i64 0, i32 1
  %108 = bitcast %"class.WTF::Vector"* %7 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::Vector"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store atomic i64 %111, i64* %108 monotonic, align 8
  store atomic i64 %109, i64* %110 monotonic, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %106, i64 0, i32 1, i32 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = load i32, i32* %26, align 8
  store i32 %114, i32* %112, align 4
  store i32 %113, i32* %26, align 8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %106, i64 0, i32 1, i32 0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %27, align 4
  store i32 %117, i32* %115, align 4
  store i32 %116, i32* %27, align 4
  %118 = inttoptr i64 %111 to %"class.v8::Eternal.18"*
  br label %119

119:                                              ; preds = %102, %105
  %120 = phi %"struct.WTF::KeyValuePair.17"* [ %104, %102 ], [ %106, %105 ]
  %121 = phi %"class.v8::Eternal.18"* [ %103, %102 ], [ %118, %105 ]
  %122 = icmp eq %"class.v8::Eternal.18"* %121, null
  %123 = bitcast %"class.v8::Eternal.18"* %121 to i8*
  br i1 %122, label %129, label %124, !prof !2

124:                                              ; preds = %119
  %125 = load i32, i32* %27, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %128, label %127, !prof !3

127:                                              ; preds = %124
  store i32 0, i32* %27, align 4
  br label %128

128:                                              ; preds = %127, %124
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %123) #10
  store %"class.v8::Eternal.18"* null, %"class.v8::Eternal.18"** %25, align 8
  br label %129

129:                                              ; preds = %119, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #10
  br label %130

130:                                              ; preds = %3, %129
  %131 = phi %"struct.WTF::KeyValuePair.17"* [ %120, %129 ], [ %13, %3 ]
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %131, i64 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %"class.v8::Eternal.18"*, %"class.v8::Eternal.18"** %132, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %131, i64 0, i32 1, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  %137 = insertvalue { i64, %"class.v8::Eternal.18"* } undef, i64 %136, 0
  %138 = insertvalue { i64, %"class.v8::Eternal.18"* } %137, %"class.v8::Eternal.18"* %133, 1
  ret { i64, %"class.v8::Eternal.18"* } %138
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Context"* @_ZN5blink16V8PerIsolateData25EnsureScriptRegexpContextEv(%"class.blink::V8PerIsolateData"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 7, i32 0
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %2, i64 0, i32 0
  %4 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %3, align 8
  %5 = icmp eq %"class.blink::ScriptState"* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 1, i32 1
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"* %8, %"class.v8::ExtensionConfiguration"* null, %"class.v8::ObjectTemplate"* null, %"class.v8::Value"* null, void (%"class.v8::Object"*, i32, i8*, i32, i8*)* null, i8* null, %"class.v8::MicrotaskQueue"* null) #10
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %11 = tail call %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld6CreateEPN2v87IsolateENS0_9WorldTypeE(%"class.v8::Isolate"* %10, i32 3) #10
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11ScriptStateEEEPhm(i64 64) #10
  %13 = bitcast i8* %12 to %"class.blink::ScriptState"*
  tail call void @_ZN5blink11ScriptStateC1EN2v85LocalINS1_7ContextEEE13scoped_refptrINS_15DOMWrapperWorldEEPNS_16ExecutionContextE(%"class.blink::ScriptState"* %13, %"class.v8::Context"* %9, %"class.blink::DOMWrapperWorld"* %11, %"class.blink::ExecutionContext"* null) #10
  %14 = getelementptr inbounds i8, i8* %12, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase"* %2, %"class.blink::ScriptState"* %13) #10
  %18 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %3, align 8
  br label %19

19:                                               ; preds = %1, %6
  %20 = phi %"class.blink::ScriptState"* [ %4, %1 ], [ %18, %6 ]
  %21 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %21, align 8
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::ScriptState"* %20 to %"class.v8::internal::Isolate"**
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = bitcast %"class.v8::Context"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %26, i64 %28) #10
  %30 = bitcast i64* %29 to %"class.v8::Context"*
  br label %31

31:                                               ; preds = %19, %24
  %32 = phi %"class.v8::Context"* [ %30, %24 ], [ null, %19 ]
  ret %"class.v8::Context"* %32
}

declare %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"*, %"class.v8::ExtensionConfiguration"*, %"class.v8::ObjectTemplate"*, %"class.v8::Value"*, void (%"class.v8::Object"*, i32, i8*, i32, i8*)*, i8*, %"class.v8::MicrotaskQueue"*) local_unnamed_addr #2

declare %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld6CreateEPN2v87IsolateENS0_9WorldTypeE(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare void @_ZN5blink11ScriptState17DissociateContextEv(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData17AddEndOfScopeTaskEN4base12OnceCallbackIFvvEEE(%"class.blink::V8PerIsolateData"*, %"class.base::OnceCallback"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %20, label %9, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %10, align 8
  %12 = zext i32 %5 to i64
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 %12
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %13 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = load i32, i32* %4, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %4, align 4
  br label %21

20:                                               ; preds = %2
  tail call void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.232"* %3, %"class.base::OnceCallback"* dereferenceable(8) %1) #10
  br label %21

21:                                               ; preds = %9, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData18RunEndOfScopeTasksEv(%"class.blink::V8PerIsolateData"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11
  %4 = bitcast %"class.WTF::Vector.232"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  store atomic i64 0, i64* %4 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = inttoptr i64 %5 to %"class.base::OnceCallback"*
  %10 = zext i32 %8 to i64
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 %10
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %15 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  br label %28

17:                                               ; preds = %28, %1
  %18 = icmp eq i64 %5, 0
  br i1 %18, label %27, label %19, !prof !2

19:                                               ; preds = %17
  br i1 %12, label %25, label %20, !prof !3

20:                                               ; preds = %19, %20
  %21 = phi %"class.base::OnceCallback"* [ %23, %20 ], [ %9, %19 ]
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %21, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %22) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %21, i64 1
  %24 = icmp eq %"class.base::OnceCallback"* %23, %11
  br i1 %24, label %25, label %20

25:                                               ; preds = %20, %19
  %26 = inttoptr i64 %5 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #10
  br label %27

27:                                               ; preds = %17, %25
  ret void

28:                                               ; preds = %13, %28
  %29 = phi %"class.base::OnceCallback"* [ %9, %13 ], [ %37, %28 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %33 = inttoptr i64 %32 to %"class.base::internal::BindStateBase"*
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %33, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*)**
  %36 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %35, align 8
  call void %36(%"class.base::internal::BindStateBase"* %33) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %29, i64 1
  %38 = icmp eq %"class.base::OnceCallback"* %37, %11
  br i1 %38, label %17, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData17SetThreadDebuggerENSt3__110unique_ptrINS0_4DataENS1_14default_deleteIS3_EEEE(%"class.blink::V8PerIsolateData"* nocapture, %"class.blink::V8PerIsolateData::Data"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.blink::V8PerIsolateData::Data"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 12
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::V8PerIsolateData::Data"*, %"class.blink::V8PerIsolateData::Data"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.243"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.blink::V8PerIsolateData::Data"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::V8PerIsolateData::Data"* %6 to void (%"class.blink::V8PerIsolateData::Data"*)***
  %11 = load void (%"class.blink::V8PerIsolateData::Data"*)**, void (%"class.blink::V8PerIsolateData::Data"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::V8PerIsolateData::Data"*)*, void (%"class.blink::V8PerIsolateData::Data"*)** %11, i64 1
  %13 = load void (%"class.blink::V8PerIsolateData::Data"*)*, void (%"class.blink::V8PerIsolateData::Data"*)** %12, align 8
  tail call void %13(%"class.blink::V8PerIsolateData::Data"* nonnull %6) #10
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::V8PerIsolateData::Data"* @_ZN5blink16V8PerIsolateData14ThreadDebuggerEv(%"class.blink::V8PerIsolateData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load %"class.blink::V8PerIsolateData::Data"*, %"class.blink::V8PerIsolateData::Data"** %2, align 8
  ret %"class.blink::V8PerIsolateData::Data"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8PerIsolateData16SetProfilerGroupEPNS0_20GarbageCollectedDataE(%"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData::GarbageCollectedData"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 13, i32 0
  tail call void @_ZN5blink14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.250"* %3, %"class.blink::V8PerIsolateData::GarbageCollectedData"* %1) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::V8PerIsolateData::GarbageCollectedData"* @_ZN5blink16V8PerIsolateData13ProfilerGroupEv(%"class.blink::V8PerIsolateData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::V8PerIsolateData::GarbageCollectedData"** %2, align 8
  ret %"class.blink::V8PerIsolateData::GarbageCollectedData"* %3
}

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, i8**, i8**, i8**) unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i8**, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8** %1, i8*** %7, align 8
  store i8** %2, i8*** %8, align 8
  store i8** %3, i8*** %9, align 8
  %14 = ptrtoint i8** %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8** %2 to i64
  %18 = bitcast i8*** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8** %3 to i64
  %21 = bitcast i8*** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8** %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8*** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %30 = bitcast i8*** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* %29, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8**, i8*** %8, align 8
  %43 = load i8**, i8*** %9, align 8
  %44 = icmp ugt i8** %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8*** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %49 = bitcast i8*** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* %48, i8* %50) #10
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #10
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  ret void
}

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.250"*, %"class.blink::V8PerIsolateData::GarbageCollectedData"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.250", %"class.blink::PersistentBase.250"* %0, i64 0, i32 0
  store %"class.blink::V8PerIsolateData::GarbageCollectedData"* %1, %"class.blink::V8PerIsolateData::GarbageCollectedData"** %3, align 8
  %4 = ptrtoint %"class.blink::V8PerIsolateData::GarbageCollectedData"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.250", %"class.blink::PersistentBase.250"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.250"* %0) #10
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase.250", %"class.blink::PersistentBase.250"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #10
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.250"*) local_unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase.250"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !3

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #10
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase.250"**
  store %"class.blink::PersistentBase.250"* %0, %"class.blink::PersistentBase.250"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase.250", %"class.blink::PersistentBase.250"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16V8PerIsolateData20GarbageCollectedDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::V8PerIsolateData::GarbageCollectedData"**
  %5 = load %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::V8PerIsolateData::GarbageCollectedData"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::V8PerIsolateData::GarbageCollectedData"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::V8PerIsolateData::GarbageCollectedData"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16V8PerIsolateData20GarbageCollectedDataEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16V8PerIsolateData20GarbageCollectedDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::V8PerIsolateData::GarbageCollectedData"*
  %4 = bitcast i8* %1 to void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::Visitor"*)**, void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::Visitor"*)*, void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::Visitor"*)*, void (%"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::V8PerIsolateData::GarbageCollectedData"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare void @_ZN2v82V813DisposeGlobalEPm(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink11StringCacheEEclEPS2_(%"struct.std::__1::default_delete.38"*, %"class.blink::StringCache"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.blink::StringCache"* %1, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %1, i64 0, i32 3, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #10
  br label %21

21:                                               ; preds = %20, %17, %4
  %22 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %1, i64 0, i32 2, i32 0
  tail call void @_ZN2v822PersistentValueMapBaseIPN5blink18ParkableStringImplENS_6StringENS1_28ParkableStringCacheMapTraitsEE5ClearEv(%"class.v8::PersistentValueMapBase.30"* %22) #10
  %23 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %23, align 8
  %25 = icmp eq %"struct.WTF::KeyValuePair.35"* %24, null
  br i1 %25, label %28, label %26, !prof !2

26:                                               ; preds = %21
  %27 = bitcast %"struct.WTF::KeyValuePair.35"* %24 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #10
  store %"struct.WTF::KeyValuePair.35"* null, %"struct.WTF::KeyValuePair.35"** %23, align 8
  br label %28

28:                                               ; preds = %26, %21
  %29 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN2v822PersistentValueMapBaseIPN3WTF10StringImplENS_6StringEN5blink20StringCacheMapTraitsEE5ClearEv(%"class.v8::PersistentValueMapBase"* %29) #10
  %30 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = load %"struct.WTF::KeyValuePair.28"*, %"struct.WTF::KeyValuePair.28"** %30, align 8
  %32 = icmp eq %"struct.WTF::KeyValuePair.28"* %31, null
  br i1 %32, label %35, label %33, !prof !2

33:                                               ; preds = %28
  %34 = bitcast %"struct.WTF::KeyValuePair.28"* %31 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #10
  br label %35

35:                                               ; preds = %28, %33
  %36 = bitcast %"class.blink::StringCache"* %1 to i8*
  tail call void @free(i8* %36) #10
  br label %37

37:                                               ; preds = %35, %2
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v822PersistentValueMapBaseIPN5blink18ParkableStringImplENS_6StringENS1_28ParkableStringCacheMapTraitsEE5ClearEv(%"class.v8::PersistentValueMapBase.30"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.v8::Global", align 8
  %3 = alloca %"class.v8::HandleScope", align 8
  %4 = alloca %"class.v8::Global", align 8
  %5 = alloca %"class.v8::Global", align 8
  %6 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.v8::PersistentValueMapBase.30", %"class.v8::PersistentValueMapBase.30"* %0, i64 0, i32 0
  %8 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %3, %"class.v8::Isolate"* %9) #10
  %10 = getelementptr inbounds %"class.v8::PersistentValueMapBase.30", %"class.v8::PersistentValueMapBase.30"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::PersistentValueMapBase.30", %"class.v8::PersistentValueMapBase.30"* %0, i64 0, i32 1, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %98, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.WTF::HashMap.31"* %10 to i64*
  %16 = getelementptr inbounds %"class.WTF::HashMap.31", %"class.WTF::HashMap.31"* %10, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::PersistentValueMapBase.30", %"class.v8::PersistentValueMapBase.30"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.v8::PersistentValueMapBase.30", %"class.v8::PersistentValueMapBase.30"* %0, i64 0, i32 1, i32 0, i32 3
  %19 = bitcast %"class.v8::Global"* %5 to i8*
  %20 = bitcast %"class.v8::Global"* %2 to i8*
  %21 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %2, i64 0, i32 0, i32 0
  %22 = bitcast %"class.v8::Global"* %5 to i64*
  %23 = bitcast %"class.v8::Global"* %2 to i64**
  %24 = bitcast %"class.v8::Global"* %5 to i64**
  %25 = bitcast %"class.v8::Global"* %4 to i64*
  %26 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %5, i64 0, i32 0, i32 0
  %27 = bitcast %"class.v8::Global"* %4 to i64**
  %28 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %4, i64 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %51, %14
  %30 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %16, align 8
  store atomic i64 0, i64* %15 monotonic, align 8
  %31 = load i32, i32* %17, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %11, align 4
  %32 = load i32, i32* %18, align 8
  %33 = and i32 %32, -2147483648
  store i32 %33, i32* %18, align 8
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %30, i64 %34
  %36 = icmp eq i32 %31, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %29, %41
  %38 = phi %"struct.WTF::KeyValuePair.35"* [ %42, %41 ], [ %30, %29 ]
  %39 = bitcast %"struct.WTF::KeyValuePair.35"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %44 [
    i64 -1, label %41
    i64 0, label %41
  ]

41:                                               ; preds = %37, %37
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %38, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair.35"* %42, %35
  br i1 %43, label %47, label %37

44:                                               ; preds = %37, %29
  %45 = phi %"struct.WTF::KeyValuePair.35"* [ %30, %29 ], [ %38, %37 ]
  %46 = icmp eq %"struct.WTF::KeyValuePair.35"* %45, %35
  br i1 %46, label %47, label %54

47:                                               ; preds = %41, %86, %96, %93, %44
  %48 = icmp eq %"struct.WTF::KeyValuePair.35"* %30, null
  br i1 %48, label %51, label %49, !prof !2

49:                                               ; preds = %47
  %50 = bitcast %"struct.WTF::KeyValuePair.35"* %30 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #10
  br label %51

51:                                               ; preds = %47, %49
  %52 = load i32, i32* %11, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %98, label %29

54:                                               ; preds = %44, %96
  %55 = phi %"struct.WTF::KeyValuePair.35"* [ %90, %96 ], [ %45, %44 ]
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %55, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10, !noalias !11
  %59 = inttoptr i64 %58 to %"class.v8::String"*
  store %"class.v8::String"* %59, %"class.v8::String"** %21, align 8, !noalias !11
  %60 = icmp eq i64 %58, 0
  %61 = inttoptr i64 %58 to i64*
  br i1 %60, label %69, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.v8::String", %"class.v8::String"* %59, i64 11, i32 0
  %64 = load i8, i8* %63, align 1, !noalias !11
  %65 = and i8 %64, 7
  %66 = icmp eq i8 %65, 2
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = call i8* @_ZN2v82V89ClearWeakEPm(i64* %61) #10
  br label %70

69:                                               ; preds = %54
  store i64 0, i64* %22, align 8, !alias.scope !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10, !noalias !11
  store i64 0, i64* %25, align 8, !alias.scope !17
  br label %74

70:                                               ; preds = %62, %67
  store i64 %58, i64* %22, align 8, !alias.scope !14
  call void @_ZN2v82V819MoveGlobalReferenceEPPmS2_(i64** nonnull %23, i64** nonnull %24) #10
  %71 = load i64, i64* %22, align 8, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10, !noalias !11
  store i64 %71, i64* %25, align 8, !alias.scope !17
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  call void @_ZN2v82V819MoveGlobalReferenceEPPmS2_(i64** nonnull %24, i64** nonnull %27) #10
  store %"class.v8::String"* null, %"class.v8::String"** %26, align 8, !noalias !17
  br label %74

74:                                               ; preds = %69, %70, %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %55, i64 0, i32 0
  %76 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %75, align 8
  call void @_ZN5blink28ParkableStringCacheMapTraits7DisposeEPN2v87IsolateENS1_6GlobalINS1_6StringEEEPNS_18ParkableStringImplE(%"class.v8::Isolate"* %56, %"class.v8::Global"* nonnull %4, %"class.blink::ParkableStringImpl"* %76) #10
  %77 = load %"class.v8::String"*, %"class.v8::String"** %28, align 8
  %78 = icmp eq %"class.v8::String"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.v8::String"* %77 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %80) #10
  store %"class.v8::String"* null, %"class.v8::String"** %28, align 8
  br label %81

81:                                               ; preds = %74, %79
  %82 = load %"class.v8::String"*, %"class.v8::String"** %26, align 8
  %83 = icmp eq %"class.v8::String"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.v8::String"* %82 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %85) #10
  store %"class.v8::String"* null, %"class.v8::String"** %26, align 8
  br label %86

86:                                               ; preds = %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %55, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair.35"* %87, %35
  br i1 %88, label %47, label %89

89:                                               ; preds = %86, %93
  %90 = phi %"struct.WTF::KeyValuePair.35"* [ %94, %93 ], [ %87, %86 ]
  %91 = bitcast %"struct.WTF::KeyValuePair.35"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  switch i64 %92, label %96 [
    i64 -1, label %93
    i64 0, label %93
  ]

93:                                               ; preds = %89, %89
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %90, i64 1
  %95 = icmp eq %"struct.WTF::KeyValuePair.35"* %94, %35
  br i1 %95, label %47, label %89

96:                                               ; preds = %89
  %97 = icmp eq %"struct.WTF::KeyValuePair.35"* %90, %35
  br i1 %97, label %47, label %54

98:                                               ; preds = %51, %1
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN5blink28ParkableStringCacheMapTraits7DisposeEPN2v87IsolateENS1_6GlobalINS1_6StringEEEPNS_18ParkableStringImplE(%"class.v8::Isolate"*, %"class.v8::Global"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

declare i8* @_ZN2v82V89ClearWeakEPm(i64*) local_unnamed_addr #2

declare void @_ZN2v82V819MoveGlobalReferenceEPPmS2_(i64**, i64**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v822PersistentValueMapBaseIPN3WTF10StringImplENS_6StringEN5blink20StringCacheMapTraitsEE5ClearEv(%"class.v8::PersistentValueMapBase"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.v8::Global", align 8
  %3 = alloca %"class.v8::HandleScope", align 8
  %4 = alloca %"class.v8::Global", align 8
  %5 = alloca %"class.v8::Global", align 8
  %6 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.v8::PersistentValueMapBase", %"class.v8::PersistentValueMapBase"* %0, i64 0, i32 0
  %8 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %3, %"class.v8::Isolate"* %9) #10
  %10 = getelementptr inbounds %"class.v8::PersistentValueMapBase", %"class.v8::PersistentValueMapBase"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::PersistentValueMapBase", %"class.v8::PersistentValueMapBase"* %0, i64 0, i32 1, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %98, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.WTF::HashMap.24"* %10 to i64*
  %16 = getelementptr inbounds %"class.WTF::HashMap.24", %"class.WTF::HashMap.24"* %10, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::PersistentValueMapBase", %"class.v8::PersistentValueMapBase"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.v8::PersistentValueMapBase", %"class.v8::PersistentValueMapBase"* %0, i64 0, i32 1, i32 0, i32 3
  %19 = bitcast %"class.v8::Global"* %5 to i8*
  %20 = bitcast %"class.v8::Global"* %2 to i8*
  %21 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %2, i64 0, i32 0, i32 0
  %22 = bitcast %"class.v8::Global"* %5 to i64*
  %23 = bitcast %"class.v8::Global"* %2 to i64**
  %24 = bitcast %"class.v8::Global"* %5 to i64**
  %25 = bitcast %"class.v8::Global"* %4 to i64*
  %26 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %5, i64 0, i32 0, i32 0
  %27 = bitcast %"class.v8::Global"* %4 to i64**
  %28 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %4, i64 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %51, %14
  %30 = load %"struct.WTF::KeyValuePair.28"*, %"struct.WTF::KeyValuePair.28"** %16, align 8
  store atomic i64 0, i64* %15 monotonic, align 8
  %31 = load i32, i32* %17, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %11, align 4
  %32 = load i32, i32* %18, align 8
  %33 = and i32 %32, -2147483648
  store i32 %33, i32* %18, align 8
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.28", %"struct.WTF::KeyValuePair.28"* %30, i64 %34
  %36 = icmp eq i32 %31, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %29, %41
  %38 = phi %"struct.WTF::KeyValuePair.28"* [ %42, %41 ], [ %30, %29 ]
  %39 = bitcast %"struct.WTF::KeyValuePair.28"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %44 [
    i64 -1, label %41
    i64 0, label %41
  ]

41:                                               ; preds = %37, %37
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.28", %"struct.WTF::KeyValuePair.28"* %38, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair.28"* %42, %35
  br i1 %43, label %47, label %37

44:                                               ; preds = %37, %29
  %45 = phi %"struct.WTF::KeyValuePair.28"* [ %30, %29 ], [ %38, %37 ]
  %46 = icmp eq %"struct.WTF::KeyValuePair.28"* %45, %35
  br i1 %46, label %47, label %54

47:                                               ; preds = %41, %86, %96, %93, %44
  %48 = icmp eq %"struct.WTF::KeyValuePair.28"* %30, null
  br i1 %48, label %51, label %49, !prof !2

49:                                               ; preds = %47
  %50 = bitcast %"struct.WTF::KeyValuePair.28"* %30 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #10
  br label %51

51:                                               ; preds = %47, %49
  %52 = load i32, i32* %11, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %98, label %29

54:                                               ; preds = %44, %96
  %55 = phi %"struct.WTF::KeyValuePair.28"* [ %90, %96 ], [ %45, %44 ]
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.28", %"struct.WTF::KeyValuePair.28"* %55, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10, !noalias !20
  %59 = inttoptr i64 %58 to %"class.v8::String"*
  store %"class.v8::String"* %59, %"class.v8::String"** %21, align 8, !noalias !20
  %60 = icmp eq i64 %58, 0
  %61 = inttoptr i64 %58 to i64*
  br i1 %60, label %69, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.v8::String", %"class.v8::String"* %59, i64 11, i32 0
  %64 = load i8, i8* %63, align 1, !noalias !20
  %65 = and i8 %64, 7
  %66 = icmp eq i8 %65, 2
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = call i8* @_ZN2v82V89ClearWeakEPm(i64* %61) #10
  br label %70

69:                                               ; preds = %54
  store i64 0, i64* %22, align 8, !alias.scope !23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10, !noalias !20
  store i64 0, i64* %25, align 8, !alias.scope !26
  br label %74

70:                                               ; preds = %62, %67
  store i64 %58, i64* %22, align 8, !alias.scope !23
  call void @_ZN2v82V819MoveGlobalReferenceEPPmS2_(i64** nonnull %23, i64** nonnull %24) #10
  %71 = load i64, i64* %22, align 8, !noalias !26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10, !noalias !20
  store i64 %71, i64* %25, align 8, !alias.scope !26
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  call void @_ZN2v82V819MoveGlobalReferenceEPPmS2_(i64** nonnull %24, i64** nonnull %27) #10
  store %"class.v8::String"* null, %"class.v8::String"** %26, align 8, !noalias !26
  br label %74

74:                                               ; preds = %69, %70, %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.28", %"struct.WTF::KeyValuePair.28"* %55, i64 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink20StringCacheMapTraits7DisposeEPN2v87IsolateENS1_6GlobalINS1_6StringEEEPN3WTF10StringImplE(%"class.v8::Isolate"* %56, %"class.v8::Global"* nonnull %4, %"class.WTF::StringImpl"* %76) #10
  %77 = load %"class.v8::String"*, %"class.v8::String"** %28, align 8
  %78 = icmp eq %"class.v8::String"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.v8::String"* %77 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %80) #10
  store %"class.v8::String"* null, %"class.v8::String"** %28, align 8
  br label %81

81:                                               ; preds = %74, %79
  %82 = load %"class.v8::String"*, %"class.v8::String"** %26, align 8
  %83 = icmp eq %"class.v8::String"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.v8::String"* %82 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %85) #10
  store %"class.v8::String"* null, %"class.v8::String"** %26, align 8
  br label %86

86:                                               ; preds = %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.28", %"struct.WTF::KeyValuePair.28"* %55, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair.28"* %87, %35
  br i1 %88, label %47, label %89

89:                                               ; preds = %86, %93
  %90 = phi %"struct.WTF::KeyValuePair.28"* [ %94, %93 ], [ %87, %86 ]
  %91 = bitcast %"struct.WTF::KeyValuePair.28"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  switch i64 %92, label %96 [
    i64 -1, label %93
    i64 0, label %93
  ]

93:                                               ; preds = %89, %89
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.28", %"struct.WTF::KeyValuePair.28"* %90, i64 1
  %95 = icmp eq %"struct.WTF::KeyValuePair.28"* %94, %35
  br i1 %95, label %47, label %89

96:                                               ; preds = %89
  %97 = icmp eq %"struct.WTF::KeyValuePair.28"* %90, %35
  br i1 %97, label %47, label %54

98:                                               ; preds = %51, %1
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

declare void @_ZN5blink20StringCacheMapTraits7DisposeEPN2v87IsolateENS1_6GlobalINS1_6StringEEEPN3WTF10StringImplE(%"class.v8::Isolate"*, %"class.v8::Global"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v82V810EternalizeEPNS_7IsolateEPNS_5ValueE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS2_S7_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, i8** dereferenceable(8), %"class.v8::Eternal"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast i8** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = trunc i64 %19 to i32
  %21 = and i32 %14, %20
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  %27 = inttoptr i64 %17 to i8*
  br i1 %26, label %71, label %28

28:                                               ; preds = %10
  %29 = xor i32 %20, -1
  %30 = lshr i32 %20, 23
  %31 = add i32 %30, %29
  %32 = shl i32 %31, 12
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 7
  %35 = xor i32 %34, %33
  %36 = shl i32 %35, 2
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 20
  %39 = xor i32 %38, %37
  %40 = or i32 %39, 1
  %41 = zext i32 %40 to i64
  br label %42

42:                                               ; preds = %28, %49
  %43 = phi i8* [ %25, %28 ], [ %58, %49 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ %23, %28 ], [ %56, %49 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ null, %28 ], [ %51, %49 ]
  %46 = phi i64 [ %22, %28 ], [ %55, %49 ]
  %47 = phi i64 [ 0, %28 ], [ %53, %49 ]
  %48 = icmp eq i8* %43, %27
  br i1 %48, label %90, label %49

49:                                               ; preds = %42
  %50 = icmp eq i8* %43, inttoptr (i64 -1 to i8*)
  %51 = select i1 %50, %"struct.WTF::KeyValuePair"* %44, %"struct.WTF::KeyValuePair"* %45
  %52 = icmp eq i64 %47, 0
  %53 = select i1 %52, i64 %41, i64 %47
  %54 = add i64 %53, %46
  %55 = and i64 %54, %15
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %55
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %42

60:                                               ; preds = %49
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %51, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %60
  %63 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 16, i1 false) #10
  %64 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, 2147483647
  %67 = and i32 %66, 2147483647
  %68 = and i32 %65, -2147483648
  %69 = or i32 %67, %68
  store i32 %69, i32* %64, align 8
  %70 = load i64, i64* %16, align 8
  br label %71

71:                                               ; preds = %10, %60, %62
  %72 = phi i64 [ %70, %62 ], [ %17, %60 ], [ %17, %10 ]
  %73 = phi %"struct.WTF::KeyValuePair"* [ %51, %62 ], [ %56, %60 ], [ %23, %10 ]
  %74 = bitcast %"struct.WTF::KeyValuePair"* %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 1
  %76 = bitcast %"class.v8::Eternal"* %2 to i64*
  %77 = bitcast %"class.v8::Eternal"* %75 to i64*
  %78 = load i64, i64* %76, align 8
  store i64 %78, i64* %77, align 8
  %79 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %79, align 4
  %82 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, %81
  %85 = shl i32 %84, 1
  %86 = load i32, i32* %12, align 8
  %87 = icmp ult i32 %85, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %71
  %89 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %73)
  br label %90

90:                                               ; preds = %42, %71, %88
  %91 = phi i8 [ 1, %71 ], [ 1, %88 ], [ 0, %42 ]
  %92 = phi %"struct.WTF::KeyValuePair"* [ %73, %71 ], [ %89, %88 ], [ %44, %42 ]
  %93 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %92, 0
  %94 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %93, i8 %91, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvN2v87EternalINS4_8TemplateEEEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 %34, i1 false) #10
  br label %39

39:                                               ; preds = %31, %38
  %40 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %40
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_N2v87EternalINS4_8TemplateEEEEENS_24KeyValuePairKeyExtractorEN5blink16V8PerIsolateData13SimplePtrHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %106
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %107, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %110, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #10
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %106
  %32 = phi i64 [ %17, %13 ], [ %107, %106 ]
  %33 = phi i32 [ %7, %13 ], [ %108, %106 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %109, %106 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %110, %106 ]
  %36 = phi i32 [ 0, %13 ], [ %111, %106 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = bitcast %"struct.WTF::KeyValuePair"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %106
    i64 0, label %106
  ]

41:                                               ; preds = %31
  %42 = lshr i64 %40, 8
  %43 = xor i64 %42, %40
  %44 = trunc i64 %43 to i32
  %45 = and i32 %14, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %46
  %48 = ptrtoint %"struct.WTF::KeyValuePair"* %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  %52 = inttoptr i64 %40 to i8*
  br i1 %51, label %70, label %53

53:                                               ; preds = %41
  %54 = xor i32 %44, -1
  %55 = lshr i32 %44, 23
  %56 = add i32 %55, %54
  %57 = shl i32 %56, 12
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 7
  %60 = xor i32 %59, %58
  %61 = shl i32 %60, 2
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 20
  %64 = xor i32 %63, %62
  %65 = or i32 %64, 1
  %66 = zext i32 %65 to i64
  br label %76

67:                                               ; preds = %83
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %90 to i64
  %69 = inttoptr i64 %85 to %"struct.WTF::KeyValuePair"*
  br label %70

70:                                               ; preds = %67, %41
  %71 = phi i64 [ %68, %67 ], [ %48, %41 ]
  %72 = phi %"struct.WTF::KeyValuePair"* [ %69, %67 ], [ null, %41 ]
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %72, null
  %74 = ptrtoint %"struct.WTF::KeyValuePair"* %72 to i64
  %75 = select i1 %73, i64 %71, i64 %74
  br label %95

76:                                               ; preds = %83, %53
  %77 = phi i64 [ 0, %53 ], [ %85, %83 ]
  %78 = phi i8* [ %50, %53 ], [ %93, %83 ]
  %79 = phi i64 [ %48, %53 ], [ %91, %83 ]
  %80 = phi i64 [ %46, %53 ], [ %89, %83 ]
  %81 = phi i64 [ 0, %53 ], [ %87, %83 ]
  %82 = icmp eq i8* %78, %52
  br i1 %82, label %95, label %83

83:                                               ; preds = %76
  %84 = icmp eq i8* %78, inttoptr (i64 -1 to i8*)
  %85 = select i1 %84, i64 %79, i64 %77
  %86 = icmp eq i64 %81, 0
  %87 = select i1 %86, i64 %66, i64 %81
  %88 = add i64 %87, %80
  %89 = and i64 %88, %15
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %89
  %91 = ptrtoint %"struct.WTF::KeyValuePair"* %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %67, label %76

95:                                               ; preds = %76, %70
  %96 = phi i64 [ %75, %70 ], [ %79, %76 ]
  %97 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair"*
  %98 = inttoptr i64 %96 to i8*
  %99 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #10
  %100 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 %37
  %102 = icmp eq %"struct.WTF::KeyValuePair"* %101, %3
  %103 = select i1 %102, %"struct.WTF::KeyValuePair"* %97, %"struct.WTF::KeyValuePair"* %35
  %104 = load i32, i32* %6, align 8
  %105 = ptrtoint %"struct.WTF::KeyValuePair"* %100 to i64
  br label %106

106:                                              ; preds = %31, %31, %95
  %107 = phi i64 [ %32, %31 ], [ %105, %95 ], [ %32, %31 ]
  %108 = phi i32 [ %33, %31 ], [ %104, %95 ], [ %33, %31 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %100, %95 ], [ %34, %31 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %103, %95 ], [ %35, %31 ]
  %111 = add i32 %36, 1
  %112 = icmp eq i32 %111, %108
  br i1 %112, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"* } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E4findERKS2_(%"class.WTF::HashTable.14"*, i8** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.17"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast i8** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = inttoptr i64 %12 to i8*
  %38 = icmp eq i8* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi i8* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq i8* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %63, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.17"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.17"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.17"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.17"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"* } undef, %"struct.WTF::KeyValuePair.17"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"* } %79, %"struct.WTF::KeyValuePair.17"* %78, 1
  ret { %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v87EternalINS2_4NameEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i8** @_ZNK4base25CheckedContiguousIteratorIKPKcEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8**, i8*** %7, align 8
  %11 = load i8**, i8*** %8, align 8
  %12 = icmp eq i8** %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8*** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %17 = bitcast i8*** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load i8**, i8*** %7, align 8
  ret i8** %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKPKcEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8**, i8*** %7, align 8
  %11 = load i8**, i8*** %8, align 8
  %12 = icmp eq i8** %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8*** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %17 = bitcast i8*** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load i8**, i8*** %7, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 1
  store i8** %27, i8*** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i8**, i8*** %11, align 8
  %15 = load i8**, i8*** %12, align 8
  %16 = icmp eq i8** %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %20, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i8**, i8*** %32, align 8
  %36 = load i8**, i8*** %33, align 8
  %37 = icmp eq i8** %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i8*** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %42 = bitcast i8*** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i8* %41, i8* %43) #10
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #10
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  ret void
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.17"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E6insertINS_17HashMapTranslatorISJ_SE_S9_EERS2_SA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable.14"*, i8** dereferenceable(8), %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.17"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.17"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E6ExpandEPSB_(%"class.WTF::HashTable.14"* %0, %"struct.WTF::KeyValuePair.17"* null)
  %9 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.17"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast i8** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  %43 = inttoptr i64 %17 to i8*
  br i1 %42, label %78, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi i8* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.17"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.17"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq i8* %59, %43
  br i1 %64, label %122, label %65

65:                                               ; preds = %58
  %66 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.17"* %60, %"struct.WTF::KeyValuePair.17"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.17"* %67, null
  br i1 %77, label %78, label %81

78:                                               ; preds = %10, %76
  %79 = phi %"struct.WTF::KeyValuePair.17"* [ %72, %76 ], [ %39, %10 ]
  %80 = bitcast %"struct.WTF::KeyValuePair.17"* %79 to i64*
  br label %94

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %67, i64 0, i32 1
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %67, i64 0, i32 1, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %67, i64 0, i32 1, i32 0, i32 0, i32 2
  %85 = bitcast %"class.WTF::Vector"* %82 to i64*
  %86 = bitcast %"struct.WTF::KeyValuePair.17"* %67 to i64*
  store i64 0, i64* %86, align 8
  store atomic i64 0, i64* %85 monotonic, align 8
  store i32 0, i32* %83, align 4
  store i32 0, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, 2147483647
  %90 = and i32 %89, 2147483647
  %91 = and i32 %88, -2147483648
  %92 = or i32 %90, %91
  store i32 %92, i32* %87, align 8
  %93 = load i64, i64* %16, align 8
  br label %94

94:                                               ; preds = %78, %81
  %95 = phi i64* [ %80, %78 ], [ %86, %81 ]
  %96 = phi i64 [ %17, %78 ], [ %93, %81 ]
  %97 = phi %"struct.WTF::KeyValuePair.17"* [ %79, %78 ], [ %67, %81 ]
  store i64 %96, i64* %95, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %97, i64 0, i32 1
  %99 = bitcast %"class.WTF::Vector"* %2 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.WTF::Vector"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store atomic i64 %102, i64* %99 monotonic, align 8
  store atomic i64 %100, i64* %101 monotonic, align 8
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %97, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %105 = load i32, i32* %103, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %103, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %97, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %107, align 4
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %107, align 4
  store i32 %109, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = add i32 %115, %113
  %117 = shl i32 %116, 1
  %118 = load i32, i32* %12, align 8
  %119 = icmp ult i32 %117, %118
  br i1 %119, label %122, label %120

120:                                              ; preds = %94
  %121 = tail call %"struct.WTF::KeyValuePair.17"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E6ExpandEPSB_(%"class.WTF::HashTable.14"* %0, %"struct.WTF::KeyValuePair.17"* %97)
  br label %122

122:                                              ; preds = %58, %94, %120
  %123 = phi i8 [ 1, %94 ], [ 1, %120 ], [ 0, %58 ]
  %124 = phi %"struct.WTF::KeyValuePair.17"* [ %97, %94 ], [ %121, %120 ], [ %60, %58 ]
  %125 = insertvalue { %"struct.WTF::KeyValuePair.17"*, i8 } undef, %"struct.WTF::KeyValuePair.17"* %124, 0
  %126 = insertvalue { %"struct.WTF::KeyValuePair.17"*, i8 } %125, i8 %123, 1
  ret { %"struct.WTF::KeyValuePair.17"*, i8 } %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.17"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E6ExpandEPSB_(%"class.WTF::HashTable.14"*, %"struct.WTF::KeyValuePair.17"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvNS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.17"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %60, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %44, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %44, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %44, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector"* %47 to i64*
  %51 = bitcast %"struct.WTF::KeyValuePair.17"* %46 to i64*
  store i64 0, i64* %51, align 8
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %49, align 4
  %52 = or i64 %44, 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %52, i32 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %52, i32 1, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %52, i32 1, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector"* %54 to i64*
  %58 = bitcast %"struct.WTF::KeyValuePair.17"* %53 to i64*
  store i64 0, i64* %58, align 8
  store atomic i64 0, i64* %57 monotonic, align 8
  store i32 0, i32* %55, align 4
  store i32 0, i32* %56, align 4
  %59 = add nuw nsw i64 %44, 2
  %60 = add i64 %45, -2
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %38
  %63 = phi i64 [ 0, %38 ], [ %59, %43 ]
  %64 = icmp eq i64 %39, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %63
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %63, i32 1
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %63, i32 1, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %36, i64 %63, i32 1, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::Vector"* %67 to i64*
  %71 = bitcast %"struct.WTF::KeyValuePair.17"* %66 to i64*
  store i64 0, i64* %71, align 8
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %68, align 4
  store i32 0, i32* %69, align 4
  br label %72

72:                                               ; preds = %65, %62, %31
  %73 = call %"struct.WTF::KeyValuePair.17"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E8RehashToEPSB_jSL_(%"class.WTF::HashTable.14"* %0, %"struct.WTF::KeyValuePair.17"* %36, i32 %32, %"struct.WTF::KeyValuePair.17"* %1) #10
  ret %"struct.WTF::KeyValuePair.17"* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.17"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E8RehashToEPSB_jSL_(%"class.WTF::HashTable.14"*, %"struct.WTF::KeyValuePair.17"*, i32, %"struct.WTF::KeyValuePair.17"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.14", align 8
  %6 = bitcast %"class.WTF::HashTable.14"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.14"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.17"* %1, %"struct.WTF::KeyValuePair.17"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.17"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.14"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.14"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.17"* %22 to i64
  br label %66

24:                                               ; preds = %113
  %25 = bitcast %"class.WTF::HashTable.14"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.14"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %114, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.17"* [ null, %16 ], [ %117, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %115, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.17"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %35, i64 %42, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, inttoptr (i64 -1 to i8*)
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.v8::Eternal.18"*, %"class.v8::Eternal.18"** %47, align 8
  %49 = icmp eq %"class.v8::Eternal.18"* %48, null
  %50 = bitcast %"class.v8::Eternal.18"* %48 to i8*
  br i1 %49, label %57, label %51, !prof !2

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %35, i64 %42, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !3

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #10
  store %"class.v8::Eternal.18"* null, %"class.v8::Eternal.18"** %47, align 8
  br label %57

57:                                               ; preds = %56, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.17"* %33

66:                                               ; preds = %21, %113
  %67 = phi i64 [ %114, %113 ], [ %23, %21 ]
  %68 = phi i32 [ %115, %113 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.17"* [ %116, %113 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.17"* [ %117, %113 ], [ null, %21 ]
  %71 = phi i32 [ %118, %113 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %69, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.17"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %76 [
    i64 -1, label %113
    i64 0, label %113
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %73, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.17"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E16LookupForWritingERKS2_(%"class.WTF::HashTable.14"* nonnull %5, i8** dereferenceable(8) %77) #10
  %79 = extractvalue { %"struct.WTF::KeyValuePair.17"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %79, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.v8::Eternal.18"*, %"class.v8::Eternal.18"** %80, align 8
  %82 = icmp eq %"class.v8::Eternal.18"* %81, null
  %83 = bitcast %"class.v8::Eternal.18"* %81 to i8*
  br i1 %82, label %90, label %84, !prof !2

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %79, i64 0, i32 1, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !3

88:                                               ; preds = %84
  store i32 0, i32* %85, align 4
  br label %89

89:                                               ; preds = %88, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #10
  store %"class.v8::Eternal.18"* null, %"class.v8::Eternal.18"** %80, align 8
  br label %90

90:                                               ; preds = %76, %89
  %91 = load i64, i64* %74, align 8
  %92 = bitcast %"struct.WTF::KeyValuePair.17"* %79 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %79, i64 0, i32 1, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %79, i64 0, i32 1, i32 0, i32 0, i32 2
  %97 = bitcast %"class.WTF::Vector"* %94 to i64*
  %98 = bitcast %"class.WTF::Vector"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #10
  %99 = load i64, i64* %97, align 8
  %100 = bitcast %"class.WTF::Vector"* %93 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %69, i64 %72, i32 1, i32 0, i32 0, i32 1
  %102 = load i32, i32* %95, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %95, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %69, i64 %72, i32 1, i32 0, i32 0, i32 2
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %96, align 4
  store i32 %105, i32* %104, align 4
  %107 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %15, align 8
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %107, i64 %72
  %109 = icmp eq %"struct.WTF::KeyValuePair.17"* %108, %3
  %110 = select i1 %109, %"struct.WTF::KeyValuePair.17"* %79, %"struct.WTF::KeyValuePair.17"* %70
  %111 = load i32, i32* %12, align 8
  %112 = ptrtoint %"struct.WTF::KeyValuePair.17"* %107 to i64
  br label %113

113:                                              ; preds = %66, %66, %90
  %114 = phi i64 [ %67, %66 ], [ %112, %90 ], [ %67, %66 ]
  %115 = phi i32 [ %68, %66 ], [ %111, %90 ], [ %68, %66 ]
  %116 = phi %"struct.WTF::KeyValuePair.17"* [ %69, %66 ], [ %107, %90 ], [ %69, %66 ]
  %117 = phi %"struct.WTF::KeyValuePair.17"* [ %70, %66 ], [ %110, %90 ], [ %70, %66 ]
  %118 = add i32 %71, 1
  %119 = icmp eq i32 %118, %115
  br i1 %119, label %24, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.17"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_NS_6VectorIN2v87EternalINS5_4NameEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISA_EEEESH_S9_E16LookupForWritingERKS2_(%"class.WTF::HashTable.14"*, i8** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.17"*, %"struct.WTF::KeyValuePair.17"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.14", %"class.WTF::HashTable.14"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast i8** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.17"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %32, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  %37 = inttoptr i64 %10 to i8*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.17"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.17"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.17"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.17"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.17"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi i8* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq i8* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.17"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.17", %"struct.WTF::KeyValuePair.17"* %75, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.17"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.17"*, i8 } undef, %"struct.WTF::KeyValuePair.17"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.17"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.17"*, i8 } %85
}

declare void @_ZN5blink11ScriptStateC1EN2v85LocalINS1_7ContextEEE13scoped_refptrINS_15DOMWrapperWorldEEPNS_16ExecutionContextE(%"class.blink::ScriptState"*, %"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11ScriptStateEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ScriptStateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11ScriptStateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ScriptStateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11ScriptStateEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptState"*
  tail call void @_ZN5blink11ScriptStateD1Ev(%"class.blink::ScriptState"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11ScriptStateEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink11ScriptStateD1Ev(%"class.blink::ScriptState"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::ScriptState"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %3, align 8
  %4 = ptrtoint %"class.blink::ScriptState"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase"* %0) #10
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #10
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase"*) local_unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !3

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #10
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11ScriptStateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ScriptState"**
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::ScriptState"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ScriptState"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.232"*, %"class.base::OnceCallback"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %8 = icmp ugt %"class.base::OnceCallback"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 %10
  %12 = icmp ugt %"class.base::OnceCallback"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.base::OnceCallback"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4base12OnceCallbackIFvvEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.232"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.base::OnceCallback"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.232"* %0, i32 %22) #10
  %36 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.base::OnceCallback"* %1 to i64
  %39 = ptrtoint %"class.base::OnceCallback"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.base::OnceCallback"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4base12OnceCallbackIFvvEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.232"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.base::OnceCallback"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.232"* %0, i32 %50) #10
  %64 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.base::OnceCallback"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.base::OnceCallback"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.base::OnceCallback"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %69, i64 %72
  %74 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.base::OnceCallback"* %70 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::OnceCallback"* %73 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %74, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.232"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.232"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.base::OnceCallback"* [ %23, %14 ], [ %6, %4 ]
  %16 = phi %"class.base::OnceCallback"* [ %22, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::OnceCallback"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %21) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 1
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 1
  %24 = icmp eq %"class.base::OnceCallback"* %23, %10
  br i1 %24, label %25, label %14

25:                                               ; preds = %14, %4
  %26 = bitcast %"class.base::OnceCallback"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #10
  br label %63

27:                                               ; preds = %2
  %28 = zext i32 %1 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm(i64 %28) #10
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4base12OnceCallbackIFvvEEEEEPKcv, i64 0, i64 0)) #10
  %31 = lshr i64 %29, 3
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %27
  %41 = bitcast %"class.base::OnceCallback"* %34 to i8*
  br label %58

42:                                               ; preds = %27
  %43 = bitcast i8* %30 to %"class.base::OnceCallback"*
  br label %44

44:                                               ; preds = %42, %44
  %45 = phi %"class.base::OnceCallback"* [ %53, %44 ], [ %34, %42 ]
  %46 = phi %"class.base::OnceCallback"* [ %52, %44 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.base::OnceCallback"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.base::OnceCallback"* %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %45, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %51) #10
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %46, i64 1
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %45, i64 1
  %54 = icmp eq %"class.base::OnceCallback"* %53, %38
  br i1 %54, label %55, label %44

55:                                               ; preds = %44
  %56 = bitcast %"class.WTF::Vector.232"* %0 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %40, %55
  %59 = phi i8* [ %57, %55 ], [ %41, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #10
  %60 = bitcast %"class.WTF::Vector.232"* %0 to i64*
  store atomic i64 %32, i64* %60 monotonic, align 8
  %61 = trunc i64 %31 to i32
  %62 = getelementptr inbounds %"class.WTF::Vector.232", %"class.WTF::Vector.232"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %61, i32* %62, align 8
  br label %63

63:                                               ; preds = %58, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base4spanIKPKcLm18446744073709551615EE5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base4spanIKPKcLm18446744073709551615EE5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base4spanIKPKcLm18446744073709551615EE3endEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base4spanIKPKcLm18446744073709551615EE3endEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN2v822PersistentValueMapBaseIPN5blink18ParkableStringImplENS_6StringENS1_28ParkableStringCacheMapTraitsEE7ReleaseEm: argument 0"}
!13 = distinct !{!13, !"_ZN2v822PersistentValueMapBaseIPN5blink18ParkableStringImplENS_6StringENS1_28ParkableStringCacheMapTraitsEE7ReleaseEm"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZN2v86GlobalINS_6StringEE4PassEv: argument 0"}
!16 = distinct !{!16, !"_ZN2v86GlobalINS_6StringEE4PassEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN2v86GlobalINS_6StringEE4PassEv: argument 0"}
!19 = distinct !{!19, !"_ZN2v86GlobalINS_6StringEE4PassEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN2v822PersistentValueMapBaseIPN3WTF10StringImplENS_6StringEN5blink20StringCacheMapTraitsEE7ReleaseEm: argument 0"}
!22 = distinct !{!22, !"_ZN2v822PersistentValueMapBaseIPN3WTF10StringImplENS_6StringEN5blink20StringCacheMapTraitsEE7ReleaseEm"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZN2v86GlobalINS_6StringEE4PassEv: argument 0"}
!25 = distinct !{!25, !"_ZN2v86GlobalINS_6StringEE4PassEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN2v86GlobalINS_6StringEE4PassEv: argument 0"}
!28 = distinct !{!28, !"_ZN2v86GlobalINS_6StringEE4PassEv"}
