; ModuleID = '../../third_party/ots/src/src/kern.cc'
source_filename = "../../third_party/ots/src/src/kern.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeKERN" = type { %"class.ots::Table.base", i16, %"class.std::__1::vector" }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"*, %"class.std::__1::__compressed_pair.31" }
%"struct.ots::OpenTypeKERNFormat0" = type { i16, i16, i16, i16, i16, %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"*, %"class.std::__1::__compressed_pair.26" }
%"struct.ots::OpenTypeKERNFormat0Pair" = type { i16, i16, i16 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.ots::OpenTypeKERNFormat0Pair"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.ots::OpenTypeKERNFormat0"* }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZNSt3__16vectorIN3ots19OpenTypeKERNFormat0ENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZN3ots12OpenTypeKERND2Ev = comdat any

$_ZN3ots12OpenTypeKERND0Ev = comdat any

$_ZNSt3__16vectorIN3ots19OpenTypeKERNFormat0ENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [28 x i8] c"Failed to read table header\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Unsupported table version: %d\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"nTables is zero\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Failed to read subtable %d header\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"Ignoring subtable %d with unsupported version: %d\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"Bad subtable %d offset %ld\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"Failed to read subtable %d coverage\00", align 1
@.str.7 = private unnamed_addr constant [67 x i8] c"We don't support vertical data as the renderer doesn't support it.\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"Reserved fields should be zero\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"Ignoring subtable %d with unsupported format: %d\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"Failed to read subtable %d format 0 fields\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Zero length subtable is found\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"Too large subtable\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"bad search range\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"Bad subtable %d entry selector %d\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"bad range shift\00", align 1
@.str.16 = private unnamed_addr constant [43 x i8] c"Failed to read subtable %d kerning pair %d\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"Kerning pairs are not sorted\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"All subtables were removed\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c"Failed to write kern table header\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"Failed to write kern subtable %d\00", align 1
@.str.21 = private unnamed_addr constant [45 x i8] c"Failed to write kern pair %d for subtable %d\00", align 1
@_ZTVN3ots12OpenTypeKERNE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::OpenTypeKERN"*)* @_ZN3ots12OpenTypeKERND2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeKERN"*)* @_ZN3ots12OpenTypeKERND0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeKERN"*, i8*, i64)* @_ZN3ots12OpenTypeKERN5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeKERN"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeKERN9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeKERN"*)* @_ZN3ots12OpenTypeKERN15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeKERN5ParseEPKhm(%"class.ots::OpenTypeKERN"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.ots::OpenTypeKERNFormat0", align 8
  %5 = icmp ult i64 %2, 2
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 1
  %8 = bitcast i8* %1 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9) #9
  store i16 %10, i16* %7, align 2
  %11 = icmp ult i64 %2, 4
  br i1 %11, label %12, label %15

12:                                               ; preds = %6, %3
  %13 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %14 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %13, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #9
  br label %369

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %1, i64 2
  %17 = bitcast i8* %16 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #9
  %20 = icmp eq i16 %9, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = zext i16 %10 to i32
  %23 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %24 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %23, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 %22) #9
  br label %369

25:                                               ; preds = %15
  %26 = icmp eq i16 %18, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %25
  %28 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %29 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %28, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %369

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2
  %32 = zext i16 %19 to i64
  tail call void @_ZNSt3__16vectorIN3ots19OpenTypeKERNFormat0ENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"* %31, i64 %32)
  %33 = zext i16 %19 to i32
  %34 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %4 to i8*
  %35 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 5
  %36 = bitcast %"class.std::__1::vector.24"* %35 to i8*
  %37 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 0
  %38 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %39 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 2
  %41 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 3
  %42 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 4
  %43 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %43 to i64*
  %45 = bitcast %"class.std::__1::vector.24"* %35 to i64*
  %46 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 5, i32 0, i32 1
  %47 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %46 to i64*
  %48 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %35, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2, i32 0, i32 1
  %50 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"struct.ots::OpenTypeKERNFormat0"** %49 to i64*
  %52 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %4, i64 0, i32 5, i32 0, i32 0
  br label %53

53:                                               ; preds = %30, %356
  %54 = phi i1 [ undef, %30 ], [ %349, %356 ]
  %55 = phi i32 [ 0, %30 ], [ %357, %356 ]
  %56 = phi i64 [ 4, %30 ], [ %347, %356 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #9
  %57 = add i64 %56, 2
  %58 = icmp ugt i64 %57, %2
  br i1 %58, label %66, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds i8, i8* %1, i64 %56
  %61 = bitcast i8* %60 to i16*
  %62 = load i16, i16* %61, align 1
  %63 = call i16 @llvm.bswap.i16(i16 %62) #9
  store i16 %63, i16* %37, align 8
  %64 = add i64 %56, 4
  %65 = icmp ugt i64 %64, %2
  br i1 %65, label %66, label %69

66:                                               ; preds = %59, %53
  %67 = phi i64 [ %56, %53 ], [ %57, %59 ]
  %68 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 %55) #9
  br label %346

69:                                               ; preds = %59
  %70 = icmp eq i16 %62, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %69
  %72 = zext i16 %63 to i32
  %73 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0), i32 %55, i32 %72) #9
  br label %346

74:                                               ; preds = %69
  %75 = getelementptr inbounds i8, i8* %1, i64 %57
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 1
  %78 = call i16 @llvm.bswap.i16(i16 %77) #9
  %79 = zext i16 %78 to i64
  %80 = add i64 %56, %79
  %81 = icmp ugt i64 %80, %2
  br i1 %81, label %82, label %84

82:                                               ; preds = %74
  %83 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i32 %55, i64 %64) #9
  br label %346

84:                                               ; preds = %74
  %85 = add i64 %56, 6
  %86 = icmp ugt i64 %85, %2
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0), i32 %55) #9
  br label %346

89:                                               ; preds = %84
  %90 = getelementptr inbounds i8, i8* %1, i64 %64
  %91 = bitcast i8* %90 to i16*
  %92 = load i16, i16* %91, align 1
  %93 = call i16 @llvm.bswap.i16(i16 %92) #9
  store i16 %93, i16* %39, align 2
  %94 = zext i16 %93 to i32
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %89
  %98 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.7, i64 0, i64 0)) #9
  br label %346

99:                                               ; preds = %89
  %100 = and i32 %94, 240
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0)) #9
  br label %346

104:                                              ; preds = %99
  %105 = lshr i32 %94, 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i64 0, i64 0), i32 %55, i32 %105) #9
  br label %346

109:                                              ; preds = %104
  %110 = add i64 %56, 8
  %111 = icmp ugt i64 %110, %2
  br i1 %111, label %133, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds i8, i8* %1, i64 %85
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 1
  %116 = call i16 @llvm.bswap.i16(i16 %115) #9
  %117 = add i64 %56, 10
  %118 = icmp ugt i64 %117, %2
  br i1 %118, label %133, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds i8, i8* %1, i64 %110
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 1
  %123 = call i16 @llvm.bswap.i16(i16 %122) #9
  store i16 %123, i16* %40, align 4
  %124 = add i64 %56, 12
  %125 = icmp ugt i64 %124, %2
  br i1 %125, label %133, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds i8, i8* %1, i64 %117
  %128 = bitcast i8* %127 to i16*
  %129 = load i16, i16* %128, align 1
  %130 = call i16 @llvm.bswap.i16(i16 %129) #9
  store i16 %130, i16* %41, align 2
  %131 = add i64 %56, 14
  %132 = icmp ugt i64 %131, %2
  br i1 %132, label %133, label %136

133:                                              ; preds = %126, %119, %112, %109
  %134 = phi i64 [ %85, %109 ], [ %110, %112 ], [ %117, %119 ], [ %124, %126 ]
  %135 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i32 %55) #9
  br label %346

136:                                              ; preds = %126
  %137 = getelementptr inbounds i8, i8* %1, i64 %124
  %138 = bitcast i8* %137 to i16*
  %139 = load i16, i16* %138, align 1
  %140 = call i16 @llvm.bswap.i16(i16 %139) #9
  store i16 %140, i16* %42, align 8
  %141 = icmp eq i16 %115, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %136
  %143 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %346

144:                                              ; preds = %136
  %145 = icmp ugt i16 %116, 10922
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = zext i16 %116 to i32
  br label %150

148:                                              ; preds = %144
  %149 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %346

150:                                              ; preds = %146, %150
  %151 = phi i32 [ %152, %150 ], [ 0, %146 ]
  %152 = add i32 %151, 1
  %153 = lshr i32 %147, %152
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %150

155:                                              ; preds = %150
  %156 = shl i32 1, %151
  %157 = trunc i32 %156 to i16
  %158 = mul i16 %157, 6
  %159 = icmp eq i16 %123, %158
  br i1 %159, label %163, label %160

160:                                              ; preds = %155
  %161 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0)) #9
  store i16 %158, i16* %40, align 4
  %162 = load i16, i16* %41, align 2
  br label %163

163:                                              ; preds = %155, %160
  %164 = phi i16 [ %123, %155 ], [ %158, %160 ]
  %165 = phi i16 [ %130, %155 ], [ %162, %160 ]
  %166 = zext i16 %165 to i32
  %167 = icmp eq i32 %151, %166
  br i1 %167, label %170, label %168

168:                                              ; preds = %163
  %169 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), i32 %55, i32 %166) #9
  br label %346

170:                                              ; preds = %163
  %171 = mul i16 %116, 6
  %172 = sub i16 %171, %164
  %173 = load i16, i16* %42, align 8
  %174 = icmp eq i16 %173, %172
  br i1 %174, label %177, label %175

175:                                              ; preds = %170
  %176 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #9
  store i16 %172, i16* %42, align 8
  br label %177

177:                                              ; preds = %170, %175
  %178 = zext i16 %116 to i64
  %179 = load i64, i64* %44, align 8
  %180 = load i64, i64* %45, align 8
  %181 = sub i64 %179, %180
  %182 = sdiv exact i64 %181, 6
  %183 = icmp ult i64 %182, %178
  br i1 %183, label %184, label %206

184:                                              ; preds = %177
  %185 = load i64, i64* %47, align 8
  %186 = sub i64 %185, %180
  %187 = sdiv exact i64 %186, 6
  %188 = mul nuw nsw i64 %178, 6
  %189 = call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to %"struct.ots::OpenTypeKERNFormat0Pair"*
  %191 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %190, i64 %187
  %192 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %191 to i64
  %193 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %190, i64 %178
  %194 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %193 to i64
  %195 = sdiv exact i64 %186, -6
  %196 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %191, i64 %195
  %197 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %196 to i64
  %198 = icmp sgt i64 %186, 0
  br i1 %198, label %199, label %202

199:                                              ; preds = %184
  %200 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %196 to i8*
  %201 = inttoptr i64 %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %200, i8* align 2 %201, i64 %186, i1 false) #9
  br label %202

202:                                              ; preds = %199, %184
  store i64 %197, i64* %45, align 8
  store i64 %192, i64* %47, align 8
  store i64 %194, i64* %44, align 8
  %203 = icmp eq i64 %180, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %202
  %205 = inttoptr i64 %180 to i8*
  call void @_ZdlPv(i8* %205) #10
  br label %206

206:                                              ; preds = %204, %202, %177
  br label %207

207:                                              ; preds = %206, %300
  %208 = phi i32 [ %301, %300 ], [ 0, %206 ]
  %209 = phi i32 [ %238, %300 ], [ 0, %206 ]
  %210 = phi i64 [ %225, %300 ], [ %131, %206 ]
  %211 = add i64 %210, 2
  %212 = icmp ugt i64 %211, %2
  br i1 %212, label %227, label %213

213:                                              ; preds = %207
  %214 = getelementptr inbounds i8, i8* %1, i64 %210
  %215 = bitcast i8* %214 to i16*
  %216 = load i16, i16* %215, align 1
  %217 = call i16 @llvm.bswap.i16(i16 %216) #9
  %218 = add i64 %210, 4
  %219 = icmp ugt i64 %218, %2
  br i1 %219, label %227, label %220

220:                                              ; preds = %213
  %221 = getelementptr inbounds i8, i8* %1, i64 %211
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 1
  %224 = call i16 @llvm.bswap.i16(i16 %223) #9
  %225 = add i64 %210, 6
  %226 = icmp ugt i64 %225, %2
  br i1 %226, label %227, label %230

227:                                              ; preds = %220, %213, %207
  %228 = phi i64 [ %210, %207 ], [ %211, %213 ], [ %218, %220 ]
  %229 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16, i64 0, i64 0), i32 %55, i32 %208) #9
  br label %346

230:                                              ; preds = %220
  %231 = getelementptr inbounds i8, i8* %1, i64 %218
  %232 = bitcast i8* %231 to i16*
  %233 = load i16, i16* %232, align 1
  %234 = call i16 @llvm.bswap.i16(i16 %233) #9
  %235 = zext i16 %217 to i32
  %236 = shl nuw i32 %235, 16
  %237 = zext i16 %224 to i32
  %238 = or i32 %236, %237
  %239 = icmp eq i32 %208, 0
  %240 = icmp ugt i32 %238, %209
  %241 = or i1 %239, %240
  br i1 %241, label %244, label %242

242:                                              ; preds = %230
  %243 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %346

244:                                              ; preds = %230
  %245 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %46, align 8
  %246 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %43, align 8
  %247 = icmp eq %"struct.ots::OpenTypeKERNFormat0Pair"* %245, %246
  %248 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %246 to i64
  br i1 %247, label %255, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %245, i64 0, i32 0
  store i16 %217, i16* %250, align 2
  %251 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %245, i64 0, i32 1
  store i16 %224, i16* %251, align 2
  %252 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %245, i64 0, i32 2
  store i16 %234, i16* %252, align 2
  %253 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %245, i64 1
  %254 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %253 to i64
  store i64 %254, i64* %47, align 8
  br label %300

255:                                              ; preds = %244
  %256 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %245 to i64
  %257 = load i64, i64* %45, align 8
  %258 = sub i64 %256, %257
  %259 = sdiv exact i64 %258, 6
  %260 = add nsw i64 %259, 1
  %261 = icmp ugt i64 %260, 3074457345618258602
  br i1 %261, label %262, label %264

262:                                              ; preds = %255
  %263 = bitcast %"class.std::__1::vector.24"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %263) #11
  unreachable

264:                                              ; preds = %255
  %265 = sub i64 %248, %257
  %266 = sdiv exact i64 %265, 6
  %267 = icmp ult i64 %266, 1537228672809129301
  br i1 %267, label %268, label %273

268:                                              ; preds = %264
  %269 = shl nsw i64 %266, 1
  %270 = icmp ult i64 %269, %260
  %271 = select i1 %270, i64 %260, i64 %269
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %278, label %273

273:                                              ; preds = %268, %264
  %274 = phi i64 [ %271, %268 ], [ 3074457345618258602, %264 ]
  %275 = mul i64 %274, 6
  %276 = call i8* @_Znwm(i64 %275) #10
  %277 = bitcast i8* %276 to %"struct.ots::OpenTypeKERNFormat0Pair"*
  br label %278

278:                                              ; preds = %273, %268
  %279 = phi i64 [ %274, %273 ], [ 0, %268 ]
  %280 = phi %"struct.ots::OpenTypeKERNFormat0Pair"* [ %277, %273 ], [ null, %268 ]
  %281 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %280, i64 %259
  %282 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %280, i64 %279
  %283 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %282 to i64
  %284 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %281, i64 0, i32 0
  store i16 %217, i16* %284, align 2
  %285 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %280, i64 %259, i32 1
  store i16 %224, i16* %285, align 2
  %286 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %280, i64 %259, i32 2
  store i16 %234, i16* %286, align 2
  %287 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %281, i64 1
  %288 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %287 to i64
  %289 = sdiv exact i64 %258, -6
  %290 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %281, i64 %289
  %291 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %290 to i64
  %292 = icmp sgt i64 %258, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %278
  %294 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %290 to i8*
  %295 = inttoptr i64 %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %294, i8* align 2 %295, i64 %258, i1 false) #9
  br label %296

296:                                              ; preds = %293, %278
  store i64 %291, i64* %45, align 8
  store i64 %288, i64* %47, align 8
  store i64 %283, i64* %44, align 8
  %297 = icmp eq i64 %257, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %257 to i8*
  call void @_ZdlPv(i8* %299) #10
  br label %300

300:                                              ; preds = %249, %296, %298
  %301 = add nuw nsw i32 %208, 1
  %302 = icmp ult i32 %301, %147
  br i1 %302, label %207, label %303

303:                                              ; preds = %300
  %304 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %49, align 8
  %305 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %50, align 8
  %306 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %304, %305
  br i1 %306, label %345, label %307

307:                                              ; preds = %303
  %308 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* nonnull align 8 %34, i64 10, i1 false) #9
  %309 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %304, i64 0, i32 5
  %310 = bitcast %"class.std::__1::vector.24"* %309 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %310, i8 0, i64 24, i1 false) #9
  %311 = load i64, i64* %47, align 8
  %312 = load i64, i64* %45, align 8
  %313 = sub i64 %311, %312
  %314 = sdiv exact i64 %313, 6
  %315 = icmp eq i64 %313, 0
  br i1 %315, label %342, label %316

316:                                              ; preds = %307
  %317 = icmp ugt i64 %314, 3074457345618258602
  br i1 %317, label %318, label %320

318:                                              ; preds = %316
  %319 = bitcast %"class.std::__1::vector.24"* %309 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %319) #11
  unreachable

320:                                              ; preds = %316
  %321 = call i8* @_Znwm(i64 %313) #10
  %322 = bitcast i8* %321 to %"struct.ots::OpenTypeKERNFormat0Pair"*
  %323 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %304, i64 0, i32 5, i32 0, i32 1
  %324 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %323 to i8**
  store i8* %321, i8** %324, align 8
  %325 = bitcast %"class.std::__1::vector.24"* %309 to i8**
  store i8* %321, i8** %325, align 8
  %326 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %322, i64 %314
  %327 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %304, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.ots::OpenTypeKERNFormat0Pair"* %326, %"struct.ots::OpenTypeKERNFormat0Pair"** %327, align 8
  %328 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %48, align 8
  %329 = load i64, i64* %47, align 8
  %330 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %323 to i64*
  %331 = ptrtoint i8* %321 to i64
  %332 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %328 to i64
  %333 = sub i64 %329, %332
  %334 = icmp sgt i64 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %320
  %336 = udiv exact i64 %333, 6
  %337 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %328 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %321, i8* align 2 %337, i64 %333, i1 false) #9
  %338 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %322, i64 %336
  %339 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %338 to i64
  br label %340

340:                                              ; preds = %335, %320
  %341 = phi i64 [ %339, %335 ], [ %331, %320 ]
  store i64 %341, i64* %330, align 8
  br label %342

342:                                              ; preds = %340, %307
  %343 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %304, i64 1
  %344 = ptrtoint %"struct.ots::OpenTypeKERNFormat0"* %343 to i64
  store i64 %344, i64* %51, align 8
  br label %346

345:                                              ; preds = %303
  call void @_ZNSt3__16vectorIN3ots19OpenTypeKERNFormat0ENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %31, %"struct.ots::OpenTypeKERNFormat0"* nonnull dereferenceable(40) %4) #9
  br label %346

346:                                              ; preds = %242, %227, %133, %142, %168, %148, %342, %345, %82, %87, %97, %102, %107, %71, %66
  %347 = phi i64 [ %64, %82 ], [ %85, %97 ], [ %85, %107 ], [ %85, %102 ], [ %64, %87 ], [ %64, %71 ], [ %67, %66 ], [ %131, %142 ], [ %131, %148 ], [ %131, %168 ], [ %134, %133 ], [ %225, %342 ], [ %225, %345 ], [ %228, %227 ], [ %225, %242 ]
  %348 = phi i32 [ 1, %82 ], [ 4, %97 ], [ 4, %107 ], [ 1, %102 ], [ 1, %87 ], [ 4, %71 ], [ 1, %66 ], [ 1, %142 ], [ 1, %148 ], [ 1, %168 ], [ 1, %133 ], [ 0, %342 ], [ 0, %345 ], [ 1, %227 ], [ 1, %242 ]
  %349 = phi i1 [ %83, %82 ], [ %54, %97 ], [ %54, %107 ], [ %103, %102 ], [ %88, %87 ], [ %54, %71 ], [ %68, %66 ], [ %143, %142 ], [ %149, %148 ], [ %169, %168 ], [ %135, %133 ], [ %54, %342 ], [ %54, %345 ], [ %229, %227 ], [ %243, %242 ]
  %350 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %52, align 8
  %351 = icmp eq %"struct.ots::OpenTypeKERNFormat0Pair"* %350, null
  br i1 %351, label %355, label %352

352:                                              ; preds = %346
  %353 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %350 to i64
  store i64 %353, i64* %47, align 8
  %354 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %350 to i8*
  call void @_ZdlPv(i8* %354) #10
  br label %355

355:                                              ; preds = %346, %352
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #9
  switch i32 %348, label %369 [
    i32 0, label %356
    i32 4, label %356
  ]

356:                                              ; preds = %355, %355
  %357 = add nuw nsw i32 %55, 1
  %358 = icmp ult i32 %357, %33
  br i1 %358, label %53, label %359

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2, i32 0, i32 1
  %361 = bitcast %"struct.ots::OpenTypeKERNFormat0"** %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = bitcast %"class.std::__1::vector"* %31 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = icmp eq i64 %362, %364
  br i1 %365, label %366, label %369

366:                                              ; preds = %359
  %367 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %368 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %367, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0)) #9
  br label %369

369:                                              ; preds = %355, %359, %366, %27, %21, %12
  %370 = phi i1 [ %24, %21 ], [ %29, %27 ], [ %368, %366 ], [ %14, %12 ], [ true, %359 ], [ %349, %355 ]
  ret i1 %370
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots19OpenTypeKERNFormat0ENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.ots::OpenTypeKERNFormat0"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.ots::OpenTypeKERNFormat0"*
  br i1 %10, label %12, label %83

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.ots::OpenTypeKERNFormat0"** %13 to i64*
  %15 = icmp ugt i64 %1, 461168601842738790
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 40
  %21 = mul i64 %1, 40
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"struct.ots::OpenTypeKERNFormat0"*
  %24 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %23, i64 %20
  %25 = ptrtoint %"struct.ots::OpenTypeKERNFormat0"* %24 to i64
  %26 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %23, i64 %1
  %27 = ptrtoint %"struct.ots::OpenTypeKERNFormat0"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.ots::OpenTypeKERNFormat0"*
  %29 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %28, %11
  br i1 %29, label %60, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %32, i64 -1
  %35 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %33 to i8*
  %36 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 10, i1 false) #9
  %37 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %31, i64 -1, i32 5
  %38 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %32, i64 -1, i32 5
  %39 = bitcast %"class.std::__1::vector.24"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #9
  %40 = bitcast %"class.std::__1::vector.24"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.24"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %32, i64 -1, i32 5, i32 0, i32 1
  %44 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %31, i64 -1, i32 5, i32 0, i32 1
  %47 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %32, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %31, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.std::__1::vector.24"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #9
  %54 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %34, %11
  br i1 %54, label %55, label %30

55:                                               ; preds = %30
  %56 = ptrtoint %"struct.ots::OpenTypeKERNFormat0"* %33 to i64
  %57 = load i64, i64* %6, align 8
  %58 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %13, align 8
  %59 = inttoptr i64 %57 to %"struct.ots::OpenTypeKERNFormat0"*
  br label %60

60:                                               ; preds = %17, %55
  %61 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %59, %55 ], [ %28, %17 ]
  %62 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %58, %55 ], [ %11, %17 ]
  %63 = phi i64 [ %56, %55 ], [ %25, %17 ]
  %64 = phi i64 [ %57, %55 ], [ %18, %17 ]
  store i64 %63, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %65 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %62, %61
  br i1 %65, label %79, label %66

66:                                               ; preds = %60, %77
  %67 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %68, %77 ], [ %62, %60 ]
  %68 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %67, i64 -1, i32 5, i32 0, i32 0
  %70 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %69, align 8
  %71 = icmp eq %"struct.ots::OpenTypeKERNFormat0Pair"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %66
  %73 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %70 to i64
  %74 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %67, i64 -1, i32 5, i32 0, i32 1
  %75 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %70 to i8*
  tail call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %72, %66
  %78 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %68, %61
  br i1 %78, label %79, label %66

79:                                               ; preds = %77, %60
  %80 = icmp eq i64 %64, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %64 to i8*
  tail call void @_ZdlPv(i8* %82) #10
  br label %83

83:                                               ; preds = %81, %79, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeKERN9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeKERN"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i16, align 2
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i16, align 2
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i16, align 2
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i16, align 2
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i16, align 2
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i16, align 2
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i16, align 2
  %39 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2, i32 0, i32 1
  %41 = bitcast %"struct.ots::OpenTypeKERNFormat0"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector"* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = sdiv exact i64 %45, 40
  %47 = trunc i64 %46 to i16
  %48 = icmp ult i64 %46, 65536
  br i1 %48, label %49, label %169

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 1
  %51 = load i16, i16* %50, align 2
  %52 = bitcast i16* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %52)
  %53 = tail call i16 @llvm.bswap.i16(i16 %51) #9
  store i16 %53, i16* %35, align 2
  %54 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %55 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %56 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %55, i64 4
  %57 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %56, align 8
  %58 = tail call i64 %57(%"class.ots::OTSStream"* %1) #9
  %59 = and i64 %58, 3
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  br label %76

64:                                               ; preds = %49
  %65 = sub nuw nsw i64 4, %59
  %66 = icmp ult i64 %65, 2
  %67 = select i1 %66, i64 %65, i64 2
  %68 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #9
  store i32 0, i32* %33, align 4
  %69 = getelementptr inbounds i8, i8* %68, i64 %59
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* nonnull align 2 %52, i64 %67, i1 false) #9
  %70 = load i32, i32* %33, align 4
  %71 = tail call i32 @llvm.bswap.i32(i32 %70) #9
  %72 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, %71
  store i32 %74, i32* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #9
  %75 = icmp eq i64 %59, 3
  br i1 %75, label %76, label %86

76:                                               ; preds = %64, %61
  %77 = phi i32 [ %74, %64 ], [ %63, %61 ]
  %78 = phi i64 [ %67, %64 ], [ 0, %61 ]
  %79 = phi i64 [ 1, %64 ], [ 2, %61 ]
  %80 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80)
  store i32 0, i32* %34, align 4
  %81 = getelementptr inbounds i8, i8* %52, i64 %78
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %80, i8* align 1 %81, i64 %79, i1 false) #9
  %82 = load i32, i32* %34, align 4
  %83 = tail call i32 @llvm.bswap.i32(i32 %82) #9
  %84 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %85 = add i32 %83, %77
  store i32 %85, i32* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80)
  br label %86

86:                                               ; preds = %64, %76
  %87 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %88 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %89 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %88, i64 2
  %90 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %89, align 8
  %91 = call zeroext i1 %90(%"class.ots::OTSStream"* %1, i8* nonnull %52, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %52)
  br i1 %91, label %92, label %169

92:                                               ; preds = %86
  %93 = bitcast i16* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %93)
  %94 = call i16 @llvm.bswap.i16(i16 %47) #9
  store i16 %94, i16* %32, align 2
  %95 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %96 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %95, i64 4
  %97 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %96, align 8
  %98 = call i64 %97(%"class.ots::OTSStream"* %1) #9
  %99 = and i64 %98, 3
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  br label %116

104:                                              ; preds = %92
  %105 = sub nuw nsw i64 4, %99
  %106 = icmp ult i64 %105, 2
  %107 = select i1 %106, i64 %105, i64 2
  %108 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #9
  store i32 0, i32* %30, align 4
  %109 = getelementptr inbounds i8, i8* %108, i64 %99
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* nonnull align 2 %93, i64 %107, i1 false) #9
  %110 = load i32, i32* %30, align 4
  %111 = call i32 @llvm.bswap.i32(i32 %110) #9
  %112 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, %111
  store i32 %114, i32* %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #9
  %115 = icmp eq i64 %99, 3
  br i1 %115, label %116, label %126

116:                                              ; preds = %104, %101
  %117 = phi i32 [ %114, %104 ], [ %103, %101 ]
  %118 = phi i64 [ %107, %104 ], [ 0, %101 ]
  %119 = phi i64 [ 1, %104 ], [ 2, %101 ]
  %120 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120)
  store i32 0, i32* %31, align 4
  %121 = getelementptr inbounds i8, i8* %93, i64 %118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %120, i8* align 1 %121, i64 %119, i1 false) #9
  %122 = load i32, i32* %31, align 4
  %123 = call i32 @llvm.bswap.i32(i32 %122) #9
  %124 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %125 = add i32 %123, %117
  store i32 %125, i32* %124, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120)
  br label %126

126:                                              ; preds = %104, %116
  %127 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %128 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %127, i64 2
  %129 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %128, align 8
  %130 = call zeroext i1 %129(%"class.ots::OTSStream"* %1, i8* nonnull %93, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %93)
  br i1 %130, label %131, label %169

131:                                              ; preds = %126
  %132 = trunc i64 %46 to i32
  %133 = and i32 %132, 65535
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %591, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %39, i64 0, i32 0, i32 0
  %137 = bitcast i16* %26 to i8*
  %138 = bitcast i32* %24 to i8*
  %139 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %140 = bitcast i32* %25 to i8*
  %141 = bitcast i16* %23 to i8*
  %142 = bitcast i32* %21 to i8*
  %143 = bitcast i32* %22 to i8*
  %144 = bitcast i16* %20 to i8*
  %145 = bitcast i32* %18 to i8*
  %146 = bitcast i32* %19 to i8*
  %147 = bitcast i16* %17 to i8*
  %148 = bitcast i32* %15 to i8*
  %149 = bitcast i32* %16 to i8*
  %150 = bitcast i16* %14 to i8*
  %151 = bitcast i32* %12 to i8*
  %152 = bitcast i32* %13 to i8*
  %153 = bitcast i16* %11 to i8*
  %154 = bitcast i32* %9 to i8*
  %155 = bitcast i32* %10 to i8*
  %156 = bitcast i16* %8 to i8*
  %157 = bitcast i32* %6 to i8*
  %158 = bitcast i32* %7 to i8*
  %159 = bitcast i16* %5 to i8*
  %160 = bitcast i32* %3 to i8*
  %161 = bitcast i32* %4 to i8*
  %162 = bitcast i16* %29 to i8*
  %163 = bitcast i32* %27 to i8*
  %164 = bitcast i32* %28 to i8*
  %165 = bitcast i16* %38 to i8*
  %166 = bitcast i32* %36 to i8*
  %167 = bitcast i32* %37 to i8*
  %168 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  br label %172

169:                                              ; preds = %2, %126, %86
  %170 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %171 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %170, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0)) #9
  ret i1 %171

172:                                              ; preds = %135, %586
  %173 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %168, %135 ], [ %587, %586 ]
  %174 = phi i32 [ 0, %135 ], [ %589, %586 ]
  %175 = phi i16 [ 0, %135 ], [ %588, %586 ]
  %176 = zext i16 %175 to i64
  %177 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %173, i64 %176, i32 5
  %178 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %173, i64 %176, i32 5, i32 0, i32 1
  %179 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.std::__1::vector.24"* %177 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = sub i64 %180, %182
  %184 = add i64 %183, 14
  %185 = icmp ugt i64 %184, 65535
  br i1 %185, label %451, label %186

186:                                              ; preds = %172
  %187 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %173, i64 %176, i32 0
  %188 = load i16, i16* %187, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %137)
  %189 = call i16 @llvm.bswap.i16(i16 %188) #9
  store i16 %189, i16* %26, align 2
  %190 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %191 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %190, i64 4
  %192 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %191, align 8
  %193 = call i64 %192(%"class.ots::OTSStream"* %1) #9
  %194 = and i64 %193, 3
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %186
  %197 = load i32, i32* %139, align 8
  br label %208

198:                                              ; preds = %186
  %199 = sub nuw nsw i64 4, %194
  %200 = icmp ult i64 %199, 2
  %201 = select i1 %200, i64 %199, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #9
  store i32 0, i32* %24, align 4
  %202 = getelementptr inbounds i8, i8* %138, i64 %194
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %202, i8* nonnull align 2 %137, i64 %201, i1 false) #9
  %203 = load i32, i32* %24, align 4
  %204 = call i32 @llvm.bswap.i32(i32 %203) #9
  %205 = load i32, i32* %139, align 8
  %206 = add i32 %205, %204
  store i32 %206, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #9
  %207 = icmp eq i64 %194, 3
  br i1 %207, label %208, label %216

208:                                              ; preds = %198, %196
  %209 = phi i32 [ %206, %198 ], [ %197, %196 ]
  %210 = phi i64 [ %201, %198 ], [ 0, %196 ]
  %211 = phi i64 [ 1, %198 ], [ 2, %196 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140)
  store i32 0, i32* %25, align 4
  %212 = getelementptr inbounds i8, i8* %137, i64 %210
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %140, i8* align 1 %212, i64 %211, i1 false) #9
  %213 = load i32, i32* %25, align 4
  %214 = call i32 @llvm.bswap.i32(i32 %213) #9
  %215 = add i32 %214, %209
  store i32 %215, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140)
  br label %216

216:                                              ; preds = %198, %208
  %217 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %218 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %217, i64 2
  %219 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %218, align 8
  %220 = call zeroext i1 %219(%"class.ots::OTSStream"* %1, i8* nonnull %137, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %137)
  br i1 %220, label %221, label %451

221:                                              ; preds = %216
  %222 = trunc i64 %184 to i16
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %141)
  %223 = call i16 @llvm.bswap.i16(i16 %222) #9
  store i16 %223, i16* %23, align 2
  %224 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %225 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %224, i64 4
  %226 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %225, align 8
  %227 = call i64 %226(%"class.ots::OTSStream"* %1) #9
  %228 = and i64 %227, 3
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %221
  %231 = load i32, i32* %139, align 8
  br label %242

232:                                              ; preds = %221
  %233 = sub nuw nsw i64 4, %228
  %234 = icmp ult i64 %233, 2
  %235 = select i1 %234, i64 %233, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #9
  store i32 0, i32* %21, align 4
  %236 = getelementptr inbounds i8, i8* %142, i64 %228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %236, i8* nonnull align 2 %141, i64 %235, i1 false) #9
  %237 = load i32, i32* %21, align 4
  %238 = call i32 @llvm.bswap.i32(i32 %237) #9
  %239 = load i32, i32* %139, align 8
  %240 = add i32 %239, %238
  store i32 %240, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #9
  %241 = icmp eq i64 %228, 3
  br i1 %241, label %242, label %250

242:                                              ; preds = %232, %230
  %243 = phi i32 [ %240, %232 ], [ %231, %230 ]
  %244 = phi i64 [ %235, %232 ], [ 0, %230 ]
  %245 = phi i64 [ 1, %232 ], [ 2, %230 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143)
  store i32 0, i32* %22, align 4
  %246 = getelementptr inbounds i8, i8* %141, i64 %244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %143, i8* align 1 %246, i64 %245, i1 false) #9
  %247 = load i32, i32* %22, align 4
  %248 = call i32 @llvm.bswap.i32(i32 %247) #9
  %249 = add i32 %248, %243
  store i32 %249, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143)
  br label %250

250:                                              ; preds = %232, %242
  %251 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %252 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %251, i64 2
  %253 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %252, align 8
  %254 = call zeroext i1 %253(%"class.ots::OTSStream"* %1, i8* nonnull %141, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %141)
  br i1 %254, label %255, label %451

255:                                              ; preds = %250
  %256 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %257 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %256, i64 %176, i32 1
  %258 = load i16, i16* %257, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %144)
  %259 = call i16 @llvm.bswap.i16(i16 %258) #9
  store i16 %259, i16* %20, align 2
  %260 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %261 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %260, i64 4
  %262 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %261, align 8
  %263 = call i64 %262(%"class.ots::OTSStream"* %1) #9
  %264 = and i64 %263, 3
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %255
  %267 = load i32, i32* %139, align 8
  br label %278

268:                                              ; preds = %255
  %269 = sub nuw nsw i64 4, %264
  %270 = icmp ult i64 %269, 2
  %271 = select i1 %270, i64 %269, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #9
  store i32 0, i32* %18, align 4
  %272 = getelementptr inbounds i8, i8* %145, i64 %264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %272, i8* nonnull align 2 %144, i64 %271, i1 false) #9
  %273 = load i32, i32* %18, align 4
  %274 = call i32 @llvm.bswap.i32(i32 %273) #9
  %275 = load i32, i32* %139, align 8
  %276 = add i32 %275, %274
  store i32 %276, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #9
  %277 = icmp eq i64 %264, 3
  br i1 %277, label %278, label %286

278:                                              ; preds = %268, %266
  %279 = phi i32 [ %276, %268 ], [ %267, %266 ]
  %280 = phi i64 [ %271, %268 ], [ 0, %266 ]
  %281 = phi i64 [ 1, %268 ], [ 2, %266 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146)
  store i32 0, i32* %19, align 4
  %282 = getelementptr inbounds i8, i8* %144, i64 %280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %146, i8* align 1 %282, i64 %281, i1 false) #9
  %283 = load i32, i32* %19, align 4
  %284 = call i32 @llvm.bswap.i32(i32 %283) #9
  %285 = add i32 %284, %279
  store i32 %285, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146)
  br label %286

286:                                              ; preds = %268, %278
  %287 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %288 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %287, i64 2
  %289 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %288, align 8
  %290 = call zeroext i1 %289(%"class.ots::OTSStream"* %1, i8* nonnull %144, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %144)
  br i1 %290, label %291, label %451

291:                                              ; preds = %286
  %292 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %293 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %292, i64 %176, i32 5
  %294 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %292, i64 %176, i32 5, i32 0, i32 1
  %295 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = bitcast %"class.std::__1::vector.24"* %293 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = sub i64 %296, %298
  %300 = sdiv exact i64 %299, 6
  %301 = trunc i64 %300 to i16
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %147)
  %302 = call i16 @llvm.bswap.i16(i16 %301) #9
  store i16 %302, i16* %17, align 2
  %303 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %304 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %303, i64 4
  %305 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %304, align 8
  %306 = call i64 %305(%"class.ots::OTSStream"* %1) #9
  %307 = and i64 %306, 3
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %291
  %310 = load i32, i32* %139, align 8
  br label %321

311:                                              ; preds = %291
  %312 = sub nuw nsw i64 4, %307
  %313 = icmp ult i64 %312, 2
  %314 = select i1 %313, i64 %312, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #9
  store i32 0, i32* %15, align 4
  %315 = getelementptr inbounds i8, i8* %148, i64 %307
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %315, i8* nonnull align 2 %147, i64 %314, i1 false) #9
  %316 = load i32, i32* %15, align 4
  %317 = call i32 @llvm.bswap.i32(i32 %316) #9
  %318 = load i32, i32* %139, align 8
  %319 = add i32 %318, %317
  store i32 %319, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #9
  %320 = icmp eq i64 %307, 3
  br i1 %320, label %321, label %329

321:                                              ; preds = %311, %309
  %322 = phi i32 [ %319, %311 ], [ %310, %309 ]
  %323 = phi i64 [ %314, %311 ], [ 0, %309 ]
  %324 = phi i64 [ 1, %311 ], [ 2, %309 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149)
  store i32 0, i32* %16, align 4
  %325 = getelementptr inbounds i8, i8* %147, i64 %323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %149, i8* align 1 %325, i64 %324, i1 false) #9
  %326 = load i32, i32* %16, align 4
  %327 = call i32 @llvm.bswap.i32(i32 %326) #9
  %328 = add i32 %327, %322
  store i32 %328, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149)
  br label %329

329:                                              ; preds = %311, %321
  %330 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %331 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %330, i64 2
  %332 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %331, align 8
  %333 = call zeroext i1 %332(%"class.ots::OTSStream"* %1, i8* nonnull %147, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %147)
  br i1 %333, label %334, label %451

334:                                              ; preds = %329
  %335 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %336 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %335, i64 %176, i32 2
  %337 = load i16, i16* %336, align 4
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %150)
  %338 = call i16 @llvm.bswap.i16(i16 %337) #9
  store i16 %338, i16* %14, align 2
  %339 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %340 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %339, i64 4
  %341 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %340, align 8
  %342 = call i64 %341(%"class.ots::OTSStream"* %1) #9
  %343 = and i64 %342, 3
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %347

345:                                              ; preds = %334
  %346 = load i32, i32* %139, align 8
  br label %357

347:                                              ; preds = %334
  %348 = sub nuw nsw i64 4, %343
  %349 = icmp ult i64 %348, 2
  %350 = select i1 %349, i64 %348, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #9
  store i32 0, i32* %12, align 4
  %351 = getelementptr inbounds i8, i8* %151, i64 %343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %351, i8* nonnull align 2 %150, i64 %350, i1 false) #9
  %352 = load i32, i32* %12, align 4
  %353 = call i32 @llvm.bswap.i32(i32 %352) #9
  %354 = load i32, i32* %139, align 8
  %355 = add i32 %354, %353
  store i32 %355, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #9
  %356 = icmp eq i64 %343, 3
  br i1 %356, label %357, label %365

357:                                              ; preds = %347, %345
  %358 = phi i32 [ %355, %347 ], [ %346, %345 ]
  %359 = phi i64 [ %350, %347 ], [ 0, %345 ]
  %360 = phi i64 [ 1, %347 ], [ 2, %345 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152)
  store i32 0, i32* %13, align 4
  %361 = getelementptr inbounds i8, i8* %150, i64 %359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %152, i8* align 1 %361, i64 %360, i1 false) #9
  %362 = load i32, i32* %13, align 4
  %363 = call i32 @llvm.bswap.i32(i32 %362) #9
  %364 = add i32 %363, %358
  store i32 %364, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152)
  br label %365

365:                                              ; preds = %347, %357
  %366 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %367 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %366, i64 2
  %368 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %367, align 8
  %369 = call zeroext i1 %368(%"class.ots::OTSStream"* %1, i8* nonnull %150, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %150)
  br i1 %369, label %370, label %451

370:                                              ; preds = %365
  %371 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %372 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %371, i64 %176, i32 3
  %373 = load i16, i16* %372, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %153)
  %374 = call i16 @llvm.bswap.i16(i16 %373) #9
  store i16 %374, i16* %11, align 2
  %375 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %376 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %375, i64 4
  %377 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %376, align 8
  %378 = call i64 %377(%"class.ots::OTSStream"* %1) #9
  %379 = and i64 %378, 3
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %383

381:                                              ; preds = %370
  %382 = load i32, i32* %139, align 8
  br label %393

383:                                              ; preds = %370
  %384 = sub nuw nsw i64 4, %379
  %385 = icmp ult i64 %384, 2
  %386 = select i1 %385, i64 %384, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154) #9
  store i32 0, i32* %9, align 4
  %387 = getelementptr inbounds i8, i8* %154, i64 %379
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %387, i8* nonnull align 2 %153, i64 %386, i1 false) #9
  %388 = load i32, i32* %9, align 4
  %389 = call i32 @llvm.bswap.i32(i32 %388) #9
  %390 = load i32, i32* %139, align 8
  %391 = add i32 %390, %389
  store i32 %391, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #9
  %392 = icmp eq i64 %379, 3
  br i1 %392, label %393, label %401

393:                                              ; preds = %383, %381
  %394 = phi i32 [ %391, %383 ], [ %382, %381 ]
  %395 = phi i64 [ %386, %383 ], [ 0, %381 ]
  %396 = phi i64 [ 1, %383 ], [ 2, %381 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %155)
  store i32 0, i32* %10, align 4
  %397 = getelementptr inbounds i8, i8* %153, i64 %395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %155, i8* align 1 %397, i64 %396, i1 false) #9
  %398 = load i32, i32* %10, align 4
  %399 = call i32 @llvm.bswap.i32(i32 %398) #9
  %400 = add i32 %399, %394
  store i32 %400, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155)
  br label %401

401:                                              ; preds = %383, %393
  %402 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %403 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %402, i64 2
  %404 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %403, align 8
  %405 = call zeroext i1 %404(%"class.ots::OTSStream"* %1, i8* nonnull %153, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %153)
  br i1 %405, label %406, label %451

406:                                              ; preds = %401
  %407 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %408 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %407, i64 %176, i32 4
  %409 = load i16, i16* %408, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %156)
  %410 = call i16 @llvm.bswap.i16(i16 %409) #9
  store i16 %410, i16* %8, align 2
  %411 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %412 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %411, i64 4
  %413 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %412, align 8
  %414 = call i64 %413(%"class.ots::OTSStream"* %1) #9
  %415 = and i64 %414, 3
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %417, label %419

417:                                              ; preds = %406
  %418 = load i32, i32* %139, align 8
  br label %429

419:                                              ; preds = %406
  %420 = sub nuw nsw i64 4, %415
  %421 = icmp ult i64 %420, 2
  %422 = select i1 %421, i64 %420, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #9
  store i32 0, i32* %6, align 4
  %423 = getelementptr inbounds i8, i8* %157, i64 %415
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %423, i8* nonnull align 2 %156, i64 %422, i1 false) #9
  %424 = load i32, i32* %6, align 4
  %425 = call i32 @llvm.bswap.i32(i32 %424) #9
  %426 = load i32, i32* %139, align 8
  %427 = add i32 %426, %425
  store i32 %427, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #9
  %428 = icmp eq i64 %415, 3
  br i1 %428, label %429, label %437

429:                                              ; preds = %419, %417
  %430 = phi i32 [ %427, %419 ], [ %418, %417 ]
  %431 = phi i64 [ %422, %419 ], [ 0, %417 ]
  %432 = phi i64 [ 1, %419 ], [ 2, %417 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158)
  store i32 0, i32* %7, align 4
  %433 = getelementptr inbounds i8, i8* %156, i64 %431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %158, i8* align 1 %433, i64 %432, i1 false) #9
  %434 = load i32, i32* %7, align 4
  %435 = call i32 @llvm.bswap.i32(i32 %434) #9
  %436 = add i32 %435, %430
  store i32 %436, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158)
  br label %437

437:                                              ; preds = %419, %429
  %438 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %439 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %438, i64 2
  %440 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %439, align 8
  %441 = call zeroext i1 %440(%"class.ots::OTSStream"* %1, i8* nonnull %156, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %156)
  br i1 %441, label %442, label %451

442:                                              ; preds = %437
  %443 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %444 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %443, i64 %176, i32 5
  %445 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %443, i64 %176, i32 5, i32 0, i32 1
  %446 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %445 to i64*
  %447 = load i64, i64* %446, align 8
  %448 = bitcast %"class.std::__1::vector.24"* %444 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = icmp eq i64 %447, %449
  br i1 %450, label %586, label %454

451:                                              ; preds = %437, %401, %365, %329, %286, %250, %216, %172
  %452 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %453 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %452, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), i32 %174) #9
  br label %591

454:                                              ; preds = %442, %570
  %455 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %573, %570 ], [ %443, %442 ]
  %456 = phi i64 [ %572, %570 ], [ 0, %442 ]
  %457 = phi i32 [ %571, %570 ], [ 0, %442 ]
  %458 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %455, i64 %176, i32 5, i32 0, i32 0
  %459 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %458, align 8
  %460 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %459, i64 %456, i32 0
  %461 = load i16, i16* %460, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %159)
  %462 = call i16 @llvm.bswap.i16(i16 %461) #9
  store i16 %462, i16* %5, align 2
  %463 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %464 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %463, i64 4
  %465 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %464, align 8
  %466 = call i64 %465(%"class.ots::OTSStream"* %1) #9
  %467 = and i64 %466, 3
  %468 = icmp eq i64 %467, 0
  br i1 %468, label %469, label %471

469:                                              ; preds = %454
  %470 = load i32, i32* %139, align 8
  br label %481

471:                                              ; preds = %454
  %472 = sub nuw nsw i64 4, %467
  %473 = icmp ult i64 %472, 2
  %474 = select i1 %473, i64 %472, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160) #9
  store i32 0, i32* %3, align 4
  %475 = getelementptr inbounds i8, i8* %160, i64 %467
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %475, i8* nonnull align 2 %159, i64 %474, i1 false) #9
  %476 = load i32, i32* %3, align 4
  %477 = call i32 @llvm.bswap.i32(i32 %476) #9
  %478 = load i32, i32* %139, align 8
  %479 = add i32 %478, %477
  store i32 %479, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160) #9
  %480 = icmp eq i64 %467, 3
  br i1 %480, label %481, label %489

481:                                              ; preds = %471, %469
  %482 = phi i32 [ %479, %471 ], [ %470, %469 ]
  %483 = phi i64 [ %474, %471 ], [ 0, %469 ]
  %484 = phi i64 [ 1, %471 ], [ 2, %469 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161)
  store i32 0, i32* %4, align 4
  %485 = getelementptr inbounds i8, i8* %159, i64 %483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %161, i8* align 1 %485, i64 %484, i1 false) #9
  %486 = load i32, i32* %4, align 4
  %487 = call i32 @llvm.bswap.i32(i32 %486) #9
  %488 = add i32 %487, %482
  store i32 %488, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161)
  br label %489

489:                                              ; preds = %471, %481
  %490 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %491 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %490, i64 2
  %492 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %491, align 8
  %493 = call zeroext i1 %492(%"class.ots::OTSStream"* %1, i8* nonnull %159, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %159)
  br i1 %493, label %494, label %583

494:                                              ; preds = %489
  %495 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %496 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %495, i64 %176, i32 5, i32 0, i32 0
  %497 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %496, align 8
  %498 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %497, i64 %456, i32 1
  %499 = load i16, i16* %498, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %162)
  %500 = call i16 @llvm.bswap.i16(i16 %499) #9
  store i16 %500, i16* %29, align 2
  %501 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %502 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %501, i64 4
  %503 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %502, align 8
  %504 = call i64 %503(%"class.ots::OTSStream"* %1) #9
  %505 = and i64 %504, 3
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %507, label %509

507:                                              ; preds = %494
  %508 = load i32, i32* %139, align 8
  br label %519

509:                                              ; preds = %494
  %510 = sub nuw nsw i64 4, %505
  %511 = icmp ult i64 %510, 2
  %512 = select i1 %511, i64 %510, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163) #9
  store i32 0, i32* %27, align 4
  %513 = getelementptr inbounds i8, i8* %163, i64 %505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %513, i8* nonnull align 2 %162, i64 %512, i1 false) #9
  %514 = load i32, i32* %27, align 4
  %515 = call i32 @llvm.bswap.i32(i32 %514) #9
  %516 = load i32, i32* %139, align 8
  %517 = add i32 %516, %515
  store i32 %517, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163) #9
  %518 = icmp eq i64 %505, 3
  br i1 %518, label %519, label %527

519:                                              ; preds = %509, %507
  %520 = phi i32 [ %517, %509 ], [ %508, %507 ]
  %521 = phi i64 [ %512, %509 ], [ 0, %507 ]
  %522 = phi i64 [ 1, %509 ], [ 2, %507 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164)
  store i32 0, i32* %28, align 4
  %523 = getelementptr inbounds i8, i8* %162, i64 %521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %164, i8* align 1 %523, i64 %522, i1 false) #9
  %524 = load i32, i32* %28, align 4
  %525 = call i32 @llvm.bswap.i32(i32 %524) #9
  %526 = add i32 %525, %520
  store i32 %526, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164)
  br label %527

527:                                              ; preds = %509, %519
  %528 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %529 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %528, i64 2
  %530 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %529, align 8
  %531 = call zeroext i1 %530(%"class.ots::OTSStream"* %1, i8* nonnull %162, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %162)
  br i1 %531, label %532, label %583

532:                                              ; preds = %527
  %533 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %534 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %533, i64 %176, i32 5, i32 0, i32 0
  %535 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %534, align 8
  %536 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %535, i64 %456, i32 2
  %537 = load i16, i16* %536, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %165)
  %538 = call i16 @llvm.bswap.i16(i16 %537) #9
  store i16 %538, i16* %38, align 2
  %539 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %540 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %539, i64 4
  %541 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %540, align 8
  %542 = call i64 %541(%"class.ots::OTSStream"* %1) #9
  %543 = and i64 %542, 3
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %545, label %547

545:                                              ; preds = %532
  %546 = load i32, i32* %139, align 8
  br label %557

547:                                              ; preds = %532
  %548 = sub nuw nsw i64 4, %543
  %549 = icmp ult i64 %548, 2
  %550 = select i1 %549, i64 %548, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166) #9
  store i32 0, i32* %36, align 4
  %551 = getelementptr inbounds i8, i8* %166, i64 %543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %551, i8* nonnull align 2 %165, i64 %550, i1 false) #9
  %552 = load i32, i32* %36, align 4
  %553 = call i32 @llvm.bswap.i32(i32 %552) #9
  %554 = load i32, i32* %139, align 8
  %555 = add i32 %554, %553
  store i32 %555, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166) #9
  %556 = icmp eq i64 %543, 3
  br i1 %556, label %557, label %565

557:                                              ; preds = %547, %545
  %558 = phi i32 [ %555, %547 ], [ %546, %545 ]
  %559 = phi i64 [ %550, %547 ], [ 0, %545 ]
  %560 = phi i64 [ 1, %547 ], [ 2, %545 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167)
  store i32 0, i32* %37, align 4
  %561 = getelementptr inbounds i8, i8* %165, i64 %559
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %167, i8* align 1 %561, i64 %560, i1 false) #9
  %562 = load i32, i32* %37, align 4
  %563 = call i32 @llvm.bswap.i32(i32 %562) #9
  %564 = add i32 %563, %558
  store i32 %564, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167)
  br label %565

565:                                              ; preds = %547, %557
  %566 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %87, align 8
  %567 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %566, i64 2
  %568 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %567, align 8
  %569 = call zeroext i1 %568(%"class.ots::OTSStream"* %1, i8* nonnull %165, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %165)
  br i1 %569, label %570, label %583

570:                                              ; preds = %565
  %571 = add i32 %457, 1
  %572 = zext i32 %571 to i64
  %573 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %136, align 8
  %574 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %573, i64 %176, i32 5
  %575 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %573, i64 %176, i32 5, i32 0, i32 1
  %576 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %575 to i64*
  %577 = load i64, i64* %576, align 8
  %578 = bitcast %"class.std::__1::vector.24"* %574 to i64*
  %579 = load i64, i64* %578, align 8
  %580 = sub i64 %577, %579
  %581 = sdiv exact i64 %580, 6
  %582 = icmp ugt i64 %581, %572
  br i1 %582, label %454, label %586

583:                                              ; preds = %489, %527, %565
  %584 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %585 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %584, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.21, i64 0, i64 0), i32 %457, i32 %174) #9
  br label %591

586:                                              ; preds = %570, %442
  %587 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %443, %442 ], [ %573, %570 ]
  %588 = add i16 %175, 1
  %589 = zext i16 %588 to i32
  %590 = icmp ugt i32 %133, %589
  br i1 %590, label %172, label %591

591:                                              ; preds = %586, %131, %583, %451
  %592 = phi i1 [ %585, %583 ], [ %453, %451 ], [ true, %131 ], [ true, %586 ]
  ret i1 %592
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeKERN15ShouldSerializeEv(%"class.ots::OpenTypeKERN"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ots::OpenTypeKERN"* %0 to %"class.ots::Table"*
  %3 = tail call zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"* %2) #9
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 0, i32 3
  %6 = load %"struct.ots::Font"*, %"struct.ots::Font"** %5, align 8
  %7 = tail call %"class.ots::Table"* @_ZNK3ots4Font8GetTableEj(%"struct.ots::Font"* %6, i32 1735162214) #9
  %8 = icmp ne %"class.ots::Table"* %7, null
  br label %9

9:                                                ; preds = %4, %1
  %10 = phi i1 [ false, %1 ], [ %8, %4 ]
  ret i1 %10
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

declare %"class.ots::Table"* @_ZNK3ots4Font8GetTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeKERND2Ev(%"class.ots::OpenTypeKERN"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeKERNE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %4, align 8
  %6 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %9, align 8
  %11 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %13, i64 -1, i32 5, i32 0, i32 0
  %16 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %15, align 8
  %17 = icmp eq %"struct.ots::OpenTypeKERNFormat0Pair"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %16 to i64
  %20 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %13, i64 -1, i32 5, i32 0, i32 1
  %21 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.ots::OpenTypeKERNFormat0"* %5, %"struct.ots::OpenTypeKERNFormat0"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeKERND0Ev(%"class.ots::OpenTypeKERN"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeKERNE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %4, align 8
  %6 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypeKERN", %"class.ots::OpenTypeKERN"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %9, align 8
  %11 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %13, i64 -1, i32 5, i32 0, i32 0
  %16 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %15, align 8
  %17 = icmp eq %"struct.ots::OpenTypeKERNFormat0Pair"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %16 to i64
  %20 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %13, i64 -1, i32 5, i32 0, i32 1
  %21 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.ots::OpenTypeKERNFormat0"* %5, %"struct.ots::OpenTypeKERNFormat0"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.ots::OpenTypeKERN"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots19OpenTypeKERNFormat0ENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"struct.ots::OpenTypeKERNFormat0"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ots::OpenTypeKERNFormat0"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ots::OpenTypeKERNFormat0"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.ots::OpenTypeKERNFormat0"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %33, i64 %32
  %36 = ptrtoint %"struct.ots::OpenTypeKERNFormat0"* %35 to i64
  %37 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %34 to i8*
  %38 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 10, i1 false) #9
  %39 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %33, i64 %9, i32 5
  %40 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %1, i64 0, i32 5
  %41 = bitcast %"class.std::__1::vector.24"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #9
  %42 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %1, i64 0, i32 5, i32 0, i32 1
  %43 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.24"* %40 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = sdiv exact i64 %47, 6
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %77, label %50

50:                                               ; preds = %31
  %51 = icmp ugt i64 %48, 3074457345618258602
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector.24"* %39 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #11
  unreachable

54:                                               ; preds = %50
  %55 = tail call i8* @_Znwm(i64 %47) #10
  %56 = bitcast i8* %55 to %"struct.ots::OpenTypeKERNFormat0Pair"*
  %57 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %33, i64 %9, i32 5, i32 0, i32 1
  %58 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %57 to i8**
  store i8* %55, i8** %58, align 8
  %59 = bitcast %"class.std::__1::vector.24"* %39 to i8**
  store i8* %55, i8** %59, align 8
  %60 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %56, i64 %48
  %61 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %33, i64 %9, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.ots::OpenTypeKERNFormat0Pair"* %60, %"struct.ots::OpenTypeKERNFormat0Pair"** %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %40, i64 0, i32 0, i32 0
  %63 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %62, align 8
  %64 = load i64, i64* %43, align 8
  %65 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %57 to i64*
  %66 = ptrtoint i8* %55 to i64
  %67 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %63 to i64
  %68 = sub i64 %64, %67
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %54
  %71 = udiv exact i64 %68, 6
  %72 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %55, i8* align 2 %72, i64 %68, i1 false) #9
  %73 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0Pair", %"struct.ots::OpenTypeKERNFormat0Pair"* %56, i64 %71
  %74 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %73 to i64
  br label %75

75:                                               ; preds = %70, %54
  %76 = phi i64 [ %74, %70 ], [ %66, %54 ]
  store i64 %76, i64* %65, align 8
  br label %77

77:                                               ; preds = %31, %75
  %78 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %34, i64 1
  %79 = ptrtoint %"struct.ots::OpenTypeKERNFormat0"* %78 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %81 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %80, align 8
  %82 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %3, align 8
  %83 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %82, %81
  br i1 %83, label %84, label %86

84:                                               ; preds = %77
  %85 = ptrtoint %"struct.ots::OpenTypeKERNFormat0"* %81 to i64
  br label %114

86:                                               ; preds = %77, %86
  %87 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %89, %86 ], [ %34, %77 ]
  %88 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %90, %86 ], [ %82, %77 ]
  %89 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %87, i64 -1
  %90 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %88, i64 -1
  %91 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %89 to i8*
  %92 = bitcast %"struct.ots::OpenTypeKERNFormat0"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 10, i1 false) #9
  %93 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %87, i64 -1, i32 5
  %94 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %88, i64 -1, i32 5
  %95 = bitcast %"class.std::__1::vector.24"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #9
  %96 = bitcast %"class.std::__1::vector.24"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::vector.24"* %93 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %88, i64 -1, i32 5, i32 0, i32 1
  %100 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %87, i64 -1, i32 5, i32 0, i32 1
  %103 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %88, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %87, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = bitcast %"class.std::__1::vector.24"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #9
  %110 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %90, %81
  br i1 %110, label %111, label %86

111:                                              ; preds = %86
  %112 = load i64, i64* %6, align 8
  %113 = load %"struct.ots::OpenTypeKERNFormat0"*, %"struct.ots::OpenTypeKERNFormat0"** %3, align 8
  br label %114

114:                                              ; preds = %84, %111
  %115 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %81, %84 ], [ %113, %111 ]
  %116 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %34, %84 ], [ %89, %111 ]
  %117 = phi i64 [ %85, %84 ], [ %112, %111 ]
  %118 = ptrtoint %"struct.ots::OpenTypeKERNFormat0"* %116 to i64
  store i64 %118, i64* %6, align 8
  store i64 %79, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %119 = inttoptr i64 %117 to %"struct.ots::OpenTypeKERNFormat0"*
  %120 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %115, %119
  br i1 %120, label %134, label %121

121:                                              ; preds = %114, %132
  %122 = phi %"struct.ots::OpenTypeKERNFormat0"* [ %123, %132 ], [ %115, %114 ]
  %123 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %122, i64 -1
  %124 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %122, i64 -1, i32 5, i32 0, i32 0
  %125 = load %"struct.ots::OpenTypeKERNFormat0Pair"*, %"struct.ots::OpenTypeKERNFormat0Pair"** %124, align 8
  %126 = icmp eq %"struct.ots::OpenTypeKERNFormat0Pair"* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %121
  %128 = ptrtoint %"struct.ots::OpenTypeKERNFormat0Pair"* %125 to i64
  %129 = getelementptr inbounds %"struct.ots::OpenTypeKERNFormat0", %"struct.ots::OpenTypeKERNFormat0"* %122, i64 -1, i32 5, i32 0, i32 1
  %130 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = bitcast %"struct.ots::OpenTypeKERNFormat0Pair"* %125 to i8*
  tail call void @_ZdlPv(i8* %131) #10
  br label %132

132:                                              ; preds = %127, %121
  %133 = icmp eq %"struct.ots::OpenTypeKERNFormat0"* %123, %119
  br i1 %133, label %134, label %121

134:                                              ; preds = %132, %114
  %135 = icmp eq i64 %117, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %117 to i8*
  tail call void @_ZdlPv(i8* %137) #10
  br label %138

138:                                              ; preds = %134, %136
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
