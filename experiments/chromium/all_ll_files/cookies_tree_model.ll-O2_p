; ModuleID = '../../chrome/browser/browsing_data/cookies_tree_model.cc'
source_filename = "../../chrome/browser/browsing_data/cookies_tree_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gfx::VectorIcon" = type opaque
%"struct.CookieTreeNode::DetailedInfo" = type { i32, %"class.url::Origin", %"class.net::CanonicalCookie"*, %"struct.content::StorageUsageInfo"*, %"struct.browsing_data::FileSystemHelper::FileSystemInfo"*, %"struct.BrowsingDataQuotaHelper::QuotaInfo"*, %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"*, %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.content::StorageUsageInfo" = type { %"class.url::Origin", i64, %"class.base::Time" }
%"struct.browsing_data::FileSystemHelper::FileSystemInfo" = type { %"class.url::Origin", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"struct.BrowsingDataQuotaHelper::QuotaInfo" = type { %"class.std::__1::basic_string", i64, i64, i64 }
%"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo" = type { %class.GURL, %"class.std::__1::basic_string", %"class.storage::StorageKey" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"class.storage::StorageKey" = type { %"class.url::Origin" }
%"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo" = type { %class.GURL, i64, %"class.base::Time" }
%class.CookieTreeRootNode = type { %class.CookieTreeNode, %class.CookiesTreeModel* }
%class.CookieTreeNode = type { %"class.ui::TreeNode" }
%"class.ui::TreeNode" = type { %"class.ui::TreeModelNode", %"class.std::__1::basic_string.13", %class.CookieTreeNode*, %"class.std::__1::vector" }
%"class.ui::TreeModelNode" = type { i32 (...)** }
%"class.std::__1::basic_string.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.16 }
%union.anon.16 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.CookieTreeNode* }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr.22"* }
%class.CookiesTreeModel = type { %"class.ui::TreeNodeModel", %class.scoped_refptr, %"class.std::__1::unique_ptr.130", %"class.base::ObserverList.312", %class.AccessContextAuditService*, i32, i32, i32, i32 }
%"class.ui::TreeNodeModel" = type { %"class.ui::TreeModel", %"class.base::ObserverList", %"class.std::__1::unique_ptr.22" }
%"class.ui::TreeModel" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.35" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr = type { %class.ExtensionSpecialStoragePolicy* }
%class.ExtensionSpecialStoragePolicy = type { %"class.storage::SpecialStoragePolicy", %"class.base::Lock", %"class.ExtensionSpecialStoragePolicy::SpecialCollection", %"class.ExtensionSpecialStoragePolicy::SpecialCollection", %"class.ExtensionSpecialStoragePolicy::SpecialCollection", %"class.ExtensionSpecialStoragePolicy::SpecialCollection", %"class.ExtensionSpecialStoragePolicy::SpecialCollection", %class.scoped_refptr.67, %"class.std::__1::unique_ptr.126" }
%"class.storage::SpecialStoragePolicy" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::ObserverList.41" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::ObserverList.41" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.42", i64, i32, [4 x i8] }>
%"class.base::LinkedList.42" = type { %"class.base::LinkNode.43" }
%"class.base::LinkNode.43" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.ExtensionSpecialStoragePolicy::SpecialCollection" = type { %"class.extensions::ExtensionSet", %"class.std::__1::map.56" }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.45" }
%"class.std::__1::map.45" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.56" = type { %"class.std::__1::__tree.57" }
%"class.std::__1::__tree.57" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%class.scoped_refptr.67 = type { %"class.content_settings::CookieSettings"* }
%"class.content_settings::CookieSettings" = type <{ %"class.content_settings::CookieSettingsBase", %"class.content_settings::Observer", %class.RefcountedKeyedService, %"class.base::ThreadChecker", [7 x i8], %"class.base::ObserverList.71", %class.scoped_refptr.89, %"class.base::ScopedObservation", %class.PrefChangeRegistrar, i8, [7 x i8], i8*, %"class.base::Lock", i8, [7 x i8] }>
%"class.content_settings::CookieSettingsBase" = type { i32 (...)** }
%"class.content_settings::Observer" = type { i32 (...)** }
%class.RefcountedKeyedService = type { i32 (...)**, %"class.base::RefCountedThreadSafe.68", %class.scoped_refptr.69 }
%"class.base::RefCountedThreadSafe.68" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.69 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.70" }>
%"class.base::RefCountedThreadSafe.70" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::ObserverList.71" = type <{ %"class.std::__1::vector.72", %"class.base::LinkedList.86", i64, i32, [4 x i8] }>
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.81" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.75", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.75" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.76" }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i8 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.86" = type { %"class.base::LinkNode.87" }
%"class.base::LinkNode.87" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.89 = type { %class.HostContentSettingsMap* }
%class.HostContentSettingsMap = type { %"class.content_settings::Observer", %class.RefcountedKeyedService, %class.PrefService*, i8, i8, %"class.std::__1::map.90", %"class.std::__1::vector.101", %"class.content_settings::PrefProvider"*, %"class.base::ThreadChecker", [7 x i8], %"class.base::ObserverList.112", i8, %"class.base::WeakPtrFactory" }
%class.PrefService = type opaque
%"class.std::__1::map.90" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.content_settings::UserModifiableProvider"**, %"class.content_settings::UserModifiableProvider"**, %"class.std::__1::__compressed_pair.107" }
%"class.content_settings::UserModifiableProvider" = type { %"class.content_settings::ObservableProvider" }
%"class.content_settings::ObservableProvider" = type { %"class.content_settings::ProviderInterface", %"class.base::ThreadChecker", [7 x i8], %"class.base::ObserverList.103" }
%"class.content_settings::ProviderInterface" = type { i32 (...)** }
%"class.base::ObserverList.103" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.104", i64, i32, [4 x i8] }>
%"class.base::LinkedList.104" = type { %"class.base::LinkNode.105" }
%"class.base::LinkNode.105" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.content_settings::UserModifiableProvider"** }
%"class.content_settings::PrefProvider" = type opaque
%"class.base::ObserverList.112" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.113", i64, i32, [4 x i8] }>
%"class.base::LinkedList.113" = type { %"class.base::LinkNode.114" }
%"class.base::LinkNode.114" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.116 }
%class.scoped_refptr.116 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::ScopedObservation" = type { %"class.content_settings::Observer"*, %class.HostContentSettingsMap* }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.117", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map.117" = type { %"class.std::__1::__tree.118" }
%"class.std::__1::__tree.118" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128", %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.ExtensionSpecialStoragePolicy::CookieSettingsObserver"* }
%"class.ExtensionSpecialStoragePolicy::CookieSettingsObserver" = type opaque
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.base::OnTaskRunnerDeleter" }
%"struct.base::OnTaskRunnerDeleter" = type { %class.scoped_refptr.69 }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.LocalDataContainer* }
%class.LocalDataContainer = type { i32 (...)**, %class.scoped_refptr.133, %class.scoped_refptr.135, %class.scoped_refptr.139, %class.scoped_refptr.245, %class.scoped_refptr.245, %class.scoped_refptr.246, %class.scoped_refptr.248, %class.scoped_refptr.259, %class.scoped_refptr.261, %class.scoped_refptr.263, %class.scoped_refptr.265, %class.scoped_refptr.267, %"class.std::__1::list", %"class.std::__1::list.273", %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list.280", %"class.std::__1::list.287", %"class.std::__1::list", %"class.std::__1::list.294", %"class.std::__1::list", %"class.std::__1::list.301", %class.CookiesTreeModel*, i32, %"class.base::WeakPtrFactory.308" }
%class.scoped_refptr.133 = type { %"class.browsing_data::AppCacheHelper"* }
%"class.browsing_data::AppCacheHelper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.134", %"class.content::AppCacheService"* }
%"class.base::RefCountedThreadSafe.134" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::AppCacheService" = type { i32 (...)** }
%class.scoped_refptr.135 = type { %"class.browsing_data::CookieHelper"* }
%"class.browsing_data::CookieHelper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.136", %"class.content::StoragePartition"*, %"class.base::RepeatingCallback" }
%"class.base::RefCountedThreadSafe.136" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::StoragePartition" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.137 }
%class.scoped_refptr.137 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.138", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.138" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.139 = type { %"class.browsing_data::DatabaseHelper"* }
%"class.browsing_data::DatabaseHelper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.140", %class.scoped_refptr.141 }
%"class.base::RefCountedThreadSafe.140" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.141 = type { %"class.storage::DatabaseTracker"* }
%"class.storage::DatabaseTracker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142", i8, i8, i8, i8, %"class.base::FilePath", %"class.base::FilePath", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.base::ObserverList.184", %"class.std::__1::map.188", %"class.storage::DatabaseConnections", %"class.std::__1::map.206", %"class.std::__1::vector.215", %class.scoped_refptr.223, %class.scoped_refptr.224, %class.scoped_refptr.69, %"class.std::__1::map.225", %"class.std::__1::map.236", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.sql::Database"* }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback.162", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr.163" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.146" }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.148" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::RepeatingCallback.162" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.storage::DatabasesTable"* }
%"class.storage::DatabasesTable" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.sql::MetaTable"* }
%"class.sql::MetaTable" = type { %"class.sql::Database"* }
%"class.base::ObserverList.184" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.185", i64, i32, [4 x i8] }>
%"class.base::LinkedList.185" = type { %"class.base::LinkNode.186" }
%"class.base::LinkNode.186" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::map.188" = type { %"class.std::__1::__tree.189" }
%"class.std::__1::__tree.189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.storage::DatabaseConnections" = type { %"class.std::__1::map.197" }
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.206" = type { %"class.std::__1::__tree.207" }
%"class.std::__1::__tree.207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"struct.std::__1::pair.217"*, %"struct.std::__1::pair.217"*, %"class.std::__1::__compressed_pair.218" }
%"struct.std::__1::pair.217" = type opaque
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::pair.217"* }
%class.scoped_refptr.223 = type { %"class.storage::SpecialStoragePolicy"* }
%class.scoped_refptr.224 = type { %"class.storage::QuotaManagerProxy"* }
%"class.storage::QuotaManagerProxy" = type opaque
%"class.std::__1::map.225" = type { %"class.std::__1::__tree.226" }
%"class.std::__1::__tree.226" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.236" = type { %"class.std::__1::__tree.237" }
%"class.std::__1::__tree.237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%class.scoped_refptr.245 = type { %"class.browsing_data::LocalStorageHelper"* }
%"class.browsing_data::LocalStorageHelper" = type { i32 (...)**, %"class.base::RefCounted", %"class.content::DOMStorageContext"* }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.content::DOMStorageContext" = type { i32 (...)** }
%class.scoped_refptr.246 = type { %"class.browsing_data::IndexedDBHelper"* }
%"class.browsing_data::IndexedDBHelper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.247", %"class.content::StoragePartition"* }
%"class.base::RefCountedThreadSafe.247" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.248 = type { %"class.browsing_data::FileSystemHelper"* }
%"class.browsing_data::FileSystemHelper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.249", %class.scoped_refptr.250, %class.scoped_refptr.251, %"class.std::__1::vector.252" }
%"class.base::RefCountedThreadSafe.249" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.250 = type { %"class.storage::FileSystemContext"* }
%"class.storage::FileSystemContext" = type opaque
%class.scoped_refptr.251 = type { %"class.content::NativeIOContext"* }
%"class.content::NativeIOContext" = type { i32 (...)**, %"class.base::RefCountedDeleteOnSequence" }
%"class.base::RefCountedDeleteOnSequence" = type { %"class.base::subtle::RefCountedThreadSafeBase", %class.scoped_refptr.69 }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { i32*, i32*, %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { i32* }
%class.scoped_refptr.259 = type { %class.BrowsingDataQuotaHelper* }
%class.BrowsingDataQuotaHelper = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.260", [4 x i8] }>
%"class.base::RefCountedThreadSafe.260" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.261 = type { %"class.browsing_data::ServiceWorkerHelper"* }
%"class.browsing_data::ServiceWorkerHelper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.262", %"class.content::ServiceWorkerContext"* }
%"class.base::RefCountedThreadSafe.262" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::ServiceWorkerContext" = type { i32 (...)** }
%class.scoped_refptr.263 = type { %"class.browsing_data::SharedWorkerHelper"* }
%"class.browsing_data::SharedWorkerHelper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.264", %"class.content::StoragePartition"* }
%"class.base::RefCountedThreadSafe.264" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.265 = type { %"class.browsing_data::CacheStorageHelper"* }
%"class.browsing_data::CacheStorageHelper" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.266", %"class.content::StoragePartition"* }
%"class.base::RefCountedThreadSafe.266" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.267 = type { %class.BrowsingDataMediaLicenseHelper* }
%class.BrowsingDataMediaLicenseHelper = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.268", [4 x i8] }>
%"class.base::RefCountedThreadSafe.268" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list.273" = type { %"class.std::__1::__list_imp.274" }
%"class.std::__1::__list_imp.274" = type { %"struct.std::__1::__list_node_base.275", %"class.std::__1::__compressed_pair.276" }
%"struct.std::__1::__list_node_base.275" = type { %"struct.std::__1::__list_node_base.275"*, %"struct.std::__1::__list_node_base.275"* }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::list.280" = type { %"class.std::__1::__list_imp.281" }
%"class.std::__1::__list_imp.281" = type { %"struct.std::__1::__list_node_base.282", %"class.std::__1::__compressed_pair.283" }
%"struct.std::__1::__list_node_base.282" = type { %"struct.std::__1::__list_node_base.282"*, %"struct.std::__1::__list_node_base.282"* }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::list.287" = type { %"class.std::__1::__list_imp.288" }
%"class.std::__1::__list_imp.288" = type { %"struct.std::__1::__list_node_base.289", %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::__list_node_base.289" = type { %"struct.std::__1::__list_node_base.289"*, %"struct.std::__1::__list_node_base.289"* }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::list.294" = type { %"class.std::__1::__list_imp.295" }
%"class.std::__1::__list_imp.295" = type { %"struct.std::__1::__list_node_base.296", %"class.std::__1::__compressed_pair.297" }
%"struct.std::__1::__list_node_base.296" = type { %"struct.std::__1::__list_node_base.296"*, %"struct.std::__1::__list_node_base.296"* }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.269" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::list.301" = type { %"class.std::__1::__list_imp.302" }
%"class.std::__1::__list_imp.302" = type { %"struct.std::__1::__list_node_base.303", %"class.std::__1::__compressed_pair.304" }
%"struct.std::__1::__list_node_base.303" = type { %"struct.std::__1::__list_node_base.303"*, %"struct.std::__1::__list_node_base.303"* }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::WeakPtrFactory.308" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.312" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.313", i64, i32, [4 x i8] }>
%"class.base::LinkedList.313" = type { %"class.base::LinkNode.314" }
%"class.base::LinkNode.314" = type { %"class.base::internal::LinkNodeBase" }
%class.AccessContextAuditService = type { %class.KeyedService, %"class.network::mojom::CookieChangeListener", %"class.history::HistoryServiceObserver", %"class.content::StoragePartition::DataRemovalObserver", %class.scoped_refptr.317, %class.scoped_refptr.319, i32, %"class.base::Clock"*, %class.Profile*, %"class.base::ObserverList.353", %"class.mojo::Receiver", %"class.base::ScopedObservation.531", %"class.base::ScopedObservation.570", %"class.base::WeakPtrFactory.571" }
%class.KeyedService = type { i32 (...)** }
%"class.network::mojom::CookieChangeListener" = type { i32 (...)** }
%"class.history::HistoryServiceObserver" = type { i32 (...)** }
%"class.content::StoragePartition::DataRemovalObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.316" }
%"class.base::WeakPtrFactory.316" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.317 = type { %class.AccessContextAuditDatabase* }
%class.AccessContextAuditDatabase = type { i32 (...)**, %"class.base::RefCountedThreadSafe.318", %"class.sql::Database", %"class.sql::MetaTable", %"class.base::FilePath" }
%"class.base::RefCountedThreadSafe.318" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.319 = type { %"class.base::UpdateableSequencedTaskRunner"* }
%"class.base::UpdateableSequencedTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::Clock" = type opaque
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.337", i8, i8, i32, %"class.base::ObserverList.343", %"class.std::__1::unique_ptr.347" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.331" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.320", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList.343" = type <{ %"class.std::__1::vector.72", %"class.base::LinkedList.344", i64, i32, [4 x i8] }>
%"class.base::LinkedList.344" = type { %"class.base::LinkNode.345" }
%"class.base::LinkNode.345" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.base::ObserverList.353" = type <{ %"class.std::__1::vector.72", %"class.base::LinkedList.354", i64, i32, [4 x i8] }>
%"class.base::LinkedList.354" = type { %"class.base::LinkNode.355" }
%"class.base::LinkNode.355" = type { %"class.base::internal::LinkNodeBase" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.network::mojom::CookieChangeListenerStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.357, %"class.std::__1::unique_ptr.480", %"class.base::WeakPtrFactory.530" }
%class.scoped_refptr.357 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.69, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.446", %"class.absl::optional.451", %"class.absl::optional.396", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.471", i8, [7 x i8], %class.scoped_refptr.69, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.358" }>
%"class.base::RefCountedThreadSafe.358" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.365", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.371" }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.371" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.69, %"class.std::__1::unique_ptr.372", %"class.absl::optional.382", %"struct.std::__1::atomic.392", i8, i8, i8, i8, i32, i32, %"class.absl::optional.396", %"class.std::__1::unique_ptr.401", i8, i64, %class.scoped_refptr.434, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.444", %"class.base::WeakPtrFactory.445" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.69, i8, %"class.mojo::ScopedHandleBase.375", %class.scoped_refptr.376, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.377", i8*, %"class.base::WeakPtrFactory.378" }
%"class.mojo::ScopedHandleBase.375" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.376 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.377" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.378" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.382" = type { %"class.absl::optional_internal::optional_data.383" }
%"class.absl::optional_internal::optional_data.383" = type { %"class.absl::optional_internal::optional_data_base.384" }
%"class.absl::optional_internal::optional_data_base.384" = type { %"class.absl::optional_internal::optional_data_dtor_base.385" }
%"class.absl::optional_internal::optional_data_dtor_base.385" = type { i8, %union.anon.386 }
%union.anon.386 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.387", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.387" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.392" = type { %"struct.std::__1::__atomic_base.393" }
%"struct.std::__1::__atomic_base.393" = type { %"struct.std::__1::__cxx_atomic_impl.394" }
%"struct.std::__1::__cxx_atomic_impl.394" = type { %"struct.std::__1::__cxx_atomic_base_impl.395" }
%"struct.std::__1::__cxx_atomic_base_impl.395" = type { i8 }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.404", i8, i64, %class.scoped_refptr.405, %class.scoped_refptr.430 }
%"class.base::RepeatingCallback.404" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.405 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.406", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.408", %"class.std::__1::map.419", i8, [7 x i8] }>
%"class.base::RefCounted.406" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.407 }
%class.scoped_refptr.407 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.408" = type { %"class.std::__1::__tree.409" }
%"class.std::__1::__tree.409" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.410", %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.419" = type { %"class.std::__1::__tree.420" }
%"class.std::__1::__tree.420" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%class.scoped_refptr.430 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.434 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.435", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.438", %"struct.std::__1::atomic.438", %"struct.std::__1::atomic.438", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.435" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.437" }
%"class.base::time_internal::TimeBase.437" = type { i64 }
%"struct.std::__1::atomic.438" = type { %"struct.std::__1::__atomic_base.439" }
%"struct.std::__1::__atomic_base.439" = type { %"struct.std::__1::__atomic_base.440" }
%"struct.std::__1::__atomic_base.440" = type { %"struct.std::__1::__cxx_atomic_impl.441" }
%"struct.std::__1::__cxx_atomic_impl.441" = type { %"struct.std::__1::__cxx_atomic_base_impl.442" }
%"struct.std::__1::__cxx_atomic_base_impl.442" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.443 }
%class.scoped_refptr.443 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.572", [4 x i8], %"class.base::RepeatingCallback.483", %class.scoped_refptr.69, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.573", [4 x i8] }>
%"class.base::RefCountedThreadSafe.572" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.483" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.573" = type { %"struct.std::__1::__atomic_base.574" }
%"struct.std::__1::__atomic_base.574" = type { %"struct.std::__1::__atomic_base.575" }
%"struct.std::__1::__atomic_base.575" = type { %"struct.std::__1::__cxx_atomic_impl.576" }
%"struct.std::__1::__cxx_atomic_impl.576" = type { %"struct.std::__1::__cxx_atomic_base_impl.577" }
%"struct.std::__1::__cxx_atomic_base_impl.577" = type { i32 }
%"class.base::WeakPtr.444" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.445" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.absl::optional.446" = type { %"class.absl::optional_internal::optional_data.447" }
%"class.absl::optional_internal::optional_data.447" = type { %"class.absl::optional_internal::optional_data_base.448" }
%"class.absl::optional_internal::optional_data_base.448" = type { %"class.absl::optional_internal::optional_data_dtor_base.449" }
%"class.absl::optional_internal::optional_data_dtor_base.449" = type { i8, %union.anon.450 }
%union.anon.450 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.451" = type { %"class.absl::optional_internal::optional_data.452" }
%"class.absl::optional_internal::optional_data.452" = type { %"class.absl::optional_internal::optional_data_base.453" }
%"class.absl::optional_internal::optional_data_base.453" = type { %"class.absl::optional_internal::optional_data_dtor_base.454" }
%"class.absl::optional_internal::optional_data_dtor_base.454" = type { i8, [7 x i8], %union.anon.455 }
%union.anon.455 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.396" = type { %"class.absl::optional_internal::optional_data.397" }
%"class.absl::optional_internal::optional_data.397" = type { %"class.absl::optional_internal::optional_data_base.398" }
%"class.absl::optional_internal::optional_data_base.398" = type { %"class.absl::optional_internal::optional_data_dtor_base.399" }
%"class.absl::optional_internal::optional_data_dtor_base.399" = type { i8, %union.anon.400 }
%union.anon.400 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.456 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.456 = type { %"class.std::__1::map.459" }
%"class.std::__1::map.459" = type { %"class.std::__1::__tree.460" }
%"class.std::__1::__tree.460" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.461", %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.470"*, i64 }
%"class.std::__1::unique_ptr.470" = type opaque
%"class.std::__1::map.471" = type { %"class.std::__1::__tree.472" }
%"class.std::__1::__tree.472" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.473", %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.483", %"class.base::OnceCallback.484", %"class.absl::optional.485", %"class.absl::optional.490", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.497", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.505", %"class.std::__1::map.516", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.525", i8, %class.scoped_refptr.69, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.526" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.484" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.485" = type { %"class.absl::optional_internal::optional_data.486" }
%"class.absl::optional_internal::optional_data.486" = type { %"class.absl::optional_internal::optional_data_base.487" }
%"class.absl::optional_internal::optional_data_base.487" = type { %"class.absl::optional_internal::optional_data_dtor_base.488" }
%"class.absl::optional_internal::optional_data_dtor_base.488" = type { i8, %union.anon.489 }
%union.anon.489 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.490" = type { %"class.absl::optional_internal::optional_data.491" }
%"class.absl::optional_internal::optional_data.491" = type { %"class.absl::optional_internal::optional_data_base.492" }
%"class.absl::optional_internal::optional_data_base.492" = type { %"class.absl::optional_internal::optional_data_dtor_base.493" }
%"class.absl::optional_internal::optional_data_dtor_base.493" = type { i8, %union.anon.494 }
%union.anon.494 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.69, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.495" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.495" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.496 }
%class.scoped_refptr.496 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.500", %class.scoped_refptr.501 }
%"class.base::RepeatingCallback.500" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.501 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.358", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.505" = type { %"class.std::__1::__tree.506" }
%"class.std::__1::__tree.506" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.516" = type { %"class.std::__1::__tree.517" }
%"class.std::__1::__tree.517" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.518", %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::OnceCallback.525" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.526" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.530" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.network::mojom::CookieChangeListenerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.network::mojom::CookieChangeListener"* }
%"class.base::ScopedObservation.531" = type { %"class.history::HistoryServiceObserver"*, %"class.history::HistoryService"* }
%"class.history::HistoryService" = type { %class.KeyedService, %class.scoped_refptr.69, %class.scoped_refptr.532, %"class.std::__1::unique_ptr.533", %"class.std::__1::unique_ptr.539", %"class.std::__1::unique_ptr.545", i8, [7 x i8], %"class.base::ObserverList.551", %"class.base::RepeatingCallbackList", %"class.std::__1::unique_ptr.563", %"class.base::OnceCallback", %"class.base::WeakPtrFactory.569" }
%class.scoped_refptr.532 = type { %"class.history::HistoryBackend"* }
%"class.history::HistoryBackend" = type opaque
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.history::InMemoryHistoryBackend"* }
%"class.history::InMemoryHistoryBackend" = type opaque
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.history::HistoryClient"* }
%"class.history::HistoryClient" = type opaque
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.history::VisitDelegate"* }
%"class.history::VisitDelegate" = type opaque
%"class.base::ObserverList.551" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.552", i64, i32, [4 x i8] }>
%"class.base::LinkedList.552" = type { %"class.base::LinkNode.553" }
%"class.base::LinkNode.553" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.555", i8, %"class.base::RepeatingCallback.483", %"class.base::WeakPtrFactory.562" }
%"class.std::__1::list.555" = type { %"class.std::__1::__list_imp.556" }
%"class.std::__1::__list_imp.556" = type { %"struct.std::__1::__list_node_base.557", %"class.std::__1::__compressed_pair.558" }
%"struct.std::__1::__list_node_base.557" = type { %"struct.std::__1::__list_node_base.557"*, %"struct.std::__1::__list_node_base.557"* }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::WeakPtrFactory.562" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.history::DeleteDirectiveHandler"* }
%"class.history::DeleteDirectiveHandler" = type opaque
%"class.base::WeakPtrFactory.569" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ScopedObservation.570" = type { %"class.content::StoragePartition::DataRemovalObserver"*, %"class.content::StoragePartition"* }
%"class.base::WeakPtrFactory.571" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.CookieTreeHostNode = type { %class.CookieTreeNode, %class.CookieTreeCookiesNode*, %class.CookieTreeDatabasesNode*, %class.CookieTreeLocalStoragesNode*, %class.CookieTreeSessionStoragesNode*, %class.CookieTreeAppCachesNode*, %class.CookieTreeIndexedDBsNode*, %class.CookieTreeFileSystemsNode*, %class.CookieTreeQuotaNode*, %class.CookieTreeServiceWorkersNode*, %class.CookieTreeSharedWorkersNode*, %class.CookieTreeCacheStoragesNode*, %class.CookieTreeMediaLicensesNode*, %class.GURL, %"class.std::__1::basic_string" }
%class.CookieTreeCookiesNode = type { %class.CookieTreeNode }
%class.CookieTreeDatabasesNode = type { %class.CookieTreeCollectionNode }
%class.CookieTreeCollectionNode = type { %class.CookieTreeNode }
%class.CookieTreeLocalStoragesNode = type { %class.CookieTreeCollectionNode }
%class.CookieTreeSessionStoragesNode = type { %class.CookieTreeNode }
%class.CookieTreeAppCachesNode = type { %class.CookieTreeCollectionNode }
%class.CookieTreeIndexedDBsNode = type { %class.CookieTreeCollectionNode }
%class.CookieTreeFileSystemsNode = type { %class.CookieTreeCollectionNode }
%class.CookieTreeQuotaNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.289"* }
%class.CookieTreeServiceWorkersNode = type { %class.CookieTreeCollectionNode }
%class.CookieTreeSharedWorkersNode = type { %class.CookieTreeNode }
%class.CookieTreeCacheStoragesNode = type { %class.CookieTreeCollectionNode }
%class.CookieTreeMediaLicensesNode = type { %class.CookieTreeCollectionNode }
%"class.CookiesTreeModel::ScopedBatchUpdateNotifier" = type <{ %class.CookiesTreeModel*, %class.CookieTreeNode*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.17 }
%struct.anon.17 = type { %"struct.std::__1::__padding.18", i8 }
%"struct.std::__1::__padding.18" = type { [1 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode.821", i64, i64 }
%"class.base::internal::WeakLinkNode.821" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.ui::TreeModelObserver" = type { i32 (...)** }
%"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.314", %"class.base::ObserverList.312"* }
%"class.CookiesTreeModel::Observer" = type { %"class.ui::TreeModelObserver" }
%"class.std::__1::vector.664" = type { %"class.std::__1::__vector_base.665" }
%"class.std::__1::__vector_base.665" = type { %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*, %"class.std::__1::__compressed_pair.667" }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.666 }
%class.scoped_refptr.666 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.gfx::ImageSkia"* }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr.672", %"class.std::__1::unique_ptr.678", %"class.std::__1::unique_ptr.678", %"class.std::__1::vector.684", i32, %"class.std::__1::map.691", %"class.gfx::Image", %"class.std::__1::map.703", %"class.base::FilePath", %"class.std::__1::unordered_map", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.base::Lock"* }
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.684" = type { %"class.std::__1::__vector_base.685" }
%"class.std::__1::__vector_base.685" = type { %"class.std::__1::unique_ptr.678"*, %"class.std::__1::unique_ptr.678"*, %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.std::__1::unique_ptr.678"* }
%"class.std::__1::map.691" = type { %"class.std::__1::__tree.692" }
%"class.std::__1::__tree.692" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.693", %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.gfx::Image" = type { %class.scoped_refptr.702 }
%class.scoped_refptr.702 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.703" = type { %"class.std::__1::__tree.704" }
%"class.std::__1::__tree.704" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.705", %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.714", %"class.std::__1::__compressed_pair.722", %"class.std::__1::__compressed_pair.727", %"class.std::__1::__compressed_pair.729", [4 x i8] }>
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716", %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { float }
%"struct.std::__1::__list_node.826" = type { %"struct.std::__1::__list_node_base.275", %"class.net::CanonicalCookie" }
%class.CookieTreeCookieNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.739" }
%"class.std::__1::__list_iterator.739" = type { %"struct.std::__1::__list_node_base.275"* }
%"struct.std::__1::__list_node.827" = type { %"struct.std::__1::__list_node_base", %"struct.content::StorageUsageInfo" }
%class.CookieTreeDatabaseNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.732" }
%"class.std::__1::__list_iterator.732" = type { %"struct.std::__1::__list_node_base"* }
%class.CookieTreeLocalStorageNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.732" }
%class.CookieTreeSessionStorageNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.732" }
%class.CookieTreeAppCacheNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.732" }
%class.CookieTreeIndexedDBNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.732" }
%"struct.std::__1::__list_node.828" = type { %"struct.std::__1::__list_node_base.282", %"struct.browsing_data::FileSystemHelper::FileSystemInfo" }
%class.CookieTreeFileSystemNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.789" }
%"class.std::__1::__list_iterator.789" = type { %"struct.std::__1::__list_node_base.282"* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base.289", %"struct.BrowsingDataQuotaHelper::QuotaInfo" }
%class.CookieTreeServiceWorkerNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.732" }
%"struct.std::__1::__list_node.829" = type { %"struct.std::__1::__list_node_base.296", %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo" }
%class.CookieTreeSharedWorkerNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.776" }
%"class.std::__1::__list_iterator.776" = type { %"struct.std::__1::__list_node_base.296"* }
%class.CookieTreeCacheStorageNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.732" }
%"struct.std::__1::__list_node.830" = type { %"struct.std::__1::__list_node_base.303", %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo" }
%class.CookieTreeMediaLicenseNode = type { %class.CookieTreeNode, %"class.std::__1::__list_iterator.796" }
%"class.std::__1::__list_iterator.796" = type { %"struct.std::__1::__list_node_base.303"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.ui::TreeModelNode"**, %"class.ui::TreeModelNode"**, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.ui::TreeModelNode"** }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.809"* }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"*, %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.std::__1::allocator.31"* }
%"class.std::__1::allocator.31" = type { i8 }
%"class.base::OnceCallback.856" = type { %"class.base::internal::CallbackBase" }

$_ZN21CookieTreeCookiesNodeC2Ev = comdat any

$_ZN23CookieTreeDatabasesNodeC2Ev = comdat any

$_ZN27CookieTreeLocalStoragesNodeC2Ev = comdat any

$_ZN29CookieTreeSessionStoragesNodeC2Ev = comdat any

$_ZN23CookieTreeAppCachesNodeC2Ev = comdat any

$_ZN24CookieTreeIndexedDBsNodeC2Ev = comdat any

$_ZN25CookieTreeFileSystemsNodeC2Ev = comdat any

$_ZN19CookieTreeQuotaNodeC2ENSt3__115__list_iteratorIN23BrowsingDataQuotaHelper9QuotaInfoEPvEE = comdat any

$_ZN28CookieTreeServiceWorkersNodeC2Ev = comdat any

$_ZN27CookieTreeSharedWorkersNodeC2Ev = comdat any

$_ZN27CookieTreeCacheStoragesNodeC2Ev = comdat any

$_ZN27CookieTreeMediaLicensesNodeC2Ev = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeE11AddObserverEPNS_17TreeModelObserverE = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeE14RemoveObserverEPNS_17TreeModelObserverE = comdat any

$_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv = comdat any

$_ZN14CookieTreeNodeD0Ev = comdat any

$_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeE7GetRootEv = comdat any

$_ZNK2ui13TreeNodeModelI14CookieTreeNodeE11GetChildrenEPKNS_13TreeModelNodeE = comdat any

$_ZNK2ui13TreeNodeModelI14CookieTreeNodeE10GetIndexOfEPNS_13TreeModelNodeES4_ = comdat any

$_ZNK2ui13TreeNodeModelI14CookieTreeNodeE9GetParentEPNS_13TreeModelNodeE = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeE8SetTitleEPNS_13TreeModelNodeERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE = comdat any

$_ZN2ui8TreeNodeI14CookieTreeNodeED0Ev = comdat any

$_ZN21CookieTreeCookiesNodeD0Ev = comdat any

$_ZNK21CookieTreeCookiesNode15GetDetailedInfoEv = comdat any

$_ZN23CookieTreeDatabasesNodeD0Ev = comdat any

$_ZNK24CookieTreeCollectionNode13InclusiveSizeEv = comdat any

$_ZNK23CookieTreeDatabasesNode15GetDetailedInfoEv = comdat any

$_ZN24CookieTreeCollectionNodeD0Ev = comdat any

$_ZN27CookieTreeLocalStoragesNodeD0Ev = comdat any

$_ZNK27CookieTreeLocalStoragesNode15GetDetailedInfoEv = comdat any

$_ZN29CookieTreeSessionStoragesNodeD0Ev = comdat any

$_ZNK29CookieTreeSessionStoragesNode15GetDetailedInfoEv = comdat any

$_ZN23CookieTreeAppCachesNodeD0Ev = comdat any

$_ZNK23CookieTreeAppCachesNode15GetDetailedInfoEv = comdat any

$_ZN24CookieTreeIndexedDBsNodeD0Ev = comdat any

$_ZNK24CookieTreeIndexedDBsNode15GetDetailedInfoEv = comdat any

$_ZN25CookieTreeFileSystemsNodeD0Ev = comdat any

$_ZNK25CookieTreeFileSystemsNode15GetDetailedInfoEv = comdat any

$_ZN19CookieTreeQuotaNodeD0Ev = comdat any

$_ZN19CookieTreeQuotaNode19DeleteStoredObjectsEv = comdat any

$_ZNK19CookieTreeQuotaNode15GetDetailedInfoEv = comdat any

$_ZN28CookieTreeServiceWorkersNodeD0Ev = comdat any

$_ZNK28CookieTreeServiceWorkersNode15GetDetailedInfoEv = comdat any

$_ZN27CookieTreeSharedWorkersNodeD0Ev = comdat any

$_ZNK27CookieTreeSharedWorkersNode15GetDetailedInfoEv = comdat any

$_ZN27CookieTreeCacheStoragesNodeD0Ev = comdat any

$_ZNK27CookieTreeCacheStoragesNode15GetDetailedInfoEv = comdat any

$_ZN27CookieTreeMediaLicensesNodeD0Ev = comdat any

$_ZNK27CookieTreeMediaLicensesNode15GetDetailedInfoEv = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeE28NotifyObserverTreeNodesAddedEPS1_mm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI14CookieTreeNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrI14CookieTreeNodeNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZZN7logging15CheckOpValueStrIN14CookieTreeNode12DetailedInfo8NodeTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN2ui9TreeModel8GetIconsEPNSt3__16vectorIN3gfx9ImageSkiaENS1_9allocatorIS4_EEEE = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeED2Ev = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeED0Ev = comdat any

$_ZNSt3__16vectorIN3gfx9ImageSkiaENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3gfx9ImageSkiaENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN2ui13TreeNodeModelI14CookieTreeNodeE30NotifyObserverTreeNodesRemovedEPS1_mm = comdat any

$_ZNSt3__16vectorIN4base8internal24UncheckedObserverAdapterENS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_ = comdat any

$_ZN22CookieTreeAppCacheNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE = comdat any

$_ZN22CookieTreeAppCacheNodeD0Ev = comdat any

$_ZNK22CookieTreeAppCacheNode13InclusiveSizeEv = comdat any

$_ZN22CookieTreeAppCacheNode19DeleteStoredObjectsEv = comdat any

$_ZNK22CookieTreeAppCacheNode15GetDetailedInfoEv = comdat any

$_ZN20CookieTreeCookieNodeC2ENSt3__115__list_iteratorIN3net15CanonicalCookieEPvEE = comdat any

$_ZN20CookieTreeCookieNodeD0Ev = comdat any

$_ZNK20CookieTreeCookieNode15NumberOfCookiesEv = comdat any

$_ZN20CookieTreeCookieNode19DeleteStoredObjectsEv = comdat any

$_ZNK20CookieTreeCookieNode15GetDetailedInfoEv = comdat any

$_ZN22CookieTreeDatabaseNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE = comdat any

$_ZN22CookieTreeDatabaseNodeD0Ev = comdat any

$_ZNK22CookieTreeDatabaseNode13InclusiveSizeEv = comdat any

$_ZN22CookieTreeDatabaseNode19DeleteStoredObjectsEv = comdat any

$_ZNK22CookieTreeDatabaseNode15GetDetailedInfoEv = comdat any

$_ZN26CookieTreeLocalStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE = comdat any

$_ZN26CookieTreeLocalStorageNodeD0Ev = comdat any

$_ZNK26CookieTreeLocalStorageNode13InclusiveSizeEv = comdat any

$_ZN26CookieTreeLocalStorageNode19DeleteStoredObjectsEv = comdat any

$_ZNK26CookieTreeLocalStorageNode15GetDetailedInfoEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN28CookieTreeSessionStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE = comdat any

$_ZN28CookieTreeSessionStorageNodeD0Ev = comdat any

$_ZN28CookieTreeSessionStorageNode19DeleteStoredObjectsEv = comdat any

$_ZNK28CookieTreeSessionStorageNode15GetDetailedInfoEv = comdat any

$_ZN23CookieTreeIndexedDBNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE = comdat any

$_ZN23CookieTreeIndexedDBNodeD0Ev = comdat any

$_ZNK23CookieTreeIndexedDBNode13InclusiveSizeEv = comdat any

$_ZN23CookieTreeIndexedDBNode19DeleteStoredObjectsEv = comdat any

$_ZNK23CookieTreeIndexedDBNode15GetDetailedInfoEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb = comdat any

$_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN27CookieTreeServiceWorkerNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE = comdat any

$_ZN27CookieTreeServiceWorkerNodeD0Ev = comdat any

$_ZNK27CookieTreeServiceWorkerNode13InclusiveSizeEv = comdat any

$_ZN27CookieTreeServiceWorkerNode19DeleteStoredObjectsEv = comdat any

$_ZNK27CookieTreeServiceWorkerNode15GetDetailedInfoEv = comdat any

$_ZN26CookieTreeSharedWorkerNodeC2ENSt3__115__list_iteratorIN13browsing_data18SharedWorkerHelper16SharedWorkerInfoEPvEE = comdat any

$_ZN26CookieTreeSharedWorkerNodeD0Ev = comdat any

$_ZN26CookieTreeSharedWorkerNode19DeleteStoredObjectsEv = comdat any

$_ZNK26CookieTreeSharedWorkerNode15GetDetailedInfoEv = comdat any

$_ZN26CookieTreeCacheStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE = comdat any

$_ZN26CookieTreeCacheStorageNodeD0Ev = comdat any

$_ZNK26CookieTreeCacheStorageNode13InclusiveSizeEv = comdat any

$_ZN26CookieTreeCacheStorageNode19DeleteStoredObjectsEv = comdat any

$_ZNK26CookieTreeCacheStorageNode15GetDetailedInfoEv = comdat any

$_ZN24CookieTreeFileSystemNodeC2ENSt3__115__list_iteratorIN13browsing_data16FileSystemHelper14FileSystemInfoEPvEE = comdat any

$_ZN24CookieTreeFileSystemNodeD0Ev = comdat any

$_ZNK24CookieTreeFileSystemNode13InclusiveSizeEv = comdat any

$_ZN24CookieTreeFileSystemNode19DeleteStoredObjectsEv = comdat any

$_ZNK24CookieTreeFileSystemNode15GetDetailedInfoEv = comdat any

$_ZN26CookieTreeMediaLicenseNodeC2ENSt3__115__list_iteratorIN30BrowsingDataMediaLicenseHelper16MediaLicenseInfoEPvEE = comdat any

$_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev = comdat any

$_ZN26CookieTreeMediaLicenseNodeD0Ev = comdat any

$_ZNK26CookieTreeMediaLicenseNode13InclusiveSizeEv = comdat any

$_ZN26CookieTreeMediaLicenseNode19DeleteStoredObjectsEv = comdat any

$_ZNK26CookieTreeMediaLicenseNode15GetDetailedInfoEv = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIPN2ui13TreeModelNodeENS_9allocatorIS4_EEEEEaSEOS4_ = comdat any

$_ZTVN2ui8TreeNodeI14CookieTreeNodeEE = comdat any

$_ZTV21CookieTreeCookiesNode = comdat any

$_ZTV23CookieTreeDatabasesNode = comdat any

$_ZTV24CookieTreeCollectionNode = comdat any

$_ZTV27CookieTreeLocalStoragesNode = comdat any

$_ZTV29CookieTreeSessionStoragesNode = comdat any

$_ZTV23CookieTreeAppCachesNode = comdat any

$_ZTV24CookieTreeIndexedDBsNode = comdat any

$_ZTV25CookieTreeFileSystemsNode = comdat any

$_ZTV19CookieTreeQuotaNode = comdat any

$_ZTV28CookieTreeServiceWorkersNode = comdat any

$_ZTV27CookieTreeSharedWorkersNode = comdat any

$_ZTV27CookieTreeCacheStoragesNode = comdat any

$_ZTV27CookieTreeMediaLicensesNode = comdat any

$_ZTVN2ui13TreeNodeModelI14CookieTreeNodeEE = comdat any

$_ZTV22CookieTreeAppCacheNode = comdat any

$_ZTV20CookieTreeCookieNode = comdat any

$_ZTV22CookieTreeDatabaseNode = comdat any

$_ZTV26CookieTreeLocalStorageNode = comdat any

$_ZTV28CookieTreeSessionStorageNode = comdat any

$_ZTV23CookieTreeIndexedDBNode = comdat any

$_ZTV27CookieTreeServiceWorkerNode = comdat any

$_ZTV26CookieTreeSharedWorkerNode = comdat any

$_ZTV26CookieTreeCacheStorageNode = comdat any

$_ZTV24CookieTreeFileSystemNode = comdat any

$_ZTV26CookieTreeMediaLicenseNode = comdat any

@_ZTV18CookieTreeRootNode = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%class.CookieTreeRootNode*)* @_ZN18CookieTreeRootNodeD2Ev to i8*), i8* bitcast (void (%class.CookieTreeRootNode*)* @_ZN18CookieTreeRootNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeRootNode*)* @_ZNK18CookieTreeRootNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeRootNode*)* @_ZNK18CookieTreeRootNode15GetDetailedInfoEv to i8*)] }, align 8
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@_ZN3url24kStandardSchemeSeparatorE = external constant [0 x i8], align 1
@_ZTV18CookieTreeHostNode = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%class.CookieTreeHostNode*)* @_ZN18CookieTreeHostNodeD2Ev to i8*), i8* bitcast (void (%class.CookieTreeHostNode*)* @_ZN18CookieTreeHostNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeHostNode*)* @_ZNK18CookieTreeHostNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)* @_ZNK18CookieTreeHostNode15GetDetailedInfoEv to i8*)] }, align 8
@_ZTV16CookiesTreeModel = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (%class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE7GetRootEv to i8*), i8* bitcast (void (%"class.std::__1::vector.809"*, %"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*)* @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE11GetChildrenEPKNS_13TreeModelNodeE to i8*), i8* bitcast (i32 (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"*)* @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE10GetIndexOfEPNS_13TreeModelNodeES4_ to i8*), i8* bitcast (%"class.ui::TreeModelNode"* (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*)* @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE9GetParentEPNS_13TreeModelNodeE to i8*), i8* bitcast (void (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelObserver"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE11AddObserverEPNS_17TreeModelObserverE to i8*), i8* bitcast (void (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelObserver"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE14RemoveObserverEPNS_17TreeModelObserverE to i8*), i8* bitcast (void (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE8SetTitleEPNS_13TreeModelNodeERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE to i8*), i8* bitcast (void (%class.CookiesTreeModel*, %"class.std::__1::vector.664"*)* @_ZN16CookiesTreeModel8GetIconsEPNSt3__16vectorIN3gfx9ImageSkiaENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (i32 (%class.CookiesTreeModel*, %"class.ui::TreeModelNode"*)* @_ZN16CookiesTreeModel12GetIconIndexEPN2ui13TreeModelNodeE to i8*), i8* bitcast (void (%class.CookiesTreeModel*)* @_ZN16CookiesTreeModelD2Ev to i8*), i8* bitcast (void (%class.CookiesTreeModel*)* @_ZN16CookiesTreeModelD0Ev to i8*), i8* bitcast (void (%class.CookiesTreeModel*, %"class.CookiesTreeModel::Observer"*)* @_ZN16CookiesTreeModel22AddCookiesTreeObserverEPNS_8ObserverE to i8*), i8* bitcast (void (%class.CookiesTreeModel*, %"class.CookiesTreeModel::Observer"*)* @_ZN16CookiesTreeModel25RemoveCookiesTreeObserverEPNS_8ObserverE to i8*)] }, align 8
@_ZN12vector_icons11kCookieIconE = external global %"struct.gfx::VectorIcon", align 1
@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"http://./\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"http://\00", align 1
@_ZTV14CookieTreeNode = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN2ui8TreeNodeI14CookieTreeNodeEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*)] }, comdat, align 8
@_ZTV21CookieTreeCookiesNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeCookiesNode*)* @_ZN21CookieTreeCookiesNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeCookiesNode*)* @_ZNK21CookieTreeCookiesNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV23CookieTreeDatabasesNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeDatabasesNode*)* @_ZN23CookieTreeDatabasesNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeDatabasesNode*)* @_ZNK23CookieTreeDatabasesNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV24CookieTreeCollectionNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeCollectionNode*)* @_ZN24CookieTreeCollectionNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV27CookieTreeLocalStoragesNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeLocalStoragesNode*)* @_ZN27CookieTreeLocalStoragesNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeLocalStoragesNode*)* @_ZNK27CookieTreeLocalStoragesNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV29CookieTreeSessionStoragesNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeSessionStoragesNode*)* @_ZN29CookieTreeSessionStoragesNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeSessionStoragesNode*)* @_ZNK29CookieTreeSessionStoragesNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV23CookieTreeAppCachesNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeAppCachesNode*)* @_ZN23CookieTreeAppCachesNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeAppCachesNode*)* @_ZNK23CookieTreeAppCachesNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV24CookieTreeIndexedDBsNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeIndexedDBsNode*)* @_ZN24CookieTreeIndexedDBsNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeIndexedDBsNode*)* @_ZNK24CookieTreeIndexedDBsNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV25CookieTreeFileSystemsNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeFileSystemsNode*)* @_ZN25CookieTreeFileSystemsNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeFileSystemsNode*)* @_ZNK25CookieTreeFileSystemsNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV19CookieTreeQuotaNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeQuotaNode*)* @_ZN19CookieTreeQuotaNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeQuotaNode*)* @_ZN19CookieTreeQuotaNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeQuotaNode*)* @_ZNK19CookieTreeQuotaNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV28CookieTreeServiceWorkersNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeServiceWorkersNode*)* @_ZN28CookieTreeServiceWorkersNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeServiceWorkersNode*)* @_ZNK28CookieTreeServiceWorkersNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV27CookieTreeSharedWorkersNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeSharedWorkersNode*)* @_ZN27CookieTreeSharedWorkersNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeSharedWorkersNode*)* @_ZNK27CookieTreeSharedWorkersNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV27CookieTreeCacheStoragesNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeCacheStoragesNode*)* @_ZN27CookieTreeCacheStoragesNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeCacheStoragesNode*)* @_ZNK27CookieTreeCacheStoragesNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV27CookieTreeMediaLicensesNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeMediaLicensesNode*)* @_ZN27CookieTreeMediaLicensesNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCollectionNode*)* @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeNode*)* @_ZN14CookieTreeNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeMediaLicensesNode*)* @_ZNK27CookieTreeMediaLicensesNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [76 x i8] c"CookieTreeNode::DetailedInfo::TYPE_HOST == lhs->GetDetailedInfo().node_type\00", align 1
@.str.7 = private unnamed_addr constant [57 x i8] c"../../chrome/browser/browsing_data/cookies_tree_model.cc\00", align 1
@.str.8 = private unnamed_addr constant [76 x i8] c"CookieTreeNode::DetailedInfo::TYPE_HOST == rhs->GetDetailedInfo().node_type\00", align 1
@_ZTVN2ui13TreeNodeModelI14CookieTreeNodeEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (%class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE7GetRootEv to i8*), i8* bitcast (void (%"class.std::__1::vector.809"*, %"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*)* @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE11GetChildrenEPKNS_13TreeModelNodeE to i8*), i8* bitcast (i32 (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"*)* @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE10GetIndexOfEPNS_13TreeModelNodeES4_ to i8*), i8* bitcast (%"class.ui::TreeModelNode"* (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*)* @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE9GetParentEPNS_13TreeModelNodeE to i8*), i8* bitcast (void (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelObserver"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE11AddObserverEPNS_17TreeModelObserverE to i8*), i8* bitcast (void (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelObserver"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE14RemoveObserverEPNS_17TreeModelObserverE to i8*), i8* bitcast (void (%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE8SetTitleEPNS_13TreeModelNodeERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE to i8*), i8* bitcast (void (%"class.ui::TreeModel"*, %"class.std::__1::vector.664"*)* @_ZN2ui9TreeModel8GetIconsEPNSt3__16vectorIN3gfx9ImageSkiaENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (i32 (%"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*)* @_ZN2ui9TreeModel12GetIconIndexEPNS_13TreeModelNodeE to i8*), i8* bitcast (void (%"class.ui::TreeNodeModel"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%"class.ui::TreeNodeModel"*)* @_ZN2ui13TreeNodeModelI14CookieTreeNodeED0Ev to i8*)] }, comdat, align 8
@_ZTV22CookieTreeAppCacheNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeAppCacheNode*)* @_ZN22CookieTreeAppCacheNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeAppCacheNode*)* @_ZNK22CookieTreeAppCacheNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeAppCacheNode*)* @_ZN22CookieTreeAppCacheNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeAppCacheNode*)* @_ZNK22CookieTreeAppCacheNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [77 x i8] c"host->GetDetailedInfo().node_type == CookieTreeNode::DetailedInfo::TYPE_HOST\00", align 1
@_ZTV20CookieTreeCookieNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeCookieNode*)* @_ZN20CookieTreeCookieNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeCookieNode*)* @_ZNK20CookieTreeCookieNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeCookieNode*)* @_ZN20CookieTreeCookieNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeCookieNode*)* @_ZNK20CookieTreeCookieNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV22CookieTreeDatabaseNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeDatabaseNode*)* @_ZN22CookieTreeDatabaseNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeDatabaseNode*)* @_ZNK22CookieTreeDatabaseNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeDatabaseNode*)* @_ZN22CookieTreeDatabaseNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeDatabaseNode*)* @_ZNK22CookieTreeDatabaseNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV26CookieTreeLocalStorageNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeLocalStorageNode*)* @_ZN26CookieTreeLocalStorageNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeLocalStorageNode*)* @_ZNK26CookieTreeLocalStorageNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeLocalStorageNode*)* @_ZN26CookieTreeLocalStorageNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeLocalStorageNode*)* @_ZNK26CookieTreeLocalStorageNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV28CookieTreeSessionStorageNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeSessionStorageNode*)* @_ZN28CookieTreeSessionStorageNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeSessionStorageNode*)* @_ZN28CookieTreeSessionStorageNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeSessionStorageNode*)* @_ZNK28CookieTreeSessionStorageNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV23CookieTreeIndexedDBNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeIndexedDBNode*)* @_ZN23CookieTreeIndexedDBNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeIndexedDBNode*)* @_ZNK23CookieTreeIndexedDBNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeIndexedDBNode*)* @_ZN23CookieTreeIndexedDBNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeIndexedDBNode*)* @_ZNK23CookieTreeIndexedDBNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV27CookieTreeServiceWorkerNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeServiceWorkerNode*)* @_ZN27CookieTreeServiceWorkerNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeServiceWorkerNode*)* @_ZNK27CookieTreeServiceWorkerNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeServiceWorkerNode*)* @_ZN27CookieTreeServiceWorkerNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeServiceWorkerNode*)* @_ZNK27CookieTreeServiceWorkerNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV26CookieTreeSharedWorkerNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeSharedWorkerNode*)* @_ZN26CookieTreeSharedWorkerNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeSharedWorkerNode*)* @_ZN26CookieTreeSharedWorkerNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeSharedWorkerNode*)* @_ZNK26CookieTreeSharedWorkerNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV26CookieTreeCacheStorageNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeCacheStorageNode*)* @_ZN26CookieTreeCacheStorageNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeCacheStorageNode*)* @_ZNK26CookieTreeCacheStorageNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeCacheStorageNode*)* @_ZN26CookieTreeCacheStorageNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeCacheStorageNode*)* @_ZNK26CookieTreeCacheStorageNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV24CookieTreeFileSystemNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeFileSystemNode*)* @_ZN24CookieTreeFileSystemNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeFileSystemNode*)* @_ZNK24CookieTreeFileSystemNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeFileSystemNode*)* @_ZN24CookieTreeFileSystemNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeFileSystemNode*)* @_ZNK24CookieTreeFileSystemNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@_ZTV26CookieTreeMediaLicenseNode = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv to i8*), i8* bitcast (void (%"class.ui::TreeNode"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev to i8*), i8* bitcast (void (%class.CookieTreeMediaLicenseNode*)* @_ZN26CookieTreeMediaLicenseNodeD0Ev to i8*), i8* bitcast (void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)* @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i64 (%class.CookieTreeMediaLicenseNode*)* @_ZNK26CookieTreeMediaLicenseNode13InclusiveSizeEv to i8*), i8* bitcast (i32 (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode15NumberOfCookiesEv to i8*), i8* bitcast (void (%class.CookieTreeMediaLicenseNode*)* @_ZN26CookieTreeMediaLicenseNode19DeleteStoredObjectsEv to i8*), i8* bitcast (%class.CookiesTreeModel* (%class.CookieTreeNode*)* @_ZNK14CookieTreeNode8GetModelEv to i8*), i8* bitcast (void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeMediaLicenseNode*)* @_ZNK26CookieTreeMediaLicenseNode15GetDetailedInfoEv to i8*)] }, comdat, align 8
@switch.table._ZN16CookiesTreeModel12GetIconIndexEPN2ui13TreeModelNodeE = private unnamed_addr constant [24 x i32] [i32 -1, i32 -1, i32 0, i32 -1, i32 1, i32 -1, i32 1, i32 -1, i32 1, i32 -1, i32 1, i32 -1, i32 1, i32 -1, i32 1, i32 -1, i32 -1, i32 1, i32 -1, i32 1, i32 -1, i32 1, i32 -1, i32 1], align 4

@_ZN14CookieTreeNode12DetailedInfoC1Ev = hidden unnamed_addr alias void (%"struct.CookieTreeNode::DetailedInfo"*), void (%"struct.CookieTreeNode::DetailedInfo"*)* @_ZN14CookieTreeNode12DetailedInfoC2Ev
@_ZN14CookieTreeNode12DetailedInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.CookieTreeNode::DetailedInfo"*, %"struct.CookieTreeNode::DetailedInfo"*), void (%"struct.CookieTreeNode::DetailedInfo"*, %"struct.CookieTreeNode::DetailedInfo"*)* @_ZN14CookieTreeNode12DetailedInfoC2ERKS0_
@_ZN14CookieTreeNode12DetailedInfoD1Ev = hidden unnamed_addr alias void (%"struct.CookieTreeNode::DetailedInfo"*), void (%"struct.CookieTreeNode::DetailedInfo"*)* @_ZN14CookieTreeNode12DetailedInfoD2Ev
@_ZN18CookieTreeRootNodeC1EP16CookiesTreeModel = hidden unnamed_addr alias void (%class.CookieTreeRootNode*, %class.CookiesTreeModel*), void (%class.CookieTreeRootNode*, %class.CookiesTreeModel*)* @_ZN18CookieTreeRootNodeC2EP16CookiesTreeModel
@_ZN18CookieTreeRootNodeD1Ev = hidden unnamed_addr alias void (%class.CookieTreeRootNode*), void (%class.CookieTreeRootNode*)* @_ZN18CookieTreeRootNodeD2Ev
@_ZN18CookieTreeHostNodeC1ERK4GURL = hidden unnamed_addr alias void (%class.CookieTreeHostNode*, %class.GURL*), void (%class.CookieTreeHostNode*, %class.GURL*)* @_ZN18CookieTreeHostNodeC2ERK4GURL
@_ZN18CookieTreeHostNodeD1Ev = hidden unnamed_addr alias void (%class.CookieTreeHostNode*), void (%class.CookieTreeHostNode*)* @_ZN18CookieTreeHostNodeD2Ev
@_ZN16CookiesTreeModel25ScopedBatchUpdateNotifierC1EPS_P14CookieTreeNode = hidden unnamed_addr alias void (%"class.CookiesTreeModel::ScopedBatchUpdateNotifier"*, %class.CookiesTreeModel*, %class.CookieTreeNode*), void (%"class.CookiesTreeModel::ScopedBatchUpdateNotifier"*, %class.CookiesTreeModel*, %class.CookieTreeNode*)* @_ZN16CookiesTreeModel25ScopedBatchUpdateNotifierC2EPS_P14CookieTreeNode
@_ZN16CookiesTreeModel25ScopedBatchUpdateNotifierD1Ev = hidden unnamed_addr alias void (%"class.CookiesTreeModel::ScopedBatchUpdateNotifier"*), void (%"class.CookiesTreeModel::ScopedBatchUpdateNotifier"*)* @_ZN16CookiesTreeModel25ScopedBatchUpdateNotifierD2Ev
@_ZN16CookiesTreeModelC1ENSt3__110unique_ptrI18LocalDataContainerNS0_14default_deleteIS2_EEEEP29ExtensionSpecialStoragePolicy = hidden unnamed_addr alias void (%class.CookiesTreeModel*, %class.LocalDataContainer*, %class.ExtensionSpecialStoragePolicy*), void (%class.CookiesTreeModel*, %class.LocalDataContainer*, %class.ExtensionSpecialStoragePolicy*)* @_ZN16CookiesTreeModelC2ENSt3__110unique_ptrI18LocalDataContainerNS0_14default_deleteIS2_EEEEP29ExtensionSpecialStoragePolicy
@_ZN16CookiesTreeModelC1ENSt3__110unique_ptrI18LocalDataContainerNS0_14default_deleteIS2_EEEEP29ExtensionSpecialStoragePolicyP25AccessContextAuditService = hidden unnamed_addr alias void (%class.CookiesTreeModel*, %class.LocalDataContainer*, %class.ExtensionSpecialStoragePolicy*, %class.AccessContextAuditService*), void (%class.CookiesTreeModel*, %class.LocalDataContainer*, %class.ExtensionSpecialStoragePolicy*, %class.AccessContextAuditService*)* @_ZN16CookiesTreeModelC2ENSt3__110unique_ptrI18LocalDataContainerNS0_14default_deleteIS2_EEEEP29ExtensionSpecialStoragePolicyP25AccessContextAuditService
@_ZN16CookiesTreeModelD1Ev = hidden unnamed_addr alias void (%class.CookiesTreeModel*), void (%class.CookiesTreeModel*)* @_ZN16CookiesTreeModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CookieTreeNode12DetailedInfoC2Ev(%"struct.CookieTreeNode::DetailedInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  tail call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %3) #17
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %5 = bitcast %"class.net::CanonicalCookie"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false)
  ret void
}

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CookieTreeNode12DetailedInfoC2ERKS0_(%"struct.CookieTreeNode::DetailedInfo"*, %"struct.CookieTreeNode::DetailedInfo"* dereferenceable(136)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %1, i64 0, i32 1
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %7) #17
  %8 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %1, i64 0, i32 2
  %10 = bitcast %"class.net::CanonicalCookie"** %8 to i8*
  %11 = bitcast %"class.net::CanonicalCookie"** %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 48, i1 false)
  ret void
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CookieTreeNode12DetailedInfoD2Ev(%"struct.CookieTreeNode::DetailedInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %2) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo4InitENS0_8NodeTypeE(%"struct.CookieTreeNode::DetailedInfo"* returned, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo8InitHostERK4GURL(%"struct.CookieTreeNode::DetailedInfo"* returned, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 2, i32* %4, align 8
  %5 = bitcast %"class.url::Origin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #17
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* dereferenceable(120) %1) #17
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %6, %"class.url::Origin"* nonnull dereferenceable(80) %3) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo10InitCookieEPKN3net15CanonicalCookieE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"class.net::CanonicalCookie"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 4, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  store %"class.net::CanonicalCookie"* %1, %"class.net::CanonicalCookie"** %4, align 8
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo12InitDatabaseEPKN7content16StorageUsageInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.content::StorageUsageInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 6, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %1, %"struct.content::StorageUsageInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo16InitLocalStorageEPKN7content16StorageUsageInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.content::StorageUsageInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 8, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %1, %"struct.content::StorageUsageInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo18InitSessionStorageEPKN7content16StorageUsageInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.content::StorageUsageInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 10, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %1, %"struct.content::StorageUsageInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo12InitAppCacheEPKN7content16StorageUsageInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.content::StorageUsageInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 12, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %1, %"struct.content::StorageUsageInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo13InitIndexedDBEPKN7content16StorageUsageInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.content::StorageUsageInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 14, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %1, %"struct.content::StorageUsageInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo14InitFileSystemEPKN13browsing_data16FileSystemHelper14FileSystemInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.browsing_data::FileSystemHelper::FileSystemInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 16, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 4
  store %"struct.browsing_data::FileSystemHelper::FileSystemInfo"* %1, %"struct.browsing_data::FileSystemHelper::FileSystemInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.browsing_data::FileSystemHelper::FileSystemInfo", %"struct.browsing_data::FileSystemHelper::FileSystemInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo9InitQuotaEPKN23BrowsingDataQuotaHelper9QuotaInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.BrowsingDataQuotaHelper::QuotaInfo"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 17, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 5
  store %"struct.BrowsingDataQuotaHelper::QuotaInfo"* %1, %"struct.BrowsingDataQuotaHelper::QuotaInfo"** %4, align 8
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo17InitServiceWorkerEPKN7content16StorageUsageInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.content::StorageUsageInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 19, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %1, %"struct.content::StorageUsageInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo16InitSharedWorkerEPKN13browsing_data18SharedWorkerHelper16SharedWorkerInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = alloca %class.GURL, align 8
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 21, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 6
  store %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"* %1, %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"** %6, align 8
  %7 = bitcast %"class.url::Origin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #17
  %8 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo", %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"* %1, i64 0, i32 0
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %4, %class.GURL* %9) #17
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* nonnull dereferenceable(120) %4) #17
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %11 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %10, %"class.url::Origin"* nonnull dereferenceable(80) %3) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #17
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo16InitCacheStorageEPKN7content16StorageUsageInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.content::StorageUsageInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 23, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %1, %"struct.content::StorageUsageInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %5) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.CookieTreeNode::DetailedInfo"* @_ZN14CookieTreeNode12DetailedInfo16InitMediaLicenseEPKN30BrowsingDataMediaLicenseHelper16MediaLicenseInfoE(%"struct.CookieTreeNode::DetailedInfo"* returned, %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 25, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 7
  store %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"* %1, %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"** %5, align 8
  %6 = bitcast %"class.url::Origin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo", %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"* %1, i64 0, i32 0
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* dereferenceable(120) %7) #17
  %8 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  %9 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %8, %"class.url::Origin"* nonnull dereferenceable(80) %3) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #17
  ret %"struct.CookieTreeNode::DetailedInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CookieTreeNode19DeleteStoredObjectsEv(%class.CookieTreeNode* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %2, align 8
  %4 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %1
  ret void

8:                                                ; preds = %1, %8
  %9 = phi %"class.std::__1::unique_ptr.22"* [ %16, %8 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.CookieTreeNode*, %class.CookieTreeNode** %10, align 8
  %12 = bitcast %class.CookieTreeNode* %11 to void (%class.CookieTreeNode*)***
  %13 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %13, i64 6
  %15 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %14, align 8
  tail call void %15(%class.CookieTreeNode* %11) #17
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 1
  %17 = icmp eq %"class.std::__1::unique_ptr.22"* %16, %5
  br i1 %17, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookiesTreeModel* @_ZNK14CookieTreeNode8GetModelEv(%class.CookieTreeNode* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 2
  %3 = load %class.CookieTreeNode*, %class.CookieTreeNode** %2, align 8
  %4 = icmp eq %class.CookieTreeNode* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CookieTreeNode* %3 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %7 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %6, align 8
  %8 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %7, i64 7
  %9 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %8, align 8
  %10 = tail call %class.CookiesTreeModel* %9(%class.CookieTreeNode* nonnull %3) #17
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %class.CookiesTreeModel* [ %10, %5 ], [ null, %1 ]
  ret %class.CookiesTreeModel* %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK14CookieTreeNode13InclusiveSizeEv(%class.CookieTreeNode* nocapture readnone) unnamed_addr #5 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK14CookieTreeNode15NumberOfCookiesEv(%class.CookieTreeNode* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %2, align 8
  %4 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %3, %5
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %1 ]
  %9 = phi %"class.std::__1::unique_ptr.22"* [ %18, %7 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.CookieTreeNode*, %class.CookieTreeNode** %10, align 8
  %12 = bitcast %class.CookieTreeNode* %11 to i32 (%class.CookieTreeNode*)***
  %13 = load i32 (%class.CookieTreeNode*)**, i32 (%class.CookieTreeNode*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%class.CookieTreeNode*)*, i32 (%class.CookieTreeNode*)** %13, i64 5
  %15 = load i32 (%class.CookieTreeNode*)*, i32 (%class.CookieTreeNode*)** %14, align 8
  %16 = tail call i32 %15(%class.CookieTreeNode* %11) #17
  %17 = add nsw i32 %16, %8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 1
  %19 = icmp eq %"class.std::__1::unique_ptr.22"* %18, %5
  br i1 %19, label %20, label %7

20:                                               ; preds = %7, %1
  %21 = phi i32 [ 0, %1 ], [ %17, %7 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode*, %class.CookieTreeNode*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.22", align 8
  %4 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %5, align 8
  %7 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.22"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"class.std::__1::unique_ptr.22"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %86, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %11, 3
  %15 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %1, i64 0, i32 0
  %16 = bitcast %class.CookieTreeNode* %1 to %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)***
  br label %17

17:                                               ; preds = %80, %13
  %18 = phi %"class.std::__1::unique_ptr.22"* [ %6, %13 ], [ %82, %80 ]
  %19 = phi i64 [ %14, %13 ], [ %81, %80 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %18, i64 %20
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.CookieTreeNode*, %class.CookieTreeNode** %22, align 8
  %24 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %23, i64 0, i32 0
  %25 = bitcast %class.CookieTreeNode* %23 to %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)***
  %26 = load %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)**, %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)*** %25, align 8
  %27 = load %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)*, %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)** %26, align 8
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string.13"* %27(%"class.ui::TreeNode"* %24) #17
  %29 = load %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)**, %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)*** %16, align 8
  %30 = load %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)*, %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)** %29, align 8
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string.13"* %30(%"class.ui::TreeNode"* %15) #17
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = bitcast %"class.std::__1::basic_string.13"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = icmp ult i64 %39, %47
  %49 = select i1 %48, i64 %39, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %74, label %51

51:                                               ; preds = %17
  %52 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string.13"* %28 to i16*
  %55 = select i1 %43, i16* %53, i16* %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i16*, i16** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string.13"* %31 to i16*
  %59 = select i1 %35, i16* %57, i16* %58
  br label %60

60:                                               ; preds = %69, %51
  %61 = phi i64 [ %70, %69 ], [ %49, %51 ]
  %62 = phi i16* [ %72, %69 ], [ %59, %51 ]
  %63 = phi i16* [ %71, %69 ], [ %55, %51 ]
  %64 = load i16, i16* %63, align 2
  %65 = load i16, i16* %62, align 2
  %66 = icmp ult i16 %64, %65
  br i1 %66, label %76, label %67

67:                                               ; preds = %60
  %68 = icmp ult i16 %65, %64
  br i1 %68, label %80, label %69

69:                                               ; preds = %67
  %70 = add i64 %61, -1
  %71 = getelementptr inbounds i16, i16* %63, i64 1
  %72 = getelementptr inbounds i16, i16* %62, i64 1
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %74, label %60

74:                                               ; preds = %69, %17
  %75 = icmp ult i64 %47, %39
  br i1 %75, label %76, label %80

76:                                               ; preds = %60, %74
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %21, i64 1
  %78 = xor i64 %20, -1
  %79 = add i64 %19, %78
  br label %80

80:                                               ; preds = %67, %76, %74
  %81 = phi i64 [ %79, %76 ], [ %20, %74 ], [ %20, %67 ]
  %82 = phi %"class.std::__1::unique_ptr.22"* [ %77, %76 ], [ %18, %74 ], [ %18, %67 ]
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %84, label %17

84:                                               ; preds = %80
  %85 = ptrtoint %"class.std::__1::unique_ptr.22"* %82 to i64
  br label %86

86:                                               ; preds = %84, %2
  %87 = phi i64 [ %85, %84 ], [ %10, %2 ]
  %88 = bitcast %class.CookieTreeNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %89 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %88, align 8
  %90 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %89, i64 7
  %91 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %90, align 8
  %92 = tail call %class.CookiesTreeModel* %91(%class.CookieTreeNode* %0) #17
  %93 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %92, i64 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.22"** %5 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %87, %95
  %97 = ashr exact i64 %96, 3
  %98 = bitcast %"class.std::__1::unique_ptr.22"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #17
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %3, i64 0, i32 0, i32 0, i32 0
  store %class.CookieTreeNode* %1, %class.CookieTreeNode** %99, align 8
  %100 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %1, i64 0, i32 0, i32 2
  %101 = bitcast %class.CookieTreeNode** %100 to %"class.ui::TreeNode"**
  store %"class.ui::TreeNode"* %4, %"class.ui::TreeNode"** %101, align 8
  %102 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 3
  %103 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 %97
  %106 = call %"class.std::__1::unique_ptr.22"* @_ZNSt3__16vectorINS_10unique_ptrI14CookieTreeNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_(%"class.std::__1::vector"* %102, %"class.std::__1::unique_ptr.22"* %105, %"class.std::__1::unique_ptr.22"* nonnull dereferenceable(8) %3) #17
  %107 = load %class.CookieTreeNode*, %class.CookieTreeNode** %99, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %99, align 8
  %108 = icmp eq %class.CookieTreeNode* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %86
  %110 = bitcast %class.CookieTreeNode* %107 to void (%class.CookieTreeNode*)***
  %111 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %111, i64 2
  %113 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %112, align 8
  call void %113(%class.CookieTreeNode* nonnull %107) #17
  br label %114

114:                                              ; preds = %109, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #17
  call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE28NotifyObserverTreeNodesAddedEPS1_mm(%"class.ui::TreeNodeModel"* %93, %class.CookieTreeNode* %0, i64 %97, i64 1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CookieTreeNode28ReportDeletionToAuditServiceERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.CookieTreeNode*, %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.CookieTreeNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %5 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %4, align 8
  %6 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %5, i64 7
  %7 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %6, align 8
  %8 = tail call %class.CookiesTreeModel* %7(%class.CookieTreeNode* %0) #17
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %8, i64 0, i32 4
  %10 = load %class.AccessContextAuditService*, %class.AccessContextAuditService** %9, align 8
  %11 = icmp eq %class.AccessContextAuditService* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  tail call void @_ZN25AccessContextAuditService37RemoveAllRecordsForOriginKeyedStorageERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.AccessContextAuditService* nonnull %10, %"class.url::Origin"* dereferenceable(80) %1, i32 %2) #17
  br label %13

13:                                               ; preds = %3, %12
  ret void
}

declare void @_ZN25AccessContextAuditService37RemoveAllRecordsForOriginKeyedStorageERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.AccessContextAuditService*, %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CookieTreeRootNodeC2EP16CookiesTreeModel(%class.CookieTreeRootNode* nocapture, %class.CookiesTreeModel*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false) #17
  %5 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV18CookieTreeRootNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 1
  store %class.CookiesTreeModel* %1, %class.CookiesTreeModel** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CookieTreeRootNodeD2Ev(%class.CookieTreeRootNode* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CookieTreeRootNodeD0Ev(%class.CookieTreeRootNode*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeRootNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::unique_ptr.22", align 8
  %16 = alloca %"class.std::__1::basic_string.13", align 8
  %17 = alloca %class.GURL, align 8
  %18 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %19 = tail call i8* @_Znwm(i64 304) #18
  %20 = bitcast i8* %19 to %class.CookieTreeHostNode*
  tail call void @_ZN18CookieTreeHostNodeC2ERK4GURL(%class.CookieTreeHostNode* nonnull %20, %class.GURL* dereferenceable(120) %1) #17
  %21 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %21, align 8
  %23 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr.22"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = ptrtoint %"class.std::__1::unique_ptr.22"* %22 to i64
  %27 = sub i64 %25, %26
  %28 = icmp eq i64 %27, 0
  %29 = inttoptr i64 %25 to %"class.std::__1::unique_ptr.22"*
  br i1 %28, label %173, label %30

30:                                               ; preds = %2
  %31 = ashr exact i64 %27, 3
  %32 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %34 = bitcast i32* %6 to i8*
  %35 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %7 to i8*
  %36 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %7, i64 0, i32 0
  %37 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %38 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %7, i64 0, i32 1
  %40 = bitcast %"class.logging::CheckError"* %8 to i8*
  %41 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  %43 = bitcast i32* %10 to i8*
  %44 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %11 to i8*
  %45 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %11, i64 0, i32 0
  %46 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %11, i64 0, i32 1
  %49 = bitcast %"class.logging::CheckError"* %12 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = bitcast i8* %19 to void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)***
  %61 = getelementptr inbounds i8, i8* %19, i64 280
  %62 = getelementptr inbounds i8, i8* %19, i64 303
  %63 = bitcast i8* %61 to i8**
  %64 = getelementptr inbounds i8, i8* %19, i64 288
  %65 = bitcast i8* %64 to i64*
  br label %66

66:                                               ; preds = %163, %30
  %67 = phi %"class.std::__1::unique_ptr.22"* [ %22, %30 ], [ %168, %163 ]
  %68 = phi i64 [ %31, %30 ], [ %167, %163 ]
  %69 = lshr i64 %68, 1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %67, i64 %69
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #17
  store i32 2, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %35) #17
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %class.CookieTreeNode*, %class.CookieTreeNode** %71, align 8
  %73 = bitcast %class.CookieTreeNode* %72 to void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)***
  %74 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)**, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*** %73, align 8
  %75 = getelementptr inbounds void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)** %74, i64 8
  %76 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)** %75, align 8
  call void %76(%"struct.CookieTreeNode::DetailedInfo"* nonnull sret %7, %class.CookieTreeNode* %72) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  %77 = load i32, i32* %36, align 8
  %78 = icmp eq i32 %77, 2
  br i1 %78, label %79, label %80

79:                                               ; preds = %66
  store i8* null, i8** %38, align 8
  br label %84

80:                                               ; preds = %66
  %81 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %34, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN14CookieTreeNode12DetailedInfo8NodeTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  %82 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %35, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN14CookieTreeNode12DetailedInfo8NodeTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.6, i64 0, i64 0), i8* %81, i8* %82) #17
  %83 = load i8*, i8** %38, align 8
  br label %84

84:                                               ; preds = %80, %79
  %85 = phi i8* [ %83, %80 ], [ null, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  store i8* %85, i8** %33, align 8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %39) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %35) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #17
  %86 = icmp eq i8* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %5) #17
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #17
  br label %89

89:                                               ; preds = %87, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #17
  store i32 2, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %44) #17
  %90 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)**, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*** %60, align 8
  %91 = getelementptr inbounds void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)** %90, i64 8
  %92 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)** %91, align 8
  call void %92(%"struct.CookieTreeNode::DetailedInfo"* nonnull sret %11, %class.CookieTreeHostNode* nonnull %20) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #17
  %93 = load i32, i32* %45, align 8
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %95, label %96

95:                                               ; preds = %89
  store i8* null, i8** %47, align 8
  br label %100

96:                                               ; preds = %89
  %97 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %43, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN14CookieTreeNode12DetailedInfo8NodeTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  %98 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %44, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN14CookieTreeNode12DetailedInfo8NodeTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.8, i64 0, i64 0), i8* %97, i8* %98) #17
  %99 = load i8*, i8** %47, align 8
  br label %100

100:                                              ; preds = %96, %95
  %101 = phi i8* [ %99, %96 ], [ null, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #17
  store i8* %101, i8** %42, align 8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %48) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %44) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #17
  %102 = icmp eq i8* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %9) #17
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #17
  br label %105

105:                                              ; preds = %103, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %106 = bitcast %"class.std::__1::unique_ptr.22"* %70 to %class.CookieTreeHostNode**
  %107 = load %class.CookieTreeHostNode*, %class.CookieTreeHostNode** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #17
  %108 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %107, i64 0, i32 14
  %109 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1, !noalias !2
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %105
  %114 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 8 %114, i64 24, i1 false) #17
  br label %120

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8, !noalias !2
  %118 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %107, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %13, i8* %117, i64 %119) #17
  br label %120

120:                                              ; preds = %115, %113
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #17
  %121 = load i8, i8* %62, align 1, !noalias !5
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %61, i64 24, i1 false) #17
  br label %127

124:                                              ; preds = %120
  %125 = load i8*, i8** %63, align 8, !noalias !5
  %126 = load i64, i64* %65, align 8, !noalias !5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %14, i8* %125, i64 %126) #17
  br label %127

127:                                              ; preds = %124, %123
  %128 = load i8, i8* %53, align 1
  %129 = icmp slt i8 %128, 0
  %130 = load i64, i64* %54, align 8
  %131 = zext i8 %128 to i64
  %132 = select i1 %129, i64 %130, i64 %131
  %133 = load i8, i8* %56, align 1
  %134 = icmp slt i8 %133, 0
  %135 = load i64, i64* %57, align 8
  %136 = zext i8 %133 to i64
  %137 = select i1 %134, i64 %135, i64 %136
  %138 = icmp ult i64 %132, %137
  %139 = select i1 %138, i64 %132, i64 %137
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %148, label %141

141:                                              ; preds = %127
  %142 = load i8*, i8** %58, align 8
  %143 = select i1 %134, i8* %142, i8* %50
  %144 = load i8*, i8** %59, align 8
  %145 = select i1 %129, i8* %144, i8* %51
  %146 = call i32 @memcmp(i8* %143, i8* %145, i64 %139) #17
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %141, %127
  %149 = icmp ult i64 %137, %132
  %150 = zext i1 %138 to i32
  %151 = select i1 %149, i32 -1, i32 %150
  br label %152

152:                                              ; preds = %148, %141
  %153 = phi i32 [ %151, %148 ], [ %146, %141 ]
  %154 = icmp slt i32 %153, 0
  br i1 %129, label %155, label %158

155:                                              ; preds = %152
  %156 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %156) #18
  %157 = load i8, i8* %56, align 1
  br label %158

158:                                              ; preds = %155, %152
  %159 = phi i8 [ %133, %152 ], [ %157, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #17
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %158
  %162 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %162) #18
  br label %163

163:                                              ; preds = %161, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #17
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %70, i64 1
  %165 = xor i64 %69, -1
  %166 = add i64 %68, %165
  %167 = select i1 %154, i64 %166, i64 %69
  %168 = select i1 %154, %"class.std::__1::unique_ptr.22"* %164, %"class.std::__1::unique_ptr.22"* %67
  %169 = icmp eq i64 %167, 0
  br i1 %169, label %170, label %66

170:                                              ; preds = %163
  %171 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %23, align 8
  %172 = ptrtoint %"class.std::__1::unique_ptr.22"* %168 to i64
  br label %173

173:                                              ; preds = %170, %2
  %174 = phi i64 [ %172, %170 ], [ %26, %2 ]
  %175 = phi %"class.std::__1::unique_ptr.22"* [ %171, %170 ], [ %29, %2 ]
  %176 = phi %"class.std::__1::unique_ptr.22"* [ %168, %170 ], [ %22, %2 ]
  %177 = icmp eq %"class.std::__1::unique_ptr.22"* %176, %175
  br i1 %177, label %253, label %178

178:                                              ; preds = %173
  %179 = bitcast %"class.std::__1::basic_string.13"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %16, %class.GURL* dereferenceable(120) %1)
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %176, i64 0, i32 0, i32 0, i32 0
  %181 = load %class.CookieTreeNode*, %class.CookieTreeNode** %180, align 8
  %182 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %181, i64 0, i32 0
  %183 = bitcast %class.CookieTreeNode* %181 to %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)***
  %184 = load %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)**, %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)*** %183, align 8
  %185 = load %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)*, %"class.std::__1::basic_string.13"* (%"class.ui::TreeNode"*)** %184, align 8
  %186 = call dereferenceable(24) %"class.std::__1::basic_string.13"* %185(%"class.ui::TreeNode"* %182) #17
  %187 = bitcast %"class.std::__1::basic_string.13"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %187, i64 0, i32 1, i32 1
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  %191 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = zext i8 %189 to i64
  %194 = select i1 %190, i64 %192, i64 %193
  %195 = bitcast %"class.std::__1::basic_string.13"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %195, i64 0, i32 1, i32 1
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  %199 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = zext i8 %197 to i64
  %202 = select i1 %198, i64 %200, i64 %201
  %203 = icmp eq i64 %194, %202
  br i1 %203, label %204, label %227

204:                                              ; preds = %178
  %205 = icmp eq i64 %194, 0
  br i1 %205, label %227, label %206

206:                                              ; preds = %204
  %207 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i16*, i16** %207, align 8
  %209 = bitcast %"class.std::__1::basic_string.13"* %186 to i16*
  %210 = select i1 %198, i16* %208, i16* %209
  %211 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i16*, i16** %211, align 8
  %213 = bitcast %"class.std::__1::basic_string.13"* %16 to i16*
  %214 = select i1 %190, i16* %212, i16* %213
  br label %215

215:                                              ; preds = %222, %206
  %216 = phi i64 [ %223, %222 ], [ %194, %206 ]
  %217 = phi i16* [ %225, %222 ], [ %210, %206 ]
  %218 = phi i16* [ %224, %222 ], [ %214, %206 ]
  %219 = load i16, i16* %218, align 2
  %220 = load i16, i16* %217, align 2
  %221 = icmp eq i16 %220, %219
  br i1 %221, label %222, label %227

222:                                              ; preds = %215
  %223 = add i64 %216, -1
  %224 = getelementptr inbounds i16, i16* %218, i64 1
  %225 = getelementptr inbounds i16, i16* %217, i64 1
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %215

227:                                              ; preds = %215, %222, %178, %204
  %228 = phi i1 [ true, %204 ], [ false, %178 ], [ false, %215 ], [ true, %222 ]
  br i1 %190, label %229, label %232

229:                                              ; preds = %227
  %230 = bitcast %"class.std::__1::basic_string.13"* %16 to i8**
  %231 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %231) #18
  br label %232

232:                                              ; preds = %229, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #17
  br i1 %228, label %233, label %253

233:                                              ; preds = %232
  %234 = load %class.CookieTreeNode*, %class.CookieTreeNode** %180, align 8
  %235 = bitcast %class.CookieTreeNode* %234 to %class.CookieTreeHostNode*
  %236 = bitcast %class.GURL* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %236) #17
  %237 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %237) #17
  %238 = bitcast %class.CookieTreeNode* %234 to void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)***
  %239 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)**, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*** %238, align 8
  %240 = getelementptr inbounds void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)** %239, i64 8
  %241 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)** %240, align 8
  call void %241(%"struct.CookieTreeNode::DetailedInfo"* nonnull sret %18, %class.CookieTreeHostNode* %235) #17
  %242 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %18, i64 0, i32 1
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %17, %"class.url::Origin"* %242) #17
  %243 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #17
  %244 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %17, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %243) #17
  br i1 %244, label %245, label %252

245:                                              ; preds = %233
  %246 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #17
  %247 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %246) #17
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %17) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %242) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %237) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %236) #17
  br i1 %247, label %248, label %280

248:                                              ; preds = %245
  %249 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %234, i64 2, i32 0, i32 2
  %250 = bitcast %class.CookieTreeNode** %249 to %class.GURL*
  %251 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %250, %class.GURL* dereferenceable(120) %1) #17
  br label %280

252:                                              ; preds = %233
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %17) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %242) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %237) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %236) #17
  br label %280

253:                                              ; preds = %173, %232
  %254 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 1
  %255 = bitcast %class.CookiesTreeModel** %254 to %"class.ui::TreeNodeModel"**
  %256 = load %"class.ui::TreeNodeModel"*, %"class.ui::TreeNodeModel"** %255, align 8
  %257 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0
  %258 = bitcast %"class.std::__1::unique_ptr.22"** %21 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = sub i64 %174, %259
  %261 = ashr exact i64 %260, 3
  %262 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0
  %263 = bitcast %"class.std::__1::unique_ptr.22"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #17
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %15, i64 0, i32 0, i32 0, i32 0
  %265 = bitcast %"class.std::__1::unique_ptr.22"* %15 to i8**
  store i8* %19, i8** %265, align 8
  %266 = getelementptr inbounds i8, i8* %19, i64 32
  %267 = bitcast i8* %266 to %"class.ui::TreeNode"**
  store %"class.ui::TreeNode"* %262, %"class.ui::TreeNode"** %267, align 8
  %268 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 0, i32 0, i32 3
  %269 = inttoptr i64 %259 to %"class.std::__1::unique_ptr.22"*
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %269, i64 %261
  %271 = call %"class.std::__1::unique_ptr.22"* @_ZNSt3__16vectorINS_10unique_ptrI14CookieTreeNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_(%"class.std::__1::vector"* %268, %"class.std::__1::unique_ptr.22"* %270, %"class.std::__1::unique_ptr.22"* nonnull dereferenceable(8) %15) #17
  %272 = load %class.CookieTreeNode*, %class.CookieTreeNode** %264, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %264, align 8
  %273 = icmp eq %class.CookieTreeNode* %272, null
  br i1 %273, label %279, label %274

274:                                              ; preds = %253
  %275 = bitcast %class.CookieTreeNode* %272 to void (%class.CookieTreeNode*)***
  %276 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %275, align 8
  %277 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %276, i64 2
  %278 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %277, align 8
  call void %278(%class.CookieTreeNode* nonnull %272) #17
  br label %279

279:                                              ; preds = %274, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #17
  call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE28NotifyObserverTreeNodesAddedEPS1_mm(%"class.ui::TreeNodeModel"* %256, %class.CookieTreeNode* %257, i64 %261, i64 1) #17
  br label %285

280:                                              ; preds = %252, %248, %245
  %281 = bitcast i8* %19 to void (%class.CookieTreeHostNode*)***
  %282 = load void (%class.CookieTreeHostNode*)**, void (%class.CookieTreeHostNode*)*** %281, align 8
  %283 = getelementptr inbounds void (%class.CookieTreeHostNode*)*, void (%class.CookieTreeHostNode*)** %282, i64 2
  %284 = load void (%class.CookieTreeHostNode*)*, void (%class.CookieTreeHostNode*)** %283, align 8
  call void %284(%class.CookieTreeHostNode* nonnull %20) #17
  br label %285

285:                                              ; preds = %279, %280
  %286 = phi %class.CookieTreeHostNode* [ %20, %279 ], [ %235, %280 ]
  ret %class.CookieTreeHostNode* %286
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.url::Origin", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %11 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #17
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #19
  unreachable

15:                                               ; preds = %2
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #18
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %31

26:                                               ; preds = %15
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26, %17
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %25, %17 ]
  %33 = phi i8* [ %9, %26 ], [ %20, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %11, i1 false) #17
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i8* [ %9, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %11
  store i8 0, i8* %37, align 1
  %38 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #17, !noalias !8
  %39 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %39, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #17, !noalias !8
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %34, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  %47 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #17
  %48 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %47) #17
  br i1 %48, label %73, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.url::Origin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %50) #17
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %5, %class.GURL* dereferenceable(120) %1) #17
  %51 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 8, !range !11
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %5, i64 0, i32 0, i32 1
  br label %58

56:                                               ; preds = %49
  %57 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #17
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.std::__1::basic_string"* [ %55, %54 ], [ %57, %56 ]
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %67 = select i1 %63, i8* %65, i8* %66
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %62 to i64
  %71 = select i1 %63, i64 %69, i64 %70
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* sret %0, i8* %67, i64 %71) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %50) #17
  %72 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %83

73:                                               ; preds = %46
  %74 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i8*, i8** %7, align 8
  %79 = select i1 %77, i8* %78, i8* %6
  %80 = load i64, i64* %8, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* sret %0, i8* %79, i64 %82) #17
  br label %83

83:                                               ; preds = %73, %58
  %84 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %74, %73 ], [ %72, %58 ]
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %89) #18
  br label %90

90:                                               ; preds = %83, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret void
}

declare void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret, %"class.url::Origin"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CookieTreeHostNode13UpdateHostUrlERK4GURL(%class.CookieTreeHostNode*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 13
  %4 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %1) #17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CookiesTreeModel* @_ZNK18CookieTreeRootNode8GetModelEv(%class.CookieTreeRootNode* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeRootNode, %class.CookieTreeRootNode* %0, i64 0, i32 1
  %3 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %2, align 8
  ret %class.CookiesTreeModel* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CookieTreeRootNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeRootNode* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 1, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CookieTreeHostNodeC2ERK4GURL(%class.CookieTreeHostNode*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string.13", align 8
  %11 = bitcast %"class.std::__1::basic_string.13"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %10, %class.GURL* dereferenceable(120) %1)
  %12 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string.13"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string.13"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %11, i64 24, i1 false) #17
  %20 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %class.CookieTreeNode** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  br label %205

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %26, 11
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string.13"* %13 to i16*
  %30 = trunc i64 %26 to i8
  %31 = bitcast %"class.std::__1::basic_string.13"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  store i8 %30, i8* %32, align 1
  br label %50

33:                                               ; preds = %22
  %34 = icmp ugt i64 %26, 9223372036854775791
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::basic_string.13"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %36) #19
  unreachable

37:                                               ; preds = %33
  %38 = add nuw nsw i64 %26, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  call void @abort() #19
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = call i8* @_Znwm(i64 %43) #18
  %45 = bitcast i8* %44 to i16*
  %46 = bitcast %"class.std::__1::basic_string.13"* %13 to i8**
  store i8* %44, i8** %46, align 8
  %47 = or i64 %39, -9223372036854775808
  %48 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %49, align 8
  br label %50

50:                                               ; preds = %42, %28
  %51 = phi i16* [ %29, %28 ], [ %45, %42 ]
  %52 = add nuw nsw i64 %26, 1
  %53 = add i64 %26, 1
  %54 = icmp ult i64 %53, 16
  br i1 %54, label %144, label %55

55:                                               ; preds = %50
  %56 = add i64 %26, 1
  %57 = getelementptr i16, i16* %51, i64 %56
  %58 = getelementptr i16, i16* %24, i64 %56
  %59 = icmp ult i16* %51, %58
  %60 = icmp ult i16* %24, %57
  %61 = and i1 %59, %60
  br i1 %61, label %144, label %62

62:                                               ; preds = %55
  %63 = and i64 %53, -16
  %64 = sub i64 %52, %63
  %65 = getelementptr i16, i16* %24, i64 %63
  %66 = getelementptr i16, i16* %51, i64 %63
  %67 = add i64 %63, -16
  %68 = lshr exact i64 %67, 4
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 3
  %71 = icmp ult i64 %67, 48
  br i1 %71, label %123, label %72

72:                                               ; preds = %62
  %73 = sub nsw i64 %69, %70
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ 0, %72 ], [ %120, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %121, %74 ]
  %77 = getelementptr i16, i16* %24, i64 %75
  %78 = getelementptr i16, i16* %51, i64 %75
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !12
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !12
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !15, !noalias !12
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !15, !noalias !12
  %87 = or i64 %75, 16
  %88 = getelementptr i16, i16* %24, i64 %87
  %89 = getelementptr i16, i16* %51, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !12
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !12
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !15, !noalias !12
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !15, !noalias !12
  %98 = or i64 %75, 32
  %99 = getelementptr i16, i16* %24, i64 %98
  %100 = getelementptr i16, i16* %51, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !12
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !12
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !15, !noalias !12
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !15, !noalias !12
  %109 = or i64 %75, 48
  %110 = getelementptr i16, i16* %24, i64 %109
  %111 = getelementptr i16, i16* %51, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !12
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !12
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !15, !noalias !12
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !15, !noalias !12
  %120 = add i64 %75, 64
  %121 = add i64 %76, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %74, !llvm.loop !17

123:                                              ; preds = %74, %62
  %124 = phi i64 [ 0, %62 ], [ %120, %74 ]
  %125 = icmp eq i64 %70, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %123, %126
  %127 = phi i64 [ %139, %126 ], [ %124, %123 ]
  %128 = phi i64 [ %140, %126 ], [ %70, %123 ]
  %129 = getelementptr i16, i16* %24, i64 %127
  %130 = getelementptr i16, i16* %51, i64 %127
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !12
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !12
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !15, !noalias !12
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !15, !noalias !12
  %139 = add i64 %127, 16
  %140 = add i64 %128, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %126, !llvm.loop !19

142:                                              ; preds = %126, %123
  %143 = icmp eq i64 %53, %63
  br i1 %143, label %197, label %144

144:                                              ; preds = %142, %55, %50
  %145 = phi i64 [ %52, %55 ], [ %52, %50 ], [ %64, %142 ]
  %146 = phi i16* [ %24, %55 ], [ %24, %50 ], [ %65, %142 ]
  %147 = phi i16* [ %51, %55 ], [ %51, %50 ], [ %66, %142 ]
  %148 = add i64 %145, -1
  %149 = and i64 %145, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %157, %151 ], [ %145, %144 ]
  %153 = phi i16* [ %159, %151 ], [ %146, %144 ]
  %154 = phi i16* [ %158, %151 ], [ %147, %144 ]
  %155 = phi i64 [ %160, %151 ], [ %149, %144 ]
  %156 = load i16, i16* %153, align 2
  store i16 %156, i16* %154, align 2
  %157 = add i64 %152, -1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = getelementptr inbounds i16, i16* %153, i64 1
  %160 = add i64 %155, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %151, !llvm.loop !21

162:                                              ; preds = %151, %144
  %163 = phi i64 [ %145, %144 ], [ %157, %151 ]
  %164 = phi i16* [ %146, %144 ], [ %159, %151 ]
  %165 = phi i16* [ %147, %144 ], [ %158, %151 ]
  %166 = icmp ult i64 %148, 7
  br i1 %166, label %197, label %167

167:                                              ; preds = %162, %167
  %168 = phi i64 [ %193, %167 ], [ %163, %162 ]
  %169 = phi i16* [ %195, %167 ], [ %164, %162 ]
  %170 = phi i16* [ %194, %167 ], [ %165, %162 ]
  %171 = load i16, i16* %169, align 2
  store i16 %171, i16* %170, align 2
  %172 = getelementptr inbounds i16, i16* %170, i64 1
  %173 = getelementptr inbounds i16, i16* %169, i64 1
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %170, i64 2
  %176 = getelementptr inbounds i16, i16* %169, i64 2
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %170, i64 3
  %179 = getelementptr inbounds i16, i16* %169, i64 3
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %170, i64 4
  %182 = getelementptr inbounds i16, i16* %169, i64 4
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %170, i64 5
  %185 = getelementptr inbounds i16, i16* %169, i64 5
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %170, i64 6
  %188 = getelementptr inbounds i16, i16* %169, i64 6
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %170, i64 7
  %191 = getelementptr inbounds i16, i16* %169, i64 7
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = add i64 %168, -8
  %194 = getelementptr inbounds i16, i16* %170, i64 8
  %195 = getelementptr inbounds i16, i16* %169, i64 8
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %197, label %167, !llvm.loop !22

197:                                              ; preds = %162, %167, %142
  %198 = load i8, i8* %15, align 1
  %199 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 2
  %200 = bitcast %class.CookieTreeNode** %199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %201 = icmp slt i8 %198, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %197
  %203 = bitcast %"class.std::__1::basic_string.13"* %10 to i8**
  %204 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %204) #18
  br label %205

205:                                              ; preds = %18, %197, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV18CookieTreeHostNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %206 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 1
  %207 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 13
  %208 = bitcast %class.CookieTreeCookiesNode** %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 96, i1 false)
  call void @_ZN4GURLC1ERKS_(%class.GURL* %207, %class.GURL* dereferenceable(120) %1) #17
  %209 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 14
  %210 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #17, !noalias !23
  %211 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %210) #17, !noalias !23
  br i1 %211, label %212, label %250

212:                                              ; preds = %205
  %213 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #17, !noalias !23
  %214 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #17, !noalias !23
  %215 = icmp ugt i64 %214, -17
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %217) #19, !noalias !23
  unreachable

218:                                              ; preds = %212
  %219 = icmp ult i64 %214, 23
  br i1 %219, label %229, label %220

220:                                              ; preds = %218
  %221 = add nuw i64 %214, 16
  %222 = and i64 %221, -16
  %223 = call i8* @_Znwm(i64 %222) #18, !noalias !23
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %223, i8** %224, align 8, !noalias !23
  %225 = or i64 %222, -9223372036854775808
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %225, i64* %226, align 8, !noalias !23
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %214, i64* %227, align 8, !noalias !23
  %228 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %234

229:                                              ; preds = %218
  %230 = trunc i64 %214 to i8
  %231 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  store i8 %230, i8* %232, align 1, !noalias !23
  %233 = icmp eq i64 %214, 0
  br i1 %233, label %237, label %234

234:                                              ; preds = %229, %220
  %235 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %231, %229 ], [ %228, %220 ]
  %236 = phi i8* [ %213, %229 ], [ %223, %220 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %236, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %214, i1 false) #17, !noalias !23
  br label %237

237:                                              ; preds = %234, %229
  %238 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %231, %229 ], [ %235, %234 ]
  %239 = phi i8* [ %213, %229 ], [ %236, %234 ]
  %240 = getelementptr inbounds i8, i8* %239, i64 %214
  store i8 0, i8* %240, align 1, !noalias !23
  %241 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #17, !noalias !26
  %242 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  %243 = bitcast %"class.std::__1::basic_string"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %243, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 24, i1 false) #17, !noalias !26
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1, !noalias !23
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %430

247:                                              ; preds = %237
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8, !noalias !23
  call void @_ZdlPv(i8* %249) #18, !noalias !23
  br label %430

250:                                              ; preds = %205
  %251 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %251) #17, !noalias !23
  %252 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %251, i8 -86, i64 24, i1 false) #17, !noalias !23
  call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERK4GURLNS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* nonnull sret %5, %class.GURL* dereferenceable(120) %1, i32 1) #17, !noalias !23
  %254 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #17, !noalias !23
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %257 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 -86, i64 24, i1 false) #17, !noalias !23
  %258 = load i32, i32* %257, align 4, !noalias !29
  %259 = icmp slt i32 %258, 1
  br i1 %259, label %260, label %261

260:                                              ; preds = %250
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 0, i64 24, i1 false) #17, !alias.scope !34, !noalias !23
  br label %268

261:                                              ; preds = %250
  %262 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %263 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %264 = load i32, i32* %263, align 4, !noalias !29
  %265 = sext i32 %264 to i64
  %266 = sext i32 %258 to i64
  %267 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %267) #17, !noalias !29
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %262, i64 %265, i64 %266, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #17, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %267) #17, !noalias !29
  br label %268

268:                                              ; preds = %261, %260
  %269 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %269, i64 0, i32 1, i32 0
  %271 = load i8, i8* %270, align 1, !noalias !23
  %272 = icmp slt i8 %271, 0
  %273 = load i64, i64* %253, align 8, !noalias !23
  %274 = zext i8 %271 to i64
  %275 = select i1 %272, i64 %273, i64 %274
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %268
  %278 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %278, i8* nonnull align 8 %254, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 0, i64 24, i1 false) #17, !noalias !23
  br label %425

279:                                              ; preds = %268
  %280 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %281 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %280, i64 0, i32 1, i32 0
  %282 = load i8, i8* %281, align 1, !noalias !23
  %283 = icmp slt i8 %282, 0
  %284 = load i8*, i8** %255, align 8, !noalias !23
  %285 = load i64, i64* %256, align 8, !noalias !23
  %286 = zext i8 %282 to i64
  %287 = select i1 %283, i8* %284, i8* %254
  %288 = select i1 %283, i64 %285, i64 %286
  %289 = load i8*, i8** %252, align 8, !noalias !23
  %290 = select i1 %272, i8* %289, i8* %251
  %291 = getelementptr inbounds i8, i8* %287, i64 %288
  %292 = icmp slt i64 %288, %275
  br i1 %292, label %317, label %293

293:                                              ; preds = %279
  %294 = getelementptr inbounds i8, i8* %290, i64 %275
  %295 = add nsw i64 %275, -1
  %296 = getelementptr inbounds i8, i8* %287, i64 %295
  %297 = getelementptr inbounds i8, i8* %294, i64 -1
  br label %298

298:                                              ; preds = %306, %293
  %299 = phi i8* [ %291, %293 ], [ %302, %306 ]
  %300 = icmp eq i8* %296, %299
  br i1 %300, label %317, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds i8, i8* %299, i64 -1
  %303 = load i8, i8* %302, align 1, !noalias !23
  %304 = load i8, i8* %297, align 1, !noalias !23
  %305 = icmp eq i8 %303, %304
  br i1 %305, label %307, label %306

306:                                              ; preds = %311, %301
  br label %298

307:                                              ; preds = %301, %311
  %308 = phi i8* [ %312, %311 ], [ %302, %301 ]
  %309 = phi i8* [ %314, %311 ], [ %297, %301 ]
  %310 = icmp eq i8* %309, %290
  br i1 %310, label %317, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds i8, i8* %308, i64 -1
  %313 = load i8, i8* %312, align 1, !noalias !23
  %314 = getelementptr inbounds i8, i8* %309, i64 -1
  %315 = load i8, i8* %314, align 1, !noalias !23
  %316 = icmp eq i8 %313, %315
  br i1 %316, label %307, label %306

317:                                              ; preds = %298, %307, %279
  %318 = phi i8* [ %291, %279 ], [ %308, %307 ], [ %291, %298 ]
  %319 = icmp eq i8* %318, %291
  %320 = ptrtoint i8* %318 to i64
  %321 = ptrtoint i8* %287 to i64
  %322 = sub i64 %320, %321
  %323 = select i1 %319, i64 -1, i64 %322
  %324 = add i64 %323, 1
  %325 = icmp ult i64 %324, 2
  br i1 %325, label %326, label %328

326:                                              ; preds = %317
  %327 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* nonnull align 8 %254, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 0, i64 24, i1 false) #17, !noalias !23
  br label %425

328:                                              ; preds = %317
  %329 = add i64 %323, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %417, label %331

331:                                              ; preds = %328
  %332 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %333 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %334 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %333, i64 0, i32 1, i32 0
  %335 = getelementptr inbounds i8, i8* %332, i64 1
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %338 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::allocator"*
  %339 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %343

343:                                              ; preds = %415, %331
  %344 = phi i64 [ %329, %331 ], [ %379, %415 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #17, !noalias !23
  store i8 1, i8* %334, align 1, !noalias !23
  store i8 46, i8* %332, align 8, !noalias !23
  store i8 0, i8* %335, align 1, !noalias !23
  %345 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* nonnull %332, i64 1) #17, !noalias !23
  %346 = load i8, i8* %334, align 1, !noalias !23
  %347 = icmp slt i8 %346, 0
  br i1 %347, label %348, label %350

348:                                              ; preds = %343
  %349 = load i8*, i8** %336, align 8, !noalias !23
  call void @_ZdlPv(i8* %349) #18, !noalias !23
  br label %350

350:                                              ; preds = %348, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #17, !noalias !23
  %351 = add i64 %344, -1
  %352 = load i8, i8* %281, align 1, !noalias !23
  %353 = icmp slt i8 %352, 0
  %354 = load i8*, i8** %255, align 8, !noalias !23
  %355 = load i64, i64* %256, align 8, !noalias !23
  %356 = zext i8 %352 to i64
  %357 = select i1 %353, i8* %354, i8* %254
  %358 = select i1 %353, i64 %355, i64 %356
  %359 = icmp ult i64 %358, %351
  %360 = select i1 %359, i64 %358, i64 %351
  %361 = sub i64 %358, %360
  %362 = icmp ugt i64 %361, 1
  %363 = add i64 %360, 1
  %364 = select i1 %362, i64 %363, i64 %358
  %365 = getelementptr inbounds i8, i8* %357, i64 %364
  %366 = icmp slt i64 %364, 1
  br i1 %366, label %381, label %367

367:                                              ; preds = %350, %370
  %368 = phi i8* [ %371, %370 ], [ %365, %350 ]
  %369 = icmp eq i8* %357, %368
  br i1 %369, label %381, label %370

370:                                              ; preds = %367
  %371 = getelementptr inbounds i8, i8* %368, i64 -1
  %372 = load i8, i8* %371, align 1, !noalias !23
  %373 = icmp eq i8 %372, 46
  br i1 %373, label %374, label %367

374:                                              ; preds = %370
  %375 = icmp eq i8* %371, %365
  %376 = ptrtoint i8* %371 to i64
  %377 = ptrtoint i8* %357 to i64
  %378 = sub i64 %376, %377
  %379 = select i1 %375, i64 -1, i64 %378
  %380 = icmp eq i64 %379, -1
  br i1 %380, label %381, label %400

381:                                              ; preds = %374, %350, %367
  %382 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %382) #17, !noalias !23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 0, i64 %344, %"class.std::__1::allocator"* nonnull dereferenceable(1) %338) #17, !noalias !23
  %383 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %384 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %383, i64 0, i32 1, i32 0
  %385 = load i8, i8* %384, align 1, !noalias !23
  %386 = icmp slt i8 %385, 0
  %387 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load i8*, i8** %387, align 8, !noalias !23
  %389 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %390 = load i64, i64* %389, align 8, !noalias !23
  %391 = zext i8 %385 to i64
  %392 = select i1 %386, i8* %388, i8* %382
  %393 = select i1 %386, i64 %390, i64 %391
  %394 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %392, i64 %393) #17, !noalias !23
  %395 = load i8, i8* %384, align 1, !noalias !23
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %399

397:                                              ; preds = %381
  %398 = load i8*, i8** %387, align 8, !noalias !23
  call void @_ZdlPv(i8* %398) #18, !noalias !23
  br label %399

399:                                              ; preds = %397, %381
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %382) #17, !noalias !23
  br label %417

400:                                              ; preds = %374
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %337) #17, !noalias !23
  %401 = add nuw i64 %379, 1
  %402 = sub i64 %344, %401
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 %401, i64 %402, %"class.std::__1::allocator"* nonnull dereferenceable(1) %338) #17, !noalias !23
  %403 = load i8, i8* %340, align 1, !noalias !23
  %404 = icmp slt i8 %403, 0
  %405 = load i8*, i8** %341, align 8, !noalias !23
  %406 = load i64, i64* %342, align 8, !noalias !23
  %407 = zext i8 %403 to i64
  %408 = select i1 %404, i8* %405, i8* %337
  %409 = select i1 %404, i64 %406, i64 %407
  %410 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %408, i64 %409) #17, !noalias !23
  %411 = load i8, i8* %340, align 1, !noalias !23
  %412 = icmp slt i8 %411, 0
  br i1 %412, label %413, label %415

413:                                              ; preds = %400
  %414 = load i8*, i8** %341, align 8, !noalias !23
  call void @_ZdlPv(i8* %414) #18, !noalias !23
  br label %415

415:                                              ; preds = %413, %400
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #17, !noalias !23
  %416 = icmp eq i64 %379, 0
  br i1 %416, label %417, label %343

417:                                              ; preds = %415, %399, %328
  %418 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %418, i8* nonnull align 8 %251, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %251, i8 0, i64 24, i1 false) #17, !noalias !23
  %419 = load i8, i8* %281, align 1, !noalias !23
  %420 = icmp slt i8 %419, 0
  br i1 %420, label %422, label %421

421:                                              ; preds = %417
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #17, !noalias !23
  br label %430

422:                                              ; preds = %417
  %423 = load i8*, i8** %255, align 8, !noalias !23
  call void @_ZdlPv(i8* %423) #18, !noalias !23
  %424 = load i8, i8* %270, align 1, !noalias !23
  br label %425

425:                                              ; preds = %422, %326, %277
  %426 = phi i8 [ %424, %422 ], [ %271, %326 ], [ %271, %277 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #17, !noalias !23
  %427 = icmp slt i8 %426, 0
  br i1 %427, label %428, label %430

428:                                              ; preds = %425
  %429 = load i8*, i8** %252, align 8, !noalias !23
  call void @_ZdlPv(i8* %429) #18, !noalias !23
  br label %430

430:                                              ; preds = %421, %425, %428, %237, %247
  %431 = phi i8* [ %213, %247 ], [ %213, %237 ], [ %251, %428 ], [ %251, %425 ], [ %251, %421 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %431) #17, !noalias !23
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CookieTreeHostNodeD2Ev(%class.CookieTreeHostNode*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV18CookieTreeHostNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 14
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 13
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %13 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 3
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.22"* %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::unique_ptr.22"* %15 to i8*
  %19 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.22"* %20, %15
  br i1 %21, label %38, label %22

22:                                               ; preds = %17, %33
  %23 = phi %"class.std::__1::unique_ptr.22"* [ %24, %33 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %23, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %class.CookieTreeNode*, %class.CookieTreeNode** %25, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %25, align 8
  %27 = icmp eq %class.CookieTreeNode* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %class.CookieTreeNode* %26 to void (%class.CookieTreeNode*)***
  %30 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %30, i64 2
  %32 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %31, align 8
  tail call void %32(%class.CookieTreeNode* nonnull %26) #17
  br label %33

33:                                               ; preds = %28, %22
  %34 = icmp eq %"class.std::__1::unique_ptr.22"* %24, %15
  br i1 %34, label %35, label %22

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector"* %13 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %17
  %39 = phi i8* [ %37, %35 ], [ %18, %17 ]
  store %"class.std::__1::unique_ptr.22"* %15, %"class.std::__1::unique_ptr.22"** %19, align 8
  tail call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %38, %11
  %41 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string.13"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = bitcast %"class.std::__1::basic_string.13"* %41 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #18
  br label %49

49:                                               ; preds = %40, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CookieTreeHostNodeD0Ev(%class.CookieTreeHostNode*) unnamed_addr #0 align 2 {
  tail call void @_ZN18CookieTreeHostNodeD2Ev(%class.CookieTreeHostNode* %0) #17
  %2 = bitcast %class.CookieTreeHostNode* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CookieTreeHostNode7GetHostEv(%"class.std::__1::basic_string"* noalias sret, %class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #17
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #19
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #18
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %6, i1 false) #17
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #17, !noalias !35
  %34 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #17, !noalias !35
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %29, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  %48 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %1, i64 0, i32 13
  %49 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #17
  %50 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %48, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %49) #17
  br i1 %50, label %51, label %60

51:                                               ; preds = %47
  %52 = lshr i64 %40, 56
  %53 = trunc i64 %52 to i8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %38, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %58, align 8
  br label %73

59:                                               ; preds = %51
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %36, i64 %38) #17
  br label %73

60:                                               ; preds = %47
  %61 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %1, i64 0, i32 13, i32 2, i32 3, i32 1
  %62 = load i32, i32* %61, align 4, !noalias !38
  %63 = icmp slt i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #17, !alias.scope !38
  br label %73

66:                                               ; preds = %60
  %67 = getelementptr inbounds %class.GURL, %class.GURL* %48, i64 0, i32 0
  %68 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %1, i64 0, i32 13, i32 2, i32 3, i32 0
  %69 = load i32, i32* %68, align 4, !noalias !38
  %70 = sext i32 %69 to i64
  %71 = sext i32 %62 to i64
  %72 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %72) #17, !noalias !38
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %67, i64 %70, i64 %71, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %72) #17, !noalias !38
  br label %73

73:                                               ; preds = %66, %64, %59, %55
  %74 = lshr i64 %40, 56
  %75 = trunc i64 %74 to i8
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  call void @_ZdlPv(i8* %36) #18
  br label %78

78:                                               ; preds = %73, %77
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CookieTreeHostNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeHostNode*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %5 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %7) #17
  %8 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 2
  %9 = bitcast %"class.net::CanonicalCookie"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #17
  %10 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %1, i64 0, i32 13
  store i32 2, i32* %6, align 8
  %11 = bitcast %"class.url::Origin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #17
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* dereferenceable(120) %10) #17
  %12 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %7, %"class.url::Origin"* nonnull dereferenceable(80) %3) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #17
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %14 = load i32, i32* %6, align 8
  store i32 %14, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %15, %"class.url::Origin"* dereferenceable(80) %7) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %17 = bitcast %"class.net::CanonicalCookie"** %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %9, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %7) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeCookiesNode* @_ZN18CookieTreeHostNode22GetOrCreateCookiesNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 1
  %3 = load %class.CookieTreeCookiesNode*, %class.CookieTreeCookiesNode** %2, align 8
  %4 = icmp eq %class.CookieTreeCookiesNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeCookiesNode*
  tail call void @_ZN21CookieTreeCookiesNodeC2Ev(%class.CookieTreeCookiesNode* nonnull %7)
  %8 = bitcast %class.CookieTreeCookiesNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeCookiesNode*, %class.CookieTreeCookiesNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeCookiesNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeCookiesNode* %13
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21CookieTreeCookiesNodeC2Ev(%class.CookieTreeCookiesNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8396) #17
  %4 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !43
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !43
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !46, !noalias !43
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !46, !noalias !43
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !43
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !43
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !46, !noalias !43
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !46, !noalias !43
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !43
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !43
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !46, !noalias !43
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !46, !noalias !43
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !43
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !43
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !46, !noalias !43
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !46, !noalias !43
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !48

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !43
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !43
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !46, !noalias !43
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !46, !noalias !43
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !49

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !50

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !51

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV21CookieTreeCookiesNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeDatabasesNode* @_ZN18CookieTreeHostNode24GetOrCreateDatabasesNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 2
  %3 = load %class.CookieTreeDatabasesNode*, %class.CookieTreeDatabasesNode** %2, align 8
  %4 = icmp eq %class.CookieTreeDatabasesNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeDatabasesNode*
  tail call void @_ZN23CookieTreeDatabasesNodeC2Ev(%class.CookieTreeDatabasesNode* nonnull %7)
  %8 = bitcast %class.CookieTreeDatabasesNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeDatabasesNode*, %class.CookieTreeDatabasesNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeDatabasesNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeDatabasesNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CookieTreeDatabasesNodeC2Ev(%class.CookieTreeDatabasesNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8399) #17
  %4 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !52
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !52
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !55, !noalias !52
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !55, !noalias !52
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !52
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !52
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !55, !noalias !52
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !55, !noalias !52
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !52
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !52
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !55, !noalias !52
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !55, !noalias !52
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !52
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !52
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !55, !noalias !52
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !55, !noalias !52
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !57

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !52
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !52
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !55, !noalias !52
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !55, !noalias !52
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !58

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !59

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !60

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV23CookieTreeDatabasesNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeLocalStoragesNode* @_ZN18CookieTreeHostNode28GetOrCreateLocalStoragesNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 3
  %3 = load %class.CookieTreeLocalStoragesNode*, %class.CookieTreeLocalStoragesNode** %2, align 8
  %4 = icmp eq %class.CookieTreeLocalStoragesNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeLocalStoragesNode*
  tail call void @_ZN27CookieTreeLocalStoragesNodeC2Ev(%class.CookieTreeLocalStoragesNode* nonnull %7)
  %8 = bitcast %class.CookieTreeLocalStoragesNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeLocalStoragesNode*, %class.CookieTreeLocalStoragesNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeLocalStoragesNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeLocalStoragesNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeLocalStoragesNodeC2Ev(%class.CookieTreeLocalStoragesNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8400) #17
  %4 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !61
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !61
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !64, !noalias !61
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !64, !noalias !61
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !61
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !61
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !64, !noalias !61
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !64, !noalias !61
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !61
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !61
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !64, !noalias !61
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !64, !noalias !61
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !61
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !61
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !64, !noalias !61
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !64, !noalias !61
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !66

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !61
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !61
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !64, !noalias !61
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !64, !noalias !61
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !67

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !68

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !69

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV27CookieTreeLocalStoragesNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeSessionStoragesNode* @_ZN18CookieTreeHostNode30GetOrCreateSessionStoragesNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 4
  %3 = load %class.CookieTreeSessionStoragesNode*, %class.CookieTreeSessionStoragesNode** %2, align 8
  %4 = icmp eq %class.CookieTreeSessionStoragesNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeSessionStoragesNode*
  tail call void @_ZN29CookieTreeSessionStoragesNodeC2Ev(%class.CookieTreeSessionStoragesNode* nonnull %7)
  %8 = bitcast %class.CookieTreeSessionStoragesNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeSessionStoragesNode*, %class.CookieTreeSessionStoragesNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeSessionStoragesNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeSessionStoragesNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29CookieTreeSessionStoragesNodeC2Ev(%class.CookieTreeSessionStoragesNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8401) #17
  %4 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !70
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !70
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !73, !noalias !70
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !73, !noalias !70
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !70
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !70
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !73, !noalias !70
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !73, !noalias !70
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !70
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !70
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !73, !noalias !70
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !73, !noalias !70
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !70
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !70
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !73, !noalias !70
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !73, !noalias !70
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !75

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !70
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !70
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !73, !noalias !70
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !73, !noalias !70
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !76

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !77

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !78

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV29CookieTreeSessionStoragesNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeAppCachesNode* @_ZN18CookieTreeHostNode24GetOrCreateAppCachesNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 5
  %3 = load %class.CookieTreeAppCachesNode*, %class.CookieTreeAppCachesNode** %2, align 8
  %4 = icmp eq %class.CookieTreeAppCachesNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeAppCachesNode*
  tail call void @_ZN23CookieTreeAppCachesNodeC2Ev(%class.CookieTreeAppCachesNode* nonnull %7)
  %8 = bitcast %class.CookieTreeAppCachesNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeAppCachesNode*, %class.CookieTreeAppCachesNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeAppCachesNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeAppCachesNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CookieTreeAppCachesNodeC2Ev(%class.CookieTreeAppCachesNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8397) #17
  %4 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !79
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !79
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !82, !noalias !79
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !82, !noalias !79
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !79
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !79
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !82, !noalias !79
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !82, !noalias !79
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !79
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !79
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !82, !noalias !79
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !82, !noalias !79
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !79
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !79
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !82, !noalias !79
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !82, !noalias !79
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !84

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !79
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !79
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !82, !noalias !79
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !82, !noalias !79
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !85

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !86

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !87

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV23CookieTreeAppCachesNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeIndexedDBsNode* @_ZN18CookieTreeHostNode25GetOrCreateIndexedDBsNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 6
  %3 = load %class.CookieTreeIndexedDBsNode*, %class.CookieTreeIndexedDBsNode** %2, align 8
  %4 = icmp eq %class.CookieTreeIndexedDBsNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeIndexedDBsNode*
  tail call void @_ZN24CookieTreeIndexedDBsNodeC2Ev(%class.CookieTreeIndexedDBsNode* nonnull %7)
  %8 = bitcast %class.CookieTreeIndexedDBsNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeIndexedDBsNode*, %class.CookieTreeIndexedDBsNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeIndexedDBsNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeIndexedDBsNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24CookieTreeIndexedDBsNodeC2Ev(%class.CookieTreeIndexedDBsNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8402) #17
  %4 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !88
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !88
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !91, !noalias !88
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !91, !noalias !88
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !88
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !88
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !91, !noalias !88
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !91, !noalias !88
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !88
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !88
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !91, !noalias !88
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !91, !noalias !88
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !88
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !88
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !91, !noalias !88
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !91, !noalias !88
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !93

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !88
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !88
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !91, !noalias !88
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !91, !noalias !88
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !94

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !95

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !96

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeIndexedDBsNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeFileSystemsNode* @_ZN18CookieTreeHostNode26GetOrCreateFileSystemsNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 7
  %3 = load %class.CookieTreeFileSystemsNode*, %class.CookieTreeFileSystemsNode** %2, align 8
  %4 = icmp eq %class.CookieTreeFileSystemsNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeFileSystemsNode*
  tail call void @_ZN25CookieTreeFileSystemsNodeC2Ev(%class.CookieTreeFileSystemsNode* nonnull %7)
  %8 = bitcast %class.CookieTreeFileSystemsNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeFileSystemsNode*, %class.CookieTreeFileSystemsNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeFileSystemsNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeFileSystemsNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25CookieTreeFileSystemsNodeC2Ev(%class.CookieTreeFileSystemsNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8406) #17
  %4 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !97
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !97
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !100, !noalias !97
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !100, !noalias !97
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !97
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !97
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !100, !noalias !97
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !100, !noalias !97
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !97
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !97
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !100, !noalias !97
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !100, !noalias !97
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !97
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !97
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !100, !noalias !97
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !100, !noalias !97
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !102

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !97
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !97
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !100, !noalias !97
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !100, !noalias !97
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !103

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !104

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !105

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV25CookieTreeFileSystemsNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeQuotaNode* @_ZN18CookieTreeHostNode23UpdateOrCreateQuotaNodeENSt3__115__list_iteratorIN23BrowsingDataQuotaHelper9QuotaInfoEPvEE(%class.CookieTreeHostNode*, %"struct.std::__1::__list_node_base.289"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 8
  %4 = load %class.CookieTreeQuotaNode*, %class.CookieTreeQuotaNode** %3, align 8
  %5 = icmp eq %class.CookieTreeQuotaNode* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = tail call i8* @_Znwm(i64 72) #18
  %8 = bitcast i8* %7 to %class.CookieTreeQuotaNode*
  tail call void @_ZN19CookieTreeQuotaNodeC2ENSt3__115__list_iteratorIN23BrowsingDataQuotaHelper9QuotaInfoEPvEE(%class.CookieTreeQuotaNode* nonnull %8, %"struct.std::__1::__list_node_base.289"* %1)
  %9 = bitcast %class.CookieTreeQuotaNode** %3 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %11 = bitcast i8* %7 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %10, %class.CookieTreeNode* nonnull %11)
  %12 = load %class.CookieTreeQuotaNode*, %class.CookieTreeQuotaNode** %3, align 8
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi %class.CookieTreeQuotaNode* [ %12, %6 ], [ %4, %2 ]
  ret %class.CookieTreeQuotaNode* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19CookieTreeQuotaNodeC2ENSt3__115__list_iteratorIN23BrowsingDataQuotaHelper9QuotaInfoEPvEE(%class.CookieTreeQuotaNode*, %"struct.std::__1::__list_node_base.289"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = ptrtoint %"struct.std::__1::__list_node_base.289"* %1 to i64
  %5 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"struct.std::__1::__list_node_base.289", %"struct.std::__1::__list_node_base.289"* %1, i64 1
  %7 = bitcast %"struct.std::__1::__list_node_base.289"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"struct.std::__1::__list_node_base.289"* %6 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"struct.std::__1::__list_node_base.289"* %6 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base.289", %"struct.std::__1::__list_node_base.289"* %1, i64 1, i32 1
  %16 = bitcast %"struct.std::__1::__list_node_base.289"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %9 to i64
  %19 = select i1 %10, i64 %17, i64 %18
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %14, i64 %19) #17
  %20 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %2
  %27 = bitcast %"class.std::__1::basic_string.13"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %5, i64 24, i1 false) #17
  %28 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 2
  %29 = bitcast %class.CookieTreeNode** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  br label %213

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, 11
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %21 to i16*
  %38 = trunc i64 %34 to i8
  %39 = bitcast %"class.std::__1::basic_string.13"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  br label %58

41:                                               ; preds = %30
  %42 = icmp ugt i64 %34, 9223372036854775791
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::basic_string.13"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %44) #19
  unreachable

45:                                               ; preds = %41
  %46 = add nuw nsw i64 %34, 8
  %47 = and i64 %46, -8
  %48 = icmp slt i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  call void @abort() #19
  unreachable

50:                                               ; preds = %45
  %51 = shl i64 %47, 1
  %52 = call i8* @_Znwm(i64 %51) #18
  %53 = bitcast i8* %52 to i16*
  %54 = bitcast %"class.std::__1::basic_string.13"* %21 to i8**
  store i8* %52, i8** %54, align 8
  %55 = or i64 %47, -9223372036854775808
  %56 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %57, align 8
  br label %58

58:                                               ; preds = %50, %36
  %59 = phi i16* [ %37, %36 ], [ %53, %50 ]
  %60 = add nuw nsw i64 %34, 1
  %61 = add i64 %34, 1
  %62 = icmp ult i64 %61, 16
  br i1 %62, label %152, label %63

63:                                               ; preds = %58
  %64 = add i64 %34, 1
  %65 = getelementptr i16, i16* %59, i64 %64
  %66 = getelementptr i16, i16* %32, i64 %64
  %67 = icmp ult i16* %59, %66
  %68 = icmp ult i16* %32, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %63
  %71 = and i64 %61, -16
  %72 = sub i64 %60, %71
  %73 = getelementptr i16, i16* %32, i64 %71
  %74 = getelementptr i16, i16* %59, i64 %71
  %75 = add i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %32, i64 %83
  %86 = getelementptr i16, i16* %59, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !106
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !106
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !109, !noalias !106
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !109, !noalias !106
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %32, i64 %95
  %97 = getelementptr i16, i16* %59, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !106
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !106
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !109, !noalias !106
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !109, !noalias !106
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %32, i64 %106
  %108 = getelementptr i16, i16* %59, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !106
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !106
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !109, !noalias !106
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !109, !noalias !106
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %32, i64 %117
  %119 = getelementptr i16, i16* %59, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !106
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !106
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !109, !noalias !106
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !109, !noalias !106
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !111

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %32, i64 %135
  %138 = getelementptr i16, i16* %59, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !106
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !106
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !109, !noalias !106
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !109, !noalias !106
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !112

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %61, %71
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %63, %58
  %153 = phi i64 [ %60, %63 ], [ %60, %58 ], [ %72, %150 ]
  %154 = phi i16* [ %32, %63 ], [ %32, %58 ], [ %73, %150 ]
  %155 = phi i16* [ %59, %63 ], [ %59, %58 ], [ %74, %150 ]
  %156 = add i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !113

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !114

205:                                              ; preds = %170, %175, %150
  %206 = load i8, i8* %23, align 1
  %207 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 2
  %208 = bitcast %class.CookieTreeNode** %207 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %209 = icmp slt i8 %206, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %205
  %211 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #18
  br label %213

213:                                              ; preds = %26, %205, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV19CookieTreeQuotaNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %214 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 1
  %215 = bitcast %"class.std::__1::__list_iterator"* %214 to i64*
  store i64 %4, i64* %215, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeServiceWorkersNode* @_ZN18CookieTreeHostNode29GetOrCreateServiceWorkersNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 9
  %3 = load %class.CookieTreeServiceWorkersNode*, %class.CookieTreeServiceWorkersNode** %2, align 8
  %4 = icmp eq %class.CookieTreeServiceWorkersNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeServiceWorkersNode*
  tail call void @_ZN28CookieTreeServiceWorkersNodeC2Ev(%class.CookieTreeServiceWorkersNode* nonnull %7)
  %8 = bitcast %class.CookieTreeServiceWorkersNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeServiceWorkersNode*, %class.CookieTreeServiceWorkersNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeServiceWorkersNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeServiceWorkersNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28CookieTreeServiceWorkersNodeC2Ev(%class.CookieTreeServiceWorkersNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8409) #17
  %4 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !115
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !115
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !118, !noalias !115
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !118, !noalias !115
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !115
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !115
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !118, !noalias !115
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !118, !noalias !115
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !115
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !115
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !118, !noalias !115
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !118, !noalias !115
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !115
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !115
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !118, !noalias !115
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !118, !noalias !115
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !120

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !115
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !115
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !118, !noalias !115
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !118, !noalias !115
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !121

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !122

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !123

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV28CookieTreeServiceWorkersNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeSharedWorkersNode* @_ZN18CookieTreeHostNode28GetOrCreateSharedWorkersNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 10
  %3 = load %class.CookieTreeSharedWorkersNode*, %class.CookieTreeSharedWorkersNode** %2, align 8
  %4 = icmp eq %class.CookieTreeSharedWorkersNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeSharedWorkersNode*
  tail call void @_ZN27CookieTreeSharedWorkersNodeC2Ev(%class.CookieTreeSharedWorkersNode* nonnull %7)
  %8 = bitcast %class.CookieTreeSharedWorkersNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeSharedWorkersNode*, %class.CookieTreeSharedWorkersNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeSharedWorkersNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeSharedWorkersNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeSharedWorkersNodeC2Ev(%class.CookieTreeSharedWorkersNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8410) #17
  %4 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !124
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !124
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !127, !noalias !124
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !127, !noalias !124
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !124
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !124
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !127, !noalias !124
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !127, !noalias !124
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !124
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !124
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !127, !noalias !124
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !127, !noalias !124
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !124
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !124
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !127, !noalias !124
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !127, !noalias !124
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !129

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !124
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !124
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !127, !noalias !124
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !127, !noalias !124
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !130

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !131

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !132

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV27CookieTreeSharedWorkersNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeCacheStoragesNode* @_ZN18CookieTreeHostNode28GetOrCreateCacheStoragesNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 11
  %3 = load %class.CookieTreeCacheStoragesNode*, %class.CookieTreeCacheStoragesNode** %2, align 8
  %4 = icmp eq %class.CookieTreeCacheStoragesNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeCacheStoragesNode*
  tail call void @_ZN27CookieTreeCacheStoragesNodeC2Ev(%class.CookieTreeCacheStoragesNode* nonnull %7)
  %8 = bitcast %class.CookieTreeCacheStoragesNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeCacheStoragesNode*, %class.CookieTreeCacheStoragesNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeCacheStoragesNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeCacheStoragesNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeCacheStoragesNodeC2Ev(%class.CookieTreeCacheStoragesNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8411) #17
  %4 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !133
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !133
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !136, !noalias !133
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !136, !noalias !133
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !133
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !133
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !136, !noalias !133
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !136, !noalias !133
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !133
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !133
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !136, !noalias !133
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !136, !noalias !133
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !133
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !133
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !136, !noalias !133
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !136, !noalias !133
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !138

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !133
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !133
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !136, !noalias !133
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !136, !noalias !133
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !139

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !140

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !141

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV27CookieTreeCacheStoragesNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CookieTreeMediaLicensesNode* @_ZN18CookieTreeHostNode28GetOrCreateMediaLicensesNodeEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 12
  %3 = load %class.CookieTreeMediaLicensesNode*, %class.CookieTreeMediaLicensesNode** %2, align 8
  %4 = icmp eq %class.CookieTreeMediaLicensesNode* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 64) #18
  %7 = bitcast i8* %6 to %class.CookieTreeMediaLicensesNode*
  tail call void @_ZN27CookieTreeMediaLicensesNodeC2Ev(%class.CookieTreeMediaLicensesNode* nonnull %7)
  %8 = bitcast %class.CookieTreeMediaLicensesNode** %2 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0
  %10 = bitcast i8* %6 to %class.CookieTreeNode*
  tail call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %9, %class.CookieTreeNode* nonnull %10)
  %11 = load %class.CookieTreeMediaLicensesNode*, %class.CookieTreeMediaLicensesNode** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %class.CookieTreeMediaLicensesNode* [ %11, %5 ], [ %3, %1 ]
  ret %class.CookieTreeMediaLicensesNode* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeMediaLicensesNodeC2Ev(%class.CookieTreeMediaLicensesNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.13", align 8
  %3 = bitcast %"class.std::__1::basic_string.13"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* nonnull sret %2, i32 8404) #17
  %4 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.13"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %3, i64 24, i1 false) #17
  %12 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %class.CookieTreeNode** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  br label %197

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.13"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #19
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #19
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #18
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.13"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !142
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !142
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !145, !noalias !142
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !145, !noalias !142
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !142
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !142
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !145, !noalias !142
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !145, !noalias !142
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !142
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !142
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !145, !noalias !142
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !145, !noalias !142
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !142
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !142
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !145, !noalias !142
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !145, !noalias !142
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !147

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !142
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !142
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !145, !noalias !142
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !145, !noalias !142
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !148

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !149

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !150

189:                                              ; preds = %154, %159, %134
  %190 = load i8, i8* %7, align 1
  %191 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = bitcast %class.CookieTreeNode** %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeCollectionNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %193 = icmp slt i8 %190, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %"class.std::__1::basic_string.13"* %2 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #18
  br label %197

197:                                              ; preds = %10, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV27CookieTreeMediaLicensesNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CookieTreeHostNode22CreateContentExceptionEPN16content_settings14CookieSettingsE14ContentSetting(%class.CookieTreeHostNode*, %"class.content_settings::CookieSettings"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 13
  %5 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #17
  %6 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %5) #17
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN16content_settings14CookieSettings18ResetCookieSettingERK4GURL(%"class.content_settings::CookieSettings"* %1, %class.GURL* dereferenceable(120) %4) #17
  tail call void @_ZN16content_settings14CookieSettings16SetCookieSettingERK4GURL14ContentSetting(%"class.content_settings::CookieSettings"* %1, %class.GURL* dereferenceable(120) %4, i32 %2) #17
  br label %8

8:                                                ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18CookieTreeHostNode25CanCreateContentExceptionEv(%class.CookieTreeHostNode*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 13
  %3 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #17
  %4 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %3) #17
  %5 = xor i1 %4, true
  ret i1 %5
}

declare void @_ZN16content_settings14CookieSettings18ResetCookieSettingERK4GURL(%"class.content_settings::CookieSettings"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN16content_settings14CookieSettings16SetCookieSettingERK4GURL14ContentSetting(%"class.content_settings::CookieSettings"*, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK18CookieTreeHostNode13InclusiveSizeEv(%class.CookieTreeHostNode* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %2, align 8
  %4 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %3, %5
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %17, %7 ], [ 0, %1 ]
  %9 = phi %"class.std::__1::unique_ptr.22"* [ %18, %7 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.CookieTreeNode*, %class.CookieTreeNode** %10, align 8
  %12 = bitcast %class.CookieTreeNode* %11 to i64 (%class.CookieTreeNode*)***
  %13 = load i64 (%class.CookieTreeNode*)**, i64 (%class.CookieTreeNode*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%class.CookieTreeNode*)*, i64 (%class.CookieTreeNode*)** %13, i64 4
  %15 = load i64 (%class.CookieTreeNode*)*, i64 (%class.CookieTreeNode*)** %14, align 8
  %16 = tail call i64 %15(%class.CookieTreeNode* %11) #17
  %17 = add nsw i64 %16, %8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 1
  %19 = icmp eq %"class.std::__1::unique_ptr.22"* %18, %5
  br i1 %19, label %20, label %7

20:                                               ; preds = %7, %1
  %21 = phi i64 [ 0, %1 ], [ %17, %7 ]
  ret i64 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel25ScopedBatchUpdateNotifierC2EPS_P14CookieTreeNode(%"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %class.CookiesTreeModel*, %class.CookieTreeNode*) unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %0, i64 0, i32 0
  store %class.CookiesTreeModel* %1, %class.CookiesTreeModel** %4, align 8
  %5 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %0, i64 0, i32 1
  store %class.CookieTreeNode* %2, %class.CookieTreeNode** %5, align 8
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %1, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel15RecordBatchSeenEv(%class.CookiesTreeModel* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel25ScopedBatchUpdateNotifierD2Ev(%"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !11
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %0, i64 0, i32 0
  %6 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %5, align 8
  br i1 %4, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %0, i64 0, i32 1
  %10 = bitcast %class.CookieTreeNode** %9 to %"class.ui::TreeModelNode"**
  %11 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %10, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %8, %"class.ui::TreeModelNode"* %11)
  %12 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %5, align 8
  %13 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %12, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 4
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %12) #17
  br label %17

16:                                               ; preds = %1
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %6)
  br label %17

17:                                               ; preds = %16, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !151
  %13 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !151
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #17
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #17, !alias.scope !151
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8
  %20 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #17
  store i64 0, i64* %8, align 8
  %21 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %54, %50, %44, %31, %17
  %60 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #17
  %61 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #17
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #17, !alias.scope !154
  %67 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 0
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %69

69:                                               ; preds = %309, %59
  %70 = phi %"class.base::ObserverList"* [ %68, %59 ], [ %307, %309 ]
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %9, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %203, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %62, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %63, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %112, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %62, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %110, label %297

110:                                              ; preds = %103
  %111 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %111, label %203, label %112

112:                                              ; preds = %90, %110
  %113 = phi %"class.base::ObserverList"* [ %70, %110 ], [ %88, %90 ]
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::internal::LinkNodeBase"** %115 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = bitcast %"class.base::LinkedList"* %114 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = icmp eq %"class.base::LinkNode"* %117, %119
  br i1 %120, label %121, label %199

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 1
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %123, %125
  br i1 %126, label %135, label %127

127:                                              ; preds = %121, %132
  %128 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %133, %132 ], [ %123, %121 ]
  %129 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 1
  %134 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %133, %125
  br i1 %134, label %199, label %127

135:                                              ; preds = %127, %121
  %136 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %121 ], [ %128, %127 ]
  %137 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %136 to i64
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %125
  br i1 %138, label %199, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 1
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %140, %125
  br i1 %141, label %194, label %142

142:                                              ; preds = %139
  %143 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %125, i64 -2, i32 0
  %144 = ptrtoint i8** %143 to i64
  %145 = sub i64 %144, %137
  %146 = lshr i64 %145, 3
  %147 = add nuw nsw i64 %146, 1
  %148 = and i64 %147, 3
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %168, label %150

150:                                              ; preds = %142, %163
  %151 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %165, %163 ], [ %140, %142 ]
  %152 = phi i64 [ %164, %163 ], [ %137, %142 ]
  %153 = phi i64 [ %166, %163 ], [ %148, %142 ]
  %154 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %150
  %158 = ptrtoint i8* %155 to i64
  %159 = inttoptr i64 %152 to %"class.base::internal::UncheckedObserverAdapter"*
  %160 = inttoptr i64 %152 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %159, i64 1
  %162 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %161 to i64
  br label %163

163:                                              ; preds = %157, %150
  %164 = phi i64 [ %152, %150 ], [ %162, %157 ]
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 1
  %166 = add i64 %153, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %150, !llvm.loop !157

168:                                              ; preds = %163, %142
  %169 = phi i64 [ undef, %142 ], [ %164, %163 ]
  %170 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %142 ], [ %165, %163 ]
  %171 = phi i64 [ %137, %142 ], [ %164, %163 ]
  %172 = icmp ult i64 %145, 24
  br i1 %172, label %190, label %173

173:                                              ; preds = %168, %399
  %174 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %401, %399 ], [ %170, %168 ]
  %175 = phi i64 [ %400, %399 ], [ %171, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %173
  %180 = ptrtoint i8* %177 to i64
  %181 = inttoptr i64 %175 to %"class.base::internal::UncheckedObserverAdapter"*
  %182 = inttoptr i64 %175 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  br label %185

185:                                              ; preds = %179, %173
  %186 = phi i64 [ %175, %173 ], [ %184, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 1, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %377, label %371

190:                                              ; preds = %399, %168
  %191 = phi i64 [ %169, %168 ], [ %400, %399 ]
  %192 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %193 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %194

194:                                              ; preds = %190, %139
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %139 ], [ %193, %190 ]
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %139 ], [ %192, %190 ]
  %197 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %196, %195
  br i1 %197, label %199, label %198

198:                                              ; preds = %194
  store %"class.base::internal::UncheckedObserverAdapter"* %196, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %199

199:                                              ; preds = %132, %198, %194, %135, %112
  %200 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %201 = icmp eq %"class.base::ObserverList"* %200, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %199
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #17
  br label %203

203:                                              ; preds = %87, %110, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #17
  %204 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %205 = icmp eq %"class.base::ObserverList"* %204, null
  br i1 %205, label %296, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 1
  %208 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 1, i32 0, i32 0, i32 1
  %209 = bitcast %"class.base::internal::LinkNodeBase"** %208 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = bitcast %"class.base::LinkedList"* %207 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = icmp eq %"class.base::LinkNode"* %210, %212
  br i1 %213, label %214, label %292

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 1
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %216, %218
  br i1 %219, label %228, label %220

220:                                              ; preds = %214, %225
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %226, %225 ], [ %216, %214 ]
  %222 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = icmp eq i8* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %218
  br i1 %227, label %292, label %220

228:                                              ; preds = %220, %214
  %229 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %214 ], [ %221, %220 ]
  %230 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %229 to i64
  %231 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %218
  br i1 %231, label %292, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 1
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %218
  br i1 %234, label %287, label %235

235:                                              ; preds = %232
  %236 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %218, i64 -2, i32 0
  %237 = ptrtoint i8** %236 to i64
  %238 = sub i64 %237, %230
  %239 = lshr i64 %238, 3
  %240 = add nuw nsw i64 %239, 1
  %241 = and i64 %240, 3
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %261, label %243

243:                                              ; preds = %235, %256
  %244 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %258, %256 ], [ %233, %235 ]
  %245 = phi i64 [ %257, %256 ], [ %230, %235 ]
  %246 = phi i64 [ %259, %256 ], [ %241, %235 ]
  %247 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = icmp eq i8* %248, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %243
  %251 = ptrtoint i8* %248 to i64
  %252 = inttoptr i64 %245 to %"class.base::internal::UncheckedObserverAdapter"*
  %253 = inttoptr i64 %245 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %252, i64 1
  %255 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %254 to i64
  br label %256

256:                                              ; preds = %250, %243
  %257 = phi i64 [ %245, %243 ], [ %255, %250 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 1
  %259 = add i64 %246, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %243, !llvm.loop !158

261:                                              ; preds = %256, %235
  %262 = phi i64 [ undef, %235 ], [ %257, %256 ]
  %263 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %235 ], [ %258, %256 ]
  %264 = phi i64 [ %230, %235 ], [ %257, %256 ]
  %265 = icmp ult i64 %238, 24
  br i1 %265, label %283, label %266

266:                                              ; preds = %261, %367
  %267 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %369, %367 ], [ %263, %261 ]
  %268 = phi i64 [ %368, %367 ], [ %264, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %266
  %273 = ptrtoint i8* %270 to i64
  %274 = inttoptr i64 %268 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = inttoptr i64 %268 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  br label %278

278:                                              ; preds = %272, %266
  %279 = phi i64 [ %268, %266 ], [ %277, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 1, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %345, label %339

283:                                              ; preds = %367, %261
  %284 = phi i64 [ %262, %261 ], [ %368, %367 ]
  %285 = inttoptr i64 %284 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %287

287:                                              ; preds = %283, %232
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %232 ], [ %286, %283 ]
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %232 ], [ %285, %283 ]
  %290 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %289, %288
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  store %"class.base::internal::UncheckedObserverAdapter"* %289, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %292

292:                                              ; preds = %225, %291, %287, %228, %206
  %293 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %294 = icmp eq %"class.base::ObserverList"* %293, null
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #17
  br label %296

296:                                              ; preds = %203, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #17
  ret void

297:                                              ; preds = %103
  %298 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %299 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %298, align 8
  %300 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 %106
  %301 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %300 to %"class.ui::TreeModelObserver"**
  %302 = load %"class.ui::TreeModelObserver"*, %"class.ui::TreeModelObserver"** %301, align 8
  %303 = bitcast %"class.ui::TreeModelObserver"* %302 to void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*)***
  %304 = load void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*)**, void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*)*, void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*)** %304, i64 2
  %306 = load void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*)*, void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*)** %305, align 8
  call void %306(%"class.ui::TreeModelObserver"* %302, %"class.ui::TreeModel"* %67, %"class.ui::TreeModelNode"* %1) #17
  %307 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %308 = icmp eq %"class.base::ObserverList"* %307, null
  br i1 %308, label %309, label %310

309:                                              ; preds = %334, %330, %297, %310, %324
  br label %69

310:                                              ; preds = %297
  %311 = load i64, i64* %8, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %8, align 8
  %313 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %307, i64 0, i32 0, i32 0, i32 1
  %314 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.base::ObserverList"* %307 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = sub i64 %315, %317
  %319 = ashr exact i64 %318, 3
  %320 = load i64, i64* %9, align 8
  %321 = icmp ult i64 %319, %320
  %322 = select i1 %321, i64 %319, i64 %320
  %323 = icmp ult i64 %312, %322
  br i1 %323, label %324, label %309

324:                                              ; preds = %310
  %325 = inttoptr i64 %317 to %"class.base::internal::UncheckedObserverAdapter"*
  %326 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %307, i64 0, i32 0, i32 0, i32 0
  %327 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %325, i64 %312, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = icmp eq i8* %328, null
  br i1 %329, label %330, label %309

330:                                              ; preds = %324, %334
  %331 = phi i64 [ %332, %334 ], [ %312, %324 ]
  %332 = add nuw i64 %331, 1
  store i64 %332, i64* %8, align 8
  %333 = icmp ult i64 %332, %322
  br i1 %333, label %334, label %309

334:                                              ; preds = %330
  %335 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %326, align 8
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %335, i64 %332, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = icmp eq i8* %337, null
  br i1 %338, label %330, label %309

339:                                              ; preds = %278
  %340 = ptrtoint i8* %281 to i64
  %341 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %342 = inttoptr i64 %279 to i64*
  store i64 %340, i64* %342, align 8
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 1
  %344 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %343 to i64
  br label %345

345:                                              ; preds = %339, %278
  %346 = phi i64 [ %279, %278 ], [ %344, %339 ]
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 2, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %356, label %350

350:                                              ; preds = %345
  %351 = ptrtoint i8* %348 to i64
  %352 = inttoptr i64 %346 to %"class.base::internal::UncheckedObserverAdapter"*
  %353 = inttoptr i64 %346 to i64*
  store i64 %351, i64* %353, align 8
  %354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %352, i64 1
  %355 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %354 to i64
  br label %356

356:                                              ; preds = %350, %345
  %357 = phi i64 [ %346, %345 ], [ %355, %350 ]
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 3, i32 0
  %359 = load i8*, i8** %358, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %367, label %361

361:                                              ; preds = %356
  %362 = ptrtoint i8* %359 to i64
  %363 = inttoptr i64 %357 to %"class.base::internal::UncheckedObserverAdapter"*
  %364 = inttoptr i64 %357 to i64*
  store i64 %362, i64* %364, align 8
  %365 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %363, i64 1
  %366 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %365 to i64
  br label %367

367:                                              ; preds = %361, %356
  %368 = phi i64 [ %357, %356 ], [ %366, %361 ]
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 4
  %370 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %369, %218
  br i1 %370, label %283, label %266

371:                                              ; preds = %185
  %372 = ptrtoint i8* %188 to i64
  %373 = inttoptr i64 %186 to %"class.base::internal::UncheckedObserverAdapter"*
  %374 = inttoptr i64 %186 to i64*
  store i64 %372, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %373, i64 1
  %376 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %375 to i64
  br label %377

377:                                              ; preds = %371, %185
  %378 = phi i64 [ %186, %185 ], [ %376, %371 ]
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 2, i32 0
  %380 = load i8*, i8** %379, align 8
  %381 = icmp eq i8* %380, null
  br i1 %381, label %388, label %382

382:                                              ; preds = %377
  %383 = ptrtoint i8* %380 to i64
  %384 = inttoptr i64 %378 to %"class.base::internal::UncheckedObserverAdapter"*
  %385 = inttoptr i64 %378 to i64*
  store i64 %383, i64* %385, align 8
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %384, i64 1
  %387 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %386 to i64
  br label %388

388:                                              ; preds = %382, %377
  %389 = phi i64 [ %378, %377 ], [ %387, %382 ]
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 3, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = icmp eq i8* %391, null
  br i1 %392, label %399, label %393

393:                                              ; preds = %388
  %394 = ptrtoint i8* %391 to i64
  %395 = inttoptr i64 %389 to %"class.base::internal::UncheckedObserverAdapter"*
  %396 = inttoptr i64 %389 to i64*
  store i64 %394, i64* %396, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %395, i64 1
  %398 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %397 to i64
  br label %399

399:                                              ; preds = %393, %388
  %400 = phi i64 [ %389, %388 ], [ %398, %393 ]
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 4
  %402 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %401, %125
  br i1 %402, label %190, label %173
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel22NotifyObserverEndBatchEv(%class.CookiesTreeModel*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %350

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %350

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3
  %17 = bitcast %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %20 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %21 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %16, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 40, i1 false)
  %23 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8, !noalias !159
  %24 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %25 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %24, align 8, !noalias !159
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %23, %25
  %27 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %27) #17
  br i1 %26, label %28, label %30

28:                                               ; preds = %15
  %29 = bitcast %"class.base::ObserverList.312"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #17, !alias.scope !159
  br label %70

30:                                               ; preds = %15
  store %"class.base::ObserverList.312"* %16, %"class.base::ObserverList.312"** %18, align 8
  %31 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %27, %"class.base::internal::LinkNodeBase"* %31) #17
  store i64 0, i64* %19, align 8
  %32 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %24 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::ObserverList.312"* %16 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 3
  br label %42

42:                                               ; preds = %35, %30
  %43 = phi i64 [ %41, %35 ], [ -1, %30 ]
  store i64 %43, i64* %20, align 8
  %44 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %18, align 8
  %45 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %44, i64 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.base::ObserverList.312"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, %43
  %53 = select i1 %52, i64 %51, i64 %43
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %70, label %55

55:                                               ; preds = %42
  %56 = inttoptr i64 %49 to %"class.base::internal::UncheckedObserverAdapter"*
  %57 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %44, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %56, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %70

61:                                               ; preds = %55, %65
  %62 = phi i64 [ %63, %65 ], [ 0, %55 ]
  %63 = add nuw i64 %62, 1
  store i64 %63, i64* %19, align 8
  %64 = icmp ult i64 %63, %53
  br i1 %64, label %65, label %70

65:                                               ; preds = %61
  %66 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %57, align 8
  %67 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %66, i64 %63, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %61, label %70

70:                                               ; preds = %65, %61, %55, %42, %28
  %71 = bitcast %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #17
  %72 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %74 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %75 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %75) #17
  %77 = bitcast %"class.base::ObserverList.312"** %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #17, !alias.scope !162
  %78 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %18, align 8
  br label %79

79:                                               ; preds = %320, %70
  %80 = phi %"class.base::ObserverList.312"* [ %78, %70 ], [ %318, %320 ]
  %81 = icmp eq %"class.base::ObserverList.312"* %80, null
  br i1 %81, label %97, label %82

82:                                               ; preds = %79
  %83 = load i64, i64* %19, align 8
  %84 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %80, i64 0, i32 0, i32 0, i32 1
  %85 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.base::ObserverList.312"* %80 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %86, %88
  %90 = ashr exact i64 %89, 3
  %91 = load i64, i64* %20, align 8
  %92 = icmp ult i64 %90, %91
  %93 = select i1 %92, i64 %90, i64 %91
  %94 = icmp eq i64 %83, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %82
  %96 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %72, align 8
  br label %113

97:                                               ; preds = %82, %79
  %98 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %72, align 8
  %99 = icmp eq %"class.base::ObserverList.312"* %98, null
  br i1 %99, label %213, label %100

100:                                              ; preds = %97
  %101 = load i64, i64* %73, align 8
  %102 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %98, i64 0, i32 0, i32 0, i32 1
  %103 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.base::ObserverList.312"* %98 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %104, %106
  %108 = ashr exact i64 %107, 3
  %109 = load i64, i64* %74, align 8
  %110 = icmp ult i64 %108, %109
  %111 = select i1 %110, i64 %108, i64 %109
  %112 = icmp eq i64 %101, %111
  br i1 %112, label %122, label %113

113:                                              ; preds = %100, %95
  %114 = phi %"class.base::ObserverList.312"* [ %96, %95 ], [ %98, %100 ]
  %115 = icmp eq %"class.base::ObserverList.312"* %80, %114
  %116 = load i64, i64* %19, align 8
  %117 = load i64, i64* %73, align 8
  %118 = icmp eq i64 %116, %117
  %119 = and i1 %115, %118
  br i1 %119, label %120, label %308

120:                                              ; preds = %113
  %121 = icmp eq %"class.base::ObserverList.312"* %80, null
  br i1 %121, label %213, label %122

122:                                              ; preds = %100, %120
  %123 = phi %"class.base::ObserverList.312"* [ %80, %120 ], [ %98, %100 ]
  %124 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %123, i64 0, i32 1
  %125 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %123, i64 0, i32 1, i32 0, i32 0, i32 1
  %126 = bitcast %"class.base::internal::LinkNodeBase"** %125 to %"class.base::LinkNode.314"**
  %127 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %126, align 8
  %128 = bitcast %"class.base::LinkedList.313"* %124 to %"class.base::LinkNode.314"**
  %129 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %128, align 8
  %130 = icmp eq %"class.base::LinkNode.314"* %127, %129
  br i1 %130, label %131, label %209

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %123, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %132, align 8
  %134 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %123, i64 0, i32 0, i32 0, i32 1
  %135 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %134, align 8
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %133, %135
  br i1 %136, label %145, label %137

137:                                              ; preds = %131, %142
  %138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %142 ], [ %133, %131 ]
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = icmp eq i8* %140, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %135
  br i1 %144, label %209, label %137

145:                                              ; preds = %137, %131
  %146 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %133, %131 ], [ %138, %137 ]
  %147 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %146 to i64
  %148 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %146, %135
  br i1 %148, label %209, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %146, i64 1
  %151 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %150, %135
  br i1 %151, label %204, label %152

152:                                              ; preds = %149
  %153 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 -2, i32 0
  %154 = ptrtoint i8** %153 to i64
  %155 = sub i64 %154, %147
  %156 = lshr i64 %155, 3
  %157 = add nuw nsw i64 %156, 1
  %158 = and i64 %157, 3
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %178, label %160

160:                                              ; preds = %152, %173
  %161 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %175, %173 ], [ %150, %152 ]
  %162 = phi i64 [ %174, %173 ], [ %147, %152 ]
  %163 = phi i64 [ %176, %173 ], [ %158, %152 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = icmp eq i8* %165, null
  br i1 %166, label %173, label %167

167:                                              ; preds = %160
  %168 = ptrtoint i8* %165 to i64
  %169 = inttoptr i64 %162 to %"class.base::internal::UncheckedObserverAdapter"*
  %170 = inttoptr i64 %162 to i64*
  store i64 %168, i64* %170, align 8
  %171 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %169, i64 1
  %172 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %171 to i64
  br label %173

173:                                              ; preds = %167, %160
  %174 = phi i64 [ %162, %160 ], [ %172, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %176 = add i64 %163, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %160, !llvm.loop !165

178:                                              ; preds = %173, %152
  %179 = phi i64 [ undef, %152 ], [ %174, %173 ]
  %180 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %150, %152 ], [ %175, %173 ]
  %181 = phi i64 [ %147, %152 ], [ %174, %173 ]
  %182 = icmp ult i64 %155, 24
  br i1 %182, label %200, label %183

183:                                              ; preds = %178, %411
  %184 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %413, %411 ], [ %180, %178 ]
  %185 = phi i64 [ %412, %411 ], [ %181, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %183
  %190 = ptrtoint i8* %187 to i64
  %191 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = inttoptr i64 %185 to i64*
  store i64 %190, i64* %192, align 8
  %193 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 1
  %194 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %193 to i64
  br label %195

195:                                              ; preds = %189, %183
  %196 = phi i64 [ %185, %183 ], [ %194, %189 ]
  %197 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = icmp eq i8* %198, null
  br i1 %199, label %389, label %383

200:                                              ; preds = %411, %178
  %201 = phi i64 [ %179, %178 ], [ %412, %411 ]
  %202 = inttoptr i64 %201 to %"class.base::internal::UncheckedObserverAdapter"*
  %203 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %134, align 8
  br label %204

204:                                              ; preds = %200, %149
  %205 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %149 ], [ %203, %200 ]
  %206 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %146, %149 ], [ %202, %200 ]
  %207 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %206, %205
  br i1 %207, label %209, label %208

208:                                              ; preds = %204
  store %"class.base::internal::UncheckedObserverAdapter"* %206, %"class.base::internal::UncheckedObserverAdapter"** %134, align 8
  br label %209

209:                                              ; preds = %142, %208, %204, %145, %122
  %210 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %72, align 8
  %211 = icmp eq %"class.base::ObserverList.312"* %210, null
  br i1 %211, label %213, label %212

212:                                              ; preds = %209
  store %"class.base::ObserverList.312"* null, %"class.base::ObserverList.312"** %72, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %75) #17
  br label %213

213:                                              ; preds = %97, %120, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #17
  %214 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %18, align 8
  %215 = icmp eq %"class.base::ObserverList.312"* %214, null
  br i1 %215, label %306, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %214, i64 0, i32 1
  %218 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %214, i64 0, i32 1, i32 0, i32 0, i32 1
  %219 = bitcast %"class.base::internal::LinkNodeBase"** %218 to %"class.base::LinkNode.314"**
  %220 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %219, align 8
  %221 = bitcast %"class.base::LinkedList.313"* %217 to %"class.base::LinkNode.314"**
  %222 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %221, align 8
  %223 = icmp eq %"class.base::LinkNode.314"* %220, %222
  br i1 %223, label %224, label %302

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %214, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %225, align 8
  %227 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %214, i64 0, i32 0, i32 0, i32 1
  %228 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %227, align 8
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %228
  br i1 %229, label %238, label %230

230:                                              ; preds = %224, %235
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %235 ], [ %226, %224 ]
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 0, i32 0
  %233 = load i8*, i8** %232, align 8
  %234 = icmp eq i8* %233, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %228
  br i1 %237, label %302, label %230

238:                                              ; preds = %230, %224
  %239 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %226, %224 ], [ %231, %230 ]
  %240 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %239 to i64
  %241 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %239, %228
  br i1 %241, label %302, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %239, i64 1
  %244 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %243, %228
  br i1 %244, label %297, label %245

245:                                              ; preds = %242
  %246 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 -2, i32 0
  %247 = ptrtoint i8** %246 to i64
  %248 = sub i64 %247, %240
  %249 = lshr i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %271, label %253

253:                                              ; preds = %245, %266
  %254 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %268, %266 ], [ %243, %245 ]
  %255 = phi i64 [ %267, %266 ], [ %240, %245 ]
  %256 = phi i64 [ %269, %266 ], [ %251, %245 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 0, i32 0
  %258 = load i8*, i8** %257, align 8
  %259 = icmp eq i8* %258, null
  br i1 %259, label %266, label %260

260:                                              ; preds = %253
  %261 = ptrtoint i8* %258 to i64
  %262 = inttoptr i64 %255 to %"class.base::internal::UncheckedObserverAdapter"*
  %263 = inttoptr i64 %255 to i64*
  store i64 %261, i64* %263, align 8
  %264 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %262, i64 1
  %265 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %264 to i64
  br label %266

266:                                              ; preds = %260, %253
  %267 = phi i64 [ %255, %253 ], [ %265, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 1
  %269 = add i64 %256, -1
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %253, !llvm.loop !166

271:                                              ; preds = %266, %245
  %272 = phi i64 [ undef, %245 ], [ %267, %266 ]
  %273 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %243, %245 ], [ %268, %266 ]
  %274 = phi i64 [ %240, %245 ], [ %267, %266 ]
  %275 = icmp ult i64 %248, 24
  br i1 %275, label %293, label %276

276:                                              ; preds = %271, %379
  %277 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %381, %379 ], [ %273, %271 ]
  %278 = phi i64 [ %380, %379 ], [ %274, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 0, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %288, label %282

282:                                              ; preds = %276
  %283 = ptrtoint i8* %280 to i64
  %284 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = inttoptr i64 %278 to i64*
  store i64 %283, i64* %285, align 8
  %286 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 1
  %287 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %286 to i64
  br label %288

288:                                              ; preds = %282, %276
  %289 = phi i64 [ %278, %276 ], [ %287, %282 ]
  %290 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1, i32 0
  %291 = load i8*, i8** %290, align 8
  %292 = icmp eq i8* %291, null
  br i1 %292, label %357, label %351

293:                                              ; preds = %379, %271
  %294 = phi i64 [ %272, %271 ], [ %380, %379 ]
  %295 = inttoptr i64 %294 to %"class.base::internal::UncheckedObserverAdapter"*
  %296 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %227, align 8
  br label %297

297:                                              ; preds = %293, %242
  %298 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %242 ], [ %296, %293 ]
  %299 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %239, %242 ], [ %295, %293 ]
  %300 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %299, %298
  br i1 %300, label %302, label %301

301:                                              ; preds = %297
  store %"class.base::internal::UncheckedObserverAdapter"* %299, %"class.base::internal::UncheckedObserverAdapter"** %227, align 8
  br label %302

302:                                              ; preds = %235, %301, %297, %238, %216
  %303 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %18, align 8
  %304 = icmp eq %"class.base::ObserverList.312"* %303, null
  br i1 %304, label %306, label %305

305:                                              ; preds = %302
  store %"class.base::ObserverList.312"* null, %"class.base::ObserverList.312"** %18, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %27) #17
  br label %306

306:                                              ; preds = %213, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #17
  %307 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %307, i8 0, i64 16, i1 false)
  br label %350

308:                                              ; preds = %113
  %309 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %80, i64 0, i32 0, i32 0, i32 0
  %310 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %309, align 8
  %311 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %310, i64 %116
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %311 to %"class.CookiesTreeModel::Observer"**
  %313 = load %"class.CookiesTreeModel::Observer"*, %"class.CookiesTreeModel::Observer"** %312, align 8
  %314 = bitcast %"class.CookiesTreeModel::Observer"* %313 to void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)***
  %315 = load void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)**, void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)*** %314, align 8
  %316 = getelementptr inbounds void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)*, void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)** %315, i64 6
  %317 = load void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)*, void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)** %316, align 8
  call void %317(%"class.CookiesTreeModel::Observer"* %313, %class.CookiesTreeModel* %0) #17
  %318 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %18, align 8
  %319 = icmp eq %"class.base::ObserverList.312"* %318, null
  br i1 %319, label %320, label %321

320:                                              ; preds = %345, %341, %308, %321, %335
  br label %79

321:                                              ; preds = %308
  %322 = load i64, i64* %19, align 8
  %323 = add i64 %322, 1
  store i64 %323, i64* %19, align 8
  %324 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %318, i64 0, i32 0, i32 0, i32 1
  %325 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = bitcast %"class.base::ObserverList.312"* %318 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = sub i64 %326, %328
  %330 = ashr exact i64 %329, 3
  %331 = load i64, i64* %20, align 8
  %332 = icmp ult i64 %330, %331
  %333 = select i1 %332, i64 %330, i64 %331
  %334 = icmp ult i64 %323, %333
  br i1 %334, label %335, label %320

335:                                              ; preds = %321
  %336 = inttoptr i64 %328 to %"class.base::internal::UncheckedObserverAdapter"*
  %337 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %318, i64 0, i32 0, i32 0, i32 0
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 %323, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %341, label %320

341:                                              ; preds = %335, %345
  %342 = phi i64 [ %343, %345 ], [ %323, %335 ]
  %343 = add nuw i64 %342, 1
  store i64 %343, i64* %19, align 8
  %344 = icmp ult i64 %343, %333
  br i1 %344, label %345, label %320

345:                                              ; preds = %341
  %346 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %337, align 8
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 %343, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %341, label %320

350:                                              ; preds = %306, %9, %1
  ret void

351:                                              ; preds = %288
  %352 = ptrtoint i8* %291 to i64
  %353 = inttoptr i64 %289 to %"class.base::internal::UncheckedObserverAdapter"*
  %354 = inttoptr i64 %289 to i64*
  store i64 %352, i64* %354, align 8
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %353, i64 1
  %356 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %355 to i64
  br label %357

357:                                              ; preds = %351, %288
  %358 = phi i64 [ %289, %288 ], [ %356, %351 ]
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 2, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = icmp eq i8* %360, null
  br i1 %361, label %368, label %362

362:                                              ; preds = %357
  %363 = ptrtoint i8* %360 to i64
  %364 = inttoptr i64 %358 to %"class.base::internal::UncheckedObserverAdapter"*
  %365 = inttoptr i64 %358 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %367 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %366 to i64
  br label %368

368:                                              ; preds = %362, %357
  %369 = phi i64 [ %358, %357 ], [ %367, %362 ]
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 3, i32 0
  %371 = load i8*, i8** %370, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %379, label %373

373:                                              ; preds = %368
  %374 = ptrtoint i8* %371 to i64
  %375 = inttoptr i64 %369 to %"class.base::internal::UncheckedObserverAdapter"*
  %376 = inttoptr i64 %369 to i64*
  store i64 %374, i64* %376, align 8
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %375, i64 1
  %378 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %377 to i64
  br label %379

379:                                              ; preds = %373, %368
  %380 = phi i64 [ %369, %368 ], [ %378, %373 ]
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 4
  %382 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %381, %228
  br i1 %382, label %293, label %276

383:                                              ; preds = %195
  %384 = ptrtoint i8* %198 to i64
  %385 = inttoptr i64 %196 to %"class.base::internal::UncheckedObserverAdapter"*
  %386 = inttoptr i64 %196 to i64*
  store i64 %384, i64* %386, align 8
  %387 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %385, i64 1
  %388 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %387 to i64
  br label %389

389:                                              ; preds = %383, %195
  %390 = phi i64 [ %196, %195 ], [ %388, %383 ]
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 2, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %389
  %395 = ptrtoint i8* %392 to i64
  %396 = inttoptr i64 %390 to %"class.base::internal::UncheckedObserverAdapter"*
  %397 = inttoptr i64 %390 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %399 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %398 to i64
  br label %400

400:                                              ; preds = %394, %389
  %401 = phi i64 [ %390, %389 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 3, i32 0
  %403 = load i8*, i8** %402, align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %411, label %405

405:                                              ; preds = %400
  %406 = ptrtoint i8* %403 to i64
  %407 = inttoptr i64 %401 to %"class.base::internal::UncheckedObserverAdapter"*
  %408 = inttoptr i64 %401 to i64*
  store i64 %406, i64* %408, align 8
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %407, i64 1
  %410 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %409 to i64
  br label %411

411:                                              ; preds = %405, %400
  %412 = phi i64 [ %401, %400 ], [ %410, %405 ]
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 4
  %414 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %413, %135
  br i1 %414, label %200, label %183
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel25ScopedBatchUpdateNotifier16StartBatchUpdateEv(%"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %0, i64 0, i32 0
  %7 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %7)
  store i8 1, i8* %2, align 8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %8, label %342

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3
  %10 = bitcast %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !167
  %17 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8, !noalias !167
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %18
  %20 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %20) #17
  br i1 %19, label %21, label %23

21:                                               ; preds = %8
  %22 = bitcast %"class.base::ObserverList.312"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #17, !alias.scope !167
  br label %63

23:                                               ; preds = %8
  store %"class.base::ObserverList.312"* %9, %"class.base::ObserverList.312"** %11, align 8
  %24 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %20, %"class.base::internal::LinkNodeBase"* %24) #17
  store i64 0, i64* %12, align 8
  %25 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %17 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::ObserverList.312"* %9 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  br label %35

35:                                               ; preds = %28, %23
  %36 = phi i64 [ %34, %28 ], [ -1, %23 ]
  store i64 %36, i64* %13, align 8
  %37 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %11, align 8
  %38 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %37, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::ObserverList.312"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, %36
  %46 = select i1 %45, i64 %44, i64 %36
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = inttoptr i64 %42 to %"class.base::internal::UncheckedObserverAdapter"*
  %50 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %37, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %48, %58
  %55 = phi i64 [ %56, %58 ], [ 0, %48 ]
  %56 = add nuw i64 %55, 1
  store i64 %56, i64* %12, align 8
  %57 = icmp ult i64 %56, %46
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %59, i64 %56, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %54, label %63

63:                                               ; preds = %58, %54, %48, %35, %21
  %64 = bitcast %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #17
  %65 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %67 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %68 = getelementptr inbounds %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.base::ObserverList<CookiesTreeModel::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %68) #17
  %70 = bitcast %"class.base::ObserverList.312"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #17, !alias.scope !170
  %71 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %11, align 8
  br label %72

72:                                               ; preds = %312, %63
  %73 = phi %"class.base::ObserverList.312"* [ %71, %63 ], [ %310, %312 ]
  %74 = icmp eq %"class.base::ObserverList.312"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %12, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList.312"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %13, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %65, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %65, align 8
  %92 = icmp eq %"class.base::ObserverList.312"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %66, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList.312"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %67, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList.312"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList.312"* %73, %107
  %109 = load i64, i64* %12, align 8
  %110 = load i64, i64* %66, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %300

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList.312"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList.312"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode.314"**
  %120 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %119, align 8
  %121 = bitcast %"class.base::LinkedList.313"* %117 to %"class.base::LinkNode.314"**
  %122 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode.314"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !173

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %403
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %405, %403 ], [ %173, %171 ]
  %178 = phi i64 [ %404, %403 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %381, label %375

193:                                              ; preds = %403, %171
  %194 = phi i64 [ %172, %171 ], [ %404, %403 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %65, align 8
  %204 = icmp eq %"class.base::ObserverList.312"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList.312"* null, %"class.base::ObserverList.312"** %65, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %68) #17
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #17
  %207 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %11, align 8
  %208 = icmp eq %"class.base::ObserverList.312"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode.314"**
  %213 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %212, align 8
  %214 = bitcast %"class.base::LinkedList.313"* %210 to %"class.base::LinkNode.314"**
  %215 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode.314"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !174

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %371
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %373, %371 ], [ %266, %264 ]
  %271 = phi i64 [ %372, %371 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %349, label %343

286:                                              ; preds = %371, %264
  %287 = phi i64 [ %265, %264 ], [ %372, %371 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %11, align 8
  %297 = icmp eq %"class.base::ObserverList.312"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList.312"* null, %"class.base::ObserverList.312"** %11, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %20) #17
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #17
  br label %342

300:                                              ; preds = %106
  %301 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %73, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  %303 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %302, i64 %109
  %304 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %303 to %"class.CookiesTreeModel::Observer"**
  %305 = load %"class.CookiesTreeModel::Observer"*, %"class.CookiesTreeModel::Observer"** %304, align 8
  %306 = bitcast %"class.CookiesTreeModel::Observer"* %305 to void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)***
  %307 = load void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)**, void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)*, void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)** %307, i64 5
  %309 = load void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)*, void (%"class.CookiesTreeModel::Observer"*, %class.CookiesTreeModel*)** %308, align 8
  call void %309(%"class.CookiesTreeModel::Observer"* %305, %class.CookiesTreeModel* %0) #17
  %310 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %11, align 8
  %311 = icmp eq %"class.base::ObserverList.312"* %310, null
  br i1 %311, label %312, label %313

312:                                              ; preds = %337, %333, %300, %313, %327
  br label %72

313:                                              ; preds = %300
  %314 = load i64, i64* %12, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %12, align 8
  %316 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %310, i64 0, i32 0, i32 0, i32 1
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.base::ObserverList.312"* %310 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %318, %320
  %322 = ashr exact i64 %321, 3
  %323 = load i64, i64* %13, align 8
  %324 = icmp ult i64 %322, %323
  %325 = select i1 %324, i64 %322, i64 %323
  %326 = icmp ult i64 %315, %325
  br i1 %326, label %327, label %312

327:                                              ; preds = %313
  %328 = inttoptr i64 %320 to %"class.base::internal::UncheckedObserverAdapter"*
  %329 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %310, i64 0, i32 0, i32 0, i32 0
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %328, i64 %315, i32 0
  %331 = load i8*, i8** %330, align 8
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %312

333:                                              ; preds = %327, %337
  %334 = phi i64 [ %335, %337 ], [ %315, %327 ]
  %335 = add nuw i64 %334, 1
  store i64 %335, i64* %12, align 8
  %336 = icmp ult i64 %335, %325
  br i1 %336, label %337, label %312

337:                                              ; preds = %333
  %338 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %335, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %333, label %312

342:                                              ; preds = %299, %1
  ret void

343:                                              ; preds = %281
  %344 = ptrtoint i8* %284 to i64
  %345 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %346 = inttoptr i64 %282 to i64*
  store i64 %344, i64* %346, align 8
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %345, i64 1
  %348 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %347 to i64
  br label %349

349:                                              ; preds = %343, %281
  %350 = phi i64 [ %282, %281 ], [ %348, %343 ]
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = icmp eq i8* %352, null
  br i1 %353, label %360, label %354

354:                                              ; preds = %349
  %355 = ptrtoint i8* %352 to i64
  %356 = inttoptr i64 %350 to %"class.base::internal::UncheckedObserverAdapter"*
  %357 = inttoptr i64 %350 to i64*
  store i64 %355, i64* %357, align 8
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 1
  %359 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %358 to i64
  br label %360

360:                                              ; preds = %354, %349
  %361 = phi i64 [ %350, %349 ], [ %359, %354 ]
  %362 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %371, label %365

365:                                              ; preds = %360
  %366 = ptrtoint i8* %363 to i64
  %367 = inttoptr i64 %361 to %"class.base::internal::UncheckedObserverAdapter"*
  %368 = inttoptr i64 %361 to i64*
  store i64 %366, i64* %368, align 8
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %367, i64 1
  %370 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %369 to i64
  br label %371

371:                                              ; preds = %365, %360
  %372 = phi i64 [ %361, %360 ], [ %370, %365 ]
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %374 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %373, %221
  br i1 %374, label %286, label %269

375:                                              ; preds = %188
  %376 = ptrtoint i8* %191 to i64
  %377 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %378 = inttoptr i64 %189 to i64*
  store i64 %376, i64* %378, align 8
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %377, i64 1
  %380 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %379 to i64
  br label %381

381:                                              ; preds = %375, %188
  %382 = phi i64 [ %189, %188 ], [ %380, %375 ]
  %383 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %384 = load i8*, i8** %383, align 8
  %385 = icmp eq i8* %384, null
  br i1 %385, label %392, label %386

386:                                              ; preds = %381
  %387 = ptrtoint i8* %384 to i64
  %388 = inttoptr i64 %382 to %"class.base::internal::UncheckedObserverAdapter"*
  %389 = inttoptr i64 %382 to i64*
  store i64 %387, i64* %389, align 8
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %388, i64 1
  %391 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %390 to i64
  br label %392

392:                                              ; preds = %386, %381
  %393 = phi i64 [ %382, %381 ], [ %391, %386 ]
  %394 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %395 = load i8*, i8** %394, align 8
  %396 = icmp eq i8* %395, null
  br i1 %396, label %403, label %397

397:                                              ; preds = %392
  %398 = ptrtoint i8* %395 to i64
  %399 = inttoptr i64 %393 to %"class.base::internal::UncheckedObserverAdapter"*
  %400 = inttoptr i64 %393 to i64*
  store i64 %398, i64* %400, align 8
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %399, i64 1
  %402 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %401 to i64
  br label %403

403:                                              ; preds = %397, %392
  %404 = phi i64 [ %393, %392 ], [ %402, %397 ]
  %405 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %406 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %405, %128
  br i1 %406, label %193, label %176
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModelC2ENSt3__110unique_ptrI18LocalDataContainerNS0_14default_deleteIS2_EEEEP29ExtensionSpecialStoragePolicy(%class.CookiesTreeModel*, %class.LocalDataContainer*, %class.ExtensionSpecialStoragePolicy*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.LocalDataContainer* %1 to i64
  %5 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 0, i32 0
  %6 = ptrtoint %class.CookiesTreeModel* %0 to i64
  %7 = tail call i8* @_Znwm(i64 72) #18
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 56, i1 false) #17
  %9 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV18CookieTreeRootNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 64
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = ptrtoint i8* %7 to i64
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2ui13TreeNodeModelI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %13 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.base::ObserverList"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #17
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %15, %"class.base::internal::LinkNodeBase"* %15, %"class.base::internal::LinkNodeBase"* %15) #17
  %16 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 2
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 3
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 2
  %19 = bitcast %"class.std::__1::unique_ptr.22"* %18 to i64*
  store i64 %12, i64* %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV16CookiesTreeModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %20 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 1, i32 0
  store %class.ExtensionSpecialStoragePolicy* %2, %class.ExtensionSpecialStoragePolicy** %20, align 8
  %21 = icmp eq %class.ExtensionSpecialStoragePolicy* %2, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.ExtensionSpecialStoragePolicy, %class.ExtensionSpecialStoragePolicy* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  br label %25

25:                                               ; preds = %22, %3
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 2
  %27 = bitcast %"class.std::__1::unique_ptr.130"* %26 to i64*
  store i64 %4, i64* %27, align 8
  %28 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3
  %29 = bitcast %"class.base::ObserverList.312"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #17
  %30 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %30, %"class.base::internal::LinkNodeBase"* %30, %"class.base::internal::LinkNodeBase"* %30) #17
  %31 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 4
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130"* %26, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %class.AccessContextAuditService** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false)
  %36 = load %class.LocalDataContainer*, %class.LocalDataContainer** %34, align 8
  tail call void @_ZN18LocalDataContainer4InitEP16CookiesTreeModel(%class.LocalDataContainer* %36, %class.CookiesTreeModel* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModelC2ENSt3__110unique_ptrI18LocalDataContainerNS0_14default_deleteIS2_EEEEP29ExtensionSpecialStoragePolicyP25AccessContextAuditService(%class.CookiesTreeModel*, %class.LocalDataContainer*, %class.ExtensionSpecialStoragePolicy*, %class.AccessContextAuditService*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %class.LocalDataContainer* %1 to i64
  %6 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 0, i32 0
  %7 = ptrtoint %class.CookiesTreeModel* %0 to i64
  %8 = tail call i8* @_Znwm(i64 72) #18
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 56, i1 false) #17
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV18CookieTreeRootNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 64
  %12 = bitcast i8* %11 to i64*
  store i64 %7, i64* %12, align 8
  %13 = ptrtoint i8* %8 to i64
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2ui13TreeNodeModelI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %14 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.base::ObserverList"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #17
  %16 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %16, %"class.base::internal::LinkNodeBase"* %16, %"class.base::internal::LinkNodeBase"* %16) #17
  %17 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 2
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 3
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 2
  %20 = bitcast %"class.std::__1::unique_ptr.22"* %19 to i64*
  store i64 %13, i64* %20, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV16CookiesTreeModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %21 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 1, i32 0
  store %class.ExtensionSpecialStoragePolicy* %2, %class.ExtensionSpecialStoragePolicy** %21, align 8
  %22 = icmp eq %class.ExtensionSpecialStoragePolicy* %2, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %class.ExtensionSpecialStoragePolicy, %class.ExtensionSpecialStoragePolicy* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %23, %4
  %27 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 2
  %28 = bitcast %"class.std::__1::unique_ptr.130"* %27 to i64*
  store i64 %5, i64* %28, align 8
  %29 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3
  %30 = bitcast %"class.base::ObserverList.312"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #17
  %31 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %31, %"class.base::internal::LinkNodeBase"* %31, %"class.base::internal::LinkNodeBase"* %31) #17
  %32 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 4
  store %class.AccessContextAuditService* %3, %class.AccessContextAuditService** %34, align 8
  %35 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 5
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130"* %27, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast i32* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false)
  %38 = load %class.LocalDataContainer*, %class.LocalDataContainer** %36, align 8
  tail call void @_ZN18LocalDataContainer4InitEP16CookiesTreeModel(%class.LocalDataContainer* %38, %class.CookiesTreeModel* %0) #17
  ret void
}

declare void @_ZN18LocalDataContainer4InitEP16CookiesTreeModel(%class.LocalDataContainer*, %class.CookiesTreeModel*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModelD2Ev(%class.CookiesTreeModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV16CookiesTreeModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode.314"**
  %5 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 1, i32 0
  %6 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode.314"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode.314"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode.314", %"class.base::LinkNode.314"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode.314"* %10 to %"class.base::ObserverList.312"**
  %12 = load %"class.base::ObserverList.312"*, %"class.base::ObserverList.312"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList.312"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList.312"* null, %"class.base::ObserverList.312"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode.314", %"class.base::LinkNode.314"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #17
  %16 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode.314"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode.314"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %22 to i64
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %class.LocalDataContainer*, %class.LocalDataContainer** %30, align 8
  store %class.LocalDataContainer* null, %class.LocalDataContainer** %30, align 8
  %32 = icmp eq %class.LocalDataContainer* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %class.LocalDataContainer* %31 to void (%class.LocalDataContainer*)***
  %35 = load void (%class.LocalDataContainer*)**, void (%class.LocalDataContainer*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.LocalDataContainer*)*, void (%class.LocalDataContainer*)** %35, i64 1
  %37 = load void (%class.LocalDataContainer*)*, void (%class.LocalDataContainer*)** %36, align 8
  tail call void %37(%class.LocalDataContainer* nonnull %31) #17
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 1, i32 0
  %40 = load %class.ExtensionSpecialStoragePolicy*, %class.ExtensionSpecialStoragePolicy** %39, align 8
  %41 = icmp eq %class.ExtensionSpecialStoragePolicy* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.ExtensionSpecialStoragePolicy, %class.ExtensionSpecialStoragePolicy* %40, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %48 to %"class.storage::SpecialStoragePolicy"*
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %48 to void (%"class.storage::SpecialStoragePolicy"*)***
  %51 = load void (%"class.storage::SpecialStoragePolicy"*)**, void (%"class.storage::SpecialStoragePolicy"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.storage::SpecialStoragePolicy"*)*, void (%"class.storage::SpecialStoragePolicy"*)** %51, i64 8
  %53 = load void (%"class.storage::SpecialStoragePolicy"*)*, void (%"class.storage::SpecialStoragePolicy"*)** %52, align 8
  tail call void %53(%"class.storage::SpecialStoragePolicy"* nonnull %49) #17
  br label %54

54:                                               ; preds = %38, %42, %47
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2ui13TreeNodeModelI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %55 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %56 = load %class.CookieTreeNode*, %class.CookieTreeNode** %55, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %55, align 8
  %57 = icmp eq %class.CookieTreeNode* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %class.CookieTreeNode* %56 to void (%class.CookieTreeNode*)***
  %60 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %60, i64 2
  %62 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %61, align 8
  tail call void %62(%class.CookieTreeNode* nonnull %56) #17
  br label %63

63:                                               ; preds = %58, %54
  %64 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %65 = bitcast %"class.base::internal::LinkNodeBase"** %64 to %"class.base::LinkNode"**
  %66 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %67 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %65, align 8
  %68 = icmp eq %"class.base::LinkNode"* %67, %66
  br i1 %68, label %81, label %69

69:                                               ; preds = %63, %78
  %70 = phi %"class.base::LinkNode"* [ %79, %78 ], [ %67, %63 ]
  %71 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %70, i64 1
  %72 = bitcast %"class.base::LinkNode"* %71 to %"class.base::ObserverList"**
  %73 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %72, align 8
  %74 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %72, align 8
  %76 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %70, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %76) #17
  %77 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %65, align 8
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi %"class.base::LinkNode"* [ %70, %69 ], [ %77, %75 ]
  %80 = icmp eq %"class.base::LinkNode"* %79, %66
  br i1 %80, label %81, label %69

81:                                               ; preds = %78, %63
  %82 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %82, align 8
  %84 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %83 to i64
  %87 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %88 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %83 to i8*
  tail call void @_ZdlPv(i8* %89) #18
  br label %90

90:                                               ; preds = %81, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModelD0Ev(%class.CookiesTreeModel*) unnamed_addr #0 align 2 {
  tail call void @_ZN16CookiesTreeModelD2Ev(%class.CookiesTreeModel* %0) #17
  %2 = bitcast %class.CookiesTreeModel* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN16CookiesTreeModel19GetSendForMessageIDERKN3net15CanonicalCookieE(%"class.net::CanonicalCookie"* dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !11
  %4 = icmp eq i8 %3, 0
  %5 = tail call zeroext i1 @_ZNK3net15CanonicalCookie25IsEffectivelySameSiteNoneENS_21CookieAccessSemanticsE(%"class.net::CanonicalCookie"* %0, i32 -1) #17
  %6 = select i1 %5, i32 8390, i32 8392
  %7 = select i1 %5, i32 8389, i32 8391
  %8 = select i1 %4, i32 %7, i32 %6
  ret i32 %8
}

declare zeroext i1 @_ZNK3net15CanonicalCookie25IsEffectivelySameSiteNoneENS_21CookieAccessSemanticsE(%"class.net::CanonicalCookie"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel8GetIconsEPNSt3__16vectorIN3gfx9ImageSkiaENS0_9allocatorIS3_EEEE(%class.CookiesTreeModel* nocapture readnone, %"class.std::__1::vector.664"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::ImageSkia", align 8
  %4 = bitcast %"class.gfx::ImageSkia"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  call void @_ZN3gfx16CreateVectorIconERKNS_10VectorIconEij(%"class.gfx::ImageSkia"* nonnull sret %3, %"struct.gfx::VectorIcon"* nonnull @_ZN12vector_icons11kCookieIconE, i32 18, i32 -10525848) #17
  %5 = getelementptr inbounds %"class.std::__1::vector.664", %"class.std::__1::vector.664"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.664", %"class.std::__1::vector.664"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %7, align 8
  %9 = icmp ult %"class.gfx::ImageSkia"* %6, %8
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %6, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %3) #17
  %11 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %6, i64 1
  %12 = ptrtoint %"class.gfx::ImageSkia"* %11 to i64
  %13 = bitcast %"class.gfx::ImageSkia"** %5 to i64*
  store i64 %12, i64* %13, align 8
  br label %15

14:                                               ; preds = %2
  call void @_ZNSt3__16vectorIN3gfx9ImageSkiaENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.664"* %1, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %3) #17
  br label %15

15:                                               ; preds = %10, %14
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  %16 = call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #17
  %17 = call dereferenceable(8) %"class.gfx::Image"* @_ZN2ui14ResourceBundle19GetNativeImageNamedEi(%"class.ui::ResourceBundle"* %16, i32 11259) #17
  %18 = call %"class.gfx::ImageSkia"* @_ZNK3gfx5Image11ToImageSkiaEv(%"class.gfx::Image"* %17) #17
  %19 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %5, align 8
  %20 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %7, align 8
  %21 = icmp eq %"class.gfx::ImageSkia"* %19, %20
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %19, %"class.gfx::ImageSkia"* dereferenceable(8) %18) #17
  %23 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %19, i64 1
  %24 = ptrtoint %"class.gfx::ImageSkia"* %23 to i64
  %25 = bitcast %"class.gfx::ImageSkia"** %5 to i64*
  store i64 %24, i64* %25, align 8
  br label %27

26:                                               ; preds = %15
  call void @_ZNSt3__16vectorIN3gfx9ImageSkiaENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.664"* %1, %"class.gfx::ImageSkia"* dereferenceable(8) %18) #17
  br label %27

27:                                               ; preds = %22, %26
  ret void
}

declare void @_ZN3gfx16CreateVectorIconERKNS_10VectorIconEij(%"class.gfx::ImageSkia"* sret, %"struct.gfx::VectorIcon"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #3

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #1

declare dereferenceable(8) %"class.gfx::Image"* @_ZN2ui14ResourceBundle19GetNativeImageNamedEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #1

declare %"class.gfx::ImageSkia"* @_ZNK3gfx5Image11ToImageSkiaEv(%"class.gfx::Image"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN16CookiesTreeModel12GetIconIndexEPN2ui13TreeModelNodeE(%class.CookiesTreeModel* nocapture readnone, %"class.ui::TreeModelNode"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"class.ui::TreeModelNode"* %1 to %class.CookieTreeNode*
  %5 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %5) #17
  %6 = bitcast %"class.ui::TreeModelNode"* %1 to void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)***
  %7 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)**, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*** %6, align 8
  %8 = getelementptr inbounds void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)** %7, i64 8
  %9 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)** %8, align 8
  call void %9(%"struct.CookieTreeNode::DetailedInfo"* nonnull sret %3, %class.CookieTreeNode* %4) #17
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %12) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %5) #17
  %13 = add i32 %11, -2
  %14 = icmp ult i32 %13, 24
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = sext i32 %13 to i64
  %17 = getelementptr inbounds [24 x i32], [24 x i32]* @switch.table._ZN16CookiesTreeModel12GetIconIndexEPN2ui13TreeModelNodeE, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  ret i32 %18

19:                                               ; preds = %2
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel22DeleteAllStoredObjectsEv(%class.CookiesTreeModel*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %0)
  %2 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %3 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %4 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %3, align 8
  %5 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %4, align 8
  %6 = tail call %class.CookieTreeNode* %5(%"class.ui::TreeNodeModel"* %2) #17
  %7 = bitcast %class.CookieTreeNode* %6 to void (%class.CookieTreeNode*)***
  %8 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %8, i64 6
  %10 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %9, align 8
  tail call void %10(%class.CookieTreeNode* %6) #17
  %11 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %11, align 8
  %13 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %6, i64 0, i32 0, i32 3, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %12
  br i1 %15, label %29, label %16

16:                                               ; preds = %1, %27
  %17 = phi %"class.std::__1::unique_ptr.22"* [ %18, %27 ], [ %14, %1 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %17, i64 -1
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %class.CookieTreeNode*, %class.CookieTreeNode** %19, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %19, align 8
  %21 = icmp eq %class.CookieTreeNode* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = bitcast %class.CookieTreeNode* %20 to void (%class.CookieTreeNode*)***
  %24 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %24, i64 2
  %26 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %25, align 8
  tail call void %26(%class.CookieTreeNode* nonnull %20) #17
  br label %27

27:                                               ; preds = %22, %16
  %28 = icmp eq %"class.std::__1::unique_ptr.22"* %18, %12
  br i1 %28, label %29, label %16

29:                                               ; preds = %27, %1
  store %"class.std::__1::unique_ptr.22"* %12, %"class.std::__1::unique_ptr.22"** %13, align 8
  %30 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %6, i64 0, i32 0, i32 0
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %2, %"class.ui::TreeModelNode"* %30)
  %31 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 8
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %31, align 4
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel16DeleteCookieNodeEP14CookieTreeNode(%class.CookiesTreeModel*, %class.CookieTreeNode*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %4 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  br label %5

5:                                                ; preds = %99, %2
  %6 = phi %class.CookieTreeNode* [ %1, %2 ], [ %17, %99 ]
  %7 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %4, align 8
  %8 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %7, align 8
  %9 = tail call %class.CookieTreeNode* %8(%"class.ui::TreeNodeModel"* %3) #17
  %10 = icmp eq %class.CookieTreeNode* %9, %6
  br i1 %10, label %103, label %11

11:                                               ; preds = %5
  %12 = bitcast %class.CookieTreeNode* %6 to void (%class.CookieTreeNode*)***
  %13 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %13, i64 6
  %15 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %14, align 8
  tail call void %15(%class.CookieTreeNode* %6) #17
  %16 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %6, i64 0, i32 0, i32 2
  %17 = load %class.CookieTreeNode*, %class.CookieTreeNode** %16, align 8
  %18 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %17, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %18, align 8
  %20 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %17, i64 0, i32 0, i32 3, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr.22"* %19, %21
  br i1 %22, label %31, label %23

23:                                               ; preds = %11, %28
  %24 = phi %"class.std::__1::unique_ptr.22"* [ %29, %28 ], [ %19, %11 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %class.CookieTreeNode*, %class.CookieTreeNode** %25, align 8
  %27 = icmp eq %class.CookieTreeNode* %26, %6
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %24, i64 1
  %30 = icmp eq %"class.std::__1::unique_ptr.22"* %29, %21
  br i1 %30, label %40, label %23

31:                                               ; preds = %23, %11
  %32 = phi %"class.std::__1::unique_ptr.22"* [ %19, %11 ], [ %24, %23 ]
  %33 = icmp eq %"class.std::__1::unique_ptr.22"* %32, %21
  br i1 %33, label %40, label %34

34:                                               ; preds = %31
  %35 = ptrtoint %"class.std::__1::unique_ptr.22"* %32 to i64
  %36 = ptrtoint %"class.std::__1::unique_ptr.22"* %19 to i64
  %37 = sub i64 %35, %36
  %38 = shl i64 %37, 29
  %39 = ashr exact i64 %38, 32
  br label %40

40:                                               ; preds = %28, %31, %34
  %41 = phi i64 [ %39, %34 ], [ -1, %31 ], [ -1, %28 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %19, i64 %41, i32 0, i32 0, i32 0
  %43 = load %class.CookieTreeNode*, %class.CookieTreeNode** %42, align 8
  %44 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %43, i64 0, i32 0, i32 2
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %44, align 8
  %45 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %18, align 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %45, i64 %41, i32 0, i32 0, i32 0
  %47 = load %class.CookieTreeNode*, %class.CookieTreeNode** %46, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %46, align 8
  %48 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %18, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %48, i64 %41
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %49, i64 1
  %51 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %20, align 8
  %52 = icmp eq %"class.std::__1::unique_ptr.22"* %50, %51
  br i1 %52, label %75, label %53

53:                                               ; preds = %40, %68
  %54 = phi %"class.std::__1::unique_ptr.22"* [ %70, %68 ], [ %49, %40 ]
  %55 = phi %"class.std::__1::unique_ptr.22"* [ %69, %68 ], [ %50, %40 ]
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.22"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %56, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %54, i64 0, i32 0, i32 0, i32 0
  %60 = load %class.CookieTreeNode*, %class.CookieTreeNode** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.22"* %54 to i64*
  store i64 %58, i64* %61, align 8
  %62 = icmp eq %class.CookieTreeNode* %60, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %53
  %64 = bitcast %class.CookieTreeNode* %60 to void (%class.CookieTreeNode*)***
  %65 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %65, i64 2
  %67 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %66, align 8
  tail call void %67(%class.CookieTreeNode* nonnull %60) #17
  br label %68

68:                                               ; preds = %63, %53
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %55, i64 1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %54, i64 1
  %71 = icmp eq %"class.std::__1::unique_ptr.22"* %69, %51
  br i1 %71, label %72, label %53

72:                                               ; preds = %68
  %73 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %20, align 8
  %74 = icmp eq %"class.std::__1::unique_ptr.22"* %73, %70
  br i1 %74, label %91, label %75

75:                                               ; preds = %72, %40
  %76 = phi %"class.std::__1::unique_ptr.22"* [ %70, %72 ], [ %49, %40 ]
  %77 = phi %"class.std::__1::unique_ptr.22"* [ %73, %72 ], [ %50, %40 ]
  br label %78

78:                                               ; preds = %89, %75
  %79 = phi %"class.std::__1::unique_ptr.22"* [ %80, %89 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %79, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %class.CookieTreeNode*, %class.CookieTreeNode** %81, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %81, align 8
  %83 = icmp eq %class.CookieTreeNode* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %78
  %85 = bitcast %class.CookieTreeNode* %82 to void (%class.CookieTreeNode*)***
  %86 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %86, i64 2
  %88 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %87, align 8
  tail call void %88(%class.CookieTreeNode* nonnull %82) #17
  br label %89

89:                                               ; preds = %84, %78
  %90 = icmp eq %"class.std::__1::unique_ptr.22"* %80, %76
  br i1 %90, label %91, label %78

91:                                               ; preds = %89, %72
  %92 = phi %"class.std::__1::unique_ptr.22"* [ %70, %72 ], [ %76, %89 ]
  store %"class.std::__1::unique_ptr.22"* %92, %"class.std::__1::unique_ptr.22"** %20, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE30NotifyObserverTreeNodesRemovedEPS1_mm(%"class.ui::TreeNodeModel"* %3, %class.CookieTreeNode* %17, i64 %41, i64 1) #17
  %93 = icmp eq %class.CookieTreeNode* %47, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = bitcast %class.CookieTreeNode* %47 to void (%class.CookieTreeNode*)***
  %96 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %96, i64 2
  %98 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %97, align 8
  tail call void %98(%class.CookieTreeNode* nonnull %47) #17
  br label %99

99:                                               ; preds = %91, %94
  %100 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %18, align 8
  %101 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %20, align 8
  %102 = icmp eq %"class.std::__1::unique_ptr.22"* %100, %101
  br i1 %102, label %5, label %103

103:                                              ; preds = %99, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel19UpdateSearchResultsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.CookiesTreeModel*, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %5 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %6 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %5, align 8
  %7 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %6, align 8
  %8 = tail call %class.CookieTreeNode* %7(%"class.ui::TreeNodeModel"* %4) #17
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 5
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %11 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 7
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 8
  store i32 0, i32* %12, align 4
  %13 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %17 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %14, align 8
  store %class.CookieTreeNode* %8, %class.CookieTreeNode** %15, align 8
  store i32 1, i32* %10, align 4
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %0) #17
  store i8 1, i8* %16, align 8
  %18 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %18, align 8
  %20 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %8, i64 0, i32 0, i32 3, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr.22"* %21, %19
  br i1 %22, label %36, label %23

23:                                               ; preds = %2, %34
  %24 = phi %"class.std::__1::unique_ptr.22"* [ %25, %34 ], [ %21, %2 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %24, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.CookieTreeNode*, %class.CookieTreeNode** %26, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %26, align 8
  %28 = icmp eq %class.CookieTreeNode* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = bitcast %class.CookieTreeNode* %27 to void (%class.CookieTreeNode*)***
  %31 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %31, i64 2
  %33 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %32, align 8
  tail call void %33(%class.CookieTreeNode* nonnull %27) #17
  br label %34

34:                                               ; preds = %29, %23
  %35 = icmp eq %"class.std::__1::unique_ptr.22"* %25, %19
  br i1 %35, label %36, label %23

36:                                               ; preds = %34, %2
  store %"class.std::__1::unique_ptr.22"* %19, %"class.std::__1::unique_ptr.22"** %20, align 8
  %37 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel28PopulateCookieInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %38, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %39 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel30PopulateDatabaseInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %39, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %40 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel34PopulateLocalStorageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %40, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %41 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel36PopulateSessionStorageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %41, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %42 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel30PopulateAppCacheInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %42, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %43 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel31PopulateIndexedDBInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %43, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %44 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel32PopulateFileSystemInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %44, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %45 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel27PopulateQuotaInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %45, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %46 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel40PopulateServiceWorkerUsageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %46, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %47 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel34PopulateSharedWorkerInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %47, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %48 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel39PopulateCacheStorageUsageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %48, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %49 = load %class.LocalDataContainer*, %class.LocalDataContainer** %37, align 8
  call void @_ZN16CookiesTreeModel34PopulateMediaLicenseInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %49, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  %50 = load i8, i8* %16, align 8, !range !11
  %51 = icmp eq i8 %50, 0
  %52 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %14, align 8
  br i1 %51, label %60, label %53

53:                                               ; preds = %36
  %54 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %52, i64 0, i32 0
  %55 = bitcast %class.CookieTreeNode** %15 to %"class.ui::TreeModelNode"**
  %56 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %55, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %54, %"class.ui::TreeModelNode"* %56) #17
  %57 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %52, i64 0, i32 8
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %57, align 4
  br label %60

60:                                               ; preds = %36, %53
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %52) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel19SetBatchExpectationEib(%class.CookiesTreeModel*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 5
  store i32 %1, i32* %4, align 8
  br i1 %2, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 7
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 8
  store i32 0, i32* %8, align 4
  br label %10

9:                                                ; preds = %3
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %0)
  br label %10

10:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel28PopulateCookieInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string.13", align 8
  %7 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %8 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %9 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %8, align 8
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %9, align 8
  %11 = tail call %class.CookieTreeNode* %10(%"class.ui::TreeNodeModel"* %7) #17
  %12 = bitcast %class.CookieTreeNode* %11 to %class.CookieTreeRootNode*
  %13 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !11
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %18 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %17, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %18) #17
  store i8 1, i8* %13, align 8
  br label %19

19:                                               ; preds = %4, %16
  %20 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 14, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base.275"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 14, i32 0, i32 0
  %24 = inttoptr i64 %22 to %"struct.std::__1::__list_node_base.275"*
  %25 = icmp eq %"struct.std::__1::__list_node_base.275"* %23, %24
  br i1 %25, label %39, label %26

26:                                               ; preds = %19
  %27 = bitcast %class.GURL* %5 to i8*
  %28 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string.13"* %6 to i8*
  %32 = bitcast %"class.std::__1::basic_string.13"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string.13"* %6 to i16*
  %36 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %38 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %40

39:                                               ; preds = %161, %19
  ret void

40:                                               ; preds = %26, %161
  %41 = phi %"struct.std::__1::__list_node_base.275"* [ %24, %26 ], [ %165, %161 ]
  %42 = phi i64 [ %22, %26 ], [ %164, %161 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %27) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 120, i1 false)
  %43 = inttoptr i64 %42 to %"struct.std::__1::__list_node.826"*
  %44 = getelementptr inbounds %"struct.std::__1::__list_node.826", %"struct.std::__1::__list_node.826"* %43, i64 0, i32 1, i32 2
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"struct.std::__1::__list_node.826", %"struct.std::__1::__list_node.826"* %43, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = zext i8 %47 to i64
  %52 = select i1 %48, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 1
  br i1 %53, label %54, label %58

54:                                               ; preds = %40
  %55 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %44, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #17
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9) #17
  br label %59

58:                                               ; preds = %40, %54
  call void @_ZN3net11cookie_util17CookieOriginToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%class.GURL* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %44, i1 zeroext false) #17
  br label %59

59:                                               ; preds = %58, %57
  %60 = load i8, i8* %29, align 1
  %61 = icmp slt i8 %60, 0
  %62 = load i64, i64* %30, align 8
  %63 = zext i8 %60 to i64
  %64 = select i1 %61, i64 %62, i64 %63
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %143, label %66

66:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %6, %class.GURL* nonnull dereferenceable(120) %5)
  %67 = load i8, i8* %33, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i16*, i16** %34, align 8
  %70 = select i1 %68, i16* %69, i16* %35
  %71 = load i8, i8* %29, align 1
  %72 = icmp slt i8 %71, 0
  %73 = load i16*, i16** %36, align 8
  %74 = load i64, i64* %30, align 8
  %75 = zext i8 %71 to i64
  %76 = select i1 %72, i16* %73, i16* %37
  %77 = select i1 %72, i64 %74, i64 %75
  %78 = icmp eq i64 %77, 0
  %79 = bitcast i16* %69 to i8*
  br i1 %78, label %138, label %80

80:                                               ; preds = %66
  %81 = load i64, i64* %38, align 8
  %82 = zext i8 %67 to i64
  %83 = select i1 %68, i64 %81, i64 %82
  %84 = getelementptr inbounds i16, i16* %70, i64 %83
  %85 = shl nuw i64 %77, 1
  %86 = ashr exact i64 %85, 1
  %87 = ptrtoint i16* %84 to i64
  %88 = ptrtoint i16* %70 to i64
  %89 = shl nuw i64 %83, 1
  %90 = ashr exact i64 %89, 1
  %91 = icmp slt i64 %90, %86
  br i1 %91, label %131, label %92

92:                                               ; preds = %80
  %93 = load i16, i16* %76, align 2
  br label %94

94:                                               ; preds = %123, %92
  %95 = phi i64 [ %90, %92 ], [ %127, %123 ]
  %96 = phi i16* [ %70, %92 ], [ %124, %123 ]
  %97 = sub nsw i64 %95, %86
  %98 = add nsw i64 %97, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %131, label %100

100:                                              ; preds = %94, %105
  %101 = phi i64 [ %107, %105 ], [ %98, %94 ]
  %102 = phi i16* [ %106, %105 ], [ %96, %94 ]
  %103 = load i16, i16* %102, align 2
  %104 = icmp eq i16 %103, %93
  br i1 %104, label %109, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds i16, i16* %102, i64 1
  %107 = add i64 %101, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %131, label %100

109:                                              ; preds = %100
  %110 = icmp eq i16* %102, null
  br i1 %110, label %131, label %111

111:                                              ; preds = %109, %118
  %112 = phi i16* [ %116, %118 ], [ %102, %109 ]
  %113 = phi i16* [ %119, %118 ], [ %76, %109 ]
  %114 = phi i64 [ %115, %118 ], [ %86, %109 ]
  %115 = add i64 %114, -1
  %116 = getelementptr inbounds i16, i16* %112, i64 1
  %117 = icmp eq i64 %115, 0
  br i1 %117, label %129, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds i16, i16* %113, i64 1
  %120 = load i16, i16* %116, align 2
  %121 = load i16, i16* %119, align 2
  %122 = icmp eq i16 %121, %120
  br i1 %122, label %111, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds i16, i16* %102, i64 1
  %125 = ptrtoint i16* %124 to i64
  %126 = sub i64 %87, %125
  %127 = ashr exact i64 %126, 1
  %128 = icmp slt i64 %127, %86
  br i1 %128, label %131, label %94

129:                                              ; preds = %111
  %130 = ptrtoint i16* %102 to i64
  br label %131

131:                                              ; preds = %123, %109, %94, %105, %129, %80
  %132 = phi i64 [ %130, %129 ], [ %87, %80 ], [ %87, %105 ], [ %87, %94 ], [ %87, %109 ], [ %87, %123 ]
  %133 = phi i16* [ %102, %129 ], [ %84, %80 ], [ %84, %105 ], [ %84, %94 ], [ %84, %109 ], [ %84, %123 ]
  %134 = icmp eq i16* %133, %84
  %135 = sub i64 %132, %88
  %136 = ashr exact i64 %135, 1
  %137 = select i1 %134, i64 -1, i64 %136
  br label %138

138:                                              ; preds = %131, %66
  %139 = phi i64 [ 0, %66 ], [ %137, %131 ]
  %140 = icmp eq i64 %139, -1
  br i1 %68, label %141, label %142

141:                                              ; preds = %138
  call void @_ZdlPv(i8* %79) #18
  br label %142

142:                                              ; preds = %141, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %140, label %161, label %143

143:                                              ; preds = %142, %59
  %144 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %12, %class.GURL* nonnull dereferenceable(120) %5)
  %145 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %144, i64 0, i32 1
  %146 = load %class.CookieTreeCookiesNode*, %class.CookieTreeCookiesNode** %145, align 8
  %147 = icmp eq %class.CookieTreeCookiesNode* %146, null
  br i1 %147, label %148, label %155

148:                                              ; preds = %143
  %149 = call i8* @_Znwm(i64 64) #18
  %150 = bitcast i8* %149 to %class.CookieTreeCookiesNode*
  call void @_ZN21CookieTreeCookiesNodeC2Ev(%class.CookieTreeCookiesNode* nonnull %150) #17
  %151 = bitcast %class.CookieTreeCookiesNode** %145 to i8**
  store i8* %149, i8** %151, align 8
  %152 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %144, i64 0, i32 0
  %153 = bitcast i8* %149 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %152, %class.CookieTreeNode* nonnull %153) #17
  %154 = load %class.CookieTreeCookiesNode*, %class.CookieTreeCookiesNode** %145, align 8
  br label %155

155:                                              ; preds = %143, %148
  %156 = phi %class.CookieTreeCookiesNode* [ %154, %148 ], [ %146, %143 ]
  %157 = call i8* @_Znwm(i64 72) #18
  %158 = bitcast i8* %157 to %class.CookieTreeCookieNode*
  call void @_ZN20CookieTreeCookieNodeC2ENSt3__115__list_iteratorIN3net15CanonicalCookieEPvEE(%class.CookieTreeCookieNode* nonnull %158, %"struct.std::__1::__list_node_base.275"* %41) #17
  %159 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %156, i64 0, i32 0
  %160 = bitcast i8* %157 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %159, %class.CookieTreeNode* nonnull %160) #17
  br label %161

161:                                              ; preds = %142, %155
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %27) #17
  %162 = getelementptr inbounds %"struct.std::__1::__list_node_base.275", %"struct.std::__1::__list_node_base.275"* %41, i64 0, i32 1
  %163 = bitcast %"struct.std::__1::__list_node_base.275"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = inttoptr i64 %164 to %"struct.std::__1::__list_node_base.275"*
  %166 = icmp eq %"struct.std::__1::__list_node_base.275"* %23, %165
  br i1 %166, label %39, label %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel30PopulateDatabaseInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.13", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %class.GURL, align 8
  %8 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %9 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %9, align 8
  %11 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %10, align 8
  %12 = tail call %class.CookieTreeNode* %11(%"class.ui::TreeNodeModel"* %8) #17
  %13 = bitcast %class.CookieTreeNode* %12 to %class.CookieTreeRootNode*
  %14 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %161, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %23 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %22, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %23) #17
  store i8 1, i8* %18, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 15, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 15, i32 0, i32 0
  %29 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %28, %29
  br i1 %30, label %161, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  %36 = bitcast %class.GURL* %6 to i8*
  %37 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %41 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %43 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %class.GURL* %7 to i8*
  br label %45

45:                                               ; preds = %31, %155
  %46 = phi %"struct.std::__1::__list_node_base"* [ %29, %31 ], [ %159, %155 ]
  %47 = phi i64 [ %27, %31 ], [ %158, %155 ]
  %48 = load i8, i8* %33, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %34, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %45
  %55 = inttoptr i64 %47 to %"struct.std::__1::__list_node.827"*
  br label %135

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %36) #17
  %57 = inttoptr i64 %47 to %"struct.std::__1::__list_node.827"*
  %58 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %57, i64 0, i32 1, i32 0
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %6, %"class.url::Origin"* %58) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %5, %class.GURL* nonnull dereferenceable(120) %6)
  %59 = load i8, i8* %38, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i16*, i16** %39, align 8
  %62 = select i1 %60, i16* %61, i16* %40
  %63 = load i8, i8* %33, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i16*, i16** %41, align 8
  %66 = load i64, i64* %34, align 8
  %67 = zext i8 %63 to i64
  %68 = select i1 %64, i16* %65, i16* %42
  %69 = select i1 %64, i64 %66, i64 %67
  %70 = icmp eq i64 %69, 0
  %71 = bitcast i16* %61 to i8*
  br i1 %70, label %130, label %72

72:                                               ; preds = %56
  %73 = load i64, i64* %43, align 8
  %74 = zext i8 %59 to i64
  %75 = select i1 %60, i64 %73, i64 %74
  %76 = getelementptr inbounds i16, i16* %62, i64 %75
  %77 = shl nuw i64 %69, 1
  %78 = ashr exact i64 %77, 1
  %79 = ptrtoint i16* %76 to i64
  %80 = ptrtoint i16* %62 to i64
  %81 = shl nuw i64 %75, 1
  %82 = ashr exact i64 %81, 1
  %83 = icmp slt i64 %82, %78
  br i1 %83, label %123, label %84

84:                                               ; preds = %72
  %85 = load i16, i16* %68, align 2
  br label %86

86:                                               ; preds = %115, %84
  %87 = phi i64 [ %82, %84 ], [ %119, %115 ]
  %88 = phi i16* [ %62, %84 ], [ %116, %115 ]
  %89 = sub nsw i64 %87, %78
  %90 = add nsw i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %123, label %92

92:                                               ; preds = %86, %97
  %93 = phi i64 [ %99, %97 ], [ %90, %86 ]
  %94 = phi i16* [ %98, %97 ], [ %88, %86 ]
  %95 = load i16, i16* %94, align 2
  %96 = icmp eq i16 %95, %85
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds i16, i16* %94, i64 1
  %99 = add i64 %93, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %123, label %92

101:                                              ; preds = %92
  %102 = icmp eq i16* %94, null
  br i1 %102, label %123, label %103

103:                                              ; preds = %101, %110
  %104 = phi i16* [ %108, %110 ], [ %94, %101 ]
  %105 = phi i16* [ %111, %110 ], [ %68, %101 ]
  %106 = phi i64 [ %107, %110 ], [ %78, %101 ]
  %107 = add i64 %106, -1
  %108 = getelementptr inbounds i16, i16* %104, i64 1
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %121, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds i16, i16* %105, i64 1
  %112 = load i16, i16* %108, align 2
  %113 = load i16, i16* %111, align 2
  %114 = icmp eq i16 %113, %112
  br i1 %114, label %103, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds i16, i16* %94, i64 1
  %117 = ptrtoint i16* %116 to i64
  %118 = sub i64 %79, %117
  %119 = ashr exact i64 %118, 1
  %120 = icmp slt i64 %119, %78
  br i1 %120, label %123, label %86

121:                                              ; preds = %103
  %122 = ptrtoint i16* %94 to i64
  br label %123

123:                                              ; preds = %115, %101, %86, %97, %121, %72
  %124 = phi i64 [ %122, %121 ], [ %79, %72 ], [ %79, %97 ], [ %79, %86 ], [ %79, %101 ], [ %79, %115 ]
  %125 = phi i16* [ %94, %121 ], [ %76, %72 ], [ %76, %97 ], [ %76, %86 ], [ %76, %101 ], [ %76, %115 ]
  %126 = icmp eq i16* %125, %76
  %127 = sub i64 %124, %80
  %128 = ashr exact i64 %127, 1
  %129 = select i1 %126, i64 -1, i64 %128
  br label %130

130:                                              ; preds = %123, %56
  %131 = phi i64 [ 0, %56 ], [ %129, %123 ]
  %132 = icmp eq i64 %131, -1
  br i1 %60, label %133, label %134

133:                                              ; preds = %130
  call void @_ZdlPv(i8* %71) #18
  br label %134

134:                                              ; preds = %133, %130
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %36) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %132, label %155, label %135

135:                                              ; preds = %54, %134
  %136 = phi %"struct.std::__1::__list_node.827"* [ %55, %54 ], [ %57, %134 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %44) #17
  %137 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %136, i64 0, i32 1, i32 0
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %7, %"class.url::Origin"* %137) #17
  %138 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %13, %class.GURL* nonnull dereferenceable(120) %7)
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %44) #17
  %139 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %138, i64 0, i32 2
  %140 = load %class.CookieTreeDatabasesNode*, %class.CookieTreeDatabasesNode** %139, align 8
  %141 = icmp eq %class.CookieTreeDatabasesNode* %140, null
  br i1 %141, label %142, label %149

142:                                              ; preds = %135
  %143 = call i8* @_Znwm(i64 64) #18
  %144 = bitcast i8* %143 to %class.CookieTreeDatabasesNode*
  call void @_ZN23CookieTreeDatabasesNodeC2Ev(%class.CookieTreeDatabasesNode* nonnull %144) #17
  %145 = bitcast %class.CookieTreeDatabasesNode** %139 to i8**
  store i8* %143, i8** %145, align 8
  %146 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %138, i64 0, i32 0
  %147 = bitcast i8* %143 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %146, %class.CookieTreeNode* nonnull %147) #17
  %148 = load %class.CookieTreeDatabasesNode*, %class.CookieTreeDatabasesNode** %139, align 8
  br label %149

149:                                              ; preds = %135, %142
  %150 = phi %class.CookieTreeDatabasesNode* [ %148, %142 ], [ %140, %135 ]
  %151 = call i8* @_Znwm(i64 72) #18
  %152 = bitcast i8* %151 to %class.CookieTreeDatabaseNode*
  call void @_ZN22CookieTreeDatabaseNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeDatabaseNode* nonnull %152, %"struct.std::__1::__list_node_base"* %46) #17
  %153 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %150, i64 0, i32 0, i32 0
  %154 = bitcast i8* %151 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %153, %class.CookieTreeNode* nonnull %154) #17
  br label %155

155:                                              ; preds = %134, %149
  %156 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %157 = bitcast %"struct.std::__1::__list_node_base"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = inttoptr i64 %158 to %"struct.std::__1::__list_node_base"*
  %160 = icmp eq %"struct.std::__1::__list_node_base"* %28, %159
  br i1 %160, label %161, label %45

161:                                              ; preds = %155, %24, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel34PopulateLocalStorageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string.13", align 8
  %7 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %8 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %9 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %8, align 8
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %9, align 8
  %11 = tail call %class.CookieTreeNode* %10(%"class.ui::TreeNodeModel"* %7) #17
  %12 = bitcast %class.CookieTreeNode* %11 to %class.CookieTreeRootNode*
  %13 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %155, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %22 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %21, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %22) #17
  store i8 1, i8* %17, align 8
  br label %23

23:                                               ; preds = %16, %20
  %24 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 16, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 16, i32 0, i32 0
  %28 = inttoptr i64 %26 to %"struct.std::__1::__list_node_base"*
  %29 = icmp eq %"struct.std::__1::__list_node_base"* %27, %28
  br i1 %29, label %155, label %30

30:                                               ; preds = %23
  %31 = bitcast %class.GURL* %5 to i8*
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %6 to i8*
  %36 = bitcast %"class.std::__1::basic_string.13"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string.13"* %6 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %42 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %43

43:                                               ; preds = %30, %149
  %44 = phi %"struct.std::__1::__list_node_base"* [ %28, %30 ], [ %153, %149 ]
  %45 = phi i64 [ %26, %30 ], [ %152, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %31) #17
  %46 = inttoptr i64 %45 to %"struct.std::__1::__list_node.827"*
  %47 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %46, i64 0, i32 1, i32 0
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %5, %"class.url::Origin"* %47) #17
  %48 = load i8, i8* %33, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %34, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %131, label %54

54:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %6, %class.GURL* nonnull dereferenceable(120) %5)
  %55 = load i8, i8* %37, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i16*, i16** %38, align 8
  %58 = select i1 %56, i16* %57, i16* %39
  %59 = load i8, i8* %33, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i16*, i16** %40, align 8
  %62 = load i64, i64* %34, align 8
  %63 = zext i8 %59 to i64
  %64 = select i1 %60, i16* %61, i16* %41
  %65 = select i1 %60, i64 %62, i64 %63
  %66 = icmp eq i64 %65, 0
  %67 = bitcast i16* %57 to i8*
  br i1 %66, label %126, label %68

68:                                               ; preds = %54
  %69 = load i64, i64* %42, align 8
  %70 = zext i8 %55 to i64
  %71 = select i1 %56, i64 %69, i64 %70
  %72 = getelementptr inbounds i16, i16* %58, i64 %71
  %73 = shl nuw i64 %65, 1
  %74 = ashr exact i64 %73, 1
  %75 = ptrtoint i16* %72 to i64
  %76 = ptrtoint i16* %58 to i64
  %77 = shl nuw i64 %71, 1
  %78 = ashr exact i64 %77, 1
  %79 = icmp slt i64 %78, %74
  br i1 %79, label %119, label %80

80:                                               ; preds = %68
  %81 = load i16, i16* %64, align 2
  br label %82

82:                                               ; preds = %111, %80
  %83 = phi i64 [ %78, %80 ], [ %115, %111 ]
  %84 = phi i16* [ %58, %80 ], [ %112, %111 ]
  %85 = sub nsw i64 %83, %74
  %86 = add nsw i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %82, %93
  %89 = phi i64 [ %95, %93 ], [ %86, %82 ]
  %90 = phi i16* [ %94, %93 ], [ %84, %82 ]
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, %81
  br i1 %92, label %97, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i16, i16* %90, i64 1
  %95 = add i64 %89, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %119, label %88

97:                                               ; preds = %88
  %98 = icmp eq i16* %90, null
  br i1 %98, label %119, label %99

99:                                               ; preds = %97, %106
  %100 = phi i16* [ %104, %106 ], [ %90, %97 ]
  %101 = phi i16* [ %107, %106 ], [ %64, %97 ]
  %102 = phi i64 [ %103, %106 ], [ %74, %97 ]
  %103 = add i64 %102, -1
  %104 = getelementptr inbounds i16, i16* %100, i64 1
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds i16, i16* %101, i64 1
  %108 = load i16, i16* %104, align 2
  %109 = load i16, i16* %107, align 2
  %110 = icmp eq i16 %109, %108
  br i1 %110, label %99, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds i16, i16* %90, i64 1
  %113 = ptrtoint i16* %112 to i64
  %114 = sub i64 %75, %113
  %115 = ashr exact i64 %114, 1
  %116 = icmp slt i64 %115, %74
  br i1 %116, label %119, label %82

117:                                              ; preds = %99
  %118 = ptrtoint i16* %90 to i64
  br label %119

119:                                              ; preds = %111, %97, %82, %93, %117, %68
  %120 = phi i64 [ %118, %117 ], [ %75, %68 ], [ %75, %93 ], [ %75, %82 ], [ %75, %97 ], [ %75, %111 ]
  %121 = phi i16* [ %90, %117 ], [ %72, %68 ], [ %72, %93 ], [ %72, %82 ], [ %72, %97 ], [ %72, %111 ]
  %122 = icmp eq i16* %121, %72
  %123 = sub i64 %120, %76
  %124 = ashr exact i64 %123, 1
  %125 = select i1 %122, i64 -1, i64 %124
  br label %126

126:                                              ; preds = %119, %54
  %127 = phi i64 [ 0, %54 ], [ %125, %119 ]
  %128 = icmp eq i64 %127, -1
  br i1 %56, label %129, label %130

129:                                              ; preds = %126
  call void @_ZdlPv(i8* %67) #18
  br label %130

130:                                              ; preds = %129, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %128, label %149, label %131

131:                                              ; preds = %130, %43
  %132 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %12, %class.GURL* nonnull dereferenceable(120) %5)
  %133 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 3
  %134 = load %class.CookieTreeLocalStoragesNode*, %class.CookieTreeLocalStoragesNode** %133, align 8
  %135 = icmp eq %class.CookieTreeLocalStoragesNode* %134, null
  br i1 %135, label %136, label %143

136:                                              ; preds = %131
  %137 = call i8* @_Znwm(i64 64) #18
  %138 = bitcast i8* %137 to %class.CookieTreeLocalStoragesNode*
  call void @_ZN27CookieTreeLocalStoragesNodeC2Ev(%class.CookieTreeLocalStoragesNode* nonnull %138) #17
  %139 = bitcast %class.CookieTreeLocalStoragesNode** %133 to i8**
  store i8* %137, i8** %139, align 8
  %140 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 0
  %141 = bitcast i8* %137 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %140, %class.CookieTreeNode* nonnull %141) #17
  %142 = load %class.CookieTreeLocalStoragesNode*, %class.CookieTreeLocalStoragesNode** %133, align 8
  br label %143

143:                                              ; preds = %131, %136
  %144 = phi %class.CookieTreeLocalStoragesNode* [ %142, %136 ], [ %134, %131 ]
  %145 = call i8* @_Znwm(i64 72) #18
  %146 = bitcast i8* %145 to %class.CookieTreeLocalStorageNode*
  call void @_ZN26CookieTreeLocalStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeLocalStorageNode* nonnull %146, %"struct.std::__1::__list_node_base"* %44) #17
  %147 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %144, i64 0, i32 0, i32 0
  %148 = bitcast i8* %145 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %147, %class.CookieTreeNode* nonnull %148) #17
  br label %149

149:                                              ; preds = %130, %143
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %31) #17
  %150 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %151 = bitcast %"struct.std::__1::__list_node_base"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = inttoptr i64 %152 to %"struct.std::__1::__list_node_base"*
  %154 = icmp eq %"struct.std::__1::__list_node_base"* %27, %153
  br i1 %154, label %155, label %43

155:                                              ; preds = %149, %23, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel36PopulateSessionStorageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string.13", align 8
  %7 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %8 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %9 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %8, align 8
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %9, align 8
  %11 = tail call %class.CookieTreeNode* %10(%"class.ui::TreeNodeModel"* %7) #17
  %12 = bitcast %class.CookieTreeNode* %11 to %class.CookieTreeRootNode*
  %13 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %155, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %22 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %21, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %22) #17
  store i8 1, i8* %17, align 8
  br label %23

23:                                               ; preds = %16, %20
  %24 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 17, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 17, i32 0, i32 0
  %28 = inttoptr i64 %26 to %"struct.std::__1::__list_node_base"*
  %29 = icmp eq %"struct.std::__1::__list_node_base"* %27, %28
  br i1 %29, label %155, label %30

30:                                               ; preds = %23
  %31 = bitcast %class.GURL* %5 to i8*
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %6 to i8*
  %36 = bitcast %"class.std::__1::basic_string.13"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string.13"* %6 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %42 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %43

43:                                               ; preds = %30, %149
  %44 = phi %"struct.std::__1::__list_node_base"* [ %28, %30 ], [ %153, %149 ]
  %45 = phi i64 [ %26, %30 ], [ %152, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %31) #17
  %46 = inttoptr i64 %45 to %"struct.std::__1::__list_node.827"*
  %47 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %46, i64 0, i32 1, i32 0
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %5, %"class.url::Origin"* %47) #17
  %48 = load i8, i8* %33, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %34, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %131, label %54

54:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %6, %class.GURL* nonnull dereferenceable(120) %5)
  %55 = load i8, i8* %37, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i16*, i16** %38, align 8
  %58 = select i1 %56, i16* %57, i16* %39
  %59 = load i8, i8* %33, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i16*, i16** %40, align 8
  %62 = load i64, i64* %34, align 8
  %63 = zext i8 %59 to i64
  %64 = select i1 %60, i16* %61, i16* %41
  %65 = select i1 %60, i64 %62, i64 %63
  %66 = icmp eq i64 %65, 0
  %67 = bitcast i16* %57 to i8*
  br i1 %66, label %126, label %68

68:                                               ; preds = %54
  %69 = load i64, i64* %42, align 8
  %70 = zext i8 %55 to i64
  %71 = select i1 %56, i64 %69, i64 %70
  %72 = getelementptr inbounds i16, i16* %58, i64 %71
  %73 = shl nuw i64 %65, 1
  %74 = ashr exact i64 %73, 1
  %75 = ptrtoint i16* %72 to i64
  %76 = ptrtoint i16* %58 to i64
  %77 = shl nuw i64 %71, 1
  %78 = ashr exact i64 %77, 1
  %79 = icmp slt i64 %78, %74
  br i1 %79, label %119, label %80

80:                                               ; preds = %68
  %81 = load i16, i16* %64, align 2
  br label %82

82:                                               ; preds = %111, %80
  %83 = phi i64 [ %78, %80 ], [ %115, %111 ]
  %84 = phi i16* [ %58, %80 ], [ %112, %111 ]
  %85 = sub nsw i64 %83, %74
  %86 = add nsw i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %82, %93
  %89 = phi i64 [ %95, %93 ], [ %86, %82 ]
  %90 = phi i16* [ %94, %93 ], [ %84, %82 ]
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, %81
  br i1 %92, label %97, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i16, i16* %90, i64 1
  %95 = add i64 %89, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %119, label %88

97:                                               ; preds = %88
  %98 = icmp eq i16* %90, null
  br i1 %98, label %119, label %99

99:                                               ; preds = %97, %106
  %100 = phi i16* [ %104, %106 ], [ %90, %97 ]
  %101 = phi i16* [ %107, %106 ], [ %64, %97 ]
  %102 = phi i64 [ %103, %106 ], [ %74, %97 ]
  %103 = add i64 %102, -1
  %104 = getelementptr inbounds i16, i16* %100, i64 1
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds i16, i16* %101, i64 1
  %108 = load i16, i16* %104, align 2
  %109 = load i16, i16* %107, align 2
  %110 = icmp eq i16 %109, %108
  br i1 %110, label %99, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds i16, i16* %90, i64 1
  %113 = ptrtoint i16* %112 to i64
  %114 = sub i64 %75, %113
  %115 = ashr exact i64 %114, 1
  %116 = icmp slt i64 %115, %74
  br i1 %116, label %119, label %82

117:                                              ; preds = %99
  %118 = ptrtoint i16* %90 to i64
  br label %119

119:                                              ; preds = %111, %97, %82, %93, %117, %68
  %120 = phi i64 [ %118, %117 ], [ %75, %68 ], [ %75, %93 ], [ %75, %82 ], [ %75, %97 ], [ %75, %111 ]
  %121 = phi i16* [ %90, %117 ], [ %72, %68 ], [ %72, %93 ], [ %72, %82 ], [ %72, %97 ], [ %72, %111 ]
  %122 = icmp eq i16* %121, %72
  %123 = sub i64 %120, %76
  %124 = ashr exact i64 %123, 1
  %125 = select i1 %122, i64 -1, i64 %124
  br label %126

126:                                              ; preds = %119, %54
  %127 = phi i64 [ 0, %54 ], [ %125, %119 ]
  %128 = icmp eq i64 %127, -1
  br i1 %56, label %129, label %130

129:                                              ; preds = %126
  call void @_ZdlPv(i8* %67) #18
  br label %130

130:                                              ; preds = %129, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %128, label %149, label %131

131:                                              ; preds = %130, %43
  %132 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %12, %class.GURL* nonnull dereferenceable(120) %5)
  %133 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 4
  %134 = load %class.CookieTreeSessionStoragesNode*, %class.CookieTreeSessionStoragesNode** %133, align 8
  %135 = icmp eq %class.CookieTreeSessionStoragesNode* %134, null
  br i1 %135, label %136, label %143

136:                                              ; preds = %131
  %137 = call i8* @_Znwm(i64 64) #18
  %138 = bitcast i8* %137 to %class.CookieTreeSessionStoragesNode*
  call void @_ZN29CookieTreeSessionStoragesNodeC2Ev(%class.CookieTreeSessionStoragesNode* nonnull %138) #17
  %139 = bitcast %class.CookieTreeSessionStoragesNode** %133 to i8**
  store i8* %137, i8** %139, align 8
  %140 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 0
  %141 = bitcast i8* %137 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %140, %class.CookieTreeNode* nonnull %141) #17
  %142 = load %class.CookieTreeSessionStoragesNode*, %class.CookieTreeSessionStoragesNode** %133, align 8
  br label %143

143:                                              ; preds = %131, %136
  %144 = phi %class.CookieTreeSessionStoragesNode* [ %142, %136 ], [ %134, %131 ]
  %145 = call i8* @_Znwm(i64 72) #18
  %146 = bitcast i8* %145 to %class.CookieTreeSessionStorageNode*
  call void @_ZN28CookieTreeSessionStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeSessionStorageNode* nonnull %146, %"struct.std::__1::__list_node_base"* %44) #17
  %147 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %144, i64 0, i32 0
  %148 = bitcast i8* %145 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %147, %class.CookieTreeNode* nonnull %148) #17
  br label %149

149:                                              ; preds = %130, %143
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %31) #17
  %150 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %151 = bitcast %"struct.std::__1::__list_node_base"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = inttoptr i64 %152 to %"struct.std::__1::__list_node_base"*
  %154 = icmp eq %"struct.std::__1::__list_node_base"* %27, %153
  br i1 %154, label %155, label %43

155:                                              ; preds = %149, %23, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel30PopulateAppCacheInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string.13", align 8
  %7 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %8 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %9 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %8, align 8
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %9, align 8
  %11 = tail call %class.CookieTreeNode* %10(%"class.ui::TreeNodeModel"* %7) #17
  %12 = bitcast %class.CookieTreeNode* %11 to %class.CookieTreeRootNode*
  %13 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %155, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %22 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %21, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %22) #17
  store i8 1, i8* %17, align 8
  br label %23

23:                                               ; preds = %16, %20
  %24 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 13, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 13, i32 0, i32 0
  %28 = inttoptr i64 %26 to %"struct.std::__1::__list_node_base"*
  %29 = icmp eq %"struct.std::__1::__list_node_base"* %27, %28
  br i1 %29, label %155, label %30

30:                                               ; preds = %23
  %31 = bitcast %class.GURL* %5 to i8*
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %6 to i8*
  %36 = bitcast %"class.std::__1::basic_string.13"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string.13"* %6 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %42 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %43

43:                                               ; preds = %30, %149
  %44 = phi %"struct.std::__1::__list_node_base"* [ %28, %30 ], [ %153, %149 ]
  %45 = phi i64 [ %26, %30 ], [ %152, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %31) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 120, i1 false)
  %46 = inttoptr i64 %45 to %"struct.std::__1::__list_node.827"*
  %47 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %46, i64 0, i32 1, i32 0
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %5, %"class.url::Origin"* %47) #17
  %48 = load i8, i8* %33, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %34, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %131, label %54

54:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %6, %class.GURL* nonnull dereferenceable(120) %5)
  %55 = load i8, i8* %37, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i16*, i16** %38, align 8
  %58 = select i1 %56, i16* %57, i16* %39
  %59 = load i8, i8* %33, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i16*, i16** %40, align 8
  %62 = load i64, i64* %34, align 8
  %63 = zext i8 %59 to i64
  %64 = select i1 %60, i16* %61, i16* %41
  %65 = select i1 %60, i64 %62, i64 %63
  %66 = icmp eq i64 %65, 0
  %67 = bitcast i16* %57 to i8*
  br i1 %66, label %126, label %68

68:                                               ; preds = %54
  %69 = load i64, i64* %42, align 8
  %70 = zext i8 %55 to i64
  %71 = select i1 %56, i64 %69, i64 %70
  %72 = getelementptr inbounds i16, i16* %58, i64 %71
  %73 = shl nuw i64 %65, 1
  %74 = ashr exact i64 %73, 1
  %75 = ptrtoint i16* %72 to i64
  %76 = ptrtoint i16* %58 to i64
  %77 = shl nuw i64 %71, 1
  %78 = ashr exact i64 %77, 1
  %79 = icmp slt i64 %78, %74
  br i1 %79, label %119, label %80

80:                                               ; preds = %68
  %81 = load i16, i16* %64, align 2
  br label %82

82:                                               ; preds = %111, %80
  %83 = phi i64 [ %78, %80 ], [ %115, %111 ]
  %84 = phi i16* [ %58, %80 ], [ %112, %111 ]
  %85 = sub nsw i64 %83, %74
  %86 = add nsw i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %82, %93
  %89 = phi i64 [ %95, %93 ], [ %86, %82 ]
  %90 = phi i16* [ %94, %93 ], [ %84, %82 ]
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, %81
  br i1 %92, label %97, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i16, i16* %90, i64 1
  %95 = add i64 %89, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %119, label %88

97:                                               ; preds = %88
  %98 = icmp eq i16* %90, null
  br i1 %98, label %119, label %99

99:                                               ; preds = %97, %106
  %100 = phi i16* [ %104, %106 ], [ %90, %97 ]
  %101 = phi i16* [ %107, %106 ], [ %64, %97 ]
  %102 = phi i64 [ %103, %106 ], [ %74, %97 ]
  %103 = add i64 %102, -1
  %104 = getelementptr inbounds i16, i16* %100, i64 1
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds i16, i16* %101, i64 1
  %108 = load i16, i16* %104, align 2
  %109 = load i16, i16* %107, align 2
  %110 = icmp eq i16 %109, %108
  br i1 %110, label %99, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds i16, i16* %90, i64 1
  %113 = ptrtoint i16* %112 to i64
  %114 = sub i64 %75, %113
  %115 = ashr exact i64 %114, 1
  %116 = icmp slt i64 %115, %74
  br i1 %116, label %119, label %82

117:                                              ; preds = %99
  %118 = ptrtoint i16* %90 to i64
  br label %119

119:                                              ; preds = %111, %97, %82, %93, %117, %68
  %120 = phi i64 [ %118, %117 ], [ %75, %68 ], [ %75, %93 ], [ %75, %82 ], [ %75, %97 ], [ %75, %111 ]
  %121 = phi i16* [ %90, %117 ], [ %72, %68 ], [ %72, %93 ], [ %72, %82 ], [ %72, %97 ], [ %72, %111 ]
  %122 = icmp eq i16* %121, %72
  %123 = sub i64 %120, %76
  %124 = ashr exact i64 %123, 1
  %125 = select i1 %122, i64 -1, i64 %124
  br label %126

126:                                              ; preds = %119, %54
  %127 = phi i64 [ 0, %54 ], [ %125, %119 ]
  %128 = icmp eq i64 %127, -1
  br i1 %56, label %129, label %130

129:                                              ; preds = %126
  call void @_ZdlPv(i8* %67) #18
  br label %130

130:                                              ; preds = %129, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %128, label %149, label %131

131:                                              ; preds = %130, %43
  %132 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %12, %class.GURL* nonnull dereferenceable(120) %5)
  %133 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 5
  %134 = load %class.CookieTreeAppCachesNode*, %class.CookieTreeAppCachesNode** %133, align 8
  %135 = icmp eq %class.CookieTreeAppCachesNode* %134, null
  br i1 %135, label %136, label %143

136:                                              ; preds = %131
  %137 = call i8* @_Znwm(i64 64) #18
  %138 = bitcast i8* %137 to %class.CookieTreeAppCachesNode*
  call void @_ZN23CookieTreeAppCachesNodeC2Ev(%class.CookieTreeAppCachesNode* nonnull %138) #17
  %139 = bitcast %class.CookieTreeAppCachesNode** %133 to i8**
  store i8* %137, i8** %139, align 8
  %140 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 0
  %141 = bitcast i8* %137 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %140, %class.CookieTreeNode* nonnull %141) #17
  %142 = load %class.CookieTreeAppCachesNode*, %class.CookieTreeAppCachesNode** %133, align 8
  br label %143

143:                                              ; preds = %131, %136
  %144 = phi %class.CookieTreeAppCachesNode* [ %142, %136 ], [ %134, %131 ]
  %145 = call i8* @_Znwm(i64 72) #18
  %146 = bitcast i8* %145 to %class.CookieTreeAppCacheNode*
  call void @_ZN22CookieTreeAppCacheNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeAppCacheNode* nonnull %146, %"struct.std::__1::__list_node_base"* %44) #17
  %147 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %144, i64 0, i32 0, i32 0
  %148 = bitcast i8* %145 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %147, %class.CookieTreeNode* nonnull %148) #17
  br label %149

149:                                              ; preds = %130, %143
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %31) #17
  %150 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %151 = bitcast %"struct.std::__1::__list_node_base"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = inttoptr i64 %152 to %"struct.std::__1::__list_node_base"*
  %154 = icmp eq %"struct.std::__1::__list_node_base"* %27, %153
  br i1 %154, label %155, label %43

155:                                              ; preds = %149, %23, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel31PopulateIndexedDBInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.13", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %class.GURL, align 8
  %8 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %9 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %9, align 8
  %11 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %10, align 8
  %12 = tail call %class.CookieTreeNode* %11(%"class.ui::TreeNodeModel"* %8) #17
  %13 = bitcast %class.CookieTreeNode* %12 to %class.CookieTreeRootNode*
  %14 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %157, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %23 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %22, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %23) #17
  store i8 1, i8* %18, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 18, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 18, i32 0, i32 0
  %29 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %28, %29
  br i1 %30, label %157, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  %36 = bitcast %class.GURL* %6 to i8*
  %37 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %41 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %43 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %class.GURL* %7 to i8*
  br label %45

45:                                               ; preds = %31, %151
  %46 = phi %"struct.std::__1::__list_node_base"* [ %29, %31 ], [ %155, %151 ]
  %47 = phi i64 [ %27, %31 ], [ %154, %151 ]
  %48 = inttoptr i64 %47 to %"struct.std::__1::__list_node.827"*
  %49 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %33, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %34, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %133, label %56

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %36) #17
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %6, %"class.url::Origin"* %49) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %5, %class.GURL* nonnull dereferenceable(120) %6)
  %57 = load i8, i8* %38, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i16*, i16** %39, align 8
  %60 = select i1 %58, i16* %59, i16* %40
  %61 = load i8, i8* %33, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i16*, i16** %41, align 8
  %64 = load i64, i64* %34, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i16* %63, i16* %42
  %67 = select i1 %62, i64 %64, i64 %65
  %68 = icmp eq i64 %67, 0
  %69 = bitcast i16* %59 to i8*
  br i1 %68, label %128, label %70

70:                                               ; preds = %56
  %71 = load i64, i64* %43, align 8
  %72 = zext i8 %57 to i64
  %73 = select i1 %58, i64 %71, i64 %72
  %74 = getelementptr inbounds i16, i16* %60, i64 %73
  %75 = shl nuw i64 %67, 1
  %76 = ashr exact i64 %75, 1
  %77 = ptrtoint i16* %74 to i64
  %78 = ptrtoint i16* %60 to i64
  %79 = shl nuw i64 %73, 1
  %80 = ashr exact i64 %79, 1
  %81 = icmp slt i64 %80, %76
  br i1 %81, label %121, label %82

82:                                               ; preds = %70
  %83 = load i16, i16* %66, align 2
  br label %84

84:                                               ; preds = %113, %82
  %85 = phi i64 [ %80, %82 ], [ %117, %113 ]
  %86 = phi i16* [ %60, %82 ], [ %114, %113 ]
  %87 = sub nsw i64 %85, %76
  %88 = add nsw i64 %87, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %121, label %90

90:                                               ; preds = %84, %95
  %91 = phi i64 [ %97, %95 ], [ %88, %84 ]
  %92 = phi i16* [ %96, %95 ], [ %86, %84 ]
  %93 = load i16, i16* %92, align 2
  %94 = icmp eq i16 %93, %83
  br i1 %94, label %99, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i16, i16* %92, i64 1
  %97 = add i64 %91, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %121, label %90

99:                                               ; preds = %90
  %100 = icmp eq i16* %92, null
  br i1 %100, label %121, label %101

101:                                              ; preds = %99, %108
  %102 = phi i16* [ %106, %108 ], [ %92, %99 ]
  %103 = phi i16* [ %109, %108 ], [ %66, %99 ]
  %104 = phi i64 [ %105, %108 ], [ %76, %99 ]
  %105 = add i64 %104, -1
  %106 = getelementptr inbounds i16, i16* %102, i64 1
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %119, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds i16, i16* %103, i64 1
  %110 = load i16, i16* %106, align 2
  %111 = load i16, i16* %109, align 2
  %112 = icmp eq i16 %111, %110
  br i1 %112, label %101, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds i16, i16* %92, i64 1
  %115 = ptrtoint i16* %114 to i64
  %116 = sub i64 %77, %115
  %117 = ashr exact i64 %116, 1
  %118 = icmp slt i64 %117, %76
  br i1 %118, label %121, label %84

119:                                              ; preds = %101
  %120 = ptrtoint i16* %92 to i64
  br label %121

121:                                              ; preds = %113, %99, %84, %95, %119, %70
  %122 = phi i64 [ %120, %119 ], [ %77, %70 ], [ %77, %95 ], [ %77, %84 ], [ %77, %99 ], [ %77, %113 ]
  %123 = phi i16* [ %92, %119 ], [ %74, %70 ], [ %74, %95 ], [ %74, %84 ], [ %74, %99 ], [ %74, %113 ]
  %124 = icmp eq i16* %123, %74
  %125 = sub i64 %122, %78
  %126 = ashr exact i64 %125, 1
  %127 = select i1 %124, i64 -1, i64 %126
  br label %128

128:                                              ; preds = %121, %56
  %129 = phi i64 [ 0, %56 ], [ %127, %121 ]
  %130 = icmp eq i64 %129, -1
  br i1 %58, label %131, label %132

131:                                              ; preds = %128
  call void @_ZdlPv(i8* %69) #18
  br label %132

132:                                              ; preds = %131, %128
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %36) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %130, label %151, label %133

133:                                              ; preds = %132, %45
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %44) #17
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %7, %"class.url::Origin"* %49) #17
  %134 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %13, %class.GURL* nonnull dereferenceable(120) %7)
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %44) #17
  %135 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %134, i64 0, i32 6
  %136 = load %class.CookieTreeIndexedDBsNode*, %class.CookieTreeIndexedDBsNode** %135, align 8
  %137 = icmp eq %class.CookieTreeIndexedDBsNode* %136, null
  br i1 %137, label %138, label %145

138:                                              ; preds = %133
  %139 = call i8* @_Znwm(i64 64) #18
  %140 = bitcast i8* %139 to %class.CookieTreeIndexedDBsNode*
  call void @_ZN24CookieTreeIndexedDBsNodeC2Ev(%class.CookieTreeIndexedDBsNode* nonnull %140) #17
  %141 = bitcast %class.CookieTreeIndexedDBsNode** %135 to i8**
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %134, i64 0, i32 0
  %143 = bitcast i8* %139 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %142, %class.CookieTreeNode* nonnull %143) #17
  %144 = load %class.CookieTreeIndexedDBsNode*, %class.CookieTreeIndexedDBsNode** %135, align 8
  br label %145

145:                                              ; preds = %133, %138
  %146 = phi %class.CookieTreeIndexedDBsNode* [ %144, %138 ], [ %136, %133 ]
  %147 = call i8* @_Znwm(i64 72) #18
  %148 = bitcast i8* %147 to %class.CookieTreeIndexedDBNode*
  call void @_ZN23CookieTreeIndexedDBNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeIndexedDBNode* nonnull %148, %"struct.std::__1::__list_node_base"* %46) #17
  %149 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %146, i64 0, i32 0, i32 0
  %150 = bitcast i8* %147 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %149, %class.CookieTreeNode* nonnull %150) #17
  br label %151

151:                                              ; preds = %132, %145
  %152 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %153 = bitcast %"struct.std::__1::__list_node_base"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = inttoptr i64 %154 to %"struct.std::__1::__list_node_base"*
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %28, %155
  br i1 %156, label %157, label %45

157:                                              ; preds = %151, %24, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel32PopulateFileSystemInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string.13", align 8
  %7 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %8 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %9 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %8, align 8
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %9, align 8
  %11 = tail call %class.CookieTreeNode* %10(%"class.ui::TreeNodeModel"* %7) #17
  %12 = bitcast %class.CookieTreeNode* %11 to %class.CookieTreeRootNode*
  %13 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %155, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %22 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %21, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %22) #17
  store i8 1, i8* %17, align 8
  br label %23

23:                                               ; preds = %16, %20
  %24 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 19, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base.282"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 19, i32 0, i32 0
  %28 = inttoptr i64 %26 to %"struct.std::__1::__list_node_base.282"*
  %29 = icmp eq %"struct.std::__1::__list_node_base.282"* %27, %28
  br i1 %29, label %155, label %30

30:                                               ; preds = %23
  %31 = bitcast %class.GURL* %5 to i8*
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %6 to i8*
  %36 = bitcast %"class.std::__1::basic_string.13"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string.13"* %6 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %42 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %43

43:                                               ; preds = %30, %149
  %44 = phi %"struct.std::__1::__list_node_base.282"* [ %28, %30 ], [ %153, %149 ]
  %45 = phi i64 [ %26, %30 ], [ %152, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %31) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 120, i1 false)
  %46 = inttoptr i64 %45 to %"struct.std::__1::__list_node.828"*
  %47 = getelementptr inbounds %"struct.std::__1::__list_node.828", %"struct.std::__1::__list_node.828"* %46, i64 0, i32 1, i32 0
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %5, %"class.url::Origin"* %47) #17
  %48 = load i8, i8* %33, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %34, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %131, label %54

54:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %6, %class.GURL* nonnull dereferenceable(120) %5)
  %55 = load i8, i8* %37, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i16*, i16** %38, align 8
  %58 = select i1 %56, i16* %57, i16* %39
  %59 = load i8, i8* %33, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i16*, i16** %40, align 8
  %62 = load i64, i64* %34, align 8
  %63 = zext i8 %59 to i64
  %64 = select i1 %60, i16* %61, i16* %41
  %65 = select i1 %60, i64 %62, i64 %63
  %66 = icmp eq i64 %65, 0
  %67 = bitcast i16* %57 to i8*
  br i1 %66, label %126, label %68

68:                                               ; preds = %54
  %69 = load i64, i64* %42, align 8
  %70 = zext i8 %55 to i64
  %71 = select i1 %56, i64 %69, i64 %70
  %72 = getelementptr inbounds i16, i16* %58, i64 %71
  %73 = shl nuw i64 %65, 1
  %74 = ashr exact i64 %73, 1
  %75 = ptrtoint i16* %72 to i64
  %76 = ptrtoint i16* %58 to i64
  %77 = shl nuw i64 %71, 1
  %78 = ashr exact i64 %77, 1
  %79 = icmp slt i64 %78, %74
  br i1 %79, label %119, label %80

80:                                               ; preds = %68
  %81 = load i16, i16* %64, align 2
  br label %82

82:                                               ; preds = %111, %80
  %83 = phi i64 [ %78, %80 ], [ %115, %111 ]
  %84 = phi i16* [ %58, %80 ], [ %112, %111 ]
  %85 = sub nsw i64 %83, %74
  %86 = add nsw i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %82, %93
  %89 = phi i64 [ %95, %93 ], [ %86, %82 ]
  %90 = phi i16* [ %94, %93 ], [ %84, %82 ]
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, %81
  br i1 %92, label %97, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i16, i16* %90, i64 1
  %95 = add i64 %89, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %119, label %88

97:                                               ; preds = %88
  %98 = icmp eq i16* %90, null
  br i1 %98, label %119, label %99

99:                                               ; preds = %97, %106
  %100 = phi i16* [ %104, %106 ], [ %90, %97 ]
  %101 = phi i16* [ %107, %106 ], [ %64, %97 ]
  %102 = phi i64 [ %103, %106 ], [ %74, %97 ]
  %103 = add i64 %102, -1
  %104 = getelementptr inbounds i16, i16* %100, i64 1
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds i16, i16* %101, i64 1
  %108 = load i16, i16* %104, align 2
  %109 = load i16, i16* %107, align 2
  %110 = icmp eq i16 %109, %108
  br i1 %110, label %99, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds i16, i16* %90, i64 1
  %113 = ptrtoint i16* %112 to i64
  %114 = sub i64 %75, %113
  %115 = ashr exact i64 %114, 1
  %116 = icmp slt i64 %115, %74
  br i1 %116, label %119, label %82

117:                                              ; preds = %99
  %118 = ptrtoint i16* %90 to i64
  br label %119

119:                                              ; preds = %111, %97, %82, %93, %117, %68
  %120 = phi i64 [ %118, %117 ], [ %75, %68 ], [ %75, %93 ], [ %75, %82 ], [ %75, %97 ], [ %75, %111 ]
  %121 = phi i16* [ %90, %117 ], [ %72, %68 ], [ %72, %93 ], [ %72, %82 ], [ %72, %97 ], [ %72, %111 ]
  %122 = icmp eq i16* %121, %72
  %123 = sub i64 %120, %76
  %124 = ashr exact i64 %123, 1
  %125 = select i1 %122, i64 -1, i64 %124
  br label %126

126:                                              ; preds = %119, %54
  %127 = phi i64 [ 0, %54 ], [ %125, %119 ]
  %128 = icmp eq i64 %127, -1
  br i1 %56, label %129, label %130

129:                                              ; preds = %126
  call void @_ZdlPv(i8* %67) #18
  br label %130

130:                                              ; preds = %129, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %128, label %149, label %131

131:                                              ; preds = %130, %43
  %132 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %12, %class.GURL* nonnull dereferenceable(120) %5)
  %133 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 7
  %134 = load %class.CookieTreeFileSystemsNode*, %class.CookieTreeFileSystemsNode** %133, align 8
  %135 = icmp eq %class.CookieTreeFileSystemsNode* %134, null
  br i1 %135, label %136, label %143

136:                                              ; preds = %131
  %137 = call i8* @_Znwm(i64 64) #18
  %138 = bitcast i8* %137 to %class.CookieTreeFileSystemsNode*
  call void @_ZN25CookieTreeFileSystemsNodeC2Ev(%class.CookieTreeFileSystemsNode* nonnull %138) #17
  %139 = bitcast %class.CookieTreeFileSystemsNode** %133 to i8**
  store i8* %137, i8** %139, align 8
  %140 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 0
  %141 = bitcast i8* %137 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %140, %class.CookieTreeNode* nonnull %141) #17
  %142 = load %class.CookieTreeFileSystemsNode*, %class.CookieTreeFileSystemsNode** %133, align 8
  br label %143

143:                                              ; preds = %131, %136
  %144 = phi %class.CookieTreeFileSystemsNode* [ %142, %136 ], [ %134, %131 ]
  %145 = call i8* @_Znwm(i64 72) #18
  %146 = bitcast i8* %145 to %class.CookieTreeFileSystemNode*
  call void @_ZN24CookieTreeFileSystemNodeC2ENSt3__115__list_iteratorIN13browsing_data16FileSystemHelper14FileSystemInfoEPvEE(%class.CookieTreeFileSystemNode* nonnull %146, %"struct.std::__1::__list_node_base.282"* %44) #17
  %147 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %144, i64 0, i32 0, i32 0
  %148 = bitcast i8* %145 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %147, %class.CookieTreeNode* nonnull %148) #17
  br label %149

149:                                              ; preds = %130, %143
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %31) #17
  %150 = getelementptr inbounds %"struct.std::__1::__list_node_base.282", %"struct.std::__1::__list_node_base.282"* %44, i64 0, i32 1
  %151 = bitcast %"struct.std::__1::__list_node_base.282"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = inttoptr i64 %152 to %"struct.std::__1::__list_node_base.282"*
  %154 = icmp eq %"struct.std::__1::__list_node_base.282"* %27, %153
  br i1 %154, label %155, label %43

155:                                              ; preds = %149, %23, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel27PopulateQuotaInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.13", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %9 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %9, align 8
  %11 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %10, align 8
  %12 = tail call %class.CookieTreeNode* %11(%"class.ui::TreeNodeModel"* %8) #17
  %13 = bitcast %class.CookieTreeNode* %12 to %class.CookieTreeRootNode*
  %14 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %182, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %23 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %22, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %23) #17
  store i8 1, i8* %18, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 20, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base.289"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 20, i32 0, i32 0
  %29 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base.289"*
  %30 = icmp eq %"struct.std::__1::__list_node_base.289"* %28, %29
  br i1 %30, label %182, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  %36 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %42 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %class.GURL* %6 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %49

49:                                               ; preds = %31, %176
  %50 = phi %"struct.std::__1::__list_node_base.289"* [ %29, %31 ], [ %180, %176 ]
  %51 = phi i64 [ %27, %31 ], [ %179, %176 ]
  %52 = load i8, i8* %33, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i64, i64* %34, align 8
  %55 = zext i8 %52 to i64
  %56 = select i1 %53, i64 %54, i64 %55
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = inttoptr i64 %51 to %"struct.std::__1::__list_node"*
  br label %151

60:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  %61 = inttoptr i64 %51 to %"struct.std::__1::__list_node"*
  %62 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 1, i32 0
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %70 = select i1 %66, i8* %68, i8* %69
  %71 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %61, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %65 to i64
  %74 = select i1 %66, i64 %72, i64 %73
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %5, i8* %70, i64 %74) #17
  %75 = load i8, i8* %37, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i16*, i16** %38, align 8
  %78 = select i1 %76, i16* %77, i16* %39
  %79 = load i8, i8* %33, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i16*, i16** %40, align 8
  %82 = load i64, i64* %34, align 8
  %83 = zext i8 %79 to i64
  %84 = select i1 %80, i16* %81, i16* %41
  %85 = select i1 %80, i64 %82, i64 %83
  %86 = icmp eq i64 %85, 0
  %87 = bitcast i16* %77 to i8*
  br i1 %86, label %146, label %88

88:                                               ; preds = %60
  %89 = load i64, i64* %42, align 8
  %90 = zext i8 %75 to i64
  %91 = select i1 %76, i64 %89, i64 %90
  %92 = getelementptr inbounds i16, i16* %78, i64 %91
  %93 = shl nuw i64 %85, 1
  %94 = ashr exact i64 %93, 1
  %95 = ptrtoint i16* %92 to i64
  %96 = ptrtoint i16* %78 to i64
  %97 = shl nuw i64 %91, 1
  %98 = ashr exact i64 %97, 1
  %99 = icmp slt i64 %98, %94
  br i1 %99, label %139, label %100

100:                                              ; preds = %88
  %101 = load i16, i16* %84, align 2
  br label %102

102:                                              ; preds = %131, %100
  %103 = phi i64 [ %98, %100 ], [ %135, %131 ]
  %104 = phi i16* [ %78, %100 ], [ %132, %131 ]
  %105 = sub nsw i64 %103, %94
  %106 = add nsw i64 %105, 1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %102, %113
  %109 = phi i64 [ %115, %113 ], [ %106, %102 ]
  %110 = phi i16* [ %114, %113 ], [ %104, %102 ]
  %111 = load i16, i16* %110, align 2
  %112 = icmp eq i16 %111, %101
  br i1 %112, label %117, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds i16, i16* %110, i64 1
  %115 = add i64 %109, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %139, label %108

117:                                              ; preds = %108
  %118 = icmp eq i16* %110, null
  br i1 %118, label %139, label %119

119:                                              ; preds = %117, %126
  %120 = phi i16* [ %124, %126 ], [ %110, %117 ]
  %121 = phi i16* [ %127, %126 ], [ %84, %117 ]
  %122 = phi i64 [ %123, %126 ], [ %94, %117 ]
  %123 = add i64 %122, -1
  %124 = getelementptr inbounds i16, i16* %120, i64 1
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %137, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds i16, i16* %121, i64 1
  %128 = load i16, i16* %124, align 2
  %129 = load i16, i16* %127, align 2
  %130 = icmp eq i16 %129, %128
  br i1 %130, label %119, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds i16, i16* %110, i64 1
  %133 = ptrtoint i16* %132 to i64
  %134 = sub i64 %95, %133
  %135 = ashr exact i64 %134, 1
  %136 = icmp slt i64 %135, %94
  br i1 %136, label %139, label %102

137:                                              ; preds = %119
  %138 = ptrtoint i16* %110 to i64
  br label %139

139:                                              ; preds = %131, %117, %102, %113, %137, %88
  %140 = phi i64 [ %138, %137 ], [ %95, %88 ], [ %95, %113 ], [ %95, %102 ], [ %95, %117 ], [ %95, %131 ]
  %141 = phi i16* [ %110, %137 ], [ %92, %88 ], [ %92, %113 ], [ %92, %102 ], [ %92, %117 ], [ %92, %131 ]
  %142 = icmp eq i16* %141, %92
  %143 = sub i64 %140, %96
  %144 = ashr exact i64 %143, 1
  %145 = select i1 %142, i64 -1, i64 %144
  br label %146

146:                                              ; preds = %139, %60
  %147 = phi i64 [ 0, %60 ], [ %145, %139 ]
  %148 = icmp eq i64 %147, -1
  br i1 %76, label %149, label %150

149:                                              ; preds = %146
  call void @_ZdlPv(i8* %87) #18
  br label %150

150:                                              ; preds = %149, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %148, label %176, label %151

151:                                              ; preds = %58, %150
  %152 = phi %"struct.std::__1::__list_node"* [ %59, %58 ], [ %61, %150 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %43) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #17
  %153 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %152, i64 0, i32 1, i32 0
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %153) #17
  %154 = load i8, i8* %46, align 1
  %155 = icmp slt i8 %154, 0
  %156 = load i8*, i8** %47, align 8
  %157 = select i1 %155, i8* %156, i8* %44
  %158 = load i64, i64* %48, align 8
  %159 = zext i8 %154 to i64
  %160 = select i1 %155, i64 %158, i64 %159
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %6, i8* %157, i64 %160) #17
  %161 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %13, %class.GURL* nonnull dereferenceable(120) %6)
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #17
  %162 = load i8, i8* %46, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %151
  %165 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %165) #18
  br label %166

166:                                              ; preds = %151, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %43) #17
  %167 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %161, i64 0, i32 8
  %168 = load %class.CookieTreeQuotaNode*, %class.CookieTreeQuotaNode** %167, align 8
  %169 = icmp eq %class.CookieTreeQuotaNode* %168, null
  br i1 %169, label %170, label %176

170:                                              ; preds = %166
  %171 = call i8* @_Znwm(i64 72) #18
  %172 = bitcast i8* %171 to %class.CookieTreeQuotaNode*
  call void @_ZN19CookieTreeQuotaNodeC2ENSt3__115__list_iteratorIN23BrowsingDataQuotaHelper9QuotaInfoEPvEE(%class.CookieTreeQuotaNode* nonnull %172, %"struct.std::__1::__list_node_base.289"* %50) #17
  %173 = bitcast %class.CookieTreeQuotaNode** %167 to i8**
  store i8* %171, i8** %173, align 8
  %174 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %161, i64 0, i32 0
  %175 = bitcast i8* %171 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %174, %class.CookieTreeNode* nonnull %175) #17
  br label %176

176:                                              ; preds = %150, %170, %166
  %177 = getelementptr inbounds %"struct.std::__1::__list_node_base.289", %"struct.std::__1::__list_node_base.289"* %50, i64 0, i32 1
  %178 = bitcast %"struct.std::__1::__list_node_base.289"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = inttoptr i64 %179 to %"struct.std::__1::__list_node_base.289"*
  %181 = icmp eq %"struct.std::__1::__list_node_base.289"* %28, %180
  br i1 %181, label %182, label %49

182:                                              ; preds = %176, %24, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel40PopulateServiceWorkerUsageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.13", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %class.GURL, align 8
  %8 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %9 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %9, align 8
  %11 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %10, align 8
  %12 = tail call %class.CookieTreeNode* %11(%"class.ui::TreeNodeModel"* %8) #17
  %13 = bitcast %class.CookieTreeNode* %12 to %class.CookieTreeRootNode*
  %14 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %157, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %23 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %22, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %23) #17
  store i8 1, i8* %18, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 21, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 21, i32 0, i32 0
  %29 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %28, %29
  br i1 %30, label %157, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  %36 = bitcast %class.GURL* %6 to i8*
  %37 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %41 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %43 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %class.GURL* %7 to i8*
  br label %45

45:                                               ; preds = %31, %151
  %46 = phi %"struct.std::__1::__list_node_base"* [ %29, %31 ], [ %155, %151 ]
  %47 = phi i64 [ %27, %31 ], [ %154, %151 ]
  %48 = inttoptr i64 %47 to %"struct.std::__1::__list_node.827"*
  %49 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %33, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %34, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %133, label %56

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %36) #17
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %6, %"class.url::Origin"* %49) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %5, %class.GURL* nonnull dereferenceable(120) %6)
  %57 = load i8, i8* %38, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i16*, i16** %39, align 8
  %60 = select i1 %58, i16* %59, i16* %40
  %61 = load i8, i8* %33, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i16*, i16** %41, align 8
  %64 = load i64, i64* %34, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i16* %63, i16* %42
  %67 = select i1 %62, i64 %64, i64 %65
  %68 = icmp eq i64 %67, 0
  %69 = bitcast i16* %59 to i8*
  br i1 %68, label %128, label %70

70:                                               ; preds = %56
  %71 = load i64, i64* %43, align 8
  %72 = zext i8 %57 to i64
  %73 = select i1 %58, i64 %71, i64 %72
  %74 = getelementptr inbounds i16, i16* %60, i64 %73
  %75 = shl nuw i64 %67, 1
  %76 = ashr exact i64 %75, 1
  %77 = ptrtoint i16* %74 to i64
  %78 = ptrtoint i16* %60 to i64
  %79 = shl nuw i64 %73, 1
  %80 = ashr exact i64 %79, 1
  %81 = icmp slt i64 %80, %76
  br i1 %81, label %121, label %82

82:                                               ; preds = %70
  %83 = load i16, i16* %66, align 2
  br label %84

84:                                               ; preds = %113, %82
  %85 = phi i64 [ %80, %82 ], [ %117, %113 ]
  %86 = phi i16* [ %60, %82 ], [ %114, %113 ]
  %87 = sub nsw i64 %85, %76
  %88 = add nsw i64 %87, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %121, label %90

90:                                               ; preds = %84, %95
  %91 = phi i64 [ %97, %95 ], [ %88, %84 ]
  %92 = phi i16* [ %96, %95 ], [ %86, %84 ]
  %93 = load i16, i16* %92, align 2
  %94 = icmp eq i16 %93, %83
  br i1 %94, label %99, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i16, i16* %92, i64 1
  %97 = add i64 %91, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %121, label %90

99:                                               ; preds = %90
  %100 = icmp eq i16* %92, null
  br i1 %100, label %121, label %101

101:                                              ; preds = %99, %108
  %102 = phi i16* [ %106, %108 ], [ %92, %99 ]
  %103 = phi i16* [ %109, %108 ], [ %66, %99 ]
  %104 = phi i64 [ %105, %108 ], [ %76, %99 ]
  %105 = add i64 %104, -1
  %106 = getelementptr inbounds i16, i16* %102, i64 1
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %119, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds i16, i16* %103, i64 1
  %110 = load i16, i16* %106, align 2
  %111 = load i16, i16* %109, align 2
  %112 = icmp eq i16 %111, %110
  br i1 %112, label %101, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds i16, i16* %92, i64 1
  %115 = ptrtoint i16* %114 to i64
  %116 = sub i64 %77, %115
  %117 = ashr exact i64 %116, 1
  %118 = icmp slt i64 %117, %76
  br i1 %118, label %121, label %84

119:                                              ; preds = %101
  %120 = ptrtoint i16* %92 to i64
  br label %121

121:                                              ; preds = %113, %99, %84, %95, %119, %70
  %122 = phi i64 [ %120, %119 ], [ %77, %70 ], [ %77, %95 ], [ %77, %84 ], [ %77, %99 ], [ %77, %113 ]
  %123 = phi i16* [ %92, %119 ], [ %74, %70 ], [ %74, %95 ], [ %74, %84 ], [ %74, %99 ], [ %74, %113 ]
  %124 = icmp eq i16* %123, %74
  %125 = sub i64 %122, %78
  %126 = ashr exact i64 %125, 1
  %127 = select i1 %124, i64 -1, i64 %126
  br label %128

128:                                              ; preds = %121, %56
  %129 = phi i64 [ 0, %56 ], [ %127, %121 ]
  %130 = icmp eq i64 %129, -1
  br i1 %58, label %131, label %132

131:                                              ; preds = %128
  call void @_ZdlPv(i8* %69) #18
  br label %132

132:                                              ; preds = %131, %128
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %36) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %130, label %151, label %133

133:                                              ; preds = %132, %45
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %44) #17
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %7, %"class.url::Origin"* %49) #17
  %134 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %13, %class.GURL* nonnull dereferenceable(120) %7)
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %44) #17
  %135 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %134, i64 0, i32 9
  %136 = load %class.CookieTreeServiceWorkersNode*, %class.CookieTreeServiceWorkersNode** %135, align 8
  %137 = icmp eq %class.CookieTreeServiceWorkersNode* %136, null
  br i1 %137, label %138, label %145

138:                                              ; preds = %133
  %139 = call i8* @_Znwm(i64 64) #18
  %140 = bitcast i8* %139 to %class.CookieTreeServiceWorkersNode*
  call void @_ZN28CookieTreeServiceWorkersNodeC2Ev(%class.CookieTreeServiceWorkersNode* nonnull %140) #17
  %141 = bitcast %class.CookieTreeServiceWorkersNode** %135 to i8**
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %134, i64 0, i32 0
  %143 = bitcast i8* %139 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %142, %class.CookieTreeNode* nonnull %143) #17
  %144 = load %class.CookieTreeServiceWorkersNode*, %class.CookieTreeServiceWorkersNode** %135, align 8
  br label %145

145:                                              ; preds = %133, %138
  %146 = phi %class.CookieTreeServiceWorkersNode* [ %144, %138 ], [ %136, %133 ]
  %147 = call i8* @_Znwm(i64 72) #18
  %148 = bitcast i8* %147 to %class.CookieTreeServiceWorkerNode*
  call void @_ZN27CookieTreeServiceWorkerNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeServiceWorkerNode* nonnull %148, %"struct.std::__1::__list_node_base"* %46) #17
  %149 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %146, i64 0, i32 0, i32 0
  %150 = bitcast i8* %147 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %149, %class.CookieTreeNode* nonnull %150) #17
  br label %151

151:                                              ; preds = %132, %145
  %152 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %153 = bitcast %"struct.std::__1::__list_node_base"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = inttoptr i64 %154 to %"struct.std::__1::__list_node_base"*
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %28, %155
  br i1 %156, label %157, label %45

157:                                              ; preds = %151, %24, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel34PopulateSharedWorkerInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.13", align 8
  %6 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %7 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %8 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %7, align 8
  %9 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %8, align 8
  %10 = tail call %class.CookieTreeNode* %9(%"class.ui::TreeNodeModel"* %6) #17
  %11 = bitcast %class.CookieTreeNode* %10 to %class.CookieTreeRootNode*
  %12 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %153, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %17 = load i8, i8* %16, align 8, !range !11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %20, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %21) #17
  store i8 1, i8* %16, align 8
  br label %22

22:                                               ; preds = %15, %19
  %23 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 22, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base.296"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 22, i32 0, i32 0
  %27 = inttoptr i64 %25 to %"struct.std::__1::__list_node_base.296"*
  %28 = icmp eq %"struct.std::__1::__list_node_base.296"* %26, %27
  br i1 %28, label %153, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  %34 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %38 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %41

41:                                               ; preds = %29, %147
  %42 = phi %"struct.std::__1::__list_node_base.296"* [ %27, %29 ], [ %151, %147 ]
  %43 = phi i64 [ %25, %29 ], [ %150, %147 ]
  %44 = inttoptr i64 %43 to %"struct.std::__1::__list_node.829"*
  %45 = getelementptr inbounds %"struct.std::__1::__list_node.829", %"struct.std::__1::__list_node.829"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %31, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %32, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %129, label %52

52:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %5, %class.GURL* dereferenceable(120) %45)
  %53 = load i8, i8* %35, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i16*, i16** %36, align 8
  %56 = select i1 %54, i16* %55, i16* %37
  %57 = load i8, i8* %31, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i16*, i16** %38, align 8
  %60 = load i64, i64* %32, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i16* %59, i16* %39
  %63 = select i1 %58, i64 %60, i64 %61
  %64 = icmp eq i64 %63, 0
  %65 = bitcast i16* %55 to i8*
  br i1 %64, label %124, label %66

66:                                               ; preds = %52
  %67 = load i64, i64* %40, align 8
  %68 = zext i8 %53 to i64
  %69 = select i1 %54, i64 %67, i64 %68
  %70 = getelementptr inbounds i16, i16* %56, i64 %69
  %71 = shl nuw i64 %63, 1
  %72 = ashr exact i64 %71, 1
  %73 = ptrtoint i16* %70 to i64
  %74 = ptrtoint i16* %56 to i64
  %75 = shl nuw i64 %69, 1
  %76 = ashr exact i64 %75, 1
  %77 = icmp slt i64 %76, %72
  br i1 %77, label %117, label %78

78:                                               ; preds = %66
  %79 = load i16, i16* %62, align 2
  br label %80

80:                                               ; preds = %109, %78
  %81 = phi i64 [ %76, %78 ], [ %113, %109 ]
  %82 = phi i16* [ %56, %78 ], [ %110, %109 ]
  %83 = sub nsw i64 %81, %72
  %84 = add nsw i64 %83, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %117, label %86

86:                                               ; preds = %80, %91
  %87 = phi i64 [ %93, %91 ], [ %84, %80 ]
  %88 = phi i16* [ %92, %91 ], [ %82, %80 ]
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %89, %79
  br i1 %90, label %95, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds i16, i16* %88, i64 1
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %117, label %86

95:                                               ; preds = %86
  %96 = icmp eq i16* %88, null
  br i1 %96, label %117, label %97

97:                                               ; preds = %95, %104
  %98 = phi i16* [ %102, %104 ], [ %88, %95 ]
  %99 = phi i16* [ %105, %104 ], [ %62, %95 ]
  %100 = phi i64 [ %101, %104 ], [ %72, %95 ]
  %101 = add i64 %100, -1
  %102 = getelementptr inbounds i16, i16* %98, i64 1
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds i16, i16* %99, i64 1
  %106 = load i16, i16* %102, align 2
  %107 = load i16, i16* %105, align 2
  %108 = icmp eq i16 %107, %106
  br i1 %108, label %97, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds i16, i16* %88, i64 1
  %111 = ptrtoint i16* %110 to i64
  %112 = sub i64 %73, %111
  %113 = ashr exact i64 %112, 1
  %114 = icmp slt i64 %113, %72
  br i1 %114, label %117, label %80

115:                                              ; preds = %97
  %116 = ptrtoint i16* %88 to i64
  br label %117

117:                                              ; preds = %109, %95, %80, %91, %115, %66
  %118 = phi i64 [ %116, %115 ], [ %73, %66 ], [ %73, %91 ], [ %73, %80 ], [ %73, %95 ], [ %73, %109 ]
  %119 = phi i16* [ %88, %115 ], [ %70, %66 ], [ %70, %91 ], [ %70, %80 ], [ %70, %95 ], [ %70, %109 ]
  %120 = icmp eq i16* %119, %70
  %121 = sub i64 %118, %74
  %122 = ashr exact i64 %121, 1
  %123 = select i1 %120, i64 -1, i64 %122
  br label %124

124:                                              ; preds = %117, %52
  %125 = phi i64 [ 0, %52 ], [ %123, %117 ]
  %126 = icmp eq i64 %125, -1
  br i1 %54, label %127, label %128

127:                                              ; preds = %124
  call void @_ZdlPv(i8* %65) #18
  br label %128

128:                                              ; preds = %127, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #17
  br i1 %126, label %147, label %129

129:                                              ; preds = %128, %41
  %130 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %11, %class.GURL* dereferenceable(120) %45)
  %131 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %130, i64 0, i32 10
  %132 = load %class.CookieTreeSharedWorkersNode*, %class.CookieTreeSharedWorkersNode** %131, align 8
  %133 = icmp eq %class.CookieTreeSharedWorkersNode* %132, null
  br i1 %133, label %134, label %141

134:                                              ; preds = %129
  %135 = call i8* @_Znwm(i64 64) #18
  %136 = bitcast i8* %135 to %class.CookieTreeSharedWorkersNode*
  call void @_ZN27CookieTreeSharedWorkersNodeC2Ev(%class.CookieTreeSharedWorkersNode* nonnull %136) #17
  %137 = bitcast %class.CookieTreeSharedWorkersNode** %131 to i8**
  store i8* %135, i8** %137, align 8
  %138 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %130, i64 0, i32 0
  %139 = bitcast i8* %135 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %138, %class.CookieTreeNode* nonnull %139) #17
  %140 = load %class.CookieTreeSharedWorkersNode*, %class.CookieTreeSharedWorkersNode** %131, align 8
  br label %141

141:                                              ; preds = %129, %134
  %142 = phi %class.CookieTreeSharedWorkersNode* [ %140, %134 ], [ %132, %129 ]
  %143 = call i8* @_Znwm(i64 72) #18
  %144 = bitcast i8* %143 to %class.CookieTreeSharedWorkerNode*
  call void @_ZN26CookieTreeSharedWorkerNodeC2ENSt3__115__list_iteratorIN13browsing_data18SharedWorkerHelper16SharedWorkerInfoEPvEE(%class.CookieTreeSharedWorkerNode* nonnull %144, %"struct.std::__1::__list_node_base.296"* %42) #17
  %145 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %142, i64 0, i32 0
  %146 = bitcast i8* %143 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %145, %class.CookieTreeNode* nonnull %146) #17
  br label %147

147:                                              ; preds = %128, %141
  %148 = getelementptr inbounds %"struct.std::__1::__list_node_base.296", %"struct.std::__1::__list_node_base.296"* %42, i64 0, i32 1
  %149 = bitcast %"struct.std::__1::__list_node_base.296"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = inttoptr i64 %150 to %"struct.std::__1::__list_node_base.296"*
  %152 = icmp eq %"struct.std::__1::__list_node_base.296"* %26, %151
  br i1 %152, label %153, label %41

153:                                              ; preds = %147, %22, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel39PopulateCacheStorageUsageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.13", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %class.GURL, align 8
  %8 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %9 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %9, align 8
  %11 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %10, align 8
  %12 = tail call %class.CookieTreeNode* %11(%"class.ui::TreeNodeModel"* %8) #17
  %13 = bitcast %class.CookieTreeNode* %12 to %class.CookieTreeRootNode*
  %14 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %157, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %23 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %22, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %23) #17
  store i8 1, i8* %18, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 23, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 23, i32 0, i32 0
  %29 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %28, %29
  br i1 %30, label %157, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %5 to i8*
  %36 = bitcast %class.GURL* %6 to i8*
  %37 = bitcast %"class.std::__1::basic_string.13"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::basic_string.13"* %5 to i16*
  %41 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %43 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %class.GURL* %7 to i8*
  br label %45

45:                                               ; preds = %31, %151
  %46 = phi %"struct.std::__1::__list_node_base"* [ %29, %31 ], [ %155, %151 ]
  %47 = phi i64 [ %27, %31 ], [ %154, %151 ]
  %48 = inttoptr i64 %47 to %"struct.std::__1::__list_node.827"*
  %49 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %33, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %34, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %133, label %56

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %36) #17
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %6, %"class.url::Origin"* %49) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %5, %class.GURL* nonnull dereferenceable(120) %6)
  %57 = load i8, i8* %38, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i16*, i16** %39, align 8
  %60 = select i1 %58, i16* %59, i16* %40
  %61 = load i8, i8* %33, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i16*, i16** %41, align 8
  %64 = load i64, i64* %34, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i16* %63, i16* %42
  %67 = select i1 %62, i64 %64, i64 %65
  %68 = icmp eq i64 %67, 0
  %69 = bitcast i16* %59 to i8*
  br i1 %68, label %128, label %70

70:                                               ; preds = %56
  %71 = load i64, i64* %43, align 8
  %72 = zext i8 %57 to i64
  %73 = select i1 %58, i64 %71, i64 %72
  %74 = getelementptr inbounds i16, i16* %60, i64 %73
  %75 = shl nuw i64 %67, 1
  %76 = ashr exact i64 %75, 1
  %77 = ptrtoint i16* %74 to i64
  %78 = ptrtoint i16* %60 to i64
  %79 = shl nuw i64 %73, 1
  %80 = ashr exact i64 %79, 1
  %81 = icmp slt i64 %80, %76
  br i1 %81, label %121, label %82

82:                                               ; preds = %70
  %83 = load i16, i16* %66, align 2
  br label %84

84:                                               ; preds = %113, %82
  %85 = phi i64 [ %80, %82 ], [ %117, %113 ]
  %86 = phi i16* [ %60, %82 ], [ %114, %113 ]
  %87 = sub nsw i64 %85, %76
  %88 = add nsw i64 %87, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %121, label %90

90:                                               ; preds = %84, %95
  %91 = phi i64 [ %97, %95 ], [ %88, %84 ]
  %92 = phi i16* [ %96, %95 ], [ %86, %84 ]
  %93 = load i16, i16* %92, align 2
  %94 = icmp eq i16 %93, %83
  br i1 %94, label %99, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i16, i16* %92, i64 1
  %97 = add i64 %91, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %121, label %90

99:                                               ; preds = %90
  %100 = icmp eq i16* %92, null
  br i1 %100, label %121, label %101

101:                                              ; preds = %99, %108
  %102 = phi i16* [ %106, %108 ], [ %92, %99 ]
  %103 = phi i16* [ %109, %108 ], [ %66, %99 ]
  %104 = phi i64 [ %105, %108 ], [ %76, %99 ]
  %105 = add i64 %104, -1
  %106 = getelementptr inbounds i16, i16* %102, i64 1
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %119, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds i16, i16* %103, i64 1
  %110 = load i16, i16* %106, align 2
  %111 = load i16, i16* %109, align 2
  %112 = icmp eq i16 %111, %110
  br i1 %112, label %101, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds i16, i16* %92, i64 1
  %115 = ptrtoint i16* %114 to i64
  %116 = sub i64 %77, %115
  %117 = ashr exact i64 %116, 1
  %118 = icmp slt i64 %117, %76
  br i1 %118, label %121, label %84

119:                                              ; preds = %101
  %120 = ptrtoint i16* %92 to i64
  br label %121

121:                                              ; preds = %113, %99, %84, %95, %119, %70
  %122 = phi i64 [ %120, %119 ], [ %77, %70 ], [ %77, %95 ], [ %77, %84 ], [ %77, %99 ], [ %77, %113 ]
  %123 = phi i16* [ %92, %119 ], [ %74, %70 ], [ %74, %95 ], [ %74, %84 ], [ %74, %99 ], [ %74, %113 ]
  %124 = icmp eq i16* %123, %74
  %125 = sub i64 %122, %78
  %126 = ashr exact i64 %125, 1
  %127 = select i1 %124, i64 -1, i64 %126
  br label %128

128:                                              ; preds = %121, %56
  %129 = phi i64 [ 0, %56 ], [ %127, %121 ]
  %130 = icmp eq i64 %129, -1
  br i1 %58, label %131, label %132

131:                                              ; preds = %128
  call void @_ZdlPv(i8* %69) #18
  br label %132

132:                                              ; preds = %131, %128
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %36) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %130, label %151, label %133

133:                                              ; preds = %132, %45
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %44) #17
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %7, %"class.url::Origin"* %49) #17
  %134 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %13, %class.GURL* nonnull dereferenceable(120) %7)
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %44) #17
  %135 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %134, i64 0, i32 11
  %136 = load %class.CookieTreeCacheStoragesNode*, %class.CookieTreeCacheStoragesNode** %135, align 8
  %137 = icmp eq %class.CookieTreeCacheStoragesNode* %136, null
  br i1 %137, label %138, label %145

138:                                              ; preds = %133
  %139 = call i8* @_Znwm(i64 64) #18
  %140 = bitcast i8* %139 to %class.CookieTreeCacheStoragesNode*
  call void @_ZN27CookieTreeCacheStoragesNodeC2Ev(%class.CookieTreeCacheStoragesNode* nonnull %140) #17
  %141 = bitcast %class.CookieTreeCacheStoragesNode** %135 to i8**
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %134, i64 0, i32 0
  %143 = bitcast i8* %139 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %142, %class.CookieTreeNode* nonnull %143) #17
  %144 = load %class.CookieTreeCacheStoragesNode*, %class.CookieTreeCacheStoragesNode** %135, align 8
  br label %145

145:                                              ; preds = %133, %138
  %146 = phi %class.CookieTreeCacheStoragesNode* [ %144, %138 ], [ %136, %133 ]
  %147 = call i8* @_Znwm(i64 72) #18
  %148 = bitcast i8* %147 to %class.CookieTreeCacheStorageNode*
  call void @_ZN26CookieTreeCacheStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeCacheStorageNode* nonnull %148, %"struct.std::__1::__list_node_base"* %46) #17
  %149 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %146, i64 0, i32 0, i32 0
  %150 = bitcast i8* %147 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %149, %class.CookieTreeNode* nonnull %150) #17
  br label %151

151:                                              ; preds = %132, %145
  %152 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %153 = bitcast %"struct.std::__1::__list_node_base"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = inttoptr i64 %154 to %"struct.std::__1::__list_node_base"*
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %28, %155
  br i1 %156, label %157, label %45

157:                                              ; preds = %151, %24, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel34PopulateMediaLicenseInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel*, %class.LocalDataContainer*, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nocapture, %"class.std::__1::basic_string.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string.13", align 8
  %7 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %8 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %9 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %8, align 8
  %10 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %9, align 8
  %11 = tail call %class.CookieTreeNode* %10(%"class.ui::TreeNodeModel"* %7) #17
  %12 = bitcast %class.CookieTreeNode* %11 to %class.CookieTreeRootNode*
  %13 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %155, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %2, i64 0, i32 0
  %22 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %21, align 8
  tail call void @_ZN16CookiesTreeModel24NotifyObserverBeginBatchEv(%class.CookiesTreeModel* %22) #17
  store i8 1, i8* %17, align 8
  br label %23

23:                                               ; preds = %16, %20
  %24 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 24, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base.303"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %1, i64 0, i32 24, i32 0, i32 0
  %28 = inttoptr i64 %26 to %"struct.std::__1::__list_node_base.303"*
  %29 = icmp eq %"struct.std::__1::__list_node_base.303"* %27, %28
  br i1 %29, label %155, label %30

30:                                               ; preds = %23
  %31 = bitcast %class.GURL* %5 to i8*
  %32 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string.13"* %6 to i8*
  %36 = bitcast %"class.std::__1::basic_string.13"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string.13"* %6 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string.13"* %3 to i16*
  %42 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %43

43:                                               ; preds = %30, %149
  %44 = phi %"struct.std::__1::__list_node_base.303"* [ %28, %30 ], [ %153, %149 ]
  %45 = phi i64 [ %26, %30 ], [ %152, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %31) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 120, i1 false)
  %46 = inttoptr i64 %45 to %"struct.std::__1::__list_node.830"*
  %47 = getelementptr inbounds %"struct.std::__1::__list_node.830", %"struct.std::__1::__list_node.830"* %46, i64 0, i32 1, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %5, %class.GURL* dereferenceable(120) %47) #17
  %48 = load i8, i8* %33, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %34, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %131, label %54

54:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @_ZN18CookieTreeHostNode11TitleForUrlERK4GURL(%"class.std::__1::basic_string.13"* nonnull sret %6, %class.GURL* nonnull dereferenceable(120) %5)
  %55 = load i8, i8* %37, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i16*, i16** %38, align 8
  %58 = select i1 %56, i16* %57, i16* %39
  %59 = load i8, i8* %33, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i16*, i16** %40, align 8
  %62 = load i64, i64* %34, align 8
  %63 = zext i8 %59 to i64
  %64 = select i1 %60, i16* %61, i16* %41
  %65 = select i1 %60, i64 %62, i64 %63
  %66 = icmp eq i64 %65, 0
  %67 = bitcast i16* %57 to i8*
  br i1 %66, label %126, label %68

68:                                               ; preds = %54
  %69 = load i64, i64* %42, align 8
  %70 = zext i8 %55 to i64
  %71 = select i1 %56, i64 %69, i64 %70
  %72 = getelementptr inbounds i16, i16* %58, i64 %71
  %73 = shl nuw i64 %65, 1
  %74 = ashr exact i64 %73, 1
  %75 = ptrtoint i16* %72 to i64
  %76 = ptrtoint i16* %58 to i64
  %77 = shl nuw i64 %71, 1
  %78 = ashr exact i64 %77, 1
  %79 = icmp slt i64 %78, %74
  br i1 %79, label %119, label %80

80:                                               ; preds = %68
  %81 = load i16, i16* %64, align 2
  br label %82

82:                                               ; preds = %111, %80
  %83 = phi i64 [ %78, %80 ], [ %115, %111 ]
  %84 = phi i16* [ %58, %80 ], [ %112, %111 ]
  %85 = sub nsw i64 %83, %74
  %86 = add nsw i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %82, %93
  %89 = phi i64 [ %95, %93 ], [ %86, %82 ]
  %90 = phi i16* [ %94, %93 ], [ %84, %82 ]
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, %81
  br i1 %92, label %97, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i16, i16* %90, i64 1
  %95 = add i64 %89, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %119, label %88

97:                                               ; preds = %88
  %98 = icmp eq i16* %90, null
  br i1 %98, label %119, label %99

99:                                               ; preds = %97, %106
  %100 = phi i16* [ %104, %106 ], [ %90, %97 ]
  %101 = phi i16* [ %107, %106 ], [ %64, %97 ]
  %102 = phi i64 [ %103, %106 ], [ %74, %97 ]
  %103 = add i64 %102, -1
  %104 = getelementptr inbounds i16, i16* %100, i64 1
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds i16, i16* %101, i64 1
  %108 = load i16, i16* %104, align 2
  %109 = load i16, i16* %107, align 2
  %110 = icmp eq i16 %109, %108
  br i1 %110, label %99, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds i16, i16* %90, i64 1
  %113 = ptrtoint i16* %112 to i64
  %114 = sub i64 %75, %113
  %115 = ashr exact i64 %114, 1
  %116 = icmp slt i64 %115, %74
  br i1 %116, label %119, label %82

117:                                              ; preds = %99
  %118 = ptrtoint i16* %90 to i64
  br label %119

119:                                              ; preds = %111, %97, %82, %93, %117, %68
  %120 = phi i64 [ %118, %117 ], [ %75, %68 ], [ %75, %93 ], [ %75, %82 ], [ %75, %97 ], [ %75, %111 ]
  %121 = phi i16* [ %90, %117 ], [ %72, %68 ], [ %72, %93 ], [ %72, %82 ], [ %72, %97 ], [ %72, %111 ]
  %122 = icmp eq i16* %121, %72
  %123 = sub i64 %120, %76
  %124 = ashr exact i64 %123, 1
  %125 = select i1 %122, i64 -1, i64 %124
  br label %126

126:                                              ; preds = %119, %54
  %127 = phi i64 [ 0, %54 ], [ %125, %119 ]
  %128 = icmp eq i64 %127, -1
  br i1 %56, label %129, label %130

129:                                              ; preds = %126
  call void @_ZdlPv(i8* %67) #18
  br label %130

130:                                              ; preds = %129, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  br i1 %128, label %149, label %131

131:                                              ; preds = %130, %43
  %132 = call %class.CookieTreeHostNode* @_ZN18CookieTreeRootNode19GetOrCreateHostNodeERK4GURL(%class.CookieTreeRootNode* %12, %class.GURL* nonnull dereferenceable(120) %5)
  %133 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 12
  %134 = load %class.CookieTreeMediaLicensesNode*, %class.CookieTreeMediaLicensesNode** %133, align 8
  %135 = icmp eq %class.CookieTreeMediaLicensesNode* %134, null
  br i1 %135, label %136, label %143

136:                                              ; preds = %131
  %137 = call i8* @_Znwm(i64 64) #18
  %138 = bitcast i8* %137 to %class.CookieTreeMediaLicensesNode*
  call void @_ZN27CookieTreeMediaLicensesNodeC2Ev(%class.CookieTreeMediaLicensesNode* nonnull %138) #17
  %139 = bitcast %class.CookieTreeMediaLicensesNode** %133 to i8**
  store i8* %137, i8** %139, align 8
  %140 = getelementptr inbounds %class.CookieTreeHostNode, %class.CookieTreeHostNode* %132, i64 0, i32 0
  %141 = bitcast i8* %137 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %140, %class.CookieTreeNode* nonnull %141) #17
  %142 = load %class.CookieTreeMediaLicensesNode*, %class.CookieTreeMediaLicensesNode** %133, align 8
  br label %143

143:                                              ; preds = %131, %136
  %144 = phi %class.CookieTreeMediaLicensesNode* [ %142, %136 ], [ %134, %131 ]
  %145 = call i8* @_Znwm(i64 72) #18
  %146 = bitcast i8* %145 to %class.CookieTreeMediaLicenseNode*
  call void @_ZN26CookieTreeMediaLicenseNodeC2ENSt3__115__list_iteratorIN30BrowsingDataMediaLicenseHelper16MediaLicenseInfoEPvEE(%class.CookieTreeMediaLicenseNode* nonnull %146, %"struct.std::__1::__list_node_base.303"* %44) #17
  %147 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %144, i64 0, i32 0, i32 0
  %148 = bitcast i8* %145 to %class.CookieTreeNode*
  call void @_ZN14CookieTreeNode21AddChildSortedByTitleENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CookieTreeNode* %147, %class.CookieTreeNode* nonnull %148) #17
  br label %149

149:                                              ; preds = %130, %143
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %31) #17
  %150 = getelementptr inbounds %"struct.std::__1::__list_node_base.303", %"struct.std::__1::__list_node_base.303"* %44, i64 0, i32 1
  %151 = bitcast %"struct.std::__1::__list_node_base.303"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = inttoptr i64 %152 to %"struct.std::__1::__list_node_base.303"*
  %154 = icmp eq %"struct.std::__1::__list_node_base.303"* %27, %153
  br i1 %154, label %155, label %43

155:                                              ; preds = %149, %23, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::ExtensionSet"* @_ZN16CookiesTreeModel24ExtensionsProtectingNodeERK14CookieTreeNode(%class.CookiesTreeModel* nocapture readonly, %class.CookieTreeNode* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = alloca %class.GURL, align 8
  %5 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 1, i32 0
  %6 = load %class.ExtensionSpecialStoragePolicy*, %class.ExtensionSpecialStoragePolicy** %5, align 8
  %7 = icmp eq %class.ExtensionSpecialStoragePolicy* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %9) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 136, i1 false)
  %10 = bitcast %class.CookieTreeNode* %1 to void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)***
  %11 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)**, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*** %10, align 8
  %12 = getelementptr inbounds void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)** %11, i64 8
  %13 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeNode*)** %12, align 8
  call void %13(%"struct.CookieTreeNode::DetailedInfo"* nonnull sret %3, %class.CookieTreeNode* %1) #17
  %14 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %21 [
    i32 6, label %16
    i32 8, label %16
    i32 10, label %16
    i32 12, label %16
    i32 14, label %16
    i32 16, label %16
    i32 19, label %16
    i32 21, label %16
    i32 23, label %16
  ]

16:                                               ; preds = %8, %8, %8, %8, %8, %8, %8, %8, %8
  %17 = load %class.ExtensionSpecialStoragePolicy*, %class.ExtensionSpecialStoragePolicy** %5, align 8
  %18 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %4, %"class.url::Origin"* %19) #17
  %20 = call %"class.extensions::ExtensionSet"* @_ZN29ExtensionSpecialStoragePolicy26ExtensionsProtectingOriginERK4GURL(%class.ExtensionSpecialStoragePolicy* %17, %class.GURL* nonnull dereferenceable(120) %4) #17
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %18) #17
  br label %21

21:                                               ; preds = %8, %16
  %22 = phi %"class.extensions::ExtensionSet"* [ %20, %16 ], [ null, %8 ]
  %23 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %23) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %9) #17
  br label %24

24:                                               ; preds = %2, %21
  %25 = phi %"class.extensions::ExtensionSet"* [ %22, %21 ], [ null, %2 ]
  ret %"class.extensions::ExtensionSet"* %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.extensions::ExtensionSet"* @_ZN29ExtensionSpecialStoragePolicy26ExtensionsProtectingOriginERK4GURL(%class.ExtensionSpecialStoragePolicy*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel22AddCookiesTreeObserverEPNS_8ObserverE(%class.CookiesTreeModel*, %"class.CookiesTreeModel::Observer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3
  %4 = icmp eq %"class.CookiesTreeModel::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.CookiesTreeModel::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.CookiesTreeModel::Observer"* %1 to i64
  %32 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.312"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.312"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #19
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #19
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #18
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.312", %"class.base::ObserverList.312"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #17
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #18
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  %100 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1
  br i1 %4, label %101, label %104

101:                                              ; preds = %99
  %102 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %103 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  br label %122

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %105, align 8
  %107 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %108 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %107, align 8
  %109 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %106, %108
  %110 = bitcast %"class.CookiesTreeModel::Observer"* %1 to i8*
  br i1 %109, label %119, label %111

111:                                              ; preds = %104, %116
  %112 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %117, %116 ], [ %106, %104 ]
  %113 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %112, i64 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = icmp eq i8* %114, %110
  br i1 %115, label %119, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %112, i64 1
  %118 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %117, %108
  br i1 %118, label %122, label %111

119:                                              ; preds = %111, %104
  %120 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %106, %104 ], [ %112, %111 ]
  %121 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %120, %108
  br i1 %121, label %122, label %195

122:                                              ; preds = %116, %101, %119
  %123 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %103, %101 ], [ %108, %119 ], [ %108, %116 ]
  %124 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 2
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 1
  store i64 %126, i64* %124, align 8
  %127 = ptrtoint %"class.CookiesTreeModel::Observer"* %1 to i64
  %128 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %129 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %130 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %129, align 8
  %131 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %123, %130
  %132 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %130 to i64
  br i1 %131, label %133, label %138

133:                                              ; preds = %122
  %134 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %123 to i64*
  store i64 %127, i64* %134, align 8
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 1
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %128 to i64*
  store i64 %136, i64* %137, align 8
  br label %195

138:                                              ; preds = %122
  %139 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %123 to i64
  %140 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %128 to i64*
  %141 = bitcast %"class.base::ObserverList"* %100 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %139, %142
  %144 = ashr exact i64 %143, 3
  %145 = add nsw i64 %144, 1
  %146 = icmp ugt i64 %145, 2305843009213693951
  br i1 %146, label %147, label %149

147:                                              ; preds = %138
  %148 = bitcast %"class.base::ObserverList"* %100 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %148) #19
  unreachable

149:                                              ; preds = %138
  %150 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %129 to i64*
  %151 = sub i64 %132, %142
  %152 = ashr exact i64 %151, 3
  %153 = icmp ult i64 %152, 1152921504606846975
  br i1 %153, label %154, label %162

154:                                              ; preds = %149
  %155 = ashr exact i64 %151, 2
  %156 = icmp ult i64 %155, %145
  %157 = select i1 %156, i64 %145, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %154
  %160 = icmp ugt i64 %157, 2305843009213693951
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  tail call void @abort() #19
  unreachable

162:                                              ; preds = %159, %149
  %163 = phi i64 [ %157, %159 ], [ 2305843009213693951, %149 ]
  %164 = shl i64 %163, 3
  %165 = tail call i8* @_Znwm(i64 %164) #18
  %166 = bitcast i8* %165 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %167

167:                                              ; preds = %162, %154
  %168 = phi i64 [ %163, %162 ], [ 0, %154 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %166, %162 ], [ null, %154 ]
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %169, i64 %144
  %171 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %169, i64 %168
  %172 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %171 to i64
  %173 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %170 to i64*
  store i64 %127, i64* %173, align 8
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %170, i64 1
  %175 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %174 to i64
  %176 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %176, align 8
  %178 = load i64, i64* %140, align 8
  %179 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %177 to i64
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 3
  %182 = sub nsw i64 0, %181
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %170, i64 %182
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  %185 = icmp sgt i64 %180, 0
  br i1 %185, label %186, label %190

186:                                              ; preds = %167
  %187 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %183 to i8*
  %188 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 %180, i1 false) #17
  %189 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %176, align 8
  br label %190

190:                                              ; preds = %186, %167
  %191 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %177, %167 ], [ %189, %186 ]
  store i64 %184, i64* %141, align 8
  store i64 %175, i64* %140, align 8
  store i64 %172, i64* %150, align 8
  %192 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %191, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %190
  %194 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %191 to i8*
  tail call void @_ZdlPv(i8* %194) #18
  br label %195

195:                                              ; preds = %193, %190, %133, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE11AddObserverEPNS_17TreeModelObserverE(%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelObserver"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::UncheckedObserverAdapter", align 8
  %4 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1
  %5 = icmp eq %"class.ui::TreeModelObserver"* %1, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  %9 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %8, %10
  %12 = bitcast %"class.ui::TreeModelObserver"* %1 to i8*
  br i1 %11, label %21, label %13

13:                                               ; preds = %6, %18
  %14 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %19, %18 ], [ %8, %6 ]
  %15 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %14, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, %12
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %14, i64 1
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %10
  br i1 %20, label %24, label %13

21:                                               ; preds = %13, %6
  %22 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %8, %6 ], [ %14, %13 ]
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %10
  br i1 %23, label %24, label %31

24:                                               ; preds = %18, %21, %2
  %25 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  %30 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %3 to %"class.ui::TreeModelObserver"**
  store %"class.ui::TreeModelObserver"* %1, %"class.ui::TreeModelObserver"** %30, align 8
  call void @_ZNSt3__16vectorIN4base8internal24UncheckedObserverAdapterENS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_(%"class.std::__1::vector.33"* %28, %"class.base::internal::UncheckedObserverAdapter"* nonnull dereferenceable(8) %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel25RemoveCookiesTreeObserverEPNS_8ObserverE(%class.CookiesTreeModel*, %"class.CookiesTreeModel::Observer"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.CookiesTreeModel::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.314"**
  %32 = load %"class.base::LinkNode.314"*, %"class.base::LinkNode.314"** %31, align 8
  %33 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 3, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.314"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #17
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  %48 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %48, align 8
  %50 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %51 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %52 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %49, %51
  %53 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %51 to i64
  br i1 %52, label %62, label %54

54:                                               ; preds = %47, %59
  %55 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %60, %59 ], [ %49, %47 ]
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, %8
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 1
  %61 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %60, %51
  br i1 %61, label %91, label %54

62:                                               ; preds = %54, %47
  %63 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %49, %47 ], [ %55, %54 ]
  %64 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %63, %51
  br i1 %64, label %91, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %63, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, -1
  store i64 %72, i64* %70, align 8
  br label %73

73:                                               ; preds = %69, %65
  %74 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::LinkNodeBase"** %74 to %"class.base::LinkNode"**
  %76 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %75, align 8
  %77 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %78 = icmp eq %"class.base::LinkNode"* %76, %77
  br i1 %78, label %79, label %90

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %63, i64 1
  %81 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %80 to i64
  %82 = sub i64 %53, %81
  %83 = ashr exact i64 %82, 3
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %63 to i8*
  %87 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %80 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 %82, i1 false) #17
  br label %88

88:                                               ; preds = %85, %79
  %89 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %63, i64 %83
  store %"class.base::internal::UncheckedObserverAdapter"* %89, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  br label %91

90:                                               ; preds = %73
  store i8* null, i8** %66, align 8
  br label %91

91:                                               ; preds = %59, %62, %88, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE14RemoveObserverEPNS_17TreeModelObserverE(%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelObserver"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.ui::TreeModelObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #17
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel20PopulateAppCacheInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel30PopulateAppCacheInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel18PopulateCookieInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel28PopulateCookieInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel20PopulateDatabaseInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel30PopulateDatabaseInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel24PopulateLocalStorageInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel34PopulateLocalStorageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel26PopulateSessionStorageInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel36PopulateSessionStorageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel21PopulateIndexedDBInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel31PopulateIndexedDBInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel22PopulateFileSystemInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel32PopulateFileSystemInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel17PopulateQuotaInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel27PopulateQuotaInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel30PopulateServiceWorkerUsageInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel40PopulateServiceWorkerUsageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel24PopulateSharedWorkerInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel34PopulateSharedWorkerInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel29PopulateCacheStorageUsageInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel39PopulateCacheStorageUsageInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CookiesTreeModel24PopulateMediaLicenseInfoEP18LocalDataContainer(%class.CookiesTreeModel*, %class.LocalDataContainer*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", align 8
  %4 = alloca %"class.std::__1::basic_string.13", align 8
  %5 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.CookiesTreeModel::ScopedBatchUpdateNotifier", %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 0
  %10 = bitcast %class.CookiesTreeModel* %0 to %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)***
  %11 = bitcast %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)**, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*** %10, align 8
  %13 = load %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)*, %class.CookieTreeNode* (%"class.ui::TreeNodeModel"*)** %12, align 8
  %14 = tail call %class.CookieTreeNode* %13(%"class.ui::TreeNodeModel"* %9) #17
  store %class.CookiesTreeModel* %0, %class.CookiesTreeModel** %6, align 8
  store %class.CookieTreeNode* %14, %class.CookieTreeNode** %7, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.std::__1::basic_string.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN16CookiesTreeModel34PopulateMediaLicenseInfoWithFilterEP18LocalDataContainerPNS_25ScopedBatchUpdateNotifierERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%class.CookiesTreeModel* %0, %class.LocalDataContainer* %1, %"class.CookiesTreeModel::ScopedBatchUpdateNotifier"* nonnull %3, %"class.std::__1::basic_string.13"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  %19 = load i8, i8* %8, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  %21 = load %class.CookiesTreeModel*, %class.CookiesTreeModel** %6, align 8
  br i1 %20, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 0
  %24 = bitcast %class.CookieTreeNode** %7 to %"class.ui::TreeModelNode"**
  %25 = load %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %24, align 8
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %23, %"class.ui::TreeModelNode"* %25) #17
  %26 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %21, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN16CookiesTreeModel23MaybeNotifyBatchesEndedEv(%class.CookiesTreeModel* %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

declare void @_ZN3net11cookie_util17CookieOriginToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%class.GURL* sret, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN16CookiesTreeModel33GetCookieDeletionDisabledCallbackEP7Profile(%"class.base::RepeatingCallback"* noalias nocapture sret, %class.Profile* nocapture readnone) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8, !alias.scope !175
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.CookiesTreeModel* @_ZN16CookiesTreeModel16CreateForProfileEP7Profile(%class.Profile*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = alloca %"class.std::__1::vector.252", align 8
  %4 = getelementptr inbounds %class.Profile, %class.Profile* %0, i64 0, i32 0
  %5 = tail call %"class.content::StoragePartition"* @_ZN7content14BrowserContext26GetDefaultStoragePartitionEv(%"class.content::BrowserContext"* %4) #17
  %6 = bitcast %"class.content::StoragePartition"* %5 to %"class.storage::FileSystemContext"* (%"class.content::StoragePartition"*)***
  %7 = load %"class.storage::FileSystemContext"* (%"class.content::StoragePartition"*)**, %"class.storage::FileSystemContext"* (%"class.content::StoragePartition"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.storage::FileSystemContext"* (%"class.content::StoragePartition"*)*, %"class.storage::FileSystemContext"* (%"class.content::StoragePartition"*)** %7, i64 13
  %9 = load %"class.storage::FileSystemContext"* (%"class.content::StoragePartition"*)*, %"class.storage::FileSystemContext"* (%"class.content::StoragePartition"*)** %8, align 8
  %10 = tail call %"class.storage::FileSystemContext"* %9(%"class.content::StoragePartition"* %5) #17
  %11 = bitcast %"class.content::StoragePartition"* %5 to %"class.content::NativeIOContext"* (%"class.content::StoragePartition"*)***
  %12 = load %"class.content::NativeIOContext"* (%"class.content::StoragePartition"*)**, %"class.content::NativeIOContext"* (%"class.content::StoragePartition"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.content::NativeIOContext"* (%"class.content::StoragePartition"*)*, %"class.content::NativeIOContext"* (%"class.content::StoragePartition"*)** %12, i64 27
  %14 = load %"class.content::NativeIOContext"* (%"class.content::StoragePartition"*)*, %"class.content::NativeIOContext"* (%"class.content::StoragePartition"*)** %13, align 8
  %15 = tail call %"class.content::NativeIOContext"* %14(%"class.content::StoragePartition"* %5) #17
  %16 = tail call i8* @_Znwm(i64 32) #18
  %17 = bitcast i8* %16 to %"class.browsing_data::CookieHelper"*
  %18 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8, !alias.scope !178
  call void @_ZN13browsing_data12CookieHelperC1EPN7content16StoragePartitionEN4base17RepeatingCallbackIFbRK4GURLEEE(%"class.browsing_data::CookieHelper"* nonnull %17, %"class.content::StoragePartition"* %5, %"class.base::RepeatingCallback"* nonnull %2) #17
  %19 = call i8* @_Znwm(i64 24) #18
  %20 = bitcast i8* %19 to %"class.browsing_data::DatabaseHelper"*
  call void @_ZN13browsing_data14DatabaseHelperC1EPN7content14BrowserContextE(%"class.browsing_data::DatabaseHelper"* nonnull %20, %"class.content::BrowserContext"* %4) #17
  %21 = call i8* @_Znwm(i64 24) #18
  %22 = bitcast i8* %21 to %"class.browsing_data::LocalStorageHelper"*
  call void @_ZN13browsing_data18LocalStorageHelperC1EPN7content14BrowserContextE(%"class.browsing_data::LocalStorageHelper"* nonnull %22, %"class.content::BrowserContext"* %4) #17
  %23 = call i8* @_Znwm(i64 24) #18
  %24 = bitcast i8* %23 to %"class.browsing_data::AppCacheHelper"*
  %25 = bitcast %"class.content::StoragePartition"* %5 to %"class.content::AppCacheService"* (%"class.content::StoragePartition"*)***
  %26 = load %"class.content::AppCacheService"* (%"class.content::StoragePartition"*)**, %"class.content::AppCacheService"* (%"class.content::StoragePartition"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.content::AppCacheService"* (%"class.content::StoragePartition"*)*, %"class.content::AppCacheService"* (%"class.content::StoragePartition"*)** %26, i64 11
  %28 = load %"class.content::AppCacheService"* (%"class.content::StoragePartition"*)*, %"class.content::AppCacheService"* (%"class.content::StoragePartition"*)** %27, align 8
  %29 = call %"class.content::AppCacheService"* %28(%"class.content::StoragePartition"* %5) #17
  call void @_ZN13browsing_data14AppCacheHelperC1EPN7content15AppCacheServiceE(%"class.browsing_data::AppCacheHelper"* nonnull %24, %"class.content::AppCacheService"* %29) #17
  %30 = call i8* @_Znwm(i64 24) #18
  %31 = bitcast i8* %30 to %"class.browsing_data::IndexedDBHelper"*
  call void @_ZN13browsing_data15IndexedDBHelperC1EPN7content16StoragePartitionE(%"class.browsing_data::IndexedDBHelper"* nonnull %31, %"class.content::StoragePartition"* %5) #17
  %32 = bitcast %"class.std::__1::vector.252"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  call void @_ZN30browsing_data_file_system_util28GetAdditionalFileSystemTypesEv(%"class.std::__1::vector.252"* nonnull sret %3) #17
  %33 = call %"class.browsing_data::FileSystemHelper"* @_ZN13browsing_data16FileSystemHelper6CreateEPN7storage17FileSystemContextERKNSt3__16vectorINS1_14FileSystemTypeENS4_9allocatorIS6_EEEEPN7content15NativeIOContextE(%"class.storage::FileSystemContext"* %10, %"class.std::__1::vector.252"* nonnull dereferenceable(24) %3, %"class.content::NativeIOContext"* %15) #17
  %34 = call %class.BrowsingDataQuotaHelper* @_ZN23BrowsingDataQuotaHelper6CreateEP7Profile(%class.Profile* %0) #17
  %35 = call i8* @_Znwm(i64 24) #18
  %36 = bitcast i8* %35 to %"class.browsing_data::ServiceWorkerHelper"*
  %37 = bitcast %"class.content::StoragePartition"* %5 to %"class.content::ServiceWorkerContext"* (%"class.content::StoragePartition"*)***
  %38 = load %"class.content::ServiceWorkerContext"* (%"class.content::StoragePartition"*)**, %"class.content::ServiceWorkerContext"* (%"class.content::StoragePartition"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.content::ServiceWorkerContext"* (%"class.content::StoragePartition"*)*, %"class.content::ServiceWorkerContext"* (%"class.content::StoragePartition"*)** %38, i64 20
  %40 = load %"class.content::ServiceWorkerContext"* (%"class.content::StoragePartition"*)*, %"class.content::ServiceWorkerContext"* (%"class.content::StoragePartition"*)** %39, align 8
  %41 = call %"class.content::ServiceWorkerContext"* %40(%"class.content::StoragePartition"* %5) #17
  call void @_ZN13browsing_data19ServiceWorkerHelperC1EPN7content20ServiceWorkerContextE(%"class.browsing_data::ServiceWorkerHelper"* nonnull %36, %"class.content::ServiceWorkerContext"* %41) #17
  %42 = call i8* @_Znwm(i64 24) #18
  %43 = bitcast i8* %42 to %"class.browsing_data::SharedWorkerHelper"*
  call void @_ZN13browsing_data18SharedWorkerHelperC1EPN7content16StoragePartitionE(%"class.browsing_data::SharedWorkerHelper"* nonnull %43, %"class.content::StoragePartition"* %5) #17
  %44 = call i8* @_Znwm(i64 24) #18
  %45 = bitcast i8* %44 to %"class.browsing_data::CacheStorageHelper"*
  call void @_ZN13browsing_data18CacheStorageHelperC1EPN7content16StoragePartitionE(%"class.browsing_data::CacheStorageHelper"* nonnull %45, %"class.content::StoragePartition"* %5) #17
  %46 = call %class.BrowsingDataMediaLicenseHelper* @_ZN30BrowsingDataMediaLicenseHelper6CreateEPN7storage17FileSystemContextE(%"class.storage::FileSystemContext"* %10) #17
  %47 = call i8* @_Znwm(i64 424) #18
  %48 = bitcast i8* %47 to %class.LocalDataContainer*
  %49 = getelementptr inbounds i8, i8* %16, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  %52 = getelementptr inbounds i8, i8* %19, i64 8
  %53 = bitcast i8* %52 to i32*
  %54 = atomicrmw add i32* %53, i32 1 monotonic
  %55 = getelementptr inbounds i8, i8* %21, i64 8
  %56 = bitcast i8* %55 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %56) #17
  %57 = getelementptr inbounds i8, i8* %23, i64 8
  %58 = bitcast i8* %57 to i32*
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  %60 = ptrtoint i8* %30 to i64
  %61 = getelementptr inbounds i8, i8* %30, i64 8
  %62 = bitcast i8* %61 to i32*
  %63 = atomicrmw add i32* %62, i32 1 monotonic
  %64 = ptrtoint %"class.browsing_data::FileSystemHelper"* %33 to i64
  %65 = icmp eq %"class.browsing_data::FileSystemHelper"* %33, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %1
  %67 = getelementptr inbounds %"class.browsing_data::FileSystemHelper", %"class.browsing_data::FileSystemHelper"* %33, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 1 monotonic
  br label %69

69:                                               ; preds = %66, %1
  %70 = ptrtoint %class.BrowsingDataQuotaHelper* %34 to i64
  %71 = icmp eq %class.BrowsingDataQuotaHelper* %34, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %class.BrowsingDataQuotaHelper, %class.BrowsingDataQuotaHelper* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 1 monotonic
  br label %75

75:                                               ; preds = %72, %69
  %76 = ptrtoint i8* %35 to i64
  %77 = getelementptr inbounds i8, i8* %35, i64 8
  %78 = bitcast i8* %77 to i32*
  %79 = atomicrmw add i32* %78, i32 1 monotonic
  %80 = ptrtoint i8* %42 to i64
  %81 = getelementptr inbounds i8, i8* %42, i64 8
  %82 = bitcast i8* %81 to i32*
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  %84 = ptrtoint i8* %44 to i64
  %85 = getelementptr inbounds i8, i8* %44, i64 8
  %86 = bitcast i8* %85 to i32*
  %87 = atomicrmw add i32* %86, i32 1 monotonic
  %88 = ptrtoint %class.BrowsingDataMediaLicenseHelper* %46 to i64
  %89 = icmp eq %class.BrowsingDataMediaLicenseHelper* %46, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %75
  %91 = getelementptr inbounds %class.BrowsingDataMediaLicenseHelper, %class.BrowsingDataMediaLicenseHelper* %46, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 1 monotonic
  br label %93

93:                                               ; preds = %75, %90
  call void @_ZN18LocalDataContainerC1E13scoped_refptrIN13browsing_data12CookieHelperEES0_INS1_14DatabaseHelperEES0_INS1_18LocalStorageHelperEES7_S0_INS1_14AppCacheHelperEES0_INS1_15IndexedDBHelperEES0_INS1_16FileSystemHelperEES0_I23BrowsingDataQuotaHelperES0_INS1_19ServiceWorkerHelperEES0_INS1_18SharedWorkerHelperEES0_INS1_18CacheStorageHelperEES0_I30BrowsingDataMediaLicenseHelperE(%class.LocalDataContainer* nonnull %48, %"class.browsing_data::CookieHelper"* nonnull %17, %"class.browsing_data::DatabaseHelper"* nonnull %20, %"class.browsing_data::LocalStorageHelper"* nonnull %22, %"class.browsing_data::LocalStorageHelper"* null, %"class.browsing_data::AppCacheHelper"* nonnull %24, i64 %60, i64 %64, i64 %70, i64 %76, i64 %80, i64 %84, i64 %88) #17
  %94 = ptrtoint i8* %47 to i64
  %95 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %3, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %93
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %3, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #18
  br label %103

103:                                              ; preds = %93, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  %104 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %104) #17
  %105 = bitcast %class.Profile* %0 to %class.ExtensionSpecialStoragePolicy* (%class.Profile*)***
  %106 = load %class.ExtensionSpecialStoragePolicy* (%class.Profile*)**, %class.ExtensionSpecialStoragePolicy* (%class.Profile*)*** %105, align 8
  %107 = getelementptr inbounds %class.ExtensionSpecialStoragePolicy* (%class.Profile*)*, %class.ExtensionSpecialStoragePolicy* (%class.Profile*)** %106, i64 45
  %108 = load %class.ExtensionSpecialStoragePolicy* (%class.Profile*)*, %class.ExtensionSpecialStoragePolicy* (%class.Profile*)** %107, align 8
  %109 = call %class.ExtensionSpecialStoragePolicy* %108(%class.Profile* %0) #17
  %110 = call %class.AccessContextAuditService* @_ZN32AccessContextAuditServiceFactory13GetForProfileEP7Profile(%class.Profile* %0) #17
  %111 = ptrtoint %class.AccessContextAuditService* %110 to i64
  %112 = call i8* @_Znwm(i64 168) #18
  %113 = bitcast i8* %112 to %class.CookiesTreeModel*
  %114 = bitcast i8* %112 to i32 (...)***
  %115 = ptrtoint i8* %112 to i64
  %116 = call i8* @_Znwm(i64 72) #18
  %117 = getelementptr inbounds i8, i8* %116, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 56, i1 false) #17
  %118 = bitcast i8* %116 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV18CookieTreeRootNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8
  %119 = getelementptr inbounds i8, i8* %116, i64 64
  %120 = bitcast i8* %119 to i64*
  store i64 %115, i64* %120, align 8
  %121 = ptrtoint i8* %116 to i64
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2ui13TreeNodeModelI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %122 = getelementptr inbounds i8, i8* %112, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #17
  %123 = getelementptr inbounds i8, i8* %112, i64 32
  %124 = bitcast i8* %123 to %"class.base::internal::LinkNodeBase"*
  call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %124, %"class.base::internal::LinkNodeBase"* %124, %"class.base::internal::LinkNodeBase"* %124) #17
  %125 = getelementptr inbounds i8, i8* %112, i64 48
  %126 = bitcast i8* %125 to i64*
  store i64 0, i64* %126, align 8
  %127 = getelementptr inbounds i8, i8* %112, i64 56
  %128 = bitcast i8* %127 to i32*
  store i32 0, i32* %128, align 8
  %129 = getelementptr inbounds i8, i8* %112, i64 64
  %130 = bitcast i8* %129 to i64*
  store i64 %121, i64* %130, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV16CookiesTreeModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %131 = getelementptr inbounds i8, i8* %112, i64 72
  %132 = bitcast i8* %131 to %class.ExtensionSpecialStoragePolicy**
  store %class.ExtensionSpecialStoragePolicy* %109, %class.ExtensionSpecialStoragePolicy** %132, align 8
  %133 = icmp eq %class.ExtensionSpecialStoragePolicy* %109, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %103
  %135 = getelementptr inbounds %class.ExtensionSpecialStoragePolicy, %class.ExtensionSpecialStoragePolicy* %109, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw add i32* %135, i32 1 monotonic
  br label %137

137:                                              ; preds = %134, %103
  %138 = getelementptr inbounds i8, i8* %112, i64 80
  %139 = bitcast i8* %138 to i64*
  store i64 %94, i64* %139, align 8
  %140 = getelementptr inbounds i8, i8* %112, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #17
  %141 = getelementptr inbounds i8, i8* %112, i64 112
  %142 = bitcast i8* %141 to %"class.base::internal::LinkNodeBase"*
  call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %142, %"class.base::internal::LinkNodeBase"* %142, %"class.base::internal::LinkNodeBase"* %142) #17
  %143 = getelementptr inbounds i8, i8* %112, i64 128
  %144 = bitcast i8* %143 to i64*
  store i64 0, i64* %144, align 8
  %145 = getelementptr inbounds i8, i8* %112, i64 136
  %146 = bitcast i8* %145 to i32*
  store i32 0, i32* %146, align 8
  %147 = getelementptr inbounds i8, i8* %112, i64 144
  %148 = bitcast i8* %147 to i64*
  store i64 %111, i64* %148, align 8
  %149 = getelementptr inbounds i8, i8* %112, i64 152
  %150 = bitcast i8* %138 to %class.LocalDataContainer**
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 16, i1 false) #17
  %151 = load %class.LocalDataContainer*, %class.LocalDataContainer** %150, align 8
  call void @_ZN18LocalDataContainer4InitEP16CookiesTreeModel(%class.LocalDataContainer* %151, %class.CookiesTreeModel* nonnull %113) #17
  ret %class.CookiesTreeModel* %113
}

declare %"class.content::StoragePartition"* @_ZN7content14BrowserContext26GetDefaultStoragePartitionEv(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare void @_ZN13browsing_data12CookieHelperC1EPN7content16StoragePartitionEN4base17RepeatingCallbackIFbRK4GURLEEE(%"class.browsing_data::CookieHelper"*, %"class.content::StoragePartition"*, %"class.base::RepeatingCallback"*) unnamed_addr #1

declare void @_ZN13browsing_data14DatabaseHelperC1EPN7content14BrowserContextE(%"class.browsing_data::DatabaseHelper"*, %"class.content::BrowserContext"*) unnamed_addr #1

declare void @_ZN13browsing_data18LocalStorageHelperC1EPN7content14BrowserContextE(%"class.browsing_data::LocalStorageHelper"*, %"class.content::BrowserContext"*) unnamed_addr #1

declare void @_ZN13browsing_data14AppCacheHelperC1EPN7content15AppCacheServiceE(%"class.browsing_data::AppCacheHelper"*, %"class.content::AppCacheService"*) unnamed_addr #1

declare void @_ZN13browsing_data15IndexedDBHelperC1EPN7content16StoragePartitionE(%"class.browsing_data::IndexedDBHelper"*, %"class.content::StoragePartition"*) unnamed_addr #1

declare %"class.browsing_data::FileSystemHelper"* @_ZN13browsing_data16FileSystemHelper6CreateEPN7storage17FileSystemContextERKNSt3__16vectorINS1_14FileSystemTypeENS4_9allocatorIS6_EEEEPN7content15NativeIOContextE(%"class.storage::FileSystemContext"*, %"class.std::__1::vector.252"* dereferenceable(24), %"class.content::NativeIOContext"*) local_unnamed_addr #1

declare void @_ZN30browsing_data_file_system_util28GetAdditionalFileSystemTypesEv(%"class.std::__1::vector.252"* sret) local_unnamed_addr #1

declare %class.BrowsingDataQuotaHelper* @_ZN23BrowsingDataQuotaHelper6CreateEP7Profile(%class.Profile*) local_unnamed_addr #1

declare void @_ZN13browsing_data19ServiceWorkerHelperC1EPN7content20ServiceWorkerContextE(%"class.browsing_data::ServiceWorkerHelper"*, %"class.content::ServiceWorkerContext"*) unnamed_addr #1

declare void @_ZN13browsing_data18SharedWorkerHelperC1EPN7content16StoragePartitionE(%"class.browsing_data::SharedWorkerHelper"*, %"class.content::StoragePartition"*) unnamed_addr #1

declare void @_ZN13browsing_data18CacheStorageHelperC1EPN7content16StoragePartitionE(%"class.browsing_data::CacheStorageHelper"*, %"class.content::StoragePartition"*) unnamed_addr #1

declare %class.BrowsingDataMediaLicenseHelper* @_ZN30BrowsingDataMediaLicenseHelper6CreateEPN7storage17FileSystemContextE(%"class.storage::FileSystemContext"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare %class.AccessContextAuditService* @_ZN32AccessContextAuditServiceFactory13GetForProfileEP7Profile(%class.Profile*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.13"* @_ZNK2ui8TreeNodeI14CookieTreeNodeE8GetTitleEv(%"class.ui::TreeNode"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 1
  ret %"class.std::__1::basic_string.13"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14CookieTreeNodeD0Ev(%class.CookieTreeNode*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui8TreeNodeI14CookieTreeNodeE8SetTitleERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 1
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string.13"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.13"* %3, %"class.std::__1::basic_string.13"* dereferenceable(24) %1)
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CookieTreeNode* @_ZN2ui13TreeNodeModelI14CookieTreeNodeE7GetRootEv(%"class.ui::TreeNodeModel"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.CookieTreeNode*, %class.CookieTreeNode** %2, align 8
  ret %class.CookieTreeNode* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE11GetChildrenEPKNS_13TreeModelNodeE(%"class.std::__1::vector.809"* noalias sret, %"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.ui::TreeModelNode"*, align 8
  %6 = getelementptr inbounds %"class.ui::TreeModelNode", %"class.ui::TreeModelNode"* %2, i64 5
  %7 = getelementptr inbounds %"class.std::__1::vector.809", %"class.std::__1::vector.809"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector.809"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #17
  %9 = getelementptr inbounds %"class.ui::TreeModelNode", %"class.ui::TreeModelNode"* %2, i64 6
  %10 = bitcast %"class.ui::TreeModelNode"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.ui::TreeModelNode"* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = bitcast %"class.ui::TreeModelNode"*** %7 to i64*
  %17 = icmp eq i64 %14, 0
  %18 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.22"*
  %19 = inttoptr i64 %11 to %"class.std::__1::unique_ptr.22"*
  br i1 %17, label %32, label %20

20:                                               ; preds = %3
  %21 = icmp ugt i64 %15, 2305843009213693951
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  tail call void @abort() #19
  unreachable

23:                                               ; preds = %20
  %24 = tail call i8* @_Znwm(i64 %14) #18
  %25 = bitcast i8* %24 to %"class.ui::TreeModelNode"**
  %26 = getelementptr inbounds %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %25, i64 %15
  %27 = ptrtoint %"class.ui::TreeModelNode"** %26 to i64
  %28 = insertelement <2 x i8*> undef, i8* %24, i32 0
  %29 = shufflevector <2 x i8*> %28, <2 x i8*> undef, <2 x i32> zeroinitializer
  %30 = ptrtoint <2 x i8*> %29 to <2 x i64>
  %31 = bitcast %"class.std::__1::vector.809"* %0 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 8
  store i64 %27, i64* %16, align 8
  br label %32

32:                                               ; preds = %23, %3
  %33 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.809"* %0, %"class.std::__1::vector.809"** %34, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.22"* %18, %19
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.ui::TreeModelNode"** %5 to i8*
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi %"class.std::__1::unique_ptr.22"* [ %18, %36 ], [ %44, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %class.CookieTreeNode*, %class.CookieTreeNode** %40, align 8
  %42 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %41, i64 0, i32 0, i32 0
  store %"class.ui::TreeModelNode"* %42, %"class.ui::TreeModelNode"** %5, align 8
  %43 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPN2ui13TreeModelNodeENS_9allocatorIS4_EEEEEaSEOS4_(%"class.std::__1::back_insert_iterator"* nonnull %4, %"class.ui::TreeModelNode"** nonnull dereferenceable(8) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %39, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr.22"* %44, %19
  br i1 %45, label %46, label %38

46:                                               ; preds = %38, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE10GetIndexOfEPNS_13TreeModelNodeES4_(%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.ui::TreeModelNode"* %2 to %class.CookieTreeNode*
  %5 = getelementptr inbounds %"class.ui::TreeModelNode", %"class.ui::TreeModelNode"* %1, i64 5
  %6 = bitcast %"class.ui::TreeModelNode"* %5 to %"class.std::__1::unique_ptr.22"**
  %7 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %6, align 8
  %8 = getelementptr inbounds %"class.ui::TreeModelNode", %"class.ui::TreeModelNode"* %1, i64 6
  %9 = bitcast %"class.ui::TreeModelNode"* %8 to %"class.std::__1::unique_ptr.22"**
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %7, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %3, %17
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %18, %17 ], [ %7, %3 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CookieTreeNode*, %class.CookieTreeNode** %14, align 8
  %16 = icmp eq %class.CookieTreeNode* %15, %4
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 1
  %19 = icmp eq %"class.std::__1::unique_ptr.22"* %18, %10
  br i1 %19, label %29, label %12

20:                                               ; preds = %12, %3
  %21 = phi %"class.std::__1::unique_ptr.22"* [ %7, %3 ], [ %13, %12 ]
  %22 = icmp eq %"class.std::__1::unique_ptr.22"* %21, %10
  br i1 %22, label %29, label %23

23:                                               ; preds = %20
  %24 = ptrtoint %"class.std::__1::unique_ptr.22"* %21 to i64
  %25 = ptrtoint %"class.std::__1::unique_ptr.22"* %7 to i64
  %26 = sub i64 %24, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  br label %29

29:                                               ; preds = %17, %20, %23
  %30 = phi i32 [ %28, %23 ], [ -1, %20 ], [ -1, %17 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::TreeModelNode"* @_ZNK2ui13TreeNodeModelI14CookieTreeNodeE9GetParentEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.ui::TreeModelNode", %"class.ui::TreeModelNode"* %1, i64 4
  %4 = bitcast %"class.ui::TreeModelNode"* %3 to %class.CookieTreeNode**
  %5 = load %class.CookieTreeNode*, %class.CookieTreeNode** %4, align 8
  %6 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %5, i64 0, i32 0, i32 0
  ret %"class.ui::TreeModelNode"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE8SetTitleEPNS_13TreeModelNodeERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.ui::TreeNodeModel"*, %"class.ui::TreeModelNode"*, %"class.std::__1::basic_string.13"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.ui::TreeModelNode"* %1 to %"class.ui::TreeNode"*
  %5 = bitcast %"class.ui::TreeModelNode"* %1 to void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)***
  %6 = load void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)**, void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)*, void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)** %6, i64 3
  %8 = load void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)*, void (%"class.ui::TreeNode"*, %"class.std::__1::basic_string.13"*)** %7, align 8
  tail call void %8(%"class.ui::TreeNode"* %4, %"class.std::__1::basic_string.13"* dereferenceable(24) %2) #17
  tail call void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE29NotifyObserverTreeNodeChangedEPNS_13TreeModelNodeE(%"class.ui::TreeNodeModel"* %0, %"class.ui::TreeModelNode"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui8TreeNodeI14CookieTreeNodeED0Ev(%"class.ui::TreeNode"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %"class.ui::TreeNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

declare void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERK4GURLNS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.13"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21CookieTreeCookiesNodeD0Ev(%class.CookieTreeCookiesNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeCookiesNode, %class.CookieTreeCookiesNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeCookiesNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21CookieTreeCookiesNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeCookiesNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 3, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 3, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CookieTreeDatabasesNodeD0Ev(%class.CookieTreeDatabasesNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeDatabasesNode, %class.CookieTreeDatabasesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeDatabasesNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK24CookieTreeCollectionNode13InclusiveSizeEv(%class.CookieTreeCollectionNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeCollectionNode, %class.CookieTreeCollectionNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %2, align 8
  %4 = getelementptr inbounds %class.CookieTreeCollectionNode, %class.CookieTreeCollectionNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %3, %5
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %17, %7 ], [ 0, %1 ]
  %9 = phi %"class.std::__1::unique_ptr.22"* [ %18, %7 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.CookieTreeNode*, %class.CookieTreeNode** %10, align 8
  %12 = bitcast %class.CookieTreeNode* %11 to i64 (%class.CookieTreeNode*)***
  %13 = load i64 (%class.CookieTreeNode*)**, i64 (%class.CookieTreeNode*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%class.CookieTreeNode*)*, i64 (%class.CookieTreeNode*)** %13, i64 4
  %15 = load i64 (%class.CookieTreeNode*)*, i64 (%class.CookieTreeNode*)** %14, align 8
  %16 = tail call i64 %15(%class.CookieTreeNode* %11) #17
  %17 = add nsw i64 %16, %8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 1
  %19 = icmp eq %"class.std::__1::unique_ptr.22"* %18, %5
  br i1 %19, label %20, label %7

20:                                               ; preds = %7, %1
  %21 = phi i64 [ 0, %1 ], [ %17, %7 ]
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23CookieTreeDatabasesNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeDatabasesNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 5, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 5, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24CookieTreeCollectionNodeD0Ev(%class.CookieTreeCollectionNode*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeLocalStoragesNodeD0Ev(%class.CookieTreeLocalStoragesNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeLocalStoragesNode, %class.CookieTreeLocalStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeLocalStoragesNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK27CookieTreeLocalStoragesNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeLocalStoragesNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 7, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 7, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29CookieTreeSessionStoragesNodeD0Ev(%class.CookieTreeSessionStoragesNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeSessionStoragesNode, %class.CookieTreeSessionStoragesNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeSessionStoragesNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK29CookieTreeSessionStoragesNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeSessionStoragesNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 9, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 9, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CookieTreeAppCachesNodeD0Ev(%class.CookieTreeAppCachesNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeAppCachesNode, %class.CookieTreeAppCachesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeAppCachesNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23CookieTreeAppCachesNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeAppCachesNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 11, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 11, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24CookieTreeIndexedDBsNodeD0Ev(%class.CookieTreeIndexedDBsNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeIndexedDBsNode, %class.CookieTreeIndexedDBsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeIndexedDBsNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK24CookieTreeIndexedDBsNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeIndexedDBsNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 13, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 13, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25CookieTreeFileSystemsNodeD0Ev(%class.CookieTreeFileSystemsNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeFileSystemsNode, %class.CookieTreeFileSystemsNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeFileSystemsNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK25CookieTreeFileSystemsNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeFileSystemsNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 15, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 15, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19CookieTreeQuotaNodeD0Ev(%class.CookieTreeQuotaNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeQuotaNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19CookieTreeQuotaNode19DeleteStoredObjectsEv(%class.CookieTreeQuotaNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 0
  %3 = bitcast %class.CookieTreeQuotaNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %4 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %3, align 8
  %5 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %4, i64 7
  %6 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %5, align 8
  %7 = tail call %class.CookiesTreeModel* %6(%class.CookieTreeNode* %2) #17
  %8 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.LocalDataContainer*, %class.LocalDataContainer** %8, align 8
  %10 = icmp eq %class.LocalDataContainer* %9, null
  br i1 %10, label %41, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %9, i64 0, i32 8, i32 0
  %13 = load %class.BrowsingDataQuotaHelper*, %class.BrowsingDataQuotaHelper** %12, align 8
  %14 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %0, i64 0, i32 1
  %15 = bitcast %"class.std::__1::__list_iterator"* %14 to %"struct.std::__1::__list_node"**
  %16 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1, i32 0
  %18 = bitcast %class.BrowsingDataQuotaHelper* %13 to void (%class.BrowsingDataQuotaHelper*, %"class.std::__1::basic_string"*)***
  %19 = load void (%class.BrowsingDataQuotaHelper*, %"class.std::__1::basic_string"*)**, void (%class.BrowsingDataQuotaHelper*, %"class.std::__1::basic_string"*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.BrowsingDataQuotaHelper*, %"class.std::__1::basic_string"*)*, void (%class.BrowsingDataQuotaHelper*, %"class.std::__1::basic_string"*)** %19, i64 1
  %21 = load void (%class.BrowsingDataQuotaHelper*, %"class.std::__1::basic_string"*)*, void (%class.BrowsingDataQuotaHelper*, %"class.std::__1::basic_string"*)** %20, align 8
  tail call void %21(%class.BrowsingDataQuotaHelper* %13, %"class.std::__1::basic_string"* dereferenceable(24) %17) #17
  %22 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %14, i64 0, i32 0
  %23 = load %"struct.std::__1::__list_node_base.289"*, %"struct.std::__1::__list_node_base.289"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base.289", %"struct.std::__1::__list_node_base.289"* %23, i64 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base.289"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base.289", %"struct.std::__1::__list_node_base.289"* %23, i64 0, i32 0
  %28 = load %"struct.std::__1::__list_node_base.289"*, %"struct.std::__1::__list_node_base.289"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base.289", %"struct.std::__1::__list_node_base.289"* %28, i64 0, i32 1
  %30 = bitcast %"struct.std::__1::__list_node_base.289"** %29 to i64*
  store i64 %26, i64* %30, align 8
  %31 = bitcast %"struct.std::__1::__list_node_base.289"* %23 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.std::__1::__list_node_base.289"** %24 to i64**
  %34 = load i64*, i64** %33, align 8
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %9, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, -1
  store i64 %37, i64* %35, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base.289", %"struct.std::__1::__list_node_base.289"* %23, i64 1
  %39 = bitcast %"struct.std::__1::__list_node_base.289"* %38 to %"struct.BrowsingDataQuotaHelper::QuotaInfo"*
  tail call void @_ZN23BrowsingDataQuotaHelper9QuotaInfoD1Ev(%"struct.BrowsingDataQuotaHelper::QuotaInfo"* %39) #17
  %40 = bitcast %"struct.std::__1::__list_node_base.289"* %23 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  br label %41

41:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK19CookieTreeQuotaNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeQuotaNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeQuotaNode, %class.CookieTreeQuotaNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator"* %9 to %"struct.std::__1::__list_node"**
  %11 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %11, i64 0, i32 1
  store i32 17, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 5
  store %"struct.BrowsingDataQuotaHelper::QuotaInfo"* %12, %"struct.BrowsingDataQuotaHelper::QuotaInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 17, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %15, %"class.url::Origin"* dereferenceable(80) %6) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %17 = bitcast %"class.net::CanonicalCookie"** %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN23BrowsingDataQuotaHelper9QuotaInfoD1Ev(%"struct.BrowsingDataQuotaHelper::QuotaInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28CookieTreeServiceWorkersNodeD0Ev(%class.CookieTreeServiceWorkersNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeServiceWorkersNode, %class.CookieTreeServiceWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeServiceWorkersNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK28CookieTreeServiceWorkersNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeServiceWorkersNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 18, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 18, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeSharedWorkersNodeD0Ev(%class.CookieTreeSharedWorkersNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeSharedWorkersNode, %class.CookieTreeSharedWorkersNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeSharedWorkersNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK27CookieTreeSharedWorkersNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeSharedWorkersNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 20, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 20, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeCacheStoragesNodeD0Ev(%class.CookieTreeCacheStoragesNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeCacheStoragesNode, %class.CookieTreeCacheStoragesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeCacheStoragesNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK27CookieTreeCacheStoragesNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeCacheStoragesNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 22, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 22, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeMediaLicensesNodeD0Ev(%class.CookieTreeMediaLicensesNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeMediaLicensesNode, %class.CookieTreeMediaLicensesNode* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeMediaLicensesNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK27CookieTreeMediaLicensesNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeMediaLicensesNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  store i32 24, i32* %5, align 8
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 24, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %6) #17
  %11 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.net::CanonicalCookie"** %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE28NotifyObserverTreeNodesAddedEPS1_mm(%"class.ui::TreeNodeModel"*, %class.CookieTreeNode*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1
  %8 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %12 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !183
  %15 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %15, align 8, !noalias !183
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %14, %16
  %18 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %18) #17
  br i1 %17, label %19, label %21

19:                                               ; preds = %4
  %20 = bitcast %"class.base::ObserverList"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17, !alias.scope !183
  br label %61

21:                                               ; preds = %4
  store %"class.base::ObserverList"* %7, %"class.base::ObserverList"** %9, align 8
  %22 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %18, %"class.base::internal::LinkNodeBase"* %22) #17
  store i64 0, i64* %10, align 8
  %23 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %15 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::ObserverList"* %7 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  br label %33

33:                                               ; preds = %26, %21
  %34 = phi i64 [ %32, %26 ], [ -1, %21 ]
  store i64 %34, i64* %11, align 8
  %35 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %35, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::ObserverList"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, %34
  %44 = select i1 %43, i64 %42, i64 %34
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %61, label %46

46:                                               ; preds = %33
  %47 = inttoptr i64 %40 to %"class.base::internal::UncheckedObserverAdapter"*
  %48 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %35, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %47, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %46, %56
  %53 = phi i64 [ %54, %56 ], [ 0, %46 ]
  %54 = add nuw i64 %53, 1
  store i64 %54, i64* %10, align 8
  %55 = icmp ult i64 %54, %44
  br i1 %55, label %56, label %61

56:                                               ; preds = %52
  %57 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %48, align 8
  %58 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %57, i64 %54, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %52, label %61

61:                                               ; preds = %56, %52, %46, %33, %19
  %62 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #17
  %63 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %66 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %66) #17
  %68 = bitcast %"class.base::ObserverList"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #17, !alias.scope !186
  %69 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 0
  %70 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %1, i64 0, i32 0, i32 0
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  br label %72

72:                                               ; preds = %311, %61
  %73 = phi %"class.base::ObserverList"* [ %71, %61 ], [ %309, %311 ]
  %74 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %10, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %11, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %92 = icmp eq %"class.base::ObserverList"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %64, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %65, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList"* %73, %107
  %109 = load i64, i64* %10, align 8
  %110 = load i64, i64* %64, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %300

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = bitcast %"class.base::LinkedList"* %117 to %"class.base::LinkNode"**
  %122 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !189

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %401
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %403, %401 ], [ %173, %171 ]
  %178 = phi i64 [ %402, %401 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %379, label %373

193:                                              ; preds = %401, %171
  %194 = phi i64 [ %172, %171 ], [ %402, %401 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %63, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %66) #17
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #17
  %207 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %208 = icmp eq %"class.base::ObserverList"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = bitcast %"class.base::LinkedList"* %210 to %"class.base::LinkNode"**
  %215 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !190

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %369
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %371, %369 ], [ %266, %264 ]
  %271 = phi i64 [ %370, %369 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %347, label %341

286:                                              ; preds = %369, %264
  %287 = phi i64 [ %265, %264 ], [ %370, %369 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %297 = icmp eq %"class.base::ObserverList"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %9, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %18) #17
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #17
  ret void

300:                                              ; preds = %106
  %301 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  %303 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %302, i64 %109
  %304 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %303 to %"class.ui::TreeModelObserver"**
  %305 = load %"class.ui::TreeModelObserver"*, %"class.ui::TreeModelObserver"** %304, align 8
  %306 = bitcast %"class.ui::TreeModelObserver"* %305 to void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)***
  %307 = load void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)**, void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)*** %306, align 8
  %308 = load void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)*, void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)** %307, align 8
  call void %308(%"class.ui::TreeModelObserver"* %305, %"class.ui::TreeModel"* %69, %"class.ui::TreeModelNode"* %70, i64 %2, i64 %3) #17
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %311, label %312

311:                                              ; preds = %336, %332, %300, %312, %326
  br label %72

312:                                              ; preds = %300
  %313 = load i64, i64* %10, align 8
  %314 = add i64 %313, 1
  store i64 %314, i64* %10, align 8
  %315 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 1
  %316 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.base::ObserverList"* %309 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %317, %319
  %321 = ashr exact i64 %320, 3
  %322 = load i64, i64* %11, align 8
  %323 = icmp ult i64 %321, %322
  %324 = select i1 %323, i64 %321, i64 %322
  %325 = icmp ult i64 %314, %324
  br i1 %325, label %326, label %311

326:                                              ; preds = %312
  %327 = inttoptr i64 %319 to %"class.base::internal::UncheckedObserverAdapter"*
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %327, i64 %314, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %332, label %311

332:                                              ; preds = %326, %336
  %333 = phi i64 [ %334, %336 ], [ %314, %326 ]
  %334 = add nuw i64 %333, 1
  store i64 %334, i64* %10, align 8
  %335 = icmp ult i64 %334, %324
  br i1 %335, label %336, label %311

336:                                              ; preds = %332
  %337 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 %334, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %332, label %311

341:                                              ; preds = %281
  %342 = ptrtoint i8* %284 to i64
  %343 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %344 = inttoptr i64 %282 to i64*
  store i64 %342, i64* %344, align 8
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %343, i64 1
  %346 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %345 to i64
  br label %347

347:                                              ; preds = %341, %281
  %348 = phi i64 [ %282, %281 ], [ %346, %341 ]
  %349 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = icmp eq i8* %350, null
  br i1 %351, label %358, label %352

352:                                              ; preds = %347
  %353 = ptrtoint i8* %350 to i64
  %354 = inttoptr i64 %348 to %"class.base::internal::UncheckedObserverAdapter"*
  %355 = inttoptr i64 %348 to i64*
  store i64 %353, i64* %355, align 8
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %354, i64 1
  %357 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %356 to i64
  br label %358

358:                                              ; preds = %352, %347
  %359 = phi i64 [ %348, %347 ], [ %357, %352 ]
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = icmp eq i8* %361, null
  br i1 %362, label %369, label %363

363:                                              ; preds = %358
  %364 = ptrtoint i8* %361 to i64
  %365 = inttoptr i64 %359 to %"class.base::internal::UncheckedObserverAdapter"*
  %366 = inttoptr i64 %359 to i64*
  store i64 %364, i64* %366, align 8
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %365, i64 1
  %368 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %367 to i64
  br label %369

369:                                              ; preds = %363, %358
  %370 = phi i64 [ %359, %358 ], [ %368, %363 ]
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %372 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %371, %221
  br i1 %372, label %286, label %269

373:                                              ; preds = %188
  %374 = ptrtoint i8* %191 to i64
  %375 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %376 = inttoptr i64 %189 to i64*
  store i64 %374, i64* %376, align 8
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %375, i64 1
  %378 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %377 to i64
  br label %379

379:                                              ; preds = %373, %188
  %380 = phi i64 [ %189, %188 ], [ %378, %373 ]
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = icmp eq i8* %382, null
  br i1 %383, label %390, label %384

384:                                              ; preds = %379
  %385 = ptrtoint i8* %382 to i64
  %386 = inttoptr i64 %380 to %"class.base::internal::UncheckedObserverAdapter"*
  %387 = inttoptr i64 %380 to i64*
  store i64 %385, i64* %387, align 8
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %386, i64 1
  %389 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %388 to i64
  br label %390

390:                                              ; preds = %384, %379
  %391 = phi i64 [ %380, %379 ], [ %389, %384 ]
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = icmp eq i8* %393, null
  br i1 %394, label %401, label %395

395:                                              ; preds = %390
  %396 = ptrtoint i8* %393 to i64
  %397 = inttoptr i64 %391 to %"class.base::internal::UncheckedObserverAdapter"*
  %398 = inttoptr i64 %391 to i64*
  store i64 %396, i64* %398, align 8
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %397, i64 1
  %400 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %399 to i64
  br label %401

401:                                              ; preds = %395, %390
  %402 = phi i64 [ %391, %390 ], [ %400, %395 ]
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %404 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %403, %128
  br i1 %404, label %193, label %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.22"* @_ZNSt3__16vectorINS_10unique_ptrI14CookieTreeNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.22"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.22"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.22"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.22"* %10 to i64
  br i1 %11, label %14, label %150

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.22"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.22"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.22"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.22"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.22"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %382

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.22"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.22"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.22"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %class.CookieTreeNode** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.22"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.22"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.22"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.22"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !191

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.22"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.22"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.22"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %85

60:                                               ; preds = %85, %55
  %61 = phi %"class.std::__1::unique_ptr.22"* [ %58, %55 ], [ %135, %85 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.22"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %137, label %66

66:                                               ; preds = %63, %83
  %67 = phi %"class.std::__1::unique_ptr.22"* [ %70, %83 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.22"* [ %69, %83 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.22"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %class.CookieTreeNode*, %class.CookieTreeNode** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.22"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %class.CookieTreeNode* %75, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %66
  %79 = bitcast %class.CookieTreeNode* %75 to void (%class.CookieTreeNode*)***
  %80 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %80, i64 2
  %82 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %81, align 8
  tail call void %82(%class.CookieTreeNode* nonnull %75) #17
  br label %83

83:                                               ; preds = %78, %66
  %84 = icmp eq %"class.std::__1::unique_ptr.22"* %69, %1
  br i1 %84, label %137, label %66

85:                                               ; preds = %55, %85
  %86 = phi %"class.std::__1::unique_ptr.22"* [ %135, %85 ], [ %56, %55 ]
  %87 = phi %"class.std::__1::unique_ptr.22"* [ %134, %85 ], [ %57, %55 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr.22"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.22"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 1
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %86, i64 1
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr.22"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %94, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.22"* %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 2
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %86, i64 2
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr.22"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %100, align 8
  %103 = bitcast %"class.std::__1::unique_ptr.22"* %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 3
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %86, i64 3
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.22"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.22"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %86, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %110, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr.22"* %110 to i64*
  %114 = load i64, i64* %113, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.22"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %86, i64 5
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %116, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr.22"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %118, align 8
  %121 = bitcast %"class.std::__1::unique_ptr.22"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 6
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %86, i64 6
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %122, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.std::__1::unique_ptr.22"* %122 to i64*
  %126 = load i64, i64* %125, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %124, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.22"* %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 7
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %86, i64 7
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %128, i64 0, i32 0, i32 0, i32 0
  %131 = bitcast %"class.std::__1::unique_ptr.22"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %130, align 8
  %133 = bitcast %"class.std::__1::unique_ptr.22"* %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %87, i64 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %86, i64 8
  %136 = icmp ult %"class.std::__1::unique_ptr.22"* %134, %8
  br i1 %136, label %85, label %60

137:                                              ; preds = %83, %63
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %2, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.22"* %2 to i64*
  %140 = load i64, i64* %139, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %138, align 8
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %1, i64 0, i32 0, i32 0, i32 0
  %142 = load %class.CookieTreeNode*, %class.CookieTreeNode** %141, align 8
  %143 = bitcast %"class.std::__1::unique_ptr.22"* %1 to i64*
  store i64 %140, i64* %143, align 8
  %144 = icmp eq %class.CookieTreeNode* %142, null
  br i1 %144, label %382, label %145

145:                                              ; preds = %137
  %146 = bitcast %class.CookieTreeNode* %142 to void (%class.CookieTreeNode*)***
  %147 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %147, i64 2
  %149 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %148, align 8
  tail call void %149(%class.CookieTreeNode* nonnull %142) #17
  br label %382

150:                                              ; preds = %3
  %151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %152 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %152) #17
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %156 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %158 = bitcast %"class.std::__1::unique_ptr.22"** %7 to i64*
  %159 = bitcast %"class.std::__1::vector"* %0 to i64*
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 40, i1 false)
  %161 = load i64, i64* %159, align 8
  %162 = sub i64 %12, %161
  %163 = ashr exact i64 %162, 3
  %164 = add nsw i64 %163, 1
  %165 = icmp ugt i64 %164, 2305843009213693951
  br i1 %165, label %166, label %168

166:                                              ; preds = %150
  %167 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #19
  unreachable

168:                                              ; preds = %150
  %169 = bitcast %"class.std::__1::unique_ptr.22"** %9 to i64*
  %170 = sub i64 %13, %161
  %171 = ashr exact i64 %170, 3
  %172 = icmp ult i64 %171, 1152921504606846975
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = sub i64 %4, %161
  %175 = ashr exact i64 %174, 3
  store %"class.std::__1::unique_ptr.22"* null, %"class.std::__1::unique_ptr.22"** %156, align 8
  %176 = bitcast %"class.std::__1::allocator.31"** %157 to %"class.std::__1::__compressed_pair.28"**
  store %"class.std::__1::__compressed_pair.28"* %151, %"class.std::__1::__compressed_pair.28"** %176, align 8
  br label %188

177:                                              ; preds = %168
  %178 = ashr exact i64 %170, 2
  %179 = icmp ult i64 %178, %164
  %180 = select i1 %179, i64 %164, i64 %178
  %181 = sub i64 %4, %161
  %182 = ashr exact i64 %181, 3
  store %"class.std::__1::unique_ptr.22"* null, %"class.std::__1::unique_ptr.22"** %156, align 8
  %183 = bitcast %"class.std::__1::allocator.31"** %157 to %"class.std::__1::__compressed_pair.28"**
  store %"class.std::__1::__compressed_pair.28"* %151, %"class.std::__1::__compressed_pair.28"** %183, align 8
  %184 = icmp eq i64 %180, 0
  br i1 %184, label %194, label %185

185:                                              ; preds = %177
  %186 = icmp ugt i64 %180, 2305843009213693951
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  tail call void @abort() #19
  unreachable

188:                                              ; preds = %173, %185
  %189 = phi i64 [ 2305843009213693951, %173 ], [ %180, %185 ]
  %190 = phi i64 [ %175, %173 ], [ %182, %185 ]
  %191 = shl i64 %189, 3
  %192 = tail call i8* @_Znwm(i64 %191) #18
  %193 = bitcast i8* %192 to %"class.std::__1::unique_ptr.22"*
  br label %194

194:                                              ; preds = %177, %188
  %195 = phi i64 [ %190, %188 ], [ %182, %177 ]
  %196 = phi i64 [ %189, %188 ], [ 0, %177 ]
  %197 = phi %"class.std::__1::unique_ptr.22"* [ %193, %188 ], [ null, %177 ]
  store %"class.std::__1::unique_ptr.22"* %197, %"class.std::__1::unique_ptr.22"** %153, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %197, i64 %195
  store %"class.std::__1::unique_ptr.22"* %198, %"class.std::__1::unique_ptr.22"** %155, align 8
  store %"class.std::__1::unique_ptr.22"* %198, %"class.std::__1::unique_ptr.22"** %154, align 8
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %197, i64 %196
  store %"class.std::__1::unique_ptr.22"* %199, %"class.std::__1::unique_ptr.22"** %156, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrI14CookieTreeNodeNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.std::__1::unique_ptr.22"* dereferenceable(8) %2)
  %200 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %154, align 8
  %201 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %6, align 8
  %202 = icmp eq %"class.std::__1::unique_ptr.22"* %201, %1
  br i1 %202, label %267, label %203

203:                                              ; preds = %194
  %204 = ptrtoint %"class.std::__1::unique_ptr.22"* %201 to i64
  %205 = getelementptr %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %1, i64 -1, i32 0, i32 0, i32 0
  %206 = ptrtoint %class.CookieTreeNode** %205 to i64
  %207 = sub i64 %206, %204
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = and i64 %209, 3
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %226, label %212

212:                                              ; preds = %203, %212
  %213 = phi %"class.std::__1::unique_ptr.22"* [ %223, %212 ], [ %200, %203 ]
  %214 = phi %"class.std::__1::unique_ptr.22"* [ %217, %212 ], [ %1, %203 ]
  %215 = phi i64 [ %224, %212 ], [ %210, %203 ]
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %213, i64 -1
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %214, i64 -1
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %217, i64 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.std::__1::unique_ptr.22"* %217 to i64*
  %220 = load i64, i64* %219, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %218, align 8
  %221 = bitcast %"class.std::__1::unique_ptr.22"* %216 to i64*
  store i64 %220, i64* %221, align 8
  %222 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %154, align 8
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %222, i64 -1
  store %"class.std::__1::unique_ptr.22"* %223, %"class.std::__1::unique_ptr.22"** %154, align 8
  %224 = add i64 %215, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %212, !llvm.loop !192

226:                                              ; preds = %212, %203
  %227 = phi %"class.std::__1::unique_ptr.22"* [ undef, %203 ], [ %223, %212 ]
  %228 = phi %"class.std::__1::unique_ptr.22"* [ %200, %203 ], [ %223, %212 ]
  %229 = phi %"class.std::__1::unique_ptr.22"* [ %1, %203 ], [ %217, %212 ]
  %230 = icmp ult i64 %207, 24
  br i1 %230, label %267, label %231

231:                                              ; preds = %226, %231
  %232 = phi %"class.std::__1::unique_ptr.22"* [ %265, %231 ], [ %228, %226 ]
  %233 = phi %"class.std::__1::unique_ptr.22"* [ %259, %231 ], [ %229, %226 ]
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %232, i64 -1
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %233, i64 -1
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %235, i64 0, i32 0, i32 0, i32 0
  %237 = bitcast %"class.std::__1::unique_ptr.22"* %235 to i64*
  %238 = load i64, i64* %237, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %236, align 8
  %239 = bitcast %"class.std::__1::unique_ptr.22"* %234 to i64*
  store i64 %238, i64* %239, align 8
  %240 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %154, align 8
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %240, i64 -1
  store %"class.std::__1::unique_ptr.22"* %241, %"class.std::__1::unique_ptr.22"** %154, align 8
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %240, i64 -2
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %233, i64 -2
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %243, i64 0, i32 0, i32 0, i32 0
  %245 = bitcast %"class.std::__1::unique_ptr.22"* %243 to i64*
  %246 = load i64, i64* %245, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %244, align 8
  %247 = bitcast %"class.std::__1::unique_ptr.22"* %242 to i64*
  store i64 %246, i64* %247, align 8
  %248 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %154, align 8
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %248, i64 -1
  store %"class.std::__1::unique_ptr.22"* %249, %"class.std::__1::unique_ptr.22"** %154, align 8
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %248, i64 -2
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %233, i64 -3
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %251, i64 0, i32 0, i32 0, i32 0
  %253 = bitcast %"class.std::__1::unique_ptr.22"* %251 to i64*
  %254 = load i64, i64* %253, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %252, align 8
  %255 = bitcast %"class.std::__1::unique_ptr.22"* %250 to i64*
  store i64 %254, i64* %255, align 8
  %256 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %154, align 8
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %256, i64 -1
  store %"class.std::__1::unique_ptr.22"* %257, %"class.std::__1::unique_ptr.22"** %154, align 8
  %258 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %256, i64 -2
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %233, i64 -4
  %260 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %259, i64 0, i32 0, i32 0, i32 0
  %261 = bitcast %"class.std::__1::unique_ptr.22"* %259 to i64*
  %262 = load i64, i64* %261, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %260, align 8
  %263 = bitcast %"class.std::__1::unique_ptr.22"* %258 to i64*
  store i64 %262, i64* %263, align 8
  %264 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %154, align 8
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %264, i64 -1
  store %"class.std::__1::unique_ptr.22"* %265, %"class.std::__1::unique_ptr.22"** %154, align 8
  %266 = icmp eq %"class.std::__1::unique_ptr.22"* %259, %201
  br i1 %266, label %267, label %231

267:                                              ; preds = %226, %231, %194
  %268 = phi %"class.std::__1::unique_ptr.22"* [ %200, %194 ], [ %227, %226 ], [ %265, %231 ]
  %269 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %7, align 8
  %270 = icmp eq %"class.std::__1::unique_ptr.22"* %269, %1
  br i1 %270, label %271, label %277

271:                                              ; preds = %267
  %272 = ptrtoint %"class.std::__1::unique_ptr.22"* %269 to i64
  %273 = ptrtoint %"class.std::__1::unique_ptr.22"* %268 to i64
  %274 = bitcast %"class.std::__1::unique_ptr.22"** %154 to i64*
  %275 = bitcast %"class.std::__1::unique_ptr.22"** %155 to i64*
  %276 = load i64, i64* %275, align 8
  br label %346

277:                                              ; preds = %267
  %278 = bitcast %"class.std::__1::unique_ptr.22"** %155 to i64**
  %279 = load i64*, i64** %278, align 8
  %280 = getelementptr %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %269, i64 -1, i32 0, i32 0, i32 0
  %281 = ptrtoint %class.CookieTreeNode** %280 to i64
  %282 = sub i64 %281, %4
  %283 = lshr i64 %282, 3
  %284 = add nuw nsw i64 %283, 1
  %285 = and i64 %284, 3
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %302, label %287

287:                                              ; preds = %277, %287
  %288 = phi i64* [ %297, %287 ], [ %279, %277 ]
  %289 = phi %"class.std::__1::unique_ptr.22"* [ %294, %287 ], [ %1, %277 ]
  %290 = phi i64 [ %298, %287 ], [ %285, %277 ]
  %291 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %289, i64 0, i32 0, i32 0, i32 0
  %292 = bitcast %"class.std::__1::unique_ptr.22"* %289 to i64*
  %293 = load i64, i64* %292, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %291, align 8
  store i64 %293, i64* %288, align 8
  %294 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %289, i64 1
  %295 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %155, align 8
  %296 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %295, i64 1
  store %"class.std::__1::unique_ptr.22"* %296, %"class.std::__1::unique_ptr.22"** %155, align 8
  %297 = bitcast %"class.std::__1::unique_ptr.22"* %296 to i64*
  %298 = add i64 %290, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %287, !llvm.loop !193

300:                                              ; preds = %287
  %301 = bitcast %"class.std::__1::unique_ptr.22"* %296 to i64*
  br label %302

302:                                              ; preds = %277, %300
  %303 = phi %"class.std::__1::unique_ptr.22"* [ undef, %277 ], [ %296, %300 ]
  %304 = phi i64* [ %279, %277 ], [ %301, %300 ]
  %305 = phi %"class.std::__1::unique_ptr.22"* [ %1, %277 ], [ %294, %300 ]
  %306 = icmp ult i64 %282, 24
  br i1 %306, label %339, label %307

307:                                              ; preds = %302, %307
  %308 = phi i64* [ %338, %307 ], [ %304, %302 ]
  %309 = phi %"class.std::__1::unique_ptr.22"* [ %334, %307 ], [ %305, %302 ]
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %309, i64 0, i32 0, i32 0, i32 0
  %311 = bitcast %"class.std::__1::unique_ptr.22"* %309 to i64*
  %312 = load i64, i64* %311, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %310, align 8
  store i64 %312, i64* %308, align 8
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %309, i64 1
  %314 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %155, align 8
  %315 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %314, i64 1
  store %"class.std::__1::unique_ptr.22"* %315, %"class.std::__1::unique_ptr.22"** %155, align 8
  %316 = bitcast %"class.std::__1::unique_ptr.22"* %315 to i64*
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %313, i64 0, i32 0, i32 0, i32 0
  %318 = bitcast %"class.std::__1::unique_ptr.22"* %313 to i64*
  %319 = load i64, i64* %318, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %317, align 8
  store i64 %319, i64* %316, align 8
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %309, i64 2
  %321 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %155, align 8
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %321, i64 1
  store %"class.std::__1::unique_ptr.22"* %322, %"class.std::__1::unique_ptr.22"** %155, align 8
  %323 = bitcast %"class.std::__1::unique_ptr.22"* %322 to i64*
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %320, i64 0, i32 0, i32 0, i32 0
  %325 = bitcast %"class.std::__1::unique_ptr.22"* %320 to i64*
  %326 = load i64, i64* %325, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %324, align 8
  store i64 %326, i64* %323, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %309, i64 3
  %328 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %155, align 8
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %328, i64 1
  store %"class.std::__1::unique_ptr.22"* %329, %"class.std::__1::unique_ptr.22"** %155, align 8
  %330 = bitcast %"class.std::__1::unique_ptr.22"* %329 to i64*
  %331 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %327, i64 0, i32 0, i32 0, i32 0
  %332 = bitcast %"class.std::__1::unique_ptr.22"* %327 to i64*
  %333 = load i64, i64* %332, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %331, align 8
  store i64 %333, i64* %330, align 8
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %309, i64 4
  %335 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %155, align 8
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %335, i64 1
  store %"class.std::__1::unique_ptr.22"* %336, %"class.std::__1::unique_ptr.22"** %155, align 8
  %337 = icmp eq %"class.std::__1::unique_ptr.22"* %334, %269
  %338 = bitcast %"class.std::__1::unique_ptr.22"* %336 to i64*
  br i1 %337, label %339, label %307

339:                                              ; preds = %307, %302
  %340 = phi %"class.std::__1::unique_ptr.22"* [ %303, %302 ], [ %336, %307 ]
  %341 = ptrtoint %"class.std::__1::unique_ptr.22"* %340 to i64
  %342 = bitcast %"class.std::__1::unique_ptr.22"** %154 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = load i64, i64* %158, align 8
  %345 = bitcast %"class.std::__1::unique_ptr.22"** %155 to i64*
  br label %346

346:                                              ; preds = %271, %339
  %347 = phi i64* [ %275, %271 ], [ %345, %339 ]
  %348 = phi i64 [ %276, %271 ], [ %341, %339 ]
  %349 = phi i64 [ %272, %271 ], [ %344, %339 ]
  %350 = phi i64* [ %274, %271 ], [ %342, %339 ]
  %351 = phi i64 [ %273, %271 ], [ %343, %339 ]
  %352 = load i64, i64* %159, align 8
  store i64 %351, i64* %159, align 8
  store i64 %352, i64* %350, align 8
  store i64 %348, i64* %158, align 8
  store i64 %349, i64* %347, align 8
  %353 = load i64, i64* %169, align 8
  %354 = bitcast %"class.std::__1::unique_ptr.22"** %156 to i64*
  %355 = load i64, i64* %354, align 8
  store i64 %355, i64* %169, align 8
  store i64 %353, i64* %354, align 8
  %356 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %352, i64* %356, align 8
  %357 = inttoptr i64 %352 to %"class.std::__1::unique_ptr.22"*
  %358 = inttoptr i64 %349 to %"class.std::__1::unique_ptr.22"*
  %359 = icmp eq %"class.std::__1::unique_ptr.22"* %358, %357
  br i1 %359, label %376, label %360

360:                                              ; preds = %346, %371
  %361 = phi %"class.std::__1::unique_ptr.22"* [ %372, %371 ], [ %358, %346 ]
  %362 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %361, i64 -1
  store %"class.std::__1::unique_ptr.22"* %362, %"class.std::__1::unique_ptr.22"** %155, align 8
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %362, i64 0, i32 0, i32 0, i32 0
  %364 = load %class.CookieTreeNode*, %class.CookieTreeNode** %363, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %363, align 8
  %365 = icmp eq %class.CookieTreeNode* %364, null
  br i1 %365, label %371, label %366

366:                                              ; preds = %360
  %367 = bitcast %class.CookieTreeNode* %364 to void (%class.CookieTreeNode*)***
  %368 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %367, align 8
  %369 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %368, i64 2
  %370 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %369, align 8
  call void %370(%class.CookieTreeNode* nonnull %364) #17
  br label %371

371:                                              ; preds = %366, %360
  %372 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %155, align 8
  %373 = icmp eq %"class.std::__1::unique_ptr.22"* %372, %357
  br i1 %373, label %374, label %360

374:                                              ; preds = %371
  %375 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %153, align 8
  br label %376

376:                                              ; preds = %374, %346
  %377 = phi %"class.std::__1::unique_ptr.22"* [ %375, %374 ], [ %357, %346 ]
  %378 = icmp eq %"class.std::__1::unique_ptr.22"* %377, null
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = bitcast %"class.std::__1::unique_ptr.22"* %377 to i8*
  call void @_ZdlPv(i8* %380) #18
  br label %381

381:                                              ; preds = %376, %379
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %152) #17
  br label %382

382:                                              ; preds = %145, %137, %16, %381
  %383 = phi %"class.std::__1::unique_ptr.22"* [ %1, %16 ], [ %200, %381 ], [ %1, %137 ], [ %1, %145 ]
  ret %"class.std::__1::unique_ptr.22"* %383
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrI14CookieTreeNodeNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.22"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.22"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.22"* %6 to i64
  br i1 %7, label %9, label %185

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.22"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.22"* %13 to i64
  br i1 %14, label %16, label %49

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.22"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.22"* %11, %4
  br i1 %23, label %45, label %24

24:                                               ; preds = %16, %39
  %25 = phi %"class.std::__1::unique_ptr.22"* [ %41, %39 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.22"* [ %40, %39 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.22"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %class.CookieTreeNode*, %class.CookieTreeNode** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.22"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %class.CookieTreeNode* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %24
  %35 = bitcast %class.CookieTreeNode* %31 to void (%class.CookieTreeNode*)***
  %36 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %36, i64 2
  %38 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %37, align 8
  tail call void %38(%class.CookieTreeNode* nonnull %31) #17
  br label %39

39:                                               ; preds = %34, %24
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %26, i64 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %25, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr.22"* %40, %4
  br i1 %42, label %43, label %24

43:                                               ; preds = %39
  %44 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %10, align 8
  br label %45

45:                                               ; preds = %43, %16
  %46 = phi %"class.std::__1::unique_ptr.22"* [ %4, %16 ], [ %44, %43 ]
  %47 = phi %"class.std::__1::unique_ptr.22"* [ %22, %16 ], [ %41, %43 ]
  store %"class.std::__1::unique_ptr.22"* %47, %"class.std::__1::unique_ptr.22"** %3, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %46, i64 %21
  store %"class.std::__1::unique_ptr.22"* %48, %"class.std::__1::unique_ptr.22"** %10, align 8
  br label %185

49:                                               ; preds = %9
  %50 = bitcast %"class.std::__1::unique_ptr.22"** %5 to i64*
  %51 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %52 = sub i64 %8, %15
  %53 = ashr exact i64 %52, 2
  %54 = icmp eq i64 %52, 0
  %55 = select i1 %54, i64 1, i64 %53
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %49
  tail call void @abort() #19
  unreachable

58:                                               ; preds = %49
  %59 = lshr i64 %55, 2
  %60 = shl i64 %55, 3
  %61 = tail call i8* @_Znwm(i64 %60) #18
  %62 = bitcast i8* %61 to %"class.std::__1::unique_ptr.22"*
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %62, i64 %59
  %65 = ptrtoint %"class.std::__1::unique_ptr.22"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %62, i64 %55
  %67 = ptrtoint %"class.std::__1::unique_ptr.22"* %66 to i64
  %68 = ptrtoint %"class.std::__1::unique_ptr.22"* %11 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr.22"* %4 to i64
  %70 = sub i64 %69, %68
  %71 = ashr exact i64 %70, 3
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %64, i64 %71
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %160, label %74

74:                                               ; preds = %58
  %75 = add i64 %70, -8
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 7
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %74, %80
  %81 = phi %"class.std::__1::unique_ptr.22"* [ %89, %80 ], [ %64, %74 ]
  %82 = phi i64 [ %90, %80 ], [ %65, %74 ]
  %83 = phi %"class.std::__1::unique_ptr.22"* [ %91, %80 ], [ %11, %74 ]
  %84 = phi i64 [ %92, %80 ], [ %78, %74 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %83, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.22"* %83 to i64*
  %87 = load i64, i64* %86, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %85, align 8
  %88 = inttoptr i64 %82 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %81, i64 1
  %90 = ptrtoint %"class.std::__1::unique_ptr.22"* %89 to i64
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %83, i64 1
  %92 = add i64 %84, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %80, !llvm.loop !194

94:                                               ; preds = %80
  %95 = ptrtoint %"class.std::__1::unique_ptr.22"* %89 to i64
  br label %96

96:                                               ; preds = %74, %94
  %97 = phi %"class.std::__1::unique_ptr.22"* [ %64, %74 ], [ %89, %94 ]
  %98 = phi i64 [ %65, %74 ], [ %95, %94 ]
  %99 = phi %"class.std::__1::unique_ptr.22"* [ %11, %74 ], [ %91, %94 ]
  %100 = icmp ult i64 %75, 56
  br i1 %100, label %155, label %101

101:                                              ; preds = %96, %101
  %102 = phi %"class.std::__1::unique_ptr.22"* [ %151, %101 ], [ %97, %96 ]
  %103 = phi i64 [ %152, %101 ], [ %98, %96 ]
  %104 = phi %"class.std::__1::unique_ptr.22"* [ %153, %101 ], [ %99, %96 ]
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.22"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %105, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %102, i64 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.22"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.22"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %102, i64 2
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 2
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.22"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.22"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %102, i64 3
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 3
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.22"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.22"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %102, i64 4
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 4
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr.22"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.22"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %102, i64 5
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 5
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.22"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %135, align 8
  %138 = bitcast %"class.std::__1::unique_ptr.22"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %102, i64 6
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 6
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.22"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.22"* %139 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %102, i64 7
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 7
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr.22"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %147, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.22"* %145 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %102, i64 8
  %152 = ptrtoint %"class.std::__1::unique_ptr.22"* %151 to i64
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %104, i64 8
  %154 = icmp eq %"class.std::__1::unique_ptr.22"* %72, %151
  br i1 %154, label %155, label %101

155:                                              ; preds = %101, %96
  %156 = ptrtoint %"class.std::__1::unique_ptr.22"* %72 to i64
  %157 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %12, align 8
  %158 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %10, align 8
  %159 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %3, align 8
  br label %160

160:                                              ; preds = %58, %155
  %161 = phi %"class.std::__1::unique_ptr.22"* [ %159, %155 ], [ %4, %58 ]
  %162 = phi %"class.std::__1::unique_ptr.22"* [ %158, %155 ], [ %11, %58 ]
  %163 = phi %"class.std::__1::unique_ptr.22"* [ %157, %155 ], [ %13, %58 ]
  %164 = phi i64 [ %156, %155 ], [ %65, %58 ]
  store i64 %63, i64* %51, align 8
  %165 = bitcast %"class.std::__1::unique_ptr.22"** %10 to i64*
  store i64 %65, i64* %165, align 8
  %166 = bitcast %"class.std::__1::unique_ptr.22"** %3 to i64*
  store i64 %164, i64* %166, align 8
  store i64 %67, i64* %50, align 8
  %167 = icmp eq %"class.std::__1::unique_ptr.22"* %161, %162
  br i1 %167, label %181, label %168

168:                                              ; preds = %160, %179
  %169 = phi %"class.std::__1::unique_ptr.22"* [ %170, %179 ], [ %161, %160 ]
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %169, i64 -1
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %class.CookieTreeNode*, %class.CookieTreeNode** %171, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %171, align 8
  %173 = icmp eq %class.CookieTreeNode* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %168
  %175 = bitcast %class.CookieTreeNode* %172 to void (%class.CookieTreeNode*)***
  %176 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %175, align 8
  %177 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %176, i64 2
  %178 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %177, align 8
  tail call void %178(%class.CookieTreeNode* nonnull %172) #17
  br label %179

179:                                              ; preds = %174, %168
  %180 = icmp eq %"class.std::__1::unique_ptr.22"* %170, %162
  br i1 %180, label %181, label %168

181:                                              ; preds = %179, %160
  %182 = icmp eq %"class.std::__1::unique_ptr.22"* %163, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::unique_ptr.22"* %163 to i8*
  tail call void @_ZdlPv(i8* %184) #18
  br label %185

185:                                              ; preds = %183, %181, %45, %2
  %186 = bitcast %"class.std::__1::unique_ptr.22"** %3 to i64**
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %1, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr.22"* %1 to i64*
  %190 = load i64, i64* %189, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %188, align 8
  store i64 %190, i64* %187, align 8
  %191 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %3, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %191, i64 1
  store %"class.std::__1::unique_ptr.22"* %192, %"class.std::__1::unique_ptr.22"** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN14CookieTreeNode12DetailedInfo8NodeTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #15 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #17
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui9TreeModel8GetIconsEPNSt3__16vectorIN3gfx9ImageSkiaENS1_9allocatorIS4_EEEE(%"class.ui::TreeModel"*, %"class.std::__1::vector.664"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZN2ui9TreeModel12GetIconIndexEPNS_13TreeModelNodeE(%"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13TreeNodeModelI14CookieTreeNodeED2Ev(%"class.ui::TreeNodeModel"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2ui13TreeNodeModelI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CookieTreeNode*, %class.CookieTreeNode** %3, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %3, align 8
  %5 = icmp eq %class.CookieTreeNode* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CookieTreeNode* %4 to void (%class.CookieTreeNode*)***
  %8 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %8, i64 2
  %10 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %9, align 8
  tail call void %10(%class.CookieTreeNode* nonnull %4) #17
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %13 = bitcast %"class.base::internal::LinkNodeBase"** %12 to %"class.base::LinkNode"**
  %14 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %13, align 8
  %16 = icmp eq %"class.base::LinkNode"* %15, %14
  br i1 %16, label %29, label %17

17:                                               ; preds = %11, %26
  %18 = phi %"class.base::LinkNode"* [ %27, %26 ], [ %15, %11 ]
  %19 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %18, i64 1
  %20 = bitcast %"class.base::LinkNode"* %19 to %"class.base::ObserverList"**
  %21 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %22 = icmp eq %"class.base::ObserverList"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %20, align 8
  %24 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %18, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %24) #17
  %25 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %13, align 8
  br label %26

26:                                               ; preds = %23, %17
  %27 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %25, %23 ]
  %28 = icmp eq %"class.base::LinkNode"* %27, %14
  br i1 %28, label %29, label %17

29:                                               ; preds = %26, %11
  %30 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %30, align 8
  %32 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %31 to i64
  %35 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %36 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13TreeNodeModelI14CookieTreeNodeED0Ev(%"class.ui::TreeNodeModel"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2ui13TreeNodeModelI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CookieTreeNode*, %class.CookieTreeNode** %3, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %3, align 8
  %5 = icmp eq %class.CookieTreeNode* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CookieTreeNode* %4 to void (%class.CookieTreeNode*)***
  %8 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %8, i64 2
  %10 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %9, align 8
  tail call void %10(%class.CookieTreeNode* nonnull %4) #17
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %13 = bitcast %"class.base::internal::LinkNodeBase"** %12 to %"class.base::LinkNode"**
  %14 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %13, align 8
  %16 = icmp eq %"class.base::LinkNode"* %15, %14
  br i1 %16, label %29, label %17

17:                                               ; preds = %11, %26
  %18 = phi %"class.base::LinkNode"* [ %27, %26 ], [ %15, %11 ]
  %19 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %18, i64 1
  %20 = bitcast %"class.base::LinkNode"* %19 to %"class.base::ObserverList"**
  %21 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %22 = icmp eq %"class.base::ObserverList"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %20, align 8
  %24 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %18, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %24) #17
  %25 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %13, align 8
  br label %26

26:                                               ; preds = %23, %17
  %27 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %25, %23 ]
  %28 = icmp eq %"class.base::LinkNode"* %27, %14
  br i1 %28, label %29, label %17

29:                                               ; preds = %26, %11
  %30 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %30, align 8
  %32 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %31 to i64
  %35 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %36 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %29, %33
  %39 = bitcast %"class.ui::TreeNodeModel"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #18
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx9ImageSkiaENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.664"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.664", %"class.std::__1::vector.664"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::ImageSkia"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.664"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.664"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.664", %"class.std::__1::vector.664"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.gfx::ImageSkia"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.gfx::ImageSkia"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.gfx::ImageSkia"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %36, i64 %9
  %38 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %36, i64 %35
  %39 = ptrtoint %"class.gfx::ImageSkia"* %38 to i64
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %37, %"class.gfx::ImageSkia"* dereferenceable(8) %1) #17
  %40 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %37, i64 1
  %41 = ptrtoint %"class.gfx::ImageSkia"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.664", %"class.std::__1::vector.664"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %42, align 8
  %44 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %3, align 8
  %45 = icmp eq %"class.gfx::ImageSkia"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.gfx::ImageSkia"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.gfx::ImageSkia"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.gfx::ImageSkia"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %49, i64 -1
  %52 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %50, i64 -1
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %51, %"class.gfx::ImageSkia"* dereferenceable(8) %52) #17
  %53 = icmp eq %"class.gfx::ImageSkia"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.gfx::ImageSkia"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.gfx::ImageSkia"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.gfx::ImageSkia"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.gfx::ImageSkia"*
  %63 = icmp eq %"class.gfx::ImageSkia"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.gfx::ImageSkia"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %65, i64 -1
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %66) #17
  %67 = icmp eq %"class.gfx::ImageSkia"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx9ImageSkiaENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.664"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.664", %"class.std::__1::vector.664"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::ImageSkia"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.664"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.664"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.664", %"class.std::__1::vector.664"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.gfx::ImageSkia"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.gfx::ImageSkia"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.gfx::ImageSkia"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %36, i64 %9
  %38 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %36, i64 %35
  %39 = ptrtoint %"class.gfx::ImageSkia"* %38 to i64
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %37, %"class.gfx::ImageSkia"* dereferenceable(8) %1) #17
  %40 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %37, i64 1
  %41 = ptrtoint %"class.gfx::ImageSkia"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.664", %"class.std::__1::vector.664"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %42, align 8
  %44 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %3, align 8
  %45 = icmp eq %"class.gfx::ImageSkia"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.gfx::ImageSkia"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.gfx::ImageSkia"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.gfx::ImageSkia"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %49, i64 -1
  %52 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %50, i64 -1
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %51, %"class.gfx::ImageSkia"* dereferenceable(8) %52) #17
  %53 = icmp eq %"class.gfx::ImageSkia"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.gfx::ImageSkia"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.gfx::ImageSkia"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.gfx::ImageSkia"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.gfx::ImageSkia"*
  %63 = icmp eq %"class.gfx::ImageSkia"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.gfx::ImageSkia"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %65, i64 -1
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %66) #17
  %67 = icmp eq %"class.gfx::ImageSkia"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13TreeNodeModelI14CookieTreeNodeE30NotifyObserverTreeNodesRemovedEPS1_mm(%"class.ui::TreeNodeModel"*, %class.CookieTreeNode*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1
  %8 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %12 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !195
  %15 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %15, align 8, !noalias !195
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %14, %16
  %18 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %18) #17
  br i1 %17, label %19, label %21

19:                                               ; preds = %4
  %20 = bitcast %"class.base::ObserverList"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17, !alias.scope !195
  br label %61

21:                                               ; preds = %4
  store %"class.base::ObserverList"* %7, %"class.base::ObserverList"** %9, align 8
  %22 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %18, %"class.base::internal::LinkNodeBase"* %22) #17
  store i64 0, i64* %10, align 8
  %23 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 1, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %15 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::ObserverList"* %7 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  br label %33

33:                                               ; preds = %26, %21
  %34 = phi i64 [ %32, %26 ], [ -1, %21 ]
  store i64 %34, i64* %11, align 8
  %35 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %35, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::ObserverList"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, %34
  %44 = select i1 %43, i64 %42, i64 %34
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %61, label %46

46:                                               ; preds = %33
  %47 = inttoptr i64 %40 to %"class.base::internal::UncheckedObserverAdapter"*
  %48 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %35, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %47, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %46, %56
  %53 = phi i64 [ %54, %56 ], [ 0, %46 ]
  %54 = add nuw i64 %53, 1
  store i64 %54, i64* %10, align 8
  %55 = icmp ult i64 %54, %44
  br i1 %55, label %56, label %61

56:                                               ; preds = %52
  %57 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %48, align 8
  %58 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %57, i64 %54, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %52, label %61

61:                                               ; preds = %56, %52, %46, %33, %19
  %62 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #17
  %63 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %66 = getelementptr inbounds %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::ObserverList<ui::TreeModelObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %66) #17
  %68 = bitcast %"class.base::ObserverList"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #17, !alias.scope !198
  %69 = getelementptr inbounds %"class.ui::TreeNodeModel", %"class.ui::TreeNodeModel"* %0, i64 0, i32 0
  %70 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %1, i64 0, i32 0, i32 0
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  br label %72

72:                                               ; preds = %312, %61
  %73 = phi %"class.base::ObserverList"* [ %71, %61 ], [ %310, %312 ]
  %74 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %10, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %11, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %92 = icmp eq %"class.base::ObserverList"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %64, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %65, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList"* %73, %107
  %109 = load i64, i64* %10, align 8
  %110 = load i64, i64* %64, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %300

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = bitcast %"class.base::LinkedList"* %117 to %"class.base::LinkNode"**
  %122 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !201

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %402
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %402 ], [ %173, %171 ]
  %178 = phi i64 [ %403, %402 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %380, label %374

193:                                              ; preds = %402, %171
  %194 = phi i64 [ %172, %171 ], [ %403, %402 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %63, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %66) #17
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #17
  %207 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %208 = icmp eq %"class.base::ObserverList"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = bitcast %"class.base::LinkedList"* %210 to %"class.base::LinkNode"**
  %215 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !202

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %370
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %372, %370 ], [ %266, %264 ]
  %271 = phi i64 [ %371, %370 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %348, label %342

286:                                              ; preds = %370, %264
  %287 = phi i64 [ %265, %264 ], [ %371, %370 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %297 = icmp eq %"class.base::ObserverList"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %9, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %18) #17
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #17
  ret void

300:                                              ; preds = %106
  %301 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  %303 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %302, i64 %109
  %304 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %303 to %"class.ui::TreeModelObserver"**
  %305 = load %"class.ui::TreeModelObserver"*, %"class.ui::TreeModelObserver"** %304, align 8
  %306 = bitcast %"class.ui::TreeModelObserver"* %305 to void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)***
  %307 = load void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)**, void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)*, void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)** %307, i64 1
  %309 = load void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)*, void (%"class.ui::TreeModelObserver"*, %"class.ui::TreeModel"*, %"class.ui::TreeModelNode"*, i64, i64)** %308, align 8
  call void %309(%"class.ui::TreeModelObserver"* %305, %"class.ui::TreeModel"* %69, %"class.ui::TreeModelNode"* %70, i64 %2, i64 %3) #17
  %310 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %311 = icmp eq %"class.base::ObserverList"* %310, null
  br i1 %311, label %312, label %313

312:                                              ; preds = %337, %333, %300, %313, %327
  br label %72

313:                                              ; preds = %300
  %314 = load i64, i64* %10, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %10, align 8
  %316 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %310, i64 0, i32 0, i32 0, i32 1
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.base::ObserverList"* %310 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %318, %320
  %322 = ashr exact i64 %321, 3
  %323 = load i64, i64* %11, align 8
  %324 = icmp ult i64 %322, %323
  %325 = select i1 %324, i64 %322, i64 %323
  %326 = icmp ult i64 %315, %325
  br i1 %326, label %327, label %312

327:                                              ; preds = %313
  %328 = inttoptr i64 %320 to %"class.base::internal::UncheckedObserverAdapter"*
  %329 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %310, i64 0, i32 0, i32 0, i32 0
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %328, i64 %315, i32 0
  %331 = load i8*, i8** %330, align 8
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %312

333:                                              ; preds = %327, %337
  %334 = phi i64 [ %335, %337 ], [ %315, %327 ]
  %335 = add nuw i64 %334, 1
  store i64 %335, i64* %10, align 8
  %336 = icmp ult i64 %335, %325
  br i1 %336, label %337, label %312

337:                                              ; preds = %333
  %338 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %335, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %333, label %312

342:                                              ; preds = %281
  %343 = ptrtoint i8* %284 to i64
  %344 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %345 = inttoptr i64 %282 to i64*
  store i64 %343, i64* %345, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 1
  %347 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %346 to i64
  br label %348

348:                                              ; preds = %342, %281
  %349 = phi i64 [ %282, %281 ], [ %347, %342 ]
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %348
  %354 = ptrtoint i8* %351 to i64
  %355 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %349 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %348
  %360 = phi i64 [ %349, %348 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %373 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %372, %221
  br i1 %373, label %286, label %269

374:                                              ; preds = %188
  %375 = ptrtoint i8* %191 to i64
  %376 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %189 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %188
  %381 = phi i64 [ %189, %188 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %405 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %128
  br i1 %405, label %193, label %176
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal24UncheckedObserverAdapterENS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_(%"class.std::__1::vector.33"*, %"class.base::internal::UncheckedObserverAdapter"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %9, label %16

9:                                                ; preds = %2
  %10 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %1 to i64*
  %11 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %4 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %4, i64 1
  %14 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %13 to i64
  %15 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %75

16:                                               ; preds = %2
  %17 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %4 to i64
  %18 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %3 to i64*
  %19 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #19
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %5 to i64*
  %29 = sub i64 %8, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #19
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #18
  %44 = bitcast i8* %43 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %47, i64 %22
  %49 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %47, i64 %46
  %50 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %49 to i64
  %51 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %1 to i64*
  %52 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %48 to i64*
  %53 = load i64, i64* %51, align 8
  store i64 %53, i64* %52, align 8
  %54 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 1
  %55 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 0
  %57 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %56, align 8
  %58 = load i64, i64* %18, align 8
  %59 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 %62
  %64 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %45
  %67 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %63 to i8*
  %68 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #17
  %69 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %56, align 8
  br label %70

70:                                               ; preds = %66, %45
  %71 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %57, %45 ], [ %69, %66 ]
  store i64 %64, i64* %19, align 8
  store i64 %55, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %72 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %73, %70, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22CookieTreeAppCacheNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeAppCacheNode*, %"struct.std::__1::__list_node_base"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %1 to i64
  %6 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %9 = bitcast %"struct.std::__1::__list_node_base"* %8 to %"class.url::Origin"*
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %6, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !203
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !203
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !206, !noalias !203
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !206, !noalias !203
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !203
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !203
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !206, !noalias !203
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !206, !noalias !203
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !203
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !203
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !206, !noalias !203
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !206, !noalias !203
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !203
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !203
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !206, !noalias !203
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !206, !noalias !203
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !208

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !203
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !203
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !206, !noalias !203
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !206, !noalias !203
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !209

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !210

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !211

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  %215 = load i8, i8* %11, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV22CookieTreeAppCacheNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %220 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__list_iterator.732"* %220 to i64*
  store i64 %5, i64* %221, align 8
  ret void
}

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22CookieTreeAppCacheNodeD0Ev(%class.CookieTreeAppCacheNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeAppCacheNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK22CookieTreeAppCacheNode13InclusiveSizeEv(%class.CookieTreeAppCacheNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__list_iterator.732"* %2 to %"struct.std::__1::__list_node.827"**
  %4 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %4, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22CookieTreeAppCacheNode19DeleteStoredObjectsEv(%class.CookieTreeAppCacheNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = icmp eq %class.LocalDataContainer* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 1, i32 0
  %7 = load %"class.browsing_data::AppCacheHelper"*, %"class.browsing_data::AppCacheHelper"** %6, align 8
  %8 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::__list_iterator.732"* %8 to %"struct.std::__1::__list_node.827"**
  %10 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %10, i64 0, i32 1, i32 0
  %12 = bitcast %"class.browsing_data::AppCacheHelper"* %7 to void (%"class.browsing_data::AppCacheHelper"*, %"class.url::Origin"*)***
  %13 = load void (%"class.browsing_data::AppCacheHelper"*, %"class.url::Origin"*)**, void (%"class.browsing_data::AppCacheHelper"*, %"class.url::Origin"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.browsing_data::AppCacheHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::AppCacheHelper"*, %"class.url::Origin"*)** %13, i64 1
  %15 = load void (%"class.browsing_data::AppCacheHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::AppCacheHelper"*, %"class.url::Origin"*)** %14, align 8
  tail call void %15(%"class.browsing_data::AppCacheHelper"* %7, %"class.url::Origin"* dereferenceable(80) %11) #17
  %16 = getelementptr inbounds %"class.std::__1::__list_iterator.732", %"class.std::__1::__list_iterator.732"* %8, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = bitcast %"struct.std::__1::__list_node_base"* %17 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64**
  %28 = load i64*, i64** %27, align 8
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 1
  %33 = bitcast %"struct.std::__1::__list_node_base"* %32 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %33) #17
  %34 = bitcast %"struct.std::__1::__list_node_base"* %17 to i8*
  tail call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK22CookieTreeAppCacheNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeAppCacheNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeAppCacheNode, %class.CookieTreeAppCacheNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator.732"* %9 to %"struct.std::__1::__list_node.827"**
  %11 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %11, i64 0, i32 1
  store i32 12, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %12, %"struct.content::StorageUsageInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %12, i64 0, i32 0
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %14) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %17 = load i32, i32* %5, align 8
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %6) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %20 = bitcast %"class.net::CanonicalCookie"** %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode*) unnamed_addr #0 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %0, i64 0, i32 0, i32 2
  %8 = load %class.CookieTreeNode*, %class.CookieTreeNode** %7, align 8
  %9 = getelementptr inbounds %class.CookieTreeNode, %class.CookieTreeNode* %8, i64 0, i32 0, i32 2
  %10 = load %class.CookieTreeNode*, %class.CookieTreeNode** %9, align 8
  %11 = bitcast %class.CookieTreeNode* %10 to %class.CookieTreeHostNode*
  %12 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %14 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %14) #17
  %15 = bitcast %class.CookieTreeNode* %10 to void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)***
  %16 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)**, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*** %15, align 8
  %17 = getelementptr inbounds void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)** %16, i64 8
  %18 = load void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)*, void (%"struct.CookieTreeNode::DetailedInfo"*, %class.CookieTreeHostNode*)** %17, align 8
  call void %18(%"struct.CookieTreeNode::DetailedInfo"* nonnull sret %4, %class.CookieTreeHostNode* %11) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 0
  %20 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #17
  store i32 2, i32* %5, align 4
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = load i32, i32* %19, align 8
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %26

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  store i8* null, i8** %25, align 8
  br label %31

26:                                               ; preds = %1
  %27 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN14CookieTreeNode12DetailedInfo8NodeTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  %28 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %20, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN14CookieTreeNode12DetailedInfo8NodeTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.9, i64 0, i64 0), i8* %27, i8* %28) #17
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %24, %26
  %32 = phi i8* [ %30, %26 ], [ null, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %32, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #17
  %33 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %33) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %14) #17
  %34 = icmp eq i8* %32, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), i32 178, %"class.logging::CheckOpResult"* nonnull %3) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %39 = bitcast %class.CookieTreeNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %40 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %39, align 8
  %41 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %40, i64 7
  %42 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %41, align 8
  %43 = call %class.CookiesTreeModel* %42(%class.CookieTreeNode* %0) #17
  %44 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %43, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %class.LocalDataContainer*, %class.LocalDataContainer** %44, align 8
  ret %class.LocalDataContainer* %45
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20CookieTreeCookieNodeC2ENSt3__115__list_iteratorIN3net15CanonicalCookieEPvEE(%class.CookieTreeCookieNode*, %"struct.std::__1::__list_node_base.275"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = ptrtoint %"struct.std::__1::__list_node_base.275"* %1 to i64
  %5 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"struct.std::__1::__list_node_base.275", %"struct.std::__1::__list_node_base.275"* %1, i64 1
  %7 = bitcast %"struct.std::__1::__list_node_base.275"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"struct.std::__1::__list_node_base.275"* %6 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"struct.std::__1::__list_node_base.275"* %6 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base.275", %"struct.std::__1::__list_node_base.275"* %1, i64 1, i32 1
  %16 = bitcast %"struct.std::__1::__list_node_base.275"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %9 to i64
  %19 = select i1 %10, i64 %17, i64 %18
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %14, i64 %19) #17
  %20 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %2
  %27 = bitcast %"class.std::__1::basic_string.13"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %5, i64 24, i1 false) #17
  %28 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 2
  %29 = bitcast %class.CookieTreeNode** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  br label %213

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, 11
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %21 to i16*
  %38 = trunc i64 %34 to i8
  %39 = bitcast %"class.std::__1::basic_string.13"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  br label %58

41:                                               ; preds = %30
  %42 = icmp ugt i64 %34, 9223372036854775791
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::basic_string.13"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %44) #19
  unreachable

45:                                               ; preds = %41
  %46 = add nuw nsw i64 %34, 8
  %47 = and i64 %46, -8
  %48 = icmp slt i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  call void @abort() #19
  unreachable

50:                                               ; preds = %45
  %51 = shl i64 %47, 1
  %52 = call i8* @_Znwm(i64 %51) #18
  %53 = bitcast i8* %52 to i16*
  %54 = bitcast %"class.std::__1::basic_string.13"* %21 to i8**
  store i8* %52, i8** %54, align 8
  %55 = or i64 %47, -9223372036854775808
  %56 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %57, align 8
  br label %58

58:                                               ; preds = %50, %36
  %59 = phi i16* [ %37, %36 ], [ %53, %50 ]
  %60 = add nuw nsw i64 %34, 1
  %61 = add i64 %34, 1
  %62 = icmp ult i64 %61, 16
  br i1 %62, label %152, label %63

63:                                               ; preds = %58
  %64 = add i64 %34, 1
  %65 = getelementptr i16, i16* %59, i64 %64
  %66 = getelementptr i16, i16* %32, i64 %64
  %67 = icmp ult i16* %59, %66
  %68 = icmp ult i16* %32, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %63
  %71 = and i64 %61, -16
  %72 = sub i64 %60, %71
  %73 = getelementptr i16, i16* %32, i64 %71
  %74 = getelementptr i16, i16* %59, i64 %71
  %75 = add i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %32, i64 %83
  %86 = getelementptr i16, i16* %59, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !212
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !212
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !215, !noalias !212
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !215, !noalias !212
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %32, i64 %95
  %97 = getelementptr i16, i16* %59, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !212
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !212
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !215, !noalias !212
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !215, !noalias !212
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %32, i64 %106
  %108 = getelementptr i16, i16* %59, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !212
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !212
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !215, !noalias !212
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !215, !noalias !212
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %32, i64 %117
  %119 = getelementptr i16, i16* %59, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !212
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !212
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !215, !noalias !212
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !215, !noalias !212
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !217

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %32, i64 %135
  %138 = getelementptr i16, i16* %59, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !212
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !212
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !215, !noalias !212
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !215, !noalias !212
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !218

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %61, %71
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %63, %58
  %153 = phi i64 [ %60, %63 ], [ %60, %58 ], [ %72, %150 ]
  %154 = phi i16* [ %32, %63 ], [ %32, %58 ], [ %73, %150 ]
  %155 = phi i16* [ %59, %63 ], [ %59, %58 ], [ %74, %150 ]
  %156 = add i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !219

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !220

205:                                              ; preds = %170, %175, %150
  %206 = load i8, i8* %23, align 1
  %207 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 2
  %208 = bitcast %class.CookieTreeNode** %207 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %209 = icmp slt i8 %206, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %205
  %211 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #18
  br label %213

213:                                              ; preds = %26, %205, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV20CookieTreeCookieNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %214 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 1
  %215 = bitcast %"class.std::__1::__list_iterator.739"* %214 to i64*
  store i64 %4, i64* %215, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20CookieTreeCookieNodeD0Ev(%class.CookieTreeCookieNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeCookieNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK20CookieTreeCookieNode15NumberOfCookiesEv(%class.CookieTreeCookieNode*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20CookieTreeCookieNode19DeleteStoredObjectsEv(%class.CookieTreeCookieNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 2, i32 0
  %5 = load %"class.browsing_data::CookieHelper"*, %"class.browsing_data::CookieHelper"** %4, align 8
  %6 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::__list_iterator.739"* %6 to %"struct.std::__1::__list_node.826"**
  %8 = load %"struct.std::__1::__list_node.826"*, %"struct.std::__1::__list_node.826"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__list_node.826", %"struct.std::__1::__list_node.826"* %8, i64 0, i32 1
  %10 = bitcast %"class.browsing_data::CookieHelper"* %5 to void (%"class.browsing_data::CookieHelper"*, %"class.net::CanonicalCookie"*)***
  %11 = load void (%"class.browsing_data::CookieHelper"*, %"class.net::CanonicalCookie"*)**, void (%"class.browsing_data::CookieHelper"*, %"class.net::CanonicalCookie"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.browsing_data::CookieHelper"*, %"class.net::CanonicalCookie"*)*, void (%"class.browsing_data::CookieHelper"*, %"class.net::CanonicalCookie"*)** %11, i64 1
  %13 = load void (%"class.browsing_data::CookieHelper"*, %"class.net::CanonicalCookie"*)*, void (%"class.browsing_data::CookieHelper"*, %"class.net::CanonicalCookie"*)** %12, align 8
  tail call void %13(%"class.browsing_data::CookieHelper"* %5, %"class.net::CanonicalCookie"* dereferenceable(144) %9) #17
  %14 = getelementptr inbounds %"class.std::__1::__list_iterator.739", %"class.std::__1::__list_iterator.739"* %6, i64 0, i32 0
  %15 = load %"struct.std::__1::__list_node_base.275"*, %"struct.std::__1::__list_node_base.275"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base.275", %"struct.std::__1::__list_node_base.275"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base.275"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base.275", %"struct.std::__1::__list_node_base.275"* %15, i64 0, i32 0
  %20 = load %"struct.std::__1::__list_node_base.275"*, %"struct.std::__1::__list_node_base.275"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base.275", %"struct.std::__1::__list_node_base.275"* %20, i64 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base.275"** %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = bitcast %"struct.std::__1::__list_node_base.275"* %15 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::__list_node_base.275"** %16 to i64**
  %26 = load i64*, i64** %25, align 8
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base.275", %"struct.std::__1::__list_node_base.275"* %15, i64 1
  %31 = bitcast %"struct.std::__1::__list_node_base.275"* %30 to %"class.net::CanonicalCookie"*
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %31) #17
  %32 = bitcast %"struct.std::__1::__list_node_base.275"* %15 to i8*
  tail call void @_ZdlPv(i8* %32) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK20CookieTreeCookieNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeCookieNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  %9 = getelementptr inbounds %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %7, i64 1
  %10 = bitcast %"class.net::CanonicalCookie"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false) #17
  %11 = getelementptr inbounds %class.CookieTreeCookieNode, %class.CookieTreeCookieNode* %1, i64 0, i32 1
  %12 = bitcast %"class.std::__1::__list_iterator.739"* %11 to %"struct.std::__1::__list_node.826"**
  %13 = load %"struct.std::__1::__list_node.826"*, %"struct.std::__1::__list_node.826"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node.826", %"struct.std::__1::__list_node.826"* %13, i64 0, i32 1
  store i32 4, i32* %5, align 8
  store %"class.net::CanonicalCookie"* %14, %"class.net::CanonicalCookie"** %7, align 8
  %15 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  store i32 4, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %16, %"class.url::Origin"* dereferenceable(80) %6) #17
  %17 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %18 = bitcast %"class.net::CanonicalCookie"** %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22CookieTreeDatabaseNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeDatabaseNode*, %"struct.std::__1::__list_node_base"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %1 to i64
  %6 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %9 = bitcast %"struct.std::__1::__list_node_base"* %8 to %"class.url::Origin"*
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %6, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !221
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !221
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !224, !noalias !221
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !224, !noalias !221
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !221
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !221
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !224, !noalias !221
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !224, !noalias !221
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !221
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !221
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !224, !noalias !221
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !224, !noalias !221
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !221
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !221
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !224, !noalias !221
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !224, !noalias !221
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !226

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !221
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !221
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !224, !noalias !221
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !224, !noalias !221
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !227

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !228

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !229

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  %215 = load i8, i8* %11, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV22CookieTreeDatabaseNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %220 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__list_iterator.732"* %220 to i64*
  store i64 %5, i64* %221, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22CookieTreeDatabaseNodeD0Ev(%class.CookieTreeDatabaseNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeDatabaseNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK22CookieTreeDatabaseNode13InclusiveSizeEv(%class.CookieTreeDatabaseNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__list_iterator.732"* %2 to %"struct.std::__1::__list_node.827"**
  %4 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %4, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22CookieTreeDatabaseNode19DeleteStoredObjectsEv(%class.CookieTreeDatabaseNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = icmp eq %class.LocalDataContainer* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::__list_iterator.732"* %6 to %"struct.std::__1::__list_node.827"**
  %8 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %7, align 8
  %9 = bitcast %class.CookieTreeDatabaseNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %10 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %9, align 8
  %11 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %10, i64 7
  %12 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %11, align 8
  %13 = tail call %class.CookiesTreeModel* %12(%class.CookieTreeNode* %2) #17
  %14 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %13, i64 0, i32 4
  %15 = load %class.AccessContextAuditService*, %class.AccessContextAuditService** %14, align 8
  %16 = icmp eq %class.AccessContextAuditService* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %8, i64 0, i32 1, i32 0
  tail call void @_ZN25AccessContextAuditService37RemoveAllRecordsForOriginKeyedStorageERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.AccessContextAuditService* nonnull %15, %"class.url::Origin"* dereferenceable(80) %18, i32 4) #17
  br label %19

19:                                               ; preds = %5, %17
  %20 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 3, i32 0
  %21 = load %"class.browsing_data::DatabaseHelper"*, %"class.browsing_data::DatabaseHelper"** %20, align 8
  %22 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %7, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %22, i64 0, i32 1, i32 0
  %24 = bitcast %"class.browsing_data::DatabaseHelper"* %21 to void (%"class.browsing_data::DatabaseHelper"*, %"class.url::Origin"*)***
  %25 = load void (%"class.browsing_data::DatabaseHelper"*, %"class.url::Origin"*)**, void (%"class.browsing_data::DatabaseHelper"*, %"class.url::Origin"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.browsing_data::DatabaseHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::DatabaseHelper"*, %"class.url::Origin"*)** %25, i64 1
  %27 = load void (%"class.browsing_data::DatabaseHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::DatabaseHelper"*, %"class.url::Origin"*)** %26, align 8
  tail call void %27(%"class.browsing_data::DatabaseHelper"* %21, %"class.url::Origin"* dereferenceable(80) %23) #17
  %28 = getelementptr inbounds %"class.std::__1::__list_iterator.732", %"class.std::__1::__list_iterator.732"* %6, i64 0, i32 0
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 1
  %31 = bitcast %"struct.std::__1::__list_node_base"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 0
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"struct.std::__1::__list_node_base"* %29 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.std::__1::__list_node_base"** %30 to i64**
  %40 = load i64*, i64** %39, align 8
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 1
  %45 = bitcast %"struct.std::__1::__list_node_base"* %44 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %45) #17
  %46 = bitcast %"struct.std::__1::__list_node_base"* %29 to i8*
  tail call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK22CookieTreeDatabaseNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeDatabaseNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeDatabaseNode, %class.CookieTreeDatabaseNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator.732"* %9 to %"struct.std::__1::__list_node.827"**
  %11 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %11, i64 0, i32 1
  store i32 6, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %12, %"struct.content::StorageUsageInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %12, i64 0, i32 0
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %14) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %17 = load i32, i32* %5, align 8
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %6) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %20 = bitcast %"class.net::CanonicalCookie"** %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeLocalStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeLocalStorageNode*, %"struct.std::__1::__list_node_base"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %1 to i64
  %6 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %9 = bitcast %"struct.std::__1::__list_node_base"* %8 to %"class.url::Origin"*
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %6, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !230
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !230
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !233, !noalias !230
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !233, !noalias !230
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !230
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !230
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !233, !noalias !230
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !233, !noalias !230
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !230
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !230
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !233, !noalias !230
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !233, !noalias !230
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !230
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !230
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !233, !noalias !230
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !233, !noalias !230
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !235

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !230
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !230
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !233, !noalias !230
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !233, !noalias !230
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !236

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !237

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !238

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  %215 = load i8, i8* %11, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV26CookieTreeLocalStorageNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %220 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__list_iterator.732"* %220 to i64*
  store i64 %5, i64* %221, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeLocalStorageNodeD0Ev(%class.CookieTreeLocalStorageNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeLocalStorageNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK26CookieTreeLocalStorageNode13InclusiveSizeEv(%class.CookieTreeLocalStorageNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__list_iterator.732"* %2 to %"struct.std::__1::__list_node.827"**
  %4 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %4, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeLocalStorageNode19DeleteStoredObjectsEv(%class.CookieTreeLocalStorageNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 0
  %4 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %3)
  %5 = icmp eq %class.LocalDataContainer* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::__list_iterator.732"* %7 to %"struct.std::__1::__list_node.827"**
  %9 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %8, align 8
  %10 = bitcast %class.CookieTreeLocalStorageNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %11 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %10, align 8
  %12 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %11, i64 7
  %13 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %12, align 8
  %14 = tail call %class.CookiesTreeModel* %13(%class.CookieTreeNode* %3) #17
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %14, i64 0, i32 4
  %16 = load %class.AccessContextAuditService*, %class.AccessContextAuditService** %15, align 8
  %17 = icmp eq %class.AccessContextAuditService* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %9, i64 0, i32 1, i32 0
  tail call void @_ZN25AccessContextAuditService37RemoveAllRecordsForOriginKeyedStorageERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.AccessContextAuditService* nonnull %16, %"class.url::Origin"* dereferenceable(80) %19, i32 1) #17
  br label %20

20:                                               ; preds = %6, %18
  %21 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %4, i64 0, i32 4, i32 0
  %22 = load %"class.browsing_data::LocalStorageHelper"*, %"class.browsing_data::LocalStorageHelper"** %21, align 8
  %23 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %8, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %23, i64 0, i32 1, i32 0
  %25 = tail call i8* @_Znwm(i64 40) #18, !noalias !239
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !239
  %27 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %25, i8** %27, align 8, !alias.scope !239
  %28 = bitcast %"class.browsing_data::LocalStorageHelper"* %22 to void (%"class.browsing_data::LocalStorageHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback"*)***
  %29 = load void (%"class.browsing_data::LocalStorageHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback"*)**, void (%"class.browsing_data::LocalStorageHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.browsing_data::LocalStorageHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback"*)*, void (%"class.browsing_data::LocalStorageHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback"*)** %29, i64 1
  %31 = load void (%"class.browsing_data::LocalStorageHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback"*)*, void (%"class.browsing_data::LocalStorageHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback"*)** %30, align 8
  call void %31(%"class.browsing_data::LocalStorageHelper"* %22, %"class.url::Origin"* dereferenceable(80) %24, %"class.base::OnceCallback"* nonnull %2) #17
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #17
  %33 = getelementptr inbounds %"class.std::__1::__list_iterator.732", %"class.std::__1::__list_iterator.732"* %7, i64 0, i32 0
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 0
  %39 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %39, i64 0, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i64*
  store i64 %37, i64* %41, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base"* %34 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64**
  %45 = load i64*, i64** %44, align 8
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %4, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 1
  %50 = bitcast %"struct.std::__1::__list_node_base"* %49 to %"class.url::Origin"*
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %50) #17
  %51 = bitcast %"struct.std::__1::__list_node_base"* %34 to i8*
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK26CookieTreeLocalStorageNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeLocalStorageNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeLocalStorageNode, %class.CookieTreeLocalStorageNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator.732"* %9 to %"struct.std::__1::__list_node.827"**
  %11 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %11, i64 0, i32 1
  store i32 8, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %12, %"struct.content::StorageUsageInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %12, i64 0, i32 0
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %14) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %17 = load i32, i32* %5, align 8
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %6) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %20 = bitcast %"class.net::CanonicalCookie"** %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28CookieTreeSessionStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeSessionStorageNode*, %"struct.std::__1::__list_node_base"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %1 to i64
  %6 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %9 = bitcast %"struct.std::__1::__list_node_base"* %8 to %"class.url::Origin"*
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %6, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !248
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !248
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !251, !noalias !248
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !251, !noalias !248
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !248
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !248
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !251, !noalias !248
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !251, !noalias !248
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !248
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !248
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !251, !noalias !248
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !251, !noalias !248
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !248
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !248
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !251, !noalias !248
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !251, !noalias !248
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !253

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !248
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !248
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !251, !noalias !248
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !251, !noalias !248
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !254

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !255

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !256

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  %215 = load i8, i8* %11, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV28CookieTreeSessionStorageNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %220 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__list_iterator.732"* %220 to i64*
  store i64 %5, i64* %221, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28CookieTreeSessionStorageNodeD0Ev(%class.CookieTreeSessionStorageNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeSessionStorageNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28CookieTreeSessionStorageNode19DeleteStoredObjectsEv(%class.CookieTreeSessionStorageNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = icmp eq %class.LocalDataContainer* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %0, i64 0, i32 1, i32 0
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 1
  %9 = bitcast %"struct.std::__1::__list_node_base"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  store i64 %10, i64* %14, align 8
  %15 = bitcast %"struct.std::__1::__list_node_base"* %7 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.std::__1::__list_node_base"** %8 to i64**
  %18 = load i64*, i64** %17, align 8
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 1
  %23 = bitcast %"struct.std::__1::__list_node_base"* %22 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %23) #17
  %24 = bitcast %"struct.std::__1::__list_node_base"* %7 to i8*
  tail call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK28CookieTreeSessionStorageNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeSessionStorageNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeSessionStorageNode, %class.CookieTreeSessionStorageNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator.732"* %9 to %"struct.std::__1::__list_node.827"**
  %11 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %11, i64 0, i32 1
  store i32 10, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %12, %"struct.content::StorageUsageInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %12, i64 0, i32 0
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %14) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %17 = load i32, i32* %5, align 8
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %6) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %20 = bitcast %"class.net::CanonicalCookie"** %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CookieTreeIndexedDBNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeIndexedDBNode*, %"struct.std::__1::__list_node_base"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %1 to i64
  %6 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %9 = bitcast %"struct.std::__1::__list_node_base"* %8 to %"class.url::Origin"*
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %6, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !257
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !257
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !260, !noalias !257
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !260, !noalias !257
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !257
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !257
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !260, !noalias !257
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !260, !noalias !257
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !257
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !257
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !260, !noalias !257
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !260, !noalias !257
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !257
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !257
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !260, !noalias !257
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !260, !noalias !257
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !262

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !257
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !257
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !260, !noalias !257
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !260, !noalias !257
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !263

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !264

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !265

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  %215 = load i8, i8* %11, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV23CookieTreeIndexedDBNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %220 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__list_iterator.732"* %220 to i64*
  store i64 %5, i64* %221, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CookieTreeIndexedDBNodeD0Ev(%class.CookieTreeIndexedDBNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeIndexedDBNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK23CookieTreeIndexedDBNode13InclusiveSizeEv(%class.CookieTreeIndexedDBNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__list_iterator.732"* %2 to %"struct.std::__1::__list_node.827"**
  %4 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %4, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CookieTreeIndexedDBNode19DeleteStoredObjectsEv(%class.CookieTreeIndexedDBNode*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.856", align 8
  %3 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 0
  %4 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %3)
  %5 = icmp eq %class.LocalDataContainer* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::__list_iterator.732"* %7 to %"struct.std::__1::__list_node.827"**
  %9 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %8, align 8
  %10 = bitcast %class.CookieTreeIndexedDBNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %11 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %10, align 8
  %12 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %11, i64 7
  %13 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %12, align 8
  %14 = tail call %class.CookiesTreeModel* %13(%class.CookieTreeNode* %3) #17
  %15 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %14, i64 0, i32 4
  %16 = load %class.AccessContextAuditService*, %class.AccessContextAuditService** %15, align 8
  %17 = icmp eq %class.AccessContextAuditService* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %9, i64 0, i32 1, i32 0
  tail call void @_ZN25AccessContextAuditService37RemoveAllRecordsForOriginKeyedStorageERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.AccessContextAuditService* nonnull %16, %"class.url::Origin"* dereferenceable(80) %19, i32 7) #17
  br label %20

20:                                               ; preds = %6, %18
  %21 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %4, i64 0, i32 6, i32 0
  %22 = load %"class.browsing_data::IndexedDBHelper"*, %"class.browsing_data::IndexedDBHelper"** %21, align 8
  %23 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %8, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %23, i64 0, i32 1, i32 0
  %25 = tail call i8* @_Znwm(i64 40) #18, !noalias !266
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !266
  %27 = bitcast %"class.base::OnceCallback.856"* %2 to i8**
  store i8* %25, i8** %27, align 8, !alias.scope !266
  %28 = bitcast %"class.browsing_data::IndexedDBHelper"* %22 to void (%"class.browsing_data::IndexedDBHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback.856"*)***
  %29 = load void (%"class.browsing_data::IndexedDBHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback.856"*)**, void (%"class.browsing_data::IndexedDBHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback.856"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.browsing_data::IndexedDBHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback.856"*)*, void (%"class.browsing_data::IndexedDBHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback.856"*)** %29, i64 1
  %31 = load void (%"class.browsing_data::IndexedDBHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback.856"*)*, void (%"class.browsing_data::IndexedDBHelper"*, %"class.url::Origin"*, %"class.base::OnceCallback.856"*)** %30, align 8
  call void %31(%"class.browsing_data::IndexedDBHelper"* %22, %"class.url::Origin"* dereferenceable(80) %24, %"class.base::OnceCallback.856"* nonnull %2) #17
  %32 = getelementptr inbounds %"class.base::OnceCallback.856", %"class.base::OnceCallback.856"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #17
  %33 = getelementptr inbounds %"class.std::__1::__list_iterator.732", %"class.std::__1::__list_iterator.732"* %7, i64 0, i32 0
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 0
  %39 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %39, i64 0, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i64*
  store i64 %37, i64* %41, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base"* %34 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64**
  %45 = load i64*, i64** %44, align 8
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %4, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 1
  %50 = bitcast %"struct.std::__1::__list_node_base"* %49 to %"class.url::Origin"*
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %50) #17
  %51 = bitcast %"struct.std::__1::__list_node_base"* %34 to i8*
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23CookieTreeIndexedDBNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeIndexedDBNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeIndexedDBNode, %class.CookieTreeIndexedDBNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator.732"* %9 to %"struct.std::__1::__list_node.827"**
  %11 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %11, i64 0, i32 1
  store i32 14, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %12, %"struct.content::StorageUsageInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %12, i64 0, i32 0
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %14) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %17 = load i32, i32* %5, align 8
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %6) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %20 = bitcast %"class.net::CanonicalCookie"** %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb(%"class.base::internal::BindStateBase"*, i1 zeroext) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeServiceWorkerNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeServiceWorkerNode*, %"struct.std::__1::__list_node_base"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %1 to i64
  %6 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %9 = bitcast %"struct.std::__1::__list_node_base"* %8 to %"class.url::Origin"*
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %6, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !275
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !275
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !278, !noalias !275
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !278, !noalias !275
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !275
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !275
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !278, !noalias !275
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !278, !noalias !275
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !275
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !275
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !278, !noalias !275
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !278, !noalias !275
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !275
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !275
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !278, !noalias !275
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !278, !noalias !275
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !280

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !275
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !275
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !278, !noalias !275
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !278, !noalias !275
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !281

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !282

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !283

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  %215 = load i8, i8* %11, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV27CookieTreeServiceWorkerNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %220 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__list_iterator.732"* %220 to i64*
  store i64 %5, i64* %221, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeServiceWorkerNodeD0Ev(%class.CookieTreeServiceWorkerNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeServiceWorkerNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK27CookieTreeServiceWorkerNode13InclusiveSizeEv(%class.CookieTreeServiceWorkerNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__list_iterator.732"* %2 to %"struct.std::__1::__list_node.827"**
  %4 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %4, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27CookieTreeServiceWorkerNode19DeleteStoredObjectsEv(%class.CookieTreeServiceWorkerNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = icmp eq %class.LocalDataContainer* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::__list_iterator.732"* %6 to %"struct.std::__1::__list_node.827"**
  %8 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %7, align 8
  %9 = bitcast %class.CookieTreeServiceWorkerNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %10 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %9, align 8
  %11 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %10, i64 7
  %12 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %11, align 8
  %13 = tail call %class.CookiesTreeModel* %12(%class.CookieTreeNode* %2) #17
  %14 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %13, i64 0, i32 4
  %15 = load %class.AccessContextAuditService*, %class.AccessContextAuditService** %14, align 8
  %16 = icmp eq %class.AccessContextAuditService* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %8, i64 0, i32 1, i32 0
  tail call void @_ZN25AccessContextAuditService37RemoveAllRecordsForOriginKeyedStorageERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.AccessContextAuditService* nonnull %15, %"class.url::Origin"* dereferenceable(80) %18, i32 5) #17
  br label %19

19:                                               ; preds = %5, %17
  %20 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 9, i32 0
  %21 = load %"class.browsing_data::ServiceWorkerHelper"*, %"class.browsing_data::ServiceWorkerHelper"** %20, align 8
  %22 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %7, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %22, i64 0, i32 1, i32 0
  %24 = bitcast %"class.browsing_data::ServiceWorkerHelper"* %21 to void (%"class.browsing_data::ServiceWorkerHelper"*, %"class.url::Origin"*)***
  %25 = load void (%"class.browsing_data::ServiceWorkerHelper"*, %"class.url::Origin"*)**, void (%"class.browsing_data::ServiceWorkerHelper"*, %"class.url::Origin"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.browsing_data::ServiceWorkerHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::ServiceWorkerHelper"*, %"class.url::Origin"*)** %25, i64 1
  %27 = load void (%"class.browsing_data::ServiceWorkerHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::ServiceWorkerHelper"*, %"class.url::Origin"*)** %26, align 8
  tail call void %27(%"class.browsing_data::ServiceWorkerHelper"* %21, %"class.url::Origin"* dereferenceable(80) %23) #17
  %28 = getelementptr inbounds %"class.std::__1::__list_iterator.732", %"class.std::__1::__list_iterator.732"* %6, i64 0, i32 0
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 1
  %31 = bitcast %"struct.std::__1::__list_node_base"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 0
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"struct.std::__1::__list_node_base"* %29 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.std::__1::__list_node_base"** %30 to i64**
  %40 = load i64*, i64** %39, align 8
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 1
  %45 = bitcast %"struct.std::__1::__list_node_base"* %44 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %45) #17
  %46 = bitcast %"struct.std::__1::__list_node_base"* %29 to i8*
  tail call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK27CookieTreeServiceWorkerNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeServiceWorkerNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeServiceWorkerNode, %class.CookieTreeServiceWorkerNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator.732"* %9 to %"struct.std::__1::__list_node.827"**
  %11 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %11, i64 0, i32 1
  store i32 19, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %12, %"struct.content::StorageUsageInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %12, i64 0, i32 0
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %14) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %17 = load i32, i32* %5, align 8
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %6) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %20 = bitcast %"class.net::CanonicalCookie"** %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeSharedWorkerNodeC2ENSt3__115__list_iteratorIN13browsing_data18SharedWorkerHelper16SharedWorkerInfoEPvEE(%class.CookieTreeSharedWorkerNode*, %"struct.std::__1::__list_node_base.296"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = ptrtoint %"struct.std::__1::__list_node_base.296"* %1 to i64
  %5 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"struct.std::__1::__list_node_base.296", %"struct.std::__1::__list_node_base.296"* %1, i64 1
  %7 = bitcast %"struct.std::__1::__list_node_base.296"* %6 to %class.GURL*
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %7) #17
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %5, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !284
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !284
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !287, !noalias !284
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !287, !noalias !284
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !284
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !284
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !287, !noalias !284
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !287, !noalias !284
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !284
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !284
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !287, !noalias !284
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !287, !noalias !284
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !284
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !284
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !287, !noalias !284
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !287, !noalias !284
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !289

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !284
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !284
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !287, !noalias !284
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !287, !noalias !284
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !290

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !291

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !292

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV26CookieTreeSharedWorkerNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %215 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 1
  %216 = bitcast %"class.std::__1::__list_iterator.776"* %215 to i64*
  store i64 %4, i64* %216, align 8
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeSharedWorkerNodeD0Ev(%class.CookieTreeSharedWorkerNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeSharedWorkerNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeSharedWorkerNode19DeleteStoredObjectsEv(%class.CookieTreeSharedWorkerNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = icmp eq %class.LocalDataContainer* %3, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 10, i32 0
  %7 = load %"class.browsing_data::SharedWorkerHelper"*, %"class.browsing_data::SharedWorkerHelper"** %6, align 8
  %8 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::__list_iterator.776"* %8 to %"struct.std::__1::__list_node.829"**
  %10 = load %"struct.std::__1::__list_node.829"*, %"struct.std::__1::__list_node.829"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node.829", %"struct.std::__1::__list_node.829"* %10, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.829", %"struct.std::__1::__list_node.829"* %10, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.std::__1::__list_node.829", %"struct.std::__1::__list_node.829"* %10, i64 0, i32 1, i32 2
  %14 = bitcast %"class.browsing_data::SharedWorkerHelper"* %7 to void (%"class.browsing_data::SharedWorkerHelper"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.storage::StorageKey"*)***
  %15 = load void (%"class.browsing_data::SharedWorkerHelper"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.storage::StorageKey"*)**, void (%"class.browsing_data::SharedWorkerHelper"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.storage::StorageKey"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.browsing_data::SharedWorkerHelper"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.storage::StorageKey"*)*, void (%"class.browsing_data::SharedWorkerHelper"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.storage::StorageKey"*)** %15, i64 1
  %17 = load void (%"class.browsing_data::SharedWorkerHelper"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.storage::StorageKey"*)*, void (%"class.browsing_data::SharedWorkerHelper"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.storage::StorageKey"*)** %16, align 8
  tail call void %17(%"class.browsing_data::SharedWorkerHelper"* %7, %class.GURL* dereferenceable(120) %11, %"class.std::__1::basic_string"* dereferenceable(24) %12, %"class.storage::StorageKey"* dereferenceable(80) %13) #17
  %18 = getelementptr inbounds %"class.std::__1::__list_iterator.776", %"class.std::__1::__list_iterator.776"* %8, i64 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base.296"*, %"struct.std::__1::__list_node_base.296"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base.296", %"struct.std::__1::__list_node_base.296"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base.296"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base.296", %"struct.std::__1::__list_node_base.296"* %19, i64 0, i32 0
  %24 = load %"struct.std::__1::__list_node_base.296"*, %"struct.std::__1::__list_node_base.296"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base.296", %"struct.std::__1::__list_node_base.296"* %24, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base.296"** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base.296"* %19 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base.296"** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base.296", %"struct.std::__1::__list_node_base.296"* %19, i64 1
  %35 = bitcast %"struct.std::__1::__list_node_base.296"* %34 to %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"*
  tail call void @_ZN13browsing_data18SharedWorkerHelper16SharedWorkerInfoD1Ev(%"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"* %35) #17
  %36 = bitcast %"struct.std::__1::__list_node_base.296"* %19 to i8*
  tail call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK26CookieTreeSharedWorkerNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeSharedWorkerNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = alloca %class.GURL, align 8
  %5 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %6 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %5, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %8) #17
  %9 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %5, i64 0, i32 2
  %10 = bitcast %"class.net::CanonicalCookie"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #17
  %11 = getelementptr inbounds %class.CookieTreeSharedWorkerNode, %class.CookieTreeSharedWorkerNode* %1, i64 0, i32 1
  %12 = bitcast %"class.std::__1::__list_iterator.776"* %11 to %"struct.std::__1::__list_node.829"**
  %13 = load %"struct.std::__1::__list_node.829"*, %"struct.std::__1::__list_node.829"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node.829", %"struct.std::__1::__list_node.829"* %13, i64 0, i32 1
  store i32 21, i32* %7, align 8
  %15 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %5, i64 0, i32 6
  store %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"* %14, %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"** %15, align 8
  %16 = bitcast %"class.url::Origin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %16) #17
  %17 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo", %"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"* %14, i64 0, i32 0
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %4, %class.GURL* %18) #17
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* nonnull dereferenceable(120) %4) #17
  %19 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %8, %"class.url::Origin"* nonnull dereferenceable(80) %3) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #17
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %16) #17
  %20 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %21 = load i32, i32* %7, align 8
  store i32 %21, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %22, %"class.url::Origin"* dereferenceable(80) %8) #17
  %23 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %24 = bitcast %"class.net::CanonicalCookie"** %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %10, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %8) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13browsing_data18SharedWorkerHelper16SharedWorkerInfoD1Ev(%"struct.browsing_data::SharedWorkerHelper::SharedWorkerInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeCacheStorageNodeC2ENSt3__115__list_iteratorIN7content16StorageUsageInfoEPvEE(%class.CookieTreeCacheStorageNode*, %"struct.std::__1::__list_node_base"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %1 to i64
  %6 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %9 = bitcast %"struct.std::__1::__list_node_base"* %8 to %"class.url::Origin"*
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %6, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !293
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !293
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !296, !noalias !293
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !296, !noalias !293
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !293
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !293
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !296, !noalias !293
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !296, !noalias !293
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !293
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !293
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !296, !noalias !293
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !296, !noalias !293
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !293
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !293
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !296, !noalias !293
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !296, !noalias !293
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !298

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !293
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !293
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !296, !noalias !293
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !296, !noalias !293
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !299

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !300

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !301

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  %215 = load i8, i8* %11, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV26CookieTreeCacheStorageNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %220 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__list_iterator.732"* %220 to i64*
  store i64 %5, i64* %221, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeCacheStorageNodeD0Ev(%class.CookieTreeCacheStorageNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeCacheStorageNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK26CookieTreeCacheStorageNode13InclusiveSizeEv(%class.CookieTreeCacheStorageNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__list_iterator.732"* %2 to %"struct.std::__1::__list_node.827"**
  %4 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %4, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeCacheStorageNode19DeleteStoredObjectsEv(%class.CookieTreeCacheStorageNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = icmp eq %class.LocalDataContainer* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::__list_iterator.732"* %6 to %"struct.std::__1::__list_node.827"**
  %8 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %7, align 8
  %9 = bitcast %class.CookieTreeCacheStorageNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %10 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %9, align 8
  %11 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %10, i64 7
  %12 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %11, align 8
  %13 = tail call %class.CookiesTreeModel* %12(%class.CookieTreeNode* %2) #17
  %14 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %13, i64 0, i32 4
  %15 = load %class.AccessContextAuditService*, %class.AccessContextAuditService** %14, align 8
  %16 = icmp eq %class.AccessContextAuditService* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %8, i64 0, i32 1, i32 0
  tail call void @_ZN25AccessContextAuditService37RemoveAllRecordsForOriginKeyedStorageERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.AccessContextAuditService* nonnull %15, %"class.url::Origin"* dereferenceable(80) %18, i32 6) #17
  br label %19

19:                                               ; preds = %5, %17
  %20 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 11, i32 0
  %21 = load %"class.browsing_data::CacheStorageHelper"*, %"class.browsing_data::CacheStorageHelper"** %20, align 8
  %22 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %7, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %22, i64 0, i32 1, i32 0
  %24 = bitcast %"class.browsing_data::CacheStorageHelper"* %21 to void (%"class.browsing_data::CacheStorageHelper"*, %"class.url::Origin"*)***
  %25 = load void (%"class.browsing_data::CacheStorageHelper"*, %"class.url::Origin"*)**, void (%"class.browsing_data::CacheStorageHelper"*, %"class.url::Origin"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.browsing_data::CacheStorageHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::CacheStorageHelper"*, %"class.url::Origin"*)** %25, i64 1
  %27 = load void (%"class.browsing_data::CacheStorageHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::CacheStorageHelper"*, %"class.url::Origin"*)** %26, align 8
  tail call void %27(%"class.browsing_data::CacheStorageHelper"* %21, %"class.url::Origin"* dereferenceable(80) %23) #17
  %28 = getelementptr inbounds %"class.std::__1::__list_iterator.732", %"class.std::__1::__list_iterator.732"* %6, i64 0, i32 0
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 1
  %31 = bitcast %"struct.std::__1::__list_node_base"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 0
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"struct.std::__1::__list_node_base"* %29 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.std::__1::__list_node_base"** %30 to i64**
  %40 = load i64*, i64** %39, align 8
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 1
  %45 = bitcast %"struct.std::__1::__list_node_base"* %44 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %45) #17
  %46 = bitcast %"struct.std::__1::__list_node_base"* %29 to i8*
  tail call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK26CookieTreeCacheStorageNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeCacheStorageNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeCacheStorageNode, %class.CookieTreeCacheStorageNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator.732"* %9 to %"struct.std::__1::__list_node.827"**
  %11 = load %"struct.std::__1::__list_node.827"*, %"struct.std::__1::__list_node.827"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.827", %"struct.std::__1::__list_node.827"* %11, i64 0, i32 1
  store i32 23, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 3
  store %"struct.content::StorageUsageInfo"* %12, %"struct.content::StorageUsageInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.content::StorageUsageInfo", %"struct.content::StorageUsageInfo"* %12, i64 0, i32 0
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %14) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %17 = load i32, i32* %5, align 8
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %6) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %20 = bitcast %"class.net::CanonicalCookie"** %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24CookieTreeFileSystemNodeC2ENSt3__115__list_iteratorIN13browsing_data16FileSystemHelper14FileSystemInfoEPvEE(%class.CookieTreeFileSystemNode*, %"struct.std::__1::__list_node_base.282"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base.282"* %1 to i64
  %6 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base.282", %"struct.std::__1::__list_node_base.282"* %1, i64 1
  %9 = bitcast %"struct.std::__1::__list_node_base.282"* %8 to %"class.url::Origin"*
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %6, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !302
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !302
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !305, !noalias !302
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !305, !noalias !302
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !302
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !302
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !305, !noalias !302
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !305, !noalias !302
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !302
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !302
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !305, !noalias !302
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !305, !noalias !302
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !302
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !302
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !305, !noalias !302
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !305, !noalias !302
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !307

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !302
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !302
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !305, !noalias !302
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !305, !noalias !302
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !308

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !309

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !310

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  %215 = load i8, i8* %11, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24CookieTreeFileSystemNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %220 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__list_iterator.789"* %220 to i64*
  store i64 %5, i64* %221, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24CookieTreeFileSystemNodeD0Ev(%class.CookieTreeFileSystemNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeFileSystemNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK24CookieTreeFileSystemNode13InclusiveSizeEv(%class.CookieTreeFileSystemNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__list_iterator.789"* %2 to %"struct.std::__1::__list_node.828"**
  %4 = load %"struct.std::__1::__list_node.828"*, %"struct.std::__1::__list_node.828"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node.828", %"struct.std::__1::__list_node.828"* %4, i64 0, i32 1, i32 1, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__list_node.828", %"struct.std::__1::__list_node.828"* %4, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %45, %1
  %10 = phi i64 [ 0, %1 ], [ %17, %45 ]
  ret i64 %10

11:                                               ; preds = %1, %45
  %12 = phi i64 [ %17, %45 ], [ 0, %1 ]
  %13 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %6, %1 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 5
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 1, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %29

21:                                               ; preds = %11
  %22 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_end_node"**
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, %22
  br i1 %28, label %45, label %36

29:                                               ; preds = %11, %29
  %30 = phi %"class.std::__1::__tree_node_base"* [ %32, %29 ], [ %19, %11 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %29

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 0
  br label %45

36:                                               ; preds = %21, %36
  %37 = phi %"class.std::__1::__tree_end_node"** [ %40, %36 ], [ %24, %21 ]
  %38 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 2
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, %39
  br i1 %44, label %45, label %36

45:                                               ; preds = %36, %21, %34
  %46 = phi %"class.std::__1::__tree_end_node"* [ %35, %34 ], [ %25, %21 ], [ %41, %36 ]
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %46, %7
  br i1 %47, label %9, label %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24CookieTreeFileSystemNode19DeleteStoredObjectsEv(%class.CookieTreeFileSystemNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = icmp eq %class.LocalDataContainer* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::__list_iterator.789"* %6 to %"struct.std::__1::__list_node.828"**
  %8 = load %"struct.std::__1::__list_node.828"*, %"struct.std::__1::__list_node.828"** %7, align 8
  %9 = bitcast %class.CookieTreeFileSystemNode* %0 to %class.CookiesTreeModel* (%class.CookieTreeNode*)***
  %10 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)**, %class.CookiesTreeModel* (%class.CookieTreeNode*)*** %9, align 8
  %11 = getelementptr inbounds %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %10, i64 7
  %12 = load %class.CookiesTreeModel* (%class.CookieTreeNode*)*, %class.CookiesTreeModel* (%class.CookieTreeNode*)** %11, align 8
  %13 = tail call %class.CookiesTreeModel* %12(%class.CookieTreeNode* %2) #17
  %14 = getelementptr inbounds %class.CookiesTreeModel, %class.CookiesTreeModel* %13, i64 0, i32 4
  %15 = load %class.AccessContextAuditService*, %class.AccessContextAuditService** %14, align 8
  %16 = icmp eq %class.AccessContextAuditService* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.std::__1::__list_node.828", %"struct.std::__1::__list_node.828"* %8, i64 0, i32 1, i32 0
  tail call void @_ZN25AccessContextAuditService37RemoveAllRecordsForOriginKeyedStorageERKN3url6OriginEN26AccessContextAuditDatabase14StorageAPITypeE(%class.AccessContextAuditService* nonnull %15, %"class.url::Origin"* dereferenceable(80) %18, i32 3) #17
  br label %19

19:                                               ; preds = %5, %17
  %20 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 7, i32 0
  %21 = load %"class.browsing_data::FileSystemHelper"*, %"class.browsing_data::FileSystemHelper"** %20, align 8
  %22 = load %"struct.std::__1::__list_node.828"*, %"struct.std::__1::__list_node.828"** %7, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node.828", %"struct.std::__1::__list_node.828"* %22, i64 0, i32 1, i32 0
  %24 = bitcast %"class.browsing_data::FileSystemHelper"* %21 to void (%"class.browsing_data::FileSystemHelper"*, %"class.url::Origin"*)***
  %25 = load void (%"class.browsing_data::FileSystemHelper"*, %"class.url::Origin"*)**, void (%"class.browsing_data::FileSystemHelper"*, %"class.url::Origin"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.browsing_data::FileSystemHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::FileSystemHelper"*, %"class.url::Origin"*)** %25, i64 1
  %27 = load void (%"class.browsing_data::FileSystemHelper"*, %"class.url::Origin"*)*, void (%"class.browsing_data::FileSystemHelper"*, %"class.url::Origin"*)** %26, align 8
  tail call void %27(%"class.browsing_data::FileSystemHelper"* %21, %"class.url::Origin"* dereferenceable(80) %23) #17
  %28 = getelementptr inbounds %"class.std::__1::__list_iterator.789", %"class.std::__1::__list_iterator.789"* %6, i64 0, i32 0
  %29 = load %"struct.std::__1::__list_node_base.282"*, %"struct.std::__1::__list_node_base.282"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base.282", %"struct.std::__1::__list_node_base.282"* %29, i64 0, i32 1
  %31 = bitcast %"struct.std::__1::__list_node_base.282"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base.282", %"struct.std::__1::__list_node_base.282"* %29, i64 0, i32 0
  %34 = load %"struct.std::__1::__list_node_base.282"*, %"struct.std::__1::__list_node_base.282"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base.282", %"struct.std::__1::__list_node_base.282"* %34, i64 0, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base.282"** %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"struct.std::__1::__list_node_base.282"* %29 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.std::__1::__list_node_base.282"** %30 to i64**
  %40 = load i64*, i64** %39, align 8
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base.282", %"struct.std::__1::__list_node_base.282"* %29, i64 1
  %45 = bitcast %"struct.std::__1::__list_node_base.282"* %44 to %"struct.browsing_data::FileSystemHelper::FileSystemInfo"*
  tail call void @_ZN13browsing_data16FileSystemHelper14FileSystemInfoD1Ev(%"struct.browsing_data::FileSystemHelper::FileSystemInfo"* %45) #17
  %46 = bitcast %"struct.std::__1::__list_node_base.282"* %29 to i8*
  tail call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK24CookieTreeFileSystemNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeFileSystemNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %4 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %6) #17
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 2
  %8 = bitcast %"class.net::CanonicalCookie"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %class.CookieTreeFileSystemNode, %class.CookieTreeFileSystemNode* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__list_iterator.789"* %9 to %"struct.std::__1::__list_node.828"**
  %11 = load %"struct.std::__1::__list_node.828"*, %"struct.std::__1::__list_node.828"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node.828", %"struct.std::__1::__list_node.828"* %11, i64 0, i32 1
  store i32 16, i32* %5, align 8
  %13 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %3, i64 0, i32 4
  store %"struct.browsing_data::FileSystemHelper::FileSystemInfo"* %12, %"struct.browsing_data::FileSystemHelper::FileSystemInfo"** %13, align 8
  %14 = getelementptr inbounds %"struct.browsing_data::FileSystemHelper::FileSystemInfo", %"struct.browsing_data::FileSystemHelper::FileSystemInfo"* %12, i64 0, i32 0
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %14) #17
  %16 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %17 = load i32, i32* %5, align 8
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %6) #17
  %19 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %20 = bitcast %"class.net::CanonicalCookie"** %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %8, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13browsing_data16FileSystemHelper14FileSystemInfoD1Ev(%"struct.browsing_data::FileSystemHelper::FileSystemInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeMediaLicenseNodeC2ENSt3__115__list_iteratorIN30BrowsingDataMediaLicenseHelper16MediaLicenseInfoEPvEE(%class.CookieTreeMediaLicenseNode*, %"struct.std::__1::__list_node_base.303"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.13", align 8
  %4 = ptrtoint %"struct.std::__1::__list_node_base.303"* %1 to i64
  %5 = bitcast %"class.std::__1::basic_string.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"struct.std::__1::__list_node_base.303", %"struct.std::__1::__list_node_base.303"* %1, i64 1
  %7 = bitcast %"struct.std::__1::__list_node_base.303"* %6 to %class.GURL*
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %7) #17
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.13"* nonnull sret %3, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.13"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.13"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %5, i64 24, i1 false) #17
  %29 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %class.CookieTreeNode** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  br label %214

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.13"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string.13"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string.13"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #19
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @abort() #19
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string.13"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !311
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !311
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !314, !noalias !311
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !314, !noalias !311
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !311
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !311
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !314, !noalias !311
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !314, !noalias !311
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !311
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !311
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !314, !noalias !311
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !314, !noalias !311
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !311
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !311
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !314, !noalias !311
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !314, !noalias !311
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !316

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !311
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !311
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !314, !noalias !311
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !314, !noalias !311
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !317

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !318

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !319

206:                                              ; preds = %171, %176, %151
  %207 = load i8, i8* %24, align 1
  %208 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %class.CookieTreeNode** %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 32, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV14CookieTreeNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %210 = icmp slt i8 %207, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.13"* %3 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %27, %206, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV26CookieTreeMediaLicenseNode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %215 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 1
  %216 = bitcast %"class.std::__1::__list_iterator.796"* %215 to i64*
  store i64 %4, i64* %216, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui8TreeNodeI14CookieTreeNodeED2Ev(%"class.ui::TreeNode"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %0, i64 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeMediaLicenseNodeD0Ev(%class.CookieTreeMediaLicenseNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui8TreeNodeI14CookieTreeNodeEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.22"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.22"* %5 to i8*
  %9 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.22"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.22"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CookieTreeNode*, %class.CookieTreeNode** %15, align 8
  store %class.CookieTreeNode* null, %class.CookieTreeNode** %15, align 8
  %17 = icmp eq %class.CookieTreeNode* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CookieTreeNode* %16 to void (%class.CookieTreeNode*)***
  %20 = load void (%class.CookieTreeNode*)**, void (%class.CookieTreeNode*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %20, i64 2
  %22 = load void (%class.CookieTreeNode*)*, void (%class.CookieTreeNode*)** %21, align 8
  tail call void %22(%class.CookieTreeNode* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.22"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.22"* %5, %"class.std::__1::unique_ptr.22"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string.13"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.13"* %31 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %class.CookieTreeMediaLicenseNode* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK26CookieTreeMediaLicenseNode13InclusiveSizeEv(%class.CookieTreeMediaLicenseNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__list_iterator.796"* %2 to %"struct.std::__1::__list_node.830"**
  %4 = load %"struct.std::__1::__list_node.830"*, %"struct.std::__1::__list_node.830"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node.830", %"struct.std::__1::__list_node.830"* %4, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CookieTreeMediaLicenseNode19DeleteStoredObjectsEv(%class.CookieTreeMediaLicenseNode*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 0
  %3 = tail call fastcc %class.LocalDataContainer* @_ZN12_GLOBAL__N_128GetLocalDataContainerForNodeEP14CookieTreeNode(%class.CookieTreeNode* %2)
  %4 = icmp eq %class.LocalDataContainer* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 12, i32 0
  %7 = load %class.BrowsingDataMediaLicenseHelper*, %class.BrowsingDataMediaLicenseHelper** %6, align 8
  %8 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::__list_iterator.796"* %8 to %"struct.std::__1::__list_node.830"**
  %10 = load %"struct.std::__1::__list_node.830"*, %"struct.std::__1::__list_node.830"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node.830", %"struct.std::__1::__list_node.830"* %10, i64 0, i32 1, i32 0
  %12 = bitcast %class.BrowsingDataMediaLicenseHelper* %7 to void (%class.BrowsingDataMediaLicenseHelper*, %class.GURL*)***
  %13 = load void (%class.BrowsingDataMediaLicenseHelper*, %class.GURL*)**, void (%class.BrowsingDataMediaLicenseHelper*, %class.GURL*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.BrowsingDataMediaLicenseHelper*, %class.GURL*)*, void (%class.BrowsingDataMediaLicenseHelper*, %class.GURL*)** %13, i64 1
  %15 = load void (%class.BrowsingDataMediaLicenseHelper*, %class.GURL*)*, void (%class.BrowsingDataMediaLicenseHelper*, %class.GURL*)** %14, align 8
  tail call void %15(%class.BrowsingDataMediaLicenseHelper* %7, %class.GURL* dereferenceable(120) %11) #17
  %16 = getelementptr inbounds %"class.std::__1::__list_iterator.796", %"class.std::__1::__list_iterator.796"* %8, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base.303"*, %"struct.std::__1::__list_node_base.303"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base.303", %"struct.std::__1::__list_node_base.303"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base.303"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base.303", %"struct.std::__1::__list_node_base.303"* %17, i64 0, i32 0
  %22 = load %"struct.std::__1::__list_node_base.303"*, %"struct.std::__1::__list_node_base.303"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base.303", %"struct.std::__1::__list_node_base.303"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base.303"** %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = bitcast %"struct.std::__1::__list_node_base.303"* %17 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base.303"** %18 to i64**
  %28 = load i64*, i64** %27, align 8
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %class.LocalDataContainer, %class.LocalDataContainer* %3, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base.303", %"struct.std::__1::__list_node_base.303"* %17, i64 1
  %33 = bitcast %"struct.std::__1::__list_node_base.303"* %32 to %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"*
  tail call void @_ZN30BrowsingDataMediaLicenseHelper16MediaLicenseInfoD1Ev(%"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"* %33) #17
  %34 = bitcast %"struct.std::__1::__list_node_base.303"* %17 to i8*
  tail call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK26CookieTreeMediaLicenseNode15GetDetailedInfoEv(%"struct.CookieTreeNode::DetailedInfo"* noalias sret, %class.CookieTreeMediaLicenseNode*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = alloca %"struct.CookieTreeNode::DetailedInfo", align 8
  %5 = bitcast %"struct.CookieTreeNode::DetailedInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 1
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %7) #17
  %8 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 2
  %9 = bitcast %"class.net::CanonicalCookie"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false) #17
  %10 = getelementptr inbounds %class.CookieTreeMediaLicenseNode, %class.CookieTreeMediaLicenseNode* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::__list_iterator.796"* %10 to %"struct.std::__1::__list_node.830"**
  %12 = load %"struct.std::__1::__list_node.830"*, %"struct.std::__1::__list_node.830"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node.830", %"struct.std::__1::__list_node.830"* %12, i64 0, i32 1
  store i32 25, i32* %6, align 8
  %14 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %4, i64 0, i32 7
  store %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"* %13, %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"** %14, align 8
  %15 = bitcast %"class.url::Origin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo", %"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"* %13, i64 0, i32 0
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* dereferenceable(120) %16) #17
  %17 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %7, %"class.url::Origin"* nonnull dereferenceable(80) %3) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #17
  %18 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 0
  %19 = load i32, i32* %6, align 8
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 1
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %20, %"class.url::Origin"* dereferenceable(80) %7) #17
  %21 = getelementptr inbounds %"struct.CookieTreeNode::DetailedInfo", %"struct.CookieTreeNode::DetailedInfo"* %0, i64 0, i32 2
  %22 = bitcast %"class.net::CanonicalCookie"** %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %9, i64 48, i1 false) #17
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %7) #17
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN30BrowsingDataMediaLicenseHelper16MediaLicenseInfoD1Ev(%"struct.BrowsingDataMediaLicenseHelper::MediaLicenseInfo"*) unnamed_addr #3

declare void @_ZN18LocalDataContainerC1E13scoped_refptrIN13browsing_data12CookieHelperEES0_INS1_14DatabaseHelperEES0_INS1_18LocalStorageHelperEES7_S0_INS1_14AppCacheHelperEES0_INS1_15IndexedDBHelperEES0_INS1_16FileSystemHelperEES0_I23BrowsingDataQuotaHelperES0_INS1_19ServiceWorkerHelperEES0_INS1_18SharedWorkerHelperEES0_INS1_18CacheStorageHelperEES0_I30BrowsingDataMediaLicenseHelperE(%class.LocalDataContainer*, %"class.browsing_data::CookieHelper"*, %"class.browsing_data::DatabaseHelper"*, %"class.browsing_data::LocalStorageHelper"*, %"class.browsing_data::LocalStorageHelper"*, %"class.browsing_data::AppCacheHelper"*, i64, i64, i64, i64, i64, i64, i64) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.13"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.13"*, %"class.std::__1::basic_string.13"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.13"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.13"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.13"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.13"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.13"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.13"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.13"*
  %35 = icmp ugt %"class.std::__1::basic_string.13"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !320
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !320
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !323, !noalias !320
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !323, !noalias !320
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !320
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !320
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !323, !noalias !320
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !323, !noalias !320
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !320
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !320
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !323, !noalias !320
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !323, !noalias !320
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !320
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !320
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !323, !noalias !320
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !323, !noalias !320
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !325

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !320
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !320
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !323, !noalias !320
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !323, !noalias !320
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !326

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !327

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !328

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.13"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #19
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #19
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #18
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !329
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !329
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !332, !noalias !329
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !332, !noalias !329
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !329
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !329
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !332, !noalias !329
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !332, !noalias !329
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !329
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !329
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !332, !noalias !329
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !332, !noalias !329
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !329
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !329
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !332, !noalias !329
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !332, !noalias !329
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !334

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !329
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !329
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !332, !noalias !329
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !332, !noalias !329
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !335

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !336

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !337

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.13"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.13"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !338
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !338
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !341, !noalias !338
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !341, !noalias !338
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !338
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !338
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !341, !noalias !338
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !341, !noalias !338
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !338
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !338
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !341, !noalias !338
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !341, !noalias !338
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !338
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !338
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !341, !noalias !338
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !341, !noalias !338
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !343

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !338
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !338
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !341, !noalias !338
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !341, !noalias !338
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !344

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !345

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !346

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #17
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.13"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.13"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.13"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #19
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.13"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.13"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #19
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #18
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !347
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !347
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !350, !noalias !347
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !350, !noalias !347
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !347
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !347
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !350, !noalias !347
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !350, !noalias !347
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !347
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !347
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !350, !noalias !347
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !350, !noalias !347
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !347
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !347
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !350, !noalias !347
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !350, !noalias !347
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !352

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !347
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !347
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !350, !noalias !347
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !350, !noalias !347
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !353

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !354

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !355

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !356

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !357

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !358

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !360
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !360
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !363, !noalias !360
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !363, !noalias !360
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !360
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !360
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !363, !noalias !360
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !363, !noalias !360
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !360
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !360
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !363, !noalias !360
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !363, !noalias !360
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !360
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !360
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !363, !noalias !360
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !363, !noalias !360
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !365

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !360
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !360
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !363, !noalias !360
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !363, !noalias !360
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !366

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !367

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !368

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #18
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.13"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPN2ui13TreeModelNodeENS_9allocatorIS4_EEEEEaSEOS4_(%"class.std::__1::back_insert_iterator"*, %"class.ui::TreeModelNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.809"*, %"class.std::__1::vector.809"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.809", %"class.std::__1::vector.809"* %4, i64 0, i32 0, i32 1
  %6 = load %"class.ui::TreeModelNode"**, %"class.ui::TreeModelNode"*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.809", %"class.std::__1::vector.809"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.ui::TreeModelNode"**, %"class.ui::TreeModelNode"*** %7, align 8
  %9 = icmp ult %"class.ui::TreeModelNode"** %6, %8
  %10 = ptrtoint %"class.ui::TreeModelNode"** %8 to i64
  br i1 %9, label %11, label %18

11:                                               ; preds = %2
  %12 = bitcast %"class.ui::TreeModelNode"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.ui::TreeModelNode"** %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %6, i64 1
  %16 = ptrtoint %"class.ui::TreeModelNode"** %15 to i64
  %17 = bitcast %"class.ui::TreeModelNode"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %77

18:                                               ; preds = %2
  %19 = ptrtoint %"class.ui::TreeModelNode"** %6 to i64
  %20 = bitcast %"class.ui::TreeModelNode"*** %5 to i64*
  %21 = bitcast %"class.std::__1::vector.809"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.809"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #19
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.ui::TreeModelNode"*** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #19
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #18
  %46 = bitcast i8* %45 to %"class.ui::TreeModelNode"**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"class.ui::TreeModelNode"** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %49, i64 %24
  %51 = getelementptr inbounds %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %49, i64 %48
  %52 = ptrtoint %"class.ui::TreeModelNode"** %51 to i64
  %53 = bitcast %"class.ui::TreeModelNode"** %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.ui::TreeModelNode"** %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %50, i64 1
  %57 = ptrtoint %"class.ui::TreeModelNode"** %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.809", %"class.std::__1::vector.809"* %4, i64 0, i32 0, i32 0
  %59 = load %"class.ui::TreeModelNode"**, %"class.ui::TreeModelNode"*** %58, align 8
  %60 = load i64, i64* %20, align 8
  %61 = ptrtoint %"class.ui::TreeModelNode"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"class.ui::TreeModelNode"*, %"class.ui::TreeModelNode"** %50, i64 %64
  %66 = ptrtoint %"class.ui::TreeModelNode"** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %47
  %69 = bitcast %"class.ui::TreeModelNode"** %65 to i8*
  %70 = bitcast %"class.ui::TreeModelNode"** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #17
  %71 = load %"class.ui::TreeModelNode"**, %"class.ui::TreeModelNode"*** %58, align 8
  br label %72

72:                                               ; preds = %68, %47
  %73 = phi %"class.ui::TreeModelNode"** [ %59, %47 ], [ %71, %68 ]
  store i64 %66, i64* %21, align 8
  store i64 %57, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %74 = icmp eq %"class.ui::TreeModelNode"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.ui::TreeModelNode"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %11, %72, %75
  ret %"class.std::__1::back_insert_iterator"* %0
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK18CookieTreeHostNode18canonicalized_hostEv: argument 0"}
!4 = distinct !{!4, !"_ZNK18CookieTreeHostNode18canonicalized_hostEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK18CookieTreeHostNode18canonicalized_hostEv: argument 0"}
!7 = distinct !{!7, !"_ZNK18CookieTreeHostNode18canonicalized_hostEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = distinct !{!22, !18}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN12_GLOBAL__N_116CanonicalizeHostERK4GURL: argument 0"}
!25 = distinct !{!25, !"_ZN12_GLOBAL__N_116CanonicalizeHostERK4GURL"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!29 = !{!30, !32, !24}
!30 = distinct !{!30, !31, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!31 = distinct !{!31, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!32 = distinct !{!32, !33, !"_ZNK4GURL4hostEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4GURL4hostEv"}
!34 = !{!30, !32}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!40 = distinct !{!40, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!41 = distinct !{!41, !42, !"_ZNK4GURL4hostEv: argument 0"}
!42 = distinct !{!42, !"_ZNK4GURL4hostEv"}
!43 = !{!44}
!44 = distinct !{!44, !45}
!45 = distinct !{!45, !"LVerDomain"}
!46 = !{!47}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !18}
!49 = distinct !{!49, !20}
!50 = distinct !{!50, !20}
!51 = distinct !{!51, !18}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !18}
!58 = distinct !{!58, !20}
!59 = distinct !{!59, !20}
!60 = distinct !{!60, !18}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !18}
!67 = distinct !{!67, !20}
!68 = distinct !{!68, !20}
!69 = distinct !{!69, !18}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !18}
!76 = distinct !{!76, !20}
!77 = distinct !{!77, !20}
!78 = distinct !{!78, !18}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !18}
!85 = distinct !{!85, !20}
!86 = distinct !{!86, !20}
!87 = distinct !{!87, !18}
!88 = !{!89}
!89 = distinct !{!89, !90}
!90 = distinct !{!90, !"LVerDomain"}
!91 = !{!92}
!92 = distinct !{!92, !90}
!93 = distinct !{!93, !18}
!94 = distinct !{!94, !20}
!95 = distinct !{!95, !20}
!96 = distinct !{!96, !18}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !18}
!103 = distinct !{!103, !20}
!104 = distinct !{!104, !20}
!105 = distinct !{!105, !18}
!106 = !{!107}
!107 = distinct !{!107, !108}
!108 = distinct !{!108, !"LVerDomain"}
!109 = !{!110}
!110 = distinct !{!110, !108}
!111 = distinct !{!111, !18}
!112 = distinct !{!112, !20}
!113 = distinct !{!113, !20}
!114 = distinct !{!114, !18}
!115 = !{!116}
!116 = distinct !{!116, !117}
!117 = distinct !{!117, !"LVerDomain"}
!118 = !{!119}
!119 = distinct !{!119, !117}
!120 = distinct !{!120, !18}
!121 = distinct !{!121, !20}
!122 = distinct !{!122, !20}
!123 = distinct !{!123, !18}
!124 = !{!125}
!125 = distinct !{!125, !126}
!126 = distinct !{!126, !"LVerDomain"}
!127 = !{!128}
!128 = distinct !{!128, !126}
!129 = distinct !{!129, !18}
!130 = distinct !{!130, !20}
!131 = distinct !{!131, !20}
!132 = distinct !{!132, !18}
!133 = !{!134}
!134 = distinct !{!134, !135}
!135 = distinct !{!135, !"LVerDomain"}
!136 = !{!137}
!137 = distinct !{!137, !135}
!138 = distinct !{!138, !18}
!139 = distinct !{!139, !20}
!140 = distinct !{!140, !20}
!141 = distinct !{!141, !18}
!142 = !{!143}
!143 = distinct !{!143, !144}
!144 = distinct !{!144, !"LVerDomain"}
!145 = !{!146}
!146 = distinct !{!146, !144}
!147 = distinct !{!147, !18}
!148 = distinct !{!148, !20}
!149 = distinct !{!149, !20}
!150 = distinct !{!150, !18}
!151 = !{!152}
!152 = distinct !{!152, !153, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!153 = distinct !{!153, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!154 = !{!155}
!155 = distinct !{!155, !156, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!156 = distinct !{!156, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!157 = distinct !{!157, !20}
!158 = distinct !{!158, !20}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZNK4base12ObserverListIN16CookiesTreeModel8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!161 = distinct !{!161, !"_ZNK4base12ObserverListIN16CookiesTreeModel8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZNK4base12ObserverListIN16CookiesTreeModel8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!164 = distinct !{!164, !"_ZNK4base12ObserverListIN16CookiesTreeModel8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!165 = distinct !{!165, !20}
!166 = distinct !{!166, !20}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZNK4base12ObserverListIN16CookiesTreeModel8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!169 = distinct !{!169, !"_ZNK4base12ObserverListIN16CookiesTreeModel8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZNK4base12ObserverListIN16CookiesTreeModel8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!172 = distinct !{!172, !"_ZNK4base12ObserverListIN16CookiesTreeModel8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!173 = distinct !{!173, !20}
!174 = distinct !{!174, !20}
!175 = !{!176}
!176 = distinct !{!176, !177, !"_ZNK4base12NullCallbackcvNS_17RepeatingCallbackIFT_DpT0_EEEIbJRK4GURLEEEv: argument 0"}
!177 = distinct !{!177, !"_ZNK4base12NullCallbackcvNS_17RepeatingCallbackIFT_DpT0_EEEIbJRK4GURLEEEv"}
!178 = !{!179, !181}
!179 = distinct !{!179, !180, !"_ZNK4base12NullCallbackcvNS_17RepeatingCallbackIFT_DpT0_EEEIbJRK4GURLEEEv: argument 0"}
!180 = distinct !{!180, !"_ZNK4base12NullCallbackcvNS_17RepeatingCallbackIFT_DpT0_EEEIbJRK4GURLEEEv"}
!181 = distinct !{!181, !182, !"_ZN16CookiesTreeModel33GetCookieDeletionDisabledCallbackEP7Profile: argument 0"}
!182 = distinct !{!182, !"_ZN16CookiesTreeModel33GetCookieDeletionDisabledCallbackEP7Profile"}
!183 = !{!184}
!184 = distinct !{!184, !185, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!185 = distinct !{!185, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!186 = !{!187}
!187 = distinct !{!187, !188, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!188 = distinct !{!188, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!189 = distinct !{!189, !20}
!190 = distinct !{!190, !20}
!191 = distinct !{!191, !20}
!192 = distinct !{!192, !20}
!193 = distinct !{!193, !20}
!194 = distinct !{!194, !20}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!197 = distinct !{!197, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!198 = !{!199}
!199 = distinct !{!199, !200, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!200 = distinct !{!200, !"_ZNK4base12ObserverListIN2ui17TreeModelObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!201 = distinct !{!201, !20}
!202 = distinct !{!202, !20}
!203 = !{!204}
!204 = distinct !{!204, !205}
!205 = distinct !{!205, !"LVerDomain"}
!206 = !{!207}
!207 = distinct !{!207, !205}
!208 = distinct !{!208, !18}
!209 = distinct !{!209, !20}
!210 = distinct !{!210, !20}
!211 = distinct !{!211, !18}
!212 = !{!213}
!213 = distinct !{!213, !214}
!214 = distinct !{!214, !"LVerDomain"}
!215 = !{!216}
!216 = distinct !{!216, !214}
!217 = distinct !{!217, !18}
!218 = distinct !{!218, !20}
!219 = distinct !{!219, !20}
!220 = distinct !{!220, !18}
!221 = !{!222}
!222 = distinct !{!222, !223}
!223 = distinct !{!223, !"LVerDomain"}
!224 = !{!225}
!225 = distinct !{!225, !223}
!226 = distinct !{!226, !18}
!227 = distinct !{!227, !20}
!228 = distinct !{!228, !20}
!229 = distinct !{!229, !18}
!230 = !{!231}
!231 = distinct !{!231, !232}
!232 = distinct !{!232, !"LVerDomain"}
!233 = !{!234}
!234 = distinct !{!234, !232}
!235 = distinct !{!235, !18}
!236 = distinct !{!236, !20}
!237 = distinct !{!237, !20}
!238 = distinct !{!238, !18}
!239 = !{!240, !242, !244, !246}
!240 = distinct !{!240, !241, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJEEENS2_IFvDpT_EEEvEUlvE_JEEEDcOT0_DpOT1_: argument 0"}
!241 = distinct !{!241, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJEEENS2_IFvDpT_EEEvEUlvE_JEEEDcOT0_DpOT1_"}
!242 = distinct !{!242, !243, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!243 = distinct !{!243, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!244 = distinct !{!244, !245, !"_ZN4base9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEv: argument 0"}
!245 = distinct !{!245, !"_ZN4base9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEv"}
!246 = distinct !{!246, !247, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJEEEv: argument 0"}
!247 = distinct !{!247, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJEEEv"}
!248 = !{!249}
!249 = distinct !{!249, !250}
!250 = distinct !{!250, !"LVerDomain"}
!251 = !{!252}
!252 = distinct !{!252, !250}
!253 = distinct !{!253, !18}
!254 = distinct !{!254, !20}
!255 = distinct !{!255, !20}
!256 = distinct !{!256, !18}
!257 = !{!258}
!258 = distinct !{!258, !259}
!259 = distinct !{!259, !"LVerDomain"}
!260 = !{!261}
!261 = distinct !{!261, !259}
!262 = distinct !{!262, !18}
!263 = distinct !{!263, !20}
!264 = distinct !{!264, !20}
!265 = distinct !{!265, !18}
!266 = !{!267, !269, !271, !273}
!267 = distinct !{!267, !268, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJbEEENS2_IFvDpT_EEEvEUlbE_JEEEDcOT0_DpOT1_: argument 0"}
!268 = distinct !{!268, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJbEEENS2_IFvDpT_EEEvEUlbE_JEEEDcOT0_DpOT1_"}
!269 = distinct !{!269, !270, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!270 = distinct !{!270, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!271 = distinct !{!271, !272, !"_ZN4base9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEv: argument 0"}
!272 = distinct !{!272, !"_ZN4base9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEv"}
!273 = distinct !{!273, !274, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJbEEEv: argument 0"}
!274 = distinct !{!274, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJbEEEv"}
!275 = !{!276}
!276 = distinct !{!276, !277}
!277 = distinct !{!277, !"LVerDomain"}
!278 = !{!279}
!279 = distinct !{!279, !277}
!280 = distinct !{!280, !18}
!281 = distinct !{!281, !20}
!282 = distinct !{!282, !20}
!283 = distinct !{!283, !18}
!284 = !{!285}
!285 = distinct !{!285, !286}
!286 = distinct !{!286, !"LVerDomain"}
!287 = !{!288}
!288 = distinct !{!288, !286}
!289 = distinct !{!289, !18}
!290 = distinct !{!290, !20}
!291 = distinct !{!291, !20}
!292 = distinct !{!292, !18}
!293 = !{!294}
!294 = distinct !{!294, !295}
!295 = distinct !{!295, !"LVerDomain"}
!296 = !{!297}
!297 = distinct !{!297, !295}
!298 = distinct !{!298, !18}
!299 = distinct !{!299, !20}
!300 = distinct !{!300, !20}
!301 = distinct !{!301, !18}
!302 = !{!303}
!303 = distinct !{!303, !304}
!304 = distinct !{!304, !"LVerDomain"}
!305 = !{!306}
!306 = distinct !{!306, !304}
!307 = distinct !{!307, !18}
!308 = distinct !{!308, !20}
!309 = distinct !{!309, !20}
!310 = distinct !{!310, !18}
!311 = !{!312}
!312 = distinct !{!312, !313}
!313 = distinct !{!313, !"LVerDomain"}
!314 = !{!315}
!315 = distinct !{!315, !313}
!316 = distinct !{!316, !18}
!317 = distinct !{!317, !20}
!318 = distinct !{!318, !20}
!319 = distinct !{!319, !18}
!320 = !{!321}
!321 = distinct !{!321, !322}
!322 = distinct !{!322, !"LVerDomain"}
!323 = !{!324}
!324 = distinct !{!324, !322}
!325 = distinct !{!325, !18}
!326 = distinct !{!326, !20}
!327 = distinct !{!327, !20}
!328 = distinct !{!328, !18}
!329 = !{!330}
!330 = distinct !{!330, !331}
!331 = distinct !{!331, !"LVerDomain"}
!332 = !{!333}
!333 = distinct !{!333, !331}
!334 = distinct !{!334, !18}
!335 = distinct !{!335, !20}
!336 = distinct !{!336, !20}
!337 = distinct !{!337, !18}
!338 = !{!339}
!339 = distinct !{!339, !340}
!340 = distinct !{!340, !"LVerDomain"}
!341 = !{!342}
!342 = distinct !{!342, !340}
!343 = distinct !{!343, !18}
!344 = distinct !{!344, !20}
!345 = distinct !{!345, !20}
!346 = distinct !{!346, !18}
!347 = !{!348}
!348 = distinct !{!348, !349}
!349 = distinct !{!349, !"LVerDomain"}
!350 = !{!351}
!351 = distinct !{!351, !349}
!352 = distinct !{!352, !18}
!353 = distinct !{!353, !20}
!354 = distinct !{!354, !20}
!355 = distinct !{!355, !18}
!356 = distinct !{!356, !18}
!357 = distinct !{!357, !20}
!358 = distinct !{!358, !359, !18}
!359 = !{!"llvm.loop.unroll.runtime.disable"}
!360 = !{!361}
!361 = distinct !{!361, !362}
!362 = distinct !{!362, !"LVerDomain"}
!363 = !{!364}
!364 = distinct !{!364, !362}
!365 = distinct !{!365, !18}
!366 = distinct !{!366, !20}
!367 = distinct !{!367, !20}
!368 = distinct !{!368, !18}
