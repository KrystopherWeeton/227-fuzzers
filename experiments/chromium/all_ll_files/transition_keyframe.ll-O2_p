; ModuleID = '../../third_party/blink/renderer/core/animation/transition_keyframe.cc'
source_filename = "../../third_party/blink/renderer/core/animation/transition_keyframe.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.704, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.235" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.227", %"class.blink::Member.227" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.227", %"class.blink::Member.229", %"class.blink::Member.227", %"class.blink::Member.227", %"class.blink::Member.231" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.253", %"class.blink::Member.255", %"class.blink::Member.229", %"class.blink::Member.257", %"class.blink::Member.257", %"class.blink::Member.280", %"class.blink::Member.282", %"class.blink::Member.284", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.289", %"class.blink::HeapVector.291" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::Document"* }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.261" }
%"class.blink::HeapHashMap.261" = type { %"class.WTF::HashMap.264" }
%"class.WTF::HashMap.264" = type { %"class.WTF::HashTable.265" }
%"class.WTF::HashTable.265" = type <{ %"struct.WTF::KeyValuePair.267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.267" = type { %"class.WTF::AtomicString", %"class.blink::Member.268" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.272", i32, %"class.blink::HeapVector" }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.276" }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"class.blink::Member.272"*, i32, i32 }
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.286" }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::HeapHashMap.288"* }
%"class.blink::HeapHashMap.288" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.291" = type { %"class.WTF::Vector.294" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"class.blink::Member.297"*, i32, i32 }
%"class.blink::Member.297" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.299", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.301, %"class.WTF::Vector.320", %"class.WTF::Vector.320", %"class.blink::Member.227", %"class.blink::Member.325", %"class.blink::HeapHashSet", %"class.blink::Member.255", %"class.WTF::HashSet.335", %"class.WTF::TextPosition", %"class.blink::Member.339", %"class.blink::HeapVector.341", %"class.blink::Member.348" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.301 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.302", %"class.WTF::Vector.304" }
%"class.WTF::RefCounted.302" = type { %"class.base::RefCounted.303" }
%"class.base::RefCounted.303" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306" }
%"class.WTF::VectorBufferBase.306" = type { %"class.std::__1::unique_ptr.307"*, i32, i32 }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.310", %"class.WTF::String" }
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.320" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.327" }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.331" }
%"class.WTF::HashSet.331" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"class.blink::WeakMember.334"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.334" = type { %"class.blink::MemberBase.230" }
%"class.WTF::HashSet.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.301, %"class.blink::Member.297", %"class.blink::Member.325" }
%"class.blink::HeapVector.341" = type { %"class.WTF::Vector.344" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346" }
%"class.WTF::VectorBufferBase.346" = type { %"class.blink::Member.325"*, i32, i32 }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.239", %"class.blink::Member.241", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.239" = type { %"class.WTF::SingleThreadedBitField.240" }
%"class.WTF::SingleThreadedBitField.240" = type { i32 }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.246", %"class.WTF::AtomicString", %"class.WTF::Vector.248" }
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.248" = type { %"class.WTF::VectorBuffer.249" }
%"class.WTF::VectorBuffer.249" = type { %"class.WTF::VectorBufferBase.250", [32 x i8] }
%"class.WTF::VectorBufferBase.250" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.358", %"class.WTF::Vector.358", i8, i32, %"class.blink::Member.365", %"class.blink::Member.367", %"class.blink::Member.369", %"class.blink::Member.371", %"class.blink::Member.373", %"class.blink::Member.375", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.383", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::Member.297", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.394", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.272", %"class.blink::Member.410", %"class.blink::Member.272", %"class.blink::Member.272", %"class.blink::Member.272", %"class.blink::UserActionElementSet", %"class.blink::Member.419", double, double, i64, i64, %"class.blink::HeapHashSet.421", %"class.blink::HeapHashSet.428", i16, i8, %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::Member.441", %"class.blink::TextLinkColors", %"class.blink::Member.443", i8, [7 x i8], %"class.blink::HeapHashMap.445", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.272", %"class.WTF::Vector.452", %"class.blink::Member.457", %"class.blink::Member.459", i8, %"class.blink::Member.272", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.461", %"class.blink::HeapVector.463", %"class.std::__1::unique_ptr.471", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.477", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.490", %"class.WTF::Vector.492", i8, i8, %"class.std::__1::unique_ptr.497", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.503", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.511", i8, i32, %"class.blink::Member.513", %"class.blink::Member.515", %"class.blink::Member.517", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.519", %"class.WTF::HashMap.521", %"class.blink::Member.526", %"class.blink::Member.528", %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.255", %"class.blink::Member.255", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.534", i8, i32, %"class.blink::Member.541", %"class.blink::Member.543", i32, %"class.blink::Member.545", %"class.blink::Member.547", %"class.blink::Member.549", %"class.std::__1::unique_ptr.551", i64, %"class.std::__1::unique_ptr.557", i32, i32, %"class.blink::Member.568", %"class.blink::Member.570", %"class.blink::Member.572", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.574", %"class.WTF::Vector.576", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.581", %"class.blink::Member.588", %"class.std::__1::unique_ptr.590", %"class.blink::Member.596", i8, i8, %"class.WTF::String", %"class.blink::Member.598", i8, [7 x i8], %"class.blink::HeapHashMap.600", %"class.blink::HeapObserverSet", %"class.blink::Member.614", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.616", i32, i8, i8, %"class.blink::WeakMember.618", %"class.blink::Member.619" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.351" }
%"class.blink::HeapHashMap.351" = type { %"class.WTF::HashMap.354" }
%"class.WTF::HashMap.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"struct.WTF::KeyValuePair.357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.357" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.361 }
%class.scoped_refptr.361 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.362", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.362" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.632", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.673", i32, i8, [3 x i8], %"class.blink::HeapVector.675", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.683", %"class.blink::Member.685", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.694", %"class.blink::Member.700", %"class.blink::Member.702", i8, [7 x i8] }>
%"class.blink::Supplementable.632" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.633" }
%"class.blink::HeapHashMap.633" = type { %"class.WTF::HashMap.636" }
%"class.WTF::HashMap.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"struct.WTF::KeyValuePair.639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.639" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.648" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.640" }
%"class.blink::HeapObserverSet.640" = type { i32, [4 x i8], %"class.blink::HeapHashSet.641" }
%"class.blink::HeapHashSet.641" = type { %"class.WTF::HashSet.644" }
%"class.WTF::HashSet.644" = type { %"class.WTF::HashTable.645" }
%"class.WTF::HashTable.645" = type <{ %"class.blink::WeakMember.647"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.647" = type opaque
%"class.blink::Supplementable.648" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.649" }
%"class.blink::HeapHashMap.649" = type { %"class.WTF::HashMap.652" }
%"class.WTF::HashMap.652" = type { %"class.WTF::HashTable.653" }
%"class.WTF::HashTable.653" = type <{ %"struct.WTF::KeyValuePair.655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.655" = type { i8*, %"class.blink::Member.1441" }
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1443" }
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.656, %"class.std::__1::unique_ptr.657", %"class.std::__1::unique_ptr.657", %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.663", %"class.blink::Member.367", i32, [4 x i8], %"class.WTF::HashSet.669", i32, i32 }
%class.scoped_refptr.656 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.669" = type { %"class.WTF::HashTable.670" }
%"class.WTF::HashTable.670" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.675" = type { %"class.WTF::Vector.678" }
%"class.WTF::Vector.678" = type { %"class.WTF::VectorBuffer.679" }
%"class.WTF::VectorBuffer.679" = type { %"class.WTF::VectorBufferBase.680" }
%"class.WTF::VectorBufferBase.680" = type { %"class.blink::Member.681"*, i32, i32 }
%"class.blink::Member.681" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.687", i32, i32 }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.377" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::KURL"* }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.393 }
%class.scoped_refptr.393 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.397 }
%class.scoped_refptr.397 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.29", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.29" = type { %"class.base::RefCounted.30" }
%"class.base::RefCounted.30" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.35" }
%"class.WTF::HashTable.35" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.40", i32, [4 x i8], %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.214", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.156", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist.115"* }
%"class.blink::Worklist.115" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::Worklist.122"* }
%"class.blink::Worklist.122" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::Worklist.129"* }
%"class.blink::Worklist.129" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.136", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { i64 }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { float }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.159", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.195" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.101"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.108"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.115"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.222" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.213 }
%class.scoped_refptr.213 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__cxx_atomic_impl.216" }
%"struct.std::__1::__cxx_atomic_impl.216" = type { %"struct.std::__1::__cxx_atomic_base_impl.217" }
%"struct.std::__1::__cxx_atomic_base_impl.217" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.412" }
%"class.blink::HeapHashMap.412" = type { %"class.WTF::HashMap.415" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.418"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.418" = type opaque
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.421" = type { %"class.WTF::HashSet.424" }
%"class.WTF::HashSet.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"class.blink::WeakMember.427"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.427" = type opaque
%"class.blink::HeapHashSet.428" = type { %"class.WTF::HashSet.431" }
%"class.WTF::HashSet.431" = type { %"class.WTF::HashTable.432" }
%"class.WTF::HashTable.432" = type <{ %"class.blink::WeakMember.434"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.434" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.445" = type { %"class.WTF::HashMap.448" }
%"class.WTF::HashMap.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"struct.WTF::KeyValuePair.451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.451" = type opaque
%"class.WTF::Vector.452" = type { %"class.WTF::VectorBuffer.453" }
%"class.WTF::VectorBuffer.453" = type { %"class.WTF::VectorBufferBase.454" }
%"class.WTF::VectorBufferBase.454" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.463" = type { %"class.WTF::Vector.466" }
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"class.blink::Member.469"*, i32, i32 }
%"class.blink::Member.469" = type opaque
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.477" = type { %"class.WTF::HashSet.480" }
%"class.WTF::HashSet.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"class.blink::WeakMember.483"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.483" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.484", i32, [4 x i8] }>
%"class.WTF::Vector.484" = type { %"class.WTF::VectorBuffer.485" }
%"class.WTF::VectorBuffer.485" = type { %"class.WTF::VectorBufferBase.486" }
%"class.WTF::VectorBufferBase.486" = type { %"struct.std::__1::pair.487"*, i32, i32 }
%"struct.std::__1::pair.487" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.503" = type { %"class.WTF::Vector.506" }
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { %"class.blink::Member.509"*, i32, i32 }
%"class.blink::Member.509" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.255" }
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.WTF::KeyValuePair.525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.525" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.409", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.400, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.400 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.401" }>
%"class.base::RefCountedThreadSafe.401" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.402 }
%class.scoped_refptr.402 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.403", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.403" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.404" }
%"struct.std::__1::atomic.404" = type { %"struct.std::__1::__atomic_base.405" }
%"struct.std::__1::__atomic_base.405" = type { %"struct.std::__1::__atomic_base.406" }
%"struct.std::__1::__atomic_base.406" = type { %"struct.std::__1::__cxx_atomic_impl.407" }
%"struct.std::__1::__cxx_atomic_impl.407" = type { %"struct.std::__1::__cxx_atomic_base_impl.408" }
%"struct.std::__1::__cxx_atomic_base_impl.408" = type { i8 }
%"class.blink::WeakMember.409" = type { %"class.blink::MemberBase.256" }
%"class.blink::HeapHashSet.534" = type { %"class.WTF::HashSet.537" }
%"class.WTF::HashSet.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"class.blink::Member.540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.540" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.335", %"class.WTF::HashSet.335", %"class.WTF::HashSet.335", %"class.WTF::HashSet.335", %"class.WTF::HashSet.335", %"class.WTF::HashSet.335", i32, [4 x i8], %"class.WTF::HashMap.560", %"class.WTF::HashMap.560", %"class.WTF::HashMap.560", %"class.WTF::HashMap.560", %"class.WTF::HashMap.560", %"class.WTF::HashMap.560", %"class.WTF::HashMap.560", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.564" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.576" = type { %"class.WTF::VectorBuffer.577" }
%"class.WTF::VectorBuffer.577" = type { %"class.WTF::VectorBufferBase.578" }
%"class.WTF::VectorBufferBase.578" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.581" = type { %"class.WTF::HashMap.584" }
%"class.WTF::HashMap.584" = type { %"class.WTF::HashTable.585" }
%"class.WTF::HashTable.585" = type <{ %"struct.WTF::KeyValuePair.587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.587" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.607" }
%"class.blink::HeapHashSet.607" = type { %"class.WTF::HashSet.610" }
%"class.WTF::HashSet.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"class.blink::WeakMember.613"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.613" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.255", %"class.blink::HeapHashSet.623", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.630", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.623" = type { %"class.WTF::HashSet.626" }
%"class.WTF::HashSet.626" = type { %"class.WTF::HashTable.627" }
%"class.WTF::HashTable.627" = type <{ %"class.blink::Member.629"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.629" = type opaque
%"class.blink::HeapTaskRunnerTimer.630" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.631", { i64, i64 } }
%"class.blink::WeakMember.631" = type { %"class.blink::MemberBase.617" }
%"class.blink::WeakMember.618" = type { %"class.blink::MemberBase.228" }
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.1152 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1137", %"class.std::__1::unique_ptr.1139" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.775", %"class.blink::DataRef.855", %"class.blink::DataRef.859", %"class.blink::DataRef.1057", %"class.blink::DataRef.1120", %"class.blink::DataRef.1124", %"class.blink::DataRef.1128", %"class.blink::DataRef.1132", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.705 }
%class.scoped_refptr.705 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.706", %"class.blink::DataRef.708", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.706" = type { %"class.base::RefCounted.707" }
%"class.base::RefCounted.707" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.708" = type { %class.scoped_refptr.709 }
%class.scoped_refptr.709 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.710", %"class.blink::Font" }
%"class.WTF::RefCounted.710" = type { %"class.base::RefCounted.711" }
%"class.base::RefCounted.711" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.744 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.713, %class.scoped_refptr.721, %class.scoped_refptr.731, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.743 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.712 }
%class.scoped_refptr.712 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1395", [4 x i8] }>
%"class.WTF::RefCounted.1395" = type { %"class.base::RefCounted.1396" }
%"class.base::RefCounted.1396" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.713 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.719", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.714" }
%"class.WTF::Vector.714" = type { %"class.WTF::VectorBuffer.715" }
%"class.WTF::VectorBuffer.715" = type { %"class.WTF::VectorBufferBase.716" }
%"class.WTF::VectorBufferBase.716" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.721 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.722", %"class.WTF::RefCounted.729", [4 x i8] }>
%"class.blink::FontSettings.722" = type { %"class.WTF::Vector.723" }
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725" }
%"class.WTF::VectorBufferBase.725" = type { %"class.blink::FontTagValuePair.726"*, i32, i32 }
%"class.blink::FontTagValuePair.726" = type { i32, float }
%"class.WTF::RefCounted.729" = type { %"class.base::RefCounted.730" }
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.731 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.732", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.740, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.732" = type { %"class.base::RefCounted.733" }
%"class.base::RefCounted.733" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.736 }
%union.anon.736 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.740 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.741", [4 x i8] }>
%"class.WTF::RefCounted.741" = type { %"class.base::RefCounted.742" }
%"class.base::RefCounted.742" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.743 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.744 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.745", %"class.WTF::Vector.747", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.745" = type { %"class.base::RefCounted.746" }
%"class.base::RefCounted.746" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.747" = type { %"class.WTF::VectorBuffer.748" }
%"class.WTF::VectorBuffer.748" = type { %"class.WTF::VectorBufferBase.749", [8 x i8] }
%"class.WTF::VectorBufferBase.749" = type { %class.scoped_refptr.750*, i32, i32 }
%class.scoped_refptr.750 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.751", [4 x i8] }>
%"class.WTF::RefCounted.751" = type { %"class.base::RefCounted.752" }
%"class.base::RefCounted.752" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.761", %class.scoped_refptr.768, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.751" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.755", %"class.absl::optional.755", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.755" = type { %"class.absl::optional_internal::optional_data.756" }
%"class.absl::optional_internal::optional_data.756" = type { %"class.absl::optional_internal::optional_data_base.757" }
%"class.absl::optional_internal::optional_data_base.757" = type { %"class.absl::optional_internal::optional_data_dtor_base.758" }
%"class.absl::optional_internal::optional_data_dtor_base.758" = type { i8, %union.anon.759 }
%union.anon.759 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.760, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.404" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.760 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.764, %class.scoped_refptr.764 }
%class.scoped_refptr.764 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.768 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.769", [4 x i8] }>
%"class.WTF::RefCounted.769" = type { %"class.base::RefCounted.770" }
%"class.base::RefCounted.770" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.771" }
%"class.blink::PersistentBase.771" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.772" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.772" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.773 }
%class.scoped_refptr.773 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.774, i8, i8, i8, i8 }>
%union.anon.774 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.775" = type { %class.scoped_refptr.776 }
%class.scoped_refptr.776 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.777", [4 x i8], %"class.blink::DataRef.779", %"class.blink::DataRef.820", %"class.WTF::Vector.824", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.828, %class.scoped_refptr.837, %"class.blink::Persistent.845", %"class.blink::Persistent.847", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.777" = type { %"class.base::RefCounted.778" }
%"class.base::RefCounted.778" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.779" = type { %class.scoped_refptr.780 }
%class.scoped_refptr.780 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.781", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.783, %class.scoped_refptr.790, %"class.blink::Persistent.807", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.781" = type { %"class.base::RefCounted.782" }
%"class.base::RefCounted.782" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.783 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.784", %"class.WTF::Vector.785" }
%"class.base::RefCountedThreadSafe.784" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase.787" }
%"class.WTF::VectorBufferBase.787" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.790 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.791", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.791" = type { %"class.base::RefCounted.792" }
%"class.base::RefCounted.792" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.793", %"class.blink::Persistent.798" }
%"class.WTF::HashMap.793" = type { %"class.WTF::HashTable.794" }
%"class.WTF::HashTable.794" = type <{ %"struct.WTF::KeyValuePair.797"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.797" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1476 }
%class.scoped_refptr.1476 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1477", %"class.WTF::Vector.1040", %"class.WTF::Vector.1479", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1477" = type { %"class.base::RefCounted.1478" }
%"class.base::RefCounted.1478" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1040" = type { %"class.WTF::VectorBuffer.1041" }
%"class.WTF::VectorBuffer.1041" = type { %"class.WTF::VectorBufferBase.1042" }
%"class.WTF::VectorBufferBase.1042" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1479" = type { %"class.WTF::VectorBuffer.1480" }
%"class.WTF::VectorBuffer.1480" = type { %"class.WTF::VectorBufferBase.1481" }
%"class.WTF::VectorBufferBase.1481" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1482 }
%union.anon.1482 = type { double }
%"class.blink::Persistent.798" = type { %"class.blink::PersistentBase.799" }
%"class.blink::PersistentBase.799" = type { %"class.blink::HeapHashMap.800"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.800" = type { %"class.WTF::HashMap.803" }
%"class.WTF::HashMap.803" = type { %"class.WTF::HashTable.804" }
%"class.WTF::HashTable.804" = type <{ %"struct.WTF::KeyValuePair.806"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.806" = type opaque
%"class.blink::Persistent.807" = type { %"class.blink::PersistentBase.808" }
%"class.blink::PersistentBase.808" = type { %"class.blink::HeapVector.809"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.809" = type { %"class.WTF::Vector.812" }
%"class.WTF::Vector.812" = type { %"class.WTF::VectorBuffer.813" }
%"class.WTF::VectorBuffer.813" = type { %"class.WTF::VectorBufferBase.814" }
%"class.WTF::VectorBufferBase.814" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.815", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.820" = type { %class.scoped_refptr.821 }
%class.scoped_refptr.821 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.822", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.822" = type { %"class.base::RefCounted.823" }
%"class.base::RefCounted.823" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.824" = type { %"class.WTF::VectorBuffer.825" }
%"class.WTF::VectorBuffer.825" = type { %"class.WTF::VectorBufferBase.250" }
%class.scoped_refptr.828 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.829", %"class.WTF::Vector.831" }
%"class.WTF::RefCounted.829" = type { %"class.base::RefCounted.830" }
%"class.base::RefCounted.830" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { %"struct.std::__1::pair.834"*, i32, i32 }
%"struct.std::__1::pair.834" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.837 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.838", [4 x i8], %"class.WTF::Vector.840" }
%"class.WTF::RefCounted.838" = type { %"class.base::RefCounted.839" }
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.840" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.842", [28 x i8] }>
%"class.WTF::VectorBufferBase.842" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.845" = type { %"class.blink::PersistentBase.846" }
%"class.blink::PersistentBase.846" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.847" = type { %"class.blink::PersistentBase.848" }
%"class.blink::PersistentBase.848" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.851", %"class.blink::Member.853" }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.855" = type { %class.scoped_refptr.856 }
%class.scoped_refptr.856 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.857", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.857" = type { %"class.base::RefCounted.858" }
%"class.base::RefCounted.858" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.859" = type { %class.scoped_refptr.860 }
%class.scoped_refptr.860 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.861", [4 x i8], %"class.blink::DataRef.863", %"class.blink::DataRef.929", %"class.blink::TransformOperations", %class.scoped_refptr.837, %"class.blink::Persistent.1051", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.861" = type { %"class.base::RefCounted.862" }
%"class.base::RefCounted.862" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.863" = type { %class.scoped_refptr.864 }
%class.scoped_refptr.864 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.865", [4 x i8], %"class.blink::DataRef.867", %"class.blink::Persistent.905", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.865" = type { %"class.base::RefCounted.866" }
%"class.base::RefCounted.866" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.867" = type { %class.scoped_refptr.868 }
%class.scoped_refptr.868 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.869", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.887, %class.scoped_refptr.890, %class.scoped_refptr.893, %class.scoped_refptr.896, %class.scoped_refptr.897, %class.scoped_refptr.898, %"class.blink::Persistent.905", %"class.blink::Persistent.920", %"class.absl::optional.924", %"class.absl::optional.924", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.869" = type { %"class.base::RefCounted.870" }
%"class.base::RefCounted.870" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.871", %"class.std::__1::unique_ptr.876" }
%"class.WTF::Vector.871" = type { %"class.WTF::VectorBuffer.872" }
%"class.WTF::VectorBuffer.872" = type { %"class.WTF::VectorBufferBase.873" }
%"class.WTF::VectorBufferBase.873" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.879", %"class.WTF::Vector.871", i32, i32 }
%"class.WTF::Vector.879" = type { %"class.WTF::VectorBuffer.880" }
%"class.WTF::VectorBuffer.880" = type { %"class.WTF::VectorBufferBase.881" }
%"class.WTF::VectorBufferBase.881" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.887 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.888", [4 x i8] }>
%"class.WTF::RefCounted.888" = type { %"class.base::RefCounted.889" }
%"class.base::RefCounted.889" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.890 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.891", [4 x i8] }>
%"class.WTF::RefCounted.891" = type { %"class.base::RefCounted.892" }
%"class.base::RefCounted.892" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.893 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.894" }>
%"class.WTF::RefCounted.894" = type { %"class.base::RefCounted.895" }
%"class.base::RefCounted.895" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.896 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.897 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.898 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.899", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.899" = type { %"class.base::RefCounted.900" }
%"class.base::RefCounted.900" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.901" }
%"class.blink::DataRef.901" = type { %class.scoped_refptr.902 }
%class.scoped_refptr.902 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.845", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.903" }
%"class.WTF::RefCounted.903" = type { %"class.base::RefCounted.904" }
%"class.base::RefCounted.904" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.920" = type { %"class.blink::PersistentBase.921" }
%"class.blink::PersistentBase.921" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.890, %"class.blink::Member.815", i32, [4 x i8] }>
%"class.absl::optional.924" = type { %"class.absl::optional_internal::optional_data.925" }
%"class.absl::optional_internal::optional_data.925" = type { %"class.absl::optional_internal::optional_data_base.926" }
%"class.absl::optional_internal::optional_data_base.926" = type { %"class.absl::optional_internal::optional_data_dtor_base.927" }
%"class.absl::optional_internal::optional_data_dtor_base.927" = type { i8, [3 x i8], %union.anon.928 }
%union.anon.928 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.905" = type { %"class.blink::PersistentBase.906" }
%"class.blink::PersistentBase.906" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.909" }
%"class.blink::HeapVector.909" = type { %"class.WTF::Vector.912" }
%"class.WTF::Vector.912" = type { %"class.WTF::VectorBuffer.913" }
%"class.WTF::VectorBuffer.913" = type { %"class.WTF::VectorBufferBase.914" }
%"class.WTF::VectorBufferBase.914" = type { %"class.blink::Member.915"*, i32, i32 }
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.929" = type { %class.scoped_refptr.930 }
%class.scoped_refptr.930 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.931", %"class.blink::DataRef.933", %"class.blink::DataRef.937", %"class.blink::DataRef.946", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.976", %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1023", %"class.std::__1::unique_ptr.1034", %"class.WTF::Vector.1040", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.931" = type { %"class.base::RefCounted.932" }
%"class.base::RefCounted.932" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.933" = type { %class.scoped_refptr.934 }
%class.scoped_refptr.934 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.935", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.935" = type { %"class.base::RefCounted.936" }
%"class.base::RefCounted.936" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.937" = type { %class.scoped_refptr.938 }
%class.scoped_refptr.938 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.939", [4 x i8], %"class.WTF::Vector.941", i8, [7 x i8] }>
%"class.WTF::RefCounted.939" = type { %"class.base::RefCounted.940" }
%"class.base::RefCounted.940" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943" }
%"class.WTF::VectorBufferBase.943" = type { i32*, i32, i32 }
%"class.blink::DataRef.946" = type { %class.scoped_refptr.947 }
%class.scoped_refptr.947 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.948", [4 x i8], %"class.WTF::HashMap.950", %"class.WTF::HashMap.950", %"class.WTF::HashMap.950", %"class.WTF::HashMap.950", %"class.WTF::HashMap.950", %"class.WTF::HashMap.950", %"class.WTF::HashMap.955", %"class.WTF::HashMap.955", %"class.WTF::HashMap.955", %"class.WTF::HashMap.955", %"class.WTF::HashMap.960", %"class.WTF::Vector.871", %"class.WTF::Vector.871", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.948" = type { %"class.base::RefCounted.949" }
%"class.base::RefCounted.949" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.950" = type { %"class.WTF::HashTable.951" }
%"class.WTF::HashTable.951" = type <{ %"struct.WTF::KeyValuePair.954"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.954" = type { %"class.WTF::String", %"class.WTF::Vector.1466" }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { i64*, i32, i32 }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.959" = type { i64, %"class.WTF::Vector.1040" }
%"class.WTF::HashMap.960" = type { %"class.WTF::HashTable.961" }
%"class.WTF::HashTable.961" = type <{ %"struct.WTF::KeyValuePair.964"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.964" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.968" }
%"class.WTF::HashMap.968" = type { %"class.WTF::HashTable.969" }
%"class.WTF::HashTable.969" = type <{ %"struct.WTF::KeyValuePair.972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.972" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1471", %"class.absl::optional.1471", %"class.absl::optional.1471" }
%"class.absl::optional.1471" = type { %"class.absl::optional_internal::optional_data.1472" }
%"class.absl::optional_internal::optional_data.1472" = type { %"class.absl::optional_internal::optional_data_base.1473" }
%"class.absl::optional_internal::optional_data_base.1473" = type { %"class.absl::optional_internal::optional_data_dtor_base.1474" }
%"class.absl::optional_internal::optional_data_dtor_base.1474" = type { i8, %union.anon.1475 }
%union.anon.1475 = type { i32 }
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.824", %"class.WTF::Vector.989", %"class.WTF::Vector.979", %"class.WTF::Vector.994", %"class.WTF::Vector.999", %"class.WTF::Vector.1004" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.979", %"class.WTF::Vector.979", %"class.WTF::Vector.984" }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.989" = type { %"class.WTF::VectorBuffer.990" }
%"class.WTF::VectorBuffer.990" = type { %"class.WTF::VectorBufferBase.991" }
%"class.WTF::VectorBufferBase.991" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.979" = type { %"class.WTF::VectorBuffer.980" }
%"class.WTF::VectorBuffer.980" = type { %"class.WTF::VectorBufferBase.981" }
%"class.WTF::VectorBufferBase.981" = type { double*, i32, i32 }
%"class.WTF::Vector.994" = type { %"class.WTF::VectorBuffer.995" }
%"class.WTF::VectorBuffer.995" = type { %"class.WTF::VectorBufferBase.996" }
%"class.WTF::VectorBufferBase.996" = type { i32*, i32, i32 }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001" }
%"class.WTF::VectorBufferBase.1001" = type { i32*, i32, i32 }
%"class.WTF::Vector.1004" = type { %"class.WTF::VectorBuffer.1005" }
%"class.WTF::VectorBuffer.1005" = type { %"class.WTF::VectorBufferBase.1006" }
%"class.WTF::VectorBufferBase.1006" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1015" }
%"class.WTF::Vector.1015" = type { %"class.WTF::VectorBuffer.1016" }
%"class.WTF::VectorBuffer.1016" = type { %"class.WTF::VectorBufferBase.1017" }
%"class.WTF::VectorBufferBase.1017" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1026" }
%"class.WTF::Vector.1026" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { %"class.blink::Persistent.845"*, i32, i32 }
%"class.std::__1::unique_ptr.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.845", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1045" }
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %class.scoped_refptr.1048*, i32, i32 }
%class.scoped_refptr.1048 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.894", [4 x i8] }>
%"class.blink::Persistent.1051" = type { %"class.blink::PersistentBase.1052" }
%"class.blink::PersistentBase.1052" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1055" }
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1057" = type { %class.scoped_refptr.1058 }
%class.scoped_refptr.1058 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1059", [4 x i8], %"class.blink::DataRef.1061", %"class.blink::DataRef.1065", %"class.blink::DataRef.1082", %"class.blink::DataRef.1100", %"class.blink::DataRef.1112", %"class.blink::DataRef.1116", %class.scoped_refptr.1086, i32, [4 x i8] }>
%"class.WTF::RefCounted.1059" = type { %"class.base::RefCounted.1060" }
%"class.base::RefCounted.1060" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1061" = type { %class.scoped_refptr.1062 }
%class.scoped_refptr.1062 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1063", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1063" = type { %"class.base::RefCounted.1064" }
%"class.base::RefCounted.1064" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1065" = type { %class.scoped_refptr.1066 }
%class.scoped_refptr.1066 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1067", %class.scoped_refptr.1069, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1067" = type { %"class.base::RefCounted.1068" }
%"class.base::RefCounted.1068" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1069 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1070", %"class.std::__1::unique_ptr.1076", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.891" }>
%"class.std::__1::unique_ptr.1070" = type { %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.1082" = type { %class.scoped_refptr.1083 }
%class.scoped_refptr.1083 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1084", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1084" = type { %"class.base::RefCounted.1085" }
%"class.base::RefCounted.1085" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1086, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1100" = type { %class.scoped_refptr.1101 }
%class.scoped_refptr.1101 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1102", [4 x i8], %class.scoped_refptr.1104, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1102" = type { %"class.base::RefCounted.1103" }
%"class.base::RefCounted.1103" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1104 = type { %"class.base::RefCountedData.1105"* }
%"class.base::RefCountedData.1105" = type { %"class.base::RefCountedThreadSafe.1106", %"class.WTF::Vector.1107" }
%"class.base::RefCountedThreadSafe.1106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1112" = type { %class.scoped_refptr.1113 }
%class.scoped_refptr.1113 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1114", %class.scoped_refptr.1086, %class.scoped_refptr.1086, %class.scoped_refptr.1086 }
%"class.WTF::RefCounted.1114" = type { %"class.base::RefCounted.1115" }
%"class.base::RefCounted.1115" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1116" = type { %class.scoped_refptr.1117 }
%class.scoped_refptr.1117 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1118", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1118" = type { %"class.base::RefCounted.1119" }
%"class.base::RefCounted.1119" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1086 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1087", %"class.blink::Persistent.1089", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1087" = type { %"class.base::RefCounted.1088" }
%"class.base::RefCounted.1088" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1089" = type { %"class.blink::PersistentBase.1090" }
%"class.blink::PersistentBase.1090" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.272", %"class.blink::HeapHashMap.1093" }
%"class.blink::HeapHashMap.1093" = type { %"class.WTF::HashMap.1096" }
%"class.WTF::HashMap.1096" = type { %"class.WTF::HashTable.1097" }
%"class.WTF::HashTable.1097" = type <{ %"struct.WTF::KeyValuePair.1099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1099" = type opaque
%"class.blink::DataRef.1120" = type { %class.scoped_refptr.1121 }
%class.scoped_refptr.1121 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1122", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1122" = type { %"class.base::RefCounted.1123" }
%"class.base::RefCounted.1123" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1124" = type { %class.scoped_refptr.1125 }
%class.scoped_refptr.1125 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1126", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1126" = type { %"class.base::RefCounted.1127" }
%"class.base::RefCounted.1127" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1128" = type { %class.scoped_refptr.1129 }
%class.scoped_refptr.1129 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1130", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1130" = type { %"class.base::RefCounted.1131" }
%"class.base::RefCounted.1131" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1132" = type { %class.scoped_refptr.1133 }
%class.scoped_refptr.1133 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1134", %class.scoped_refptr.1136 }
%"class.WTF::RefCounted.1134" = type { %"class.base::RefCounted.1135" }
%"class.base::RefCounted.1135" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1136 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1393", %"class.blink::StyleVariables", %class.scoped_refptr.1136 }
%"class.WTF::RefCounted.1393" = type { %"class.base::RefCounted.1394" }
%"class.base::RefCounted.1394" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1137" = type { %"class.base::RefCounted.1138" }
%"class.base::RefCounted.1138" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1142" }
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.WTF::Vector.1145"* }
%"class.WTF::Vector.1145" = type { %"class.WTF::VectorBuffer.1486" }
%"class.WTF::VectorBuffer.1486" = type { %"class.WTF::VectorBufferBase.1487", [32 x i8] }
%"class.WTF::VectorBufferBase.1487" = type { %class.scoped_refptr.704*, i32, i32 }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.704 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.1153", %"class.WTF::Vector.1303", %"class.blink::HeapHashSet.1308", %"class.WTF::Vector.1303", %"class.blink::HeapVector.1315", %"class.blink::HeapVector.1322", %"class.blink::HeapHashMap.1329", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.blink::HeapHashMap.1336", %"class.blink::HeapHashMap.1336", %"class.blink::HeapHashMap.1336", %"class.blink::HeapHashMap.1336" }
%"class.blink::HeapVector.1153" = type { %"class.WTF::Vector.1156" }
%"class.WTF::Vector.1156" = type { %"class.WTF::VectorBuffer.1157" }
%"class.WTF::VectorBuffer.1157" = type { %"class.WTF::VectorBufferBase.1158" }
%"class.WTF::VectorBufferBase.1158" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.1159", %"struct.blink::Timing", %"class.blink::Member.1230", i32, %"class.blink::Member.1242", %"class.WTF::Vector.1004" }
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.1177", i8, %"class.absl::optional.1163", %"class.absl::optional.1225" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1161", %"struct.blink::Timing", %"class.blink::Member.1168", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.1163", %"class.absl::optional.1172", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional", %"class.absl::optional", i8, i8, i8, %"class.absl::optional.1163", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.absl::optional.1172" = type { %"class.absl::optional_internal::optional_data.1173" }
%"class.absl::optional_internal::optional_data.1173" = type { %"class.absl::optional_internal::optional_data_base.1174" }
%"class.absl::optional_internal::optional_data_base.1174" = type { %"class.absl::optional_internal::optional_data_dtor_base.1175" }
%"class.absl::optional_internal::optional_data_dtor_base.1175" = type { i8, %union.anon.1176 }
%union.anon.1176 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1181", %"class.blink::Member.1189", %"class.blink::Member.1213", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.1181" = type { %"class.WTF::Vector.1184" }
%"class.WTF::Vector.1184" = type { %"class.WTF::VectorBuffer.1185" }
%"class.WTF::VectorBuffer.1185" = type { %"class.WTF::VectorBufferBase.1186" }
%"class.WTF::VectorBufferBase.1186" = type { %"class.blink::Member.1187"*, i32, i32 }
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional", %"class.absl::optional.0", %class.scoped_refptr }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i32 }
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::HeapHashMap.1191"* }
%"class.blink::HeapHashMap.1191" = type { %"class.WTF::HashMap.1194" }
%"class.WTF::HashMap.1194" = type { %"class.WTF::HashTable.1195" }
%"class.WTF::HashTable.1195" = type <{ %"struct.WTF::KeyValuePair.1197"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1197" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1198" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.6, %"class.WTF::AtomicString" }
%union.anon.6 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.1202" }
%"class.blink::HeapVector.1202" = type { %"class.WTF::Vector.1205" }
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"class.blink::Member.1208"*, i32, i32 }
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr, i32, [4 x i8] }>
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.1217" }
%"class.blink::HeapVector.1217" = type { %"class.WTF::Vector.1220" }
%"class.WTF::Vector.1220" = type { %"class.WTF::VectorBuffer.1221" }
%"class.WTF::VectorBuffer.1221" = type { %"class.WTF::VectorBufferBase.1222" }
%"class.WTF::VectorBufferBase.1222" = type { %"class.blink::Member.1223"*, i32, i32 }
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1445" }
%"class.blink::MemberBase.1445" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1448", %class.scoped_refptr, double, double, double, double }
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.1163" = type { %"class.absl::optional_internal::optional_data.1164" }
%"class.absl::optional_internal::optional_data.1164" = type { %"class.absl::optional_internal::optional_data_base.1165" }
%"class.absl::optional_internal::optional_data_base.1165" = type { %"class.absl::optional_internal::optional_data_dtor_base.1166" }
%"class.absl::optional_internal::optional_data_dtor_base.1166" = type { i8, %union.anon.1167 }
%union.anon.1167 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1225" = type { %"class.absl::optional_internal::optional_data.1226" }
%"class.absl::optional_internal::optional_data.1226" = type { %"class.absl::optional_internal::optional_data_base.1227" }
%"class.absl::optional_internal::optional_data_base.1227" = type { %"class.absl::optional_internal::optional_data_dtor_base.1228" }
%"class.absl::optional_internal::optional_data_dtor_base.1228" = type { i8, %union.anon.1229 }
%union.anon.1229 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.1163", i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1234", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.1234" = type { %"class.WTF::Vector.1237" }
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239" }
%"class.WTF::VectorBufferBase.1239" = type { %"class.blink::Member.1240"*, i32, i32 }
%"class.blink::Member.1240" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.255", i32, [4 x i8], %"class.blink::HeapHashSet.1244", %"class.blink::HeapHashSet.1252", %"class.std::__1::unique_ptr.1259", %"class.absl::optional.1292" }
%"class.blink::HeapHashSet.1244" = type { %"class.WTF::HashSet.1247" }
%"class.WTF::HashSet.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"class.blink::Member.1250"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional", %"class.absl::optional.1163", %"class.absl::optional.1163", %"class.absl::optional.1225", %"class.absl::optional.1163", i8, [3 x i8], i32, %"class.blink::Member.1370", %"class.blink::Member.1370", %"class.blink::Member.1372", %"class.blink::Member.255", %"class.blink::Member.1242", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1374", %"class.blink::Member.1374", %"class.blink::Member.1374", %"class.std::__1::unique_ptr.1376", i8, [3 x i8], i32, %"class.blink::Member.1382", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1361" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1349" }
%"class.blink::HeapVector.1349" = type { %"class.WTF::Vector.1352" }
%"class.WTF::Vector.1352" = type { %"class.WTF::VectorBuffer.1353" }
%"class.WTF::VectorBuffer.1353" = type { %"class.WTF::VectorBufferBase.1354", [32 x i8] }
%"class.WTF::VectorBufferBase.1354" = type { %"struct.std::__1::pair.1355"*, i32, i32 }
%"struct.std::__1::pair.1355" = type { %"class.WTF::AtomicString", %"class.blink::Member.1356" }
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::HeapVector.1358"* }
%"class.blink::HeapVector.1358" = type opaque
%"class.std::__1::unique_ptr.1361" = type { %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.1363" }
%"struct.std::__1::__compressed_pair_elem.1363" = type { %"class.WTF::Vector.1364"* }
%"class.WTF::Vector.1364" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1368" }
%"class.blink::WeakMember.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional", %"class.absl::optional", double, i8, i32 }
%"class.blink::Member.1382" = type { %"class.blink::MemberBase.1383" }
%"class.blink::MemberBase.1383" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1386", %"class.std::__1::unique_ptr.1387", %"class.blink::Member.1250" }
%"class.blink::ThreadState::PrefinalizerRegistration.1386" = type { i8 }
%"class.std::__1::unique_ptr.1387" = type { %"class.std::__1::__compressed_pair.1388" }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1389" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.1252" = type { %"class.WTF::HashSet.1255" }
%"class.WTF::HashSet.1255" = type { %"class.WTF::HashTable.1256" }
%"class.WTF::HashTable.1256" = type <{ %"class.blink::WeakMember.1258"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1258" = type opaque
%"class.std::__1::unique_ptr.1259" = type { %"class.std::__1::__compressed_pair.1260" }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem.1261" }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.1262 }
%class.scoped_refptr.1262 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.1263", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.1263" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.1264" }
%"class.std::__1::__hash_table.1264" = type <{ %"class.std::__1::unique_ptr.1265", %"class.std::__1::__compressed_pair.1275", %"class.std::__1::__compressed_pair.1280", %"class.std::__1::__compressed_pair.1284", [4 x i8] }>
%"class.std::__1::unique_ptr.1265" = type { %"class.std::__1::__compressed_pair.1266" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267", %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"struct.std::__1::__hash_node_base.1268"** }
%"struct.std::__1::__hash_node_base.1268" = type { %"struct.std::__1::__hash_node_base.1268"* }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.std::__1::__bucket_list_deallocator.1270" }
%"class.std::__1::__bucket_list_deallocator.1270" = type { %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"struct.std::__1::__hash_node_base.1268" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.1292" = type { %"class.absl::optional_internal::optional_data.1293" }
%"class.absl::optional_internal::optional_data.1293" = type { %"class.absl::optional_internal::optional_data_base.1294" }
%"class.absl::optional_internal::optional_data_base.1294" = type { %"class.absl::optional_internal::optional_data_dtor_base.1295" }
%"class.absl::optional_internal::optional_data_dtor_base.1295" = type { i8, %union.anon.1296 }
%union.anon.1296 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.1297" }
%"class.absl::optional.1297" = type { %"class.absl::optional_internal::optional_data.1298" }
%"class.absl::optional_internal::optional_data.1298" = type { %"class.absl::optional_internal::optional_data_base.1299" }
%"class.absl::optional_internal::optional_data_base.1299" = type { %"class.absl::optional_internal::optional_data_dtor_base.1300" }
%"class.absl::optional_internal::optional_data_dtor_base.1300" = type { i8, %union.anon.1301 }
%union.anon.1301 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.1308" = type { %"class.WTF::HashSet.1311" }
%"class.WTF::HashSet.1311" = type { %"class.WTF::HashTable.1312" }
%"class.WTF::HashTable.1312" = type <{ %"class.blink::Member.1314"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1451" }
%"class.blink::MemberBase.1451" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.1303" = type { %"class.WTF::VectorBuffer.1304" }
%"class.WTF::VectorBuffer.1304" = type { %"class.WTF::VectorBufferBase.1305" }
%"class.WTF::VectorBufferBase.1305" = type { i32*, i32, i32 }
%"class.blink::HeapVector.1315" = type { %"class.WTF::Vector.1318" }
%"class.WTF::Vector.1318" = type { %"class.WTF::VectorBuffer.1319" }
%"class.WTF::VectorBuffer.1319" = type { %"class.WTF::VectorBufferBase.1320" }
%"class.WTF::VectorBufferBase.1320" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.1250", %"class.blink::Member.1159", %"struct.blink::Timing", %"class.blink::Member.1230", i32, %"class.blink::Member.1242", %"class.WTF::Vector.1004" }
%"class.blink::HeapVector.1322" = type { %"class.WTF::Vector.1325" }
%"class.WTF::Vector.1325" = type { %"class.WTF::VectorBuffer.1326" }
%"class.WTF::VectorBuffer.1326" = type { %"class.WTF::VectorBufferBase.1327" }
%"class.WTF::VectorBufferBase.1327" = type { %"class.blink::Member.1250"*, i32, i32 }
%"class.blink::HeapHashMap.1329" = type { %"class.WTF::HashMap.1332" }
%"class.WTF::HashMap.1332" = type { %"class.WTF::HashTable.1333" }
%"class.WTF::HashTable.1333" = type <{ %"struct.WTF::KeyValuePair.1335"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1335" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1462" }
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.704, %class.scoped_refptr.704, %class.scoped_refptr.704, double, %"class.blink::Member.1159" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1336" = type { %"class.WTF::HashMap.1339" }
%"class.WTF::HashMap.1339" = type { %"class.WTF::HashTable.1340" }
%"class.WTF::HashTable.1340" = type <{ %"struct.WTF::KeyValuePair.1342"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1342" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1452" }
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::HeapVector.1454"* }
%"class.blink::HeapVector.1454" = type { %"class.WTF::Vector.1457" }
%"class.WTF::Vector.1457" = type { %"class.WTF::VectorBuffer.1458" }
%"class.WTF::VectorBuffer.1458" = type { %"class.WTF::VectorBufferBase.1459", [8 x i8] }
%"class.WTF::VectorBufferBase.1459" = type { %"class.blink::Member.1448"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::LinearTimingFunction" = type { %"class.blink::TimingFunction" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"class.blink::TransitionKeyframe" = type { %"class.blink::Keyframe", %"class.blink::PropertyHandle", %"class.std::__1::unique_ptr", %"class.blink::Member" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TypedInterpolationValue"* }
%"class.blink::TypedInterpolationValue" = type { %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.14", %class.scoped_refptr.18 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.18 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CompositorKeyframeValue"* }
%"class.blink::CompositorKeyframeValue" = type { i32 (...)** }
%"class.blink::V8ObjectBuilder" = type { %"class.blink::ScriptState"*, %"class.v8::Local" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.28, %"class.blink::Member.218", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.28 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.220" }
%"class.blink::Persistent.220" = type { %"class.blink::PersistentBase.221" }
%"class.blink::PersistentBase.221" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.1152, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.704, %class.scoped_refptr.704, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.1343", %"class.WTF::HashSet.1343", float, %"class.blink::PseudoElement"* }
%"class.blink::StyleRequest" = type { %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, i32, i8, i32, i32, %"class.blink::CustomScrollbar"*, %"class.WTF::AtomicString" }
%"class.blink::CustomScrollbar" = type <{ %"class.blink::Scrollbar", %"class.WTF::HashMap.1404", i8, [7 x i8] }>
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1399", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1401", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.272" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1401" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1402", { i64, i64 } }
%"class.blink::WeakMember.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::Scrollbar"* }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.WTF::HashMap.1404" = type { %"class.WTF::HashTable.1405" }
%"class.WTF::HashTable.1405" = type <{ %"struct.WTF::KeyValuePair.1408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1408" = type { i32, %"class.blink::LayoutCustomScrollbarPart"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::CSSInterpolationTypesMap" = type <{ %"class.blink::InterpolationTypesMap", %"class.blink::PropertyRegistry"*, i8, [7 x i8] }>
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.blink::CSSInterpolationEnvironment" = type { %"class.blink::InterpolationEnvironment", %"class.blink::StyleResolverState"*, %"class.blink::ComputedStyle"*, %"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::StyleCascade" = type opaque
%"class.blink::CascadeResolver" = type opaque
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.255", %class.scoped_refptr.704, %"class.blink::SelectorFilter", %"class.blink::Member.1435", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1411" }
%"class.blink::HeapHashMap.1411" = type { %"class.WTF::HashMap.1414" }
%"class.WTF::HashMap.1414" = type { %"class.WTF::HashTable.1415" }
%"class.WTF::HashTable.1415" = type <{ %"struct.WTF::KeyValuePair.1417"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1417" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1418", %"class.std::__1::unique_ptr.1429" }
%"class.blink::HeapVector.1418" = type { %"class.WTF::Vector.1421" }
%"class.WTF::Vector.1421" = type { %"class.WTF::VectorBuffer.1422" }
%"class.WTF::VectorBuffer.1422" = type { %"class.WTF::VectorBufferBase.1423" }
%"class.WTF::VectorBufferBase.1423" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.272", %"class.WTF::Vector.1424" }
%"class.WTF::Vector.1424" = type { %"class.WTF::VectorBuffer.1425" }
%"class.WTF::VectorBuffer.1425" = type { %"class.WTF::VectorBufferBase.1305", [16 x i8] }
%"class.std::__1::unique_ptr.1429" = type { %"class.std::__1::__compressed_pair.1430" }
%"class.std::__1::__compressed_pair.1430" = type { %"struct.std::__1::__compressed_pair_elem.1431" }
%"struct.std::__1::__compressed_pair_elem.1431" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1490", %"class.blink::Member.1492", %"class.blink::Member.1494", %"class.blink::Member.1513", %"class.blink::Member.1515" }
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.704 }
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1498", %"class.blink::HeapHashSet.1507" }
%"class.blink::HeapVector.1498" = type { %"class.WTF::Vector.1501" }
%"class.WTF::Vector.1501" = type { %"class.WTF::VectorBuffer.1502" }
%"class.WTF::VectorBuffer.1502" = type { %"class.WTF::VectorBufferBase.1503" }
%"class.WTF::VectorBufferBase.1503" = type { %"class.blink::Member.1504"*, i32, i32 }
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1507" = type { %"class.WTF::HashSet.1510" }
%"class.WTF::HashSet.1510" = type { %"class.WTF::HashTable.1511" }
%"class.WTF::HashTable.1511" = type <{ %"class.blink::Member.1504"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::HeapHashSet.1517"* }
%"class.blink::HeapHashSet.1517" = type opaque
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::String" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::TransitionKeyframe::PropertySpecificKeyframe" = type { %"class.blink::Keyframe::PropertySpecificKeyframe.base", %"class.std::__1::unique_ptr", %"class.blink::Member" }
%"class.blink::Keyframe::PropertySpecificKeyframe.base" = type <{ i32 (...)**, double, %class.scoped_refptr, i32 }>
%"class.blink::TransitionInterpolation" = type { %"class.blink::Interpolation", %"class.blink::PropertyHandle", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue", %"struct.blink::PairwiseInterpolationValue", %"class.blink::Member", %"class.blink::Member", double, i32, %"class.std::__1::unique_ptr.14" }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14", %class.scoped_refptr.18 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.1569", %"class.WTF::HashMap.1569", %"class.WTF::HashMap.1574", %"class.std::__1::unique_ptr.1579", %"class.std::__1::unique_ptr.1626", %"class.blink::Persistent.220", i8, i8, i8, %"class.WTF::Vector.358", %"class.std::__1::unique_ptr.1632", %"class.blink::Persistent.1638", %"class.blink::Persistent.1642", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.1551", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1557", %"class.std::__1::unique_ptr.1563", i32, i32 }
%"class.std::__1::unique_ptr.1551" = type { %"class.std::__1::__compressed_pair.1552" }
%"class.std::__1::__compressed_pair.1552" = type { %"struct.std::__1::__compressed_pair_elem.1553" }
%"struct.std::__1::__compressed_pair_elem.1553" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.1557" = type { %"class.std::__1::__compressed_pair.1558" }
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.1563" = type { %"class.std::__1::__compressed_pair.1564" }
%"class.std::__1::__compressed_pair.1564" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"struct.std::__1::__compressed_pair_elem.1565" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.1569" = type { %"class.WTF::HashTable.1570" }
%"class.WTF::HashTable.1570" = type <{ %"struct.WTF::KeyValuePair.1573"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1573" = type opaque
%"class.WTF::HashMap.1574" = type { %"class.WTF::HashTable.1575" }
%"class.WTF::HashTable.1575" = type <{ %"struct.WTF::KeyValuePair.1578"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1578" = type opaque
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.1587", %class.scoped_refptr.8 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1582", i8* }
%"class.WTF::HashMap.1582" = type { %"class.WTF::HashTable.1583" }
%"class.WTF::HashTable.1583" = type <{ %"struct.WTF::KeyValuePair.1586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1586" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.1587" = type { %"class.v8::PersistentValueMapBase.1588" }
%"class.v8::PersistentValueMapBase.1588" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1589", i8* }
%"class.WTF::HashMap.1589" = type { %"class.WTF::HashTable.1590" }
%"class.WTF::HashTable.1590" = type <{ %"struct.WTF::KeyValuePair.1593"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1593" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1594", %"class.WTF::String", %"class.std::__1::unique_ptr.1596" }
%"class.WTF::RefCounted.1594" = type { %"class.base::RefCounted.1595" }
%"class.base::RefCounted.1595" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1596" = type { %"class.std::__1::__compressed_pair.1597" }
%"class.std::__1::__compressed_pair.1597" = type { %"struct.std::__1::__compressed_pair_elem.1598" }
%"struct.std::__1::__compressed_pair_elem.1598" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1599", %"class.std::__1::unique_ptr.1610", %"class.WTF::Vector.1616", i8, i32 }
%"class.std::__1::unique_ptr.1599" = type { %"class.std::__1::__compressed_pair.1600" }
%"class.std::__1::__compressed_pair.1600" = type { %"struct.std::__1::__compressed_pair_elem.1601" }
%"struct.std::__1::__compressed_pair_elem.1601" = type { %"class.WTF::Vector.1602"* }
%"class.WTF::Vector.1602" = type { %"class.WTF::VectorBuffer.1603" }
%"class.WTF::VectorBuffer.1603" = type { %"class.WTF::VectorBufferBase.1604" }
%"class.WTF::VectorBufferBase.1604" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1616" = type { %"class.WTF::VectorBuffer.1617" }
%"class.WTF::VectorBuffer.1617" = type { %"class.WTF::VectorBufferBase.1604", [32 x i8] }
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.std::__1::unique_ptr.1632" = type { %"class.std::__1::__compressed_pair.1633" }
%"class.std::__1::__compressed_pair.1633" = type { %"struct.std::__1::__compressed_pair_elem.1634" }
%"struct.std::__1::__compressed_pair_elem.1634" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.1638" = type { %"class.blink::PersistentBase.1639" }
%"class.blink::PersistentBase.1639" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.1642" = type { %"class.blink::PersistentBase.1643" }
%"class.blink::PersistentBase.1643" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.1646", i64 }
%"class.blink::HeapVector.1646" = type { %"class.WTF::Vector.1649" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.std::__1::pair.1652"*, i32, i32 }
%"struct.std::__1::pair.1652" = type { %"class.blink::UntracedMember", %"class.blink::Member.1654" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TickClock" = type opaque

$_ZN5blink24InterpolationEnvironmentD2Ev = comdat any

$_ZN5blink18TransitionKeyframeD2Ev = comdat any

$_ZN5blink18TransitionKeyframeD0Ev = comdat any

$_ZNK5blink18TransitionKeyframe5CloneEv = comdat any

$_ZNK5blink8Keyframe16IsStringKeyframeEv = comdat any

$_ZNK5blink18TransitionKeyframe20IsTransitionKeyframeEv = comdat any

$_ZN5blink18TransitionKeyframe24PropertySpecificKeyframeD2Ev = comdat any

$_ZN5blink18TransitionKeyframe24PropertySpecificKeyframeD0Ev = comdat any

$_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe9IsNeutralEv = comdat any

$_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe8IsRevertEv = comdat any

$_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe15CloneWithOffsetEd = comdat any

$_ZNK5blink8Keyframe24PropertySpecificKeyframe31PopulateCompositorKeyframeValueERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS8_ = comdat any

$_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe26GetCompositorKeyframeValueEv = comdat any

$_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv = comdat any

$_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv = comdat any

$_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe36IsTransitionPropertySpecificKeyframeEv = comdat any

$_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe15NeutralKeyframeEd13scoped_refptrINS_14TimingFunctionEE = comdat any

$_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv = comdat any

$_ZNK5blink24InterpolationEnvironment5IsSVGEv = comdat any

$_ZN5blink27CSSInterpolationEnvironmentD0Ev = comdat any

$_ZN5blink18TransitionKeyframeC2ERKS0_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv = comdat any

$_ZN5blink20LinearTimingFunction6SharedEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_18TransitionKeyframe24PropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEERKNS_11EffectModel18CompositeOperationENSt3__110unique_ptrINS_23TypedInterpolationValueENSF_14default_deleteISH_EEEERKNS_6MemberINS_23CompositorKeyframeValueEEEEEEPS2_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8Keyframe24PropertySpecificKeyframeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8Keyframe24PropertySpecificKeyframeEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_ = comdat any

$_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink23TransitionInterpolationC2ERKNS_14PropertyHandleERKNS_17InterpolationTypeEONS_18InterpolationValueES8_PNS_23CompositorKeyframeValueESA_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13InterpolationEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13InterpolationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13InterpolationEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13InterpolationEE7GetNameEPKv = comdat any

$_ZTVN5blink27CSSInterpolationEnvironmentE = comdat any

$_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13InterpolationEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13InterpolationEE5IndexEvE13gc_info_index = comdat any

@__const._ZNK5blink18TransitionKeyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE.state = private unnamed_addr constant <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.1152, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.704, %class.scoped_refptr.704, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, { %"class.blink::Element"*, %"class.WTF::HashSet.1343", %"class.WTF::HashSet.1343", float, [4 x i8], %"class.blink::PseudoElement"* }, i32, i8, i8, [2 x i8] }> <{ %"class.blink::ElementResolveContext" <{ %"class.blink::Element"* inttoptr (i64 -6148914691236517206 to %"class.blink::Element"*), %"class.blink::ContainerNode"* inttoptr (i64 -6148914691236517206 to %"class.blink::ContainerNode"*), %"class.blink::ContainerNode"* inttoptr (i64 -6148914691236517206 to %"class.blink::ContainerNode"*), %class.scoped_refptr.704 { %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.blink::Document"* inttoptr (i64 -6148914691236517206 to %"class.blink::Document"*), %class.scoped_refptr.1152 { %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*) }, %"class.blink::CSSToLengthConversionData" <{ %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*), %"class.blink::CSSToLengthConversionData::FontSizes" <{ float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.blink::Font"* inttoptr (i64 -6148914691236517206 to %"class.blink::Font"*), float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.blink::CSSToLengthConversionData::ViewportSize" { %"class.blink::DoubleSize" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, %class.scoped_refptr.704 { %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*) }, %class.scoped_refptr.704 { %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*) }, %"class.blink::CSSAnimationUpdate" { %"class.blink::HeapVector.1153" { %"class.WTF::Vector.1156" { %"class.WTF::VectorBuffer.1157" { %"class.WTF::VectorBufferBase.1158" { %"class.blink::NewCSSAnimation"* inttoptr (i64 -6148914691236517206 to %"class.blink::NewCSSAnimation"*), i32 -1431655766, i32 -1431655766 } } } }, %"class.WTF::Vector.1303" { %"class.WTF::VectorBuffer.1304" { %"class.WTF::VectorBufferBase.1305" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766 } } }, %"class.blink::HeapHashSet.1308" { %"class.WTF::HashSet.1311" { %"class.WTF::HashTable.1312" <{ %"class.blink::Member.1314"* inttoptr (i64 -6148914691236517206 to %"class.blink::Member.1314"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.WTF::Vector.1303" { %"class.WTF::VectorBuffer.1304" { %"class.WTF::VectorBufferBase.1305" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766 } } }, %"class.blink::HeapVector.1315" { %"class.WTF::Vector.1318" { %"class.WTF::VectorBuffer.1319" { %"class.WTF::VectorBufferBase.1320" { %"class.blink::UpdatedCSSAnimation"* inttoptr (i64 -6148914691236517206 to %"class.blink::UpdatedCSSAnimation"*), i32 -1431655766, i32 -1431655766 } } } }, %"class.blink::HeapVector.1322" { %"class.WTF::Vector.1325" { %"class.WTF::VectorBuffer.1326" { %"class.WTF::VectorBufferBase.1327" { %"class.blink::Member.1250"* inttoptr (i64 -6148914691236517206 to %"class.blink::Member.1250"*), i32 -1431655766, i32 -1431655766 } } } }, %"class.blink::HeapHashMap.1329" { %"class.WTF::HashMap.1332" { %"class.WTF::HashTable.1333" <{ %"struct.WTF::KeyValuePair.1335"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1335"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.WTF::HashSet" { %"class.WTF::HashTable" <{ %"class.blink::PropertyHandle"* inttoptr (i64 -6148914691236517206 to %"class.blink::PropertyHandle"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.WTF::HashSet" { %"class.WTF::HashTable" <{ %"class.blink::PropertyHandle"* inttoptr (i64 -6148914691236517206 to %"class.blink::PropertyHandle"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.blink::HeapHashMap.1336" { %"class.WTF::HashMap.1339" { %"class.WTF::HashTable.1340" <{ %"struct.WTF::KeyValuePair.1342"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1342"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.blink::HeapHashMap.1336" { %"class.WTF::HashMap.1339" { %"class.WTF::HashTable.1340" <{ %"struct.WTF::KeyValuePair.1342"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1342"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.blink::HeapHashMap.1336" { %"class.WTF::HashMap.1339" { %"class.WTF::HashTable.1340" <{ %"struct.WTF::KeyValuePair.1342"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1342"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.blink::HeapHashMap.1336" { %"class.WTF::HashMap.1339" { %"class.WTF::HashTable.1340" <{ %"struct.WTF::KeyValuePair.1342"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1342"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::FontBuilder" <{ %"class.blink::Document"* inttoptr (i64 -6148914691236517206 to %"class.blink::Document"*), %"class.blink::TreeScope"* inttoptr (i64 -6148914691236517206 to %"class.blink::TreeScope"*), %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.8 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.712 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.713 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.721 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.731 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.743 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.blink::PseudoElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::PseudoElement"*), { %"class.blink::Element"*, %"class.WTF::HashSet.1343", %"class.WTF::HashSet.1343", float, [4 x i8], %"class.blink::PseudoElement"* } { %"class.blink::Element"* inttoptr (i64 -6148914691236517206 to %"class.blink::Element"*), %"class.WTF::HashSet.1343" { %"class.WTF::HashTable.1344" <{ i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.WTF::HashSet.1343" { %"class.WTF::HashTable.1344" <{ i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::PseudoElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::PseudoElement"*) }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, align 8
@_ZTVN5blink18TransitionKeyframeE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TransitionKeyframe"*)* @_ZN5blink18TransitionKeyframeD2Ev to i8*), i8* bitcast (void (%"class.blink::TransitionKeyframe"*)* @_ZN5blink18TransitionKeyframeD0Ev to i8*), i8* bitcast (void (%"class.WTF::HashSet"*, %"class.blink::TransitionKeyframe"*)* @_ZNK5blink18TransitionKeyframe10PropertiesEv to i8*), i8* bitcast (%"class.blink::Keyframe"* (%"class.blink::TransitionKeyframe"*)* @_ZNK5blink18TransitionKeyframe5CloneEv to i8*), i8* bitcast (void (%"class.blink::TransitionKeyframe"*, %"class.blink::V8ObjectBuilder"*, %"class.blink::Element"*)* @_ZNK5blink18TransitionKeyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::Keyframe"*)* @_ZNK5blink8Keyframe16IsStringKeyframeEv to i8*), i8* bitcast (i1 (%"class.blink::TransitionKeyframe"*)* @_ZNK5blink18TransitionKeyframe20IsTransitionKeyframeEv to i8*), i8* bitcast (void (%"class.blink::TransitionKeyframe"*, %"class.blink::Visitor"*)* @_ZNK5blink18TransitionKeyframe5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::TransitionKeyframe"*, %"class.blink::PropertyHandle"*, i32, double)* @_ZNK5blink18TransitionKeyframe30CreatePropertySpecificKeyframeERKNS_14PropertyHandleENS_11EffectModel18CompositeOperationEd to i8*)] }, align 8
@_ZTVN5blink18TransitionKeyframe24PropertySpecificKeyframeE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*)* @_ZN5blink18TransitionKeyframe24PropertySpecificKeyframeD2Ev to i8*), i8* bitcast (void (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*)* @_ZN5blink18TransitionKeyframe24PropertySpecificKeyframeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*)* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe9IsNeutralEv to i8*), i8* bitcast (i1 (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*)* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe8IsRevertEv to i8*), i8* bitcast (%"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*, double)* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe15CloneWithOffsetEd to i8*), i8* bitcast (i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe31PopulateCompositorKeyframeValueERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS8_ to i8*), i8* bitcast (%"class.blink::CompositorKeyframeValue"* (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*)* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe26GetCompositorKeyframeValueEv to i8*), i8* bitcast (i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv to i8*), i8* bitcast (i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv to i8*), i8* bitcast (i1 (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*)* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe36IsTransitionPropertySpecificKeyframeEv to i8*), i8* bitcast (%"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe15NeutralKeyframeEd13scoped_refptrINS_14TimingFunctionEE to i8*), i8* bitcast (%"class.blink::Interpolation"* (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe19CreateInterpolationERKNS_14PropertyHandleERKNS_8Keyframe24PropertySpecificKeyframeE to i8*), i8* bitcast (void (%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink27CSSInterpolationEnvironmentE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::CSSInterpolationEnvironment"*)* @_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolationEnvironment"*)* @_ZNK5blink24InterpolationEnvironment5IsSVGEv to i8*), i8* bitcast (void (%"class.blink::InterpolationEnvironment"*)* @_ZN5blink24InterpolationEnvironmentD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationEnvironment"*)* @_ZN5blink27CSSInterpolationEnvironmentD0Ev to i8*)] }, comdat, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink8KeyframeE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8KeyframeEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Keyframe]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden local_unnamed_addr global %"class.blink::LinearTimingFunction"* null, comdat, align 8
@_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden global i64 0, comdat, align 8
@_ZTVN5blink20LinearTimingFunctionE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink8Keyframe24PropertySpecificKeyframeE = external unnamed_addr constant { [15 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8Keyframe24PropertySpecificKeyframeEEEPKcv = private unnamed_addr constant [89 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Keyframe::PropertySpecificKeyframe]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8Keyframe24PropertySpecificKeyframeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8Keyframe24PropertySpecificKeyframeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PropertyHandle]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13InterpolationEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Interpolation]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13InterpolationEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13InterpolationEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13InterpolationEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13InterpolationEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13InterpolationEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink23TransitionInterpolationE = external unnamed_addr constant { [10 x i8*] }, align 8
@.str.7 = private unnamed_addr constant [75 x i8] c"../../third_party/blink/renderer/core/animation/transition_interpolation.h\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"start_\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"merge_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TransitionKeyframe18SetCompositorValueEPNS_23CompositorKeyframeValueE(%"class.blink::TransitionKeyframe"* nocapture, %"class.blink::CompositorKeyframeValue"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 3
  %4 = ptrtoint %"class.blink::CompositorKeyframeValue"* %1 to i64
  %5 = bitcast %"class.blink::Member"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CompositorKeyframeValue"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18TransitionKeyframe10PropertiesEv(%"class.WTF::HashSet"* noalias sret, %"class.blink::TransitionKeyframe"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.WTF::HashSet"* %0 to i8*
  %4 = bitcast %"class.WTF::HashSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #11
  %5 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0
  %7 = tail call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %6, %"class.blink::PropertyHandle"* dereferenceable(24) %5, %"class.blink::PropertyHandle"* dereferenceable(24) %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18TransitionKeyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE(%"class.blink::TransitionKeyframe"*, %"class.blink::V8ObjectBuilder"* dereferenceable(16), %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::StyleResolverState", align 8
  %6 = alloca %"class.blink::StyleRequest", align 8
  %7 = alloca %"class.blink::CSSInterpolationTypesMap", align 8
  %8 = alloca %"class.blink::CSSInterpolationEnvironment", align 8
  %9 = alloca %"class.blink::PropertyHandle", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0
  tail call void @_ZNK5blink8Keyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE(%"class.blink::Keyframe"* %11, %"class.blink::V8ObjectBuilder"* dereferenceable(16) %1, %"class.blink::Element"* %2) #11
  %12 = icmp eq %"class.blink::Element"* %2, null
  br i1 %12, label %216, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = bitcast %"class.blink::StyleResolverState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 600, i8* nonnull %18) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 bitcast (<{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.1152, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.704, %class.scoped_refptr.704, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, { %"class.blink::Element"*, %"class.WTF::HashSet.1343", %"class.WTF::HashSet.1343", float, [4 x i8], %"class.blink::PseudoElement"* }, i32, i8, i8, [2 x i8] }>* @__const._ZNK5blink18TransitionKeyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE.state to i8*), i64 600, i1 false)
  %19 = bitcast %"class.blink::StyleRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #11
  %20 = bitcast %"class.blink::StyleRequest"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 48, i1 false)
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %6, i64 0, i32 7, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #11
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #11
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %13, %26, %41
  call void @_ZN5blink18StyleResolverStateC1ERNS_8DocumentERNS_7ElementERKNS_12StyleRequestE(%"class.blink::StyleResolverState"* nonnull %5, %"class.blink::Document"* dereferenceable(2848) %17, %"class.blink::Element"* nonnull dereferenceable(104) %2, %"class.blink::StyleRequest"* nonnull dereferenceable(48) %6) #11
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #11
  br label %59

59:                                               ; preds = %43, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #11
  %60 = call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %17) #11
  %61 = call %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver19CreateComputedStyleEv(%"class.blink::StyleResolver"* %60) #11
  call void @_ZN5blink18StyleResolverState8SetStyleE13scoped_refptrINS_13ComputedStyleEE(%"class.blink::StyleResolverState"* nonnull %5, %"class.blink::ComputedStyle"* %61) #11
  %62 = bitcast %"class.blink::CSSInterpolationTypesMap"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 144, i32 0, i32 0
  %64 = bitcast %"class.blink::CSSInterpolationTypesMap"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  %65 = load %"class.blink::PropertyRegistry"*, %"class.blink::PropertyRegistry"** %63, align 8
  call void @_ZN5blink24CSSInterpolationTypesMapC1EPKNS_16PropertyRegistryERKNS_8DocumentE(%"class.blink::CSSInterpolationTypesMap"* nonnull %7, %"class.blink::PropertyRegistry"* %65, %"class.blink::Document"* dereferenceable(2848) %17) #11
  %66 = bitcast %"class.blink::CSSInterpolationEnvironment"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %8, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %8, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %8, i64 0, i32 1
  %70 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %8, i64 0, i32 2
  %71 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %8, i64 0, i32 3
  %72 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %7, i64 0, i32 0
  store %"class.blink::InterpolationTypesMap"* %72, %"class.blink::InterpolationTypesMap"** %68, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27CSSInterpolationEnvironmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  store %"class.blink::StyleResolverState"* %5, %"class.blink::StyleResolverState"** %69, align 8
  %73 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %5, i64 0, i32 2, i32 0
  %74 = bitcast %"class.blink::ComputedStyle"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::ComputedStyle"** %70 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %78 = bitcast %"class.blink::StyleCascade"** %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false)
  %79 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %77, align 8
  %80 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %79, i64 0, i32 0
  %81 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %79, i64 0, i32 1, i32 1, i32 0
  %85 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %8, i64 0, i32 0
  %87 = bitcast %"class.blink::InterpolationType"* %81 to void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)***
  %88 = load void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)**, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)** %88, i64 7
  %90 = load void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)** %89, align 8
  call void %90(%"class.blink::InterpolationType"* %81, %"class.blink::InterpolableValue"* dereferenceable(8) %83, %"class.blink::NonInterpolableValue"* %85, %"class.blink::InterpolationEnvironment"* nonnull dereferenceable(16) %86) #11
  %91 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %73, align 8
  %92 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 1
  %93 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %96, label %102, label %98

98:                                               ; preds = %59
  %99 = bitcast %"class.blink::NodeData"** %97 to %"class.blink::NodeRareData"**
  %100 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %100, i64 0, i32 1, i32 0, i32 0
  br label %104

102:                                              ; preds = %59
  %103 = bitcast %"class.blink::NodeData"** %97 to %"class.blink::NodeRenderingData"**
  br label %104

104:                                              ; preds = %98, %102
  %105 = phi %"class.blink::NodeRenderingData"** [ %101, %98 ], [ %103, %102 ]
  %106 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %106, i64 0, i32 1
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %107, align 8
  %109 = call %"class.blink::CSSValue"* @_ZN5blink14AnimationUtils30KeyframeValueFromComputedStyleERKNS_14PropertyHandleERKNS_13ComputedStyleERKNS_8DocumentEPKNS_12LayoutObjectE(%"class.blink::PropertyHandle"* dereferenceable(24) %92, %"class.blink::ComputedStyle"* dereferenceable(104) %91, %"class.blink::Document"* dereferenceable(2848) %17, %"class.blink::LayoutObject"* %108) #11
  %110 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %109) #11
  %111 = bitcast %"class.blink::PropertyHandle"* %9 to i8*
  %112 = bitcast %"class.blink::PropertyHandle"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %111, i8* align 8 %112, i64 16, i1 false) #11
  %113 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %115, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %116, label %134, label %117

117:                                              ; preds = %104
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %134

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #11
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !2

131:                                              ; preds = %122
  call void @llvm.trap() #11
  unreachable

132:                                              ; preds = %122
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %123, align 4
  br label %134

134:                                              ; preds = %104, %117, %132
  %135 = call %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %9) #11
  %136 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #11
  %137 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %139, align 8
  %140 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %141 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %140, i64* %141, align 8
  br label %149

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 1
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %148 = bitcast i8** %147 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %148, align 8
  br label %149

149:                                              ; preds = %138, %142
  %150 = phi i32 [ %145, %142 ], [ 0, %138 ]
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %150, i32* %151, align 8
  %152 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %1, i64 0, i32 0
  %153 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %153, i64 0, i32 1, i32 0, i32 0, i32 0
  %155 = load %"class.v8::Context"*, %"class.v8::Context"** %154, align 8
  %156 = icmp eq %"class.v8::Context"* %155, null
  br i1 %156, label %164, label %157

157:                                              ; preds = %149
  %158 = bitcast %"class.blink::ScriptState"* %153 to %"class.v8::internal::Isolate"**
  %159 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %158, align 8
  %160 = bitcast %"class.v8::Context"* %155 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %159, i64 %161) #11
  %163 = bitcast i64* %162 to %"class.v8::Context"*
  br label %164

164:                                              ; preds = %157, %149
  %165 = phi %"class.v8::Context"* [ %163, %157 ], [ null, %149 ]
  %166 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %165) #11
  %167 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %152, align 8
  %168 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %167, i64 0, i32 0
  %169 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %168, align 8
  %170 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #11
  %171 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %171, label %172, label %176

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %173, align 8
  %174 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %175 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %174, i64* %175, align 8
  br label %183

176:                                              ; preds = %164
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %177, align 8
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 1
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %182 = bitcast i8** %181 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %182, align 8
  br label %183

183:                                              ; preds = %172, %176
  %184 = phi i32 [ %179, %176 ], [ 0, %172 ]
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %184, i32* %185, align 8
  %186 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %169, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  %187 = bitcast %"class.v8::String"* %186 to %"class.v8::Value"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #11
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.v8::Value"* %187) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #11
  br i1 %137, label %201, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #11
  br label %201

201:                                              ; preds = %183, %197, %200
  br i1 %171, label %215, label %202

202:                                              ; preds = %201
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  br label %215

215:                                              ; preds = %201, %211, %214
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #11
  call void @_ZN5blink18StyleResolverStateD1Ev(%"class.blink::StyleResolverState"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 600, i8* nonnull %18) #11
  br label %216

216:                                              ; preds = %3, %215
  ret void
}

declare void @_ZNK5blink8Keyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE(%"class.blink::Keyframe"*, %"class.blink::V8ObjectBuilder"* dereferenceable(16), %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink18StyleResolverStateC1ERNS_8DocumentERNS_7ElementERKNS_12StyleRequestE(%"class.blink::StyleResolverState"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::Element"* dereferenceable(104), %"class.blink::StyleRequest"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink18StyleResolverState8SetStyleE13scoped_refptrINS_13ComputedStyleEE(%"class.blink::StyleResolverState"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver19CreateComputedStyleEv(%"class.blink::StyleResolver"*) local_unnamed_addr #1

declare void @_ZN5blink24CSSInterpolationTypesMapC1EPKNS_16PropertyRegistryERKNS_8DocumentE(%"class.blink::CSSInterpolationTypesMap"*, %"class.blink::PropertyRegistry"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink14AnimationUtils30KeyframeValueFromComputedStyleERKNS_14PropertyHandleERKNS_13ComputedStyleERKNS_8DocumentEPKNS_12LayoutObjectE(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Document"* dereferenceable(2848), %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24InterpolationEnvironmentD2Ev(%"class.blink::InterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink18StyleResolverStateD1Ev(%"class.blink::StyleResolverState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18TransitionKeyframe5TraceEPNS_7VisitorE(%"class.blink::TransitionKeyframe"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Keyframe::PropertySpecificKeyframe"* @_ZNK5blink18TransitionKeyframe30CreatePropertySpecificKeyframeERKNS_14PropertyHandleENS_11EffectModel18CompositeOperationEd(%"class.blink::TransitionKeyframe"* nocapture readonly, %"class.blink::PropertyHandle"* nocapture readnone dereferenceable(24), i32, double) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca i32, align 4
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = select i1 %9, i32* %6, i32* %10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %4
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = load double, double* %18, align 8
  %20 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  %21 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8, !noalias !4
  %26 = icmp eq %"class.blink::InterpolableValue"* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = bitcast %"class.blink::InterpolableValue"* %25 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %29 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %28, align 8, !noalias !4
  %30 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %29, i64 16
  %31 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %30, align 8, !noalias !4
  %32 = tail call %"class.blink::InterpolableValue"* %31(%"class.blink::InterpolableValue"* nonnull %25) #11, !noalias !4
  %33 = ptrtoint %"class.blink::InterpolableValue"* %32 to i64
  br label %34

34:                                               ; preds = %27, %17
  %35 = phi i64 [ %33, %27 ], [ 0, %17 ]
  %36 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %23, i64 0, i32 1, i32 1, i32 0
  %37 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %36, align 8, !noalias !4
  %38 = icmp eq %"class.blink::NonInterpolableValue"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %37, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #11, !noalias !4
  br label %41

41:                                               ; preds = %34, %39
  %42 = ptrtoint %"class.blink::NonInterpolableValue"* %37 to i64
  %43 = bitcast %"class.blink::TypedInterpolationValue"* %23 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = tail call noalias i8* @malloc(i64 24) #11
  %46 = bitcast i8* %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i64*
  store i64 %35, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %42, i64* %50, align 8
  %51 = ptrtoint i8* %45 to i64
  %52 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 3
  %53 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 48) #11
  %54 = icmp eq %"class.blink::TimingFunction"* %21, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %41
  %56 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #11
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  br label %62

62:                                               ; preds = %59, %55, %41
  %63 = bitcast %"class.blink::Member"* %52 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast i8* %53 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %65, double %19, %"class.blink::TimingFunction"* %21, i32 %12) #11
  %66 = bitcast i8* %53 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink18TransitionKeyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %53, i64 32
  %68 = bitcast i8* %67 to i64*
  store i64 %51, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %53, i64 40
  %70 = bitcast i8* %69 to i64*
  store i64 %64, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %53, i64 -4
  %72 = bitcast i8* %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = or i16 %73, 1
  store atomic i16 %74, i16* %72 release, align 2
  ret %"class.blink::Keyframe::PropertySpecificKeyframe"* %65
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Interpolation"* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe19CreateInterpolationERKNS_14PropertyHandleERKNS_8Keyframe24PropertySpecificKeyframeE(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* nocapture readonly, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::Keyframe::PropertySpecificKeyframe"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::InterpolationValue", align 8
  %5 = alloca %"struct.blink::InterpolationValue", align 8
  %6 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %7, i64 0, i32 0
  %9 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %8, align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8, !noalias !7
  %13 = icmp eq %"class.blink::InterpolableValue"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::InterpolableValue"* %12 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %16 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %15, align 8, !noalias !7
  %17 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %16, i64 16
  %18 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %17, align 8, !noalias !7
  %19 = tail call %"class.blink::InterpolableValue"* %18(%"class.blink::InterpolableValue"* nonnull %12) #11, !noalias !7
  %20 = ptrtoint %"class.blink::InterpolableValue"* %19 to i64
  br label %21

21:                                               ; preds = %14, %3
  %22 = phi i64 [ %20, %14 ], [ 0, %3 ]
  %23 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %7, i64 0, i32 1, i32 1, i32 0
  %24 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %23, align 8, !noalias !7
  %25 = icmp eq %"class.blink::NonInterpolableValue"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %24, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #11, !noalias !7
  br label %28

28:                                               ; preds = %21, %26
  %29 = ptrtoint %"class.blink::NonInterpolableValue"* %24 to i64
  %30 = bitcast %"struct.blink::InterpolationValue"* %4 to i64*
  store i64 %22, i64* %30, align 8, !alias.scope !7
  %31 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 1
  %32 = bitcast %class.scoped_refptr.18* %31 to i64*
  store i64 %29, i64* %32, align 8, !alias.scope !7
  %33 = bitcast %"struct.blink::InterpolationValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %2, i64 1
  %35 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %34 to %"class.blink::TypedInterpolationValue"**
  %36 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %37, align 8, !noalias !10
  %39 = icmp eq %"class.blink::InterpolableValue"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %28
  %41 = bitcast %"class.blink::InterpolableValue"* %38 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %42 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %41, align 8, !noalias !10
  %43 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %42, i64 16
  %44 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %43, align 8, !noalias !10
  %45 = tail call %"class.blink::InterpolableValue"* %44(%"class.blink::InterpolableValue"* nonnull %38) #11, !noalias !10
  %46 = ptrtoint %"class.blink::InterpolableValue"* %45 to i64
  br label %47

47:                                               ; preds = %40, %28
  %48 = phi i64 [ %46, %40 ], [ 0, %28 ]
  %49 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %36, i64 0, i32 1, i32 1, i32 0
  %50 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %49, align 8, !noalias !10
  %51 = icmp eq %"class.blink::NonInterpolableValue"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %50, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #11, !noalias !10
  br label %54

54:                                               ; preds = %47, %52
  %55 = ptrtoint %"class.blink::NonInterpolableValue"* %50 to i64
  %56 = bitcast %"struct.blink::InterpolationValue"* %5 to i64*
  store i64 %48, i64* %56, align 8, !alias.scope !10
  %57 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 1
  %58 = bitcast %class.scoped_refptr.18* %57 to i64*
  store i64 %55, i64* %58, align 8, !alias.scope !10
  %59 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %2, i64 1, i32 1
  %60 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13InterpolationEEEPhm(i64 136) #11
  %61 = bitcast i8* %60 to %"class.blink::TransitionInterpolation"*
  %62 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::CompositorKeyframeValue"*, %"class.blink::CompositorKeyframeValue"** %62, align 8
  %64 = bitcast double* %59 to %"class.blink::CompositorKeyframeValue"**
  %65 = load %"class.blink::CompositorKeyframeValue"*, %"class.blink::CompositorKeyframeValue"** %64, align 8
  call void @_ZN5blink23TransitionInterpolationC2ERKNS_14PropertyHandleERKNS_17InterpolationTypeEONS_18InterpolationValueES8_PNS_23CompositorKeyframeValueESA_(%"class.blink::TransitionInterpolation"* %61, %"class.blink::PropertyHandle"* dereferenceable(24) %1, %"class.blink::InterpolationType"* dereferenceable(32) %9, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %4, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %5, %"class.blink::CompositorKeyframeValue"* %63, %"class.blink::CompositorKeyframeValue"* %65) #11
  %66 = getelementptr inbounds i8, i8* %60, i64 -4
  %67 = bitcast i8* %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = or i16 %68, 1
  store atomic i16 %69, i16* %67 release, align 2
  %70 = bitcast i8* %60 to %"class.blink::Interpolation"*
  %71 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 1, i32 0
  %72 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %71, align 8
  %73 = icmp eq %"class.blink::NonInterpolableValue"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %54
  %75 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %72, i64 0, i32 1, i32 0
  %76 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %75, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %76) #11
  %77 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %75, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %75, i64 -2
  %82 = bitcast %"class.base::RefCounted.20"* %81 to %"class.blink::NonInterpolableValue"*
  %83 = bitcast %"class.base::RefCounted.20"* %81 to void (%"class.blink::NonInterpolableValue"*)***
  %84 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %84, i64 1
  %86 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %85, align 8
  call void %86(%"class.blink::NonInterpolableValue"* nonnull %82) #11
  br label %87

87:                                               ; preds = %80, %74, %54
  %88 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %88, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %88, align 8
  %90 = icmp eq %"class.blink::InterpolableValue"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.blink::InterpolableValue"* %89 to void (%"class.blink::InterpolableValue"*)***
  %93 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %93, i64 1
  %95 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %94, align 8
  call void %95(%"class.blink::InterpolableValue"* nonnull %89) #11
  br label %96

96:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  %97 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 1, i32 0
  %98 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %97, align 8
  %99 = icmp eq %"class.blink::NonInterpolableValue"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %98, i64 0, i32 1, i32 0
  %102 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %101, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %102) #11
  %103 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %101, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %113

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %101, i64 -2
  %108 = bitcast %"class.base::RefCounted.20"* %107 to %"class.blink::NonInterpolableValue"*
  %109 = bitcast %"class.base::RefCounted.20"* %107 to void (%"class.blink::NonInterpolableValue"*)***
  %110 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %110, i64 1
  %112 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %111, align 8
  call void %112(%"class.blink::NonInterpolableValue"* nonnull %108) #11
  br label %113

113:                                              ; preds = %106, %100, %96
  %114 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %114, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %114, align 8
  %116 = icmp eq %"class.blink::InterpolableValue"* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %113
  %118 = bitcast %"class.blink::InterpolableValue"* %115 to void (%"class.blink::InterpolableValue"*)***
  %119 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %119, i64 1
  %121 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %120, align 8
  call void %121(%"class.blink::InterpolableValue"* nonnull %115) #11
  br label %122

122:                                              ; preds = %113, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret %"class.blink::Interpolation"* %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe5TraceEPNS_7VisitorE(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TransitionKeyframeD2Ev(%"class.blink::TransitionKeyframe"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18TransitionKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %3, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %3, align 8
  %5 = icmp eq %"class.blink::TypedInterpolationValue"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %7, align 8
  %9 = icmp eq %"class.blink::NonInterpolableValue"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #11
  %13 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.20"* %17 to %"class.blink::NonInterpolableValue"*
  %19 = bitcast %"class.base::RefCounted.20"* %17 to void (%"class.blink::NonInterpolableValue"*)***
  %20 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %20, i64 1
  %22 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %21, align 8
  tail call void %22(%"class.blink::NonInterpolableValue"* nonnull %18) #11
  br label %23

23:                                               ; preds = %16, %10, %6
  %24 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %26 = icmp eq %"class.blink::InterpolableValue"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::InterpolableValue"* %25 to void (%"class.blink::InterpolableValue"*)***
  %29 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %29, i64 1
  %31 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %30, align 8
  tail call void %31(%"class.blink::InterpolableValue"* nonnull %25) #11
  br label %32

32:                                               ; preds = %27, %23
  %33 = bitcast %"class.blink::TypedInterpolationValue"* %4 to i8*
  tail call void @free(i8* %33) #11
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %34, %47, %50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8KeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %52 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  %53 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %52, align 8
  %54 = icmp eq %"class.blink::TimingFunction"* %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %53, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw sub i32* %57, i32 1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %67

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %56, i64 -2
  %62 = bitcast %"class.base::RefCountedThreadSafe"* %61 to %"class.blink::TimingFunction"*
  %63 = bitcast %"class.base::RefCountedThreadSafe"* %61 to void (%"class.blink::TimingFunction"*)***
  %64 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %64, i64 1
  %66 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %65, align 8
  tail call void %66(%"class.blink::TimingFunction"* nonnull %62) #11
  br label %67

67:                                               ; preds = %51, %55, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TransitionKeyframeD0Ev(%"class.blink::TransitionKeyframe"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18TransitionKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %3, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %3, align 8
  %5 = icmp eq %"class.blink::TypedInterpolationValue"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %7, align 8
  %9 = icmp eq %"class.blink::NonInterpolableValue"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #11
  %13 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.20"* %17 to %"class.blink::NonInterpolableValue"*
  %19 = bitcast %"class.base::RefCounted.20"* %17 to void (%"class.blink::NonInterpolableValue"*)***
  %20 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %20, i64 1
  %22 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %21, align 8
  tail call void %22(%"class.blink::NonInterpolableValue"* nonnull %18) #11
  br label %23

23:                                               ; preds = %16, %10, %6
  %24 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %26 = icmp eq %"class.blink::InterpolableValue"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::InterpolableValue"* %25 to void (%"class.blink::InterpolableValue"*)***
  %29 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %29, i64 1
  %31 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %30, align 8
  tail call void %31(%"class.blink::InterpolableValue"* nonnull %25) #11
  br label %32

32:                                               ; preds = %27, %23
  %33 = bitcast %"class.blink::TypedInterpolationValue"* %4 to i8*
  tail call void @free(i8* %33) #11
  br label %34

34:                                               ; preds = %32, %1
  %35 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %50, %47, %34
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8KeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %52 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  %53 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %52, align 8
  %54 = icmp eq %"class.blink::TimingFunction"* %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %53, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw sub i32* %57, i32 1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %67

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %56, i64 -2
  %62 = bitcast %"class.base::RefCountedThreadSafe"* %61 to %"class.blink::TimingFunction"*
  %63 = bitcast %"class.base::RefCountedThreadSafe"* %61 to void (%"class.blink::TimingFunction"*)***
  %64 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %64, i64 1
  %66 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %65, align 8
  tail call void %66(%"class.blink::TimingFunction"* nonnull %62) #11
  br label %67

67:                                               ; preds = %51, %55, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Keyframe"* @_ZNK5blink18TransitionKeyframe5CloneEv(%"class.blink::TransitionKeyframe"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64 80) #11
  %3 = bitcast i8* %2 to %"class.blink::TransitionKeyframe"*
  tail call void @_ZN5blink18TransitionKeyframeC2ERKS0_(%"class.blink::TransitionKeyframe"* %3, %"class.blink::TransitionKeyframe"* dereferenceable(80) %0) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = bitcast i8* %2 to %"class.blink::Keyframe"*
  ret %"class.blink::Keyframe"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe16IsStringKeyframeEv(%"class.blink::Keyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TransitionKeyframe20IsTransitionKeyframeEv(%"class.blink::TransitionKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TransitionKeyframe24PropertySpecificKeyframeD2Ev(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink18TransitionKeyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %3, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %3, align 8
  %5 = icmp eq %"class.blink::TypedInterpolationValue"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %7, align 8
  %9 = icmp eq %"class.blink::NonInterpolableValue"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #11
  %13 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.20"* %17 to %"class.blink::NonInterpolableValue"*
  %19 = bitcast %"class.base::RefCounted.20"* %17 to void (%"class.blink::NonInterpolableValue"*)***
  %20 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %20, i64 1
  %22 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %21, align 8
  tail call void %22(%"class.blink::NonInterpolableValue"* nonnull %18) #11
  br label %23

23:                                               ; preds = %16, %10, %6
  %24 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %26 = icmp eq %"class.blink::InterpolableValue"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::InterpolableValue"* %25 to void (%"class.blink::InterpolableValue"*)***
  %29 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %29, i64 1
  %31 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %30, align 8
  tail call void %31(%"class.blink::InterpolableValue"* nonnull %25) #11
  br label %32

32:                                               ; preds = %27, %23
  %33 = bitcast %"class.blink::TypedInterpolationValue"* %4 to i8*
  tail call void @free(i8* %33) #11
  br label %34

34:                                               ; preds = %1, %32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink8Keyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %35 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 0, i32 2, i32 0
  %36 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %35, align 8
  %37 = icmp eq %"class.blink::TimingFunction"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %36, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %44 to %"class.blink::TimingFunction"*
  %46 = bitcast %"class.base::RefCountedThreadSafe"* %44 to void (%"class.blink::TimingFunction"*)***
  %47 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %47, i64 1
  %49 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %48, align 8
  tail call void %49(%"class.blink::TimingFunction"* nonnull %45) #11
  br label %50

50:                                               ; preds = %34, %38, %43
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TransitionKeyframe24PropertySpecificKeyframeD0Ev(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink18TransitionKeyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %3, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %3, align 8
  %5 = icmp eq %"class.blink::TypedInterpolationValue"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %7, align 8
  %9 = icmp eq %"class.blink::NonInterpolableValue"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #11
  %13 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.20"* %17 to %"class.blink::NonInterpolableValue"*
  %19 = bitcast %"class.base::RefCounted.20"* %17 to void (%"class.blink::NonInterpolableValue"*)***
  %20 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %20, i64 1
  %22 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %21, align 8
  tail call void %22(%"class.blink::NonInterpolableValue"* nonnull %18) #11
  br label %23

23:                                               ; preds = %16, %10, %6
  %24 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %26 = icmp eq %"class.blink::InterpolableValue"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::InterpolableValue"* %25 to void (%"class.blink::InterpolableValue"*)***
  %29 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %29, i64 1
  %31 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %30, align 8
  tail call void %31(%"class.blink::InterpolableValue"* nonnull %25) #11
  br label %32

32:                                               ; preds = %27, %23
  %33 = bitcast %"class.blink::TypedInterpolationValue"* %4 to i8*
  tail call void @free(i8* %33) #11
  br label %34

34:                                               ; preds = %32, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink8Keyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %35 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 0, i32 2, i32 0
  %36 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %35, align 8
  %37 = icmp eq %"class.blink::TimingFunction"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %36, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %44 to %"class.blink::TimingFunction"*
  %46 = bitcast %"class.base::RefCountedThreadSafe"* %44 to void (%"class.blink::TimingFunction"*)***
  %47 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %47, i64 1
  %49 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %48, align 8
  tail call void %49(%"class.blink::TimingFunction"* nonnull %45) #11
  br label %50

50:                                               ; preds = %34, %38, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe9IsNeutralEv(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe8IsRevertEv(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Keyframe::PropertySpecificKeyframe"* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe15CloneWithOffsetEd(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*, double) unnamed_addr #0 comdat align 2 {
  %3 = alloca double, align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  store double %1, double* %3, align 8
  %5 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %10, align 8, !noalias !13
  %12 = icmp eq %"class.blink::InterpolableValue"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::InterpolableValue"* %11 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %15 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %14, align 8, !noalias !13
  %16 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %15, i64 16
  %17 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %16, align 8, !noalias !13
  %18 = tail call %"class.blink::InterpolableValue"* %17(%"class.blink::InterpolableValue"* nonnull %11) #11, !noalias !13
  %19 = ptrtoint %"class.blink::InterpolableValue"* %18 to i64
  br label %20

20:                                               ; preds = %13, %2
  %21 = phi i64 [ %19, %13 ], [ 0, %2 ]
  %22 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %9, i64 0, i32 1, i32 1, i32 0
  %23 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %22, align 8, !noalias !13
  %24 = icmp eq %"class.blink::NonInterpolableValue"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %23, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %26) #11, !noalias !13
  br label %27

27:                                               ; preds = %20, %25
  %28 = ptrtoint %"class.blink::NonInterpolableValue"* %23 to i64
  %29 = bitcast %"class.blink::TypedInterpolationValue"* %9 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = tail call noalias i8* @malloc(i64 24) #11
  %32 = bitcast i8* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 8
  %34 = bitcast i8* %33 to i64*
  store i64 %21, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %31, i64 16
  %36 = bitcast i8* %35 to i64*
  store i64 %28, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %31, i8** %38, align 8
  %39 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 2
  %40 = call %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* @_ZN5blink25MakeGarbageCollectedTraitINS_18TransitionKeyframe24PropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEERKNS_11EffectModel18CompositeOperationENSt3__110unique_ptrINS_23TypedInterpolationValueENSF_14default_deleteISH_EEEERKNS_6MemberINS_23CompositorKeyframeValueEEEEEEPS2_DpOT_(double* nonnull dereferenceable(8) %3, %class.scoped_refptr* dereferenceable(8) %5, i32* dereferenceable(4) %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4, %"class.blink::Member"* dereferenceable(8) %39) #11
  %41 = bitcast %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %40 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  %42 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %37, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %37, align 8
  %43 = icmp eq %"class.blink::TypedInterpolationValue"* %42, null
  br i1 %43, label %72, label %44

44:                                               ; preds = %27
  %45 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %42, i64 0, i32 1, i32 1, i32 0
  %46 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %45, align 8
  %47 = icmp eq %"class.blink::NonInterpolableValue"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %46, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %49, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #11
  %51 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %49, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %49, i64 -2
  %56 = bitcast %"class.base::RefCounted.20"* %55 to %"class.blink::NonInterpolableValue"*
  %57 = bitcast %"class.base::RefCounted.20"* %55 to void (%"class.blink::NonInterpolableValue"*)***
  %58 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %58, i64 1
  %60 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %59, align 8
  call void %60(%"class.blink::NonInterpolableValue"* nonnull %56) #11
  br label %61

61:                                               ; preds = %54, %48, %44
  %62 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %62, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %62, align 8
  %64 = icmp eq %"class.blink::InterpolableValue"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.blink::InterpolableValue"* %63 to void (%"class.blink::InterpolableValue"*)***
  %67 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %67, i64 1
  %69 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %68, align 8
  call void %69(%"class.blink::InterpolableValue"* nonnull %63) #11
  br label %70

70:                                               ; preds = %65, %61
  %71 = bitcast %"class.blink::TypedInterpolationValue"* %42 to i8*
  call void @free(i8* %71) #11
  br label %72

72:                                               ; preds = %27, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret %"class.blink::Keyframe::PropertySpecificKeyframe"* %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe24PropertySpecificKeyframe31PopulateCompositorKeyframeValueERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS8_(%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CompositorKeyframeValue"* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe26GetCompositorKeyframeValueEv(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransitionKeyframe::PropertySpecificKeyframe", %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CompositorKeyframeValue"*, %"class.blink::CompositorKeyframeValue"** %2, align 8
  ret %"class.blink::CompositorKeyframeValue"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv(%"class.blink::Keyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv(%"class.blink::Keyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe36IsTransitionPropertySpecificKeyframeEv(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Keyframe::PropertySpecificKeyframe"* @_ZNK5blink18TransitionKeyframe24PropertySpecificKeyframe15NeutralKeyframeEd13scoped_refptrINS_14TimingFunctionEE(%"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*) unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.blink::TimingFunction"* %2, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %2, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.blink::TimingFunction"*
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %11 to void (%"class.blink::TimingFunction"*)***
  %14 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %14, i64 1
  %16 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, align 8
  tail call void %16(%"class.blink::TimingFunction"* nonnull %12) #11
  br label %17

17:                                               ; preds = %3, %5, %10
  ret %"class.blink::Keyframe::PropertySpecificKeyframe"* null
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv(%"class.blink::CSSInterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24InterpolationEnvironment5IsSVGEv(%"class.blink::InterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27CSSInterpolationEnvironmentD0Ev(%"class.blink::CSSInterpolationEnvironment"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::CSSInterpolationEnvironment"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TransitionKeyframeC2ERKS0_(%"class.blink::TransitionKeyframe"*, %"class.blink::TransitionKeyframe"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast double* %7 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %1, i64 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %10, align 8
  %12 = icmp eq %"class.blink::TimingFunction"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %2, %13, %17
  %21 = ptrtoint %"class.blink::TimingFunction"* %11 to i64
  %22 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8KeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %6, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = bitcast double* %24 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 0, i32 3
  %27 = bitcast %class.scoped_refptr* %26 to i64*
  store i64 %21, i64* %27, align 8
  br i1 %12, label %28, label %55

28:                                               ; preds = %20
  %29 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #11
  %30 = icmp eq %"class.blink::LinearTimingFunction"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %35, %31, %28
  %39 = ptrtoint %"class.blink::LinearTimingFunction"* %29 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 0, i32 0
  %41 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %40, align 8
  store i64 %39, i64* %27, align 8
  %42 = icmp eq %"class.blink::TimingFunction"* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %41, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 -2
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %49 to %"class.blink::TimingFunction"*
  %51 = bitcast %"class.base::RefCountedThreadSafe"* %49 to void (%"class.blink::TimingFunction"*)***
  %52 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %52, i64 1
  %54 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %53, align 8
  call void %54(%"class.blink::TimingFunction"* nonnull %50) #11
  br label %55

55:                                               ; preds = %48, %43, %38, %20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18TransitionKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %56 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 1
  %57 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %1, i64 0, i32 1
  %58 = bitcast %"class.blink::PropertyHandle"* %56 to i8*
  %59 = bitcast %"class.blink::PropertyHandle"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #11
  %60 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #11
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %69
  call void @llvm.trap() #11
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %55, %64, %79
  %82 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %83 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %83, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %84, align 8, !noalias !16
  %86 = icmp eq %"class.blink::InterpolableValue"* %85, null
  br i1 %86, label %94, label %87

87:                                               ; preds = %81
  %88 = bitcast %"class.blink::InterpolableValue"* %85 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %89 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %88, align 8, !noalias !16
  %90 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %89, i64 16
  %91 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %90, align 8, !noalias !16
  %92 = call %"class.blink::InterpolableValue"* %91(%"class.blink::InterpolableValue"* nonnull %85) #11, !noalias !16
  %93 = ptrtoint %"class.blink::InterpolableValue"* %92 to i64
  br label %94

94:                                               ; preds = %87, %81
  %95 = phi i64 [ %93, %87 ], [ 0, %81 ]
  %96 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %83, i64 0, i32 1, i32 1, i32 0
  %97 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %96, align 8, !noalias !16
  %98 = icmp eq %"class.blink::NonInterpolableValue"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %97, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %100) #11, !noalias !16
  br label %101

101:                                              ; preds = %94, %99
  %102 = ptrtoint %"class.blink::NonInterpolableValue"* %97 to i64
  %103 = bitcast %"class.blink::TypedInterpolationValue"* %83 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = call noalias i8* @malloc(i64 24) #11
  %106 = bitcast i8* %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to i64*
  store i64 %95, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %105, i64 16
  %110 = bitcast i8* %109 to i64*
  store i64 %102, i64* %110, align 8
  %111 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %112 = bitcast %"class.blink::TypedInterpolationValue"** %111 to i8**
  store i8* %105, i8** %112, align 8
  %113 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %0, i64 0, i32 3
  %114 = getelementptr inbounds %"class.blink::TransitionKeyframe", %"class.blink::TransitionKeyframe"* %1, i64 0, i32 3
  %115 = bitcast %"class.blink::Member"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.blink::Member"* %113 to i64*
  store i64 %116, i64* %117, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.9"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.9"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8KeyframeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Keyframe"*
  %3 = bitcast i8* %0 to void (%"class.blink::Keyframe"*)***
  %4 = load void (%"class.blink::Keyframe"*)**, void (%"class.blink::Keyframe"*)*** %3, align 8
  %5 = load void (%"class.blink::Keyframe"*)*, void (%"class.blink::Keyframe"*)** %4, align 8
  tail call void %5(%"class.blink::Keyframe"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.9"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %"class.logging::CheckError", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %31, !prof !19

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 16) #11
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = icmp eq i8* %8, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %7
  %16 = atomicrmw add i32* %10, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.logging::CheckError"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %1) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %21

21:                                               ; preds = %18, %15
  %22 = atomicrmw sub i32* %10, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = bitcast i8* %8 to %"class.blink::TimingFunction"*
  %26 = bitcast i8* %8 to void (%"class.blink::TimingFunction"*)***
  %27 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %27, i64 1
  %29 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, align 8
  call void %29(%"class.blink::TimingFunction"* nonnull %25) #11
  br label %30

30:                                               ; preds = %7, %21, %24
  store i8* %8, i8** bitcast (%"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #11
  br label %31

31:                                               ; preds = %4, %30, %0
  %32 = load %"class.blink::LinearTimingFunction"*, %"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear, align 8
  ret %"class.blink::LinearTimingFunction"* %32
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* @_ZN5blink25MakeGarbageCollectedTraitINS_18TransitionKeyframe24PropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEERKNS_11EffectModel18CompositeOperationENSt3__110unique_ptrINS_23TypedInterpolationValueENSF_14default_deleteISH_EEEERKNS_6MemberINS_23CompositorKeyframeValueEEEEEEPS2_DpOT_(double* dereferenceable(8), %class.scoped_refptr* dereferenceable(8), i32* dereferenceable(4), %"class.std::__1::unique_ptr"* dereferenceable(8), %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 48) #11
  %8 = bitcast i8* %7 to %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"*
  %9 = load double, double* %0, align 8
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %11 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %10, align 8
  %12 = icmp eq %"class.blink::TimingFunction"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %5, %13, %17
  %21 = load i32, i32* %2, align 4
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %22, align 8
  %25 = bitcast %"class.blink::Member"* %4 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8* %7 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %27, double %9, %"class.blink::TimingFunction"* %11, i32 %21) #11
  %28 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink18TransitionKeyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %7, i64 32
  %30 = bitcast i8* %29 to i64*
  store i64 %24, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %7, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 %26, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %7, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  ret %"class.blink::TransitionKeyframe::PropertySpecificKeyframe"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.9"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.9"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8Keyframe24PropertySpecificKeyframeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe::PropertySpecificKeyframe"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8Keyframe24PropertySpecificKeyframeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  %3 = bitcast i8* %0 to void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %4 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %3, align 8
  %5 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %4, align 8
  tail call void %5(%"class.blink::Keyframe::PropertySpecificKeyframe"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8Keyframe24PropertySpecificKeyframeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  %7 = icmp eq %"class.blink::PropertyHandle"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"class.blink::PropertyHandle"* null)
  %10 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::PropertyHandle"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #11
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.6* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %62, %11
  %39 = phi i64 [ 0, %11 ], [ %68, %62 ]
  %40 = phi i64 [ %19, %11 ], [ %70, %62 ]
  %41 = phi %"class.blink::PropertyHandle"* [ null, %11 ], [ %66, %62 ]
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 %40
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  store i32 0, i32* %21, align 8, !alias.scope !20
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11, !alias.scope !20
  %43 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #11
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #11
  br label %59

59:                                               ; preds = %38, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br i1 %43, label %71, label %60

60:                                               ; preds = %59
  %61 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #11
  br i1 %61, label %139, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %42, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1
  %66 = select i1 %65, %"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* %41
  %67 = icmp eq i64 %39, 0
  %68 = select i1 %67, i64 %37, i64 %39
  %69 = add i64 %68, %40
  %70 = and i64 %69, %16
  br label %38

71:                                               ; preds = %59
  %72 = icmp eq %"class.blink::PropertyHandle"* %41, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::PropertyHandle"* %42 to i8*
  br label %83

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::PropertyHandle"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #11
  %77 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  br label %83

83:                                               ; preds = %73, %75
  %84 = phi i8* [ %74, %73 ], [ %76, %75 ]
  %85 = phi %"class.blink::PropertyHandle"* [ %42, %73 ], [ %41, %75 ]
  %86 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %86, i64 16, i1 false) #11
  %87 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %85, i64 0, i32 2
  %88 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #11
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %96
  call void @llvm.trap() #11
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %91, %83
  %109 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %110 = bitcast %"class.WTF::AtomicString"* %87 to i64*
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  store i64 %109, i64* %110, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #11
  br label %127

127:                                              ; preds = %108, %123, %126
  %128 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, %130
  %134 = shl i32 %133, 1
  %135 = load i32, i32* %13, align 8
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %139, label %137

137:                                              ; preds = %127
  %138 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"class.blink::PropertyHandle"* %85)
  br label %139

139:                                              ; preds = %60, %127, %137
  %140 = phi i8 [ 1, %127 ], [ 1, %137 ], [ 0, %60 ]
  %141 = phi %"class.blink::PropertyHandle"* [ %85, %127 ], [ %138, %137 ], [ %42, %60 ]
  %142 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %141, 0
  %143 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %142, i8 %140, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"class.blink::PropertyHandle"*
  %37 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable"* %0, %"class.blink::PropertyHandle"* %36, i32 %32, %"class.blink::PropertyHandle"* %1) #11
  ret %"class.blink::PropertyHandle"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"*, i32, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable", align 8
  %7 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"class.blink::PropertyHandle"* %1, %"class.blink::PropertyHandle"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"class.blink::PropertyHandle"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable"* %6 to i64*
  br label %29

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.6* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %73

26:                                               ; preds = %134
  %27 = bitcast %"class.WTF::HashTable"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64* [ %19, %17 ], [ %27, %26 ]
  %31 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %32 = phi %"class.blink::PropertyHandle"* [ null, %17 ], [ %135, %26 ]
  %33 = phi i32 [ 0, %17 ], [ %136, %26 ]
  %34 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %31, i64* %34 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %35, i64* %30, align 8
  store i32 %33, i32* %9, align 8
  %36 = inttoptr i64 %35 to %"class.blink::PropertyHandle"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %67, label %40

40:                                               ; preds = %38
  %41 = zext i32 %33 to i64
  br label %42

42:                                               ; preds = %64, %40
  %43 = phi i64 [ 0, %40 ], [ %65, %64 ]
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #11
  br label %64

64:                                               ; preds = %63, %60, %47, %42
  %65 = add nuw nsw i64 %43, 1
  %66 = icmp eq i64 %65, %41
  br i1 %66, label %67, label %42

67:                                               ; preds = %64, %38
  %68 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #11
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %69

69:                                               ; preds = %29, %67
  %70 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -2147483648
  store i32 %72, i32* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret %"class.blink::PropertyHandle"* %32

73:                                               ; preds = %20, %134
  %74 = phi %"class.blink::PropertyHandle"* [ null, %20 ], [ %135, %134 ]
  %75 = phi i32 [ 0, %20 ], [ %136, %134 ]
  %76 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %77 = zext i32 %75 to i64
  %78 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %76, i64 %77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  store i32 0, i32* %22, align 8, !alias.scope !25
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11, !alias.scope !25
  %79 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %78, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #11
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #11
  br label %95

95:                                               ; preds = %73, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %96 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %78, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  %99 = or i1 %79, %98
  br i1 %99, label %134, label %100

100:                                              ; preds = %95
  %101 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %102 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77
  %103 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %102) #11
  %104 = extractvalue { %"class.blink::PropertyHandle"*, i8 } %103, 0
  %105 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #11
  br label %121

121:                                              ; preds = %100, %117, %120
  %122 = bitcast %"class.blink::PropertyHandle"* %104 to i8*
  %123 = bitcast %"class.blink::PropertyHandle"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #11
  %124 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2
  %125 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77, i32 2
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.WTF::AtomicString"* %124 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %130 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %131 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %130, i64 %77
  %132 = icmp eq %"class.blink::PropertyHandle"* %131, %3
  %133 = select i1 %132, %"class.blink::PropertyHandle"* %104, %"class.blink::PropertyHandle"* %74
  br label %134

134:                                              ; preds = %95, %121
  %135 = phi %"class.blink::PropertyHandle"* [ %74, %95 ], [ %133, %121 ]
  %136 = add i32 %75, 1
  %137 = load i32, i32* %13, align 8
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %26, label %73
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #11
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.6* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %60, %2
  %32 = phi i64 [ 0, %2 ], [ %64, %60 ]
  %33 = phi i64 [ 0, %2 ], [ %66, %60 ]
  %34 = phi i64 [ %12, %2 ], [ %68, %60 ]
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %34
  %36 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  store i32 0, i32* %14, align 8, !alias.scope !30
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11, !alias.scope !30
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #11
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  br i1 %37, label %54, label %58

54:                                               ; preds = %53
  %55 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  %56 = icmp eq i64 %32, 0
  %57 = select i1 %56, i64 %55, i64 %32
  br label %71

58:                                               ; preds = %53
  %59 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #11
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %35, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = select i1 %63, i64 %36, i64 %32
  %65 = icmp eq i64 %33, 0
  %66 = select i1 %65, i64 %30, i64 %33
  %67 = add i64 %66, %34
  %68 = and i64 %67, %9
  br label %31

69:                                               ; preds = %58
  %70 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi i64 [ %57, %54 ], [ %70, %69 ]
  %73 = phi i8 [ 0, %54 ], [ 1, %69 ]
  %74 = inttoptr i64 %72 to %"class.blink::PropertyHandle"*
  %75 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %74, 0
  %76 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %75, i8 %73, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %76
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CompositorKeyframeValue"*
  %4 = bitcast i8* %1 to void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)**, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CompositorKeyframeValue"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #11
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #11
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #11
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #11
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23TransitionInterpolationC2ERKNS_14PropertyHandleERKNS_17InterpolationTypeEONS_18InterpolationValueES8_PNS_23CompositorKeyframeValueESA_(%"class.blink::TransitionInterpolation"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.blink::CompositorKeyframeValue"*, %"class.blink::CompositorKeyframeValue"*) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink23TransitionInterpolationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::PropertyHandle"* %13 to i8*
  %15 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false) #11
  %16 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #11
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %25
  tail call void @llvm.trap() #11
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %7, %20, %35
  %38 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 2
  store %"class.blink::InterpolationType"* %2, %"class.blink::InterpolationType"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %40, align 8
  %43 = bitcast %"struct.blink::InterpolationValue"* %39 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 1
  %45 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1
  %46 = getelementptr inbounds %class.scoped_refptr.18, %class.scoped_refptr.18* %45, i64 0, i32 0
  %47 = bitcast %class.scoped_refptr.18* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %class.scoped_refptr.18* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %46, align 8
  %50 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"struct.blink::InterpolationValue"* %4 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %51, align 8
  %54 = bitcast %"struct.blink::InterpolationValue"* %50 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 1
  %56 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 1
  %57 = getelementptr inbounds %class.scoped_refptr.18, %class.scoped_refptr.18* %56, i64 0, i32 0
  %58 = bitcast %class.scoped_refptr.18* %56 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %class.scoped_refptr.18* %55 to i64*
  store i64 %59, i64* %60, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %57, align 8
  %61 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 5
  %62 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %63, align 8, !noalias !35
  %65 = icmp eq %"class.blink::InterpolableValue"* %64, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %37
  %67 = bitcast %"class.blink::InterpolableValue"* %64 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %68 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %67, align 8, !noalias !35
  %69 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %68, i64 16
  %70 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %69, align 8, !noalias !35
  %71 = tail call %"class.blink::InterpolableValue"* %70(%"class.blink::InterpolableValue"* nonnull %64) #11, !noalias !35
  %72 = ptrtoint %"class.blink::InterpolableValue"* %71 to i64
  br label %73

73:                                               ; preds = %66, %37
  %74 = phi i64 [ %72, %66 ], [ 0, %37 ]
  %75 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 3, i32 1, i32 0
  %76 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %75, align 8, !noalias !35
  %77 = icmp eq %"class.blink::NonInterpolableValue"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %76, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #11, !noalias !35
  br label %80

80:                                               ; preds = %73, %78
  %81 = ptrtoint %"class.blink::NonInterpolableValue"* %76 to i64
  %82 = bitcast %"struct.blink::InterpolationValue"* %8 to i64*
  store i64 %74, i64* %82, align 8, !alias.scope !35
  %83 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1
  %84 = bitcast %class.scoped_refptr.18* %83 to i64*
  store i64 %81, i64* %84, align 8, !alias.scope !35
  %85 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #11
  %86 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %86, align 8, !noalias !38
  %88 = icmp eq %"class.blink::InterpolableValue"* %87, null
  br i1 %88, label %96, label %89

89:                                               ; preds = %80
  %90 = bitcast %"class.blink::InterpolableValue"* %87 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %91 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %90, align 8, !noalias !38
  %92 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %91, i64 16
  %93 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %92, align 8, !noalias !38
  %94 = tail call %"class.blink::InterpolableValue"* %93(%"class.blink::InterpolableValue"* nonnull %87) #11, !noalias !38
  %95 = ptrtoint %"class.blink::InterpolableValue"* %94 to i64
  br label %96

96:                                               ; preds = %89, %80
  %97 = phi i64 [ %95, %89 ], [ 0, %80 ]
  %98 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 4, i32 1, i32 0
  %99 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %98, align 8, !noalias !38
  %100 = icmp eq %"class.blink::NonInterpolableValue"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %99, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %102) #11, !noalias !38
  br label %103

103:                                              ; preds = %96, %101
  %104 = ptrtoint %"class.blink::NonInterpolableValue"* %99 to i64
  %105 = bitcast %"struct.blink::InterpolationValue"* %9 to i64*
  store i64 %97, i64* %105, align 8, !alias.scope !38
  %106 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1
  %107 = bitcast %class.scoped_refptr.18* %106 to i64*
  store i64 %104, i64* %107, align 8, !alias.scope !38
  %108 = bitcast %"class.blink::InterpolationType"* %2 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %109 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %109, i64 4
  %111 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %110, align 8
  call void %111(%"struct.blink::PairwiseInterpolationValue"* sret %61, %"class.blink::InterpolationType"* %2, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #11
  %112 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %113 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %112, align 8
  %114 = icmp eq %"class.blink::NonInterpolableValue"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %103
  %116 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %113, i64 0, i32 1, i32 0
  %117 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %116, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #11
  %118 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %116, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %128

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %116, i64 -2
  %123 = bitcast %"class.base::RefCounted.20"* %122 to %"class.blink::NonInterpolableValue"*
  %124 = bitcast %"class.base::RefCounted.20"* %122 to void (%"class.blink::NonInterpolableValue"*)***
  %125 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %125, i64 1
  %127 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %126, align 8
  call void %127(%"class.blink::NonInterpolableValue"* nonnull %123) #11
  br label %128

128:                                              ; preds = %121, %115, %103
  %129 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %129, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %129, align 8
  %131 = icmp eq %"class.blink::InterpolableValue"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = bitcast %"class.blink::InterpolableValue"* %130 to void (%"class.blink::InterpolableValue"*)***
  %134 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %134, i64 1
  %136 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %135, align 8
  call void %136(%"class.blink::InterpolableValue"* nonnull %130) #11
  br label %137

137:                                              ; preds = %128, %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #11
  %138 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %139 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %138, align 8
  %140 = icmp eq %"class.blink::NonInterpolableValue"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %139, i64 0, i32 1, i32 0
  %143 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %142, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %143) #11
  %144 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %142, i64 0, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %154

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %142, i64 -2
  %149 = bitcast %"class.base::RefCounted.20"* %148 to %"class.blink::NonInterpolableValue"*
  %150 = bitcast %"class.base::RefCounted.20"* %148 to void (%"class.blink::NonInterpolableValue"*)***
  %151 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %151, i64 1
  %153 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %152, align 8
  call void %153(%"class.blink::NonInterpolableValue"* nonnull %149) #11
  br label %154

154:                                              ; preds = %147, %141, %137
  %155 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %155, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %155, align 8
  %157 = icmp eq %"class.blink::InterpolableValue"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.blink::InterpolableValue"* %156 to void (%"class.blink::InterpolableValue"*)***
  %160 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %160, i64 1
  %162 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %161, align 8
  call void %162(%"class.blink::InterpolableValue"* nonnull %156) #11
  br label %163

163:                                              ; preds = %154, %158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #11
  %164 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::CompositorKeyframeValue"* %5, %"class.blink::CompositorKeyframeValue"** %164, align 8
  %165 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::CompositorKeyframeValue"* %6, %"class.blink::CompositorKeyframeValue"** %165, align 8
  %166 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %166, align 8
  %167 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 9
  store i32 0, i32* %167, align 8
  %168 = getelementptr inbounds %"class.blink::TransitionInterpolation", %"class.blink::TransitionInterpolation"* %0, i64 0, i32 10
  %169 = bitcast %"class.std::__1::unique_ptr.14"* %168 to i64*
  store i64 0, i64* %169, align 8
  %170 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %63, align 8
  %171 = icmp eq %"class.blink::InterpolableValue"* %170, null
  br i1 %171, label %172, label %175

172:                                              ; preds = %163
  %173 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.7, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)) #11
  %174 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #11
  br label %175

175:                                              ; preds = %163, %172
  %176 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %177 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %176, align 8
  %178 = icmp eq %"class.blink::InterpolableValue"* %177, null
  br i1 %178, label %179, label %183

179:                                              ; preds = %175
  %180 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.7, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #11
  %181 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #11
  %182 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %176, align 8
  br label %183

183:                                              ; preds = %175, %179
  %184 = phi %"class.blink::InterpolableValue"* [ %177, %175 ], [ %182, %179 ]
  %185 = bitcast %"class.blink::InterpolableValue"* %184 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %186 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %185, align 8
  %187 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %186, i64 16
  %188 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %187, align 8
  %189 = call %"class.blink::InterpolableValue"* %188(%"class.blink::InterpolableValue"* %184) #11
  %190 = ptrtoint %"class.blink::InterpolableValue"* %189 to i64
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %168, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %191, align 8
  store i64 %190, i64* %169, align 8
  %193 = icmp eq %"class.blink::InterpolableValue"* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %183
  %195 = bitcast %"class.blink::InterpolableValue"* %192 to void (%"class.blink::InterpolableValue"*)***
  %196 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %196, i64 1
  %198 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %197, align 8
  call void %198(%"class.blink::InterpolableValue"* nonnull %192) #11
  br label %199

199:                                              ; preds = %194, %183
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13InterpolationEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13InterpolationEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13InterpolationEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.9"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13InterpolationEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.9"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13InterpolationEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13InterpolationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Interpolation"*
  %4 = bitcast i8* %1 to void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)**, void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)*, void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)*, void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Interpolation"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13InterpolationEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Interpolation"*
  %3 = bitcast i8* %0 to void (%"class.blink::Interpolation"*)***
  %4 = load void (%"class.blink::Interpolation"*)**, void (%"class.blink::Interpolation"*)*** %3, align 8
  %5 = load void (%"class.blink::Interpolation"*)*, void (%"class.blink::Interpolation"*)** %4, align 8
  tail call void %5(%"class.blink::Interpolation"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13InterpolationEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink18InterpolationValue5CloneEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink18InterpolationValue5CloneEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!12 = distinct !{!12, !"_ZNK5blink18InterpolationValue5CloneEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink18InterpolationValue5CloneEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink18InterpolationValue5CloneEv"}
!19 = !{!"branch_weights", i32 1, i32 1048575}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!22 = distinct !{!22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!23 = distinct !{!23, !24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!28 = distinct !{!28, !29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!32 = distinct !{!32, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!33 = distinct !{!33, !34, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!37 = distinct !{!37, !"_ZNK5blink18InterpolationValue5CloneEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink18InterpolationValue5CloneEv"}
