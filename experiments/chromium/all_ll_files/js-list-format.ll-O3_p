; ModuleID = '../../v8/src/objects/js-list-format.cc'
source_filename = "../../v8/src/objects/js-list-format.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::aligned_storage<24, 8>::type" = type { [24 x i8] }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::ElementsAccessor" = type { i32 (...)** }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::Vector.1205" = type { i8*, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.v8::Maybe" = type { i8, %"class.std::__1::vector.1130" }
%"class.std::__1::vector.1130" = type { %"class.std::__1::__vector_base.1131" }
%"class.std::__1::__vector_base.1131" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.std::__1::basic_string"* }
%"class.v8::Maybe.1141" = type { i8, %"struct.v8::internal::Intl::ResolvedLocale" }
%"struct.v8::internal::Intl::ResolvedLocale" = type { %"class.std::__1::basic_string", %"class.icu_69::Locale", %"class.std::__1::map" }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1142" }
%"class.std::__1::__tree.1142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1143", %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.1151" = type { %"class.std::__1::__tree.1152" }
%"class.std::__1::__tree.1152" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1153", %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.1161" = type { %"class.std::__1::__vector_base.1162" }
%"class.std::__1::__vector_base.1162" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { i8** }
%"class.std::__1::vector.1168" = type { %"class.std::__1::__vector_base.1169" }
%"class.std::__1::__vector_base.1169" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1170" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { i32* }
%"class.std::__1::vector.1177" = type { %"class.std::__1::__vector_base.1178" }
%"class.std::__1::__vector_base.1178" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::atomic.1195" = type { %"struct.std::__1::__atomic_base.1196" }
%"struct.std::__1::__atomic_base.1196" = type { %"struct.std::__1::__atomic_base.1197" }
%"struct.std::__1::__atomic_base.1197" = type { %"struct.std::__1::__cxx_atomic_impl.1198" }
%"struct.std::__1::__cxx_atomic_impl.1198" = type { %"struct.std::__1::__cxx_atomic_base_impl.1199" }
%"struct.std::__1::__cxx_atomic_base_impl.1199" = type { i8 }
%"class.std::__1::__tree_node.1223" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1221", i32, i32, i32, %"class.v8::internal::Handle.1222" }
%"class.v8::internal::Handle.1221" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1222" = type { %"class.v8::internal::HandleBase" }
%"struct.std::__1::pair.1218" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.icu_69::ListFormatter" = type { %"class.icu_69::UObject", %"struct.icu_69::ListFormatInternal"*, %"struct.icu_69::ListFormatInternal"* }
%"struct.icu_69::ListFormatInternal" = type opaque
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1218" }
%"class.std::__1::unique_ptr.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { i8* }
%"class.v8::internal::JSListFormat" = type { %"class.v8::internal::TorqueGeneratedJSListFormat" }
%"class.v8::internal::TorqueGeneratedJSListFormat" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::Maybe.1253" = type { i8, %"class.std::__1::vector.1254" }
%"class.std::__1::vector.1254" = type { %"class.std::__1::__vector_base.1255" }
%"class.std::__1::__vector_base.1255" = type { %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, %"class.std::__1::__compressed_pair.1256" }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.1220, [32 x i8] }
%struct.anon.1220 = type { i16, i32, i32, i16* }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"class.icu_69::UnicodeString"* }
%"class.icu_69::FormattedList" = type <{ %"class.icu_69::FormattedValue", %"class.icu_69::FormattedListData"*, i32, [4 x i8] }>
%"class.icu_69::FormattedValue" = type { i32 (...)** }
%"class.icu_69::FormattedListData" = type opaque
%"class.std::__1::shared_ptr.1236" = type { %"class.icu_69::ListFormatter"*, %"class.std::__1::__shared_weak_count"* }
%"class.icu_69::ConstrainedFieldPosition" = type <{ i64, i32, i32, i32, i32, i8, [7 x i8] }>
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.std::__1::__compressed_pair.1246" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.icu_69::ListFormatter"* }
%struct.UEnumeration = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN2v88internal4Intl15GetStringOptionINS0_12JSListFormat4TypeEEENS_5MaybeIT_EEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcSE_RKNSt3__16vectorISE_NSF_9allocatorISE_EEEERKNSG_IS6_NSH_IS6_EEEES6_ = comdat any

$_ZN2v88internal4Intl15GetStringOptionINS0_12JSListFormat5StyleEEENS_5MaybeIT_EEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcSE_RKNSt3__16vectorISE_NSF_9allocatorISE_EEEERKNSG_IS6_NSH_IS6_EEEES6_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEENS_21__tree_const_iteratorIS8_SP_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN2v88internal7ManagedIN6icu_6913ListFormatterEE10DestructorEPv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZNSt3__16vectorIN6icu_6913UnicodeStringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [16 x i8] c"Intl.ListFormat\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"conjunction\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"disjunction\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"unit\00", align 1
@.ref.tmp = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0)], align 8
@.str.6 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"narrow\00", align 1
@.ref.tmp.10 = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0)], align 8
@.ref.tmp.11 = private unnamed_addr constant [3 x i32] [i32 0, i32 1, i32 2], align 4
@.str.12 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales = internal global { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" } { { { i8 } } zeroinitializer, [7 x i8] undef, %"struct.std::__1::aligned_storage<24, 8>::type" zeroinitializer }, align 8
@.str.13 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZTVNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZN2v88internal16ElementsAccessor19elements_accessors_E = external local_unnamed_addr global %"class.v8::internal::ElementsAccessor"**, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@.str.16 = private unnamed_addr constant [12 x i8] c"en-US-POSIX\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"en-US-u-va-posix\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"listPattern\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12JSListFormat3NewEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS4_INS0_6ObjectEEES8_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Vector.1205", align 8
  %6 = alloca %"class.std::__1::function", align 8
  %7 = alloca %"class.v8::Maybe", align 8
  %8 = alloca %"class.std::__1::vector.1130", align 8
  %9 = alloca %"class.v8::Maybe.1141", align 8
  %10 = alloca %"class.std::__1::set.1151", align 8
  %11 = alloca %"struct.v8::internal::Intl::ResolvedLocale", align 8
  %12 = alloca %"class.std::__1::vector.1161", align 8
  %13 = alloca %"class.std::__1::vector.1168", align 8
  %14 = alloca %"class.std::__1::vector.1161", align 8
  %15 = alloca %"class.std::__1::vector.1177", align 8
  %16 = alloca %"class.icu_69::Locale", align 8
  %17 = alloca i32, align 4
  %18 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #11
  call void @_ZN2v88internal4Intl22CanonicalizeLocaleListEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEb(%"class.v8::Maybe"* nonnull sret %7, %"class.v8::internal::Isolate"* %0, i64* %2, i1 zeroext false) #11
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %479, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.std::__1::vector.1130"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #11, !alias.scope !3
  %24 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %7, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"** %24 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !3
  %27 = bitcast %"class.std::__1::vector.1130"* %23 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !3
  %29 = sub i64 %26, %28
  %30 = sdiv exact i64 %29, 24
  %31 = icmp eq i64 %29, 0
  %32 = inttoptr i64 %28 to %"class.std::__1::basic_string"*
  %33 = inttoptr i64 %26 to %"class.std::__1::basic_string"*
  br i1 %31, label %72, label %34

34:                                               ; preds = %21
  %35 = icmp ugt i64 %30, 768614336404564650
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.1130"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #12
  unreachable

38:                                               ; preds = %34
  %39 = call i8* @_Znwm(i64 %29) #13
  %40 = bitcast i8* %39 to %"class.std::__1::basic_string"*
  %41 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %8, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"** %41 to i8**
  store i8* %39, i8** %42, align 8, !alias.scope !3
  %43 = bitcast %"class.std::__1::vector.1130"* %8 to i8**
  store i8* %39, i8** %43, align 8, !alias.scope !3
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 %30
  %45 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %44, %"class.std::__1::basic_string"** %45, align 8, !alias.scope !3
  %46 = bitcast %"class.std::__1::basic_string"** %41 to i64*
  %47 = ptrtoint i8* %39 to i64
  %48 = icmp eq %"class.std::__1::basic_string"* %32, %33
  br i1 %48, label %70, label %49

49:                                               ; preds = %38, %64
  %50 = phi %"class.std::__1::basic_string"* [ %66, %64 ], [ %40, %38 ]
  %51 = phi %"class.std::__1::basic_string"* [ %65, %64 ], [ %32, %38 ]
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #11
  br label %64

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %61, i64 %63) #11
  br label %64

64:                                               ; preds = %59, %56
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 1
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 1
  %67 = icmp eq %"class.std::__1::basic_string"* %65, %33
  br i1 %67, label %68, label %49

68:                                               ; preds = %64
  %69 = ptrtoint %"class.std::__1::basic_string"* %66 to i64
  br label %70

70:                                               ; preds = %68, %38
  %71 = phi i64 [ %47, %38 ], [ %69, %68 ]
  store i64 %71, i64* %46, align 8, !alias.scope !3
  br label %72

72:                                               ; preds = %21, %70
  %73 = call i64* @_ZN2v88internal4Intl16GetOptionsObjectEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPKc(%"class.v8::internal::Isolate"* %0, i64* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #11
  %74 = icmp eq i64* %73, null
  br i1 %74, label %451, label %75

75:                                               ; preds = %72
  %76 = call i64 @_ZN2v88internal4Intl16GetLocaleMatcherEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKc(%"class.v8::internal::Isolate"* %0, i64* nonnull %73, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #11
  %77 = trunc i64 %76 to i8
  %78 = lshr i64 %76, 32
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i8 %77, 0
  br i1 %80, label %451, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %82) #11
  %83 = bitcast %"class.std::__1::function"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #11
  %84 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }* @_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %85 = icmp eq i8 %84, 2
  br i1 %85, label %99, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %87, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %88, align 8
  %89 = bitcast %"class.std::__1::function"* %6 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal4Intl16AvailableLocalesINS2_12_GLOBAL__N_116CheckListPatternEEENS0_32StaticallyAllocatedInstanceTraitIS7_EENS0_21DefaultConstructTraitIS7_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS7_EEE12InitInstanceEPv, void (i8*)** %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast [8 x i8]* %90 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }* @_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales, i64 0, i32 2, i32 0, i64 0), i8** %91, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1195"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }* @_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales to %"struct.std::__1::atomic.1195"*), %"class.std::__1::function"* nonnull %6) #11
  %92 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %88, align 8
  %93 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %92, i64 0, i32 1
  %94 = load void (i8*)*, void (i8*)** %93, align 8
  %95 = icmp eq void (i8*)* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void %94(i8* %98) #11
  br label %99

99:                                               ; preds = %81, %86, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #11
  %100 = bitcast %"class.std::__1::set.1151"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #11
  %101 = getelementptr inbounds %"class.std::__1::set.1151", %"class.std::__1::set.1151"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::set.1151", %"class.std::__1::set.1151"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %103 = getelementptr inbounds %"class.std::__1::set.1151", %"class.std::__1::set.1151"* %10, i64 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::__tree_node_base"** %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"** %103, align 8
  call void @_ZN2v88internal4Intl13ResolveLocaleEPNS0_7IsolateERKNSt3__13setINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_4lessISB_EENS9_ISB_EEEERKNS4_6vectorISB_SE_EENS1_13MatcherOptionESH_(%"class.v8::Maybe.1141"* nonnull sret %9, %"class.v8::internal::Isolate"* %0, %"class.std::__1::set.1151"* dereferenceable(24) bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }* @_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales, i64 0, i32 2, i32 0, i64 0) to %"class.std::__1::set.1151"*), %"class.std::__1::vector.1130"* nonnull dereferenceable(24) %8, i32 %79, %"class.std::__1::set.1151"* nonnull dereferenceable(24) %10) #11
  %105 = getelementptr inbounds %"class.std::__1::set.1151", %"class.std::__1::set.1151"* %10, i64 0, i32 0
  %106 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.std::__1::__tree_node.1223"**
  %107 = load %"class.std::__1::__tree_node.1223"*, %"class.std::__1::__tree_node.1223"** %106, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1152"* nonnull %105, %"class.std::__1::__tree_node.1223"* %107) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #11
  %108 = load i8, i8* %82, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %115

110:                                              ; preds = %99
  %111 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %112 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %111, i32 10, i64* null, i64* null, i64* null) #11
  %113 = load i64, i64* %112, align 8
  %114 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %113, %"class.v8::internal::MessageLocation"* null) #11
  br label %435

115:                                              ; preds = %99
  %116 = bitcast %"struct.v8::internal::Intl::ResolvedLocale"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1
  %118 = bitcast %"struct.v8::internal::Intl::ResolvedLocale"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1, !noalias !6
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %115
  %123 = bitcast %"struct.v8::internal::Intl::ResolvedLocale"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* align 8 %123, i64 24, i1 false) #11
  br label %130

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %11, i64 0, i32 0
  %126 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8, !noalias !6
  %128 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8, !noalias !6
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %125, i8* %127, i64 %129) #11
  br label %130

130:                                              ; preds = %124, %122
  %131 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %11, i64 0, i32 1
  %132 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1, i32 1
  call void @_ZN6icu_696LocaleC1ERKS0_(%"class.icu_69::Locale"* %131, %"class.icu_69::Locale"* dereferenceable(224) %132) #11
  %133 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %11, i64 0, i32 2
  %134 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %133, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %133, i64 0, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %11, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %11, i64 0, i32 2, i32 0, i32 1
  %138 = bitcast %"class.std::__1::__compressed_pair.1143"* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 16, i1 false) #11, !alias.scope !6
  store %"class.std::__1::__tree_end_node"* %136, %"class.std::__1::__tree_end_node"** %135, align 8, !alias.scope !6
  %139 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1, i32 2, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8, !noalias !6
  %141 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0
  %142 = icmp eq %"class.std::__1::__tree_end_node"* %140, %141
  br i1 %142, label %179, label %143

143:                                              ; preds = %130, %176
  %144 = phi %"class.std::__1::__tree_end_node"* [ %177, %176 ], [ %140, %130 ]
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 4
  %146 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"struct.std::__1::pair.1218"*
  %147 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"class.std::__1::basic_string"*
  %148 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEENS_21__tree_const_iteratorIS8_SP_lEERKT_DpOT0_(%"class.std::__1::__tree.1142"* %134, %"class.std::__1::__tree_end_node"* %136, %"class.std::__1::basic_string"* dereferenceable(24) %147, %"struct.std::__1::pair.1218"* dereferenceable(48) %146) #11
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 1, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, null
  br i1 %151, label %152, label %160

152:                                              ; preds = %143
  %153 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_node_base"*
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 2
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to %"class.std::__1::__tree_end_node"**
  %156 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %156, i64 0, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, %153
  br i1 %159, label %176, label %167

160:                                              ; preds = %143, %160
  %161 = phi %"class.std::__1::__tree_node_base"* [ %163, %160 ], [ %150, %143 ]
  %162 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %161, i64 0, i32 0, i32 0
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, null
  br i1 %164, label %165, label %160

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %161, i64 0, i32 0
  br label %176

167:                                              ; preds = %152, %167
  %168 = phi %"class.std::__1::__tree_end_node"** [ %171, %167 ], [ %155, %152 ]
  %169 = bitcast %"class.std::__1::__tree_end_node"** %168 to %"class.std::__1::__tree_node_base"**
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 2
  %172 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %172, i64 0, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, %170
  br i1 %175, label %176, label %167

176:                                              ; preds = %167, %165, %152
  %177 = phi %"class.std::__1::__tree_end_node"* [ %166, %165 ], [ %156, %152 ], [ %172, %167 ]
  %178 = icmp eq %"class.std::__1::__tree_end_node"* %177, %141
  br i1 %178, label %179, label %143

179:                                              ; preds = %176, %130
  %180 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %181 = bitcast %"struct.v8::internal::Intl::ResolvedLocale"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  %185 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = select i1 %184, i8* %186, i8* %116
  %188 = bitcast %"class.v8::internal::Vector.1205"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #11
  %189 = call i64 @strlen(i8* %187) #14
  %190 = getelementptr inbounds %"class.v8::internal::Vector.1205", %"class.v8::internal::Vector.1205"* %5, i64 0, i32 0
  store i8* %187, i8** %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Vector.1205", %"class.v8::internal::Vector.1205"* %5, i64 0, i32 1
  store i64 %189, i64* %191, align 8
  %192 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %180, %"class.v8::internal::Vector.1205"* nonnull dereferenceable(16) %5, i8 zeroext 0) #11
  %193 = icmp eq i64* %192, null
  br i1 %193, label %194, label %195, !prof !9

194:                                              ; preds = %179
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0)) #12
  unreachable

195:                                              ; preds = %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #11
  %196 = bitcast %"class.std::__1::vector.1161"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #11
  %197 = call i8* @_Znwm(i64 24) #13
  %198 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %12, i64 0, i32 0, i32 1
  %199 = bitcast %"class.std::__1::vector.1161"* %12 to i8**
  store i8* %197, i8** %199, align 8
  %200 = getelementptr inbounds i8, i8* %197, i64 24
  %201 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %202 = bitcast i8*** %201 to i8**
  store i8* %200, i8** %202, align 8
  %203 = bitcast i8*** %198 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %197, i8* align 8 bitcast ([3 x i8*]* @.ref.tmp to i8*), i64 24, i1 false) #11
  %204 = ptrtoint i8* %200 to i64
  store i64 %204, i64* %203, align 8
  %205 = bitcast %"class.std::__1::vector.1168"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #11
  %206 = call i8* @_Znwm(i64 12) #13
  %207 = getelementptr inbounds %"class.std::__1::vector.1168", %"class.std::__1::vector.1168"* %13, i64 0, i32 0, i32 1
  %208 = bitcast %"class.std::__1::vector.1168"* %13 to i8**
  store i8* %206, i8** %208, align 8
  %209 = getelementptr inbounds i8, i8* %206, i64 12
  %210 = getelementptr inbounds %"class.std::__1::vector.1168", %"class.std::__1::vector.1168"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %211 = bitcast i32** %210 to i8**
  store i8* %209, i8** %211, align 8
  %212 = bitcast i32** %207 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %206, i8* align 4 bitcast ([3 x i32]* @.ref.tmp.11 to i8*), i64 12, i1 false) #11
  %213 = ptrtoint i8* %209 to i64
  store i64 %213, i64* %212, align 8
  %214 = call i64 @_ZN2v88internal4Intl15GetStringOptionINS0_12JSListFormat4TypeEEENS_5MaybeIT_EEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcSE_RKNSt3__16vectorISE_NSF_9allocatorISE_EEEERKNSG_IS6_NSH_IS6_EEEES6_(%"class.v8::internal::Isolate"* %0, i64* nonnull %73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), %"class.std::__1::vector.1161"* nonnull dereferenceable(24) %12, %"class.std::__1::vector.1168"* nonnull dereferenceable(24) %13, i32 0)
  %215 = trunc i64 %214 to i8
  %216 = lshr i64 %214, 32
  %217 = trunc i64 %216 to i32
  %218 = getelementptr inbounds %"class.std::__1::vector.1168", %"class.std::__1::vector.1168"* %13, i64 0, i32 0, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %224, label %221

221:                                              ; preds = %195
  %222 = ptrtoint i32* %219 to i64
  store i64 %222, i64* %212, align 8
  %223 = bitcast i32* %219 to i8*
  call void @_ZdlPv(i8* %223) #13
  br label %224

224:                                              ; preds = %195, %221
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #11
  %225 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %12, i64 0, i32 0, i32 0
  %226 = load i8**, i8*** %225, align 8
  %227 = icmp eq i8** %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %224
  %229 = ptrtoint i8** %226 to i64
  store i64 %229, i64* %203, align 8
  %230 = bitcast i8** %226 to i8*
  call void @_ZdlPv(i8* %230) #13
  br label %231

231:                                              ; preds = %224, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #11
  %232 = icmp eq i8 %215, 0
  br i1 %232, label %425, label %233

233:                                              ; preds = %231
  %234 = bitcast %"class.std::__1::vector.1161"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #11
  %235 = call i8* @_Znwm(i64 24) #13
  %236 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %14, i64 0, i32 0, i32 1
  %237 = bitcast %"class.std::__1::vector.1161"* %14 to i8**
  store i8* %235, i8** %237, align 8
  %238 = getelementptr inbounds i8, i8* %235, i64 24
  %239 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %240 = bitcast i8*** %239 to i8**
  store i8* %238, i8** %240, align 8
  %241 = bitcast i8*** %236 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %235, i8* align 8 bitcast ([3 x i8*]* @.ref.tmp.10 to i8*), i64 24, i1 false) #11
  %242 = ptrtoint i8* %238 to i64
  store i64 %242, i64* %241, align 8
  %243 = bitcast %"class.std::__1::vector.1177"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #11
  %244 = call i8* @_Znwm(i64 12) #13
  %245 = getelementptr inbounds %"class.std::__1::vector.1177", %"class.std::__1::vector.1177"* %15, i64 0, i32 0, i32 1
  %246 = bitcast %"class.std::__1::vector.1177"* %15 to i8**
  store i8* %244, i8** %246, align 8
  %247 = getelementptr inbounds i8, i8* %244, i64 12
  %248 = getelementptr inbounds %"class.std::__1::vector.1177", %"class.std::__1::vector.1177"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %249 = bitcast i32** %248 to i8**
  store i8* %247, i8** %249, align 8
  %250 = bitcast i32** %245 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %244, i8* align 4 bitcast ([3 x i32]* @.ref.tmp.11 to i8*), i64 12, i1 false) #11
  %251 = ptrtoint i8* %247 to i64
  store i64 %251, i64* %250, align 8
  %252 = call i64 @_ZN2v88internal4Intl15GetStringOptionINS0_12JSListFormat5StyleEEENS_5MaybeIT_EEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcSE_RKNSt3__16vectorISE_NSF_9allocatorISE_EEEERKNSG_IS6_NSH_IS6_EEEES6_(%"class.v8::internal::Isolate"* %0, i64* nonnull %73, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), %"class.std::__1::vector.1161"* nonnull dereferenceable(24) %14, %"class.std::__1::vector.1177"* nonnull dereferenceable(24) %15, i32 0)
  %253 = trunc i64 %252 to i8
  %254 = lshr i64 %252, 32
  %255 = trunc i64 %254 to i32
  %256 = getelementptr inbounds %"class.std::__1::vector.1177", %"class.std::__1::vector.1177"* %15, i64 0, i32 0, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = icmp eq i32* %257, null
  br i1 %258, label %262, label %259

259:                                              ; preds = %233
  %260 = ptrtoint i32* %257 to i64
  store i64 %260, i64* %250, align 8
  %261 = bitcast i32* %257 to i8*
  call void @_ZdlPv(i8* %261) #13
  br label %262

262:                                              ; preds = %233, %259
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #11
  %263 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %14, i64 0, i32 0, i32 0
  %264 = load i8**, i8*** %263, align 8
  %265 = icmp eq i8** %264, null
  br i1 %265, label %269, label %266

266:                                              ; preds = %262
  %267 = ptrtoint i8** %264 to i64
  store i64 %267, i64* %241, align 8
  %268 = bitcast i8** %264 to i8*
  call void @_ZdlPv(i8* %268) #13
  br label %269

269:                                              ; preds = %262, %266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #11
  %270 = icmp eq i8 %253, 0
  br i1 %270, label %425, label %271

271:                                              ; preds = %269
  %272 = bitcast %"class.icu_69::Locale"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %272) #11
  call void @_ZN6icu_696LocaleC1ERKS0_(%"class.icu_69::Locale"* nonnull %16, %"class.icu_69::Locale"* dereferenceable(224) %131) #11
  %273 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %273) #11
  store i32 0, i32* %17, align 4
  %274 = icmp ult i32 %217, 3
  br i1 %274, label %276, label %275

275:                                              ; preds = %271
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

276:                                              ; preds = %271
  %277 = icmp ult i32 %255, 3
  br i1 %277, label %279, label %278

278:                                              ; preds = %276
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

279:                                              ; preds = %276
  %280 = call %"class.icu_69::ListFormatter"* @_ZN6icu_6913ListFormatter14createInstanceERKNS_6LocaleE18UListFormatterType19UListFormatterWidthR10UErrorCode(%"class.icu_69::Locale"* nonnull dereferenceable(224) %16, i32 %217, i32 %255, i32* nonnull dereferenceable(4) %17) #11
  %281 = load i32, i32* %17, align 4
  %282 = icmp sgt i32 %281, 0
  %283 = icmp eq %"class.icu_69::ListFormatter"* %280, null
  %284 = or i1 %283, %282
  br i1 %284, label %285, label %295

285:                                              ; preds = %279
  br i1 %283, label %291, label %286

286:                                              ; preds = %285
  %287 = bitcast %"class.icu_69::ListFormatter"* %280 to void (%"class.icu_69::ListFormatter"*)***
  %288 = load void (%"class.icu_69::ListFormatter"*)**, void (%"class.icu_69::ListFormatter"*)*** %287, align 8
  %289 = getelementptr inbounds void (%"class.icu_69::ListFormatter"*)*, void (%"class.icu_69::ListFormatter"*)** %288, i64 1
  %290 = load void (%"class.icu_69::ListFormatter"*)*, void (%"class.icu_69::ListFormatter"*)** %289, align 8
  call void %290(%"class.icu_69::ListFormatter"* nonnull %280) #11
  br label %291

291:                                              ; preds = %285, %286
  %292 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %180, i32 10, i64* null, i64* null, i64* null) #11
  %293 = load i64, i64* %292, align 8
  %294 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %293, %"class.v8::internal::MessageLocation"* null) #11
  br label %423

295:                                              ; preds = %279
  %296 = ptrtoint %"class.icu_69::ListFormatter"* %280 to i64
  %297 = call i8* @_Znwm(i64 32) #13
  %298 = bitcast i8* %297 to i32 (...)***
  %299 = getelementptr inbounds i8, i8* %297, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %299, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %298, align 8
  %300 = getelementptr inbounds i8, i8* %297, i64 24
  %301 = bitcast i8* %300 to i64*
  store i64 %296, i64* %301, align 8
  %302 = ptrtoint i8* %297 to i64
  %303 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  %304 = call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %303, i64 0) #11
  %305 = call i8* @_Znwm(i64 48) #13
  %306 = bitcast i8* %305 to %"struct.v8::internal::ManagedPtrDestructor"*
  %307 = call i8* @_Znwm(i64 16) #13
  %308 = bitcast i8* %307 to i64*
  store i64 %296, i64* %308, align 8
  %309 = getelementptr inbounds i8, i8* %307, i64 8
  %310 = bitcast i8* %309 to i64*
  store i64 %302, i64* %310, align 8
  %311 = getelementptr inbounds i8, i8* %305, i64 24
  %312 = bitcast i8* %311 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %305, i8 0, i64 24, i1 false)
  store i8* %307, i8** %312, align 8
  %313 = getelementptr inbounds i8, i8* %305, i64 32
  %314 = bitcast i8* %313 to void (i8*)**
  store void (i8*)* @_ZN2v88internal7ManagedIN6icu_6913ListFormatterEE10DestructorEPv, void (i8*)** %314, align 8
  %315 = getelementptr inbounds i8, i8* %305, i64 40
  %316 = bitcast i8* %315 to i64**
  store i64* null, i64** %316, align 8
  %317 = ptrtoint i8* %305 to i64
  %318 = call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %180, i64 %317) #11
  %319 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 36
  %320 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %319, align 8
  %321 = load i64, i64* %318, align 8
  %322 = call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %320, i64 %321) #11
  store i64* %322, i64** %316, align 8
  call void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* %322, i8* nonnull %305, void (%"class.v8::WeakCallbackInfo"*)* nonnull @_ZN2v88internal22ManagedObjectFinalizerERKNS_16WeakCallbackInfoIvEE, i32 0) #11
  call void @_ZN2v88internal7Isolate28RegisterManagedPtrDestructorEPNS0_20ManagedPtrDestructorE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::ManagedPtrDestructor"* nonnull %306) #11
  %323 = load i64, i64* %1, align 8
  %324 = add i64 %323, 11
  %325 = inttoptr i64 %324 to i32*
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2097152
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %331, label %329

329:                                              ; preds = %295
  %330 = call i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %180, i64* %1, i32 2, i8 zeroext 0, i64* null) #11
  br label %333

331:                                              ; preds = %295
  %332 = call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %180, i64* %1, i8 zeroext 0, i64* null) #11
  br label %333

333:                                              ; preds = %329, %331
  %334 = phi i64* [ %330, %329 ], [ %332, %331 ]
  %335 = load i64, i64* %334, align 8
  %336 = add i64 %335, 19
  %337 = inttoptr i64 %336 to i32*
  store atomic volatile i32 0, i32* %337 monotonic, align 4
  %338 = load i64, i64* %334, align 8
  %339 = load i64, i64* %318, align 8
  %340 = add i64 %338, 15
  %341 = inttoptr i64 %340 to i32*
  %342 = trunc i64 %339 to i32
  store atomic volatile i32 %342, i32* %341 monotonic, align 4
  %343 = and i64 %339, 1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %333
  %346 = and i64 %338, -262144
  %347 = or i64 %346, 8
  %348 = inttoptr i64 %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = and i64 %349, 262144
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %356, label %352

352:                                              ; preds = %345
  %353 = or i64 %346, 16
  %354 = inttoptr i64 %353 to %"class.v8::internal::Heap"**
  %355 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %354, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %355, i64 %338, i64 %340, i64 %339) #11
  br label %356

356:                                              ; preds = %352, %345, %333
  %357 = and i64 %339, -262144
  %358 = or i64 %357, 8
  %359 = inttoptr i64 %358 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = and i64 %360, 24
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %371, label %363

363:                                              ; preds = %356
  %364 = and i64 %338, -262144
  %365 = or i64 %364, 8
  %366 = inttoptr i64 %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = and i64 %367, 24
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %363
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %338, i64 %340, i64 %339) #11
  br label %371

371:                                              ; preds = %356, %363, %370
  %372 = load i64, i64* %334, align 8
  %373 = load i64, i64* %192, align 8
  %374 = add i64 %372, 11
  %375 = inttoptr i64 %374 to i32*
  %376 = trunc i64 %373 to i32
  store atomic volatile i32 %376, i32* %375 monotonic, align 4
  %377 = and i64 %373, 1
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %390, label %379

379:                                              ; preds = %371
  %380 = and i64 %372, -262144
  %381 = or i64 %380, 8
  %382 = inttoptr i64 %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = and i64 %383, 262144
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %390, label %386

386:                                              ; preds = %379
  %387 = or i64 %380, 16
  %388 = inttoptr i64 %387 to %"class.v8::internal::Heap"**
  %389 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %388, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %389, i64 %372, i64 %374, i64 %373) #11
  br label %390

390:                                              ; preds = %386, %379, %371
  %391 = and i64 %373, -262144
  %392 = or i64 %391, 8
  %393 = inttoptr i64 %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = and i64 %394, 24
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %405, label %397

397:                                              ; preds = %390
  %398 = and i64 %372, -262144
  %399 = or i64 %398, 8
  %400 = inttoptr i64 %399 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = and i64 %401, 24
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %405

404:                                              ; preds = %397
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %372, i64 %374, i64 %373) #11
  br label %405

405:                                              ; preds = %390, %397, %404
  %406 = load i64, i64* %334, align 8
  %407 = add i64 %406, 19
  %408 = inttoptr i64 %407 to i32*
  %409 = load i32, i32* %408, align 4
  %410 = and i32 %409, -26
  %411 = shl nuw nsw i64 %216, 3
  %412 = trunc i64 %411 to i32
  %413 = or i32 %410, %412
  store atomic volatile i32 %413, i32* %408 monotonic, align 4
  %414 = load i64, i64* %334, align 8
  %415 = add i64 %414, 19
  %416 = inttoptr i64 %415 to i32*
  %417 = load i32, i32* %416, align 4
  %418 = shl nuw nsw i64 %254, 1
  %419 = trunc i64 %418 to i32
  %420 = and i32 %417, -8
  %421 = or i32 %420, %419
  store atomic volatile i32 %421, i32* %416 monotonic, align 4
  %422 = ptrtoint i64* %334 to i64
  br label %423

423:                                              ; preds = %405, %291
  %424 = phi i64 [ 0, %291 ], [ %422, %405 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %273) #11
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %272) #11
  br label %425

425:                                              ; preds = %423, %269, %231
  %426 = phi i64 [ 0, %231 ], [ %424, %423 ], [ 0, %269 ]
  %427 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %11, i64 0, i32 2, i32 0
  %428 = bitcast %"class.std::__1::__tree_end_node"* %136 to %"class.std::__1::__tree_node"**
  %429 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %428, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1142"* %427, %"class.std::__1::__tree_node"* %429) #11
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* %131) #11
  %430 = load i8, i8* %182, align 1
  %431 = icmp slt i8 %430, 0
  br i1 %431, label %432, label %434

432:                                              ; preds = %425
  %433 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %433) #13
  br label %434

434:                                              ; preds = %425, %432
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %116) #11
  br label %435

435:                                              ; preds = %434, %110
  %436 = phi i64 [ 0, %110 ], [ %426, %434 ]
  %437 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1
  %438 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1, i32 2, i32 0
  %439 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0
  %440 = bitcast %"class.std::__1::__tree_end_node"* %439 to %"class.std::__1::__tree_node"**
  %441 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %440, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1142"* %438, %"class.std::__1::__tree_node"* %441) #11
  %442 = getelementptr inbounds %"class.v8::Maybe.1141", %"class.v8::Maybe.1141"* %9, i64 0, i32 1, i32 1
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* %442) #11
  %443 = bitcast %"struct.v8::internal::Intl::ResolvedLocale"* %437 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %444 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %443, i64 0, i32 1, i32 0
  %445 = load i8, i8* %444, align 1
  %446 = icmp slt i8 %445, 0
  br i1 %446, label %447, label %450

447:                                              ; preds = %435
  %448 = getelementptr inbounds %"struct.v8::internal::Intl::ResolvedLocale", %"struct.v8::internal::Intl::ResolvedLocale"* %437, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = load i8*, i8** %448, align 8
  call void @_ZdlPv(i8* %449) #13
  br label %450

450:                                              ; preds = %435, %447
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %82) #11
  br label %451

451:                                              ; preds = %450, %75, %72
  %452 = phi i64 [ 0, %72 ], [ %436, %450 ], [ 0, %75 ]
  %453 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %8, i64 0, i32 0, i32 0
  %454 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %453, align 8
  %455 = icmp eq %"class.std::__1::basic_string"* %454, null
  br i1 %455, label %478, label %456

456:                                              ; preds = %451
  %457 = bitcast %"class.std::__1::basic_string"* %454 to i8*
  %458 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %8, i64 0, i32 0, i32 1
  %459 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %458, align 8
  %460 = icmp eq %"class.std::__1::basic_string"* %459, %454
  br i1 %460, label %476, label %461

461:                                              ; preds = %456, %471
  %462 = phi %"class.std::__1::basic_string"* [ %463, %471 ], [ %459, %456 ]
  %463 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %462, i64 -1
  %464 = bitcast %"class.std::__1::basic_string"* %463 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %465 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %464, i64 0, i32 1, i32 0
  %466 = load i8, i8* %465, align 1
  %467 = icmp slt i8 %466, 0
  br i1 %467, label %468, label %471

468:                                              ; preds = %461
  %469 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %463, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = load i8*, i8** %469, align 8
  call void @_ZdlPv(i8* %470) #13
  br label %471

471:                                              ; preds = %468, %461
  %472 = icmp eq %"class.std::__1::basic_string"* %463, %454
  br i1 %472, label %473, label %461

473:                                              ; preds = %471
  %474 = bitcast %"class.std::__1::vector.1130"* %8 to i8**
  %475 = load i8*, i8** %474, align 8
  br label %476

476:                                              ; preds = %473, %456
  %477 = phi i8* [ %475, %473 ], [ %457, %456 ]
  store %"class.std::__1::basic_string"* %454, %"class.std::__1::basic_string"** %458, align 8
  call void @_ZdlPv(i8* %477) #13
  br label %478

478:                                              ; preds = %451, %476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br label %479

479:                                              ; preds = %4, %478
  %480 = phi i64 [ %452, %478 ], [ 0, %4 ]
  %481 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %7, i64 0, i32 1
  %482 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %481, i64 0, i32 0, i32 0
  %483 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %482, align 8
  %484 = icmp eq %"class.std::__1::basic_string"* %483, null
  br i1 %484, label %507, label %485

485:                                              ; preds = %479
  %486 = bitcast %"class.std::__1::basic_string"* %483 to i8*
  %487 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %7, i64 0, i32 1, i32 0, i32 1
  %488 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %487, align 8
  %489 = icmp eq %"class.std::__1::basic_string"* %488, %483
  br i1 %489, label %505, label %490

490:                                              ; preds = %485, %500
  %491 = phi %"class.std::__1::basic_string"* [ %492, %500 ], [ %488, %485 ]
  %492 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %491, i64 -1
  %493 = bitcast %"class.std::__1::basic_string"* %492 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %493, i64 0, i32 1, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %490
  %498 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %492, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #13
  br label %500

500:                                              ; preds = %497, %490
  %501 = icmp eq %"class.std::__1::basic_string"* %492, %483
  br i1 %501, label %502, label %490

502:                                              ; preds = %500
  %503 = bitcast %"class.std::__1::vector.1130"* %481 to i8**
  %504 = load i8*, i8** %503, align 8
  br label %505

505:                                              ; preds = %502, %485
  %506 = phi i8* [ %504, %502 ], [ %486, %485 ]
  store %"class.std::__1::basic_string"* %483, %"class.std::__1::basic_string"** %487, align 8
  call void @_ZdlPv(i8* %506) #13
  br label %507

507:                                              ; preds = %479, %505
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #11
  %508 = inttoptr i64 %480 to i64*
  ret i64* %508
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal4Intl22CanonicalizeLocaleListEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEb(%"class.v8::Maybe"* sret, %"class.v8::internal::Isolate"*, i64*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64* @_ZN2v88internal4Intl16GetOptionsObjectEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN2v88internal4Intl16GetLocaleMatcherEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal4Intl13ResolveLocaleEPNS0_7IsolateERKNSt3__13setINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_4lessISB_EENS9_ISB_EEEERKNS4_6vectorISB_SE_EENS1_13MatcherOptionESH_(%"class.v8::Maybe.1141"* sret, %"class.v8::internal::Isolate"*, %"class.std::__1::set.1151"* dereferenceable(24), %"class.std::__1::vector.1130"* dereferenceable(24), i32, %"class.std::__1::set.1151"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::set.1151"* @_ZN2v88internal12JSListFormat19GetAvailableLocalesEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::function", align 8
  %2 = bitcast %"class.std::__1::function"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #11
  %3 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }* @_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %18, label %5

5:                                                ; preds = %0
  %6 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %6, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %7, align 8
  %8 = bitcast %"class.std::__1::function"* %1 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS_8internal4Intl16AvailableLocalesINS2_12_GLOBAL__N_116CheckListPatternEEENS0_32StaticallyAllocatedInstanceTraitIS7_EENS0_21DefaultConstructTraitIS7_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS7_EEE12InitInstanceEPv, void (i8*)** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast [8 x i8]* %9 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }* @_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales, i64 0, i32 2, i32 0, i64 0), i8** %10, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1195"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }* @_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales to %"struct.std::__1::atomic.1195"*), %"class.std::__1::function"* nonnull %1) #11
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %7, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 1
  %13 = load void (i8*)*, void (i8*)** %12, align 8
  %14 = icmp eq void (i8*)* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void %13(i8* %17) #11
  br label %18

18:                                               ; preds = %0, %5, %15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #11
  ret %"class.std::__1::set.1151"* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<24, 8>::type" }* @_ZZN2v88internal12JSListFormat19GetAvailableLocalesEvE17available_locales, i64 0, i32 2, i32 0, i64 0) to %"class.std::__1::set.1151"*)
}

declare i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal4Intl15GetStringOptionINS0_12JSListFormat4TypeEEENS_5MaybeIT_EEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcSE_RKNSt3__16vectorISE_NSF_9allocatorISE_EEEERKNSG_IS6_NSH_IS6_EEEES6_(%"class.v8::internal::Isolate"*, i64*, i8*, i8*, %"class.std::__1::vector.1161"* dereferenceable(24), %"class.std::__1::vector.1168"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.1229", align 8
  %9 = alloca %"class.std::__1::vector.1161", align 8
  %10 = bitcast %"class.std::__1::unique_ptr.1229"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = bitcast %"class.std::__1::unique_ptr.1229"* %8 to i64*
  store i64 0, i64* %11, align 8
  %12 = bitcast %"class.std::__1::vector.1161"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %4, i64 0, i32 0, i32 1
  %14 = bitcast i8*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.1161"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %7
  %22 = icmp ugt i64 %19, 2305843009213693951
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.1161"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %24) #12
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #13
  %27 = bitcast i8* %26 to i8**
  %28 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %9, i64 0, i32 0, i32 1
  %29 = bitcast i8*** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector.1161"* %9 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds i8*, i8** %27, i64 %19
  %32 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8** %31, i8*** %32, align 8
  %33 = bitcast i8*** %28 to i64*
  %34 = ptrtoint i8* %26 to i64
  %35 = icmp sgt i64 %18, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %25
  %37 = lshr exact i64 %18, 3
  %38 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %38, i64 %18, i1 false) #11
  %39 = getelementptr inbounds i8*, i8** %27, i64 %37
  %40 = ptrtoint i8** %39 to i64
  br label %41

41:                                               ; preds = %36, %25
  %42 = phi i64 [ %40, %36 ], [ %34, %25 ]
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %7, %41
  %44 = call i16 @_ZN2v88internal4Intl15GetStringOptionEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcNSt3__16vectorIS8_NS9_9allocatorIS8_EEEES8_PNS9_10unique_ptrIA_cNS9_14default_deleteISF_EEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i8* %2, %"class.std::__1::vector.1161"* nonnull %9, i8* %3, %"class.std::__1::unique_ptr.1229"* nonnull %8) #11
  %45 = trunc i16 %44 to i8
  %46 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %9, i64 0, i32 0, i32 0
  %47 = load i8**, i8*** %46, align 8
  %48 = icmp eq i8** %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = ptrtoint i8** %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %9, i64 0, i32 0, i32 1
  %52 = bitcast i8*** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast i8** %47 to i8*
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %43, %49
  %55 = icmp eq i8 %45, 0
  br i1 %55, label %90, label %56

56:                                               ; preds = %54
  %57 = icmp ugt i16 %44, 255
  br i1 %57, label %58, label %86

58:                                               ; preds = %56
  %59 = load i64, i64* %14, align 8
  %60 = load i64, i64* %16, align 8
  %61 = icmp eq i64 %59, %60
  %62 = inttoptr i64 %60 to i8**
  br i1 %61, label %85, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1229", %"class.std::__1::unique_ptr.1229"* %8, i64 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = sub i64 %59, %60
  %67 = ashr exact i64 %66, 3
  br label %68

68:                                               ; preds = %63, %74
  %69 = phi i64 [ 0, %63 ], [ %75, %74 ]
  %70 = getelementptr inbounds i8*, i8** %62, i64 %69
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @strcmp(i8* %65, i8* %71) #14
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = add nuw i64 %69, 1
  %76 = icmp ult i64 %75, %67
  br i1 %76, label %68, label %85

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.std::__1::vector.1168", %"class.std::__1::vector.1168"* %5, i64 0, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 %69
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = shl nuw i64 %82, 32
  %84 = or i64 %83, 1
  br label %90

85:                                               ; preds = %74, %58
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

86:                                               ; preds = %56
  %87 = zext i32 %6 to i64
  %88 = shl nuw i64 %87, 32
  %89 = or i64 %88, 1
  br label %90

90:                                               ; preds = %77, %54, %86
  %91 = phi i64 [ %84, %77 ], [ %89, %86 ], [ 0, %54 ]
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1229", %"class.std::__1::unique_ptr.1229"* %8, i64 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  store i8* null, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %90
  call void @_ZdaPv(i8* nonnull %93) #13
  br label %96

96:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret i64 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal4Intl15GetStringOptionINS0_12JSListFormat5StyleEEENS_5MaybeIT_EEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcSE_RKNSt3__16vectorISE_NSF_9allocatorISE_EEEERKNSG_IS6_NSH_IS6_EEEES6_(%"class.v8::internal::Isolate"*, i64*, i8*, i8*, %"class.std::__1::vector.1161"* dereferenceable(24), %"class.std::__1::vector.1177"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.1229", align 8
  %9 = alloca %"class.std::__1::vector.1161", align 8
  %10 = bitcast %"class.std::__1::unique_ptr.1229"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = bitcast %"class.std::__1::unique_ptr.1229"* %8 to i64*
  store i64 0, i64* %11, align 8
  %12 = bitcast %"class.std::__1::vector.1161"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %4, i64 0, i32 0, i32 1
  %14 = bitcast i8*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.1161"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %7
  %22 = icmp ugt i64 %19, 2305843009213693951
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.1161"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %24) #12
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #13
  %27 = bitcast i8* %26 to i8**
  %28 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %9, i64 0, i32 0, i32 1
  %29 = bitcast i8*** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector.1161"* %9 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds i8*, i8** %27, i64 %19
  %32 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8** %31, i8*** %32, align 8
  %33 = bitcast i8*** %28 to i64*
  %34 = ptrtoint i8* %26 to i64
  %35 = icmp sgt i64 %18, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %25
  %37 = lshr exact i64 %18, 3
  %38 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %38, i64 %18, i1 false) #11
  %39 = getelementptr inbounds i8*, i8** %27, i64 %37
  %40 = ptrtoint i8** %39 to i64
  br label %41

41:                                               ; preds = %36, %25
  %42 = phi i64 [ %40, %36 ], [ %34, %25 ]
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %7, %41
  %44 = call i16 @_ZN2v88internal4Intl15GetStringOptionEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcNSt3__16vectorIS8_NS9_9allocatorIS8_EEEES8_PNS9_10unique_ptrIA_cNS9_14default_deleteISF_EEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i8* %2, %"class.std::__1::vector.1161"* nonnull %9, i8* %3, %"class.std::__1::unique_ptr.1229"* nonnull %8) #11
  %45 = trunc i16 %44 to i8
  %46 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %9, i64 0, i32 0, i32 0
  %47 = load i8**, i8*** %46, align 8
  %48 = icmp eq i8** %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = ptrtoint i8** %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %9, i64 0, i32 0, i32 1
  %52 = bitcast i8*** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast i8** %47 to i8*
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %43, %49
  %55 = icmp eq i8 %45, 0
  br i1 %55, label %90, label %56

56:                                               ; preds = %54
  %57 = icmp ugt i16 %44, 255
  br i1 %57, label %58, label %86

58:                                               ; preds = %56
  %59 = load i64, i64* %14, align 8
  %60 = load i64, i64* %16, align 8
  %61 = icmp eq i64 %59, %60
  %62 = inttoptr i64 %60 to i8**
  br i1 %61, label %85, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1229", %"class.std::__1::unique_ptr.1229"* %8, i64 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = sub i64 %59, %60
  %67 = ashr exact i64 %66, 3
  br label %68

68:                                               ; preds = %63, %74
  %69 = phi i64 [ 0, %63 ], [ %75, %74 ]
  %70 = getelementptr inbounds i8*, i8** %62, i64 %69
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @strcmp(i8* %65, i8* %71) #14
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = add nuw i64 %69, 1
  %76 = icmp ult i64 %75, %67
  br i1 %76, label %68, label %85

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.std::__1::vector.1177", %"class.std::__1::vector.1177"* %5, i64 0, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 %69
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = shl nuw i64 %82, 32
  %84 = or i64 %83, 1
  br label %90

85:                                               ; preds = %74, %58
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

86:                                               ; preds = %56
  %87 = zext i32 %6 to i64
  %88 = shl nuw i64 %87, 32
  %89 = or i64 %88, 1
  br label %90

90:                                               ; preds = %77, %54, %86
  %91 = phi i64 [ %84, %77 ], [ %89, %86 ], [ 0, %54 ]
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1229", %"class.std::__1::unique_ptr.1229"* %8, i64 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  store i8* null, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %90
  call void @_ZdaPv(i8* nonnull %93) #13
  br label %96

96:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret i64 %91
}

declare void @_ZN6icu_696LocaleC1ERKS0_(%"class.icu_69::Locale"*, %"class.icu_69::Locale"* dereferenceable(224)) unnamed_addr #2

declare %"class.icu_69::ListFormatter"* @_ZN6icu_6913ListFormatter14createInstanceERKNS_6LocaleE18UListFormatterType19UListFormatterWidthR10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32, i32, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12JSListFormat15ResolvedOptionsEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 19
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %6, %15
  %17 = add i64 %16, 571
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %6, %20
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %23 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %2
  %26 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %23, i64 %21) #11
  br label %40

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64* [ %34, %33 ], [ %29, %27 ]
  %37 = ptrtoint i64* %36 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  store i64* %39, i64** %28, align 8
  store i64 %21, i64* %36, align 8
  br label %40

40:                                               ; preds = %25, %35
  %41 = phi i64* [ %26, %25 ], [ %36, %35 ]
  %42 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %3, i64* %41, i8 zeroext 0) #11
  %43 = load i64, i64* %1, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 11
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %40
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %49) #11
  br label %67

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %49, i64* %63, align 8
  br label %67

67:                                               ; preds = %52, %62
  %68 = phi i64* [ %53, %52 ], [ %63, %62 ]
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 193
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %42, i64* %69, i64* %68, i32 0) #11
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 241
  %71 = load i64, i64* %1, align 8
  %72 = add i64 %71, 19
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = lshr i32 %74, 3
  %76 = and i32 %75, 3
  switch i32 %76, label %137 [
    i32 0, label %77
    i32 1, label %97
    i32 2, label %117
  ]

77:                                               ; preds = %67
  %78 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %79 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %78, i64 0, i32 0, i32 1
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %78, i64 0, i32 1, i64 0
  br label %94

86:                                               ; preds = %80, %77
  %87 = and i64 %71, -262144
  %88 = or i64 %87, 16
  %89 = inttoptr i64 %88 to i64*
  %90 = load i64, i64* %89, align 16
  %91 = add i64 %90, -41416
  %92 = inttoptr i64 %91 to %"class.v8::internal::Isolate"*
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %92, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %94

94:                                               ; preds = %86, %84
  %95 = phi i64* [ %93, %86 ], [ %85, %84 ]
  %96 = getelementptr inbounds i64, i64* %95, i64 295
  br label %138

97:                                               ; preds = %67
  %98 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %99 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %98, i64 0, i32 0, i32 1
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %98, i64 0, i32 1, i64 0
  br label %114

106:                                              ; preds = %100, %97
  %107 = and i64 %71, -262144
  %108 = or i64 %107, 16
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 16
  %111 = add i64 %110, -41416
  %112 = inttoptr i64 %111 to %"class.v8::internal::Isolate"*
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %114

114:                                              ; preds = %106, %104
  %115 = phi i64* [ %113, %106 ], [ %105, %104 ]
  %116 = getelementptr inbounds i64, i64* %115, i64 304
  br label %138

117:                                              ; preds = %67
  %118 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %119 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 1, i64 0
  br label %134

126:                                              ; preds = %120, %117
  %127 = and i64 %71, -262144
  %128 = or i64 %127, 16
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = add i64 %130, -41416
  %132 = inttoptr i64 %131 to %"class.v8::internal::Isolate"*
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %134

134:                                              ; preds = %126, %124
  %135 = phi i64* [ %133, %126 ], [ %125, %124 ]
  %136 = getelementptr inbounds i64, i64* %135, i64 247
  br label %138

137:                                              ; preds = %67
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

138:                                              ; preds = %94, %114, %134
  %139 = phi i64* [ %136, %134 ], [ %116, %114 ], [ %96, %94 ]
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %42, i64* %70, i64* %139, i32 0) #11
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 234
  %141 = load i64, i64* %1, align 8
  %142 = add i64 %141, 19
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = lshr i32 %144, 1
  %146 = and i32 %145, 3
  switch i32 %146, label %207 [
    i32 0, label %147
    i32 1, label %167
    i32 2, label %187
  ]

147:                                              ; preds = %138
  %148 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %149 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %148, null
  br i1 %149, label %156, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %148, i64 0, i32 0, i32 1
  %152 = load i8, i8* %151, align 8, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %148, i64 0, i32 1, i64 0
  br label %164

156:                                              ; preds = %150, %147
  %157 = and i64 %141, -262144
  %158 = or i64 %157, 16
  %159 = inttoptr i64 %158 to i64*
  %160 = load i64, i64* %159, align 16
  %161 = add i64 %160, -41416
  %162 = inttoptr i64 %161 to %"class.v8::internal::Isolate"*
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %162, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %164

164:                                              ; preds = %156, %154
  %165 = phi i64* [ %163, %156 ], [ %155, %154 ]
  %166 = getelementptr inbounds i64, i64* %165, i64 368
  br label %208

167:                                              ; preds = %138
  %168 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %169 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %168, i64 0, i32 0, i32 1
  %172 = load i8, i8* %171, align 8, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %168, i64 0, i32 1, i64 0
  br label %184

176:                                              ; preds = %170, %167
  %177 = and i64 %141, -262144
  %178 = or i64 %177, 16
  %179 = inttoptr i64 %178 to i64*
  %180 = load i64, i64* %179, align 16
  %181 = add i64 %180, -41416
  %182 = inttoptr i64 %181 to %"class.v8::internal::Isolate"*
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %182, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %184

184:                                              ; preds = %176, %174
  %185 = phi i64* [ %183, %176 ], [ %175, %174 ]
  %186 = getelementptr inbounds i64, i64* %185, i64 426
  br label %208

187:                                              ; preds = %138
  %188 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %189 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %188, null
  br i1 %189, label %196, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %188, i64 0, i32 0, i32 1
  %192 = load i8, i8* %191, align 8, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %188, i64 0, i32 1, i64 0
  br label %204

196:                                              ; preds = %190, %187
  %197 = and i64 %141, -262144
  %198 = or i64 %197, 16
  %199 = inttoptr i64 %198 to i64*
  %200 = load i64, i64* %199, align 16
  %201 = add i64 %200, -41416
  %202 = inttoptr i64 %201 to %"class.v8::internal::Isolate"*
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %202, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %204

204:                                              ; preds = %196, %194
  %205 = phi i64* [ %203, %196 ], [ %195, %194 ]
  %206 = getelementptr inbounds i64, i64* %205, i64 380
  br label %208

207:                                              ; preds = %138
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

208:                                              ; preds = %164, %184, %204
  %209 = phi i64* [ %206, %204 ], [ %186, %184 ], [ %166, %164 ]
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %42, i64* %140, i64* %209, i32 0) #11
  ret i64* %42
}

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal12JSListFormat12TypeAsStringEv(%"class.v8::internal::JSListFormat"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSListFormat", %"class.v8::internal::JSListFormat"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 19
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 3
  %8 = and i32 %7, 3
  switch i32 %8, label %69 [
    i32 0, label %9
    i32 1, label %29
    i32 2, label %49
  ]

9:                                                ; preds = %1
  %10 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %11 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 1, i64 0
  br label %26

18:                                               ; preds = %12, %9
  %19 = and i64 %3, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %26

26:                                               ; preds = %16, %18
  %27 = phi i64* [ %25, %18 ], [ %17, %16 ]
  %28 = getelementptr inbounds i64, i64* %27, i64 295
  br label %70

29:                                               ; preds = %1
  %30 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %31 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %30, i64 0, i32 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %30, i64 0, i32 1, i64 0
  br label %46

38:                                               ; preds = %32, %29
  %39 = and i64 %3, -262144
  %40 = or i64 %39, 16
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 16
  %43 = add i64 %42, -41416
  %44 = inttoptr i64 %43 to %"class.v8::internal::Isolate"*
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %46

46:                                               ; preds = %36, %38
  %47 = phi i64* [ %45, %38 ], [ %37, %36 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 304
  br label %70

49:                                               ; preds = %1
  %50 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %51 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %50, i64 0, i32 0, i32 1
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %50, i64 0, i32 1, i64 0
  br label %66

58:                                               ; preds = %52, %49
  %59 = and i64 %3, -262144
  %60 = or i64 %59, 16
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 16
  %63 = add i64 %62, -41416
  %64 = inttoptr i64 %63 to %"class.v8::internal::Isolate"*
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %66

66:                                               ; preds = %56, %58
  %67 = phi i64* [ %65, %58 ], [ %57, %56 ]
  %68 = getelementptr inbounds i64, i64* %67, i64 247
  br label %70

69:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

70:                                               ; preds = %66, %46, %26
  %71 = phi i64* [ %68, %66 ], [ %48, %46 ], [ %28, %26 ]
  ret i64* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal12JSListFormat13StyleAsStringEv(%"class.v8::internal::JSListFormat"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSListFormat", %"class.v8::internal::JSListFormat"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 19
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 1
  %8 = and i32 %7, 3
  switch i32 %8, label %69 [
    i32 0, label %9
    i32 1, label %29
    i32 2, label %49
  ]

9:                                                ; preds = %1
  %10 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %11 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 1, i64 0
  br label %26

18:                                               ; preds = %12, %9
  %19 = and i64 %3, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %26

26:                                               ; preds = %16, %18
  %27 = phi i64* [ %25, %18 ], [ %17, %16 ]
  %28 = getelementptr inbounds i64, i64* %27, i64 368
  br label %70

29:                                               ; preds = %1
  %30 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %31 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %30, i64 0, i32 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %30, i64 0, i32 1, i64 0
  br label %46

38:                                               ; preds = %32, %29
  %39 = and i64 %3, -262144
  %40 = or i64 %39, 16
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 16
  %43 = add i64 %42, -41416
  %44 = inttoptr i64 %43 to %"class.v8::internal::Isolate"*
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %46

46:                                               ; preds = %36, %38
  %47 = phi i64* [ %45, %38 ], [ %37, %36 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 426
  br label %70

49:                                               ; preds = %1
  %50 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %51 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %50, i64 0, i32 0, i32 1
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %50, i64 0, i32 1, i64 0
  br label %66

58:                                               ; preds = %52, %49
  %59 = and i64 %3, -262144
  %60 = or i64 %59, 16
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 16
  %63 = add i64 %62, -41416
  %64 = inttoptr i64 %63 to %"class.v8::internal::Isolate"*
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %66

66:                                               ; preds = %56, %58
  %67 = phi i64* [ %65, %58 ], [ %57, %56 ]
  %68 = getelementptr inbounds i64, i64* %67, i64 380
  br label %70

69:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

70:                                               ; preds = %66, %46, %26
  %71 = phi i64* [ %68, %66 ], [ %48, %46 ], [ %28, %26 ]
  ret i64* %71
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12JSListFormat10FormatListEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_7JSArrayEEE(%"class.v8::internal::Isolate"*, i64* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Maybe.1253", align 8
  %5 = alloca %"class.std::__1::vector.1254", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.icu_69::FormattedList", align 8
  %8 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  call fastcc void @_ZN2v88internal12_GLOBAL__N_120ToUnicodeStringArrayEPNS0_7IsolateENS0_6HandleINS0_7JSArrayEEE(%"class.v8::Maybe.1253"* noalias nonnull %4, %"class.v8::internal::Isolate"* %0, i64* %2) #11
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %109, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::vector.1254"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11, !alias.scope !10
  %14 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %4, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.icu_69::UnicodeString"** %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !10
  %17 = bitcast %"class.std::__1::vector.1254"* %13 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !10
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 6
  %21 = icmp eq i64 %19, 0
  %22 = inttoptr i64 %18 to %"class.icu_69::UnicodeString"*
  %23 = inttoptr i64 %16 to %"class.icu_69::UnicodeString"*
  br i1 %21, label %52, label %24

24:                                               ; preds = %11
  %25 = icmp ugt i64 %20, 288230376151711743
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.1254"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #12
  unreachable

28:                                               ; preds = %24
  %29 = call i8* @_Znwm(i64 %19) #13
  %30 = bitcast i8* %29 to %"class.icu_69::UnicodeString"*
  %31 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %5, i64 0, i32 0, i32 1
  %32 = bitcast %"class.icu_69::UnicodeString"** %31 to i8**
  store i8* %29, i8** %32, align 8, !alias.scope !10
  %33 = bitcast %"class.std::__1::vector.1254"* %5 to i8**
  store i8* %29, i8** %33, align 8, !alias.scope !10
  %34 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %30, i64 %20
  %35 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.icu_69::UnicodeString"* %34, %"class.icu_69::UnicodeString"** %35, align 8, !alias.scope !10
  %36 = bitcast %"class.icu_69::UnicodeString"** %31 to i64*
  %37 = ptrtoint i8* %29 to i64
  %38 = icmp eq %"class.icu_69::UnicodeString"* %22, %23
  br i1 %38, label %49, label %39

39:                                               ; preds = %28, %39
  %40 = phi %"class.icu_69::UnicodeString"* [ %43, %39 ], [ %30, %28 ]
  %41 = phi %"class.icu_69::UnicodeString"* [ %42, %39 ], [ %22, %28 ]
  call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %40, %"class.icu_69::UnicodeString"* dereferenceable(64) %41) #11
  %42 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %41, i64 1
  %43 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %40, i64 1
  %44 = icmp eq %"class.icu_69::UnicodeString"* %42, %23
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = ptrtoint %"class.icu_69::UnicodeString"* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %5, i64 0, i32 0, i32 0
  %48 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %47, align 8
  br label %49

49:                                               ; preds = %45, %28
  %50 = phi %"class.icu_69::UnicodeString"* [ %30, %28 ], [ %48, %45 ]
  %51 = phi i64 [ %37, %28 ], [ %46, %45 ]
  store i64 %51, i64* %36, align 8, !alias.scope !10
  br label %52

52:                                               ; preds = %49, %11
  %53 = phi i64 [ %51, %49 ], [ 0, %11 ]
  %54 = phi %"class.icu_69::UnicodeString"* [ %50, %49 ], [ null, %11 ]
  %55 = load i64, i64* %1, align 8
  %56 = and i64 %55, -4294967296
  %57 = add i64 %55, 15
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %56, %60
  %62 = add i64 %61, 3
  %63 = inttoptr i64 %62 to %"struct.v8::internal::ManagedPtrDestructor"**
  %64 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %63, align 1
  %65 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %64, i64 0, i32 3
  %66 = bitcast i8** %65 to %"class.std::__1::shared_ptr.1236"**
  %67 = load %"class.std::__1::shared_ptr.1236"*, %"class.std::__1::shared_ptr.1236"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::shared_ptr.1236", %"class.std::__1::shared_ptr.1236"* %67, i64 0, i32 0
  %69 = load %"class.icu_69::ListFormatter"*, %"class.icu_69::ListFormatter"** %68, align 8
  %70 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #11
  store i32 0, i32* %6, align 4
  %71 = bitcast %"class.icu_69::FormattedList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  %72 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %5, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %5, i64 0, i32 0, i32 1
  %74 = ptrtoint %"class.icu_69::UnicodeString"* %54 to i64
  %75 = sub i64 %53, %74
  %76 = lshr exact i64 %75, 6
  %77 = trunc i64 %76 to i32
  call void @_ZNK6icu_6913ListFormatter20formatStringsToValueEPKNS_13UnicodeStringEiR10UErrorCode(%"class.icu_69::FormattedList"* nonnull sret %7, %"class.icu_69::ListFormatter"* %69, %"class.icu_69::UnicodeString"* %54, i32 %77, i32* nonnull dereferenceable(4) %6) #11
  %78 = load i32, i32* %6, align 4
  %79 = icmp slt i32 %78, 1
  br i1 %79, label %85, label %80

80:                                               ; preds = %52
  %81 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %82 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %81, i32 10, i64* null, i64* null, i64* null) #11
  %83 = load i64, i64* %82, align 8
  %84 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %83, %"class.v8::internal::MessageLocation"* null) #11
  br label %88

85:                                               ; preds = %52
  %86 = getelementptr inbounds %"class.icu_69::FormattedList", %"class.icu_69::FormattedList"* %7, i64 0, i32 0
  %87 = call i64* @_ZN2v88internal4Intl17FormattedToStringEPNS0_7IsolateERKN6icu_6914FormattedValueE(%"class.v8::internal::Isolate"* %0, %"class.icu_69::FormattedValue"* nonnull dereferenceable(8) %86) #11
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i64* [ %87, %85 ], [ null, %80 ]
  call void @_ZN6icu_6913FormattedListD1Ev(%"class.icu_69::FormattedList"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #11
  %90 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %72, align 8
  %91 = icmp eq %"class.icu_69::UnicodeString"* %90, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.icu_69::UnicodeString"* %90 to i8*
  %94 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %73, align 8
  %95 = icmp eq %"class.icu_69::UnicodeString"* %94, %90
  br i1 %95, label %106, label %96

96:                                               ; preds = %92, %96
  %97 = phi %"class.icu_69::UnicodeString"* [ %98, %96 ], [ %94, %92 ]
  %98 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %97, i64 -1
  %99 = bitcast %"class.icu_69::UnicodeString"* %98 to void (%"class.icu_69::UnicodeString"*)***
  %100 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %99, align 8
  %101 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %100, align 8
  call void %101(%"class.icu_69::UnicodeString"* %98) #11
  %102 = icmp eq %"class.icu_69::UnicodeString"* %98, %90
  br i1 %102, label %103, label %96

103:                                              ; preds = %96
  %104 = bitcast %"class.std::__1::vector.1254"* %5 to i8**
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %103, %92
  %107 = phi i8* [ %105, %103 ], [ %93, %92 ]
  store %"class.icu_69::UnicodeString"* %90, %"class.icu_69::UnicodeString"** %73, align 8
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %106, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br label %109

109:                                              ; preds = %108, %3
  %110 = phi i64* [ %89, %108 ], [ null, %3 ]
  %111 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %4, i64 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %112, align 8
  %114 = icmp eq %"class.icu_69::UnicodeString"* %113, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.icu_69::UnicodeString"* %113 to i8*
  %117 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %4, i64 0, i32 1, i32 0, i32 1
  %118 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %117, align 8
  %119 = icmp eq %"class.icu_69::UnicodeString"* %118, %113
  br i1 %119, label %130, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.icu_69::UnicodeString"* [ %122, %120 ], [ %118, %115 ]
  %122 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %121, i64 -1
  %123 = bitcast %"class.icu_69::UnicodeString"* %122 to void (%"class.icu_69::UnicodeString"*)***
  %124 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %123, align 8
  %125 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %124, align 8
  call void %125(%"class.icu_69::UnicodeString"* %122) #11
  %126 = icmp eq %"class.icu_69::UnicodeString"* %122, %113
  br i1 %126, label %127, label %120

127:                                              ; preds = %120
  %128 = bitcast %"class.std::__1::vector.1254"* %111 to i8**
  %129 = load i8*, i8** %128, align 8
  br label %130

130:                                              ; preds = %127, %115
  %131 = phi i8* [ %129, %127 ], [ %116, %115 ]
  store %"class.icu_69::UnicodeString"* %113, %"class.icu_69::UnicodeString"** %117, align 8
  call void @_ZdlPv(i8* %131) #13
  br label %132

132:                                              ; preds = %109, %130
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret i64* %110
}

declare i64* @_ZN2v88internal4Intl17FormattedToStringEPNS0_7IsolateERKN6icu_6914FormattedValueE(%"class.v8::internal::Isolate"*, %"class.icu_69::FormattedValue"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12JSListFormat17FormatListToPartsEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_7JSArrayEEE(%"class.v8::internal::Isolate"*, i64* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::ConstrainedFieldPosition", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.v8::Maybe.1253", align 8
  %8 = alloca %"class.std::__1::vector.1254", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.icu_69::FormattedList", align 8
  %11 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  call fastcc void @_ZN2v88internal12_GLOBAL__N_120ToUnicodeStringArrayEPNS0_7IsolateENS0_6HandleINS0_7JSArrayEEE(%"class.v8::Maybe.1253"* noalias nonnull %7, %"class.v8::internal::Isolate"* %0, i64* %2) #11
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %167, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::vector.1254"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #11, !alias.scope !13
  %17 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %7, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.icu_69::UnicodeString"** %17 to i64*
  %19 = load i64, i64* %18, align 8, !noalias !13
  %20 = bitcast %"class.std::__1::vector.1254"* %16 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !13
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 6
  %24 = icmp eq i64 %22, 0
  %25 = inttoptr i64 %21 to %"class.icu_69::UnicodeString"*
  %26 = inttoptr i64 %19 to %"class.icu_69::UnicodeString"*
  br i1 %24, label %55, label %27

27:                                               ; preds = %14
  %28 = icmp ugt i64 %23, 288230376151711743
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.1254"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %30) #12
  unreachable

31:                                               ; preds = %27
  %32 = call i8* @_Znwm(i64 %22) #13
  %33 = bitcast i8* %32 to %"class.icu_69::UnicodeString"*
  %34 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %8, i64 0, i32 0, i32 1
  %35 = bitcast %"class.icu_69::UnicodeString"** %34 to i8**
  store i8* %32, i8** %35, align 8, !alias.scope !13
  %36 = bitcast %"class.std::__1::vector.1254"* %8 to i8**
  store i8* %32, i8** %36, align 8, !alias.scope !13
  %37 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %33, i64 %23
  %38 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.icu_69::UnicodeString"* %37, %"class.icu_69::UnicodeString"** %38, align 8, !alias.scope !13
  %39 = bitcast %"class.icu_69::UnicodeString"** %34 to i64*
  %40 = ptrtoint i8* %32 to i64
  %41 = icmp eq %"class.icu_69::UnicodeString"* %25, %26
  br i1 %41, label %52, label %42

42:                                               ; preds = %31, %42
  %43 = phi %"class.icu_69::UnicodeString"* [ %46, %42 ], [ %33, %31 ]
  %44 = phi %"class.icu_69::UnicodeString"* [ %45, %42 ], [ %25, %31 ]
  call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %43, %"class.icu_69::UnicodeString"* dereferenceable(64) %44) #11
  %45 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %44, i64 1
  %46 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %43, i64 1
  %47 = icmp eq %"class.icu_69::UnicodeString"* %45, %26
  br i1 %47, label %48, label %42

48:                                               ; preds = %42
  %49 = ptrtoint %"class.icu_69::UnicodeString"* %46 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %8, i64 0, i32 0, i32 0
  %51 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %50, align 8
  br label %52

52:                                               ; preds = %48, %31
  %53 = phi %"class.icu_69::UnicodeString"* [ %33, %31 ], [ %51, %48 ]
  %54 = phi i64 [ %40, %31 ], [ %49, %48 ]
  store i64 %54, i64* %39, align 8, !alias.scope !13
  br label %55

55:                                               ; preds = %52, %14
  %56 = phi i64 [ %54, %52 ], [ 0, %14 ]
  %57 = phi %"class.icu_69::UnicodeString"* [ %53, %52 ], [ null, %14 ]
  %58 = load i64, i64* %1, align 8
  %59 = and i64 %58, -4294967296
  %60 = add i64 %58, 15
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %59, %63
  %65 = add i64 %64, 3
  %66 = inttoptr i64 %65 to %"struct.v8::internal::ManagedPtrDestructor"**
  %67 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %66, align 1
  %68 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %67, i64 0, i32 3
  %69 = bitcast i8** %68 to %"class.std::__1::shared_ptr.1236"**
  %70 = load %"class.std::__1::shared_ptr.1236"*, %"class.std::__1::shared_ptr.1236"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::shared_ptr.1236", %"class.std::__1::shared_ptr.1236"* %70, i64 0, i32 0
  %72 = load %"class.icu_69::ListFormatter"*, %"class.icu_69::ListFormatter"** %71, align 8
  %73 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #11
  store i32 0, i32* %9, align 4
  %74 = bitcast %"class.icu_69::FormattedList"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #11
  %75 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %8, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %8, i64 0, i32 0, i32 1
  %77 = ptrtoint %"class.icu_69::UnicodeString"* %57 to i64
  %78 = sub i64 %56, %77
  %79 = lshr exact i64 %78, 6
  %80 = trunc i64 %79 to i32
  call void @_ZNK6icu_6913ListFormatter20formatStringsToValueEPKNS_13UnicodeStringEiR10UErrorCode(%"class.icu_69::FormattedList"* nonnull sret %10, %"class.icu_69::ListFormatter"* %72, %"class.icu_69::UnicodeString"* %57, i32 %80, i32* nonnull dereferenceable(4) %9) #11
  %81 = load i32, i32* %9, align 4
  %82 = icmp slt i32 %81, 1
  br i1 %82, label %88, label %83

83:                                               ; preds = %55
  %84 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %85 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %84, i32 10, i64* null, i64* null, i64* null) #11
  %86 = load i64, i64* %85, align 8
  %87 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %86, %"class.v8::internal::MessageLocation"* null) #11
  br label %146

88:                                               ; preds = %55
  %89 = getelementptr inbounds %"class.icu_69::FormattedList", %"class.icu_69::FormattedList"* %10, i64 0, i32 0
  %90 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %91 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %90, i8 zeroext 3, i32 0, i32 0, i32 1, i8 zeroext 0) #11
  %92 = bitcast %"class.icu_69::ConstrainedFieldPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #11
  call void @_ZN6icu_6924ConstrainedFieldPositionC1Ev(%"class.icu_69::ConstrainedFieldPosition"* nonnull %4) #11
  call void @_ZN6icu_6924ConstrainedFieldPosition17constrainCategoryEi(%"class.icu_69::ConstrainedFieldPosition"* nonnull %4, i32 3) #11
  %93 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #11
  store i32 0, i32* %5, align 4
  %94 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %94) #11
  %95 = bitcast %"class.icu_69::FormattedList"* %10 to void (%"class.icu_69::UnicodeString"*, %"class.icu_69::FormattedValue"*, i32*)***
  %96 = load void (%"class.icu_69::UnicodeString"*, %"class.icu_69::FormattedValue"*, i32*)**, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::FormattedValue"*, i32*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*, %"class.icu_69::FormattedValue"*, i32*)*, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::FormattedValue"*, i32*)** %96, i64 2
  %98 = load void (%"class.icu_69::UnicodeString"*, %"class.icu_69::FormattedValue"*, i32*)*, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::FormattedValue"*, i32*)** %97, align 8
  call void %98(%"class.icu_69::UnicodeString"* nonnull sret %6, %"class.icu_69::FormattedValue"* nonnull %89, i32* nonnull dereferenceable(4) %5) #11
  %99 = bitcast %"class.icu_69::FormattedList"* %10 to i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)***
  %100 = load i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)**, i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)*** %99, align 8
  %101 = getelementptr inbounds i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)*, i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)** %100, i64 5
  %102 = load i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)*, i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)** %101, align 8
  %103 = call signext i8 %102(%"class.icu_69::FormattedValue"* nonnull %89, %"class.icu_69::ConstrainedFieldPosition"* nonnull dereferenceable(32) %4, i32* nonnull dereferenceable(4) %5) #11
  %104 = icmp eq i8 %103, 0
  %105 = load i32, i32* %5, align 4
  %106 = icmp sgt i32 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %135, label %108

108:                                              ; preds = %88
  %109 = getelementptr inbounds %"class.icu_69::ConstrainedFieldPosition", %"class.icu_69::ConstrainedFieldPosition"* %4, i64 0, i32 2
  %110 = getelementptr inbounds %"class.icu_69::ConstrainedFieldPosition", %"class.icu_69::ConstrainedFieldPosition"* %4, i64 0, i32 3
  %111 = getelementptr inbounds %"class.icu_69::ConstrainedFieldPosition", %"class.icu_69::ConstrainedFieldPosition"* %4, i64 0, i32 1
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 319
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 192
  br label %114

114:                                              ; preds = %125, %108
  %115 = phi i32 [ 0, %108 ], [ %121, %125 ]
  %116 = load i32, i32* %109, align 4
  %117 = load i32, i32* %110, align 8
  %118 = call i64* @_ZN2v88internal4Intl8ToStringEPNS0_7IsolateERKN6icu_6913UnicodeStringEii(%"class.v8::internal::Isolate"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6, i32 %116, i32 %117) #11
  %119 = icmp eq i64* %118, null
  br i1 %119, label %144, label %120

120:                                              ; preds = %114
  %121 = add nuw nsw i32 %115, 1
  %122 = load i32, i32* %111, align 8
  switch i32 %122, label %124 [
    i32 0, label %125
    i32 1, label %123
  ]

123:                                              ; preds = %120
  br label %125

124:                                              ; preds = %120
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

125:                                              ; preds = %123, %120
  %126 = phi i64* [ %112, %123 ], [ %113, %120 ]
  call void @_ZN2v88internal4Intl10AddElementEPNS0_7IsolateENS0_6HandleINS0_7JSArrayEEEiNS4_INS0_6StringEEES8_(%"class.v8::internal::Isolate"* %0, i64* %91, i32 %115, i64* %126, i64* nonnull %118) #11
  %127 = load i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)**, i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)*** %99, align 8
  %128 = getelementptr inbounds i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)*, i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)** %127, i64 5
  %129 = load i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)*, i8 (%"class.icu_69::FormattedValue"*, %"class.icu_69::ConstrainedFieldPosition"*, i32*)** %128, align 8
  %130 = call signext i8 %129(%"class.icu_69::FormattedValue"* nonnull %89, %"class.icu_69::ConstrainedFieldPosition"* nonnull dereferenceable(32) %4, i32* nonnull dereferenceable(4) %5) #11
  %131 = icmp eq i8 %130, 0
  %132 = load i32, i32* %5, align 4
  %133 = icmp sgt i32 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %114

135:                                              ; preds = %125, %88
  %136 = phi i32 [ %105, %88 ], [ %132, %125 ]
  %137 = icmp slt i32 %136, 1
  br i1 %137, label %142, label %138

138:                                              ; preds = %135
  %139 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %90, i32 10, i64* null, i64* null, i64* null) #11
  %140 = load i64, i64* %139, align 8
  %141 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %140, %"class.v8::internal::MessageLocation"* null) #11
  br label %144

142:                                              ; preds = %135
  %143 = load i64, i64* %91, align 8
  call void @_ZN2v88internal8JSObject16ValidateElementsES1_(i64 %143) #11
  br label %144

144:                                              ; preds = %114, %142, %138
  %145 = phi i64* [ %91, %142 ], [ null, %138 ], [ null, %114 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #11
  call void @_ZN6icu_6924ConstrainedFieldPositionD1Ev(%"class.icu_69::ConstrainedFieldPosition"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #11
  br label %146

146:                                              ; preds = %144, %83
  %147 = phi i64* [ %145, %144 ], [ null, %83 ]
  call void @_ZN6icu_6913FormattedListD1Ev(%"class.icu_69::FormattedList"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #11
  %148 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %75, align 8
  %149 = icmp eq %"class.icu_69::UnicodeString"* %148, null
  br i1 %149, label %166, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.icu_69::UnicodeString"* %148 to i8*
  %152 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %76, align 8
  %153 = icmp eq %"class.icu_69::UnicodeString"* %152, %148
  br i1 %153, label %164, label %154

154:                                              ; preds = %150, %154
  %155 = phi %"class.icu_69::UnicodeString"* [ %156, %154 ], [ %152, %150 ]
  %156 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %155, i64 -1
  %157 = bitcast %"class.icu_69::UnicodeString"* %156 to void (%"class.icu_69::UnicodeString"*)***
  %158 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %157, align 8
  %159 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %158, align 8
  call void %159(%"class.icu_69::UnicodeString"* %156) #11
  %160 = icmp eq %"class.icu_69::UnicodeString"* %156, %148
  br i1 %160, label %161, label %154

161:                                              ; preds = %154
  %162 = bitcast %"class.std::__1::vector.1254"* %8 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %150
  %165 = phi i8* [ %163, %161 ], [ %151, %150 ]
  store %"class.icu_69::UnicodeString"* %148, %"class.icu_69::UnicodeString"** %76, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %164, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  br label %167

167:                                              ; preds = %166, %3
  %168 = phi i64* [ %147, %166 ], [ null, %3 ]
  %169 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %7, i64 0, i32 1
  %170 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %169, i64 0, i32 0, i32 0
  %171 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %170, align 8
  %172 = icmp eq %"class.icu_69::UnicodeString"* %171, null
  br i1 %172, label %190, label %173

173:                                              ; preds = %167
  %174 = bitcast %"class.icu_69::UnicodeString"* %171 to i8*
  %175 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %7, i64 0, i32 1, i32 0, i32 1
  %176 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %175, align 8
  %177 = icmp eq %"class.icu_69::UnicodeString"* %176, %171
  br i1 %177, label %188, label %178

178:                                              ; preds = %173, %178
  %179 = phi %"class.icu_69::UnicodeString"* [ %180, %178 ], [ %176, %173 ]
  %180 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %179, i64 -1
  %181 = bitcast %"class.icu_69::UnicodeString"* %180 to void (%"class.icu_69::UnicodeString"*)***
  %182 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %181, align 8
  %183 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %182, align 8
  call void %183(%"class.icu_69::UnicodeString"* %180) #11
  %184 = icmp eq %"class.icu_69::UnicodeString"* %180, %171
  br i1 %184, label %185, label %178

185:                                              ; preds = %178
  %186 = bitcast %"class.std::__1::vector.1254"* %169 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %185, %173
  %189 = phi i8* [ %187, %185 ], [ %174, %173 ]
  store %"class.icu_69::UnicodeString"* %171, %"class.icu_69::UnicodeString"** %175, align 8
  call void @_ZdlPv(i8* %189) #13
  br label %190

190:                                              ; preds = %167, %188
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret i64* %168
}

declare i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1205"* dereferenceable(16), i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1142"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1142"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1142"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair.1218"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN6icu_6924ConstrainedFieldPositionC1Ev(%"class.icu_69::ConstrainedFieldPosition"*) unnamed_addr #2

declare void @_ZN6icu_6924ConstrainedFieldPosition17constrainCategoryEi(%"class.icu_69::ConstrainedFieldPosition"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal4Intl8ToStringEPNS0_7IsolateERKN6icu_6913UnicodeStringEii(%"class.v8::internal::Isolate"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal4Intl10AddElementEPNS0_7IsolateENS0_6HandleINS0_7JSArrayEEEiNS4_INS0_6StringEEES8_(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject16ValidateElementsES1_(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6icu_6924ConstrainedFieldPositionD1Ev(%"class.icu_69::ConstrainedFieldPosition"*) unnamed_addr #3

declare i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i8 zeroext, i32, i32, i32, i8 zeroext) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1152"*, %"class.std::__1::__tree_node.1223"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1223"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1223"* %1 to %"class.std::__1::__tree_node.1223"**
  %6 = load %"class.std::__1::__tree_node.1223"*, %"class.std::__1::__tree_node.1223"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1152"* %0, %"class.std::__1::__tree_node.1223"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1223", %"class.std::__1::__tree_node.1223"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1223"**
  %9 = load %"class.std::__1::__tree_node.1223"*, %"class.std::__1::__tree_node.1223"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1152"* %0, %"class.std::__1::__tree_node.1223"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1223", %"class.std::__1::__tree_node.1223"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.1223"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEENS_21__tree_const_iteratorIS8_SP_lEERKT_DpOT0_(%"class.std::__1::__tree.1142"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.1218"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_(%"class.std::__1::__tree.1142"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %13, label %67

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 80) #13, !noalias !16
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast %"struct.std::__1::pair.1218"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !16
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"struct.std::__1::pair.1218"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #11, !noalias !16
  br label %28

22:                                               ; preds = %13
  %23 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !16
  %26 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #11, !noalias !16
  br label %28

28:                                               ; preds = %22, %20
  %29 = getelementptr inbounds i8, i8* %14, i64 56
  %30 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %3, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1, !noalias !16
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %36, i64 24, i1 false) #11, !noalias !16
  br label %43

37:                                               ; preds = %28
  %38 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !noalias !16
  %41 = getelementptr inbounds %"struct.std::__1::pair.1218", %"struct.std::__1::pair.1218"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %38, i8* %40, i64 %42) #11, !noalias !16
  br label %43

43:                                               ; preds = %35, %37
  %44 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast i8* %14 to %"class.std::__1::__tree_node"*
  %47 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %48 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #11
  %49 = bitcast i8* %48 to i64*
  store i64 %45, i64* %49, align 8
  %50 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree.1142", %"class.std::__1::__tree.1142"* %0, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %43
  %57 = ptrtoint %"class.std::__1::__tree_node_base"* %54 to i64
  %58 = bitcast %"class.std::__1::__tree.1142"* %0 to i64*
  store i64 %57, i64* %58, align 8
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %60

60:                                               ; preds = %56, %43
  %61 = phi %"class.std::__1::__tree_node_base"* [ %47, %43 ], [ %59, %56 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree.1142", %"class.std::__1::__tree.1142"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %63, %"class.std::__1::__tree_node_base"* %61) #11
  %64 = getelementptr inbounds %"class.std::__1::__tree.1142", %"class.std::__1::__tree.1142"* %0, i64 0, i32 2, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %64, align 8
  br label %67

67:                                               ; preds = %60, %4
  %68 = phi i8 [ 1, %60 ], [ 0, %4 ]
  %69 = phi %"class.std::__1::__tree_node"* [ %46, %60 ], [ %11, %4 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %71 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %70, 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %71, i8 %68, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_(%"class.std::__1::__tree.1142"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.1142", %"class.std::__1::__tree.1142"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %46, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %35 = select i1 %23, i8* %33, i8* %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %39 = select i1 %14, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %35, i8* %39, i64 %29) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %31, %9
  %43 = icmp ult i64 %27, %19
  br i1 %43, label %46, label %120

44:                                               ; preds = %31
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %5, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree.1142", %"class.std::__1::__tree.1142"* %0, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %1
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br i1 %49, label %109, label %52

52:                                               ; preds = %46
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %51, %52 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %70, label %54

59:                                               ; preds = %52, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %64, %59 ], [ %1, %52 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %59, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  br label %70

70:                                               ; preds = %54, %68
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %54 ]
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1
  %74 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1, i32 1
  %87 = bitcast %"class.std::__1::__tree_node_base"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %84 to i64
  %90 = select i1 %85, i64 %88, i64 %89
  %91 = icmp ult i64 %81, %90
  %92 = select i1 %91, i64 %81, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %70
  %95 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8*
  %98 = select i1 %85, i8* %96, i8* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %102 = select i1 %77, i8* %100, i8* %101
  %103 = tail call i32 @memcmp(i8* %98, i8* %102, i64 %92) #11
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94, %70
  %106 = icmp ult i64 %90, %81
  br i1 %106, label %109, label %118

107:                                              ; preds = %94
  %108 = icmp slt i32 %103, 0
  br i1 %108, label %109, label %118

109:                                              ; preds = %46, %105, %107
  %110 = phi i64 [ %72, %107 ], [ %72, %105 ], [ %6, %46 ]
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %208

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %110, i64* %115, align 8
  %116 = inttoptr i64 %110 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 1
  br label %208

118:                                              ; preds = %105, %107
  %119 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.1142"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  br label %208

120:                                              ; preds = %42
  br i1 %30, label %135, label %121

121:                                              ; preds = %120
  %122 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %127 = select i1 %14, i8* %123, i8* %126
  %128 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %129 = select i1 %23, i8* %125, i8* %128
  br label %130

130:                                              ; preds = %121, %44
  %131 = phi i8* [ %129, %121 ], [ %35, %44 ]
  %132 = phi i8* [ %127, %121 ], [ %39, %44 ]
  %133 = tail call i32 @memcmp(i8* %132, i8* %131, i64 %29) #11
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130, %120
  br i1 %28, label %138, label %205

136:                                              ; preds = %130
  %137 = icmp slt i32 %133, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %135, %136
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_end_node"**
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %143
  br i1 %149, label %166, label %157

150:                                              ; preds = %138, %150
  %151 = phi %"class.std::__1::__tree_node_base"* [ %153, %150 ], [ %140, %138 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %150

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0
  br label %166

157:                                              ; preds = %142, %157
  %158 = phi %"class.std::__1::__tree_end_node"** [ %161, %157 ], [ %145, %142 ]
  %159 = bitcast %"class.std::__1::__tree_end_node"** %158 to %"class.std::__1::__tree_node_base"**
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 2
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %160
  br i1 %165, label %166, label %157

166:                                              ; preds = %157, %155, %142
  %167 = phi %"class.std::__1::__tree_end_node"* [ %156, %155 ], [ %146, %142 ], [ %162, %157 ]
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, %7
  br i1 %168, label %198, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 4
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 5
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = icmp ult i64 %179, %27
  %181 = select i1 %180, i64 %179, i64 %27
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %187 = select i1 %23, i8* %185, i8* %186
  %188 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8*
  %191 = select i1 %174, i8* %189, i8* %190
  %192 = tail call i32 @memcmp(i8* %187, i8* %191, i64 %181) #11
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %183, %169
  %195 = icmp ult i64 %27, %179
  br i1 %195, label %198, label %203

196:                                              ; preds = %183
  %197 = icmp slt i32 %192, 0
  br i1 %197, label %198, label %203

198:                                              ; preds = %194, %166, %196
  br i1 %141, label %199, label %201

199:                                              ; preds = %198
  %200 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %200, align 8
  br label %208

201:                                              ; preds = %198
  store %"class.std::__1::__tree_end_node"* %167, %"class.std::__1::__tree_end_node"** %2, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  br label %208

203:                                              ; preds = %194, %196
  %204 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.1142"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  br label %208

205:                                              ; preds = %135, %136
  %206 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %206, align 8
  %207 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %207, align 8
  br label %208

208:                                              ; preds = %199, %201, %203, %112, %114, %118, %205
  %209 = phi %"class.std::__1::__tree_node_base"** [ %3, %205 ], [ %113, %112 ], [ %117, %114 ], [ %119, %118 ], [ %139, %199 ], [ %202, %201 ], [ %204, %203 ]
  ret %"class.std::__1::__tree_node_base"** %209
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.1142"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.1142", %"class.std::__1::__tree.1142"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.1142", %"class.std::__1::__tree.1142"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare i16 @_ZN2v88internal4Intl15GetStringOptionEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKcNSt3__16vectorIS8_NS9_9allocatorIS8_EEEES8_PNS9_10unique_ptrIA_cNS9_14default_deleteISF_EEEE(%"class.v8::internal::Isolate"*, i64*, i8*, %"class.std::__1::vector.1161"*, i8*, %"class.std::__1::unique_ptr.1229"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal7ManagedIN6icu_6913ListFormatterEE10DestructorEPv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to %"class.std::__1::__shared_weak_count"**
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %10 = atomicrmw add i64* %9, i64 -1 acq_rel
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0
  %14 = bitcast %"class.std::__1::__shared_weak_count"* %6 to void (%"class.std::__1::__shared_count"*)***
  %15 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %15, i64 2
  %17 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %16, align 8
  tail call void %17(%"class.std::__1::__shared_count"* %13) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %6) #11
  br label %18

18:                                               ; preds = %3, %8, %12
  tail call void @_ZdlPv(i8* nonnull %0) #13
  br label %19

19:                                               ; preds = %18, %1
  ret void
}

declare i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64*, i8*, void (%"class.v8::WeakCallbackInfo"*)*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal22ManagedObjectFinalizerERKNS_16WeakCallbackInfoIvEE(%"class.v8::WeakCallbackInfo"* dereferenceable(40)) #2

declare void @_ZN2v88internal7Isolate28RegisterManagedPtrDestructorEPNS0_20ManagedPtrDestructorE(%"class.v8::internal::Isolate"*, %"struct.v8::internal::ManagedPtrDestructor"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #11
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.icu_69::ListFormatter"*, %"class.icu_69::ListFormatter"** %2, align 8
  %4 = icmp eq %"class.icu_69::ListFormatter"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.icu_69::ListFormatter"* %3 to void (%"class.icu_69::ListFormatter"*)***
  %7 = load void (%"class.icu_69::ListFormatter"*)**, void (%"class.icu_69::ListFormatter"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.icu_69::ListFormatter"*)*, void (%"class.icu_69::ListFormatter"*)** %7, i64 1
  %9 = load void (%"class.icu_69::ListFormatter"*)*, void (%"class.icu_69::ListFormatter"*)** %8, align 8
  tail call void %9(%"class.icu_69::ListFormatter"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN6icu_6913ListFormatterENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_120ToUnicodeStringArrayEPNS0_7IsolateENS0_6HandleINS0_7JSArrayEEE(%"class.v8::Maybe.1253"* noalias, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.1254", align 8
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = load i64, i64* %2, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 10
  %14 = inttoptr i64 %13 to i8*
  %15 = load i8, i8* %14, align 1
  %16 = lshr i8 %15, 2
  %17 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %18 = zext i8 %16 to i64
  %19 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %17, i64 %18
  %20 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %19, align 8
  %21 = bitcast %"class.v8::internal::ElementsAccessor"* %20 to i64 (%"class.v8::internal::ElementsAccessor"*, i64)***
  %22 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64)**, i64 (%"class.v8::internal::ElementsAccessor"*, i64)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.v8::internal::ElementsAccessor"*, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64)** %22, i64 7
  %24 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64)** %23, align 8
  %25 = tail call i64 %24(%"class.v8::internal::ElementsAccessor"* %20, i64 %6) #11
  %26 = bitcast %"class.std::__1::vector.1254"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #11
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %3
  %29 = bitcast %"class.v8::internal::ElementsAccessor"* %20 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)***
  %30 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  %31 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %4, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.icu_69::UnicodeString"** %31 to i64*
  br label %100

34:                                               ; preds = %139
  %35 = load i64, i64* %33, align 8, !noalias !19
  %36 = bitcast %"class.std::__1::vector.1254"* %4 to i64*
  %37 = load i64, i64* %36, align 8, !noalias !19
  %38 = inttoptr i64 %37 to %"class.icu_69::UnicodeString"*
  br label %39

39:                                               ; preds = %3, %34
  %40 = phi %"class.icu_69::UnicodeString"* [ %38, %34 ], [ null, %3 ]
  %41 = phi i64 [ %37, %34 ], [ 0, %3 ]
  %42 = phi i64 [ %35, %34 ], [ 0, %3 ]
  %43 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %0, i64 0, i32 0
  store i8 1, i8* %43, align 8, !alias.scope !19
  %44 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %0, i64 0, i32 1
  %45 = bitcast %"class.std::__1::vector.1254"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #11, !alias.scope !19
  %46 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %4, i64 0, i32 0, i32 1
  %47 = sub i64 %42, %41
  %48 = ashr exact i64 %47, 6
  %49 = icmp eq i64 %47, 0
  %50 = inttoptr i64 %41 to %"class.icu_69::UnicodeString"*
  %51 = inttoptr i64 %42 to %"class.icu_69::UnicodeString"*
  br i1 %49, label %80, label %52

52:                                               ; preds = %39
  %53 = icmp ugt i64 %48, 288230376151711743
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.1254"* %44 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #12
  unreachable

56:                                               ; preds = %52
  %57 = call i8* @_Znwm(i64 %47) #13
  %58 = bitcast i8* %57 to %"class.icu_69::UnicodeString"*
  %59 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %0, i64 0, i32 1, i32 0, i32 1
  %60 = bitcast %"class.icu_69::UnicodeString"** %59 to i8**
  store i8* %57, i8** %60, align 8, !alias.scope !19
  %61 = bitcast %"class.std::__1::vector.1254"* %44 to i8**
  store i8* %57, i8** %61, align 8, !alias.scope !19
  %62 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %58, i64 %48
  %63 = getelementptr inbounds %"class.v8::Maybe.1253", %"class.v8::Maybe.1253"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.icu_69::UnicodeString"* %62, %"class.icu_69::UnicodeString"** %63, align 8, !alias.scope !19
  %64 = bitcast %"class.icu_69::UnicodeString"** %59 to i64*
  %65 = ptrtoint i8* %57 to i64
  %66 = icmp eq %"class.icu_69::UnicodeString"* %50, %51
  br i1 %66, label %77, label %67

67:                                               ; preds = %56, %67
  %68 = phi %"class.icu_69::UnicodeString"* [ %71, %67 ], [ %58, %56 ]
  %69 = phi %"class.icu_69::UnicodeString"* [ %70, %67 ], [ %50, %56 ]
  call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %68, %"class.icu_69::UnicodeString"* dereferenceable(64) %69) #11
  %70 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %69, i64 1
  %71 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %68, i64 1
  %72 = icmp eq %"class.icu_69::UnicodeString"* %70, %51
  br i1 %72, label %73, label %67

73:                                               ; preds = %67
  %74 = ptrtoint %"class.icu_69::UnicodeString"* %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %4, i64 0, i32 0, i32 0
  %76 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %75, align 8
  br label %77

77:                                               ; preds = %73, %56
  %78 = phi %"class.icu_69::UnicodeString"* [ %40, %56 ], [ %76, %73 ]
  %79 = phi i64 [ %65, %56 ], [ %74, %73 ]
  store i64 %79, i64* %64, align 8, !alias.scope !19
  br label %80

80:                                               ; preds = %39, %77
  %81 = phi %"class.icu_69::UnicodeString"* [ %40, %39 ], [ %78, %77 ]
  %82 = icmp eq %"class.icu_69::UnicodeString"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.icu_69::UnicodeString"* %81 to i8*
  %85 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %46, align 8
  %86 = icmp eq %"class.icu_69::UnicodeString"* %85, %81
  br i1 %86, label %97, label %87

87:                                               ; preds = %83, %87
  %88 = phi %"class.icu_69::UnicodeString"* [ %89, %87 ], [ %85, %83 ]
  %89 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %88, i64 -1
  %90 = bitcast %"class.icu_69::UnicodeString"* %89 to void (%"class.icu_69::UnicodeString"*)***
  %91 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %90, align 8
  %92 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %91, align 8
  call void %92(%"class.icu_69::UnicodeString"* %89) #11
  %93 = icmp eq %"class.icu_69::UnicodeString"* %89, %81
  br i1 %93, label %94, label %87

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::vector.1254"* %4 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %83
  %98 = phi i8* [ %96, %94 ], [ %84, %83 ]
  store %"class.icu_69::UnicodeString"* %81, %"class.icu_69::UnicodeString"** %46, align 8
  call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %80, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  ret void

100:                                              ; preds = %28, %139
  %101 = phi i64 [ 0, %28 ], [ %140, %139 ]
  %102 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*** %29, align 8
  %103 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)** %102, i64 5
  %104 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)** %103, align 8
  %105 = call i64* %104(%"class.v8::internal::ElementsAccessor"* %20, i64* %2, i64 %101) #11
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, -4294967296
  %108 = add i64 %106, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = and i16 %115, 7
  %117 = icmp eq i16 %116, 1
  br i1 %117, label %118, label %130

118:                                              ; preds = %100
  %119 = add i64 %106, 15
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %107, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %118
  %129 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %1, i64* %105, i8 zeroext 0)
  br label %130

130:                                              ; preds = %100, %118, %128
  %131 = phi i64* [ %105, %118 ], [ %129, %128 ], [ %105, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #11
  call void @_ZN2v88internal4Intl18ToICUUnicodeStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.icu_69::UnicodeString"* nonnull sret %5, %"class.v8::internal::Isolate"* %1, i64* %131) #11
  %132 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %31, align 8
  %133 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %32, align 8
  %134 = icmp ult %"class.icu_69::UnicodeString"* %132, %133
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %132, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5) #11
  %136 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %132, i64 1
  %137 = ptrtoint %"class.icu_69::UnicodeString"* %136 to i64
  store i64 %137, i64* %33, align 8
  br label %139

138:                                              ; preds = %130
  call void @_ZNSt3__16vectorIN6icu_6913UnicodeStringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.1254"* nonnull %4, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5) #11
  br label %139

139:                                              ; preds = %135, %138
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #11
  %140 = add nuw i64 %101, 1
  %141 = icmp eq i64 %140, %25
  br i1 %141, label %34, label %100
}

declare void @_ZNK6icu_6913ListFormatter20formatStringsToValueEPKNS_13UnicodeStringEiR10UErrorCode(%"class.icu_69::FormattedList"* sret, %"class.icu_69::ListFormatter"*, %"class.icu_69::UnicodeString"*, i32, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913FormattedListD1Ev(%"class.icu_69::FormattedList"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #10 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #11
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #11
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #11
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

declare void @_ZN2v88internal4Intl18ToICUUnicodeStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.icu_69::UnicodeString"* sret, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6icu_6913UnicodeStringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.1254"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.icu_69::UnicodeString"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1254"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1254"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.icu_69::UnicodeString"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.icu_69::UnicodeString"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.icu_69::UnicodeString"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %36, i64 %9
  %38 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %36, i64 %35
  %39 = ptrtoint %"class.icu_69::UnicodeString"* %38 to i64
  tail call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %37, %"class.icu_69::UnicodeString"* dereferenceable(64) %1) #11
  %40 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %37, i64 1
  %41 = ptrtoint %"class.icu_69::UnicodeString"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.1254", %"class.std::__1::vector.1254"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %42, align 8
  %44 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %3, align 8
  %45 = icmp eq %"class.icu_69::UnicodeString"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.icu_69::UnicodeString"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.icu_69::UnicodeString"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.icu_69::UnicodeString"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %49, i64 -1
  %52 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 -1
  tail call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %51, %"class.icu_69::UnicodeString"* dereferenceable(64) %52) #11
  %53 = icmp eq %"class.icu_69::UnicodeString"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.icu_69::UnicodeString"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.icu_69::UnicodeString"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.icu_69::UnicodeString"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.icu_69::UnicodeString"*
  %63 = icmp eq %"class.icu_69::UnicodeString"* %58, %62
  br i1 %63, label %71, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.icu_69::UnicodeString"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %65, i64 -1
  %67 = bitcast %"class.icu_69::UnicodeString"* %66 to void (%"class.icu_69::UnicodeString"*)***
  %68 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %67, align 8
  %69 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %68, align 8
  tail call void %69(%"class.icu_69::UnicodeString"* %66) #11
  %70 = icmp eq %"class.icu_69::UnicodeString"* %66, %62
  br i1 %70, label %71, label %64

71:                                               ; preds = %64, %57
  %72 = icmp eq i64 %60, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %71, %73
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #3

declare void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v84base16LazyInstanceImplINS_8internal4Intl16AvailableLocalesINS2_12_GLOBAL__N_116CheckListPatternEEENS0_32StaticallyAllocatedInstanceTraitIS7_EENS0_21DefaultConstructTraitIS7_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS7_EEE12InitInstanceEPv(i8*) #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::vector.1130", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::set.1151", align 16
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  %7 = bitcast i8* %0 to i8**
  store i8* %6, i8** %7, align 8
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 0, i32* %2, align 4
  %9 = call %struct.UEnumeration* @uloc_openAvailableByType_69(i32 2, i32* nonnull %2) #11
  %10 = bitcast %"class.std::__1::vector.1130"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = call i8* @uenum_next_69(%struct.UEnumeration* %9, i32* null, i32* nonnull %2) #11
  %12 = icmp eq i8* %11, null
  br i1 %12, label %203, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %3, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  br label %23

23:                                               ; preds = %200, %13
  %24 = phi i8* [ %11, %13 ], [ %201, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %25 = call i64 @strlen(i8* nonnull %24) #11
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #12
  unreachable

29:                                               ; preds = %23
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %25, 16
  %33 = and i64 %32, -16
  %34 = call i8* @_Znwm(i64 %33) #13
  store i8* %34, i8** %15, align 8
  %35 = or i64 %33, -9223372036854775808
  store i64 %35, i64* %16, align 8
  store i64 %25, i64* %17, align 8
  br label %39

36:                                               ; preds = %29
  %37 = trunc i64 %25 to i8
  store i8 %37, i8* %19, align 1
  %38 = icmp eq i64 %25, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %36, %31
  %40 = phi i8* [ %34, %31 ], [ %14, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* nonnull align 1 %24, i64 %25, i1 false) #11
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i8* [ %14, %36 ], [ %40, %39 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 %25
  store i8 0, i8* %43, align 1
  %44 = load i8, i8* %19, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i8*, i8** %15, align 8
  %47 = load i64, i64* %17, align 8
  %48 = zext i8 %44 to i64
  %49 = select i1 %45, i8* %46, i8* %14
  %50 = select i1 %45, i64 %47, i64 %48
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %160, label %53

53:                                               ; preds = %41
  %54 = icmp ult i64 %50, 16
  br i1 %54, label %146, label %55

55:                                               ; preds = %53
  %56 = and i64 %50, -16
  %57 = getelementptr i8, i8* %49, i64 %56
  br label %58

58:                                               ; preds = %141, %55
  %59 = phi i64 [ 0, %55 ], [ %142, %141 ]
  %60 = getelementptr i8, i8* %49, i64 %59
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1
  %63 = icmp eq <16 x i8> %62, <i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95>
  %64 = extractelement <16 x i1> %63, i32 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %58
  store i8 45, i8* %60, align 1
  br label %66

66:                                               ; preds = %65, %58
  %67 = extractelement <16 x i1> %63, i32 1
  br i1 %67, label %68, label %71

68:                                               ; preds = %66
  %69 = or i64 %59, 1
  %70 = getelementptr i8, i8* %49, i64 %69
  store i8 45, i8* %70, align 1
  br label %71

71:                                               ; preds = %68, %66
  %72 = extractelement <16 x i1> %63, i32 2
  br i1 %72, label %73, label %76

73:                                               ; preds = %71
  %74 = or i64 %59, 2
  %75 = getelementptr i8, i8* %49, i64 %74
  store i8 45, i8* %75, align 1
  br label %76

76:                                               ; preds = %73, %71
  %77 = extractelement <16 x i1> %63, i32 3
  br i1 %77, label %78, label %81

78:                                               ; preds = %76
  %79 = or i64 %59, 3
  %80 = getelementptr i8, i8* %49, i64 %79
  store i8 45, i8* %80, align 1
  br label %81

81:                                               ; preds = %78, %76
  %82 = extractelement <16 x i1> %63, i32 4
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = or i64 %59, 4
  %85 = getelementptr i8, i8* %49, i64 %84
  store i8 45, i8* %85, align 1
  br label %86

86:                                               ; preds = %83, %81
  %87 = extractelement <16 x i1> %63, i32 5
  br i1 %87, label %88, label %91

88:                                               ; preds = %86
  %89 = or i64 %59, 5
  %90 = getelementptr i8, i8* %49, i64 %89
  store i8 45, i8* %90, align 1
  br label %91

91:                                               ; preds = %88, %86
  %92 = extractelement <16 x i1> %63, i32 6
  br i1 %92, label %93, label %96

93:                                               ; preds = %91
  %94 = or i64 %59, 6
  %95 = getelementptr i8, i8* %49, i64 %94
  store i8 45, i8* %95, align 1
  br label %96

96:                                               ; preds = %93, %91
  %97 = extractelement <16 x i1> %63, i32 7
  br i1 %97, label %98, label %101

98:                                               ; preds = %96
  %99 = or i64 %59, 7
  %100 = getelementptr i8, i8* %49, i64 %99
  store i8 45, i8* %100, align 1
  br label %101

101:                                              ; preds = %98, %96
  %102 = extractelement <16 x i1> %63, i32 8
  br i1 %102, label %103, label %106

103:                                              ; preds = %101
  %104 = or i64 %59, 8
  %105 = getelementptr i8, i8* %49, i64 %104
  store i8 45, i8* %105, align 1
  br label %106

106:                                              ; preds = %103, %101
  %107 = extractelement <16 x i1> %63, i32 9
  br i1 %107, label %108, label %111

108:                                              ; preds = %106
  %109 = or i64 %59, 9
  %110 = getelementptr i8, i8* %49, i64 %109
  store i8 45, i8* %110, align 1
  br label %111

111:                                              ; preds = %108, %106
  %112 = extractelement <16 x i1> %63, i32 10
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = or i64 %59, 10
  %115 = getelementptr i8, i8* %49, i64 %114
  store i8 45, i8* %115, align 1
  br label %116

116:                                              ; preds = %113, %111
  %117 = extractelement <16 x i1> %63, i32 11
  br i1 %117, label %118, label %121

118:                                              ; preds = %116
  %119 = or i64 %59, 11
  %120 = getelementptr i8, i8* %49, i64 %119
  store i8 45, i8* %120, align 1
  br label %121

121:                                              ; preds = %118, %116
  %122 = extractelement <16 x i1> %63, i32 12
  br i1 %122, label %123, label %126

123:                                              ; preds = %121
  %124 = or i64 %59, 12
  %125 = getelementptr i8, i8* %49, i64 %124
  store i8 45, i8* %125, align 1
  br label %126

126:                                              ; preds = %123, %121
  %127 = extractelement <16 x i1> %63, i32 13
  br i1 %127, label %128, label %131

128:                                              ; preds = %126
  %129 = or i64 %59, 13
  %130 = getelementptr i8, i8* %49, i64 %129
  store i8 45, i8* %130, align 1
  br label %131

131:                                              ; preds = %128, %126
  %132 = extractelement <16 x i1> %63, i32 14
  br i1 %132, label %133, label %136

133:                                              ; preds = %131
  %134 = or i64 %59, 14
  %135 = getelementptr i8, i8* %49, i64 %134
  store i8 45, i8* %135, align 1
  br label %136

136:                                              ; preds = %133, %131
  %137 = extractelement <16 x i1> %63, i32 15
  br i1 %137, label %138, label %141

138:                                              ; preds = %136
  %139 = or i64 %59, 15
  %140 = getelementptr i8, i8* %49, i64 %139
  store i8 45, i8* %140, align 1
  br label %141

141:                                              ; preds = %138, %136
  %142 = add i64 %59, 16
  %143 = icmp eq i64 %142, %56
  br i1 %143, label %144, label %58, !llvm.loop !22

144:                                              ; preds = %141
  %145 = icmp eq i64 %50, %56
  br i1 %145, label %156, label %146

146:                                              ; preds = %144, %53
  %147 = phi i8* [ %49, %53 ], [ %57, %144 ]
  br label %148

148:                                              ; preds = %146, %153
  %149 = phi i8* [ %154, %153 ], [ %147, %146 ]
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 95
  br i1 %151, label %152, label %153

152:                                              ; preds = %148
  store i8 45, i8* %149, align 1
  br label %153

153:                                              ; preds = %152, %148
  %154 = getelementptr inbounds i8, i8* %149, i64 1
  %155 = icmp eq i8* %154, %51
  br i1 %155, label %156, label %148, !llvm.loop !24

156:                                              ; preds = %153, %144
  %157 = load i8, i8* %19, align 1
  %158 = load i64, i64* %17, align 8
  %159 = zext i8 %157 to i64
  br label %160

160:                                              ; preds = %156, %41
  %161 = phi i64 [ %159, %156 ], [ %48, %41 ]
  %162 = phi i64 [ %158, %156 ], [ %47, %41 ]
  %163 = phi i8 [ %157, %156 ], [ %44, %41 ]
  %164 = icmp slt i8 %163, 0
  %165 = select i1 %164, i64 %162, i64 %161
  %166 = icmp eq i64 %165, 11
  br i1 %166, label %167, label %179

167:                                              ; preds = %160
  %168 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i64 11) #11
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %179

170:                                              ; preds = %167
  %171 = load i8, i8* %19, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %170
  store i64 16, i64* %17, align 8
  %174 = load i8*, i8** %15, align 8
  br label %176

175:                                              ; preds = %170
  store i8 16, i8* %19, align 1
  br label %176

176:                                              ; preds = %175, %173
  %177 = phi i8* [ %174, %173 ], [ %14, %175 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %177, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i64 16, i1 false) #11
  %178 = getelementptr inbounds i8, i8* %177, i64 16
  store i8 0, i8* %178, align 1
  br label %179

179:                                              ; preds = %176, %167, %160
  %180 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %181 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %182 = icmp eq %"class.std::__1::basic_string"* %180, %181
  br i1 %182, label %194, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %19, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %188, label %186

186:                                              ; preds = %183
  %187 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* nonnull align 8 %14, i64 24, i1 false) #11
  br label %191

188:                                              ; preds = %183
  %189 = load i8*, i8** %15, align 8
  %190 = load i64, i64* %17, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %180, i8* %189, i64 %190) #11
  br label %191

191:                                              ; preds = %188, %186
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 1
  %193 = ptrtoint %"class.std::__1::basic_string"* %192 to i64
  store i64 %193, i64* %22, align 8
  br label %195

194:                                              ; preds = %179
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.1130"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  br label %195

195:                                              ; preds = %194, %191
  %196 = load i8, i8* %19, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %195
  %199 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %199) #13
  br label %200

200:                                              ; preds = %198, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %201 = call i8* @uenum_next_69(%struct.UEnumeration* %9, i32* null, i32* nonnull %2) #11
  %202 = icmp eq i8* %201, null
  br i1 %202, label %203, label %23

203:                                              ; preds = %200, %1
  call void @uenum_close_69(%struct.UEnumeration* %9) #11
  %204 = bitcast %"class.std::__1::set.1151"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #11
  call void @_ZN2v88internal4Intl14BuildLocaleSetERKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPKcSF_(%"class.std::__1::set.1151"* nonnull sret %5, %"class.std::__1::vector.1130"* nonnull dereferenceable(24) %3, i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0)) #11
  %205 = bitcast i8* %0 to %"class.std::__1::__tree.1152"*
  %206 = bitcast i8* %6 to %"class.std::__1::__tree_node.1223"**
  %207 = load %"class.std::__1::__tree_node.1223"*, %"class.std::__1::__tree_node.1223"** %206, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1152"* %205, %"class.std::__1::__tree_node.1223"* %207) #11
  %208 = getelementptr inbounds %"class.std::__1::set.1151", %"class.std::__1::set.1151"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %209 = bitcast %"class.std::__1::set.1151"* %5 to <2 x i64>*
  %210 = load <2 x i64>, <2 x i64>* %209, align 16
  %211 = bitcast i8* %0 to <2 x i64>*
  store <2 x i64> %210, <2 x i64>* %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::set.1151", %"class.std::__1::set.1151"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %213 = getelementptr inbounds i8, i8* %0, i64 16
  %214 = bitcast i8* %213 to i64*
  %215 = load i64, i64* %212, align 16
  store i64 %215, i64* %214, align 8
  %216 = icmp eq i64 %215, 0
  %217 = extractelement <2 x i64> %210, i32 1
  br i1 %216, label %218, label %220

218:                                              ; preds = %203
  %219 = inttoptr i64 %217 to %"class.std::__1::__tree_node.1223"*
  store i8* %6, i8** %7, align 8
  br label %226

220:                                              ; preds = %203
  %221 = inttoptr i64 %217 to %"class.std::__1::__tree_node_base"*
  %222 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %221, i64 0, i32 2
  %223 = bitcast %"class.std::__1::__tree_end_node"** %222 to i8**
  store i8* %6, i8** %223, align 8
  %224 = getelementptr inbounds %"class.std::__1::set.1151", %"class.std::__1::set.1151"* %5, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %224, align 16
  %225 = bitcast %"class.std::__1::__tree_end_node"* %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 16, i1 false) #11
  br label %226

226:                                              ; preds = %220, %218
  %227 = phi %"class.std::__1::__tree_node.1223"* [ %219, %218 ], [ null, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::set.1151", %"class.std::__1::set.1151"* %5, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1152"* nonnull %228, %"class.std::__1::__tree_node.1223"* %227) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #11
  %229 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %3, i64 0, i32 0, i32 0
  %230 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %229, align 8
  %231 = icmp eq %"class.std::__1::basic_string"* %230, null
  br i1 %231, label %254, label %232

232:                                              ; preds = %226
  %233 = bitcast %"class.std::__1::basic_string"* %230 to i8*
  %234 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %3, i64 0, i32 0, i32 1
  %235 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %234, align 8
  %236 = icmp eq %"class.std::__1::basic_string"* %235, %230
  br i1 %236, label %252, label %237

237:                                              ; preds = %232, %247
  %238 = phi %"class.std::__1::basic_string"* [ %239, %247 ], [ %235, %232 ]
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %238, i64 -1
  %240 = bitcast %"class.std::__1::basic_string"* %239 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %237
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %246) #13
  br label %247

247:                                              ; preds = %244, %237
  %248 = icmp eq %"class.std::__1::basic_string"* %239, %230
  br i1 %248, label %249, label %237

249:                                              ; preds = %247
  %250 = bitcast %"class.std::__1::vector.1130"* %3 to i8**
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %249, %232
  %253 = phi i8* [ %251, %249 ], [ %233, %232 ]
  store %"class.std::__1::basic_string"* %230, %"class.std::__1::basic_string"** %234, align 8
  call void @_ZdlPv(i8* %253) #13
  br label %254

254:                                              ; preds = %226, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret void
}

declare void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1195"*, %"class.std::__1::function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to void (i8*)**
  %3 = load void (i8*)*, void (i8*)** %2, align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void %3(i8* %6) #11
  ret void
}

declare %struct.UEnumeration* @uloc_openAvailableByType_69(i32, i32*) local_unnamed_addr #2

declare i8* @uenum_next_69(%struct.UEnumeration*, i32*, i32*) local_unnamed_addr #2

declare void @uenum_close_69(%struct.UEnumeration*) local_unnamed_addr #2

declare void @_ZN2v88internal4Intl14BuildLocaleSetERKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPKcSF_(%"class.std::__1::set.1151"* sret, %"class.std::__1::vector.1130"* dereferenceable(24), i8*, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.1130"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1130"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1130"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.1130", %"class.std::__1::vector.1130"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK2v85MaybeINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEE8FromJustEv: argument 0"}
!5 = distinct !{!5, !"_ZNK2v85MaybeINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEE8FromJustEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK2v85MaybeINS_8internal4Intl14ResolvedLocaleEE8FromJustEv: argument 0"}
!8 = distinct !{!8, !"_ZNK2v85MaybeINS_8internal4Intl14ResolvedLocaleEE8FromJustEv"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK2v85MaybeINSt3__16vectorIN6icu_6913UnicodeStringENS1_9allocatorIS4_EEEEE8FromJustEv: argument 0"}
!12 = distinct !{!12, !"_ZNK2v85MaybeINSt3__16vectorIN6icu_6913UnicodeStringENS1_9allocatorIS4_EEEEE8FromJustEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK2v85MaybeINSt3__16vectorIN6icu_6913UnicodeStringENS1_9allocatorIS4_EEEEE8FromJustEv: argument 0"}
!15 = distinct !{!15, !"_ZNK2v85MaybeINSt3__16vectorIN6icu_6913UnicodeStringENS1_9allocatorIS4_EEEEE8FromJustEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_4pairIKS7_S7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_4pairIKS7_S7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN2v84JustINSt3__16vectorIN6icu_6913UnicodeStringENS1_9allocatorIS4_EEEEEENS_5MaybeIT_EERKS9_: argument 0"}
!21 = distinct !{!21, !"_ZN2v84JustINSt3__16vectorIN6icu_6913UnicodeStringENS1_9allocatorIS4_EEEEEENS_5MaybeIT_EERKS9_"}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.isvectorized", i32 1}
!24 = distinct !{!24, !25, !23}
!25 = !{!"llvm.loop.unroll.runtime.disable"}
