; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/inst_bindless_check_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/inst_bindless_check_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::InstBindlessCheckPass" = type { %"class.spvtools::opt::InstrumentPass.base", i8, i8, i8, i8, [3 x i8], %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::InstrumentPass.base" = type <{ %"class.spvtools::opt::Pass.base", [3 x i8], i32, i32, [4 x i8], %"class.std::__1::unordered_map.201", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.249", i32, i32, i32, i32, %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.910", %"class.spvtools::opt::Function"*, i8 }>
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.930", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::tuple.1042" = type { %"struct.std::__1::__tuple_impl.1043" }
%"struct.std::__1::__tuple_impl.1043" = type { %"class.std::__1::__tuple_leaf.1044" }
%"class.std::__1::__tuple_leaf.1044" = type { i32* }
%"class.std::__1::tuple.1002" = type { i8 }
%"struct.std::__1::pair.1028" = type { i32, i32 }
%"class.spvtools::opt::InstrumentPass" = type <{ %"class.spvtools::opt::Pass.base", [3 x i8], i32, i32, [4 x i8], %"class.std::__1::unordered_map.201", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.249", i32, i32, i32, i32, %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.910", %"class.spvtools::opt::Function"*, i8, [7 x i8] }>
%"class.std::__1::tuple.1052" = type { %"struct.std::__1::__tuple_impl.1053" }
%"struct.std::__1::__tuple_impl.1053" = type { %"class.std::__1::__tuple_leaf.1054" }
%"class.std::__1::__tuple_leaf.1054" = type { i32* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"struct.std::__1::default_delete.150" = type { i8 }
%"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis" = type { i32, i32, i32, i32, i32, i32, i32, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::function.936" = type { %"class.std::__1::__function::__policy_func.940" }
%"class.std::__1::__function::__policy_func.940" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.941", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.941" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.std::__1::__tree_node.1025" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::function.949" = type { %"class.std::__1::__function::__policy_func.952" }
%"class.std::__1::__function::__policy_func.952" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.953", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.953" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.spvtools::opt::UptrVectorIterator"*, i32, %"class.std::__1::vector.38"*)* }
%"class.spvtools::opt::UptrVectorIterator" = type { %"class.std::__1::vector.38"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"class.std::__1::unique_ptr.40"* }
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.957", %"class.std::__1::map.964" }
%"class.std::__1::vector.957" = type { %"class.std::__1::__vector_base.958" }
%"class.std::__1::__vector_base.958" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.964" = type { %"class.std::__1::__tree.965" }
%"class.std::__1::__tree.965" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.966", %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.957" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node.983" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.984" }
%"struct.std::__1::pair.984" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN8spvtools3opt18InstructionBuilder7AddLoadEjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj = comdat any

$_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddBranchEj = comdat any

$_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools3opt21InstBindlessCheckPassD2Ev = comdat any

$_ZN8spvtools3opt21InstBindlessCheckPassD0Ev = comdat any

$_ZNK8spvtools3opt21InstBindlessCheckPass4nameEv = comdat any

$_ZN8spvtools3opt14InstrumentPass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZN8spvtools3opt14InstrumentPassD2Ev = comdat any

$_ZN8spvtools3opt14InstrumentPassD0Ev = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt14InstrumentPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt21InstBindlessCheckPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstBindlessCheckPass"*)* @_ZN8spvtools3opt21InstBindlessCheckPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstBindlessCheckPass"*)* @_ZN8spvtools3opt21InstBindlessCheckPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::InstBindlessCheckPass"*)* @_ZNK8spvtools3opt21InstBindlessCheckPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::InstrumentPass"*)* @_ZN8spvtools3opt14InstrumentPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::InstBindlessCheckPass"*)* @_ZN8spvtools3opt21InstBindlessCheckPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.6 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt14InstrumentPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstrumentPass"*)* @_ZN8spvtools3opt14InstrumentPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstrumentPass"*)* @_ZN8spvtools3opt14InstrumentPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::InstrumentPass"*)* @_ZN8spvtools3opt14InstrumentPass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [25 x i8] c"inst-bindless-check-pass\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPNS5_11InstructionEPNS6_11RefAnalysisEE3$_0FbRKS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPNS5_11InstructionEPNS6_11RefAnalysisEE3$_1FbRKS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass10FindStrideEjjE3$_2FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass14GenLastByteIdxEPNS6_11RefAnalysisEPNS5_18InstructionBuilderEE3$_3FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass14GenLastByteIdxEPNS6_11RefAnalysisEPNS5_18InstructionBuilderEE3$_4FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass14GenLastByteIdxEPNS6_11RefAnalysisEPNS5_18InstructionBuilderEE3$_5FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass11ProcessImplEvE3$_6FvNS5_15InstructionList8iteratorENS5_18UptrVectorIteratorINS5_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrISB_NS_14default_deleteISB_EEEENS_9allocatorISH_EEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass11ProcessImplEvE3$_7FvNS5_15InstructionList8iteratorENS5_18UptrVectorIteratorINS5_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrISB_NS_14default_deleteISB_EEEENS_9allocatorISH_EEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass11ProcessImplEvE3$_8FvNS5_15InstructionList8iteratorENS5_18UptrVectorIteratorINS5_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrISB_NS_14default_deleteISB_EEEENS_9allocatorISH_EEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass18GenDebugReadLengthEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"*, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1042", align 8
  %5 = alloca %"class.std::__1::tuple.1002", align 1
  %6 = alloca %"class.std::__1::tuple.1042", align 8
  %7 = alloca %"class.std::__1::tuple.1002", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::vector.3", align 8
  store i32 %1, i32* %8, align 4
  %10 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 6, i32 0
  %11 = bitcast %"class.std::__1::tuple.1042"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::tuple.1042", %"class.std::__1::tuple.1042"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  %14 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %10, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1042"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %7) #11
  %15 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %14, 0
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %15, i64 2
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"* %16 to %"struct.std::__1::pair.1028"*
  %18 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %17, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, 1
  %21 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %20, i1 zeroext false) #11
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 3
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = zext i8 %27 to i32
  %29 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %21, i32 %28) #11
  br label %30

30:                                               ; preds = %3, %25
  %31 = phi i32 [ %29, %25 ], [ 0, %3 ]
  %32 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 7, i32 0
  %33 = bitcast %"class.std::__1::tuple.1042"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::tuple.1042", %"class.std::__1::tuple.1042"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #11
  %36 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %32, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1042"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %5) #11
  %37 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %36, 0
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %37, i64 2
  %39 = bitcast %"struct.std::__1::__hash_node_base.254"* %38 to %"struct.std::__1::pair.1028"*
  %40 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %39, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = load i32, i32* %40, align 4
  %42 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %41, i1 zeroext false) #11
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 4
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 3
  %48 = load i8, i8* %47, align 4, !range !2
  %49 = zext i8 %48 to i32
  %50 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %42, i32 %49) #11
  br label %51

51:                                               ; preds = %30, %46
  %52 = phi i32 [ %50, %46 ], [ 0, %30 ]
  %53 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  %54 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  %55 = call i8* @_Znwm(i64 8) #12
  %56 = bitcast i8* %55 to i32*
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::vector.3"* %9 to i8**
  store i8* %55, i8** %58, align 8
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast i32** %60 to i8**
  store i8* %59, i8** %61, align 8
  %62 = bitcast i32** %57 to i64*
  store i32 %31, i32* %56, align 4
  %63 = getelementptr inbounds i8, i8* %55, i64 4
  %64 = bitcast i8* %63 to i32*
  store i32 %52, i32* %64, align 4
  %65 = ptrtoint i8* %59 to i64
  store i64 %65, i64* %62, align 8
  %66 = call i32 @_ZN8spvtools3opt14InstrumentPass18GenDebugDirectReadERKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %53, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %9, %"class.spvtools::opt::InstructionBuilder"* %2) #11
  %67 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = icmp eq i32* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %51
  %71 = ptrtoint i32* %68 to i64
  store i64 %71, i64* %62, align 8
  %72 = bitcast i32* %68 to i8*
  call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %51, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  ret i32 %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN8spvtools3opt14InstrumentPass18GenDebugDirectReadERKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::vector.3"* dereferenceable(24), %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass16GenDebugReadInitEjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"*, i32, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple.1042", align 8
  %6 = alloca %"class.std::__1::tuple.1002", align 1
  %7 = alloca %"class.std::__1::tuple.1042", align 8
  %8 = alloca %"class.std::__1::tuple.1002", align 1
  %9 = alloca %"class.std::__1::tuple.1042", align 8
  %10 = alloca %"class.std::__1::tuple.1002", align 1
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::vector.3", align 8
  %13 = alloca %"class.std::__1::vector.3", align 8
  store i32 %1, i32* %11, align 4
  %14 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 7, i32 0
  %15 = bitcast %"class.std::__1::tuple.1042"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple.1042", %"class.std::__1::tuple.1042"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %14, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1042"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %10) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %19, i64 2
  %21 = bitcast %"struct.std::__1::__hash_node_base.254"* %20 to %"struct.std::__1::pair.1028"*
  %22 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %21, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %23 = load i32, i32* %22, align 4
  %24 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %23, i1 zeroext false) #11
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 4
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = zext i8 %30 to i32
  %32 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %24, i32 %31) #11
  br label %33

33:                                               ; preds = %4, %28
  %34 = phi i32 [ %32, %28 ], [ 0, %4 ]
  %35 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  %36 = call i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %35, i32 %2, %"class.spvtools::opt::InstructionBuilder"* %3) #11
  %37 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 1
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %84

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 6, i32 0
  %42 = bitcast %"class.std::__1::tuple.1042"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.std::__1::tuple.1042", %"class.std::__1::tuple.1042"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #11
  %45 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %41, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1042"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %8) #11
  %46 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %45, 0
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %46, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.254"* %47 to %"struct.std::__1::pair.1028"*
  %49 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %48, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, 1
  %52 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %51, i1 zeroext false) #11
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 4
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %40
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = zext i8 %58 to i32
  %60 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %52, i32 %59) #11
  br label %61

61:                                               ; preds = %40, %56
  %62 = phi i32 [ %60, %56 ], [ 0, %40 ]
  %63 = bitcast %"class.std::__1::vector.3"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %64 = call i8* @_Znwm(i64 12) #12
  %65 = bitcast i8* %64 to i32*
  %66 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %12, i64 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::vector.3"* %12 to i8**
  store i8* %64, i8** %67, align 8
  %68 = getelementptr inbounds i8, i8* %64, i64 12
  %69 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast i32** %69 to i8**
  store i8* %68, i8** %70, align 8
  %71 = bitcast i32** %66 to i64*
  store i32 %62, i32* %65, align 4
  %72 = getelementptr inbounds i8, i8* %64, i64 4
  %73 = bitcast i8* %72 to i32*
  store i32 %34, i32* %73, align 4
  %74 = getelementptr inbounds i8, i8* %64, i64 8
  %75 = bitcast i8* %74 to i32*
  store i32 %36, i32* %75, align 4
  %76 = ptrtoint i8* %68 to i64
  store i64 %76, i64* %71, align 8
  %77 = call i32 @_ZN8spvtools3opt14InstrumentPass18GenDebugDirectReadERKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %35, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %12, %"class.spvtools::opt::InstructionBuilder"* %3) #11
  %78 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %12, i64 0, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = icmp eq i32* %79, null
  br i1 %80, label %140, label %81

81:                                               ; preds = %61
  %82 = ptrtoint i32* %79 to i64
  store i64 %82, i64* %71, align 8
  %83 = bitcast i32* %79 to i8*
  call void @_ZdlPv(i8* %83) #12
  br label %140

84:                                               ; preds = %33
  %85 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %3, i32 0, i1 zeroext false) #11
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 3
  %91 = load i8, i8* %90, align 4, !range !2
  %92 = zext i8 %91 to i32
  %93 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %85, i32 %92) #11
  br label %94

94:                                               ; preds = %84, %89
  %95 = phi i32 [ %93, %89 ], [ 0, %84 ]
  %96 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 6, i32 0
  %97 = bitcast %"class.std::__1::tuple.1042"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  %98 = getelementptr inbounds %"class.std::__1::tuple.1042", %"class.std::__1::tuple.1042"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %99) #11
  %100 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %96, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1042"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %6) #11
  %101 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %101, i64 2
  %103 = bitcast %"struct.std::__1::__hash_node_base.254"* %102 to %"struct.std::__1::pair.1028"*
  %104 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %103, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  %105 = load i32, i32* %104, align 4
  %106 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %105, i1 zeroext false) #11
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %106, i64 0, i32 4
  %108 = load i8, i8* %107, align 1, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %94
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %106, i64 0, i32 3
  %112 = load i8, i8* %111, align 4, !range !2
  %113 = zext i8 %112 to i32
  %114 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %106, i32 %113) #11
  br label %115

115:                                              ; preds = %94, %110
  %116 = phi i32 [ %114, %110 ], [ 0, %94 ]
  %117 = bitcast %"class.std::__1::vector.3"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  %118 = call i8* @_Znwm(i64 16) #12
  %119 = bitcast i8* %118 to i32*
  %120 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 0, i32 0, i32 1
  %121 = bitcast %"class.std::__1::vector.3"* %13 to i8**
  store i8* %118, i8** %121, align 8
  %122 = getelementptr inbounds i8, i8* %118, i64 16
  %123 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %124 = bitcast i32** %123 to i8**
  store i8* %122, i8** %124, align 8
  %125 = bitcast i32** %120 to i64*
  store i32 %95, i32* %119, align 4
  %126 = getelementptr inbounds i8, i8* %118, i64 4
  %127 = bitcast i8* %126 to i32*
  store i32 %116, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %118, i64 8
  %129 = bitcast i8* %128 to i32*
  store i32 %34, i32* %129, align 4
  %130 = getelementptr inbounds i8, i8* %118, i64 12
  %131 = bitcast i8* %130 to i32*
  store i32 %36, i32* %131, align 4
  %132 = ptrtoint i8* %122 to i64
  store i64 %132, i64* %125, align 8
  %133 = call i32 @_ZN8spvtools3opt14InstrumentPass18GenDebugDirectReadERKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %35, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %13, %"class.spvtools::opt::InstructionBuilder"* %3) #11
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %115
  %138 = ptrtoint i32* %135 to i64
  store i64 %138, i64* %125, align 8
  %139 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %137, %115, %81, %61
  %141 = phi i8* [ %63, %61 ], [ %63, %81 ], [ %117, %115 ], [ %117, %137 ]
  %142 = phi i32 [ %77, %61 ], [ %77, %81 ], [ %133, %115 ], [ %133, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #11
  ret i32 %142
}

declare i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass18CloneOriginalImageEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"*, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1052", align 8
  %5 = alloca %"class.std::__1::tuple.1002", align 1
  %6 = alloca %"class.std::__1::tuple.1052", align 8
  %7 = alloca %"class.std::__1::tuple.1002", align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 104) #12
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::DefUseManager"*
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = getelementptr inbounds i8, i8* %19, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 64
  %27 = getelementptr inbounds i8, i8* %19, i64 96
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %28, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %20, %"class.spvtools::opt::Module"* %18) #11
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %29 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = bitcast %"class.std::__1::unique_ptr.62"* %29 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %36, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %32) #11
  br label %37

37:                                               ; preds = %35, %16
  %38 = load i32, i32* %12, align 8
  %39 = or i32 %38, 1
  store i32 %39, i32* %12, align 8
  br label %40

40:                                               ; preds = %3, %37
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %41, align 8
  %43 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %42, i32 %1) #11
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  switch i32 %45, label %108 [
    i32 61, label %46
    i32 86, label %72
  ]

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 3
  %48 = load i8, i8* %47, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 4
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp ne i8 %52, 0
  br label %63

54:                                               ; preds = %46
  %55 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 0) #11
  %56 = load i8, i8* %47, align 4, !range !2
  %57 = icmp eq i8 %56, 0
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 4
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, i32 1, i32 2
  %62 = xor i1 %60, true
  br i1 %57, label %63, label %67

63:                                               ; preds = %50, %54
  %64 = phi i1 [ %53, %50 ], [ %62, %54 ]
  %65 = phi i32 [ 0, %50 ], [ %55, %54 ]
  %66 = zext i1 %64 to i32
  br label %67

67:                                               ; preds = %54, %63
  %68 = phi i32 [ %65, %63 ], [ %55, %54 ]
  %69 = phi i32 [ %66, %63 ], [ %61, %54 ]
  %70 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %69) #11
  %71 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddLoadEjj(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %68, i32 %70)
  br label %164

72:                                               ; preds = %40
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 3
  %74 = load i8, i8* %73, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 4
  %77 = load i8, i8* %76, align 1, !range !2
  %78 = icmp eq i8 %77, 0
  %79 = select i1 %78, i32 1, i32 2
  %80 = xor i1 %78, true
  %81 = zext i1 %80 to i32
  %82 = select i1 %75, i32 %81, i32 %79
  %83 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %82) #11
  %84 = tail call i32 @_ZN8spvtools3opt21InstBindlessCheckPass18CloneOriginalImageEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %83, %"class.spvtools::opt::InstructionBuilder"* %2)
  %85 = load i8, i8* %73, align 4, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %72
  %88 = load i8, i8* %76, align 1, !range !2
  %89 = icmp ne i8 %88, 0
  br label %98

90:                                               ; preds = %72
  %91 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 0) #11
  %92 = load i8, i8* %73, align 4, !range !2
  %93 = icmp eq i8 %92, 0
  %94 = load i8, i8* %76, align 1, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = select i1 %95, i32 1, i32 2
  %97 = xor i1 %95, true
  br i1 %93, label %98, label %102

98:                                               ; preds = %87, %90
  %99 = phi i1 [ %89, %87 ], [ %97, %90 ]
  %100 = phi i32 [ 0, %87 ], [ %91, %90 ]
  %101 = zext i1 %99 to i32
  br label %102

102:                                              ; preds = %90, %98
  %103 = phi i32 [ %100, %98 ], [ %91, %90 ]
  %104 = phi i32 [ %101, %98 ], [ %96, %90 ]
  %105 = add nuw nsw i32 %104, 1
  %106 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %105) #11
  %107 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %103, i32 86, i32 %84, i32 %106)
  br label %164

108:                                              ; preds = %40
  %109 = icmp eq i32 %45, 100
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 3
  %111 = load i8, i8* %110, align 4, !range !2
  %112 = icmp eq i8 %111, 0
  %113 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 4
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  %116 = select i1 %115, i32 1, i32 2
  %117 = xor i1 %115, true
  %118 = zext i1 %117 to i32
  %119 = select i1 %112, i32 %118, i32 %116
  %120 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %119) #11
  %121 = tail call i32 @_ZN8spvtools3opt21InstBindlessCheckPass18CloneOriginalImageEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %120, %"class.spvtools::opt::InstructionBuilder"* %2)
  br i1 %109, label %122, label %130

122:                                              ; preds = %108
  %123 = load i8, i8* %110, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 0) #11
  br label %127

127:                                              ; preds = %122, %125
  %128 = phi i32 [ %126, %125 ], [ 0, %122 ]
  %129 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %128, i32 100, i32 %121)
  br label %164

130:                                              ; preds = %108
  %131 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %132 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %131, i64 0, i32 11
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %160

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %131, i64 0, i32 4, i32 0, i32 0, i32 0
  %138 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %137, align 8
  %139 = tail call i8* @_Znwm(i64 104) #12
  %140 = bitcast i8* %139 to %"class.spvtools::opt::analysis::DefUseManager"*
  %141 = getelementptr inbounds i8, i8* %139, i64 32
  %142 = bitcast i8* %141 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %142, align 4
  %143 = getelementptr inbounds i8, i8* %139, i64 48
  %144 = getelementptr inbounds i8, i8* %139, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 16, i1 false) #11
  %145 = bitcast i8* %144 to i8**
  store i8* %143, i8** %145, align 8
  %146 = getelementptr inbounds i8, i8* %139, i64 64
  %147 = getelementptr inbounds i8, i8* %139, i64 96
  %148 = bitcast i8* %147 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %148, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %140, %"class.spvtools::opt::Module"* %138) #11
  %149 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %131, i64 0, i32 6
  %150 = ptrtoint i8* %139 to i64
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %149, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %151, align 8
  %153 = bitcast %"class.std::__1::unique_ptr.62"* %149 to i64*
  store i64 %150, i64* %153, align 8
  %154 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %152, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %136
  %156 = bitcast %"class.std::__1::unique_ptr.62"* %149 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %156, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %152) #11
  br label %157

157:                                              ; preds = %155, %136
  %158 = load i32, i32* %132, align 8
  %159 = or i32 %158, 1
  store i32 %159, i32* %132, align 8
  br label %160

160:                                              ; preds = %130, %157
  %161 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %131, i64 0, i32 6, i32 0, i32 0, i32 0
  %162 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %161, align 8
  %163 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %162, i32 %121) #11
  br label %164

164:                                              ; preds = %102, %160, %127, %67
  %165 = phi %"class.spvtools::opt::Instruction"* [ %71, %67 ], [ %107, %102 ], [ %129, %127 ], [ %163, %160 ]
  %166 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166) #11
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 5
  %168 = load i32, i32* %167, align 8
  store i32 %168, i32* %8, align 4
  %169 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 7, i32 0
  %170 = bitcast %"class.std::__1::tuple.1052"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #11
  %171 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %171, align 8
  %172 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %172) #11
  %173 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %169, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %7) #11
  %174 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %173, 0
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %174, i64 2
  %176 = bitcast %"struct.std::__1::__hash_node_base.254"* %175 to %"struct.std::__1::pair.1028"*
  %177 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %176, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #11
  %178 = load i32, i32* %177, align 4
  %179 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179) #11
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %165, i64 0, i32 5
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %9, align 4
  %182 = bitcast %"class.std::__1::tuple.1052"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #11
  %183 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %183, align 8
  %184 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %184) #11
  %185 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %169, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %5) #11
  %186 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %185, 0
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %186, i64 2
  %188 = bitcast %"struct.std::__1::__hash_node_base.254"* %187 to %"struct.std::__1::pair.1028"*
  %189 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %188, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %184) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #11
  store i32 %178, i32* %189, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166) #11
  %190 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %165, i64 0, i32 4
  %191 = load i8, i8* %190, align 1, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %198, label %193

193:                                              ; preds = %164
  %194 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %165, i64 0, i32 3
  %195 = load i8, i8* %194, align 4, !range !2
  %196 = zext i8 %195 to i32
  %197 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %165, i32 %196) #11
  br label %198

198:                                              ; preds = %164, %193
  %199 = phi i32 [ %197, %193 ], [ 0, %164 ]
  %200 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %201 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %200, i64 0, i32 11
  %202 = load i32, i32* %201, align 8
  %203 = and i32 %202, 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %226

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %200, i64 0, i32 4, i32 0, i32 0, i32 0
  %207 = bitcast %"class.spvtools::opt::Module"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = call i8* @_Znwm(i64 48) #12
  %210 = bitcast i8* %209 to %"class.spvtools::opt::analysis::DecorationManager"*
  %211 = getelementptr inbounds i8, i8* %209, i64 32
  %212 = bitcast i8* %211 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %212, align 4
  %213 = getelementptr inbounds i8, i8* %209, i64 40
  %214 = bitcast i8* %213 to i64*
  store i64 %208, i64* %214, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %210) #11
  %215 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %200, i64 0, i32 7
  %216 = ptrtoint i8* %209 to i64
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %215, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %217, align 8
  %219 = bitcast %"class.std::__1::unique_ptr.122"* %215 to i64*
  store i64 %216, i64* %219, align 8
  %220 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %218, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %205
  %222 = bitcast %"class.std::__1::unique_ptr.122"* %215 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %222, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %218) #11
  br label %223

223:                                              ; preds = %221, %205
  %224 = load i32, i32* %201, align 8
  %225 = or i32 %224, 4
  store i32 %225, i32* %201, align 8
  br label %226

226:                                              ; preds = %198, %223
  %227 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %200, i64 0, i32 7, i32 0, i32 0, i32 0
  %228 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %227, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %228, i32 %1, i32 %199) #11
  ret i32 %199
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddLoadEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #11
  %11 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  %12 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %17 = bitcast i32** %15 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %16, %"struct.std::__1::aligned_storage<4, 4>::type"** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %19 = bitcast %"class.std::__1::unique_ptr.0"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %16 to i32*
  store i64 1, i64* %14, align 8
  store i32 %2, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %26 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %22, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #11
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %31, align 8
  %33 = bitcast %"class.std::__1::vector.3"* %32 to i8*
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %35, align 8
  %36 = icmp eq %"class.std::__1::vector.3"* %32, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %32, i64 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint i32* %39 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %32, i64 0, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast i32* %39 to i8*
  call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %41, %37
  call void @_ZdlPv(i8* %33) #12
  br label %47

47:                                               ; preds = %3, %46
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %48, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %48, align 8
  %50 = icmp eq %"class.std::__1::vector.3"* %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = ptrtoint i32* %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast i32* %53 to i8*
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %55, %51
  %61 = bitcast %"class.std::__1::vector.3"* %49 to i8*
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %47, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  %63 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %64, align 8
  %65 = call i8* @_Znwm(i64 112) #12
  %66 = bitcast i8* %65 to %"class.spvtools::opt::Instruction"*
  %67 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %68 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %69, align 8
  %71 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %70) #11
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 5, i32 0, i32 2
  %75 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %75, i64 0, i32 2
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %73
  %80 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %80, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37, i1 false) #11
  %81 = getelementptr inbounds i8, i8* %80, i64 37
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 5, i32 0, i32 1, i32 0
  %83 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %82, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 5, i32 0, i32 0
  call void %83(%"union.std::__1::__function::__policy_storage"* %84, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %80) #11
  call void @_ZdlPv(i8* nonnull %80) #12
  br label %85

85:                                               ; preds = %62, %73, %79
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %66, %"class.spvtools::opt::IRContext"* %68, i32 61, i32 %1, i32 %71, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %86 = ptrtoint i8* %65 to i64
  %87 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %86, i64* %87, align 8
  %88 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7)
  %89 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %64, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8
  %90 = icmp eq %"class.spvtools::opt::Instruction"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.spvtools::opt::Instruction"* %89 to void (%"class.spvtools::opt::Instruction"*)***
  %93 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %93, i64 1
  %95 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %94, align 8
  call void %95(%"class.spvtools::opt::Instruction"* nonnull %89) #11
  br label %96

96:                                               ; preds = %85, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  %97 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %98 = icmp eq %"struct.spvtools::opt::Operand"* %97, null
  br i1 %98, label %128, label %99

99:                                               ; preds = %96
  %100 = bitcast %"struct.spvtools::opt::Operand"* %97 to i8*
  %101 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %10, align 8
  %102 = icmp eq %"struct.spvtools::opt::Operand"* %101, %97
  br i1 %102, label %126, label %103

103:                                              ; preds = %99, %121
  %104 = phi %"struct.spvtools::opt::Operand"* [ %105, %121 ], [ %101, %99 ]
  %105 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %104, i64 -1
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %104, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %104, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %107, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %107, align 8
  %109 = icmp eq %"class.std::__1::vector.3"* %108, null
  br i1 %109, label %121, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp eq i32* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = ptrtoint i32* %112 to i64
  %116 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 1
  %117 = bitcast i32** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast i32* %112 to i8*
  call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %114, %110
  %120 = bitcast %"class.std::__1::vector.3"* %108 to i8*
  call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %119, %103
  %122 = icmp eq %"struct.spvtools::opt::Operand"* %105, %97
  br i1 %122, label %123, label %103

123:                                              ; preds = %121
  %124 = bitcast %"class.std::__1::vector"* %4 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %123, %99
  %127 = phi i8* [ %125, %123 ], [ %100, %99 ]
  store %"struct.spvtools::opt::Operand"* %97, %"struct.spvtools::opt::Operand"** %10, align 8
  call void @_ZdlPv(i8* %127) #12
  br label %128

128:                                              ; preds = %96, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret %"class.spvtools::opt::Instruction"* %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.21", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %16) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 2
  %21 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %211

25:                                               ; preds = %19
  %26 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37, i1 false) #11
  %27 = getelementptr inbounds i8, i8* %26, i64 37
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 1, i32 0
  %29 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 0
  tail call void %29(%"union.std::__1::__function::__policy_storage"* %30, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %26) #11
  tail call void @_ZdlPv(i8* nonnull %26) #12
  br label %211

31:                                               ; preds = %12, %5
  %32 = phi i32 [ 0, %5 ], [ %17, %12 ]
  %33 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %34, align 8
  %35 = tail call i8* @_Znwm(i64 112) #12
  %36 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %37 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %38 = icmp eq i32 %2, 62
  %39 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %40 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %40) #11
  %41 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %45 to i32*
  store i64 1, i64* %43, align 8
  store i32 %3, i32* %49, align 8
  %50 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %51, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %55 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %56 = bitcast i32** %54 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %55, %"struct.std::__1::aligned_storage<4, 4>::type"** %56, align 8
  %57 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %58 = bitcast %"class.std::__1::unique_ptr.0"* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %51, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %60 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %65 = bitcast i32** %63 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %64, %"struct.std::__1::aligned_storage<4, 4>::type"** %65, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %67 = bitcast %"class.std::__1::unique_ptr.0"* %66 to i64*
  store i64 0, i64* %67, align 8
  %68 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %64 to i32*
  store i64 1, i64* %62, align 8
  store i32 %4, i32* %68, align 8
  %69 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  store i32 1, i32* %69, align 8
  %70 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %70, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 2
  %74 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 3, i64 0
  %75 = bitcast i32** %73 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %74, %"struct.std::__1::aligned_storage<4, 4>::type"** %75, align 8
  %76 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4
  %77 = bitcast %"class.std::__1::unique_ptr.0"* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %70, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %79 = call i8* @_Znwm(i64 96) #12
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %81 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %79, i8** %81, align 8
  %82 = getelementptr inbounds i8, i8* %79, i64 96
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %"struct.spvtools::opt::Operand"** %83 to i8**
  store i8* %82, i8** %84, align 8
  %85 = bitcast i8* %79 to i32*
  %86 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  store i32 %87, i32* %85, align 8
  %88 = getelementptr inbounds i8, i8* %79, i64 8
  %89 = bitcast i8* %88 to %"class.spvtools::utils::SmallVector"*
  %90 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %91 = bitcast i8* %88 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds i8, i8* %79, i64 16
  %93 = bitcast i8* %92 to i64*
  store i64 0, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %79, i64 24
  %95 = getelementptr inbounds i8, i8* %79, i64 32
  %96 = bitcast i8* %94 to i8**
  store i8* %95, i8** %96, align 8
  %97 = getelementptr inbounds i8, i8* %79, i64 40
  %98 = bitcast i8* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #11
  %100 = getelementptr inbounds i8, i8* %79, i64 48
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %101, align 8
  %104 = getelementptr inbounds i8, i8* %79, i64 56
  %105 = bitcast i8* %104 to %"class.spvtools::utils::SmallVector"*
  %106 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %107 = bitcast i8* %104 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds i8, i8* %79, i64 64
  %109 = bitcast i8* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = getelementptr inbounds i8, i8* %79, i64 72
  %111 = getelementptr inbounds i8, i8* %79, i64 80
  %112 = bitcast i8* %110 to i8**
  store i8* %111, i8** %112, align 8
  %113 = getelementptr inbounds i8, i8* %79, i64 88
  %114 = bitcast i8* %113 to i64*
  store i64 0, i64* %114, align 8
  %115 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %105, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %106) #11
  %116 = getelementptr inbounds i8, i8* %79, i64 96
  %117 = bitcast i8* %35 to %"class.spvtools::opt::Instruction"*
  %118 = select i1 %38, i32 0, i32 %32
  %119 = bitcast %"struct.spvtools::opt::Operand"** %80 to i64*
  %120 = ptrtoint i8* %116 to i64
  store i64 %120, i64* %119, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %117, %"class.spvtools::opt::IRContext"* %37, i32 %2, i32 %1, i32 %118, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #11
  %121 = ptrtoint i8* %35 to i64
  %122 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %124 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %123, align 8
  %125 = icmp eq %"struct.spvtools::opt::Operand"* %124, null
  br i1 %125, label %154, label %126

126:                                              ; preds = %31
  %127 = bitcast %"struct.spvtools::opt::Operand"* %124 to i8*
  %128 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %80, align 8
  %129 = icmp eq %"struct.spvtools::opt::Operand"* %128, %124
  br i1 %129, label %152, label %130

130:                                              ; preds = %126, %148
  %131 = phi %"struct.spvtools::opt::Operand"* [ %132, %148 ], [ %128, %126 ]
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %134 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %135 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %134, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %134, align 8
  %136 = icmp eq %"class.std::__1::vector.3"* %135, null
  br i1 %136, label %148, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %135, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %135, i64 0, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %141, %137
  %147 = bitcast %"class.std::__1::vector.3"* %135 to i8*
  call void @_ZdlPv(i8* %147) #12
  br label %148

148:                                              ; preds = %146, %130
  %149 = icmp eq %"struct.spvtools::opt::Operand"* %132, %124
  br i1 %149, label %150, label %130

150:                                              ; preds = %148
  %151 = load i8*, i8** %81, align 8
  br label %152

152:                                              ; preds = %150, %126
  %153 = phi i8* [ %151, %150 ], [ %127, %126 ]
  store %"struct.spvtools::opt::Operand"* %124, %"struct.spvtools::opt::Operand"** %80, align 8
  call void @_ZdlPv(i8* %153) #12
  br label %154

154:                                              ; preds = %31, %152
  %155 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %157 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %156, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %156, align 8
  %158 = icmp eq %"class.std::__1::vector.3"* %157, null
  br i1 %158, label %170, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %157, i64 0, i32 0, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = icmp eq i32* %161, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = ptrtoint i32* %161 to i64
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %157, i64 0, i32 0, i32 1
  %166 = bitcast i32** %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = bitcast i32* %161 to i8*
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %163, %159
  %169 = bitcast %"class.std::__1::vector.3"* %157 to i8*
  call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %154, %168
  %171 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %172 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %173 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %172, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %172, align 8
  %174 = icmp eq %"class.std::__1::vector.3"* %173, null
  br i1 %174, label %224, label %213

175:                                              ; preds = %224
  %176 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint i32* %177 to i64
  %181 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 1
  %182 = bitcast i32** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast i32* %177 to i8*
  call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %179, %175
  %185 = bitcast %"class.std::__1::vector.3"* %226 to i8*
  call void @_ZdlPv(i8* %185) #12
  br label %186

186:                                              ; preds = %224, %184
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %187 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %188 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %187, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %187, align 8
  %189 = icmp eq %"class.std::__1::vector.3"* %188, null
  br i1 %189, label %201, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 0
  %192 = load i32*, i32** %191, align 8
  %193 = icmp eq i32* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %190
  %195 = ptrtoint i32* %192 to i64
  %196 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 1
  %197 = bitcast i32** %196 to i64*
  store i64 %195, i64* %197, align 8
  %198 = bitcast i32* %192 to i8*
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %194, %190
  %200 = bitcast %"class.std::__1::vector.3"* %188 to i8*
  call void @_ZdlPv(i8* %200) #12
  br label %201

201:                                              ; preds = %186, %199
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  %202 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %6)
  %203 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %34, align 8
  %204 = icmp eq %"class.spvtools::opt::Instruction"* %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = bitcast %"class.spvtools::opt::Instruction"* %203 to void (%"class.spvtools::opt::Instruction"*)***
  %207 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %207, i64 1
  %209 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %208, align 8
  call void %209(%"class.spvtools::opt::Instruction"* nonnull %203) #11
  br label %210

210:                                              ; preds = %201, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  br label %211

211:                                              ; preds = %25, %19, %210
  %212 = phi %"class.spvtools::opt::Instruction"* [ %202, %210 ], [ null, %19 ], [ null, %25 ]
  ret %"class.spvtools::opt::Instruction"* %212

213:                                              ; preds = %170
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %173, i64 0, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = icmp eq i32* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %213
  %218 = ptrtoint i32* %215 to i64
  %219 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %173, i64 0, i32 0, i32 1
  %220 = bitcast i32** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast i32* %215 to i8*
  call void @_ZdlPv(i8* %221) #12
  br label %222

222:                                              ; preds = %217, %213
  %223 = bitcast %"class.std::__1::vector.3"* %173 to i8*
  call void @_ZdlPv(i8* %223) #12
  br label %224

224:                                              ; preds = %222, %170
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %225 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %226 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %225, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %225, align 8
  %227 = icmp eq %"class.std::__1::vector.3"* %226, null
  br i1 %227, label %186, label %175
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.21", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %14) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 2
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %156

23:                                               ; preds = %17
  %24 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37, i1 false) #11
  %25 = getelementptr inbounds i8, i8* %24, i64 37
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 1, i32 0
  %27 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 0
  tail call void %27(%"union.std::__1::__function::__policy_storage"* %28, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %24) #11
  tail call void @_ZdlPv(i8* nonnull %24) #12
  br label %156

29:                                               ; preds = %10, %4
  %30 = phi i32 [ 0, %4 ], [ %15, %10 ]
  %31 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = tail call i8* @_Znwm(i64 112) #12
  %34 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %35 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %36 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #11
  %38 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %43 = bitcast i32** %41 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %42, %"struct.std::__1::aligned_storage<4, 4>::type"** %43, align 8
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %45 = bitcast %"class.std::__1::unique_ptr.0"* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %42 to i32*
  store i64 1, i64* %40, align 8
  store i32 %3, i32* %46, align 8
  %47 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %47, align 8
  %48 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %48, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %52 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %53 = bitcast i32** %51 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %52, %"struct.std::__1::aligned_storage<4, 4>::type"** %53, align 8
  %54 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %55 = bitcast %"class.std::__1::unique_ptr.0"* %54 to i64*
  store i64 0, i64* %55, align 8
  %56 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %48, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %57 = call i8* @_Znwm(i64 48) #12
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %57, i64 48
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"struct.spvtools::opt::Operand"** %61 to i8**
  store i8* %60, i8** %62, align 8
  %63 = bitcast i8* %57 to i32*
  %64 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  store i32 %65, i32* %63, align 8
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to %"class.spvtools::utils::SmallVector"*
  %68 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %69 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds i8, i8* %57, i64 16
  %71 = bitcast i8* %70 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %57, i64 24
  %73 = getelementptr inbounds i8, i8* %57, i64 32
  %74 = bitcast i8* %72 to i8**
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %57, i64 40
  %76 = bitcast i8* %75 to i64*
  store i64 0, i64* %76, align 8
  %77 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %67, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %68) #11
  %78 = getelementptr inbounds i8, i8* %57, i64 48
  %79 = bitcast i8* %33 to %"class.spvtools::opt::Instruction"*
  %80 = bitcast %"struct.spvtools::opt::Operand"** %58 to i64*
  %81 = ptrtoint i8* %78 to i64
  store i64 %81, i64* %80, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %79, %"class.spvtools::opt::IRContext"* %35, i32 %2, i32 %1, i32 %30, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %82 = ptrtoint i8* %33 to i64
  %83 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %85 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %84, align 8
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %85, null
  br i1 %86, label %115, label %87

87:                                               ; preds = %29
  %88 = bitcast %"struct.spvtools::opt::Operand"* %85 to i8*
  %89 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %58, align 8
  %90 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %90, label %113, label %91

91:                                               ; preds = %87, %109
  %92 = phi %"struct.spvtools::opt::Operand"* [ %93, %109 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %96 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %95, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %95, align 8
  %97 = icmp eq %"class.std::__1::vector.3"* %96, null
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %96, i64 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = ptrtoint i32* %100 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %96, i64 0, i32 0, i32 1
  %105 = bitcast i32** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast i32* %100 to i8*
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %102, %98
  %108 = bitcast %"class.std::__1::vector.3"* %96 to i8*
  call void @_ZdlPv(i8* %108) #12
  br label %109

109:                                              ; preds = %107, %91
  %110 = icmp eq %"struct.spvtools::opt::Operand"* %93, %85
  br i1 %110, label %111, label %91

111:                                              ; preds = %109
  %112 = load i8*, i8** %59, align 8
  br label %113

113:                                              ; preds = %111, %87
  %114 = phi i8* [ %112, %111 ], [ %88, %87 ]
  store %"struct.spvtools::opt::Operand"* %85, %"struct.spvtools::opt::Operand"** %58, align 8
  call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %29, %113
  %116 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %117, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %117, align 8
  %119 = icmp eq %"class.std::__1::vector.3"* %118, null
  br i1 %119, label %131, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  %125 = ptrtoint i32* %122 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %124, %120
  %130 = bitcast %"class.std::__1::vector.3"* %118 to i8*
  call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %115, %129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %132 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, null
  br i1 %134, label %146, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = ptrtoint i32* %137 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 1
  %142 = bitcast i32** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast i32* %137 to i8*
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %139, %135
  %145 = bitcast %"class.std::__1::vector.3"* %133 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %131, %144
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  %147 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %5)
  %148 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %32, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %32, align 8
  %149 = icmp eq %"class.spvtools::opt::Instruction"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.spvtools::opt::Instruction"* %148 to void (%"class.spvtools::opt::Instruction"*)***
  %152 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %152, i64 1
  %154 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %153, align 8
  call void %154(%"class.spvtools::opt::Instruction"* nonnull %148) #11
  br label %155

155:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %156

156:                                              ; preds = %23, %17, %155
  %157 = phi %"class.spvtools::opt::Instruction"* [ %147, %155 ], [ null, %17 ], [ null, %23 ]
  ret %"class.spvtools::opt::Instruction"* %157
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass22CloneOriginalReferenceEPNS1_11RefAnalysisEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"*, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nocapture readonly, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1052", align 8
  %5 = alloca %"class.std::__1::tuple.1002", align 1
  %6 = alloca %"class.std::__1::tuple.1052", align 8
  %7 = alloca %"class.std::__1::tuple.1002", align 1
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::unique_ptr.21", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %1, i64 0, i32 7
  %18 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 1, i32 2
  %26 = xor i1 %24, true
  %27 = zext i1 %26 to i32
  %28 = select i1 %21, i32 %27, i32 %25
  %29 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %18, i32 %28) #11
  %30 = tail call i32 @_ZN8spvtools3opt21InstBindlessCheckPass18CloneOriginalImageEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %29, %"class.spvtools::opt::InstructionBuilder"* %2)
  br label %31

31:                                               ; preds = %3, %16
  %32 = phi i32 [ %30, %16 ], [ 0, %3 ]
  %33 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %9, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %1, i64 0, i32 7
  %36 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %36, %"class.spvtools::opt::IRContext"* %38) #11
  %40 = ptrtoint %"class.spvtools::opt::Instruction"* %39 to i64
  %41 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i64*
  store i64 %40, i64* %41, align 8
  %42 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 4
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %102, label %46

46:                                               ; preds = %31
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 3
  %48 = load i8, i8* %47, align 4, !range !2
  %49 = zext i8 %48 to i32
  %50 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %42, i32 %49) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %102, label %52

52:                                               ; preds = %46
  %53 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %54, align 8
  %56 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %55) #11
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 5, i32 0, i32 2
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 2
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %58
  %65 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37, i1 false) #11
  %66 = getelementptr inbounds i8, i8* %65, i64 37
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 5, i32 0, i32 1, i32 0
  %68 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 5, i32 0, i32 0
  tail call void %68(%"union.std::__1::__function::__policy_storage"* %69, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %65) #11
  tail call void @_ZdlPv(i8* nonnull %65) #12
  br label %70

70:                                               ; preds = %52, %58, %64
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #11
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %78 = bitcast i32** %76 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %77, %"struct.std::__1::aligned_storage<4, 4>::type"** %78, align 8
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %80 = bitcast %"class.std::__1::unique_ptr.0"* %79 to i64*
  store i64 0, i64* %80, align 8
  %81 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %77 to i32*
  store i64 1, i64* %75, align 8
  store i32 %56, i32* %81, align 8
  %82 = zext i8 %72 to i64
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 6, i32 0, i32 0
  %84 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %83, align 8
  %85 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 %82, i32 1
  %86 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %85, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %87 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %87, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %87, align 8
  %89 = icmp eq %"class.std::__1::vector.3"* %88, null
  br i1 %89, label %101, label %90

90:                                               ; preds = %70
  %91 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %88, i64 0, i32 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = icmp eq i32* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = ptrtoint i32* %92 to i64
  %96 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %88, i64 0, i32 0, i32 1
  %97 = bitcast i32** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast i32* %92 to i8*
  call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %94, %90
  %100 = bitcast %"class.std::__1::vector.3"* %88 to i8*
  call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %70, %99
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #11
  br label %102

102:                                              ; preds = %31, %46, %101
  %103 = phi i32 [ %50, %101 ], [ 0, %46 ], [ 0, %31 ]
  %104 = phi i32 [ %56, %101 ], [ 0, %46 ], [ 0, %31 ]
  %105 = icmp eq i32 %32, 0
  br i1 %105, label %146, label %106

106:                                              ; preds = %102
  %107 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  %108 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %111 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %112 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %113 = bitcast i32** %111 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %112, %"struct.std::__1::aligned_storage<4, 4>::type"** %113, align 8
  %114 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %115 = bitcast %"class.std::__1::unique_ptr.0"* %114 to i64*
  store i64 0, i64* %115, align 8
  %116 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %112 to i32*
  store i64 1, i64* %110, align 8
  store i32 %32, i32* %116, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 3
  %118 = load i8, i8* %117, align 4, !range !2
  %119 = icmp eq i8 %118, 0
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 4
  %121 = load i8, i8* %120, align 1, !range !2
  %122 = icmp eq i8 %121, 0
  %123 = select i1 %122, i64 1, i64 2
  %124 = xor i1 %122, true
  %125 = zext i1 %124 to i64
  %126 = select i1 %119, i64 %125, i64 %123
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 6, i32 0, i32 0
  %128 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %127, align 8
  %129 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %128, i64 %126, i32 1
  %130 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %129, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %131 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %132 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %131, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %131, align 8
  %133 = icmp eq %"class.std::__1::vector.3"* %132, null
  br i1 %133, label %145, label %134

134:                                              ; preds = %106
  %135 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %132, i64 0, i32 0, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %134
  %139 = ptrtoint i32* %136 to i64
  %140 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %132, i64 0, i32 0, i32 1
  %141 = bitcast i32** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = bitcast i32* %136 to i8*
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %138, %134
  %144 = bitcast %"class.std::__1::vector.3"* %132 to i8*
  call void @_ZdlPv(i8* %144) #12
  br label %145

145:                                              ; preds = %106, %143
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %108) #11
  br label %146

146:                                              ; preds = %102, %145
  %147 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %2, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %9)
  %148 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 5
  %151 = load i32, i32* %150, align 8
  store i32 %151, i32* %11, align 4
  %152 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 7, i32 0
  %153 = bitcast %"class.std::__1::tuple.1052"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #11
  %154 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %155) #11
  %156 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %152, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %7) #11
  %157 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %156, 0
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %157, i64 2
  %159 = bitcast %"struct.std::__1::__hash_node_base.254"* %158 to %"struct.std::__1::pair.1028"*
  %160 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %159, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %155) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #11
  %161 = load i32, i32* %160, align 4
  %162 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162) #11
  %163 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %147, i64 0, i32 5
  %164 = load i32, i32* %163, align 8
  store i32 %164, i32* %12, align 4
  %165 = bitcast %"class.std::__1::tuple.1052"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #11
  %166 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %12, i32** %166, align 8
  %167 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %167) #11
  %168 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %152, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %5) #11
  %169 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %168, 0
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %169, i64 2
  %171 = bitcast %"struct.std::__1::__hash_node_base.254"* %170 to %"struct.std::__1::pair.1028"*
  %172 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %171, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %167) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #11
  store i32 %161, i32* %172, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #11
  %173 = icmp eq i32 %104, 0
  br i1 %173, label %204, label %174

174:                                              ; preds = %146
  %175 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %176 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %175, i64 0, i32 11
  %177 = load i32, i32* %176, align 8
  %178 = and i32 %177, 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %201

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %175, i64 0, i32 4, i32 0, i32 0, i32 0
  %182 = bitcast %"class.spvtools::opt::Module"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = call i8* @_Znwm(i64 48) #12
  %185 = bitcast i8* %184 to %"class.spvtools::opt::analysis::DecorationManager"*
  %186 = getelementptr inbounds i8, i8* %184, i64 32
  %187 = bitcast i8* %186 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %187, align 4
  %188 = getelementptr inbounds i8, i8* %184, i64 40
  %189 = bitcast i8* %188 to i64*
  store i64 %183, i64* %189, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %185) #11
  %190 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %175, i64 0, i32 7
  %191 = ptrtoint i8* %184 to i64
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %190, i64 0, i32 0, i32 0, i32 0
  %193 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %192, align 8
  %194 = bitcast %"class.std::__1::unique_ptr.122"* %190 to i64*
  store i64 %191, i64* %194, align 8
  %195 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %193, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %180
  %197 = bitcast %"class.std::__1::unique_ptr.122"* %190 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %197, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %193) #11
  br label %198

198:                                              ; preds = %196, %180
  %199 = load i32, i32* %176, align 8
  %200 = or i32 %199, 4
  store i32 %200, i32* %176, align 8
  br label %201

201:                                              ; preds = %174, %198
  %202 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %175, i64 0, i32 7, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %202, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %203, i32 %103, i32 %104) #11
  br label %204

204:                                              ; preds = %146, %201
  %205 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %34, align 8
  %206 = icmp eq %"class.spvtools::opt::Instruction"* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %204
  %208 = bitcast %"class.spvtools::opt::Instruction"* %205 to void (%"class.spvtools::opt::Instruction"*)***
  %209 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %209, i64 1
  %211 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %210, align 8
  call void %211(%"class.spvtools::opt::Instruction"* nonnull %205) #11
  br label %212

212:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  ret i32 %104
}

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1002", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %4) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #11
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass10GetImageIdEPNS0_11InstructionE(%"class.spvtools::opt::InstBindlessCheckPass"* nocapture readnone, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %17 [
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
    i32 91, label %5
    i32 92, label %5
    i32 93, label %5
    i32 94, label %5
    i32 96, label %5
    i32 97, label %5
    i32 105, label %5
    i32 305, label %5
    i32 306, label %5
    i32 307, label %5
    i32 308, label %5
    i32 309, label %5
    i32 310, label %5
    i32 311, label %5
    i32 312, label %5
    i32 314, label %5
    i32 315, label %5
    i32 95, label %5
    i32 98, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 106, label %5
    i32 107, label %5
    i32 313, label %5
    i32 320, label %5
    i32 99, label %5
  ]

5:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 1, i32 2
  %13 = xor i1 %11, true
  %14 = zext i1 %13 to i32
  %15 = select i1 %8, i32 %14, i32 %12
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %15) #11
  br label %17

17:                                               ; preds = %2, %5
  %18 = phi i32 [ %16, %5 ], [ 0, %2 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt21InstBindlessCheckPass18GetPointeeTypeInstEPNS0_11InstructionE(%"class.spvtools::opt::InstBindlessCheckPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::Pass"*
  %4 = tail call i32 @_ZNK8spvtools3opt4Pass16GetPointeeTypeIdEPKNS0_11InstructionE(%"class.spvtools::opt::Pass"* %3, %"class.spvtools::opt::Instruction"* %1) #11
  %5 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #11
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #11
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #11
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %2, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %4) #11
  ret %"class.spvtools::opt::Instruction"* %38
}

declare i32 @_ZNK8spvtools3opt4Pass16GetPointeeTypeIdEPKNS0_11InstructionE(%"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPNS0_11InstructionEPNS1_11RefAnalysisE(%"class.spvtools::opt::InstBindlessCheckPass"*, %"class.spvtools::opt::Instruction"*, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.936", align 8
  %5 = alloca %"class.std::__1::function.936", align 8
  %6 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 7
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %6, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -61
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %11, label %344

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 0
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i32 1, i32 2
  %20 = xor i1 %18, true
  %21 = zext i1 %20 to i32
  %22 = select i1 %15, i32 %21, i32 %19
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %22) #11
  %24 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 3
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %26 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %56

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %32, align 8
  %34 = tail call i8* @_Znwm(i64 104) #12
  %35 = bitcast i8* %34 to %"class.spvtools::opt::analysis::DefUseManager"*
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = getelementptr inbounds i8, i8* %34, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #11
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %34, i64 64
  %42 = getelementptr inbounds i8, i8* %34, i64 96
  %43 = bitcast i8* %42 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %43, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %35, %"class.spvtools::opt::Module"* %33) #11
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 6
  %45 = ptrtoint i8* %34 to i64
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.62"* %44 to i64*
  store i64 %45, i64* %48, align 8
  %49 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %47, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %31
  %51 = bitcast %"class.std::__1::unique_ptr.62"* %44 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %51, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %47) #11
  br label %52

52:                                               ; preds = %50, %31
  %53 = load i32, i32* %27, align 8
  %54 = or i32 %53, 1
  store i32 %54, i32* %27, align 8
  %55 = load i32, i32* %24, align 4
  br label %56

56:                                               ; preds = %11, %52
  %57 = phi i32 [ %23, %11 ], [ %55, %52 ]
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 6, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %58, align 8
  %60 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %59, i32 %57) #11
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 65
  br i1 %63, label %64, label %529

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 3
  %66 = load i8, i8* %65, align 4, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 4
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = select i1 %70, i32 1, i32 2
  %72 = xor i1 %70, true
  %73 = zext i1 %72 to i32
  %74 = select i1 %67, i32 %73, i32 %71
  %75 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %60, i32 %74) #11
  %76 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 4
  store i32 %75, i32* %76, align 8
  %77 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 11
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %107

82:                                               ; preds = %64
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 4, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %83, align 8
  %85 = tail call i8* @_Znwm(i64 104) #12
  %86 = bitcast i8* %85 to %"class.spvtools::opt::analysis::DefUseManager"*
  %87 = getelementptr inbounds i8, i8* %85, i64 32
  %88 = bitcast i8* %87 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %88, align 4
  %89 = getelementptr inbounds i8, i8* %85, i64 48
  %90 = getelementptr inbounds i8, i8* %85, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #11
  %91 = bitcast i8* %90 to i8**
  store i8* %89, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %85, i64 64
  %93 = getelementptr inbounds i8, i8* %85, i64 96
  %94 = bitcast i8* %93 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %94, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %86, %"class.spvtools::opt::Module"* %84) #11
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 6
  %96 = ptrtoint i8* %85 to i64
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.62"* %95 to i64*
  store i64 %96, i64* %99, align 8
  %100 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %98, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %82
  %102 = bitcast %"class.std::__1::unique_ptr.62"* %95 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %102, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %98) #11
  br label %103

103:                                              ; preds = %101, %82
  %104 = load i32, i32* %78, align 8
  %105 = or i32 %104, 1
  store i32 %105, i32* %78, align 8
  %106 = load i32, i32* %76, align 8
  br label %107

107:                                              ; preds = %64, %103
  %108 = phi i32 [ %75, %64 ], [ %106, %103 ]
  %109 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 6, i32 0, i32 0, i32 0
  %110 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %109, align 8
  %111 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %110, i32 %108) #11
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 59
  br i1 %114, label %115, label %529

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 3
  %117 = load i8, i8* %116, align 4, !range !2
  %118 = icmp eq i8 %117, 0
  %119 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 4
  %120 = load i8, i8* %119, align 1, !range !2
  %121 = icmp eq i8 %120, 0
  %122 = select i1 %121, i32 1, i32 2
  %123 = xor i1 %121, true
  %124 = zext i1 %123 to i32
  %125 = select i1 %118, i32 %124, i32 %122
  %126 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %111, i32 %125) #11
  switch i32 %126, label %529 [
    i32 2, label %127
    i32 12, label %310
  ]

127:                                              ; preds = %115
  %128 = load i8, i8* %116, align 4, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %111, i32 0) #11
  br label %132

132:                                              ; preds = %127, %130
  %133 = phi i32 [ %131, %130 ], [ 0, %127 ]
  %134 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %134, i64 0, i32 11
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %163

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %134, i64 0, i32 4, i32 0, i32 0, i32 0
  %141 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %140, align 8
  %142 = tail call i8* @_Znwm(i64 104) #12
  %143 = bitcast i8* %142 to %"class.spvtools::opt::analysis::DefUseManager"*
  %144 = getelementptr inbounds i8, i8* %142, i64 32
  %145 = bitcast i8* %144 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %145, align 4
  %146 = getelementptr inbounds i8, i8* %142, i64 48
  %147 = getelementptr inbounds i8, i8* %142, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 16, i1 false) #11
  %148 = bitcast i8* %147 to i8**
  store i8* %146, i8** %148, align 8
  %149 = getelementptr inbounds i8, i8* %142, i64 64
  %150 = getelementptr inbounds i8, i8* %142, i64 96
  %151 = bitcast i8* %150 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %151, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %143, %"class.spvtools::opt::Module"* %141) #11
  %152 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %134, i64 0, i32 6
  %153 = ptrtoint i8* %142 to i64
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %152, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %154, align 8
  %156 = bitcast %"class.std::__1::unique_ptr.62"* %152 to i64*
  store i64 %153, i64* %156, align 8
  %157 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %155, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %139
  %159 = bitcast %"class.std::__1::unique_ptr.62"* %152 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %159, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %155) #11
  br label %160

160:                                              ; preds = %158, %139
  %161 = load i32, i32* %135, align 8
  %162 = or i32 %161, 1
  store i32 %162, i32* %135, align 8
  br label %163

163:                                              ; preds = %132, %160
  %164 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %134, i64 0, i32 6, i32 0, i32 0, i32 0
  %165 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %164, align 8
  %166 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %165, i32 %133) #11
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %166, i64 0, i32 3
  %168 = load i8, i8* %167, align 4, !range !2
  %169 = icmp eq i8 %168, 0
  %170 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %166, i64 0, i32 4
  %171 = load i8, i8* %170, align 1, !range !2
  %172 = icmp eq i8 %171, 0
  %173 = select i1 %172, i32 1, i32 2
  %174 = xor i1 %172, true
  %175 = zext i1 %174 to i32
  %176 = select i1 %169, i32 %175, i32 %173
  %177 = add nuw nsw i32 %176, 1
  %178 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %166, i32 %177) #11
  %179 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %179, i64 0, i32 11
  %181 = load i32, i32* %180, align 8
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %208

184:                                              ; preds = %163
  %185 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %179, i64 0, i32 4, i32 0, i32 0, i32 0
  %186 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %185, align 8
  %187 = tail call i8* @_Znwm(i64 104) #12
  %188 = bitcast i8* %187 to %"class.spvtools::opt::analysis::DefUseManager"*
  %189 = getelementptr inbounds i8, i8* %187, i64 32
  %190 = bitcast i8* %189 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %190, align 4
  %191 = getelementptr inbounds i8, i8* %187, i64 48
  %192 = getelementptr inbounds i8, i8* %187, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 16, i1 false) #11
  %193 = bitcast i8* %192 to i8**
  store i8* %191, i8** %193, align 8
  %194 = getelementptr inbounds i8, i8* %187, i64 64
  %195 = getelementptr inbounds i8, i8* %187, i64 96
  %196 = bitcast i8* %195 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %196, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %188, %"class.spvtools::opt::Module"* %186) #11
  %197 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %179, i64 0, i32 6
  %198 = ptrtoint i8* %187 to i64
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %197, i64 0, i32 0, i32 0, i32 0
  %200 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %199, align 8
  %201 = bitcast %"class.std::__1::unique_ptr.62"* %197 to i64*
  store i64 %198, i64* %201, align 8
  %202 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %200, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %184
  %204 = bitcast %"class.std::__1::unique_ptr.62"* %197 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %204, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %200) #11
  br label %205

205:                                              ; preds = %203, %184
  %206 = load i32, i32* %180, align 8
  %207 = or i32 %206, 1
  store i32 %207, i32* %180, align 8
  br label %208

208:                                              ; preds = %163, %205
  %209 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %179, i64 0, i32 6, i32 0, i32 0, i32 0
  %210 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %209, align 8
  %211 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %210, i32 %178) #11
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %211, i64 0, i32 2
  %213 = load i32, i32* %212, align 8
  %214 = or i32 %213, 1
  %215 = icmp eq i32 %214, 29
  br i1 %215, label %216, label %228

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %211, i64 0, i32 3
  %218 = load i8, i8* %217, align 4, !range !2
  %219 = icmp eq i8 %218, 0
  %220 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %211, i64 0, i32 4
  %221 = load i8, i8* %220, align 1, !range !2
  %222 = icmp eq i8 %221, 0
  %223 = select i1 %222, i32 1, i32 2
  %224 = xor i1 %222, true
  %225 = zext i1 %224 to i32
  %226 = select i1 %219, i32 %225, i32 %223
  %227 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %211, i32 %226) #11
  br label %228

228:                                              ; preds = %208, %216
  %229 = phi i32 [ %227, %216 ], [ %178, %208 ]
  %230 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %231 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %230, i64 0, i32 11
  %232 = load i32, i32* %231, align 8
  %233 = and i32 %232, 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %256

235:                                              ; preds = %228
  %236 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %230, i64 0, i32 4, i32 0, i32 0, i32 0
  %237 = bitcast %"class.spvtools::opt::Module"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = tail call i8* @_Znwm(i64 48) #12
  %240 = bitcast i8* %239 to %"class.spvtools::opt::analysis::DecorationManager"*
  %241 = getelementptr inbounds i8, i8* %239, i64 32
  %242 = bitcast i8* %241 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %239, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %242, align 4
  %243 = getelementptr inbounds i8, i8* %239, i64 40
  %244 = bitcast i8* %243 to i64*
  store i64 %238, i64* %244, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %240) #11
  %245 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %230, i64 0, i32 7
  %246 = ptrtoint i8* %239 to i64
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %245, i64 0, i32 0, i32 0, i32 0
  %248 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %247, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.122"* %245 to i64*
  store i64 %246, i64* %249, align 8
  %250 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %248, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %235
  %252 = bitcast %"class.std::__1::unique_ptr.122"* %245 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %252, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %248) #11
  br label %253

253:                                              ; preds = %251, %235
  %254 = load i32, i32* %231, align 8
  %255 = or i32 %254, 4
  store i32 %255, i32* %231, align 8
  br label %256

256:                                              ; preds = %228, %253
  %257 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %230, i64 0, i32 7, i32 0, i32 0, i32 0
  %258 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %257, align 8
  %259 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %4, i64 0, i32 0, i32 1, i32 0
  %260 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPS4_PNSB_11RefAnalysisEE3$_0S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %259, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPNS5_11InstructionEPNS6_11RefAnalysisEE3$_0FbRKS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %260, align 8
  %261 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %258, i32 %229, i32 2, %"class.std::__1::function.936"* nonnull %4) #11
  %262 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %260, align 8
  %263 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %262, i64 0, i32 1
  %264 = load void (i8*)*, void (i8*)** %263, align 8
  %265 = icmp eq void (i8*)* %264, null
  br i1 %265, label %269, label %266

266:                                              ; preds = %256
  %267 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %4, i64 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  call void %264(i8* %268) #11
  br label %269

269:                                              ; preds = %256, %266
  br i1 %261, label %310, label %270

270:                                              ; preds = %269
  %271 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %272 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %271, i64 0, i32 11
  %273 = load i32, i32* %272, align 8
  %274 = and i32 %273, 4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %297

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %271, i64 0, i32 4, i32 0, i32 0, i32 0
  %278 = bitcast %"class.spvtools::opt::Module"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = call i8* @_Znwm(i64 48) #12
  %281 = bitcast i8* %280 to %"class.spvtools::opt::analysis::DecorationManager"*
  %282 = getelementptr inbounds i8, i8* %280, i64 32
  %283 = bitcast i8* %282 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %280, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %283, align 4
  %284 = getelementptr inbounds i8, i8* %280, i64 40
  %285 = bitcast i8* %284 to i64*
  store i64 %279, i64* %285, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %281) #11
  %286 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %271, i64 0, i32 7
  %287 = ptrtoint i8* %280 to i64
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %286, i64 0, i32 0, i32 0, i32 0
  %289 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %288, align 8
  %290 = bitcast %"class.std::__1::unique_ptr.122"* %286 to i64*
  store i64 %287, i64* %290, align 8
  %291 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %289, null
  br i1 %291, label %294, label %292

292:                                              ; preds = %276
  %293 = bitcast %"class.std::__1::unique_ptr.122"* %286 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %293, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %289) #11
  br label %294

294:                                              ; preds = %292, %276
  %295 = load i32, i32* %272, align 8
  %296 = or i32 %295, 4
  store i32 %296, i32* %272, align 8
  br label %297

297:                                              ; preds = %270, %294
  %298 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %271, i64 0, i32 7, i32 0, i32 0, i32 0
  %299 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %298, align 8
  %300 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %5, i64 0, i32 0, i32 1, i32 0
  %301 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPS4_PNSB_11RefAnalysisEE3$_1S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %300, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPNS5_11InstructionEPNS6_11RefAnalysisEE3$_1FbRKS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %301, align 8
  %302 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %299, i32 %229, i32 3, %"class.std::__1::function.936"* nonnull %5) #11
  %303 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %301, align 8
  %304 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %303, i64 0, i32 1
  %305 = load void (i8*)*, void (i8*)** %304, align 8
  %306 = icmp eq void (i8*)* %305, null
  br i1 %306, label %310, label %307

307:                                              ; preds = %297
  %308 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %5, i64 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void %305(i8* %309) #11
  br label %310

310:                                              ; preds = %307, %297, %269, %115
  %311 = phi i32 [ %126, %115 ], [ 2, %269 ], [ 12, %297 ], [ 12, %307 ]
  %312 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 6
  store i32 %311, i32* %312, align 8
  %313 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt21InstBindlessCheckPass18GetPointeeTypeInstEPNS0_11InstructionE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"class.spvtools::opt::Instruction"* %111)
  %314 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %313, i64 0, i32 2
  %315 = load i32, i32* %314, align 8
  %316 = and i32 %315, -2
  %317 = icmp eq i32 %316, 28
  br i1 %317, label %318, label %342

318:                                              ; preds = %310
  %319 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 6
  %320 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 6, i32 0, i32 1
  %321 = bitcast %"struct.spvtools::opt::Operand"** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.std::__1::vector"* %319 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %322, %324
  %326 = sdiv exact i64 %325, 48
  %327 = load i8, i8* %65, align 4, !range !2
  %328 = icmp eq i8 %327, 0
  %329 = load i8, i8* %68, align 1, !range !2
  %330 = icmp eq i8 %329, 0
  %331 = select i1 %330, i32 1, i32 2
  %332 = xor i1 %330, true
  %333 = zext i1 %332 to i32
  %334 = select i1 %328, i32 %333, i32 %331
  %335 = trunc i64 %326 to i32
  %336 = sub i32 %335, %334
  %337 = icmp ult i32 %336, 3
  br i1 %337, label %529, label %338

338:                                              ; preds = %318
  %339 = add nuw nsw i32 %334, 1
  %340 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %60, i32 %339) #11
  %341 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 5
  store i32 %340, i32* %341, align 4
  br label %529

342:                                              ; preds = %310
  %343 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 5
  store i32 0, i32* %343, align 4
  br label %529

344:                                              ; preds = %3
  %345 = tail call i32 @_ZN8spvtools3opt21InstBindlessCheckPass10GetImageIdEPNS0_11InstructionE(%"class.spvtools::opt::InstBindlessCheckPass"* undef, %"class.spvtools::opt::Instruction"* %1)
  %346 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 1
  store i32 %345, i32* %346, align 4
  %347 = icmp eq i32 %345, 0
  br i1 %347, label %529, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  br label %350

350:                                              ; preds = %348, %387
  %351 = phi i32 [ %398, %387 ], [ %345, %348 ]
  %352 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %349, align 8
  %353 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %352, i64 0, i32 11
  %354 = load i32, i32* %353, align 8
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %381

357:                                              ; preds = %350
  %358 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %352, i64 0, i32 4, i32 0, i32 0, i32 0
  %359 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %358, align 8
  %360 = tail call i8* @_Znwm(i64 104) #12
  %361 = bitcast i8* %360 to %"class.spvtools::opt::analysis::DefUseManager"*
  %362 = getelementptr inbounds i8, i8* %360, i64 32
  %363 = bitcast i8* %362 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %360, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %363, align 4
  %364 = getelementptr inbounds i8, i8* %360, i64 48
  %365 = getelementptr inbounds i8, i8* %360, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %364, i8 0, i64 16, i1 false) #11
  %366 = bitcast i8* %365 to i8**
  store i8* %364, i8** %366, align 8
  %367 = getelementptr inbounds i8, i8* %360, i64 64
  %368 = getelementptr inbounds i8, i8* %360, i64 96
  %369 = bitcast i8* %368 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %367, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %369, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %361, %"class.spvtools::opt::Module"* %359) #11
  %370 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %352, i64 0, i32 6
  %371 = ptrtoint i8* %360 to i64
  %372 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %370, i64 0, i32 0, i32 0, i32 0
  %373 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %372, align 8
  %374 = bitcast %"class.std::__1::unique_ptr.62"* %370 to i64*
  store i64 %371, i64* %374, align 8
  %375 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %373, null
  br i1 %375, label %378, label %376

376:                                              ; preds = %357
  %377 = bitcast %"class.std::__1::unique_ptr.62"* %370 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %377, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %373) #11
  br label %378

378:                                              ; preds = %376, %357
  %379 = load i32, i32* %353, align 8
  %380 = or i32 %379, 1
  store i32 %380, i32* %353, align 8
  br label %381

381:                                              ; preds = %350, %378
  %382 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %352, i64 0, i32 6, i32 0, i32 0, i32 0
  %383 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %382, align 8
  %384 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %383, i32 %351) #11
  %385 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %384, i64 0, i32 2
  %386 = load i32, i32* %385, align 8
  switch i32 %386, label %529 [
    i32 86, label %387
    i32 100, label %387
    i32 83, label %387
    i32 61, label %399
  ]

387:                                              ; preds = %381, %381, %381
  %388 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %384, i64 0, i32 3
  %389 = load i8, i8* %388, align 4, !range !2
  %390 = icmp eq i8 %389, 0
  %391 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %384, i64 0, i32 4
  %392 = load i8, i8* %391, align 1, !range !2
  %393 = icmp eq i8 %392, 0
  %394 = select i1 %393, i32 1, i32 2
  %395 = xor i1 %393, true
  %396 = zext i1 %395 to i32
  %397 = select i1 %390, i32 %396, i32 %394
  %398 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %384, i32 %397) #11
  br label %350

399:                                              ; preds = %381
  %400 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 0
  store i32 %351, i32* %400, align 8
  %401 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %384, i64 0, i32 3
  %402 = load i8, i8* %401, align 4, !range !2
  %403 = icmp eq i8 %402, 0
  %404 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %384, i64 0, i32 4
  %405 = load i8, i8* %404, align 1, !range !2
  %406 = icmp eq i8 %405, 0
  %407 = select i1 %406, i32 1, i32 2
  %408 = xor i1 %406, true
  %409 = zext i1 %408 to i32
  %410 = select i1 %403, i32 %409, i32 %407
  %411 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %384, i32 %410) #11
  %412 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 3
  store i32 %411, i32* %412, align 4
  %413 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %349, align 8
  %414 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %413, i64 0, i32 11
  %415 = load i32, i32* %414, align 8
  %416 = and i32 %415, 1
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %443

418:                                              ; preds = %399
  %419 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %413, i64 0, i32 4, i32 0, i32 0, i32 0
  %420 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %419, align 8
  %421 = tail call i8* @_Znwm(i64 104) #12
  %422 = bitcast i8* %421 to %"class.spvtools::opt::analysis::DefUseManager"*
  %423 = getelementptr inbounds i8, i8* %421, i64 32
  %424 = bitcast i8* %423 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %421, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %424, align 4
  %425 = getelementptr inbounds i8, i8* %421, i64 48
  %426 = getelementptr inbounds i8, i8* %421, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %425, i8 0, i64 16, i1 false) #11
  %427 = bitcast i8* %426 to i8**
  store i8* %425, i8** %427, align 8
  %428 = getelementptr inbounds i8, i8* %421, i64 64
  %429 = getelementptr inbounds i8, i8* %421, i64 96
  %430 = bitcast i8* %429 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %428, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %430, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %422, %"class.spvtools::opt::Module"* %420) #11
  %431 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %413, i64 0, i32 6
  %432 = ptrtoint i8* %421 to i64
  %433 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %431, i64 0, i32 0, i32 0, i32 0
  %434 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %433, align 8
  %435 = bitcast %"class.std::__1::unique_ptr.62"* %431 to i64*
  store i64 %432, i64* %435, align 8
  %436 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %434, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %418
  %438 = bitcast %"class.std::__1::unique_ptr.62"* %431 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %438, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %434) #11
  br label %439

439:                                              ; preds = %437, %418
  %440 = load i32, i32* %414, align 8
  %441 = or i32 %440, 1
  store i32 %441, i32* %414, align 8
  %442 = load i32, i32* %412, align 4
  br label %443

443:                                              ; preds = %399, %439
  %444 = phi i32 [ %411, %399 ], [ %442, %439 ]
  %445 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %413, i64 0, i32 6, i32 0, i32 0, i32 0
  %446 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %445, align 8
  %447 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %446, i32 %444) #11
  %448 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %447, i64 0, i32 2
  %449 = load i32, i32* %448, align 8
  switch i32 %449, label %529 [
    i32 59, label %450
    i32 65, label %454
  ]

450:                                              ; preds = %443
  %451 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 5
  store i32 0, i32* %451, align 4
  %452 = load i32, i32* %412, align 4
  %453 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 4
  store i32 %452, i32* %453, align 8
  br label %528

454:                                              ; preds = %443
  %455 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %447, i64 0, i32 6
  %456 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %447, i64 0, i32 6, i32 0, i32 1
  %457 = bitcast %"struct.spvtools::opt::Operand"** %456 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = bitcast %"class.std::__1::vector"* %455 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = sub i64 %458, %460
  %462 = sdiv exact i64 %461, 48
  %463 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %447, i64 0, i32 3
  %464 = load i8, i8* %463, align 4, !range !2
  %465 = icmp eq i8 %464, 0
  %466 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %447, i64 0, i32 4
  %467 = load i8, i8* %466, align 1, !range !2
  %468 = icmp eq i8 %467, 0
  %469 = select i1 %468, i32 1, i32 2
  %470 = xor i1 %468, true
  %471 = zext i1 %470 to i32
  %472 = select i1 %465, i32 %471, i32 %469
  %473 = trunc i64 %462 to i32
  %474 = sub i32 %473, %472
  %475 = icmp eq i32 %474, 2
  br i1 %475, label %476, label %529

476:                                              ; preds = %454
  %477 = add nuw nsw i32 %472, 1
  %478 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %447, i32 %477) #11
  %479 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 5
  store i32 %478, i32* %479, align 4
  %480 = load i8, i8* %463, align 4, !range !2
  %481 = icmp eq i8 %480, 0
  %482 = load i8, i8* %466, align 1, !range !2
  %483 = icmp eq i8 %482, 0
  %484 = select i1 %483, i32 1, i32 2
  %485 = xor i1 %483, true
  %486 = zext i1 %485 to i32
  %487 = select i1 %481, i32 %486, i32 %484
  %488 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %447, i32 %487) #11
  %489 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %2, i64 0, i32 4
  store i32 %488, i32* %489, align 8
  %490 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %349, align 8
  %491 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %490, i64 0, i32 11
  %492 = load i32, i32* %491, align 8
  %493 = and i32 %492, 1
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %520

495:                                              ; preds = %476
  %496 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %490, i64 0, i32 4, i32 0, i32 0, i32 0
  %497 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %496, align 8
  %498 = tail call i8* @_Znwm(i64 104) #12
  %499 = bitcast i8* %498 to %"class.spvtools::opt::analysis::DefUseManager"*
  %500 = getelementptr inbounds i8, i8* %498, i64 32
  %501 = bitcast i8* %500 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %498, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %501, align 4
  %502 = getelementptr inbounds i8, i8* %498, i64 48
  %503 = getelementptr inbounds i8, i8* %498, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %502, i8 0, i64 16, i1 false) #11
  %504 = bitcast i8* %503 to i8**
  store i8* %502, i8** %504, align 8
  %505 = getelementptr inbounds i8, i8* %498, i64 64
  %506 = getelementptr inbounds i8, i8* %498, i64 96
  %507 = bitcast i8* %506 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %505, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %507, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %499, %"class.spvtools::opt::Module"* %497) #11
  %508 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %490, i64 0, i32 6
  %509 = ptrtoint i8* %498 to i64
  %510 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %508, i64 0, i32 0, i32 0, i32 0
  %511 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %510, align 8
  %512 = bitcast %"class.std::__1::unique_ptr.62"* %508 to i64*
  store i64 %509, i64* %512, align 8
  %513 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %511, null
  br i1 %513, label %516, label %514

514:                                              ; preds = %495
  %515 = bitcast %"class.std::__1::unique_ptr.62"* %508 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %515, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %511) #11
  br label %516

516:                                              ; preds = %514, %495
  %517 = load i32, i32* %491, align 8
  %518 = or i32 %517, 1
  store i32 %518, i32* %491, align 8
  %519 = load i32, i32* %489, align 8
  br label %520

520:                                              ; preds = %476, %516
  %521 = phi i32 [ %488, %476 ], [ %519, %516 ]
  %522 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %490, i64 0, i32 6, i32 0, i32 0, i32 0
  %523 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %522, align 8
  %524 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %523, i32 %521) #11
  %525 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %524, i64 0, i32 2
  %526 = load i32, i32* %525, align 8
  %527 = icmp eq i32 %526, 59
  br i1 %527, label %528, label %529

528:                                              ; preds = %520, %450
  br label %529

529:                                              ; preds = %381, %443, %454, %520, %528, %344, %56, %115, %338, %342, %318, %107
  %530 = phi i1 [ false, %56 ], [ false, %107 ], [ false, %115 ], [ false, %318 ], [ true, %342 ], [ true, %338 ], [ false, %344 ], [ true, %528 ], [ false, %520 ], [ false, %454 ], [ false, %443 ], [ false, %381 ]
  ret i1 %530
}

declare zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::function.936"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass10FindStrideEjj(%"class.spvtools::opt::InstBindlessCheckPass"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::function.936", align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 -559038737, i32* %4, align 4
  %7 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = bitcast %"class.spvtools::opt::Module"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = tail call i8* @_Znwm(i64 48) #12
  %18 = bitcast i8* %17 to %"class.spvtools::opt::analysis::DecorationManager"*
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 40
  %22 = bitcast i8* %21 to i64*
  store i64 %16, i64* %22, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %18) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 7
  %24 = ptrtoint i8* %17 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.122"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %13
  %30 = bitcast %"class.std::__1::unique_ptr.122"* %23 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %30, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %26) #11
  br label %31

31:                                               ; preds = %29, %13
  %32 = load i32, i32* %9, align 8
  %33 = or i32 %32, 4
  store i32 %33, i32* %9, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 7, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %35, align 8
  %37 = ptrtoint i32* %4 to i64
  %38 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %5, i64 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass10FindStrideEjjE3$_2S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %38, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass10FindStrideEjjE3$_2FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %39, align 8
  %40 = bitcast %"class.std::__1::function.936"* %5 to i64*
  store i64 %37, i64* %40, align 8
  %41 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %36, i32 %1, i32 %2, %"class.std::__1::function.936"* nonnull %5) #11
  %42 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %39, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %42, i64 0, i32 1
  %44 = load void (i8*)*, void (i8*)** %43, align 8
  %45 = icmp eq void (i8*)* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %5, i64 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void %44(i8* %48) #11
  br label %49

49:                                               ; preds = %34, %46
  %50 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass8ByteSizeEjjbb(%"class.spvtools::opt::InstBindlessCheckPass"* nocapture, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = trunc i32 %9 to i16
  %11 = icmp slt i16 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 5
  %14 = tail call i8* @_Znwm(i64 240) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %15, %"class.std::__1::function"* dereferenceable(32) %13, %"class.spvtools::opt::IRContext"* %7) #11
  %16 = ptrtoint i8* %14 to i64
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 20
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.480"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %19) #11
  %23 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %22, %12
  %25 = load i32, i32* %8, align 8
  %26 = or i32 %25, 32768
  store i32 %26, i32* %8, align 8
  br label %27

27:                                               ; preds = %5, %24
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 20, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %28, align 8
  %30 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %29, i32 %1) #11
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %30, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %74 [
    i32 13, label %100
    i32 5, label %33
    i32 4, label %54
  ]

33:                                               ; preds = %27
  %34 = bitcast %"class.spvtools::opt::analysis::Type"* %30 to %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)***
  %35 = load %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)** %35, i64 17
  %37 = load %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)** %36, align 8
  %38 = tail call %"class.spvtools::opt::analysis::Matrix"* %37(%"class.spvtools::opt::analysis::Type"* %30) #11
  br i1 %3, label %39, label %41

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix", %"class.spvtools::opt::analysis::Matrix"* %38, i64 0, i32 3
  br label %50

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix", %"class.spvtools::opt::analysis::Matrix"* %38, i64 0, i32 2
  %43 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %42, align 8
  %44 = bitcast %"class.spvtools::opt::analysis::Type"* %43 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %45 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %45, i64 15
  %47 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %46, align 8
  %48 = tail call %"class.spvtools::opt::analysis::Vector"* %47(%"class.spvtools::opt::analysis::Type"* %43) #11
  %49 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %48, i64 0, i32 3
  br label %50

50:                                               ; preds = %41, %39
  %51 = phi i32* [ %40, %39 ], [ %49, %41 ]
  %52 = load i32, i32* %51, align 8
  %53 = mul i32 %52, %2
  br label %100

54:                                               ; preds = %27
  %55 = bitcast %"class.spvtools::opt::analysis::Type"* %30 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %56 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %56, i64 15
  %58 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %57, align 8
  %59 = tail call %"class.spvtools::opt::analysis::Vector"* %58(%"class.spvtools::opt::analysis::Type"* %30) #11
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %59, i64 0, i32 2
  %63 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %62, align 8
  br i1 %4, label %64, label %74

64:                                               ; preds = %54
  %65 = xor i1 %3, true
  %66 = icmp ne i32 %2, 0
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = tail call i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %29, %"class.spvtools::opt::analysis::Type"* %63) #11
  %70 = add i32 %61, -1
  %71 = mul i32 %70, %2
  %72 = tail call i32 @_ZN8spvtools3opt21InstBindlessCheckPass8ByteSizeEjjbb(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %69, i32 0, i1 zeroext false, i1 zeroext false)
  %73 = add i32 %72, %71
  ret i32 %73

74:                                               ; preds = %27, %54, %64
  %75 = phi i32 [ %61, %64 ], [ %61, %54 ], [ 1, %27 ]
  %76 = phi %"class.spvtools::opt::analysis::Type"* [ %63, %64 ], [ %63, %54 ], [ %30, %27 ]
  %77 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %76, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  switch i32 %78, label %97 [
    i32 3, label %79
    i32 2, label %86
  ]

79:                                               ; preds = %74
  %80 = bitcast %"class.spvtools::opt::analysis::Type"* %76 to %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)***
  %81 = load %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)** %81, i64 13
  %83 = load %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)** %82, align 8
  %84 = tail call %"class.spvtools::opt::analysis::Float"* %83(%"class.spvtools::opt::analysis::Type"* %76) #11
  %85 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %84, i64 0, i32 1
  br label %93

86:                                               ; preds = %74
  %87 = bitcast %"class.spvtools::opt::analysis::Type"* %76 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %88 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %87, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %88, i64 11
  %90 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %89, align 8
  %91 = tail call %"class.spvtools::opt::analysis::Integer"* %90(%"class.spvtools::opt::analysis::Type"* %76) #11
  %92 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %91, i64 0, i32 1
  br label %93

93:                                               ; preds = %79, %86
  %94 = phi i32* [ %92, %86 ], [ %85, %79 ]
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 %95, %75
  br label %97

97:                                               ; preds = %93, %74
  %98 = phi i32 [ %75, %74 ], [ %96, %93 ]
  %99 = lshr i32 %98, 3
  br label %100

100:                                              ; preds = %27, %97, %50
  %101 = phi i32 [ %53, %50 ], [ 8, %27 ], [ %99, %97 ]
  ret i32 %101
}

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass14GenLastByteIdxEPNS1_11RefAnalysisEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"*, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nocapture readonly, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::function.936", align 8
  %9 = alloca %"class.std::__1::function.936", align 8
  %10 = alloca %"class.std::__1::function.936", align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %41

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %18, align 8
  %20 = tail call i8* @_Znwm(i64 104) #12
  %21 = bitcast i8* %20 to %"class.spvtools::opt::analysis::DefUseManager"*
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = getelementptr inbounds i8, i8* %20, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 64
  %28 = getelementptr inbounds i8, i8* %20, i64 96
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %29, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %21, %"class.spvtools::opt::Module"* %19) #11
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6
  %31 = ptrtoint i8* %20 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.62"* %30 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %17
  %37 = bitcast %"class.std::__1::unique_ptr.62"* %30 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %37, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %33) #11
  br label %38

38:                                               ; preds = %36, %17
  %39 = load i32, i32* %13, align 8
  %40 = or i32 %39, 1
  store i32 %40, i32* %13, align 8
  br label %41

41:                                               ; preds = %3, %38
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %42, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %1, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %45) #11
  %47 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt21InstBindlessCheckPass18GetPointeeTypeInstEPNS0_11InstructionE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"class.spvtools::opt::Instruction"* %46)
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2
  %51 = icmp eq i32 %50, 28
  br i1 %51, label %52, label %63

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 3
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 4
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  %59 = select i1 %58, i32 1, i32 2
  %60 = xor i1 %58, true
  %61 = zext i1 %60 to i32
  %62 = select i1 %55, i32 %61, i32 %59
  br label %71

63:                                               ; preds = %41
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 4
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 3
  %69 = load i8, i8* %68, align 4, !range !2
  %70 = zext i8 %69 to i32
  br label %71

71:                                               ; preds = %52, %67
  %72 = phi i32 [ %70, %67 ], [ %62, %52 ]
  %73 = phi i32 [ 1, %67 ], [ 2, %52 ]
  %74 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %47, i32 %72) #11
  br label %75

75:                                               ; preds = %71, %63
  %76 = phi i32 [ 1, %63 ], [ %73, %71 ]
  %77 = phi i32 [ 0, %63 ], [ %74, %71 ]
  %78 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %78, i64 0, i32 11
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %107

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %78, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %84, align 8
  %86 = tail call i8* @_Znwm(i64 104) #12
  %87 = bitcast i8* %86 to %"class.spvtools::opt::analysis::DefUseManager"*
  %88 = getelementptr inbounds i8, i8* %86, i64 32
  %89 = bitcast i8* %88 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %89, align 4
  %90 = getelementptr inbounds i8, i8* %86, i64 48
  %91 = getelementptr inbounds i8, i8* %86, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #11
  %92 = bitcast i8* %91 to i8**
  store i8* %90, i8** %92, align 8
  %93 = getelementptr inbounds i8, i8* %86, i64 64
  %94 = getelementptr inbounds i8, i8* %86, i64 96
  %95 = bitcast i8* %94 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %95, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %87, %"class.spvtools::opt::Module"* %85) #11
  %96 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %78, i64 0, i32 6
  %97 = ptrtoint i8* %86 to i64
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %96, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.62"* %96 to i64*
  store i64 %97, i64* %100, align 8
  %101 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %99, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %83
  %103 = bitcast %"class.std::__1::unique_ptr.62"* %96 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %103, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %99) #11
  br label %104

104:                                              ; preds = %102, %83
  %105 = load i32, i32* %79, align 8
  %106 = or i32 %105, 1
  store i32 %106, i32* %79, align 8
  br label %107

107:                                              ; preds = %75, %104
  %108 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %78, i64 0, i32 6, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %108, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %1, i64 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %109, i32 %111) #11
  %113 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #11
  store i32 0, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %114 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 6
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 6, i32 0, i32 1
  %116 = bitcast %"struct.spvtools::opt::Operand"** %115 to i64*
  %117 = bitcast %"class.std::__1::vector"* %114 to i64*
  %118 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 3
  %119 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 4
  %120 = bitcast i32* %6 to i8*
  %121 = bitcast i32* %7 to i8*
  %122 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %8, i64 0, i32 0, i32 1, i32 0
  %123 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %8, i64 0, i32 0, i32 2
  %124 = bitcast %"class.std::__1::function.936"* %8 to i32**
  %125 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %8, i64 0, i32 0, i32 0, i32 1
  %126 = bitcast [8 x i8]* %125 to i32**
  %127 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %8, i64 0, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %9, i64 0, i32 0, i32 1, i32 0
  %129 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %9, i64 0, i32 0, i32 2
  %130 = bitcast %"class.std::__1::function.936"* %9 to i32**
  %131 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %9, i64 0, i32 0, i32 0, i32 1
  %132 = bitcast [8 x i8]* %131 to i32**
  %133 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %9, i64 0, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %10, i64 0, i32 0, i32 1, i32 0
  %135 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %10, i64 0, i32 0, i32 2
  %136 = bitcast %"class.std::__1::function.936"* %10 to i32**
  %137 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %10, i64 0, i32 0, i32 0, i32 1
  %138 = bitcast [8 x i8]* %137 to i8**
  %139 = getelementptr inbounds %"class.std::__1::function.936", %"class.std::__1::function.936"* %10, i64 0, i32 0, i32 0, i32 0
  %140 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  br label %141

141:                                              ; preds = %585, %107
  %142 = phi i8 [ 0, %107 ], [ %570, %585 ]
  %143 = phi i32 [ 0, %107 ], [ %571, %585 ]
  %144 = phi i32 [ 0, %107 ], [ %586, %585 ]
  %145 = phi i32 [ %77, %107 ], [ %572, %585 ]
  %146 = phi i32 [ %76, %107 ], [ %587, %585 ]
  %147 = load i64, i64* %116, align 8
  %148 = load i64, i64* %117, align 8
  %149 = sub i64 %147, %148
  %150 = sdiv exact i64 %149, 48
  %151 = load i8, i8* %118, align 4, !range !2
  %152 = icmp eq i8 %151, 0
  %153 = load i8, i8* %119, align 1, !range !2
  %154 = icmp eq i8 %153, 0
  %155 = select i1 %154, i32 1, i32 2
  %156 = xor i1 %154, true
  %157 = zext i1 %156 to i32
  %158 = select i1 %152, i32 %157, i32 %155
  %159 = trunc i64 %150 to i32
  %160 = sub i32 %159, %158
  %161 = icmp ult i32 %146, %160
  br i1 %161, label %162, label %588

162:                                              ; preds = %141
  %163 = add i32 %158, %146
  %164 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %112, i32 %163) #11
  %165 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 11
  %167 = load i32, i32* %166, align 8
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %194

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 4, i32 0, i32 0, i32 0
  %172 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %171, align 8
  %173 = call i8* @_Znwm(i64 104) #12
  %174 = bitcast i8* %173 to %"class.spvtools::opt::analysis::DefUseManager"*
  %175 = getelementptr inbounds i8, i8* %173, i64 32
  %176 = bitcast i8* %175 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %176, align 4
  %177 = getelementptr inbounds i8, i8* %173, i64 48
  %178 = getelementptr inbounds i8, i8* %173, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 16, i1 false) #11
  %179 = bitcast i8* %178 to i8**
  store i8* %177, i8** %179, align 8
  %180 = getelementptr inbounds i8, i8* %173, i64 64
  %181 = getelementptr inbounds i8, i8* %173, i64 96
  %182 = bitcast i8* %181 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %182, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %174, %"class.spvtools::opt::Module"* %172) #11
  %183 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 6
  %184 = ptrtoint i8* %173 to i64
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %185, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.62"* %183 to i64*
  store i64 %184, i64* %187, align 8
  %188 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %186, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %170
  %190 = bitcast %"class.std::__1::unique_ptr.62"* %183 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %190, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %186) #11
  br label %191

191:                                              ; preds = %189, %170
  %192 = load i32, i32* %166, align 8
  %193 = or i32 %192, 1
  store i32 %193, i32* %166, align 8
  br label %194

194:                                              ; preds = %162, %191
  %195 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 6, i32 0, i32 0, i32 0
  %196 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %195, align 8
  %197 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %196, i32 %145) #11
  %198 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 2
  %199 = load i32, i32* %198, align 8
  switch i32 %199, label %568 [
    i32 28, label %200
    i32 29, label %200
    i32 24, label %237
    i32 23, label %331
    i32 30, label %383
  ]

200:                                              ; preds = %194, %194
  %201 = call i32 @_ZN8spvtools3opt21InstBindlessCheckPass10FindStrideEjj(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %145, i32 6)
  %202 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %201, i1 zeroext false) #11
  %203 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %202, i64 0, i32 4
  %204 = load i8, i8* %203, align 1, !range !2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %202, i64 0, i32 3
  %208 = load i8, i8* %207, align 4, !range !2
  %209 = zext i8 %208 to i32
  %210 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %202, i32 %209) #11
  br label %211

211:                                              ; preds = %200, %206
  %212 = phi i32 [ %210, %206 ], [ 0, %200 ]
  %213 = call i32 @_ZN8spvtools3opt14InstrumentPass15Gen32BitCvtCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %140, i32 %164, %"class.spvtools::opt::InstructionBuilder"* %2) #11
  %214 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %140) #11
  %215 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %214, i32 132, i32 %212, i32 %213)
  %216 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %215, i64 0, i32 4
  %217 = load i8, i8* %216, align 1, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %224, label %219

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %215, i64 0, i32 3
  %221 = load i8, i8* %220, align 4, !range !2
  %222 = zext i8 %221 to i32
  %223 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %215, i32 %222) #11
  br label %224

224:                                              ; preds = %211, %219
  %225 = phi i32 [ %223, %219 ], [ 0, %211 ]
  %226 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 3
  %227 = load i8, i8* %226, align 4, !range !2
  %228 = icmp eq i8 %227, 0
  %229 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 4
  %230 = load i8, i8* %229, align 1, !range !2
  %231 = icmp eq i8 %230, 0
  %232 = select i1 %231, i32 1, i32 2
  %233 = xor i1 %231, true
  %234 = zext i1 %233 to i32
  %235 = select i1 %228, i32 %234, i32 %232
  %236 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %197, i32 %235) #11
  br label %568

237:                                              ; preds = %194
  %238 = load i32, i32* %4, align 4
  %239 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %238, i1 zeroext false) #11
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %239, i64 0, i32 4
  %241 = load i8, i8* %240, align 1, !range !2
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %248, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %239, i64 0, i32 3
  %245 = load i8, i8* %244, align 4, !range !2
  %246 = zext i8 %245 to i32
  %247 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %239, i32 %246) #11
  br label %248

248:                                              ; preds = %237, %243
  %249 = phi i32 [ %247, %243 ], [ 0, %237 ]
  %250 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 3
  %251 = load i8, i8* %250, align 4, !range !2
  %252 = icmp eq i8 %251, 0
  %253 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 4
  %254 = load i8, i8* %253, align 1, !range !2
  %255 = icmp eq i8 %254, 0
  %256 = select i1 %255, i32 1, i32 2
  %257 = xor i1 %255, true
  %258 = zext i1 %257 to i32
  %259 = select i1 %252, i32 %258, i32 %256
  %260 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %197, i32 %259) #11
  %261 = load i8, i8* %5, align 1, !range !2
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %263, label %318

263:                                              ; preds = %248
  %264 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %265 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %264, i64 0, i32 11
  %266 = load i32, i32* %265, align 8
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %293

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %264, i64 0, i32 4, i32 0, i32 0, i32 0
  %271 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %270, align 8
  %272 = call i8* @_Znwm(i64 104) #12
  %273 = bitcast i8* %272 to %"class.spvtools::opt::analysis::DefUseManager"*
  %274 = getelementptr inbounds i8, i8* %272, i64 32
  %275 = bitcast i8* %274 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %272, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %275, align 4
  %276 = getelementptr inbounds i8, i8* %272, i64 48
  %277 = getelementptr inbounds i8, i8* %272, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %276, i8 0, i64 16, i1 false) #11
  %278 = bitcast i8* %277 to i8**
  store i8* %276, i8** %278, align 8
  %279 = getelementptr inbounds i8, i8* %272, i64 64
  %280 = getelementptr inbounds i8, i8* %272, i64 96
  %281 = bitcast i8* %280 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %281, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %273, %"class.spvtools::opt::Module"* %271) #11
  %282 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %264, i64 0, i32 6
  %283 = ptrtoint i8* %272 to i64
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %282, i64 0, i32 0, i32 0, i32 0
  %285 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %284, align 8
  %286 = bitcast %"class.std::__1::unique_ptr.62"* %282 to i64*
  store i64 %283, i64* %286, align 8
  %287 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %285, null
  br i1 %287, label %290, label %288

288:                                              ; preds = %269
  %289 = bitcast %"class.std::__1::unique_ptr.62"* %282 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %289, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %285) #11
  br label %290

290:                                              ; preds = %288, %269
  %291 = load i32, i32* %265, align 8
  %292 = or i32 %291, 1
  store i32 %292, i32* %265, align 8
  br label %293

293:                                              ; preds = %263, %290
  %294 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %264, i64 0, i32 6, i32 0, i32 0, i32 0
  %295 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %294, align 8
  %296 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %295, i32 %260) #11
  %297 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %296, i64 0, i32 3
  %298 = load i8, i8* %297, align 4, !range !2
  %299 = icmp eq i8 %298, 0
  %300 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %296, i64 0, i32 4
  %301 = load i8, i8* %300, align 1, !range !2
  %302 = icmp eq i8 %301, 0
  %303 = select i1 %302, i32 1, i32 2
  %304 = xor i1 %302, true
  %305 = zext i1 %304 to i32
  %306 = select i1 %299, i32 %305, i32 %303
  %307 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %296, i32 %306) #11
  %308 = call i32 @_ZN8spvtools3opt21InstBindlessCheckPass8ByteSizeEjjbb(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %307, i32 0, i1 zeroext false, i1 zeroext false)
  %309 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %308, i1 zeroext false) #11
  %310 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %309, i64 0, i32 4
  %311 = load i8, i8* %310, align 1, !range !2
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %318, label %313

313:                                              ; preds = %293
  %314 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %309, i64 0, i32 3
  %315 = load i8, i8* %314, align 4, !range !2
  %316 = zext i8 %315 to i32
  %317 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %309, i32 %316) #11
  br label %318

318:                                              ; preds = %313, %293, %248
  %319 = phi i32 [ %249, %248 ], [ %317, %313 ], [ 0, %293 ]
  %320 = call i32 @_ZN8spvtools3opt14InstrumentPass15Gen32BitCvtCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %140, i32 %164, %"class.spvtools::opt::InstructionBuilder"* %2) #11
  %321 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %140) #11
  %322 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %321, i32 132, i32 %319, i32 %320)
  %323 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %322, i64 0, i32 4
  %324 = load i8, i8* %323, align 1, !range !2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %568, label %326

326:                                              ; preds = %318
  %327 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %322, i64 0, i32 3
  %328 = load i8, i8* %327, align 4, !range !2
  %329 = zext i8 %328 to i32
  %330 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %322, i32 %329) #11
  br label %568

331:                                              ; preds = %194
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 3
  %333 = load i8, i8* %332, align 4, !range !2
  %334 = icmp eq i8 %333, 0
  %335 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 4
  %336 = load i8, i8* %335, align 1, !range !2
  %337 = icmp eq i8 %336, 0
  %338 = select i1 %337, i32 1, i32 2
  %339 = xor i1 %337, true
  %340 = zext i1 %339 to i32
  %341 = select i1 %334, i32 %340, i32 %338
  %342 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %197, i32 %341) #11
  %343 = call i32 @_ZN8spvtools3opt14InstrumentPass15Gen32BitCvtCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %140, i32 %164, %"class.spvtools::opt::InstructionBuilder"* %2) #11
  %344 = and i8 %142, 1
  %345 = icmp ne i8 %344, 0
  %346 = load i8, i8* %5, align 1
  %347 = icmp eq i8 %346, 0
  %348 = and i1 %345, %347
  br i1 %348, label %349, label %360

349:                                              ; preds = %331
  %350 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %140) #11
  %351 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %350, i32 132, i32 %143, i32 %343)
  %352 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %351, i64 0, i32 4
  %353 = load i8, i8* %352, align 1, !range !2
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %568, label %355

355:                                              ; preds = %349
  %356 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %351, i64 0, i32 3
  %357 = load i8, i8* %356, align 4, !range !2
  %358 = zext i8 %357 to i32
  %359 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %351, i32 %358) #11
  br label %568

360:                                              ; preds = %331
  %361 = call i32 @_ZN8spvtools3opt21InstBindlessCheckPass8ByteSizeEjjbb(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %342, i32 0, i1 zeroext false, i1 zeroext false)
  %362 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %361, i1 zeroext false) #11
  %363 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %362, i64 0, i32 4
  %364 = load i8, i8* %363, align 1, !range !2
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %371, label %366

366:                                              ; preds = %360
  %367 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %362, i64 0, i32 3
  %368 = load i8, i8* %367, align 4, !range !2
  %369 = zext i8 %368 to i32
  %370 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %362, i32 %369) #11
  br label %371

371:                                              ; preds = %360, %366
  %372 = phi i32 [ %370, %366 ], [ 0, %360 ]
  %373 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %140) #11
  %374 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %373, i32 132, i32 %372, i32 %343)
  %375 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %374, i64 0, i32 4
  %376 = load i8, i8* %375, align 1, !range !2
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %568, label %378

378:                                              ; preds = %371
  %379 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %374, i64 0, i32 3
  %380 = load i8, i8* %379, align 4, !range !2
  %381 = zext i8 %380 to i32
  %382 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %374, i32 %381) #11
  br label %568

383:                                              ; preds = %194
  %384 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %385 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %384, i64 0, i32 11
  %386 = load i32, i32* %385, align 8
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %413

389:                                              ; preds = %383
  %390 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %384, i64 0, i32 4, i32 0, i32 0, i32 0
  %391 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %390, align 8
  %392 = call i8* @_Znwm(i64 104) #12
  %393 = bitcast i8* %392 to %"class.spvtools::opt::analysis::DefUseManager"*
  %394 = getelementptr inbounds i8, i8* %392, i64 32
  %395 = bitcast i8* %394 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %392, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %395, align 4
  %396 = getelementptr inbounds i8, i8* %392, i64 48
  %397 = getelementptr inbounds i8, i8* %392, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %396, i8 0, i64 16, i1 false) #11
  %398 = bitcast i8* %397 to i8**
  store i8* %396, i8** %398, align 8
  %399 = getelementptr inbounds i8, i8* %392, i64 64
  %400 = getelementptr inbounds i8, i8* %392, i64 96
  %401 = bitcast i8* %400 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %399, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %401, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %393, %"class.spvtools::opt::Module"* %391) #11
  %402 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %384, i64 0, i32 6
  %403 = ptrtoint i8* %392 to i64
  %404 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %402, i64 0, i32 0, i32 0, i32 0
  %405 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %404, align 8
  %406 = bitcast %"class.std::__1::unique_ptr.62"* %402 to i64*
  store i64 %403, i64* %406, align 8
  %407 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %405, null
  br i1 %407, label %410, label %408

408:                                              ; preds = %389
  %409 = bitcast %"class.std::__1::unique_ptr.62"* %402 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %409, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %405) #11
  br label %410

410:                                              ; preds = %408, %389
  %411 = load i32, i32* %385, align 8
  %412 = or i32 %411, 1
  store i32 %412, i32* %385, align 8
  br label %413

413:                                              ; preds = %383, %410
  %414 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %384, i64 0, i32 6, i32 0, i32 0, i32 0
  %415 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %414, align 8
  %416 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %415, i32 %164) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120) #11
  store i32 -1431655766, i32* %6, align 4
  %417 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %416, i64 0, i32 3
  %418 = load i8, i8* %417, align 4, !range !2
  %419 = icmp eq i8 %418, 0
  %420 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %416, i64 0, i32 4
  %421 = load i8, i8* %420, align 1, !range !2
  %422 = icmp eq i8 %421, 0
  %423 = select i1 %422, i32 1, i32 2
  %424 = xor i1 %422, true
  %425 = zext i1 %424 to i32
  %426 = select i1 %419, i32 %425, i32 %423
  %427 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %416, i32 %426) #11
  store i32 %427, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -559038737, i32* %7, align 4
  %428 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %429 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %428, i64 0, i32 11
  %430 = load i32, i32* %429, align 8
  %431 = and i32 %430, 4
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %454

433:                                              ; preds = %413
  %434 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %428, i64 0, i32 4, i32 0, i32 0, i32 0
  %435 = bitcast %"class.spvtools::opt::Module"** %434 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = call i8* @_Znwm(i64 48) #12
  %438 = bitcast i8* %437 to %"class.spvtools::opt::analysis::DecorationManager"*
  %439 = getelementptr inbounds i8, i8* %437, i64 32
  %440 = bitcast i8* %439 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %437, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %440, align 4
  %441 = getelementptr inbounds i8, i8* %437, i64 40
  %442 = bitcast i8* %441 to i64*
  store i64 %436, i64* %442, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %438) #11
  %443 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %428, i64 0, i32 7
  %444 = ptrtoint i8* %437 to i64
  %445 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %443, i64 0, i32 0, i32 0, i32 0
  %446 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %445, align 8
  %447 = bitcast %"class.std::__1::unique_ptr.122"* %443 to i64*
  store i64 %444, i64* %447, align 8
  %448 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %446, null
  br i1 %448, label %451, label %449

449:                                              ; preds = %433
  %450 = bitcast %"class.std::__1::unique_ptr.122"* %443 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %450, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %446) #11
  br label %451

451:                                              ; preds = %449, %433
  %452 = load i32, i32* %429, align 8
  %453 = or i32 %452, 4
  store i32 %453, i32* %429, align 8
  br label %454

454:                                              ; preds = %413, %451
  %455 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %428, i64 0, i32 7, i32 0, i32 0, i32 0
  %456 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %455, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass14GenLastByteIdxEPNSB_11RefAnalysisEPNS3_18InstructionBuilderEE3$_3S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %122, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass14GenLastByteIdxEPNS6_11RefAnalysisEPNS5_18InstructionBuilderEE3$_3FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %123, align 8
  store i32* %6, i32** %124, align 8
  store i32* %7, i32** %126, align 8
  %457 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %456, i32 %145, i32 35, %"class.std::__1::function.936"* nonnull %8) #11
  %458 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %123, align 8
  %459 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %458, i64 0, i32 1
  %460 = load void (i8*)*, void (i8*)** %459, align 8
  %461 = icmp eq void (i8*)* %460, null
  br i1 %461, label %464, label %462

462:                                              ; preds = %454
  %463 = load i8*, i8** %127, align 8
  call void %460(i8* %463) #11
  br label %464

464:                                              ; preds = %454, %462
  %465 = load i32, i32* %7, align 4
  %466 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %465, i1 zeroext false) #11
  %467 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %466, i64 0, i32 4
  %468 = load i8, i8* %467, align 1, !range !2
  %469 = icmp eq i8 %468, 0
  br i1 %469, label %475, label %470

470:                                              ; preds = %464
  %471 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %466, i64 0, i32 3
  %472 = load i8, i8* %471, align 4, !range !2
  %473 = zext i8 %472 to i32
  %474 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %466, i32 %473) #11
  br label %475

475:                                              ; preds = %464, %470
  %476 = phi i32 [ %474, %470 ], [ 0, %464 ]
  %477 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %478 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %477, i64 0, i32 11
  %479 = load i32, i32* %478, align 8
  %480 = and i32 %479, 4
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %503

482:                                              ; preds = %475
  %483 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %477, i64 0, i32 4, i32 0, i32 0, i32 0
  %484 = bitcast %"class.spvtools::opt::Module"** %483 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = call i8* @_Znwm(i64 48) #12
  %487 = bitcast i8* %486 to %"class.spvtools::opt::analysis::DecorationManager"*
  %488 = getelementptr inbounds i8, i8* %486, i64 32
  %489 = bitcast i8* %488 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %486, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %489, align 4
  %490 = getelementptr inbounds i8, i8* %486, i64 40
  %491 = bitcast i8* %490 to i64*
  store i64 %485, i64* %491, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %487) #11
  %492 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %477, i64 0, i32 7
  %493 = ptrtoint i8* %486 to i64
  %494 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %492, i64 0, i32 0, i32 0, i32 0
  %495 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %494, align 8
  %496 = bitcast %"class.std::__1::unique_ptr.122"* %492 to i64*
  store i64 %493, i64* %496, align 8
  %497 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %495, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %482
  %499 = bitcast %"class.std::__1::unique_ptr.122"* %492 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %499, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %495) #11
  br label %500

500:                                              ; preds = %498, %482
  %501 = load i32, i32* %478, align 8
  %502 = or i32 %501, 4
  store i32 %502, i32* %478, align 8
  br label %503

503:                                              ; preds = %475, %500
  %504 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %477, i64 0, i32 7, i32 0, i32 0, i32 0
  %505 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %504, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass14GenLastByteIdxEPNSB_11RefAnalysisEPNS3_18InstructionBuilderEE3$_4S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %128, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass14GenLastByteIdxEPNS6_11RefAnalysisEPNS5_18InstructionBuilderEE3$_4FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %129, align 8
  store i32* %6, i32** %130, align 8
  store i32* %4, i32** %132, align 8
  %506 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %505, i32 %145, i32 7, %"class.std::__1::function.936"* nonnull %9) #11
  %507 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %129, align 8
  %508 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %507, i64 0, i32 1
  %509 = load void (i8*)*, void (i8*)** %508, align 8
  %510 = icmp eq void (i8*)* %509, null
  br i1 %510, label %513, label %511

511:                                              ; preds = %503
  %512 = load i8*, i8** %133, align 8
  call void %509(i8* %512) #11
  br label %513

513:                                              ; preds = %503, %511
  br i1 %506, label %515, label %514

514:                                              ; preds = %513
  store i32 0, i32* %4, align 4
  br label %515

515:                                              ; preds = %514, %513
  %516 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %517 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %516, i64 0, i32 11
  %518 = load i32, i32* %517, align 8
  %519 = and i32 %518, 4
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %542

521:                                              ; preds = %515
  %522 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %516, i64 0, i32 4, i32 0, i32 0, i32 0
  %523 = bitcast %"class.spvtools::opt::Module"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = call i8* @_Znwm(i64 48) #12
  %526 = bitcast i8* %525 to %"class.spvtools::opt::analysis::DecorationManager"*
  %527 = getelementptr inbounds i8, i8* %525, i64 32
  %528 = bitcast i8* %527 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %525, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %528, align 4
  %529 = getelementptr inbounds i8, i8* %525, i64 40
  %530 = bitcast i8* %529 to i64*
  store i64 %524, i64* %530, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %526) #11
  %531 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %516, i64 0, i32 7
  %532 = ptrtoint i8* %525 to i64
  %533 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %531, i64 0, i32 0, i32 0, i32 0
  %534 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %533, align 8
  %535 = bitcast %"class.std::__1::unique_ptr.122"* %531 to i64*
  store i64 %532, i64* %535, align 8
  %536 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %534, null
  br i1 %536, label %539, label %537

537:                                              ; preds = %521
  %538 = bitcast %"class.std::__1::unique_ptr.122"* %531 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %538, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %534) #11
  br label %539

539:                                              ; preds = %537, %521
  %540 = load i32, i32* %517, align 8
  %541 = or i32 %540, 4
  store i32 %541, i32* %517, align 8
  br label %542

542:                                              ; preds = %515, %539
  %543 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %516, i64 0, i32 7, i32 0, i32 0, i32 0
  %544 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %543, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass14GenLastByteIdxEPNSB_11RefAnalysisEPNS3_18InstructionBuilderEE3$_5S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %134, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass14GenLastByteIdxEPNS6_11RefAnalysisEPNS5_18InstructionBuilderEE3$_5FbRKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %135, align 8
  store i32* %6, i32** %136, align 8
  store i8* %5, i8** %138, align 8
  %545 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %544, i32 %145, i32 5, %"class.std::__1::function.936"* nonnull %10) #11
  %546 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %135, align 8
  %547 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %546, i64 0, i32 1
  %548 = load void (i8*)*, void (i8*)** %547, align 8
  %549 = icmp eq void (i8*)* %548, null
  br i1 %549, label %552, label %550

550:                                              ; preds = %542
  %551 = load i8*, i8** %139, align 8
  call void %548(i8* %551) #11
  br label %552

552:                                              ; preds = %542, %550
  br i1 %545, label %554, label %553

553:                                              ; preds = %552
  store i8 0, i8* %5, align 1
  br label %554

554:                                              ; preds = %553, %552
  %555 = load i32, i32* %6, align 4
  %556 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 3
  %557 = load i8, i8* %556, align 4, !range !2
  %558 = icmp eq i8 %557, 0
  %559 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %197, i64 0, i32 4
  %560 = load i8, i8* %559, align 1, !range !2
  %561 = icmp eq i8 %560, 0
  %562 = select i1 %561, i32 1, i32 2
  %563 = xor i1 %561, true
  %564 = zext i1 %563 to i32
  %565 = select i1 %558, i32 %564, i32 %562
  %566 = add i32 %565, %555
  %567 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %197, i32 %566) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120) #11
  br label %568

568:                                              ; preds = %378, %371, %355, %349, %326, %318, %194, %554, %224
  %569 = phi i32 [ 0, %194 ], [ %476, %554 ], [ %225, %224 ], [ %330, %326 ], [ 0, %318 ], [ %359, %355 ], [ 0, %349 ], [ %382, %378 ], [ 0, %371 ]
  %570 = phi i8 [ %142, %194 ], [ %142, %554 ], [ %142, %224 ], [ 1, %326 ], [ 1, %318 ], [ %142, %355 ], [ %142, %349 ], [ %142, %378 ], [ %142, %371 ]
  %571 = phi i32 [ %143, %194 ], [ %143, %554 ], [ %143, %224 ], [ %249, %326 ], [ %249, %318 ], [ %143, %355 ], [ %143, %349 ], [ %143, %378 ], [ %143, %371 ]
  %572 = phi i32 [ %145, %194 ], [ %567, %554 ], [ %236, %224 ], [ %260, %326 ], [ %260, %318 ], [ %342, %355 ], [ %342, %349 ], [ %342, %378 ], [ %342, %371 ]
  %573 = icmp eq i32 %144, 0
  br i1 %573, label %585, label %574

574:                                              ; preds = %568
  %575 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %140) #11
  %576 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %575, i32 128, i32 %144, i32 %569)
  %577 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %576, i64 0, i32 4
  %578 = load i8, i8* %577, align 1, !range !2
  %579 = icmp eq i8 %578, 0
  br i1 %579, label %585, label %580

580:                                              ; preds = %574
  %581 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %576, i64 0, i32 3
  %582 = load i8, i8* %581, align 4, !range !2
  %583 = zext i8 %582 to i32
  %584 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %576, i32 %583) #11
  br label %585

585:                                              ; preds = %580, %574, %568
  %586 = phi i32 [ %569, %568 ], [ %584, %580 ], [ 0, %574 ]
  %587 = add nuw i32 %146, 1
  br label %141

588:                                              ; preds = %141
  %589 = load i32, i32* %4, align 4
  %590 = load i8, i8* %5, align 1, !range !2
  %591 = icmp ne i8 %590, 0
  %592 = and i8 %142, 1
  %593 = icmp ne i8 %592, 0
  %594 = call i32 @_ZN8spvtools3opt21InstBindlessCheckPass8ByteSizeEjjbb(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %145, i32 %589, i1 zeroext %591, i1 zeroext %593)
  %595 = add i32 %594, -1
  %596 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %595, i1 zeroext false) #11
  %597 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %596, i64 0, i32 4
  %598 = load i8, i8* %597, align 1, !range !2
  %599 = icmp eq i8 %598, 0
  br i1 %599, label %605, label %600

600:                                              ; preds = %588
  %601 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %596, i64 0, i32 3
  %602 = load i8, i8* %601, align 4, !range !2
  %603 = zext i8 %602 to i32
  %604 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %596, i32 %603) #11
  br label %605

605:                                              ; preds = %588, %600
  %606 = phi i32 [ %604, %600 ], [ 0, %588 ]
  %607 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %140) #11
  %608 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %607, i32 128, i32 %144, i32 %606)
  %609 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %608, i64 0, i32 4
  %610 = load i8, i8* %609, align 1, !range !2
  %611 = icmp eq i8 %610, 0
  br i1 %611, label %617, label %612

612:                                              ; preds = %605
  %613 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %608, i64 0, i32 3
  %614 = load i8, i8* %613, align 4, !range !2
  %615 = zext i8 %614 to i32
  %616 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %608, i32 %615) #11
  br label %617

617:                                              ; preds = %605, %612
  %618 = phi i32 [ %616, %612 ], [ 0, %605 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #11
  ret i32 %618
}

declare i32 @_ZN8spvtools3opt14InstrumentPass15Gen32BitCvtCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt21InstBindlessCheckPass12GenCheckCodeEjjjjjPNS1_11RefAnalysisEPNSt3__16vectorINS4_10unique_ptrINS0_10BasicBlockENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"*, i32, i32, i32, i32, i32, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nocapture readonly, %"class.std::__1::vector.38"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::tuple.1052", align 8
  %10 = alloca %"class.std::__1::tuple.1002", align 1
  %11 = alloca %"class.std::__1::tuple.1052", align 8
  %12 = alloca %"class.std::__1::tuple.1002", align 1
  %13 = alloca %"class.std::__1::tuple.1052", align 8
  %14 = alloca %"class.std::__1::tuple.1002", align 1
  %15 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %16 = alloca %"class.std::__1::unique_ptr.40", align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::__1::vector.3", align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.std::__1::vector.3", align 8
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::__1::vector.3", align 8
  %23 = alloca %"class.std::__1::vector.3", align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %7, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 -1, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  %28 = bitcast %"class.spvtools::opt::InstructionBuilder"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %15, i64 0, i32 0
  %30 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %15, i64 0, i32 3
  %32 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::Pass"*
  %33 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast %"class.spvtools::opt::InstructionBuilder"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 32, i1 false)
  %35 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %27, i64 0, i32 2, i32 0, i32 1
  %37 = ptrtoint %"class.spvtools::opt::Instruction"* %36 to i64
  store %"class.spvtools::opt::IRContext"* %35, %"class.spvtools::opt::IRContext"** %29, align 8
  store %"class.spvtools::opt::BasicBlock"* %27, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %15, i64 0, i32 2
  %39 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %38 to i64*
  store i64 %37, i64* %39, align 8
  store i32 3, i32* %31, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %40, align 8
  %42 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %41) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %8
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 5, i32 0, i32 2
  %46 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %46, i64 0, i32 2
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %44
  %51 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37, i1 false) #11
  %52 = getelementptr inbounds i8, i8* %51, i64 37
  store i8 0, i8* %52, align 1
  %53 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 5, i32 0, i32 1, i32 0
  %54 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 5, i32 0, i32 0
  tail call void %54(%"union.std::__1::__function::__policy_storage"* %55, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %51) #11
  tail call void @_ZdlPv(i8* nonnull %51) #12
  br label %56

56:                                               ; preds = %8, %44, %50
  %57 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %58, align 8
  %60 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %59) #11
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 5, i32 0, i32 2
  %64 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %64, i64 0, i32 2
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %69, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37, i1 false) #11
  %70 = getelementptr inbounds i8, i8* %69, i64 37
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 5, i32 0, i32 1, i32 0
  %72 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 5, i32 0, i32 0
  tail call void %72(%"union.std::__1::__function::__policy_storage"* %73, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %69) #11
  tail call void @_ZdlPv(i8* nonnull %69) #12
  br label %74

74:                                               ; preds = %56, %62, %68
  %75 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  %77 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %76, align 8
  %78 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %77) #11
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 5, i32 0, i32 2
  %82 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %82, i64 0, i32 2
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %80
  %87 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %87, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37, i1 false) #11
  %88 = getelementptr inbounds i8, i8* %87, i64 37
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 5, i32 0, i32 1, i32 0
  %90 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 5, i32 0, i32 0
  tail call void %90(%"union.std::__1::__function::__policy_storage"* %91, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %87) #11
  tail call void @_ZdlPv(i8* nonnull %87) #12
  br label %92

92:                                               ; preds = %74, %80, %86
  %93 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  %94 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* %93, i32 %42) #11
  %95 = ptrtoint %"class.spvtools::opt::Instruction"* %94 to i64
  %96 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* %93, i32 %60) #11
  %97 = ptrtoint %"class.spvtools::opt::Instruction"* %96 to i64
  %98 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* %93, i32 %78) #11
  %99 = ptrtoint %"class.spvtools::opt::Instruction"* %98 to i64
  %100 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %15, i32 %1, i32 %60, i32 %78, i32 %42, i32 0)
  %101 = bitcast %"class.std::__1::unique_ptr.40"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #11
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %16, i64 0, i32 0, i32 0, i32 0
  %103 = call i8* @_Znwm(i64 136) #12
  %104 = bitcast i8* %103 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %104, align 8
  %105 = getelementptr inbounds i8, i8* %103, i64 8
  %106 = bitcast i8* %105 to i64*
  store i64 %97, i64* %106, align 8
  %107 = getelementptr inbounds i8, i8* %103, i64 16
  %108 = bitcast i8* %107 to i32 (...)***
  %109 = getelementptr inbounds i8, i8* %103, i64 24
  %110 = bitcast i8* %109 to i32 (...)***
  %111 = getelementptr inbounds i8, i8* %103, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %112 = getelementptr inbounds i8, i8* %103, i64 56
  %113 = getelementptr inbounds i8, i8* %103, i64 72
  %114 = bitcast i8* %113 to i32*
  store i32 0, i32* %114, align 8
  %115 = getelementptr inbounds i8, i8* %103, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 56, i1 false) #11
  %116 = bitcast i8* %111 to i8**
  store i8* %109, i8** %116, align 8
  %117 = getelementptr inbounds i8, i8* %103, i64 40
  %118 = bitcast i8* %117 to i8**
  store i8* %109, i8** %118, align 8
  %119 = getelementptr inbounds i8, i8* %103, i64 48
  store i8 1, i8* %119, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %120 = ptrtoint i8* %103 to i64
  %121 = bitcast %"class.std::__1::unique_ptr.40"* %16 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"class.spvtools::opt::BasicBlock"** %30 to i8**
  store i8* %103, i8** %122, align 8
  %123 = ptrtoint i8* %109 to i64
  store i64 %123, i64* %39, align 8
  %124 = call i32 @_ZN8spvtools3opt21InstBindlessCheckPass22CloneOriginalReferenceEPNS1_11RefAnalysisEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %6, %"class.spvtools::opt::InstructionBuilder"* nonnull %15)
  %125 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %15, i32 %42)
  %126 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %24, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %128 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %127, align 8
  %129 = icmp ult %"class.std::__1::unique_ptr.40"* %126, %128
  br i1 %129, label %130, label %136

130:                                              ; preds = %92
  %131 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.40"* %126 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %126, i64 1
  %134 = ptrtoint %"class.std::__1::unique_ptr.40"* %133 to i64
  %135 = bitcast %"class.std::__1::unique_ptr.40"** %24 to i64*
  store i64 %134, i64* %135, align 8
  br label %137

136:                                              ; preds = %92
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %7, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %16) #11
  br label %137

137:                                              ; preds = %130, %136
  %138 = call i8* @_Znwm(i64 136) #12
  %139 = bitcast i8* %138 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %139, align 8
  %140 = getelementptr inbounds i8, i8* %138, i64 8
  %141 = bitcast i8* %140 to i64*
  store i64 %99, i64* %141, align 8
  %142 = getelementptr inbounds i8, i8* %138, i64 16
  %143 = bitcast i8* %142 to i32 (...)***
  %144 = getelementptr inbounds i8, i8* %138, i64 24
  %145 = bitcast i8* %144 to i32 (...)***
  %146 = getelementptr inbounds i8, i8* %138, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %147 = getelementptr inbounds i8, i8* %138, i64 56
  %148 = getelementptr inbounds i8, i8* %138, i64 72
  %149 = bitcast i8* %148 to i32*
  store i32 0, i32* %149, align 8
  %150 = getelementptr inbounds i8, i8* %138, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 56, i1 false) #11
  %151 = bitcast i8* %146 to i8**
  store i8* %144, i8** %151, align 8
  %152 = getelementptr inbounds i8, i8* %138, i64 40
  %153 = bitcast i8* %152 to i8**
  store i8* %144, i8** %153, align 8
  %154 = getelementptr inbounds i8, i8* %138, i64 48
  store i8 1, i8* %154, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %155 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %156 = bitcast %"class.std::__1::unique_ptr.40"* %16 to i8**
  store i8* %138, i8** %156, align 8
  %157 = icmp eq %"class.spvtools::opt::BasicBlock"* %155, null
  %158 = bitcast i8* %138 to %"class.spvtools::opt::BasicBlock"*
  br i1 %157, label %162, label %159

159:                                              ; preds = %137
  %160 = bitcast %"class.std::__1::unique_ptr.40"* %16 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %160, %"class.spvtools::opt::BasicBlock"* nonnull %155) #11
  %161 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  br label %162

162:                                              ; preds = %137, %159
  %163 = phi %"class.spvtools::opt::BasicBlock"* [ %158, %137 ], [ %161, %159 ]
  store %"class.spvtools::opt::BasicBlock"* %163, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %163, i64 0, i32 2, i32 0, i32 1
  %165 = ptrtoint %"class.spvtools::opt::Instruction"* %164 to i64
  store i64 %165, i64* %39, align 8
  %166 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %6, i64 0, i32 5
  %167 = load i32, i32* %166, align 4
  %168 = call i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %93, i32 %167, %"class.spvtools::opt::InstructionBuilder"* nonnull %15) #11
  %169 = icmp eq i32 %3, 0
  br i1 %169, label %210, label %170

170:                                              ; preds = %162
  %171 = call i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %93, i32 %3, %"class.spvtools::opt::InstructionBuilder"* nonnull %15) #11
  %172 = call i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %93, i32 %4, %"class.spvtools::opt::InstructionBuilder"* nonnull %15) #11
  %173 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173) #11
  %174 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %6, i64 0, i32 7
  %175 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %175, i64 0, i32 5
  %177 = load i32, i32* %176, align 8
  store i32 %177, i32* %17, align 4
  %178 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 7, i32 0
  %179 = bitcast %"class.std::__1::tuple.1052"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #11
  %180 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %13, i64 0, i32 0, i32 0, i32 0
  store i32* %17, i32** %180, align 8
  %181 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %181) #11
  %182 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %178, i32* nonnull dereferenceable(4) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %14) #11
  %183 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %182, 0
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %183, i64 2
  %185 = bitcast %"struct.std::__1::__hash_node_base.254"* %184 to %"struct.std::__1::pair.1028"*
  %186 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %185, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %181) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #11
  %187 = load i32, i32* %186, align 4
  %188 = bitcast %"class.std::__1::vector.3"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #11
  %189 = call i8* @_Znwm(i64 16) #12
  %190 = bitcast i8* %189 to i32*
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 1
  %192 = bitcast %"class.std::__1::vector.3"* %18 to i8**
  store i8* %189, i8** %192, align 8
  %193 = getelementptr inbounds i8, i8* %189, i64 16
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %195 = bitcast i32** %194 to i8**
  store i8* %193, i8** %195, align 8
  %196 = bitcast i32** %191 to i64*
  store i32 %2, i32* %190, align 4
  %197 = getelementptr inbounds i8, i8* %189, i64 4
  %198 = bitcast i8* %197 to i32*
  store i32 %168, i32* %198, align 4
  %199 = getelementptr inbounds i8, i8* %189, i64 8
  %200 = bitcast i8* %199 to i32*
  store i32 %171, i32* %200, align 4
  %201 = getelementptr inbounds i8, i8* %189, i64 12
  %202 = bitcast i8* %201 to i32*
  store i32 %172, i32* %202, align 4
  %203 = ptrtoint i8* %193 to i64
  store i64 %203, i64* %196, align 8
  call void @_ZN8spvtools3opt14InstrumentPass19GenDebugStreamWriteEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %93, i32 %187, i32 %5, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %18, %"class.spvtools::opt::InstructionBuilder"* nonnull %15) #11
  %204 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 0
  %205 = load i32*, i32** %204, align 8
  %206 = icmp eq i32* %205, null
  br i1 %206, label %305, label %207

207:                                              ; preds = %170
  %208 = ptrtoint i32* %205 to i64
  store i64 %208, i64* %196, align 8
  %209 = bitcast i32* %205 to i8*
  call void @_ZdlPv(i8* %209) #12
  br label %305

210:                                              ; preds = %162
  %211 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 3
  %212 = load i8, i8* %211, align 1, !range !2
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %218

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 4
  %216 = load i8, i8* %215, align 4, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %268, label %218

218:                                              ; preds = %214, %210
  %219 = call i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %93, i32 %4, %"class.spvtools::opt::InstructionBuilder"* nonnull %15) #11
  %220 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #11
  %221 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %6, i64 0, i32 7
  %222 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %221, align 8
  %223 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %222, i64 0, i32 5
  %224 = load i32, i32* %223, align 8
  store i32 %224, i32* %19, align 4
  %225 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 7, i32 0
  %226 = bitcast %"class.std::__1::tuple.1052"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #11
  %227 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %11, i64 0, i32 0, i32 0, i32 0
  store i32* %19, i32** %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %228) #11
  %229 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %225, i32* nonnull dereferenceable(4) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %12) #11
  %230 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %229, 0
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %230, i64 2
  %232 = bitcast %"struct.std::__1::__hash_node_base.254"* %231 to %"struct.std::__1::pair.1028"*
  %233 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %232, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %228) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #11
  %234 = load i32, i32* %233, align 4
  %235 = bitcast %"class.std::__1::vector.3"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #11
  %236 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %15, i32 0, i1 zeroext false) #11
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %236, i64 0, i32 4
  %238 = load i8, i8* %237, align 1, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %245, label %240

240:                                              ; preds = %218
  %241 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %236, i64 0, i32 3
  %242 = load i8, i8* %241, align 4, !range !2
  %243 = zext i8 %242 to i32
  %244 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %236, i32 %243) #11
  br label %245

245:                                              ; preds = %218, %240
  %246 = phi i32 [ %244, %240 ], [ 0, %218 ]
  %247 = call i8* @_Znwm(i64 16) #12
  %248 = bitcast i8* %247 to i32*
  %249 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %20, i64 0, i32 0, i32 1
  %250 = bitcast %"class.std::__1::vector.3"* %20 to i8**
  store i8* %247, i8** %250, align 8
  %251 = getelementptr inbounds i8, i8* %247, i64 16
  %252 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  %253 = bitcast i32** %252 to i8**
  store i8* %251, i8** %253, align 8
  %254 = bitcast i32** %249 to i64*
  store i32 %2, i32* %248, align 4
  %255 = getelementptr inbounds i8, i8* %247, i64 4
  %256 = bitcast i8* %255 to i32*
  store i32 %168, i32* %256, align 4
  %257 = getelementptr inbounds i8, i8* %247, i64 8
  %258 = bitcast i8* %257 to i32*
  store i32 %219, i32* %258, align 4
  %259 = getelementptr inbounds i8, i8* %247, i64 12
  %260 = bitcast i8* %259 to i32*
  store i32 %246, i32* %260, align 4
  %261 = ptrtoint i8* %251 to i64
  store i64 %261, i64* %254, align 8
  call void @_ZN8spvtools3opt14InstrumentPass19GenDebugStreamWriteEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %93, i32 %234, i32 %5, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %20, %"class.spvtools::opt::InstructionBuilder"* nonnull %15) #11
  %262 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %20, i64 0, i32 0, i32 0
  %263 = load i32*, i32** %262, align 8
  %264 = icmp eq i32* %263, null
  br i1 %264, label %305, label %265

265:                                              ; preds = %245
  %266 = ptrtoint i32* %263 to i64
  store i64 %266, i64* %254, align 8
  %267 = bitcast i32* %263 to i8*
  call void @_ZdlPv(i8* %267) #12
  br label %305

268:                                              ; preds = %214
  %269 = call i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %93, i32 %4, %"class.spvtools::opt::InstructionBuilder"* nonnull %15) #11
  %270 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %270) #11
  %271 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %6, i64 0, i32 7
  %272 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %271, align 8
  %273 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %272, i64 0, i32 5
  %274 = load i32, i32* %273, align 8
  store i32 %274, i32* %21, align 4
  %275 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 7, i32 0
  %276 = bitcast %"class.std::__1::tuple.1052"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #11
  %277 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %21, i32** %277, align 8
  %278 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %278) #11
  %279 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %275, i32* nonnull dereferenceable(4) %21, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %10) #11
  %280 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %279, 0
  %281 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %280, i64 2
  %282 = bitcast %"struct.std::__1::__hash_node_base.254"* %281 to %"struct.std::__1::pair.1028"*
  %283 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %282, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %278) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #11
  %284 = load i32, i32* %283, align 4
  %285 = bitcast %"class.std::__1::vector.3"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %285) #11
  %286 = call i8* @_Znwm(i64 12) #12
  %287 = bitcast i8* %286 to i32*
  %288 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %22, i64 0, i32 0, i32 1
  %289 = bitcast %"class.std::__1::vector.3"* %22 to i8**
  store i8* %286, i8** %289, align 8
  %290 = getelementptr inbounds i8, i8* %286, i64 12
  %291 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %292 = bitcast i32** %291 to i8**
  store i8* %290, i8** %292, align 8
  %293 = bitcast i32** %288 to i64*
  store i32 %2, i32* %287, align 4
  %294 = getelementptr inbounds i8, i8* %286, i64 4
  %295 = bitcast i8* %294 to i32*
  store i32 %168, i32* %295, align 4
  %296 = getelementptr inbounds i8, i8* %286, i64 8
  %297 = bitcast i8* %296 to i32*
  store i32 %269, i32* %297, align 4
  %298 = ptrtoint i8* %290 to i64
  store i64 %298, i64* %293, align 8
  call void @_ZN8spvtools3opt14InstrumentPass19GenDebugStreamWriteEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %93, i32 %284, i32 %5, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %22, %"class.spvtools::opt::InstructionBuilder"* nonnull %15) #11
  %299 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %22, i64 0, i32 0, i32 0
  %300 = load i32*, i32** %299, align 8
  %301 = icmp eq i32* %300, null
  br i1 %301, label %305, label %302

302:                                              ; preds = %268
  %303 = ptrtoint i32* %300 to i64
  store i64 %303, i64* %293, align 8
  %304 = bitcast i32* %300 to i8*
  call void @_ZdlPv(i8* %304) #12
  br label %305

305:                                              ; preds = %302, %268, %265, %245, %207, %170
  %306 = phi i8* [ %188, %170 ], [ %188, %207 ], [ %235, %245 ], [ %235, %265 ], [ %285, %268 ], [ %285, %302 ]
  %307 = phi i8* [ %173, %170 ], [ %173, %207 ], [ %220, %245 ], [ %220, %265 ], [ %270, %268 ], [ %270, %302 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %307) #11
  %308 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %309 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %308, i64 0, i32 1, i32 0, i32 0, i32 0
  %310 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %309, align 8
  %311 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %310, i64 0, i32 4
  %312 = load i8, i8* %311, align 1, !range !2
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %319, label %314

314:                                              ; preds = %305
  %315 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %310, i64 0, i32 3
  %316 = load i8, i8* %315, align 4, !range !2
  %317 = zext i8 %316 to i32
  %318 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %310, i32 %317) #11
  br label %319

319:                                              ; preds = %305, %314
  %320 = phi i32 [ %318, %314 ], [ 0, %305 ]
  %321 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %6, i64 0, i32 7
  %322 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %321, align 8
  %323 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %322, i64 0, i32 3
  %324 = load i8, i8* %323, align 4, !range !2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %328, label %326

326:                                              ; preds = %319
  %327 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %322, i32 0) #11
  br label %328

328:                                              ; preds = %319, %326
  %329 = phi i32 [ %327, %326 ], [ 0, %319 ]
  %330 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %15, i32 %42)
  %331 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %24, align 8
  %332 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %127, align 8
  %333 = icmp ult %"class.std::__1::unique_ptr.40"* %331, %332
  br i1 %333, label %334, label %340

334:                                              ; preds = %328
  %335 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %336 = bitcast %"class.std::__1::unique_ptr.40"* %331 to i64*
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %331, i64 1
  %338 = ptrtoint %"class.std::__1::unique_ptr.40"* %337 to i64
  %339 = bitcast %"class.std::__1::unique_ptr.40"** %24 to i64*
  store i64 %338, i64* %339, align 8
  br label %341

340:                                              ; preds = %328
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %7, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %16) #11
  br label %341

341:                                              ; preds = %334, %340
  %342 = call i8* @_Znwm(i64 136) #12
  %343 = bitcast i8* %342 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %343, align 8
  %344 = getelementptr inbounds i8, i8* %342, i64 8
  %345 = bitcast i8* %344 to i64*
  store i64 %95, i64* %345, align 8
  %346 = getelementptr inbounds i8, i8* %342, i64 16
  %347 = bitcast i8* %346 to i32 (...)***
  %348 = getelementptr inbounds i8, i8* %342, i64 24
  %349 = bitcast i8* %348 to i32 (...)***
  %350 = getelementptr inbounds i8, i8* %342, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %349, align 8
  %351 = getelementptr inbounds i8, i8* %342, i64 56
  %352 = getelementptr inbounds i8, i8* %342, i64 72
  %353 = bitcast i8* %352 to i32*
  store i32 0, i32* %353, align 8
  %354 = getelementptr inbounds i8, i8* %342, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %351, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %354, i8 0, i64 56, i1 false) #11
  %355 = bitcast i8* %350 to i8**
  store i8* %348, i8** %355, align 8
  %356 = getelementptr inbounds i8, i8* %342, i64 40
  %357 = bitcast i8* %356 to i8**
  store i8* %348, i8** %357, align 8
  %358 = getelementptr inbounds i8, i8* %342, i64 48
  store i8 1, i8* %358, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %347, align 8
  %359 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  store i8* %342, i8** %156, align 8
  %360 = icmp eq %"class.spvtools::opt::BasicBlock"* %359, null
  %361 = bitcast i8* %342 to %"class.spvtools::opt::BasicBlock"*
  br i1 %360, label %365, label %362

362:                                              ; preds = %341
  %363 = bitcast %"class.std::__1::unique_ptr.40"* %16 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %363, %"class.spvtools::opt::BasicBlock"* nonnull %359) #11
  %364 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  br label %365

365:                                              ; preds = %341, %362
  %366 = phi %"class.spvtools::opt::BasicBlock"* [ %361, %341 ], [ %364, %362 ]
  store %"class.spvtools::opt::BasicBlock"* %366, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %367 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %366, i64 0, i32 2, i32 0, i32 1
  %368 = ptrtoint %"class.spvtools::opt::Instruction"* %367 to i64
  store i64 %368, i64* %39, align 8
  %369 = icmp eq i32 %124, 0
  br i1 %369, label %419, label %370

370:                                              ; preds = %365
  %371 = bitcast %"class.std::__1::vector.3"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %371) #11
  %372 = call i32 @_ZN8spvtools3opt4Pass9GetNullIdEj(%"class.spvtools::opt::Pass"* %32, i32 %329) #11
  %373 = call i8* @_Znwm(i64 16) #12
  %374 = bitcast i8* %373 to i32*
  %375 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %23, i64 0, i32 0, i32 1
  %376 = bitcast %"class.std::__1::vector.3"* %23 to i8**
  store i8* %373, i8** %376, align 8
  %377 = getelementptr inbounds i8, i8* %373, i64 16
  %378 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %379 = bitcast i32** %378 to i8**
  store i8* %377, i8** %379, align 8
  %380 = bitcast i32** %375 to i64*
  store i32 %124, i32* %374, align 4
  %381 = getelementptr inbounds i8, i8* %373, i64 4
  %382 = bitcast i8* %381 to i32*
  store i32 %60, i32* %382, align 4
  %383 = getelementptr inbounds i8, i8* %373, i64 8
  %384 = bitcast i8* %383 to i32*
  store i32 %372, i32* %384, align 4
  %385 = getelementptr inbounds i8, i8* %373, i64 12
  %386 = bitcast i8* %385 to i32*
  store i32 %320, i32* %386, align 4
  %387 = ptrtoint i8* %377 to i64
  store i64 %387, i64* %380, align 8
  %388 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %15, i32 %329, i32 245, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %23, i32 0) #11
  %389 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %23, i64 0, i32 0, i32 0
  %390 = load i32*, i32** %389, align 8
  %391 = icmp eq i32* %390, null
  br i1 %391, label %395, label %392

392:                                              ; preds = %370
  %393 = ptrtoint i32* %390 to i64
  store i64 %393, i64* %380, align 8
  %394 = bitcast i32* %390 to i8*
  call void @_ZdlPv(i8* %394) #12
  br label %395

395:                                              ; preds = %370, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #11
  %396 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %397 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %321, align 8
  %398 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %397, i64 0, i32 4
  %399 = load i8, i8* %398, align 1, !range !2
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %406, label %401

401:                                              ; preds = %395
  %402 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %397, i64 0, i32 3
  %403 = load i8, i8* %402, align 4, !range !2
  %404 = zext i8 %403 to i32
  %405 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %397, i32 %404) #11
  br label %406

406:                                              ; preds = %395, %401
  %407 = phi i32 [ %405, %401 ], [ 0, %395 ]
  %408 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %388, i64 0, i32 4
  %409 = load i8, i8* %408, align 1, !range !2
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %416, label %411

411:                                              ; preds = %406
  %412 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %388, i64 0, i32 3
  %413 = load i8, i8* %412, align 4, !range !2
  %414 = zext i8 %413 to i32
  %415 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %388, i32 %414) #11
  br label %416

416:                                              ; preds = %406, %411
  %417 = phi i32 [ %415, %411 ], [ 0, %406 ]
  %418 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %396, i32 %407, i32 %417) #11
  br label %419

419:                                              ; preds = %365, %416
  %420 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %24, align 8
  %421 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %127, align 8
  %422 = icmp ult %"class.std::__1::unique_ptr.40"* %420, %421
  br i1 %422, label %423, label %429

423:                                              ; preds = %419
  %424 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %425 = bitcast %"class.std::__1::unique_ptr.40"* %420 to i64*
  store i64 %424, i64* %425, align 8
  %426 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %420, i64 1
  %427 = ptrtoint %"class.std::__1::unique_ptr.40"* %426 to i64
  %428 = bitcast %"class.std::__1::unique_ptr.40"** %24 to i64*
  store i64 %427, i64* %428, align 8
  br label %430

429:                                              ; preds = %419
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %7, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %16) #11
  br label %430

430:                                              ; preds = %423, %429
  %431 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %432 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %321, align 8
  %433 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %431, %"class.spvtools::opt::Instruction"* %432) #11
  %434 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %435 = icmp eq %"class.spvtools::opt::BasicBlock"* %434, null
  br i1 %435, label %438, label %436

436:                                              ; preds = %430
  %437 = bitcast %"class.std::__1::unique_ptr.40"* %16 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %437, %"class.spvtools::opt::BasicBlock"* nonnull %434) #11
  br label %438

438:                                              ; preds = %436, %430
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = icmp eq i32 %4, -1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %4, i32 %5)
  br label %16

16:                                               ; preds = %6, %14
  %17 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %18, align 8
  %19 = tail call i8* @_Znwm(i64 112) #12
  %20 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %23) #11
  %24 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %28 to i32*
  store i64 1, i64* %26, align 8
  store i32 %1, i32* %32, align 8
  %33 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %34, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %39 = bitcast i32** %37 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %38, %"struct.std::__1::aligned_storage<4, 4>::type"** %39, align 8
  %40 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %41 = bitcast %"class.std::__1::unique_ptr.0"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %34, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %43 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %48 = bitcast i32** %46 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %47, %"struct.std::__1::aligned_storage<4, 4>::type"** %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %50 = bitcast %"class.std::__1::unique_ptr.0"* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %47 to i32*
  store i64 1, i64* %45, align 8
  store i32 %2, i32* %51, align 8
  %52 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %53, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 2
  %57 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 3, i64 0
  %58 = bitcast i32** %56 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %57, %"struct.std::__1::aligned_storage<4, 4>::type"** %58, align 8
  %59 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4
  %60 = bitcast %"class.std::__1::unique_ptr.0"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %53, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %62 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %67 = bitcast i32** %65 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %66, %"struct.std::__1::aligned_storage<4, 4>::type"** %67, align 8
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %69 = bitcast %"class.std::__1::unique_ptr.0"* %68 to i64*
  store i64 0, i64* %69, align 8
  %70 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %66 to i32*
  store i64 1, i64* %64, align 8
  store i32 %3, i32* %70, align 8
  %71 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  store i32 1, i32* %71, align 8
  %72 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %72, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 2
  %76 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 3, i64 0
  %77 = bitcast i32** %75 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %76, %"struct.std::__1::aligned_storage<4, 4>::type"** %77, align 8
  %78 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4
  %79 = bitcast %"class.std::__1::unique_ptr.0"* %78 to i64*
  store i64 0, i64* %79, align 8
  %80 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %72, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #11
  %81 = call i8* @_Znwm(i64 144) #12
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %83 = bitcast %"struct.spvtools::opt::Operand"** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %81, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %81, i64 144
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.spvtools::opt::Operand"** %86 to i8**
  store i8* %85, i8** %87, align 8
  %88 = bitcast i8* %81 to i32*
  %89 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %88, align 8
  %91 = getelementptr inbounds i8, i8* %81, i64 8
  %92 = bitcast i8* %91 to %"class.spvtools::utils::SmallVector"*
  %93 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %94 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %81, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %81, i64 24
  %98 = getelementptr inbounds i8, i8* %81, i64 32
  %99 = bitcast i8* %97 to i8**
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %81, i64 40
  %101 = bitcast i8* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %93) #11
  %103 = getelementptr inbounds i8, i8* %81, i64 48
  %104 = bitcast i8* %103 to i32*
  %105 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds i8, i8* %81, i64 56
  %108 = bitcast i8* %107 to %"class.spvtools::utils::SmallVector"*
  %109 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %110 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %81, i64 64
  %112 = bitcast i8* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %81, i64 72
  %114 = getelementptr inbounds i8, i8* %81, i64 80
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %81, i64 88
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %108, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %109) #11
  %119 = getelementptr inbounds i8, i8* %81, i64 96
  %120 = bitcast i8* %119 to i32*
  %121 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  %122 = load i32, i32* %121, align 8
  store i32 %122, i32* %120, align 8
  %123 = getelementptr inbounds i8, i8* %81, i64 104
  %124 = bitcast i8* %123 to %"class.spvtools::utils::SmallVector"*
  %125 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %126 = bitcast i8* %123 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %81, i64 112
  %128 = bitcast i8* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %81, i64 120
  %130 = getelementptr inbounds i8, i8* %81, i64 128
  %131 = bitcast i8* %129 to i8**
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds i8, i8* %81, i64 136
  %133 = bitcast i8* %132 to i64*
  store i64 0, i64* %133, align 8
  %134 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %124, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %125) #11
  %135 = getelementptr inbounds i8, i8* %81, i64 144
  %136 = bitcast i8* %19 to %"class.spvtools::opt::Instruction"*
  %137 = bitcast %"struct.spvtools::opt::Operand"** %82 to i64*
  %138 = ptrtoint i8* %135 to i64
  store i64 %138, i64* %137, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %136, %"class.spvtools::opt::IRContext"* %21, i32 250, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #11
  %139 = ptrtoint i8* %19 to i64
  %140 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %172, label %144

144:                                              ; preds = %16
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %82, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %170, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #12
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = load i8*, i8** %84, align 8
  br label %170

170:                                              ; preds = %168, %144
  %171 = phi i8* [ %169, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %82, align 8
  call void @_ZdlPv(i8* %171) #12
  br label %172

172:                                              ; preds = %16, %170
  %173 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %174 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %175 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %174, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %174, align 8
  %176 = icmp eq %"class.std::__1::vector.3"* %175, null
  br i1 %176, label %188, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = icmp eq i32* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %177
  %182 = ptrtoint i32* %179 to i64
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 1
  %184 = bitcast i32** %183 to i64*
  store i64 %182, i64* %184, align 8
  %185 = bitcast i32* %179 to i8*
  call void @_ZdlPv(i8* %185) #12
  br label %186

186:                                              ; preds = %181, %177
  %187 = bitcast %"class.std::__1::vector.3"* %175 to i8*
  call void @_ZdlPv(i8* %187) #12
  br label %188

188:                                              ; preds = %172, %186
  %189 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %189, align 8
  %190 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %190, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %190, align 8
  %192 = icmp eq %"class.std::__1::vector.3"* %191, null
  br i1 %192, label %255, label %244

193:                                              ; preds = %271
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = ptrtoint i32* %195 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 1
  %200 = bitcast i32** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast i32* %195 to i8*
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %197, %193
  %203 = bitcast %"class.std::__1::vector.3"* %273 to i8*
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %271, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %205 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %206 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %207 = icmp eq %"class.std::__1::vector.3"* %206, null
  br i1 %207, label %219, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = ptrtoint i32* %210 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 1
  %215 = bitcast i32** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i32* %210 to i8*
  call void @_ZdlPv(i8* %216) #12
  br label %217

217:                                              ; preds = %212, %208
  %218 = bitcast %"class.std::__1::vector.3"* %206 to i8*
  call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %204, %217
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %220 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %221 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %220, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %220, align 8
  %222 = icmp eq %"class.std::__1::vector.3"* %221, null
  br i1 %222, label %234, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #12
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.std::__1::vector.3"* %221 to i8*
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %219, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %235 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7)
  %236 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %18, align 8
  %237 = icmp eq %"class.spvtools::opt::Instruction"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.spvtools::opt::Instruction"* %236 to void (%"class.spvtools::opt::Instruction"*)***
  %240 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %240, i64 1
  %242 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %241, align 8
  call void %242(%"class.spvtools::opt::Instruction"* nonnull %236) #11
  br label %243

243:                                              ; preds = %234, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  ret %"class.spvtools::opt::Instruction"* %235

244:                                              ; preds = %188
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #12
  br label %253

253:                                              ; preds = %248, %244
  %254 = bitcast %"class.std::__1::vector.3"* %191 to i8*
  call void @_ZdlPv(i8* %254) #12
  br label %255

255:                                              ; preds = %253, %188
  %256 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %256, align 8
  %257 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %258 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %257, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %257, align 8
  %259 = icmp eq %"class.std::__1::vector.3"* %258, null
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %260
  %265 = ptrtoint i32* %262 to i64
  %266 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 1
  %267 = bitcast i32** %266 to i64*
  store i64 %265, i64* %267, align 8
  %268 = bitcast i32* %262 to i8*
  call void @_ZdlPv(i8* %268) #12
  br label %269

269:                                              ; preds = %264, %260
  %270 = bitcast %"class.std::__1::vector.3"* %258 to i8*
  call void @_ZdlPv(i8* %270) #12
  br label %271

271:                                              ; preds = %269, %255
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %272 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %273 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %272, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %272, align 8
  %274 = icmp eq %"class.std::__1::vector.3"* %273, null
  br i1 %274, label %204, label %193
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 112) #12
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  %14 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %24, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %33 = call i8* @_Znwm(i64 48) #12
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 48
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.spvtools::opt::Operand"** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = bitcast i8* %33 to i32*
  %40 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to %"class.spvtools::utils::SmallVector"*
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %45 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 24
  %49 = getelementptr inbounds i8, i8* %33, i64 32
  %50 = bitcast i8* %48 to i8**
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %43, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %44) #11
  %54 = getelementptr inbounds i8, i8* %33, i64 48
  %55 = bitcast i8* %9 to %"class.spvtools::opt::Instruction"*
  %56 = bitcast %"struct.spvtools::opt::Operand"** %34 to i64*
  %57 = ptrtoint i8* %54 to i64
  store i64 %57, i64* %56, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %55, %"class.spvtools::opt::IRContext"* %11, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %58 = ptrtoint i8* %9 to i64
  %59 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, null
  br i1 %62, label %91, label %63

63:                                               ; preds = %2
  %64 = bitcast %"struct.spvtools::opt::Operand"* %61 to i8*
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %65, %61
  br i1 %66, label %89, label %67

67:                                               ; preds = %63, %85
  %68 = phi %"struct.spvtools::opt::Operand"* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %83, %67
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %69, %61
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = load i8*, i8** %35, align 8
  br label %89

89:                                               ; preds = %87, %63
  %90 = phi i8* [ %88, %87 ], [ %64, %63 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %34, align 8
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %2, %89
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.3"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %91, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %108 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %123 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3)
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %8, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.spvtools::opt::Instruction"* %124 to void (%"class.spvtools::opt::Instruction"*)***
  %128 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, i64 1
  %130 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %129, align 8
  call void %130(%"class.spvtools::opt::Instruction"* nonnull %124) #11
  br label %131

131:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret %"class.spvtools::opt::Instruction"* %123
}

declare void @_ZN8spvtools3opt14InstrumentPass19GenDebugStreamWriteEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, i32, i32, %"class.std::__1::vector.3"* dereferenceable(24), %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt4Pass9GetNullIdEj(%"class.spvtools::opt::Pass"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt21InstBindlessCheckPass19GenDescIdxCheckCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNSt3__16vectorINS7_10unique_ptrIS5_NS7_14default_deleteIS5_EEEENS7_9allocatorISC_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"*, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, i32, %"class.std::__1::vector.38"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", align 8
  %8 = alloca %"class.std::__1::unique_ptr.40", align 8
  %9 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %10 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %11 = bitcast %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %14 = call zeroext i1 @_ZN8spvtools3opt21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPNS0_11InstructionEPNS1_11RefAnalysisE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"class.spvtools::opt::Instruction"* %13, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nonnull %7)
  br i1 %14, label %15, label %287

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 11
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %46

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %23, align 8
  %25 = tail call i8* @_Znwm(i64 104) #12
  %26 = bitcast i8* %25 to %"class.spvtools::opt::analysis::DefUseManager"*
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = getelementptr inbounds i8, i8* %25, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %31 = bitcast i8* %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 64
  %33 = getelementptr inbounds i8, i8* %25, i64 96
  %34 = bitcast i8* %33 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %34, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %26, %"class.spvtools::opt::Module"* %24) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 6
  %36 = ptrtoint i8* %25 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %35, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.62"* %35 to i64*
  store i64 %36, i64* %39, align 8
  %40 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %22
  %42 = bitcast %"class.std::__1::unique_ptr.62"* %35 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %42, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %38) #11
  br label %43

43:                                               ; preds = %41, %22
  %44 = load i32, i32* %18, align 8
  %45 = or i32 %44, 1
  store i32 %45, i32* %18, align 8
  br label %46

46:                                               ; preds = %15, %43
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 6, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %47, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %48, i32 %50) #11
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %51, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 65
  br i1 %54, label %55, label %287

55:                                               ; preds = %46
  %56 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %16, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %56, i64 0, i32 11
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %85

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %62, align 8
  %64 = tail call i8* @_Znwm(i64 104) #12
  %65 = bitcast i8* %64 to %"class.spvtools::opt::analysis::DefUseManager"*
  %66 = getelementptr inbounds i8, i8* %64, i64 32
  %67 = bitcast i8* %66 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %64, i64 48
  %69 = getelementptr inbounds i8, i8* %64, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %70 = bitcast i8* %69 to i8**
  store i8* %68, i8** %70, align 8
  %71 = getelementptr inbounds i8, i8* %64, i64 64
  %72 = getelementptr inbounds i8, i8* %64, i64 96
  %73 = bitcast i8* %72 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %73, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %65, %"class.spvtools::opt::Module"* %63) #11
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %56, i64 0, i32 6
  %75 = ptrtoint i8* %64 to i64
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %76, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.62"* %74 to i64*
  store i64 %75, i64* %78, align 8
  %79 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %77, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %61
  %81 = bitcast %"class.std::__1::unique_ptr.62"* %74 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %81, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %77) #11
  br label %82

82:                                               ; preds = %80, %61
  %83 = load i32, i32* %57, align 8
  %84 = or i32 %83, 1
  store i32 %84, i32* %57, align 8
  br label %85

85:                                               ; preds = %55, %82
  %86 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %56, i64 0, i32 6, i32 0, i32 0, i32 0
  %87 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %86, align 8
  %88 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 4
  %89 = load i32, i32* %88, align 8
  %90 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %87, i32 %89) #11
  %91 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt21InstBindlessCheckPass18GetPointeeTypeInstEPNS0_11InstructionE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"class.spvtools::opt::Instruction"* %90)
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 2
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 28
  br i1 %94, label %95, label %207

95:                                               ; preds = %85
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 3
  %97 = load i8, i8* %96, align 4, !range !2
  %98 = icmp eq i8 %97, 0
  %99 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 4
  %100 = load i8, i8* %99, align 1, !range !2
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %101, i32 1, i32 2
  %103 = xor i1 %101, true
  %104 = zext i1 %103 to i32
  %105 = select i1 %98, i32 %104, i32 %102
  %106 = add nuw nsw i32 %105, 1
  %107 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %91, i32 %106) #11
  %108 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %16, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 11
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %137

113:                                              ; preds = %95
  %114 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 4, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %114, align 8
  %116 = tail call i8* @_Znwm(i64 104) #12
  %117 = bitcast i8* %116 to %"class.spvtools::opt::analysis::DefUseManager"*
  %118 = getelementptr inbounds i8, i8* %116, i64 32
  %119 = bitcast i8* %118 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %119, align 4
  %120 = getelementptr inbounds i8, i8* %116, i64 48
  %121 = getelementptr inbounds i8, i8* %116, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #11
  %122 = bitcast i8* %121 to i8**
  store i8* %120, i8** %122, align 8
  %123 = getelementptr inbounds i8, i8* %116, i64 64
  %124 = getelementptr inbounds i8, i8* %116, i64 96
  %125 = bitcast i8* %124 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %125, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %117, %"class.spvtools::opt::Module"* %115) #11
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 6
  %127 = ptrtoint i8* %116 to i64
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %126, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.62"* %126 to i64*
  store i64 %127, i64* %130, align 8
  %131 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %129, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %113
  %133 = bitcast %"class.std::__1::unique_ptr.62"* %126 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %133, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %129) #11
  br label %134

134:                                              ; preds = %132, %113
  %135 = load i32, i32* %109, align 8
  %136 = or i32 %135, 1
  store i32 %136, i32* %109, align 8
  br label %137

137:                                              ; preds = %95, %134
  %138 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 6, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %138, align 8
  %140 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 5
  %141 = load i32, i32* %140, align 4
  %142 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %139, i32 %141) #11
  %143 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %16, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 11
  %145 = load i32, i32* %144, align 8
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %172

148:                                              ; preds = %137
  %149 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %149, align 8
  %151 = tail call i8* @_Znwm(i64 104) #12
  %152 = bitcast i8* %151 to %"class.spvtools::opt::analysis::DefUseManager"*
  %153 = getelementptr inbounds i8, i8* %151, i64 32
  %154 = bitcast i8* %153 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %154, align 4
  %155 = getelementptr inbounds i8, i8* %151, i64 48
  %156 = getelementptr inbounds i8, i8* %151, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 16, i1 false) #11
  %157 = bitcast i8* %156 to i8**
  store i8* %155, i8** %157, align 8
  %158 = getelementptr inbounds i8, i8* %151, i64 64
  %159 = getelementptr inbounds i8, i8* %151, i64 96
  %160 = bitcast i8* %159 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %160, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %152, %"class.spvtools::opt::Module"* %150) #11
  %161 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 6
  %162 = ptrtoint i8* %151 to i64
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %161, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %163, align 8
  %165 = bitcast %"class.std::__1::unique_ptr.62"* %161 to i64*
  store i64 %162, i64* %165, align 8
  %166 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %164, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %148
  %168 = bitcast %"class.std::__1::unique_ptr.62"* %161 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %168, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %164) #11
  br label %169

169:                                              ; preds = %167, %148
  %170 = load i32, i32* %144, align 8
  %171 = or i32 %170, 1
  store i32 %171, i32* %144, align 8
  br label %172

172:                                              ; preds = %137, %169
  %173 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 6, i32 0, i32 0, i32 0
  %174 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %173, align 8
  %175 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %174, i32 %107) #11
  %176 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %142, i64 0, i32 2
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 43
  br i1 %178, label %179, label %213

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %175, i64 0, i32 2
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %181, 43
  br i1 %182, label %183, label %213

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %142, i64 0, i32 3
  %185 = load i8, i8* %184, align 4, !range !2
  %186 = icmp eq i8 %185, 0
  %187 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %142, i64 0, i32 4
  %188 = load i8, i8* %187, align 1, !range !2
  %189 = icmp eq i8 %188, 0
  %190 = select i1 %189, i32 1, i32 2
  %191 = xor i1 %189, true
  %192 = zext i1 %191 to i32
  %193 = select i1 %186, i32 %192, i32 %190
  %194 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %142, i32 %193) #11
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %175, i64 0, i32 3
  %196 = load i8, i8* %195, align 4, !range !2
  %197 = icmp eq i8 %196, 0
  %198 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %175, i64 0, i32 4
  %199 = load i8, i8* %198, align 1, !range !2
  %200 = icmp eq i8 %199, 0
  %201 = select i1 %200, i32 1, i32 2
  %202 = xor i1 %200, true
  %203 = zext i1 %202 to i32
  %204 = select i1 %197, i32 %203, i32 %201
  %205 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %175, i32 %204) #11
  %206 = icmp ult i32 %194, %205
  br i1 %206, label %287, label %213

207:                                              ; preds = %85
  %208 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 1
  %209 = load i8, i8* %208, align 1, !range !2
  %210 = icmp ne i8 %209, 0
  %211 = icmp eq i32 %93, 29
  %212 = and i1 %211, %210
  br i1 %212, label %213, label %287

213:                                              ; preds = %207, %172, %179, %183
  %214 = phi i32 [ %107, %183 ], [ %107, %179 ], [ %107, %172 ], [ 0, %207 ]
  %215 = bitcast %"class.std::__1::unique_ptr.40"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #11
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 0, i32 0, i32 0, i32 0
  %217 = bitcast %"class.std::__1::unique_ptr.40"* %8 to i64*
  store i64 0, i64* %217, align 8
  %218 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  %219 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %9 to i64*
  store i64 %220, i64* %221, align 8
  call void @_ZN8spvtools3opt14InstrumentPass15MovePreludeCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPNSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstrumentPass"* %218, %"class.spvtools::opt::InstructionList::iterator"* nonnull %9, %"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* %3, %"class.std::__1::unique_ptr.40"* nonnull %8) #11
  %222 = bitcast %"class.spvtools::opt::InstructionBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %222) #11
  %223 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %10, i64 0, i32 1
  %224 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %10, i64 0, i32 3
  %225 = bitcast %"class.spvtools::opt::IRContext"** %16 to i64*
  %226 = bitcast %"class.spvtools::opt::InstructionBuilder"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 32, i1 false)
  %227 = load i64, i64* %225, align 8
  %228 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %216, align 8
  %229 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %228, i64 0, i32 2, i32 0, i32 1
  %230 = ptrtoint %"class.spvtools::opt::Instruction"* %229 to i64
  %231 = bitcast %"class.spvtools::opt::InstructionBuilder"* %10 to i64*
  store i64 %227, i64* %231, align 8
  store %"class.spvtools::opt::BasicBlock"* %228, %"class.spvtools::opt::BasicBlock"** %223, align 8
  %232 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %10, i64 0, i32 2
  %233 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %232 to i64*
  store i64 %230, i64* %233, align 8
  store i32 3, i32* %224, align 8
  %234 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %5, i64 0, i32 0, i32 1
  %235 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %234, align 8
  %236 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %237 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %236, align 8
  %238 = icmp ult %"class.std::__1::unique_ptr.40"* %235, %237
  br i1 %238, label %239, label %245

239:                                              ; preds = %213
  %240 = ptrtoint %"class.spvtools::opt::BasicBlock"* %228 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %216, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.40"* %235 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %235, i64 1
  %243 = ptrtoint %"class.std::__1::unique_ptr.40"* %242 to i64
  %244 = bitcast %"class.std::__1::unique_ptr.40"** %234 to i64*
  store i64 %243, i64* %244, align 8
  br label %246

245:                                              ; preds = %213
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %5, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %8) #11
  br label %246

246:                                              ; preds = %239, %245
  %247 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %10, i32 0, i1 zeroext false) #11
  %248 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %247, i64 0, i32 4
  %249 = load i8, i8* %248, align 1, !range !2
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %256, label %251

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %247, i64 0, i32 3
  %253 = load i8, i8* %252, align 4, !range !2
  %254 = zext i8 %253 to i32
  %255 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %247, i32 %254) #11
  br label %256

256:                                              ; preds = %246, %251
  %257 = phi i32 [ %255, %251 ], [ 0, %246 ]
  %258 = icmp eq i32 %214, 0
  br i1 %258, label %259, label %261

259:                                              ; preds = %256
  %260 = call i32 @_ZN8spvtools3opt21InstBindlessCheckPass18GenDebugReadLengthEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %89, %"class.spvtools::opt::InstructionBuilder"* nonnull %10)
  br label %261

261:                                              ; preds = %259, %256
  %262 = phi i32 [ %260, %259 ], [ %214, %256 ]
  %263 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 5
  %264 = load i32, i32* %263, align 4
  %265 = call i32 @_ZN8spvtools3opt14InstrumentPass15Gen32BitCvtCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %218, i32 %264, %"class.spvtools::opt::InstructionBuilder"* nonnull %10) #11
  %266 = call i32 @_ZN8spvtools3opt14InstrumentPass15Gen32BitCvtCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %218, i32 %262, %"class.spvtools::opt::InstructionBuilder"* nonnull %10) #11
  %267 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetBoolIdEv(%"class.spvtools::opt::InstrumentPass"* %218) #11
  %268 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %10, i32 %267, i32 176, i32 %265, i32 %266)
  store i32 %265, i32* %263, align 4
  %269 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %268, i64 0, i32 4
  %270 = load i8, i8* %269, align 1, !range !2
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %277, label %272

272:                                              ; preds = %261
  %273 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %268, i64 0, i32 3
  %274 = load i8, i8* %273, align 4, !range !2
  %275 = zext i8 %274 to i32
  %276 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %268, i32 %275) #11
  br label %277

277:                                              ; preds = %261, %272
  %278 = phi i32 [ %276, %272 ], [ 0, %261 ]
  call void @_ZN8spvtools3opt21InstBindlessCheckPass12GenCheckCodeEjjjjjPNS1_11RefAnalysisEPNSt3__16vectorINS4_10unique_ptrINS0_10BasicBlockENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %278, i32 %257, i32 0, i32 %262, i32 %4, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nonnull %7, %"class.std::__1::vector.38"* %5)
  %279 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %234, align 8
  %280 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %279, i64 -1, i32 0, i32 0, i32 0
  %281 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %280, align 8
  call void @_ZN8spvtools3opt14InstrumentPass16MovePostludeCodeENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPS3_(%"class.spvtools::opt::InstrumentPass"* %218, %"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* %3, %"class.spvtools::opt::BasicBlock"* %281) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %222) #11
  %282 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %216, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %216, align 8
  %283 = icmp eq %"class.spvtools::opt::BasicBlock"* %282, null
  br i1 %283, label %286, label %284

284:                                              ; preds = %277
  %285 = bitcast %"class.std::__1::unique_ptr.40"* %8 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %285, %"class.spvtools::opt::BasicBlock"* nonnull %282) #11
  br label %286

286:                                              ; preds = %277, %284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #11
  br label %287

287:                                              ; preds = %207, %46, %183, %286, %6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt14InstrumentPass15MovePreludeCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPNSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstrumentPass"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN8spvtools3opt14InstrumentPass9GetBoolIdEv(%"class.spvtools::opt::InstrumentPass"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt14InstrumentPass16MovePostludeCodeENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPS3_(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt21InstBindlessCheckPass20GenDescInitCheckCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNSt3__16vectorINS7_10unique_ptrIS5_NS7_14default_deleteIS5_EEEENS7_9allocatorISC_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"*, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, i32, %"class.std::__1::vector.38"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", align 8
  %8 = alloca %"class.std::__1::unique_ptr.40", align 8
  %9 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %10 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %11 = bitcast %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %14 = call zeroext i1 @_ZN8spvtools3opt21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPNS0_11InstructionEPNS1_11RefAnalysisE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"class.spvtools::opt::Instruction"* %13, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nonnull %7)
  br i1 %14, label %15, label %189

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %65

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 3
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %65, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 11
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %54

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %31, align 8
  %33 = tail call i8* @_Znwm(i64 104) #12
  %34 = bitcast i8* %33 to %"class.spvtools::opt::analysis::DefUseManager"*
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  %38 = getelementptr inbounds i8, i8* %33, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #11
  %39 = bitcast i8* %38 to i8**
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %33, i64 64
  %41 = getelementptr inbounds i8, i8* %33, i64 96
  %42 = bitcast i8* %41 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %42, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %34, %"class.spvtools::opt::Module"* %32) #11
  %43 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 6
  %44 = ptrtoint i8* %33 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %43, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.62"* %43 to i64*
  store i64 %44, i64* %47, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %46, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %30
  %50 = bitcast %"class.std::__1::unique_ptr.62"* %43 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %50, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %46) #11
  br label %51

51:                                               ; preds = %49, %30
  %52 = load i32, i32* %26, align 8
  %53 = or i32 %52, 1
  store i32 %53, i32* %26, align 8
  br label %54

54:                                               ; preds = %51, %23
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 6, i32 0, i32 0, i32 0
  %56 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %55, align 8
  %57 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %56, i32 %58) #11
  %60 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt21InstBindlessCheckPass18GetPointeeTypeInstEPNS0_11InstructionE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"class.spvtools::opt::Instruction"* %59)
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %62, -28
  %64 = icmp ult i32 %63, 3
  br i1 %64, label %65, label %69

65:                                               ; preds = %15, %19, %54
  %66 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 2
  %67 = load i8, i8* %66, align 2, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %189, label %69

69:                                               ; preds = %65, %54
  %70 = phi i1 [ true, %65 ], [ false, %54 ]
  %71 = bitcast %"class.std::__1::unique_ptr.40"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr.40"* %8 to i64*
  store i64 0, i64* %73, align 8
  %74 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  %75 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %9 to i64*
  store i64 %76, i64* %77, align 8
  call void @_ZN8spvtools3opt14InstrumentPass15MovePreludeCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPNSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstrumentPass"* %74, %"class.spvtools::opt::InstructionList::iterator"* nonnull %9, %"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* %3, %"class.std::__1::unique_ptr.40"* nonnull %8) #11
  %78 = bitcast %"class.spvtools::opt::InstructionBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #11
  %79 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %10, i64 0, i32 1
  %80 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %10, i64 0, i32 3
  %81 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %82 = bitcast %"class.spvtools::opt::IRContext"** %81 to i64*
  %83 = bitcast %"class.spvtools::opt::InstructionBuilder"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 32, i1 false)
  %84 = load i64, i64* %82, align 8
  %85 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %72, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %85, i64 0, i32 2, i32 0, i32 1
  %87 = ptrtoint %"class.spvtools::opt::Instruction"* %86 to i64
  %88 = bitcast %"class.spvtools::opt::InstructionBuilder"* %10 to i64*
  store i64 %84, i64* %88, align 8
  store %"class.spvtools::opt::BasicBlock"* %85, %"class.spvtools::opt::BasicBlock"** %79, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %10, i64 0, i32 2
  %90 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %89 to i64*
  store i64 %87, i64* %90, align 8
  store i32 3, i32* %80, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %5, i64 0, i32 0, i32 1
  %92 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %93, align 8
  %95 = icmp ult %"class.std::__1::unique_ptr.40"* %92, %94
  br i1 %95, label %96, label %102

96:                                               ; preds = %69
  %97 = ptrtoint %"class.spvtools::opt::BasicBlock"* %85 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %72, align 8
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %92 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %92, i64 1
  %100 = ptrtoint %"class.std::__1::unique_ptr.40"* %99 to i64
  %101 = bitcast %"class.std::__1::unique_ptr.40"** %91 to i64*
  store i64 %100, i64* %101, align 8
  br label %103

102:                                              ; preds = %69
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %5, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %8) #11
  br label %103

103:                                              ; preds = %96, %102
  br i1 %70, label %104, label %114

104:                                              ; preds = %103
  %105 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %10, i32 0, i1 zeroext false) #11
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 4
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %116, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 3
  %111 = load i8, i8* %110, align 4, !range !2
  %112 = zext i8 %111 to i32
  %113 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %105, i32 %112) #11
  br label %116

114:                                              ; preds = %103
  %115 = call i32 @_ZN8spvtools3opt21InstBindlessCheckPass14GenLastByteIdxEPNS1_11RefAnalysisEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nonnull %7, %"class.spvtools::opt::InstructionBuilder"* nonnull %10)
  br label %116

116:                                              ; preds = %109, %104, %114
  %117 = phi i32 [ %115, %114 ], [ %113, %109 ], [ 0, %104 ]
  %118 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 5
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %133

121:                                              ; preds = %116
  %122 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %10, i32 0, i1 zeroext false) #11
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 4
  %124 = load i8, i8* %123, align 1, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 3
  %128 = load i8, i8* %127, align 4, !range !2
  %129 = zext i8 %128 to i32
  %130 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %122, i32 %129) #11
  br label %131

131:                                              ; preds = %121, %126
  %132 = phi i32 [ %130, %126 ], [ 0, %121 ]
  store i32 %132, i32* %118, align 4
  br label %133

133:                                              ; preds = %131, %116
  %134 = phi i32 [ %132, %131 ], [ %119, %116 ]
  %135 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 4
  %136 = load i32, i32* %135, align 8
  %137 = call i32 @_ZN8spvtools3opt21InstBindlessCheckPass16GenDebugReadInitEjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %136, i32 %134, %"class.spvtools::opt::InstructionBuilder"* nonnull %10)
  %138 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetBoolIdEv(%"class.spvtools::opt::InstrumentPass"* %74) #11
  %139 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %10, i32 %138, i32 176, i32 %117, i32 %137)
  br i1 %70, label %145, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 6
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 2
  %144 = select i1 %143, i32 4, i32 5
  br label %145

145:                                              ; preds = %133, %140
  %146 = phi i32 [ %144, %140 ], [ 1, %133 ]
  %147 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %10, i32 %146, i1 zeroext false) #11
  %148 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %147, i64 0, i32 4
  %149 = load i8, i8* %148, align 1, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %147, i64 0, i32 3
  %153 = load i8, i8* %152, align 4, !range !2
  %154 = zext i8 %153 to i32
  %155 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %147, i32 %154) #11
  br label %156

156:                                              ; preds = %145, %151
  %157 = phi i32 [ %155, %151 ], [ 0, %145 ]
  %158 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %139, i64 0, i32 4
  %159 = load i8, i8* %158, align 1, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %166, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %139, i64 0, i32 3
  %163 = load i8, i8* %162, align 4, !range !2
  %164 = zext i8 %163 to i32
  %165 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %139, i32 %164) #11
  br label %166

166:                                              ; preds = %156, %161
  %167 = phi i32 [ %165, %161 ], [ 0, %156 ]
  %168 = select i1 %70, i32 0, i32 %117
  br i1 %70, label %169, label %179

169:                                              ; preds = %166
  %170 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %10, i32 0, i1 zeroext false) #11
  %171 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %170, i64 0, i32 4
  %172 = load i8, i8* %171, align 1, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %170, i64 0, i32 3
  %176 = load i8, i8* %175, align 4, !range !2
  %177 = zext i8 %176 to i32
  %178 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %170, i32 %177) #11
  br label %179

179:                                              ; preds = %174, %169, %166
  %180 = phi i32 [ %137, %166 ], [ %178, %174 ], [ 0, %169 ]
  call void @_ZN8spvtools3opt21InstBindlessCheckPass12GenCheckCodeEjjjjjPNS1_11RefAnalysisEPNSt3__16vectorINS4_10unique_ptrINS0_10BasicBlockENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %167, i32 %157, i32 %168, i32 %180, i32 %4, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nonnull %7, %"class.std::__1::vector.38"* %5)
  %181 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %91, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %181, i64 -1, i32 0, i32 0, i32 0
  %183 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %182, align 8
  call void @_ZN8spvtools3opt14InstrumentPass16MovePostludeCodeENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPS3_(%"class.spvtools::opt::InstrumentPass"* %74, %"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* %3, %"class.spvtools::opt::BasicBlock"* %183) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #11
  %184 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %72, align 8
  %185 = icmp eq %"class.spvtools::opt::BasicBlock"* %184, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %179
  %187 = bitcast %"class.std::__1::unique_ptr.40"* %8 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %187, %"class.spvtools::opt::BasicBlock"* nonnull %184) #11
  br label %188

188:                                              ; preds = %179, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %189

189:                                              ; preds = %188, %65, %6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt21InstBindlessCheckPass19GenTexBuffCheckCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNSt3__16vectorINS7_10unique_ptrIS5_NS7_14default_deleteIS5_EEEENS7_9allocatorISC_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"*, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, i32, %"class.std::__1::vector.38"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", align 8
  %8 = alloca %"class.std::__1::unique_ptr.21", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.std::__1::unique_ptr.40", align 8
  %13 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %14 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 6
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 6, i32 0, i32 1
  %21 = bitcast %"struct.spvtools::opt::Operand"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = sdiv exact i64 %25, 48
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 4
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i32 1, i32 2
  %34 = xor i1 %32, true
  %35 = zext i1 %34 to i32
  %36 = select i1 %29, i32 %35, i32 %33
  %37 = trunc i64 %26 to i32
  %38 = sub i32 %37, %36
  %39 = icmp eq i32 %18, 98
  %40 = icmp eq i32 %38, 2
  %41 = icmp eq i32 %18, 95
  %42 = or i1 %39, %41
  %43 = and i1 %42, %40
  br i1 %43, label %48, label %44

44:                                               ; preds = %6
  %45 = icmp eq i32 %18, 99
  %46 = icmp eq i32 %38, 3
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %503

48:                                               ; preds = %44, %6
  %49 = bitcast %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 40, i1 false)
  %50 = call zeroext i1 @_ZN8spvtools3opt21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPNS0_11InstructionEPNS1_11RefAnalysisE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, %"class.spvtools::opt::Instruction"* %16, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nonnull %7)
  br i1 %50, label %51, label %502

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %53 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %52, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 11
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %82

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %59, align 8
  %61 = tail call i8* @_Znwm(i64 104) #12
  %62 = bitcast i8* %61 to %"class.spvtools::opt::analysis::DefUseManager"*
  %63 = getelementptr inbounds i8, i8* %61, i64 32
  %64 = bitcast i8* %63 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %61, i64 48
  %66 = getelementptr inbounds i8, i8* %61, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #11
  %67 = bitcast i8* %66 to i8**
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds i8, i8* %61, i64 64
  %69 = getelementptr inbounds i8, i8* %61, i64 96
  %70 = bitcast i8* %69 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %70, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %62, %"class.spvtools::opt::Module"* %60) #11
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 6
  %72 = ptrtoint i8* %61 to i64
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.62"* %71 to i64*
  store i64 %72, i64* %75, align 8
  %76 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %58
  %78 = bitcast %"class.std::__1::unique_ptr.62"* %71 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %78, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %74) #11
  br label %79

79:                                               ; preds = %77, %58
  %80 = load i32, i32* %54, align 8
  %81 = or i32 %80, 1
  store i32 %81, i32* %54, align 8
  br label %82

82:                                               ; preds = %51, %79
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 6, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %83, align 8
  %85 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %84, i32 %86) #11
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 3
  %89 = load i8, i8* %88, align 4, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %82
  %92 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %87, i32 0) #11
  br label %93

93:                                               ; preds = %82, %91
  %94 = phi i32 [ %92, %91 ], [ 0, %82 ]
  %95 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %52, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %95, i64 0, i32 11
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %124

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %95, i64 0, i32 4, i32 0, i32 0, i32 0
  %102 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %101, align 8
  %103 = tail call i8* @_Znwm(i64 104) #12
  %104 = bitcast i8* %103 to %"class.spvtools::opt::analysis::DefUseManager"*
  %105 = getelementptr inbounds i8, i8* %103, i64 32
  %106 = bitcast i8* %105 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %106, align 4
  %107 = getelementptr inbounds i8, i8* %103, i64 48
  %108 = getelementptr inbounds i8, i8* %103, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 16, i1 false) #11
  %109 = bitcast i8* %108 to i8**
  store i8* %107, i8** %109, align 8
  %110 = getelementptr inbounds i8, i8* %103, i64 64
  %111 = getelementptr inbounds i8, i8* %103, i64 96
  %112 = bitcast i8* %111 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %112, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %104, %"class.spvtools::opt::Module"* %102) #11
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %95, i64 0, i32 6
  %114 = ptrtoint i8* %103 to i64
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %115, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.62"* %113 to i64*
  store i64 %114, i64* %117, align 8
  %118 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %116, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %100
  %120 = bitcast %"class.std::__1::unique_ptr.62"* %113 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %120, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %116) #11
  br label %121

121:                                              ; preds = %119, %100
  %122 = load i32, i32* %96, align 8
  %123 = or i32 %122, 1
  store i32 %123, i32* %96, align 8
  br label %124

124:                                              ; preds = %93, %121
  %125 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %95, i64 0, i32 6, i32 0, i32 0, i32 0
  %126 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %125, align 8
  %127 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %126, i32 %94) #11
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 0, i32 3
  %129 = load i8, i8* %128, align 4, !range !2
  %130 = icmp eq i8 %129, 0
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 0, i32 4
  %132 = load i8, i8* %131, align 1, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, i32 1, i32 2
  %135 = xor i1 %133, true
  %136 = zext i1 %135 to i32
  %137 = select i1 %130, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 1
  %139 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %127, i32 %138) #11
  %140 = icmp eq i32 %139, 5
  br i1 %140, label %141, label %502

141:                                              ; preds = %124
  %142 = load i8, i8* %128, align 4, !range !2
  %143 = icmp eq i8 %142, 0
  %144 = load i8, i8* %131, align 1, !range !2
  %145 = icmp eq i8 %144, 0
  %146 = select i1 %145, i32 1, i32 2
  %147 = xor i1 %145, true
  %148 = zext i1 %147 to i32
  %149 = select i1 %143, i32 %148, i32 %146
  %150 = add nuw nsw i32 %149, 2
  %151 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %127, i32 %150) #11
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %502

153:                                              ; preds = %141
  %154 = load i8, i8* %128, align 4, !range !2
  %155 = icmp eq i8 %154, 0
  %156 = load i8, i8* %131, align 1, !range !2
  %157 = icmp eq i8 %156, 0
  %158 = select i1 %157, i32 1, i32 2
  %159 = xor i1 %157, true
  %160 = zext i1 %159 to i32
  %161 = select i1 %155, i32 %160, i32 %158
  %162 = add nuw nsw i32 %161, 3
  %163 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %127, i32 %162) #11
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %502

165:                                              ; preds = %153
  %166 = load i8, i8* %128, align 4, !range !2
  %167 = icmp eq i8 %166, 0
  %168 = load i8, i8* %131, align 1, !range !2
  %169 = icmp eq i8 %168, 0
  %170 = select i1 %169, i32 1, i32 2
  %171 = xor i1 %169, true
  %172 = zext i1 %171 to i32
  %173 = select i1 %167, i32 %172, i32 %170
  %174 = or i32 %173, 4
  %175 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %127, i32 %174) #11
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %502

177:                                              ; preds = %165
  %178 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %52, align 8
  %179 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %178, i64 0, i32 8
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %179, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %180, align 8
  %182 = icmp eq %"class.spvtools::opt::FeatureManager"* %181, null
  br i1 %182, label %183, label %221

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %178, i64 0, i32 1
  %185 = tail call i8* @_Znwm(i64 48) #12
  %186 = bitcast i8* %185 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %184, %"class.spvtools::AssemblyGrammar"** %186, align 8
  %187 = getelementptr inbounds i8, i8* %185, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 40, i1 false) #11
  %188 = ptrtoint i8* %185 to i64
  %189 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %180, align 8
  %190 = bitcast %"class.std::__1::unique_ptr.152"* %179 to i64*
  store i64 %188, i64* %190, align 8
  %191 = icmp eq %"class.spvtools::opt::FeatureManager"* %189, null
  %192 = bitcast i8* %185 to %"class.spvtools::opt::FeatureManager"*
  br i1 %191, label %216, label %193

193:                                              ; preds = %183
  %194 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %189, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %195 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %194, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %194, align 8
  %196 = icmp eq %"class.std::__1::set.158"* %195, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %195, i64 0, i32 0
  %199 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %195, i64 0, i32 0, i32 1, i32 0, i32 0
  %200 = bitcast %"class.std::__1::__tree_end_node"* %199 to %"class.std::__1::__tree_node.1025"**
  %201 = load %"class.std::__1::__tree_node.1025"*, %"class.std::__1::__tree_node.1025"** %200, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %198, %"class.std::__1::__tree_node.1025"* %201) #11
  %202 = bitcast %"class.std::__1::set.158"* %195 to i8*
  tail call void @_ZdlPv(i8* %202) #12
  br label %203

203:                                              ; preds = %197, %193
  %204 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %189, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %205 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %204, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %204, align 8
  %206 = icmp eq %"class.std::__1::set.158"* %205, null
  br i1 %206, label %213, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %205, i64 0, i32 0
  %209 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %205, i64 0, i32 0, i32 1, i32 0, i32 0
  %210 = bitcast %"class.std::__1::__tree_end_node"* %209 to %"class.std::__1::__tree_node.1025"**
  %211 = load %"class.std::__1::__tree_node.1025"*, %"class.std::__1::__tree_node.1025"** %210, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %208, %"class.std::__1::__tree_node.1025"* %211) #11
  %212 = bitcast %"class.std::__1::set.158"* %205 to i8*
  tail call void @_ZdlPv(i8* %212) #12
  br label %213

213:                                              ; preds = %207, %203
  %214 = bitcast %"class.spvtools::opt::FeatureManager"* %189 to i8*
  tail call void @_ZdlPv(i8* %214) #12
  %215 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %180, align 8
  br label %216

216:                                              ; preds = %213, %183
  %217 = phi %"class.spvtools::opt::FeatureManager"* [ %215, %213 ], [ %192, %183 ]
  %218 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %178, i64 0, i32 4, i32 0, i32 0, i32 0
  %219 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %218, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* %217, %"class.spvtools::opt::Module"* %219) #11
  %220 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %180, align 8
  br label %221

221:                                              ; preds = %177, %216
  %222 = phi %"class.spvtools::opt::FeatureManager"* [ %181, %177 ], [ %220, %216 ]
  %223 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %222, i64 0, i32 2, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = and i64 %224, 1125899906842624
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %386

227:                                              ; preds = %221
  %228 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #11
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %8, i64 0, i32 0, i32 0, i32 0
  %230 = tail call i8* @_Znwm(i64 112) #12
  %231 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %52, align 8
  %232 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #11
  %233 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %233) #11
  %234 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %234) #11
  %235 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %235, align 8
  %236 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %237 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %238 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %239 = bitcast i32** %237 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %238, %"struct.std::__1::aligned_storage<4, 4>::type"** %239, align 8
  %240 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %241 = bitcast %"class.std::__1::unique_ptr.0"* %240 to i64*
  store i64 0, i64* %241, align 8
  %242 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %238 to i32*
  store i64 1, i64* %236, align 8
  store i32 50, i32* %242, align 8
  %243 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 0
  store i32 32, i32* %243, align 8
  %244 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1
  %245 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %244, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %245, align 8
  %246 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %246, align 8
  %247 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 2
  %248 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 3, i64 0
  %249 = bitcast i32** %247 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %248, %"struct.std::__1::aligned_storage<4, 4>::type"** %249, align 8
  %250 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 4
  %251 = bitcast %"class.std::__1::unique_ptr.0"* %250 to i64*
  store i64 0, i64* %251, align 8
  %252 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %244, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %253 = call i8* @_Znwm(i64 48) #12
  %254 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %255 = bitcast %"struct.spvtools::opt::Operand"** %254 to i8**
  store i8* %253, i8** %255, align 8
  %256 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %253, i8** %256, align 8
  %257 = getelementptr inbounds i8, i8* %253, i64 48
  %258 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %259 = bitcast %"struct.spvtools::opt::Operand"** %258 to i8**
  store i8* %257, i8** %259, align 8
  %260 = bitcast i8* %253 to i32*
  %261 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 0
  %262 = load i32, i32* %261, align 8
  store i32 %262, i32* %260, align 8
  %263 = getelementptr inbounds i8, i8* %253, i64 8
  %264 = bitcast i8* %263 to %"class.spvtools::utils::SmallVector"*
  %265 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1
  %266 = bitcast i8* %263 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %266, align 8
  %267 = getelementptr inbounds i8, i8* %253, i64 16
  %268 = bitcast i8* %267 to i64*
  store i64 0, i64* %268, align 8
  %269 = getelementptr inbounds i8, i8* %253, i64 24
  %270 = getelementptr inbounds i8, i8* %253, i64 32
  %271 = bitcast i8* %269 to i8**
  store i8* %270, i8** %271, align 8
  %272 = getelementptr inbounds i8, i8* %253, i64 40
  %273 = bitcast i8* %272 to i64*
  store i64 0, i64* %273, align 8
  %274 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %264, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %265) #11
  %275 = getelementptr inbounds i8, i8* %253, i64 48
  %276 = bitcast i8* %230 to %"class.spvtools::opt::Instruction"*
  %277 = bitcast %"struct.spvtools::opt::Operand"** %254 to i64*
  %278 = ptrtoint i8* %275 to i64
  store i64 %278, i64* %277, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %276, %"class.spvtools::opt::IRContext"* %231, i32 17, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %9) #11
  %279 = ptrtoint i8* %230 to i64
  %280 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %282 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %281, align 8
  %283 = icmp eq %"struct.spvtools::opt::Operand"* %282, null
  br i1 %283, label %312, label %284

284:                                              ; preds = %227
  %285 = bitcast %"struct.spvtools::opt::Operand"* %282 to i8*
  %286 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %254, align 8
  %287 = icmp eq %"struct.spvtools::opt::Operand"* %286, %282
  br i1 %287, label %310, label %288

288:                                              ; preds = %284, %306
  %289 = phi %"struct.spvtools::opt::Operand"* [ %290, %306 ], [ %286, %284 ]
  %290 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %289, i64 -1
  %291 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %289, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8
  %292 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %289, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %293 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %292, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %292, align 8
  %294 = icmp eq %"class.std::__1::vector.3"* %293, null
  br i1 %294, label %306, label %295

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %293, i64 0, i32 0, i32 0
  %297 = load i32*, i32** %296, align 8
  %298 = icmp eq i32* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %295
  %300 = ptrtoint i32* %297 to i64
  %301 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %293, i64 0, i32 0, i32 1
  %302 = bitcast i32** %301 to i64*
  store i64 %300, i64* %302, align 8
  %303 = bitcast i32* %297 to i8*
  call void @_ZdlPv(i8* %303) #12
  br label %304

304:                                              ; preds = %299, %295
  %305 = bitcast %"class.std::__1::vector.3"* %293 to i8*
  call void @_ZdlPv(i8* %305) #12
  br label %306

306:                                              ; preds = %304, %288
  %307 = icmp eq %"struct.spvtools::opt::Operand"* %290, %282
  br i1 %307, label %308, label %288

308:                                              ; preds = %306
  %309 = load i8*, i8** %256, align 8
  br label %310

310:                                              ; preds = %308, %284
  %311 = phi i8* [ %309, %308 ], [ %285, %284 ]
  store %"struct.spvtools::opt::Operand"* %282, %"struct.spvtools::opt::Operand"** %254, align 8
  call void @_ZdlPv(i8* %311) #12
  br label %312

312:                                              ; preds = %227, %310
  %313 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %313, align 8
  %314 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %315 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %314, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %314, align 8
  %316 = icmp eq %"class.std::__1::vector.3"* %315, null
  br i1 %316, label %328, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %315, i64 0, i32 0, i32 0
  %319 = load i32*, i32** %318, align 8
  %320 = icmp eq i32* %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %317
  %322 = ptrtoint i32* %319 to i64
  %323 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %315, i64 0, i32 0, i32 1
  %324 = bitcast i32** %323 to i64*
  store i64 %322, i64* %324, align 8
  %325 = bitcast i32* %319 to i8*
  call void @_ZdlPv(i8* %325) #12
  br label %326

326:                                              ; preds = %321, %317
  %327 = bitcast %"class.std::__1::vector.3"* %315 to i8*
  call void @_ZdlPv(i8* %327) #12
  br label %328

328:                                              ; preds = %312, %326
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %235, align 8
  %329 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %330 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %329, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %329, align 8
  %331 = icmp eq %"class.std::__1::vector.3"* %330, null
  br i1 %331, label %343, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %330, i64 0, i32 0, i32 0
  %334 = load i32*, i32** %333, align 8
  %335 = icmp eq i32* %334, null
  br i1 %335, label %341, label %336

336:                                              ; preds = %332
  %337 = ptrtoint i32* %334 to i64
  %338 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %330, i64 0, i32 0, i32 1
  %339 = bitcast i32** %338 to i64*
  store i64 %337, i64* %339, align 8
  %340 = bitcast i32* %334 to i8*
  call void @_ZdlPv(i8* %340) #12
  br label %341

341:                                              ; preds = %336, %332
  %342 = bitcast %"class.std::__1::vector.3"* %330 to i8*
  call void @_ZdlPv(i8* %342) #12
  br label %343

343:                                              ; preds = %328, %341
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %234) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %233) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #11
  %344 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %52, align 8
  %345 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %344, i64 0, i32 11
  %346 = load i32, i32* %345, align 8
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %373

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %344, i64 0, i32 4, i32 0, i32 0, i32 0
  %351 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %350, align 8
  %352 = call i8* @_Znwm(i64 104) #12
  %353 = bitcast i8* %352 to %"class.spvtools::opt::analysis::DefUseManager"*
  %354 = getelementptr inbounds i8, i8* %352, i64 32
  %355 = bitcast i8* %354 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %352, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %355, align 4
  %356 = getelementptr inbounds i8, i8* %352, i64 48
  %357 = getelementptr inbounds i8, i8* %352, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %356, i8 0, i64 16, i1 false) #11
  %358 = bitcast i8* %357 to i8**
  store i8* %356, i8** %358, align 8
  %359 = getelementptr inbounds i8, i8* %352, i64 64
  %360 = getelementptr inbounds i8, i8* %352, i64 96
  %361 = bitcast i8* %360 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %359, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %361, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %353, %"class.spvtools::opt::Module"* %351) #11
  %362 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %344, i64 0, i32 6
  %363 = ptrtoint i8* %352 to i64
  %364 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %362, i64 0, i32 0, i32 0, i32 0
  %365 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %364, align 8
  %366 = bitcast %"class.std::__1::unique_ptr.62"* %362 to i64*
  store i64 %363, i64* %366, align 8
  %367 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %365, null
  br i1 %367, label %370, label %368

368:                                              ; preds = %349
  %369 = bitcast %"class.std::__1::unique_ptr.62"* %362 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %369, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %365) #11
  br label %370

370:                                              ; preds = %368, %349
  %371 = load i32, i32* %345, align 8
  %372 = or i32 %371, 1
  store i32 %372, i32* %345, align 8
  br label %373

373:                                              ; preds = %343, %370
  %374 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %344, i64 0, i32 6, i32 0, i32 0, i32 0
  %375 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %374, align 8
  %376 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %229, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %375, %"class.spvtools::opt::Instruction"* %376) #11
  %377 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %52, align 8
  call void @_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::IRContext"* %377, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %8)
  %378 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %229, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %229, align 8
  %379 = icmp eq %"class.spvtools::opt::Instruction"* %378, null
  br i1 %379, label %385, label %380

380:                                              ; preds = %373
  %381 = bitcast %"class.spvtools::opt::Instruction"* %378 to void (%"class.spvtools::opt::Instruction"*)***
  %382 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %381, align 8
  %383 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %382, i64 1
  %384 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %383, align 8
  call void %384(%"class.spvtools::opt::Instruction"* nonnull %378) #11
  br label %385

385:                                              ; preds = %373, %380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #11
  br label %386

386:                                              ; preds = %221, %385
  %387 = bitcast %"class.std::__1::unique_ptr.40"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %387) #11
  %388 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %12, i64 0, i32 0, i32 0, i32 0
  %389 = bitcast %"class.std::__1::unique_ptr.40"* %12 to i64*
  store i64 0, i64* %389, align 8
  %390 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  %391 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %13 to i64*
  store i64 %392, i64* %393, align 8
  call void @_ZN8spvtools3opt14InstrumentPass15MovePreludeCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPNSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstrumentPass"* %390, %"class.spvtools::opt::InstructionList::iterator"* nonnull %13, %"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* %3, %"class.std::__1::unique_ptr.40"* nonnull %12) #11
  %394 = bitcast %"class.spvtools::opt::InstructionBuilder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %394) #11
  %395 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %14, i64 0, i32 1
  %396 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %14, i64 0, i32 3
  %397 = bitcast %"class.spvtools::opt::IRContext"** %52 to i64*
  %398 = bitcast %"class.spvtools::opt::InstructionBuilder"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %398, i8 -86, i64 32, i1 false)
  %399 = load i64, i64* %397, align 8
  %400 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %388, align 8
  %401 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %400, i64 0, i32 2, i32 0, i32 1
  %402 = ptrtoint %"class.spvtools::opt::Instruction"* %401 to i64
  %403 = bitcast %"class.spvtools::opt::InstructionBuilder"* %14 to i64*
  store i64 %399, i64* %403, align 8
  store %"class.spvtools::opt::BasicBlock"* %400, %"class.spvtools::opt::BasicBlock"** %395, align 8
  %404 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %14, i64 0, i32 2
  %405 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %404 to i64*
  store i64 %402, i64* %405, align 8
  store i32 3, i32* %396, align 8
  %406 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %5, i64 0, i32 0, i32 1
  %407 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %406, align 8
  %408 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %409 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %408, align 8
  %410 = icmp ult %"class.std::__1::unique_ptr.40"* %407, %409
  br i1 %410, label %411, label %417

411:                                              ; preds = %386
  %412 = ptrtoint %"class.spvtools::opt::BasicBlock"* %400 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %388, align 8
  %413 = bitcast %"class.std::__1::unique_ptr.40"* %407 to i64*
  store i64 %412, i64* %413, align 8
  %414 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %407, i64 1
  %415 = ptrtoint %"class.std::__1::unique_ptr.40"* %414 to i64
  %416 = bitcast %"class.std::__1::unique_ptr.40"** %406 to i64*
  store i64 %415, i64* %416, align 8
  br label %418

417:                                              ; preds = %386
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %5, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %12) #11
  br label %418

418:                                              ; preds = %411, %417
  %419 = load i8, i8* %27, align 4, !range !2
  %420 = icmp eq i8 %419, 0
  %421 = load i8, i8* %30, align 1, !range !2
  %422 = icmp eq i8 %421, 0
  %423 = select i1 %422, i32 1, i32 2
  %424 = xor i1 %422, true
  %425 = zext i1 %424 to i32
  %426 = select i1 %420, i32 %425, i32 %423
  %427 = add nuw nsw i32 %426, 1
  %428 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %16, i32 %427) #11
  %429 = call i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %390, i32 %428, %"class.spvtools::opt::InstructionBuilder"* nonnull %14) #11
  %430 = getelementptr inbounds %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis", %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* %7, i64 0, i32 5
  %431 = load i32, i32* %430, align 4
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %445

433:                                              ; preds = %418
  %434 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %14, i32 0, i1 zeroext false) #11
  %435 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %434, i64 0, i32 4
  %436 = load i8, i8* %435, align 1, !range !2
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %443, label %438

438:                                              ; preds = %433
  %439 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %434, i64 0, i32 3
  %440 = load i8, i8* %439, align 4, !range !2
  %441 = zext i8 %440 to i32
  %442 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %434, i32 %441) #11
  br label %443

443:                                              ; preds = %433, %438
  %444 = phi i32 [ %442, %438 ], [ 0, %433 ]
  store i32 %444, i32* %430, align 4
  br label %445

445:                                              ; preds = %443, %418
  %446 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %390) #11
  %447 = load i32, i32* %85, align 4
  %448 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* nonnull %14, i32 %446, i32 104, i32 %447)
  %449 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %448, i64 0, i32 4
  %450 = load i8, i8* %449, align 1, !range !2
  %451 = icmp eq i8 %450, 0
  br i1 %451, label %457, label %452

452:                                              ; preds = %445
  %453 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %448, i64 0, i32 3
  %454 = load i8, i8* %453, align 4, !range !2
  %455 = zext i8 %454 to i32
  %456 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %448, i32 %455) #11
  br label %457

457:                                              ; preds = %445, %452
  %458 = phi i32 [ %456, %452 ], [ 0, %445 ]
  %459 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetBoolIdEv(%"class.spvtools::opt::InstrumentPass"* %390) #11
  %460 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %14, i32 %459, i32 176, i32 %429, i32 %458)
  %461 = load i8, i8* %128, align 4, !range !2
  %462 = icmp eq i8 %461, 0
  %463 = load i8, i8* %131, align 1, !range !2
  %464 = icmp eq i8 %463, 0
  %465 = select i1 %464, i32 1, i32 2
  %466 = xor i1 %464, true
  %467 = zext i1 %466 to i32
  %468 = select i1 %462, i32 %467, i32 %465
  %469 = add nuw nsw i32 %468, 5
  %470 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %127, i32 %469) #11
  %471 = icmp eq i32 %470, 2
  %472 = select i1 %471, i32 7, i32 6
  %473 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %14, i32 %472, i1 zeroext false) #11
  %474 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %473, i64 0, i32 4
  %475 = load i8, i8* %474, align 1, !range !2
  %476 = icmp eq i8 %475, 0
  br i1 %476, label %482, label %477

477:                                              ; preds = %457
  %478 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %473, i64 0, i32 3
  %479 = load i8, i8* %478, align 4, !range !2
  %480 = zext i8 %479 to i32
  %481 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %473, i32 %480) #11
  br label %482

482:                                              ; preds = %457, %477
  %483 = phi i32 [ %481, %477 ], [ 0, %457 ]
  %484 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %460, i64 0, i32 4
  %485 = load i8, i8* %484, align 1, !range !2
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %492, label %487

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %460, i64 0, i32 3
  %489 = load i8, i8* %488, align 4, !range !2
  %490 = zext i8 %489 to i32
  %491 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %460, i32 %490) #11
  br label %492

492:                                              ; preds = %482, %487
  %493 = phi i32 [ %491, %487 ], [ 0, %482 ]
  call void @_ZN8spvtools3opt21InstBindlessCheckPass12GenCheckCodeEjjjjjPNS1_11RefAnalysisEPNSt3__16vectorINS4_10unique_ptrINS0_10BasicBlockENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"* %0, i32 %493, i32 %483, i32 %429, i32 %458, i32 %4, %"struct.spvtools::opt::InstBindlessCheckPass::RefAnalysis"* nonnull %7, %"class.std::__1::vector.38"* %5)
  %494 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %406, align 8
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %494, i64 -1, i32 0, i32 0, i32 0
  %496 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %495, align 8
  call void @_ZN8spvtools3opt14InstrumentPass16MovePostludeCodeENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPS3_(%"class.spvtools::opt::InstrumentPass"* %390, %"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* %3, %"class.spvtools::opt::BasicBlock"* %496) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %394) #11
  %497 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %388, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %388, align 8
  %498 = icmp eq %"class.spvtools::opt::BasicBlock"* %497, null
  br i1 %498, label %501, label %499

499:                                              ; preds = %492
  %500 = bitcast %"class.std::__1::unique_ptr.40"* %12 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %500, %"class.spvtools::opt::BasicBlock"* nonnull %497) #11
  br label %501

501:                                              ; preds = %492, %499
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %387) #11
  br label %502

502:                                              ; preds = %501, %124, %141, %153, %165, %48
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #11
  br label %503

503:                                              ; preds = %44, %502
  ret void
}

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 1, i32 2
  %12 = xor i1 %10, true
  %13 = zext i1 %12 to i32
  %14 = select i1 %7, i32 %13, i32 %11
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 %14) #11
  tail call void @_ZN8spvtools3opt9IRContext27AddCombinatorsForCapabilityEj(%"class.spvtools::opt::IRContext"* %0, i32 %15) #11
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %16, align 8
  %18 = icmp eq %"class.spvtools::opt::FeatureManager"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %2
  %20 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 4
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 1, i32 2
  %28 = xor i1 %26, true
  %29 = zext i1 %28 to i32
  %30 = select i1 %23, i32 %29, i32 %27
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %20, i32 %30) #11
  tail call void @_ZN8spvtools3opt14FeatureManager13AddCapabilityE14SpvCapability_(%"class.spvtools::opt::FeatureManager"* nonnull %17, i32 %31) #11
  br label %32

32:                                               ; preds = %2, %19
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %38, align 8
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %39, %"class.spvtools::opt::Instruction"* %40) #11
  br label %41

41:                                               ; preds = %32, %37
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %42, align 8
  %44 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %3, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 3, i32 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 1
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::Instruction"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 2
  %51 = bitcast %"class.spvtools::opt::Instruction"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 0, i32 2
  %54 = bitcast %"class.spvtools::opt::Instruction"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %50 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %58 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %57, align 8
  %59 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %58, i64 0, i32 1
  %60 = bitcast %"class.spvtools::opt::Instruction"** %59 to i64*
  store i64 %56, i64* %60, align 8
  %61 = bitcast %"class.spvtools::opt::Instruction"** %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #11
  br label %62

62:                                               ; preds = %41, %49
  store %"class.spvtools::opt::Instruction"* %45, %"class.spvtools::opt::Instruction"** %46, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 3, i32 0, i32 1, i32 0, i32 2
  %64 = bitcast %"class.spvtools::opt::Instruction"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 2
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %65, i64* %67, align 8
  store %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::Instruction"** %63, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %66 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %69 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %69, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::Instruction"** %70, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt21InstBindlessCheckPass27InitializeInstBindlessCheckEv(%"class.spvtools::opt::InstBindlessCheckPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple.1052", align 8
  %3 = alloca %"class.std::__1::tuple.1002", align 1
  %4 = alloca %"class.std::__1::tuple.1052", align 8
  %5 = alloca %"class.std::__1::tuple.1002", align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  tail call void @_ZN8spvtools3opt14InstrumentPass20InitializeInstrumentEv(%"class.spvtools::opt::InstrumentPass"* %8) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 4
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %123, label %20

20:                                               ; preds = %16, %12, %1
  %21 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %24, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %26 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %24, i64 0, i32 13, i32 0, i32 1
  %27 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %28 to %"class.spvtools::opt::Instruction"*
  %30 = icmp eq %"class.spvtools::opt::Instruction"* %26, %29
  br i1 %30, label %123, label %31

31:                                               ; preds = %20
  %32 = bitcast i32* %7 to i8*
  %33 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 7, i32 0
  %34 = bitcast %"class.std::__1::tuple.1052"* %4 to i8*
  %35 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %4, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %5, i64 0, i32 0
  %37 = bitcast i32* %6 to i8*
  %38 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 6, i32 0
  %39 = bitcast %"class.std::__1::tuple.1052"* %2 to i8*
  %40 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::tuple.1002", %"class.std::__1::tuple.1002"* %3, i64 0, i32 0
  br label %42

42:                                               ; preds = %31, %116
  %43 = phi %"class.spvtools::opt::Instruction"* [ %29, %31 ], [ %121, %116 ]
  %44 = phi i64 [ %28, %31 ], [ %120, %116 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 71
  br i1 %47, label %48, label %116

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 3
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 4
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %54, i32 1, i32 2
  %56 = xor i1 %54, true
  %57 = zext i1 %56 to i32
  %58 = select i1 %51, i32 %57, i32 %55
  %59 = add nuw nsw i32 %58, 1
  %60 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %59) #11
  %61 = icmp eq i32 %60, 34
  %62 = load i8, i8* %49, align 4, !range !2
  %63 = icmp eq i8 %62, 0
  %64 = load i8, i8* %52, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = select i1 %65, i32 1, i32 2
  %67 = xor i1 %65, true
  %68 = zext i1 %67 to i32
  %69 = select i1 %63, i32 %68, i32 %66
  br i1 %61, label %70, label %87

70:                                               ; preds = %48
  %71 = add nuw nsw i32 %69, 2
  %72 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %71) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #11
  %73 = load i8, i8* %49, align 4, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = load i8, i8* %52, align 1, !range !2
  %76 = icmp eq i8 %75, 0
  %77 = select i1 %76, i32 1, i32 2
  %78 = xor i1 %76, true
  %79 = zext i1 %78 to i32
  %80 = select i1 %74, i32 %79, i32 %77
  %81 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %80) #11
  store i32 %81, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  store i32* %6, i32** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #11
  %82 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %38, i32* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %3) #11
  %83 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %82, 0
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %83, i64 2
  %85 = bitcast %"struct.std::__1::__hash_node_base.254"* %84 to %"struct.std::__1::pair.1028"*
  %86 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %85, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  store i32 %72, i32* %86, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #11
  br label %116

87:                                               ; preds = %48
  %88 = add nuw nsw i32 %69, 1
  %89 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %88) #11
  %90 = icmp eq i32 %89, 33
  br i1 %90, label %91, label %116

91:                                               ; preds = %87
  %92 = load i8, i8* %49, align 4, !range !2
  %93 = icmp eq i8 %92, 0
  %94 = load i8, i8* %52, align 1, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = select i1 %95, i32 1, i32 2
  %97 = xor i1 %95, true
  %98 = zext i1 %97 to i32
  %99 = select i1 %93, i32 %98, i32 %96
  %100 = add nuw nsw i32 %99, 2
  %101 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %100) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #11
  %102 = load i8, i8* %49, align 4, !range !2
  %103 = icmp eq i8 %102, 0
  %104 = load i8, i8* %52, align 1, !range !2
  %105 = icmp eq i8 %104, 0
  %106 = select i1 %105, i32 1, i32 2
  %107 = xor i1 %105, true
  %108 = zext i1 %107 to i32
  %109 = select i1 %103, i32 %108, i32 %106
  %110 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %109) #11
  store i32 %110, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  store i32* %7, i32** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #11
  %111 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %33, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1052"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1002"* nonnull dereferenceable(1) %5) #11
  %112 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %111, 0
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %112, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %113 to %"struct.std::__1::pair.1028"*
  %115 = getelementptr inbounds %"struct.std::__1::pair.1028", %"struct.std::__1::pair.1028"* %114, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  store i32 %101, i32* %115, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #11
  br label %116

116:                                              ; preds = %70, %91, %87, %42
  %117 = inttoptr i64 %44 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %118 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %117, i64 0, i32 1
  %119 = bitcast %"class.spvtools::opt::Instruction"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = inttoptr i64 %120 to %"class.spvtools::opt::Instruction"*
  %122 = icmp eq %"class.spvtools::opt::Instruction"* %26, %121
  br i1 %122, label %123, label %42

123:                                              ; preds = %116, %20, %16
  ret void
}

declare void @_ZN8spvtools3opt14InstrumentPass20InitializeInstrumentEv(%"class.spvtools::opt::InstrumentPass"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass11ProcessImplEv(%"class.spvtools::opt::InstBindlessCheckPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.949", align 8
  %3 = bitcast %"class.std::__1::function.949"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %2, i64 0, i32 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %2, i64 0, i32 0, i32 2
  %7 = ptrtoint %"class.spvtools::opt::InstBindlessCheckPass"* %0 to i64
  %8 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.spvtools::opt::UptrVectorIterator"*, i32, %"class.std::__1::vector.38"*)* @"_ZNSt3__110__function16__policy_invokerIFvN8spvtools3opt15InstructionList8iteratorENS3_18UptrVectorIteratorINS3_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS_9allocatorISD_EEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass11ProcessImplEvE3$_6SI_EEEEvPKNS0_16__policy_storageEOS5_OS8_jSH_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.spvtools::opt::UptrVectorIterator"*, i32, %"class.std::__1::vector.38"*)** %5, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass11ProcessImplEvE3$_6FvNS5_15InstructionList8iteratorENS5_18UptrVectorIteratorINS5_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrISB_NS_14default_deleteISB_EEEENS_9allocatorISH_EEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %6, align 8
  %10 = bitcast %"class.std::__1::function.949"* %2 to i64*
  store i64 %7, i64* %10, align 8
  %11 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  %12 = call zeroext i1 @_ZN8spvtools3opt14InstrumentPass29InstProcessEntryPointCallTreeERNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS2_6vectorINS2_10unique_ptrIS7_NS2_14default_deleteIS7_EEEENS2_9allocatorISD_EEEEEEE(%"class.spvtools::opt::InstrumentPass"* %11, %"class.std::__1::function.949"* nonnull dereferenceable(32) %2) #11
  %13 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %16, %1
  %21 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %2, i64 0, i32 0, i32 1
  %22 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  %23 = bitcast %"struct.std::__1::__function::__policy_invoker.953"* %21 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.spvtools::opt::UptrVectorIterator"*, i32, %"class.std::__1::vector.38"*)* @"_ZNSt3__110__function16__policy_invokerIFvN8spvtools3opt15InstructionList8iteratorENS3_18UptrVectorIteratorINS3_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS_9allocatorISD_EEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass11ProcessImplEvE3$_7SI_EEEEvPKNS0_16__policy_storageEOS5_OS8_jSH_" to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass11ProcessImplEvE3$_7FvNS5_15InstructionList8iteratorENS5_18UptrVectorIteratorINS5_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrISB_NS_14default_deleteISB_EEEENS_9allocatorISH_EEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" to i64)>, <2 x i64>* %23, align 8
  %24 = load i8*, i8** %4, align 8
  store i64 %7, i64* %10, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %22, i64 0, i32 1
  %26 = load void (i8*)*, void (i8*)** %25, align 8
  %27 = icmp eq void (i8*)* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void %26(i8* %24) #11
  br label %29

29:                                               ; preds = %20, %28
  %30 = call zeroext i1 @_ZN8spvtools3opt14InstrumentPass29InstProcessEntryPointCallTreeERNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS2_6vectorINS2_10unique_ptrIS7_NS2_14default_deleteIS7_EEEENS2_9allocatorISD_EEEEEEE(%"class.spvtools::opt::InstrumentPass"* %11, %"class.std::__1::function.949"* nonnull dereferenceable(32) %2) #11
  %31 = or i1 %12, %30
  br label %32

32:                                               ; preds = %16, %29
  %33 = phi i1 [ %31, %29 ], [ %12, %16 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 4
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::function.949", %"class.std::__1::function.949"* %2, i64 0, i32 0, i32 1
  %39 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  %40 = bitcast %"struct.std::__1::__function::__policy_invoker.953"* %38 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.spvtools::opt::UptrVectorIterator"*, i32, %"class.std::__1::vector.38"*)* @"_ZNSt3__110__function16__policy_invokerIFvN8spvtools3opt15InstructionList8iteratorENS3_18UptrVectorIteratorINS3_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS_9allocatorISD_EEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass11ProcessImplEvE3$_8SI_EEEEvPKNS0_16__policy_storageEOS5_OS8_jSH_" to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt21InstBindlessCheckPass11ProcessImplEvE3$_8FvNS5_15InstructionList8iteratorENS5_18UptrVectorIteratorINS5_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrISB_NS_14default_deleteISB_EEEENS_9allocatorISH_EEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" to i64)>, <2 x i64>* %40, align 8
  %41 = load i8*, i8** %4, align 8
  store i64 %7, i64* %10, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %39, i64 0, i32 1
  %43 = load void (i8*)*, void (i8*)** %42, align 8
  %44 = icmp eq void (i8*)* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %37
  call void %43(i8* %41) #11
  br label %46

46:                                               ; preds = %37, %45
  %47 = call zeroext i1 @_ZN8spvtools3opt14InstrumentPass29InstProcessEntryPointCallTreeERNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS2_6vectorINS2_10unique_ptrIS7_NS2_14default_deleteIS7_EEEENS2_9allocatorISD_EEEEEEE(%"class.spvtools::opt::InstrumentPass"* %11, %"class.std::__1::function.949"* nonnull dereferenceable(32) %2) #11
  %48 = or i1 %33, %47
  br label %49

49:                                               ; preds = %32, %46
  %50 = phi i1 [ %48, %46 ], [ %33, %32 ]
  %51 = select i1 %50, i32 16, i32 17
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %6, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %49
  %57 = load i8*, i8** %4, align 8
  call void %54(i8* %57) #11
  br label %58

58:                                               ; preds = %49, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #11
  ret i32 %51
}

declare zeroext i1 @_ZN8spvtools3opt14InstrumentPass29InstProcessEntryPointCallTreeERNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS2_6vectorINS2_10unique_ptrIS7_NS2_14default_deleteIS7_EEEENS2_9allocatorISD_EEEEEEE(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::function.949"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21InstBindlessCheckPass7ProcessEv(%"class.spvtools::opt::InstBindlessCheckPass"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt21InstBindlessCheckPass27InitializeInstBindlessCheckEv(%"class.spvtools::opt::InstBindlessCheckPass"* %0)
  %2 = tail call i32 @_ZN8spvtools3opt21InstBindlessCheckPass11ProcessImplEv(%"class.spvtools::opt::InstBindlessCheckPass"* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt21InstBindlessCheckPassD2Ev(%"class.spvtools::opt::InstBindlessCheckPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt21InstBindlessCheckPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.254"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.254"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.254"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::InstBindlessCheckPass", %"class.spvtools::opt::InstBindlessCheckPass"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.254"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.254"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %28, %32
  %35 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to %"class.spvtools::opt::InstrumentPass"*
  tail call void @_ZN8spvtools3opt14InstrumentPassD2Ev(%"class.spvtools::opt::InstrumentPass"* %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt21InstBindlessCheckPassD0Ev(%"class.spvtools::opt::InstBindlessCheckPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt21InstBindlessCheckPassD2Ev(%"class.spvtools::opt::InstBindlessCheckPass"* %0) #11
  %2 = bitcast %"class.spvtools::opt::InstBindlessCheckPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt21InstBindlessCheckPass4nameEv(%"class.spvtools::opt::InstBindlessCheckPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt14InstrumentPass20GetPreservedAnalysesEv(%"class.spvtools::opt::InstrumentPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 20621
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.463"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 32, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 %7, i8* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = trunc i32 %17 to i16
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5
  %22 = tail call i8* @_Znwm(i64 240) #12
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %23, %"class.std::__1::function"* dereferenceable(32) %21, %"class.spvtools::opt::IRContext"* %15) #11
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.480"* %25 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %27) #11
  %31 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %27 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %20
  %33 = load i32, i32* %16, align 8
  %34 = or i32 %33, 32768
  store i32 %34, i32* %16, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %36, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %39 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %37, %"class.spvtools::opt::analysis::Type"* nonnull %38) #11
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = trunc i32 %42 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 5
  %47 = call i8* @_Znwm(i64 240) #12
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %40) #11
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #11
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %41, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %41, align 8
  br label %60

60:                                               ; preds = %35, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %39) #11
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 16384
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %60
  %70 = call i8* @_Znwm(i64 136) #12
  %71 = bitcast i8* %70 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %71, %"class.spvtools::opt::IRContext"* %64) #11
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.400"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %75) #11
  %79 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %75 to i8*
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %78, %69
  %81 = load i32, i32* %65, align 8
  %82 = or i32 %81, 16384
  store i32 %82, i32* %65, align 8
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %84, align 8
  %86 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = call i8* @_Znwm(i64 4) #12
  %88 = bitcast i8* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %87, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 4
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = bitcast i32** %89 to i64*
  store i32 %1, i32* %88, align 4
  %95 = ptrtoint i8* %91 to i64
  store i64 %95, i64* %94, align 8
  %96 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %85, %"class.spvtools::opt::analysis::Type"* %63, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #11
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %83
  %101 = ptrtoint i32* %98 to i64
  store i64 %101, i64* %94, align 8
  %102 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %83, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 16384
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %103
  %110 = call i8* @_Znwm(i64 136) #12
  %111 = bitcast i8* %110 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %111, %"class.spvtools::opt::IRContext"* %104) #11
  %112 = ptrtoint i8* %110 to i64
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.400"* %113 to i64*
  store i64 %112, i64* %116, align 8
  %117 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %115) #11
  %119 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %115 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %118, %109
  %121 = load i32, i32* %105, align 8
  %122 = or i32 %121, 16384
  store i32 %122, i32* %105, align 8
  br label %123

123:                                              ; preds = %103, %120
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %124, align 8
  %126 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %125, %"class.spvtools::opt::analysis::Constant"* %96, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %9, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %127, align 8
  %129 = icmp eq %"class.std::__1::vector.3"* %128, null
  br i1 %129, label %153, label %130

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.3"* %128 to i8*
  %132 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, %128
  br i1 %134, label %151, label %135

135:                                              ; preds = %130, %146
  %136 = phi %"class.std::__1::vector.3"* [ %137, %146 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %135
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %141, %135
  %147 = icmp eq %"class.std::__1::vector.3"* %137, %128
  br i1 %147, label %148, label %135

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector.463"* %9 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %130
  %152 = phi i8* [ %150, %148 ], [ %131, %130 ]
  store %"class.std::__1::vector.3"* %128, %"class.std::__1::vector.3"** %132, align 8
  call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %123, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret %"class.spvtools::opt::Instruction"* %126
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.983"**
  %34 = load %"class.std::__1::__tree_node.983"*, %"class.std::__1::__tree_node.983"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.983"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.983"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.983"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.983"* %1 to %"class.std::__1::__tree_node.983"**
  %6 = load %"class.std::__1::__tree_node.983"*, %"class.std::__1::__tree_node.983"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.983"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.983", %"class.std::__1::__tree_node.983"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.983"**
  %9 = load %"class.std::__1::__tree_node.983"*, %"class.std::__1::__tree_node.983"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.983"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.983"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1002"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !4
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !4
  %75 = load i64, i64* %74, align 8, !noalias !4
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !4
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !4
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !4
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !4
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !7

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #11
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %10, align 8
  %11 = tail call i8* @_Znwm(i64 112) #12
  %12 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %15) #11
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  store i32 39, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 2
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %54 = call i8* @_Znwm(i64 96) #12
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 96
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"struct.spvtools::opt::Operand"** %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = bitcast i8* %54 to i32*
  %61 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds i8, i8* %54, i64 8
  %64 = bitcast i8* %63 to %"class.spvtools::utils::SmallVector"*
  %65 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %66 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %54, i64 16
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %54, i64 24
  %70 = getelementptr inbounds i8, i8* %54, i64 32
  %71 = bitcast i8* %69 to i8**
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds i8, i8* %54, i64 40
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %64, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %65) #11
  %75 = getelementptr inbounds i8, i8* %54, i64 48
  %76 = bitcast i8* %75 to i32*
  %77 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds i8, i8* %54, i64 56
  %80 = bitcast i8* %79 to %"class.spvtools::utils::SmallVector"*
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %82 = bitcast i8* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %54, i64 64
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %54, i64 72
  %86 = getelementptr inbounds i8, i8* %54, i64 80
  %87 = bitcast i8* %85 to i8**
  store i8* %86, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %54, i64 88
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %80, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %81) #11
  %91 = getelementptr inbounds i8, i8* %54, i64 96
  %92 = bitcast i8* %11 to %"class.spvtools::opt::Instruction"*
  %93 = bitcast %"struct.spvtools::opt::Operand"** %55 to i64*
  %94 = ptrtoint i8* %91 to i64
  store i64 %94, i64* %93, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %92, %"class.spvtools::opt::IRContext"* %13, i32 247, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #11
  %95 = ptrtoint i8* %11 to i64
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %98 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %97, align 8
  %99 = icmp eq %"struct.spvtools::opt::Operand"* %98, null
  br i1 %99, label %128, label %100

100:                                              ; preds = %3
  %101 = bitcast %"struct.spvtools::opt::Operand"* %98 to i8*
  %102 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %55, align 8
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %102, %98
  br i1 %103, label %126, label %104

104:                                              ; preds = %100, %122
  %105 = phi %"struct.spvtools::opt::Operand"* [ %106, %122 ], [ %102, %100 ]
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %120, %104
  %123 = icmp eq %"struct.spvtools::opt::Operand"* %106, %98
  br i1 %123, label %124, label %104

124:                                              ; preds = %122
  %125 = load i8*, i8** %56, align 8
  br label %126

126:                                              ; preds = %124, %100
  %127 = phi i8* [ %125, %124 ], [ %101, %100 ]
  store %"struct.spvtools::opt::Operand"* %98, %"struct.spvtools::opt::Operand"** %55, align 8
  call void @_ZdlPv(i8* %127) #12
  br label %128

128:                                              ; preds = %3, %126
  %129 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %130 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %130, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %130, align 8
  %132 = icmp eq %"class.std::__1::vector.3"* %131, null
  br i1 %132, label %144, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = ptrtoint i32* %135 to i64
  %139 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 1
  %140 = bitcast i32** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %137, %133
  %143 = bitcast %"class.std::__1::vector.3"* %131 to i8*
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %128, %142
  %145 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %146, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %146, align 8
  %148 = icmp eq %"class.std::__1::vector.3"* %147, null
  br i1 %148, label %196, label %185

149:                                              ; preds = %196
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint i32* %151 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 1
  %156 = bitcast i32** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast i32* %151 to i8*
  call void @_ZdlPv(i8* %157) #12
  br label %158

158:                                              ; preds = %153, %149
  %159 = bitcast %"class.std::__1::vector.3"* %198 to i8*
  call void @_ZdlPv(i8* %159) #12
  br label %160

160:                                              ; preds = %196, %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %161, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %161, align 8
  %163 = icmp eq %"class.std::__1::vector.3"* %162, null
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = icmp eq i32* %166, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %164
  %169 = ptrtoint i32* %166 to i64
  %170 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 1
  %171 = bitcast i32** %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = bitcast i32* %166 to i8*
  call void @_ZdlPv(i8* %172) #12
  br label %173

173:                                              ; preds = %168, %164
  %174 = bitcast %"class.std::__1::vector.3"* %162 to i8*
  call void @_ZdlPv(i8* %174) #12
  br label %175

175:                                              ; preds = %160, %173
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %176 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4)
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %10, align 8
  %178 = icmp eq %"class.spvtools::opt::Instruction"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = bitcast %"class.spvtools::opt::Instruction"* %177 to void (%"class.spvtools::opt::Instruction"*)***
  %181 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %181, i64 1
  %183 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %182, align 8
  call void %183(%"class.spvtools::opt::Instruction"* nonnull %177) #11
  br label %184

184:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret %"class.spvtools::opt::Instruction"* %176

185:                                              ; preds = %144
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = icmp eq i32* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = ptrtoint i32* %187 to i64
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 1
  %192 = bitcast i32** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast i32* %187 to i8*
  call void @_ZdlPv(i8* %193) #12
  br label %194

194:                                              ; preds = %189, %185
  %195 = bitcast %"class.std::__1::vector.3"* %147 to i8*
  call void @_ZdlPv(i8* %195) #12
  br label %196

196:                                              ; preds = %194, %144
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %198 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %197, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %197, align 8
  %199 = icmp eq %"class.std::__1::vector.3"* %198, null
  br i1 %199, label %160, label %149
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.3"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::unique_ptr.21", align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %5
  %21 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  %22 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  %30 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %26 to i32*
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %37 = bitcast i32** %35 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.0"* %38 to i64*
  %40 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %105, %5
  %45 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %46, align 8
  %47 = call i8* @_Znwm(i64 112) #12
  %48 = bitcast i8* %47 to %"class.spvtools::opt::Instruction"*
  %49 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %49, align 8
  %51 = icmp eq i32 %4, 0
  br i1 %51, label %112, label %129

52:                                               ; preds = %20, %105
  %53 = phi i64 [ %18, %20 ], [ %108, %105 ]
  %54 = phi i64 [ 0, %20 ], [ %106, %105 ]
  %55 = inttoptr i64 %53 to i32*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #11
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  %57 = load i32, i32* %56, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  store i64 0, i64* %29, align 8
  store i64 1, i64* %24, align 8
  store i32 %57, i32* %30, align 8
  store i32 1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  store i64 0, i64* %34, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %36, %"struct.std::__1::aligned_storage<4, 4>::type"** %37, align 8
  store i64 0, i64* %39, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %32, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %59 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %61 = icmp ult %"struct.spvtools::opt::Operand"* %59, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 0
  %64 = load i32, i32* %31, align 8
  store i32 %64, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 1
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %32) #11
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 1
  %75 = ptrtoint %"struct.spvtools::opt::Operand"* %74 to i64
  store i64 %75, i64* %40, align 8
  br label %77

76:                                               ; preds = %52
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #11
  br label %77

77:                                               ; preds = %62, %76
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %78 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %42, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %42, align 8
  %79 = icmp eq %"class.std::__1::vector.3"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32* %82 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i32* %82 to i8*
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %84, %80
  %90 = bitcast %"class.std::__1::vector.3"* %78 to i8*
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %77, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %43, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %43, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %91, %103
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #11
  %106 = add nuw i64 %54, 1
  %107 = load i64, i64* %15, align 8
  %108 = load i64, i64* %17, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %106, %110
  br i1 %111, label %52, label %44

112:                                              ; preds = %44
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %113, align 8
  %115 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %114) #11
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 2
  %119 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %119, i64 0, i32 2
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37, i1 false) #11
  %125 = getelementptr inbounds i8, i8* %124, i64 37
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 1, i32 0
  %127 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 0
  call void %127(%"union.std::__1::__function::__policy_storage"* %128, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.6, i8* nonnull %124) #11
  call void @_ZdlPv(i8* nonnull %124) #12
  br label %129

129:                                              ; preds = %123, %117, %112, %44
  %130 = phi i32 [ %4, %44 ], [ %115, %112 ], [ 0, %117 ], [ 0, %123 ]
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %48, %"class.spvtools::opt::IRContext"* %50, i32 %2, i32 %1, i32 %130, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %131 = ptrtoint i8* %47 to i64
  %132 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i64*
  store i64 %131, i64* %132, align 8
  %133 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %9)
  %134 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %46, align 8
  %135 = icmp eq %"class.spvtools::opt::Instruction"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %129
  %137 = bitcast %"class.spvtools::opt::Instruction"* %134 to void (%"class.spvtools::opt::Instruction"*)***
  %138 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %138, i64 1
  %140 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %139, align 8
  call void %140(%"class.spvtools::opt::Instruction"* nonnull %134) #11
  br label %141

141:                                              ; preds = %129, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %173, label %144

144:                                              ; preds = %141
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %171, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #12
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = bitcast %"class.std::__1::vector"* %6 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %144
  %172 = phi i8* [ %170, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %12, align 8
  call void @_ZdlPv(i8* %172) #12
  br label %173

173:                                              ; preds = %141, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret %"class.spvtools::opt::Instruction"* %133
}

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node.1025"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1025"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1025"* %1 to %"class.std::__1::__tree_node.1025"**
  %6 = load %"class.std::__1::__tree_node.1025"*, %"class.std::__1::__tree_node.1025"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1025"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1025", %"class.std::__1::__tree_node.1025"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1025"**
  %9 = load %"class.std::__1::__tree_node.1025"*, %"class.std::__1::__tree_node.1025"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1025"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1025"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt9IRContext27AddCombinatorsForCapabilityEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt14FeatureManager13AddCapabilityE14SpvCapability_(%"class.spvtools::opt::FeatureManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt14InstrumentPassD2Ev(%"class.spvtools::opt::InstrumentPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt14InstrumentPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 30, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.915"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.std::__1::__hash_node_base.915"* [ %9, %19 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 2
  %11 = bitcast %"struct.std::__1::__hash_node_base.915"* %10 to i32**
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 3
  %17 = bitcast %"struct.std::__1::__hash_node_base.915"* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %14, %6
  %20 = bitcast %"struct.std::__1::__hash_node_base.915"* %7 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %9, null
  br i1 %21, label %22, label %6

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"** %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.std::__1::__hash_node_base.915"** %24 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 29, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.254"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %28, %32
  %33 = phi %"struct.std::__1::__hash_node_base.254"* [ %35, %32 ], [ %30, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %34, align 8
  %36 = bitcast %"struct.std::__1::__hash_node_base.254"* %33 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  %37 = icmp eq %"struct.std::__1::__hash_node_base.254"* %35, null
  br i1 %37, label %38, label %32

38:                                               ; preds = %32, %28
  %39 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %39, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.254"** %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = bitcast %"struct.std::__1::__hash_node_base.254"** %40 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %38, %42
  %45 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 28, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %44, %48
  %49 = phi %"struct.std::__1::__hash_node_base"* [ %51, %48 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, align 8
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i8*
  tail call void @_ZdlPv(i8* %52) #12
  %53 = icmp eq %"struct.std::__1::__hash_node_base"* %51, null
  br i1 %53, label %54, label %48

54:                                               ; preds = %48, %44
  %55 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %55, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"** %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast %"struct.std::__1::__hash_node_base"** %56 to i8*
  tail call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %54, %58
  %61 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.254"* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %60, %64
  %65 = phi %"struct.std::__1::__hash_node_base.254"* [ %67, %64 ], [ %62, %60 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %65, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %66, align 8
  %68 = bitcast %"struct.std::__1::__hash_node_base.254"* %65 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  %69 = icmp eq %"struct.std::__1::__hash_node_base.254"* %67, null
  br i1 %69, label %70, label %64

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %71, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.254"** %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = bitcast %"struct.std::__1::__hash_node_base.254"** %72 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %70, %74
  %77 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.254"* %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %76, %80
  %81 = phi %"struct.std::__1::__hash_node_base.254"* [ %83, %80 ], [ %78, %76 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %81, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #12
  %85 = icmp eq %"struct.std::__1::__hash_node_base.254"* %83, null
  br i1 %85, label %86, label %80

86:                                               ; preds = %80, %76
  %87 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %87, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base.254"** %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  %91 = bitcast %"struct.std::__1::__hash_node_base.254"** %88 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %86, %90
  %93 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.254"* %94, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %92, %96
  %97 = phi %"struct.std::__1::__hash_node_base.254"* [ %99, %96 ], [ %94, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %97, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %98, align 8
  %100 = bitcast %"struct.std::__1::__hash_node_base.254"* %97 to i8*
  tail call void @_ZdlPv(i8* %100) #12
  %101 = icmp eq %"struct.std::__1::__hash_node_base.254"* %99, null
  br i1 %101, label %102, label %96

102:                                              ; preds = %96, %92
  %103 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %103, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.254"** %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = bitcast %"struct.std::__1::__hash_node_base.254"** %104 to i8*
  tail call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %102, %106
  %109 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.333"* %110, null
  br i1 %111, label %118, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"struct.std::__1::__hash_node_base.333"* [ %115, %112 ], [ %110, %108 ]
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %113, i64 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %114, align 8
  %116 = bitcast %"struct.std::__1::__hash_node_base.333"* %113 to i8*
  tail call void @_ZdlPv(i8* %116) #12
  %117 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %117, label %118, label %112

118:                                              ; preds = %112, %108
  %119 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %119, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.333"** %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast %"struct.std::__1::__hash_node_base.333"** %120 to i8*
  tail call void @_ZdlPv(i8* %123) #12
  br label %124

124:                                              ; preds = %118, %122
  %125 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.206"* %126, null
  br i1 %127, label %134, label %128

128:                                              ; preds = %124, %128
  %129 = phi %"struct.std::__1::__hash_node_base.206"* [ %131, %128 ], [ %126, %124 ]
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %129, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %130, align 8
  %132 = bitcast %"struct.std::__1::__hash_node_base.206"* %129 to i8*
  tail call void @_ZdlPv(i8* %132) #12
  %133 = icmp eq %"struct.std::__1::__hash_node_base.206"* %131, null
  br i1 %133, label %134, label %128

134:                                              ; preds = %128, %124
  %135 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.206"** null, %"struct.std::__1::__hash_node_base.206"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.206"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.206"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %141 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %142 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %141, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %142, i64 0, i32 1
  %144 = load void (i8*)*, void (i8*)** %143, align 8
  %145 = icmp eq void (i8*)* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  tail call void %144(i8* %148) #11
  br label %149

149:                                              ; preds = %140, %146
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt14InstrumentPassD0Ev(%"class.spvtools::opt::InstrumentPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1042"* dereferenceable(8), %"class.std::__1::tuple.1002"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !9
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1042", %"class.std::__1::tuple.1042"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !9
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !9
  store i32 %62, i32* %61, align 4, !noalias !9
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !9
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !9
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !9
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.250"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.254"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !12

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.254"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.254"* %36, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.254"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.254"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.254"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.254"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.254"* %82, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.254"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.254"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.254"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.254"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.254"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.254"* %80, %"struct.std::__1::__hash_node_base.254"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.254"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.254"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.254"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1052"* dereferenceable(8), %"class.std::__1::tuple.1002"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !13
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1052", %"class.std::__1::tuple.1052"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !13
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !13
  store i32 %62, i32* %61, align 4, !noalias !13
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !13
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !13
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !13
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPS4_PNSB_11RefAnalysisEE3$_0S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::opt::Instruction"* nocapture readnone dereferenceable(112)) #10 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass26AnalyzeDescriptorReferenceEPS4_PNSB_11RefAnalysisEE3$_1S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::opt::Instruction"* nocapture readnone dereferenceable(112)) #10 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass10FindStrideEjjE3$_2S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %8, i32 1, i32 2
  %10 = xor i1 %8, true
  %11 = zext i1 %10 to i32
  %12 = select i1 %5, i32 %11, i32 %9
  %13 = add nuw nsw i32 %12, 2
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %13) #11
  %15 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %16 = load i32*, i32** %15, align 8
  store i32 %14, i32* %16, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass14GenLastByteIdxEPNSB_11RefAnalysisEPNS3_18InstructionBuilderEE3$_3S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %8, i32 1, i32 2
  %10 = xor i1 %8, true
  %11 = zext i1 %10 to i32
  %12 = select i1 %5, i32 %11, i32 %9
  %13 = add nuw nsw i32 %12, 1
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %13) #11
  %15 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %16 = load i32*, i32** %15, align 8
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %19, label %33

19:                                               ; preds = %2
  %20 = load i8, i8* %3, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = load i8, i8* %6, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 1, i32 2
  %25 = xor i1 %23, true
  %26 = zext i1 %25 to i32
  %27 = select i1 %21, i32 %26, i32 %24
  %28 = add nuw nsw i32 %27, 3
  %29 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %28) #11
  %30 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %31 = bitcast [8 x i8]* %30 to i32**
  %32 = load i32*, i32** %31, align 8
  store i32 %29, i32* %32, align 4
  br label %33

33:                                               ; preds = %2, %19
  %34 = phi i1 [ true, %19 ], [ false, %2 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass14GenLastByteIdxEPNSB_11RefAnalysisEPNS3_18InstructionBuilderEE3$_4S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %8, i32 1, i32 2
  %10 = xor i1 %8, true
  %11 = zext i1 %10 to i32
  %12 = select i1 %5, i32 %11, i32 %9
  %13 = add nuw nsw i32 %12, 1
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %13) #11
  %15 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %16 = load i32*, i32** %15, align 8
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %19, label %33

19:                                               ; preds = %2
  %20 = load i8, i8* %3, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = load i8, i8* %6, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 1, i32 2
  %25 = xor i1 %23, true
  %26 = zext i1 %25 to i32
  %27 = select i1 %21, i32 %26, i32 %24
  %28 = add nuw nsw i32 %27, 3
  %29 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %28) #11
  %30 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %31 = bitcast [8 x i8]* %30 to i32**
  %32 = load i32*, i32** %31, align 8
  store i32 %29, i32* %32, align 4
  br label %33

33:                                               ; preds = %2, %19
  %34 = phi i1 [ true, %19 ], [ false, %2 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass14GenLastByteIdxEPNSB_11RefAnalysisEPNS3_18InstructionBuilderEE3$_5S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %8, i32 1, i32 2
  %10 = xor i1 %8, true
  %11 = zext i1 %10 to i32
  %12 = select i1 %5, i32 %11, i32 %9
  %13 = add nuw nsw i32 %12, 1
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %13) #11
  %15 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %16 = load i32*, i32** %15, align 8
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %21 = bitcast [8 x i8]* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  store i8 1, i8* %22, align 1
  br label %23

23:                                               ; preds = %2, %19
  %24 = phi i1 [ true, %19 ], [ false, %2 ]
  ret i1 %24
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.40"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.40"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.40"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.40"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.40"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.40"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.40"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::BasicBlock"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.40"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.40"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !16

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.40"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.40"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.40"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.40"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.40"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.40"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.40"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.40"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.40"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.40"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.40"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.40"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.40"*
  %138 = icmp eq %"class.std::__1::unique_ptr.40"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.40"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::BasicBlock"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.std::__1::unique_ptr.40"* %141 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %146, %"class.spvtools::opt::BasicBlock"* nonnull %143) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.40"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #11
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #11
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #11
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvN8spvtools3opt15InstructionList8iteratorENS3_18UptrVectorIteratorINS3_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS_9allocatorISD_EEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass11ProcessImplEvE3$_6SI_EEEEvPKNS0_16__policy_storageEOS5_OS8_jSH_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly dereferenceable(8), %"class.spvtools::opt::UptrVectorIterator"* nocapture readonly dereferenceable(16), i32, %"class.std::__1::vector.38"*) #0 align 2 {
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %2, i64 0, i32 0
  %10 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %2, i64 0, i32 1, i32 0
  %12 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %11, align 8
  %13 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::InstBindlessCheckPass"**
  %15 = load %"class.spvtools::opt::InstBindlessCheckPass"*, %"class.spvtools::opt::InstBindlessCheckPass"** %14, align 8
  %16 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i64*
  store i64 %8, i64* %16, align 8
  call void @_ZN8spvtools3opt21InstBindlessCheckPass19GenDescIdxCheckCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNSt3__16vectorINS7_10unique_ptrIS5_NS7_14default_deleteIS5_EEEENS7_9allocatorISC_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"* %15, %"class.spvtools::opt::InstructionList::iterator"* nonnull %6, %"class.std::__1::vector.38"* %10, %"class.std::__1::unique_ptr.40"* %12, i32 %3, %"class.std::__1::vector.38"* %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvN8spvtools3opt15InstructionList8iteratorENS3_18UptrVectorIteratorINS3_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS_9allocatorISD_EEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass11ProcessImplEvE3$_7SI_EEEEvPKNS0_16__policy_storageEOS5_OS8_jSH_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly dereferenceable(8), %"class.spvtools::opt::UptrVectorIterator"* nocapture readonly dereferenceable(16), i32, %"class.std::__1::vector.38"*) #0 align 2 {
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %2, i64 0, i32 0
  %10 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %2, i64 0, i32 1, i32 0
  %12 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %11, align 8
  %13 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::InstBindlessCheckPass"**
  %15 = load %"class.spvtools::opt::InstBindlessCheckPass"*, %"class.spvtools::opt::InstBindlessCheckPass"** %14, align 8
  %16 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i64*
  store i64 %8, i64* %16, align 8
  call void @_ZN8spvtools3opt21InstBindlessCheckPass20GenDescInitCheckCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNSt3__16vectorINS7_10unique_ptrIS5_NS7_14default_deleteIS5_EEEENS7_9allocatorISC_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"* %15, %"class.spvtools::opt::InstructionList::iterator"* nonnull %6, %"class.std::__1::vector.38"* %10, %"class.std::__1::unique_ptr.40"* %12, i32 %3, %"class.std::__1::vector.38"* %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvN8spvtools3opt15InstructionList8iteratorENS3_18UptrVectorIteratorINS3_10BasicBlockELb0EEEjPNS_6vectorINS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS_9allocatorISD_EEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_21InstBindlessCheckPass11ProcessImplEvE3$_8SI_EEEEvPKNS0_16__policy_storageEOS5_OS8_jSH_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly dereferenceable(8), %"class.spvtools::opt::UptrVectorIterator"* nocapture readonly dereferenceable(16), i32, %"class.std::__1::vector.38"*) #0 align 2 {
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %2, i64 0, i32 0
  %10 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %2, i64 0, i32 1, i32 0
  %12 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %11, align 8
  %13 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::InstBindlessCheckPass"**
  %15 = load %"class.spvtools::opt::InstBindlessCheckPass"*, %"class.spvtools::opt::InstBindlessCheckPass"** %14, align 8
  %16 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i64*
  store i64 %8, i64* %16, align 8
  call void @_ZN8spvtools3opt21InstBindlessCheckPass19GenTexBuffCheckCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNSt3__16vectorINS7_10unique_ptrIS5_NS7_14default_deleteIS5_EEEENS7_9allocatorISC_EEEE(%"class.spvtools::opt::InstBindlessCheckPass"* %15, %"class.spvtools::opt::InstructionList::iterator"* nonnull %6, %"class.std::__1::vector.38"* %10, %"class.std::__1::unique_ptr.40"* %12, i32 %3, %"class.std::__1::vector.38"* %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!16 = distinct !{!16, !8}
